

Microchip MPLAB XC8 Assembler V2.32 build 20210201212658 
                                                                                               Sun Dec 19 16:05:43 2021

Microchip MPLAB XC8 C Compiler v2.32 (Free license) build 20210201212658 Og1 
     1                           	processor	16F1938
     2                           	pagewidth 120
     3                           	opt	flic
     4                           	psect	idataBANK2,global,class=CODE,delta=2,noexec
     5                           	psect	stringtext1,global,class=STRCODE,delta=2,noexec
     6                           	psect	stringtext2,global,class=STRCODE,delta=2,noexec
     7                           	psect	stringtext3,global,class=STRCODE,delta=2,noexec
     8                           	psect	stringtext4,global,class=STRCODE,delta=2,noexec
     9                           	psect	stringtext5,global,class=STRCODE,delta=2,noexec
    10                           	psect	stringtext6,global,class=STRCODE,delta=2,noexec
    11                           	psect	stringtext7,global,class=STRCODE,delta=2,noexec
    12                           	psect	stringtext8,global,class=STRCODE,delta=2,noexec
    13                           	psect	stringtext9,global,class=STRCODE,delta=2,noexec
    14                           	psect	stringtext10,global,class=STRCODE,delta=2,noexec
    15                           	psect	cinit,global,class=CODE,merge=1,delta=2
    16                           	psect	bssBANK2,global,class=BANK2,space=1,delta=1,noexec
    17                           	psect	dataBANK2,global,class=BANK2,space=1,delta=1,noexec
    18                           	psect	bssBANK3,global,class=BANK3,space=1,delta=1,noexec
    19                           	psect	inittext,global,class=CODE,delta=2
    20                           	psect	clrtext,global,class=CODE,delta=2
    21                           	psect	cstackBANK1,global,class=BANK1,space=1,delta=1,noexec
    22                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1,noexec
    23                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,noexec
    24                           	psect	maintext,global,class=CODE,merge=1,split=1,delta=2
    25                           	psect	text1,local,class=CODE,merge=1,delta=2
    26                           	psect	text2,local,class=CODE,merge=1,delta=2
    27                           	psect	text3,local,class=CODE,merge=1,delta=2,group=3
    28                           	psect	text4,local,class=CODE,merge=1,delta=2,group=1
    29                           	psect	text5,local,class=CODE,merge=1,delta=2,group=1
    30                           	psect	text6,local,class=CODE,merge=1,delta=2,group=1
    31                           	psect	text7,local,class=CODE,merge=1,delta=2,group=2
    32                           	psect	text8,local,class=CODE,merge=1,delta=2,group=2
    33                           	psect	text9,local,class=CODE,merge=1,delta=2,group=3
    34                           	psect	text10,local,class=CODE,merge=1,delta=2,group=1
    35                           	psect	text11,local,class=CODE,merge=1,delta=2,group=1
    36                           	psect	text12,local,class=CODE,merge=1,delta=2,group=3
    37                           	psect	text13,local,class=CODE,merge=1,delta=2,group=3
    38                           	psect	text14,local,class=CODE,merge=1,delta=2,group=3
    39                           	psect	text15,local,class=CODE,merge=1,delta=2,group=3
    40                           	psect	text16,local,class=CODE,merge=1,delta=2,group=3
    41                           	psect	text17,local,class=CODE,merge=1,delta=2,group=2
    42                           	psect	text18,local,class=CODE,merge=1,delta=2,group=2
    43                           	psect	text19,local,class=CODE,merge=1,delta=2
    44                           	psect	text20,local,class=CODE,merge=1,delta=2
    45                           	psect	text21,local,class=CODE,merge=1,delta=2
    46                           	psect	text22,local,class=CODE,merge=1,delta=2
    47                           	psect	text23,local,class=CODE,merge=1,delta=2
    48                           	psect	text24,local,class=CODE,merge=1,delta=2
    49                           	psect	text25,local,class=CODE,merge=1,delta=2
    50                           	psect	text26,local,class=CODE,merge=1,delta=2
    51                           	psect	text27,local,class=CODE,merge=1,delta=2
    52                           	psect	text28,local,class=CODE,merge=1,delta=2
    53                           	psect	text29,local,class=CODE,merge=1,delta=2
    54                           	psect	text30,local,class=CODE,merge=1,delta=2
    55                           	psect	text31,local,class=CODE,merge=1,delta=2
    56                           	psect	text32,local,class=CODE,merge=1,delta=2
    57                           	psect	text33,local,class=CODE,merge=1,delta=2
    58                           	psect	text34,local,class=CODE,merge=1,delta=2
    59                           	psect	text35,local,class=CODE,merge=1,delta=2
    60                           	psect	text36,local,class=CODE,merge=1,delta=2
    61                           	psect	text37,local,class=CODE,merge=1,delta=2
    62                           	psect	text38,local,class=CODE,merge=1,delta=2
    63                           	psect	text39,local,class=CODE,merge=1,delta=2
    64                           	psect	text40,local,class=CODE,merge=1,delta=2
    65                           	psect	text41,local,class=CODE,merge=1,delta=2
    66                           	psect	text42,local,class=CODE,merge=1,delta=2
    67                           	psect	text43,local,class=CODE,merge=1,delta=2
    68                           	psect	text44,local,class=CODE,merge=1,delta=2
    69                           	psect	text45,local,class=CODE,merge=1,delta=2
    70                           	psect	text46,local,class=CODE,merge=1,delta=2
    71                           	psect	text47,local,class=CODE,merge=1,delta=2
    72                           	psect	text48,local,class=CODE,merge=1,delta=2,group=2
    73                           	psect	text49,local,class=CODE,merge=1,delta=2,group=2
    74                           	psect	text50,local,class=CODE,merge=1,delta=2
    75                           	psect	text51,local,class=CODE,merge=1,delta=2
    76                           	psect	text52,local,class=CODE,merge=1,delta=2,group=2
    77                           	psect	text53,local,class=CODE,merge=1,delta=2,group=2
    78                           	psect	text54,local,class=CODE,merge=1,delta=2,group=2
    79                           	psect	text55,local,class=CODE,merge=1,delta=2
    80                           	psect	text56,local,class=CODE,merge=1,delta=2
    81                           	psect	text57,local,class=CODE,merge=1,delta=2
    82                           	psect	text58,local,class=CODE,merge=1,delta=2
    83                           	psect	text59,local,class=CODE,merge=1,delta=2,group=2
    84                           	psect	text60,local,class=CODE,merge=1,delta=2,group=2
    85                           	psect	text61,local,class=CODE,merge=1,delta=2,group=2
    86                           	psect	text62,local,class=CODE,merge=1,delta=2
    87                           	psect	text63,local,class=CODE,merge=1,delta=2
    88                           	psect	text64,local,class=CODE,merge=1,delta=2
    89                           	psect	text65,local,class=CODE,merge=1,delta=2
    90                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=2,noexec
    91                           	dabs	1,0x7E,2
    92  0000                     
    93                           ; Version 2.32
    94                           ; Generated 02/02/2021 GMT
    95                           ; 
    96                           ; Copyright Â© 2021, Microchip Technology Inc. and its subsidiaries ("Microchip")
    97                           ; All rights reserved.
    98                           ; 
    99                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
   100                           ; 
   101                           ; Redistribution and use in source and binary forms, with or without modification, are
   102                           ; permitted provided that the following conditions are met:
   103                           ; 
   104                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
   105                           ;        conditions and the following disclaimer.
   106                           ; 
   107                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
   108                           ;        of conditions and the following disclaimer in the documentation and/or other
   109                           ;        materials provided with the distribution. Publication is not required when
   110                           ;        this file is used in an embedded application.
   111                           ; 
   112                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
   113                           ;        software without specific prior written permission.
   114                           ; 
   115                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
   116                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
   117                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
   118                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
   119                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
   120                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
   121                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
   122                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
   123                           ; 
   124                           ; 
   125                           ; Code-generator required, PIC16F1938 Definitions
   126                           ; 
   127                           ; SFR Addresses
   128  0000                     	;# 
   129  0001                     	;# 
   130  0002                     	;# 
   131  0003                     	;# 
   132  0004                     	;# 
   133  0005                     	;# 
   134  0006                     	;# 
   135  0007                     	;# 
   136  0008                     	;# 
   137  0009                     	;# 
   138  000A                     	;# 
   139  000B                     	;# 
   140  000C                     	;# 
   141  000D                     	;# 
   142  000E                     	;# 
   143  0010                     	;# 
   144  0011                     	;# 
   145  0012                     	;# 
   146  0013                     	;# 
   147  0015                     	;# 
   148  0016                     	;# 
   149  0016                     	;# 
   150  0017                     	;# 
   151  0018                     	;# 
   152  0019                     	;# 
   153  001A                     	;# 
   154  001B                     	;# 
   155  001C                     	;# 
   156  001E                     	;# 
   157  001F                     	;# 
   158  008C                     	;# 
   159  008D                     	;# 
   160  008E                     	;# 
   161  0090                     	;# 
   162  0091                     	;# 
   163  0092                     	;# 
   164  0093                     	;# 
   165  0095                     	;# 
   166  0096                     	;# 
   167  0097                     	;# 
   168  0098                     	;# 
   169  0099                     	;# 
   170  009A                     	;# 
   171  009B                     	;# 
   172  009B                     	;# 
   173  009C                     	;# 
   174  009D                     	;# 
   175  009E                     	;# 
   176  010C                     	;# 
   177  010D                     	;# 
   178  010E                     	;# 
   179  0110                     	;# 
   180  0111                     	;# 
   181  0112                     	;# 
   182  0113                     	;# 
   183  0114                     	;# 
   184  0115                     	;# 
   185  0116                     	;# 
   186  0117                     	;# 
   187  0118                     	;# 
   188  0119                     	;# 
   189  011A                     	;# 
   190  011B                     	;# 
   191  011D                     	;# 
   192  018C                     	;# 
   193  018D                     	;# 
   194  0191                     	;# 
   195  0191                     	;# 
   196  0192                     	;# 
   197  0193                     	;# 
   198  0193                     	;# 
   199  0193                     	;# 
   200  0194                     	;# 
   201  0195                     	;# 
   202  0196                     	;# 
   203  0199                     	;# 
   204  019A                     	;# 
   205  019B                     	;# 
   206  019B                     	;# 
   207  019B                     	;# 
   208  019B                     	;# 
   209  019C                     	;# 
   210  019C                     	;# 
   211  019D                     	;# 
   212  019E                     	;# 
   213  019F                     	;# 
   214  020D                     	;# 
   215  0210                     	;# 
   216  0211                     	;# 
   217  0212                     	;# 
   218  0213                     	;# 
   219  0214                     	;# 
   220  0215                     	;# 
   221  0215                     	;# 
   222  0216                     	;# 
   223  0217                     	;# 
   224  0291                     	;# 
   225  0291                     	;# 
   226  0292                     	;# 
   227  0293                     	;# 
   228  0294                     	;# 
   229  0295                     	;# 
   230  0295                     	;# 
   231  0296                     	;# 
   232  0298                     	;# 
   233  0298                     	;# 
   234  0299                     	;# 
   235  029A                     	;# 
   236  029B                     	;# 
   237  029C                     	;# 
   238  029C                     	;# 
   239  029D                     	;# 
   240  029E                     	;# 
   241  029F                     	;# 
   242  0311                     	;# 
   243  0311                     	;# 
   244  0312                     	;# 
   245  0313                     	;# 
   246  0314                     	;# 
   247  0315                     	;# 
   248  0315                     	;# 
   249  0316                     	;# 
   250  0318                     	;# 
   251  0318                     	;# 
   252  0319                     	;# 
   253  031A                     	;# 
   254  031C                     	;# 
   255  031C                     	;# 
   256  031D                     	;# 
   257  031E                     	;# 
   258  0394                     	;# 
   259  0395                     	;# 
   260  0396                     	;# 
   261  0415                     	;# 
   262  0416                     	;# 
   263  0417                     	;# 
   264  041C                     	;# 
   265  041D                     	;# 
   266  041E                     	;# 
   267  0791                     	;# 
   268  0792                     	;# 
   269  0793                     	;# 
   270  0794                     	;# 
   271  0795                     	;# 
   272  0798                     	;# 
   273  0799                     	;# 
   274  07A0                     	;# 
   275  07A1                     	;# 
   276  07A3                     	;# 
   277  07A4                     	;# 
   278  07A6                     	;# 
   279  07A7                     	;# 
   280  07A9                     	;# 
   281  07AA                     	;# 
   282  0FE4                     	;# 
   283  0FE5                     	;# 
   284  0FE6                     	;# 
   285  0FE7                     	;# 
   286  0FE8                     	;# 
   287  0FE9                     	;# 
   288  0FEA                     	;# 
   289  0FEB                     	;# 
   290  0FED                     	;# 
   291  0FEE                     	;# 
   292  0FEF                     	;# 
   293  0000                     	;# 
   294  0001                     	;# 
   295  0002                     	;# 
   296  0003                     	;# 
   297  0004                     	;# 
   298  0005                     	;# 
   299  0006                     	;# 
   300  0007                     	;# 
   301  0008                     	;# 
   302  0009                     	;# 
   303  000A                     	;# 
   304  000B                     	;# 
   305  000C                     	;# 
   306  000D                     	;# 
   307  000E                     	;# 
   308  0010                     	;# 
   309  0011                     	;# 
   310  0012                     	;# 
   311  0013                     	;# 
   312  0015                     	;# 
   313  0016                     	;# 
   314  0016                     	;# 
   315  0017                     	;# 
   316  0018                     	;# 
   317  0019                     	;# 
   318  001A                     	;# 
   319  001B                     	;# 
   320  001C                     	;# 
   321  001E                     	;# 
   322  001F                     	;# 
   323  008C                     	;# 
   324  008D                     	;# 
   325  008E                     	;# 
   326  0090                     	;# 
   327  0091                     	;# 
   328  0092                     	;# 
   329  0093                     	;# 
   330  0095                     	;# 
   331  0096                     	;# 
   332  0097                     	;# 
   333  0098                     	;# 
   334  0099                     	;# 
   335  009A                     	;# 
   336  009B                     	;# 
   337  009B                     	;# 
   338  009C                     	;# 
   339  009D                     	;# 
   340  009E                     	;# 
   341  010C                     	;# 
   342  010D                     	;# 
   343  010E                     	;# 
   344  0110                     	;# 
   345  0111                     	;# 
   346  0112                     	;# 
   347  0113                     	;# 
   348  0114                     	;# 
   349  0115                     	;# 
   350  0116                     	;# 
   351  0117                     	;# 
   352  0118                     	;# 
   353  0119                     	;# 
   354  011A                     	;# 
   355  011B                     	;# 
   356  011D                     	;# 
   357  018C                     	;# 
   358  018D                     	;# 
   359  0191                     	;# 
   360  0191                     	;# 
   361  0192                     	;# 
   362  0193                     	;# 
   363  0193                     	;# 
   364  0193                     	;# 
   365  0194                     	;# 
   366  0195                     	;# 
   367  0196                     	;# 
   368  0199                     	;# 
   369  019A                     	;# 
   370  019B                     	;# 
   371  019B                     	;# 
   372  019B                     	;# 
   373  019B                     	;# 
   374  019C                     	;# 
   375  019C                     	;# 
   376  019D                     	;# 
   377  019E                     	;# 
   378  019F                     	;# 
   379  020D                     	;# 
   380  0210                     	;# 
   381  0211                     	;# 
   382  0212                     	;# 
   383  0213                     	;# 
   384  0214                     	;# 
   385  0215                     	;# 
   386  0215                     	;# 
   387  0216                     	;# 
   388  0217                     	;# 
   389  0291                     	;# 
   390  0291                     	;# 
   391  0292                     	;# 
   392  0293                     	;# 
   393  0294                     	;# 
   394  0295                     	;# 
   395  0295                     	;# 
   396  0296                     	;# 
   397  0298                     	;# 
   398  0298                     	;# 
   399  0299                     	;# 
   400  029A                     	;# 
   401  029B                     	;# 
   402  029C                     	;# 
   403  029C                     	;# 
   404  029D                     	;# 
   405  029E                     	;# 
   406  029F                     	;# 
   407  0311                     	;# 
   408  0311                     	;# 
   409  0312                     	;# 
   410  0313                     	;# 
   411  0314                     	;# 
   412  0315                     	;# 
   413  0315                     	;# 
   414  0316                     	;# 
   415  0318                     	;# 
   416  0318                     	;# 
   417  0319                     	;# 
   418  031A                     	;# 
   419  031C                     	;# 
   420  031C                     	;# 
   421  031D                     	;# 
   422  031E                     	;# 
   423  0394                     	;# 
   424  0395                     	;# 
   425  0396                     	;# 
   426  0415                     	;# 
   427  0416                     	;# 
   428  0417                     	;# 
   429  041C                     	;# 
   430  041D                     	;# 
   431  041E                     	;# 
   432  0791                     	;# 
   433  0792                     	;# 
   434  0793                     	;# 
   435  0794                     	;# 
   436  0795                     	;# 
   437  0798                     	;# 
   438  0799                     	;# 
   439  07A0                     	;# 
   440  07A1                     	;# 
   441  07A3                     	;# 
   442  07A4                     	;# 
   443  07A6                     	;# 
   444  07A7                     	;# 
   445  07A9                     	;# 
   446  07AA                     	;# 
   447  0FE4                     	;# 
   448  0FE5                     	;# 
   449  0FE6                     	;# 
   450  0FE7                     	;# 
   451  0FE8                     	;# 
   452  0FE9                     	;# 
   453  0FEA                     	;# 
   454  0FEB                     	;# 
   455  0FED                     	;# 
   456  0FEE                     	;# 
   457  0FEF                     	;# 
   458  0000                     	;# 
   459  0001                     	;# 
   460  0002                     	;# 
   461  0003                     	;# 
   462  0004                     	;# 
   463  0005                     	;# 
   464  0006                     	;# 
   465  0007                     	;# 
   466  0008                     	;# 
   467  0009                     	;# 
   468  000A                     	;# 
   469  000B                     	;# 
   470  000C                     	;# 
   471  000D                     	;# 
   472  000E                     	;# 
   473  0010                     	;# 
   474  0011                     	;# 
   475  0012                     	;# 
   476  0013                     	;# 
   477  0015                     	;# 
   478  0016                     	;# 
   479  0016                     	;# 
   480  0017                     	;# 
   481  0018                     	;# 
   482  0019                     	;# 
   483  001A                     	;# 
   484  001B                     	;# 
   485  001C                     	;# 
   486  001E                     	;# 
   487  001F                     	;# 
   488  008C                     	;# 
   489  008D                     	;# 
   490  008E                     	;# 
   491  0090                     	;# 
   492  0091                     	;# 
   493  0092                     	;# 
   494  0093                     	;# 
   495  0095                     	;# 
   496  0096                     	;# 
   497  0097                     	;# 
   498  0098                     	;# 
   499  0099                     	;# 
   500  009A                     	;# 
   501  009B                     	;# 
   502  009B                     	;# 
   503  009C                     	;# 
   504  009D                     	;# 
   505  009E                     	;# 
   506  010C                     	;# 
   507  010D                     	;# 
   508  010E                     	;# 
   509  0110                     	;# 
   510  0111                     	;# 
   511  0112                     	;# 
   512  0113                     	;# 
   513  0114                     	;# 
   514  0115                     	;# 
   515  0116                     	;# 
   516  0117                     	;# 
   517  0118                     	;# 
   518  0119                     	;# 
   519  011A                     	;# 
   520  011B                     	;# 
   521  011D                     	;# 
   522  018C                     	;# 
   523  018D                     	;# 
   524  0191                     	;# 
   525  0191                     	;# 
   526  0192                     	;# 
   527  0193                     	;# 
   528  0193                     	;# 
   529  0193                     	;# 
   530  0194                     	;# 
   531  0195                     	;# 
   532  0196                     	;# 
   533  0199                     	;# 
   534  019A                     	;# 
   535  019B                     	;# 
   536  019B                     	;# 
   537  019B                     	;# 
   538  019B                     	;# 
   539  019C                     	;# 
   540  019C                     	;# 
   541  019D                     	;# 
   542  019E                     	;# 
   543  019F                     	;# 
   544  020D                     	;# 
   545  0210                     	;# 
   546  0211                     	;# 
   547  0212                     	;# 
   548  0213                     	;# 
   549  0214                     	;# 
   550  0215                     	;# 
   551  0215                     	;# 
   552  0216                     	;# 
   553  0217                     	;# 
   554  0291                     	;# 
   555  0291                     	;# 
   556  0292                     	;# 
   557  0293                     	;# 
   558  0294                     	;# 
   559  0295                     	;# 
   560  0295                     	;# 
   561  0296                     	;# 
   562  0298                     	;# 
   563  0298                     	;# 
   564  0299                     	;# 
   565  029A                     	;# 
   566  029B                     	;# 
   567  029C                     	;# 
   568  029C                     	;# 
   569  029D                     	;# 
   570  029E                     	;# 
   571  029F                     	;# 
   572  0311                     	;# 
   573  0311                     	;# 
   574  0312                     	;# 
   575  0313                     	;# 
   576  0314                     	;# 
   577  0315                     	;# 
   578  0315                     	;# 
   579  0316                     	;# 
   580  0318                     	;# 
   581  0318                     	;# 
   582  0319                     	;# 
   583  031A                     	;# 
   584  031C                     	;# 
   585  031C                     	;# 
   586  031D                     	;# 
   587  031E                     	;# 
   588  0394                     	;# 
   589  0395                     	;# 
   590  0396                     	;# 
   591  0415                     	;# 
   592  0416                     	;# 
   593  0417                     	;# 
   594  041C                     	;# 
   595  041D                     	;# 
   596  041E                     	;# 
   597  0791                     	;# 
   598  0792                     	;# 
   599  0793                     	;# 
   600  0794                     	;# 
   601  0795                     	;# 
   602  0798                     	;# 
   603  0799                     	;# 
   604  07A0                     	;# 
   605  07A1                     	;# 
   606  07A3                     	;# 
   607  07A4                     	;# 
   608  07A6                     	;# 
   609  07A7                     	;# 
   610  07A9                     	;# 
   611  07AA                     	;# 
   612  0FE4                     	;# 
   613  0FE5                     	;# 
   614  0FE6                     	;# 
   615  0FE7                     	;# 
   616  0FE8                     	;# 
   617  0FE9                     	;# 
   618  0FEA                     	;# 
   619  0FEB                     	;# 
   620  0FED                     	;# 
   621  0FEE                     	;# 
   622  0FEF                     	;# 
   623  0000                     	;# 
   624  0001                     	;# 
   625  0002                     	;# 
   626  0003                     	;# 
   627  0004                     	;# 
   628  0005                     	;# 
   629  0006                     	;# 
   630  0007                     	;# 
   631  0008                     	;# 
   632  0009                     	;# 
   633  000A                     	;# 
   634  000B                     	;# 
   635  000C                     	;# 
   636  000D                     	;# 
   637  000E                     	;# 
   638  0010                     	;# 
   639  0011                     	;# 
   640  0012                     	;# 
   641  0013                     	;# 
   642  0015                     	;# 
   643  0016                     	;# 
   644  0016                     	;# 
   645  0017                     	;# 
   646  0018                     	;# 
   647  0019                     	;# 
   648  001A                     	;# 
   649  001B                     	;# 
   650  001C                     	;# 
   651  001E                     	;# 
   652  001F                     	;# 
   653  008C                     	;# 
   654  008D                     	;# 
   655  008E                     	;# 
   656  0090                     	;# 
   657  0091                     	;# 
   658  0092                     	;# 
   659  0093                     	;# 
   660  0095                     	;# 
   661  0096                     	;# 
   662  0097                     	;# 
   663  0098                     	;# 
   664  0099                     	;# 
   665  009A                     	;# 
   666  009B                     	;# 
   667  009B                     	;# 
   668  009C                     	;# 
   669  009D                     	;# 
   670  009E                     	;# 
   671  010C                     	;# 
   672  010D                     	;# 
   673  010E                     	;# 
   674  0110                     	;# 
   675  0111                     	;# 
   676  0112                     	;# 
   677  0113                     	;# 
   678  0114                     	;# 
   679  0115                     	;# 
   680  0116                     	;# 
   681  0117                     	;# 
   682  0118                     	;# 
   683  0119                     	;# 
   684  011A                     	;# 
   685  011B                     	;# 
   686  011D                     	;# 
   687  018C                     	;# 
   688  018D                     	;# 
   689  0191                     	;# 
   690  0191                     	;# 
   691  0192                     	;# 
   692  0193                     	;# 
   693  0193                     	;# 
   694  0193                     	;# 
   695  0194                     	;# 
   696  0195                     	;# 
   697  0196                     	;# 
   698  0199                     	;# 
   699  019A                     	;# 
   700  019B                     	;# 
   701  019B                     	;# 
   702  019B                     	;# 
   703  019B                     	;# 
   704  019C                     	;# 
   705  019C                     	;# 
   706  019D                     	;# 
   707  019E                     	;# 
   708  019F                     	;# 
   709  020D                     	;# 
   710  0210                     	;# 
   711  0211                     	;# 
   712  0212                     	;# 
   713  0213                     	;# 
   714  0214                     	;# 
   715  0215                     	;# 
   716  0215                     	;# 
   717  0216                     	;# 
   718  0217                     	;# 
   719  0291                     	;# 
   720  0291                     	;# 
   721  0292                     	;# 
   722  0293                     	;# 
   723  0294                     	;# 
   724  0295                     	;# 
   725  0295                     	;# 
   726  0296                     	;# 
   727  0298                     	;# 
   728  0298                     	;# 
   729  0299                     	;# 
   730  029A                     	;# 
   731  029B                     	;# 
   732  029C                     	;# 
   733  029C                     	;# 
   734  029D                     	;# 
   735  029E                     	;# 
   736  029F                     	;# 
   737  0311                     	;# 
   738  0311                     	;# 
   739  0312                     	;# 
   740  0313                     	;# 
   741  0314                     	;# 
   742  0315                     	;# 
   743  0315                     	;# 
   744  0316                     	;# 
   745  0318                     	;# 
   746  0318                     	;# 
   747  0319                     	;# 
   748  031A                     	;# 
   749  031C                     	;# 
   750  031C                     	;# 
   751  031D                     	;# 
   752  031E                     	;# 
   753  0394                     	;# 
   754  0395                     	;# 
   755  0396                     	;# 
   756  0415                     	;# 
   757  0416                     	;# 
   758  0417                     	;# 
   759  041C                     	;# 
   760  041D                     	;# 
   761  041E                     	;# 
   762  0791                     	;# 
   763  0792                     	;# 
   764  0793                     	;# 
   765  0794                     	;# 
   766  0795                     	;# 
   767  0798                     	;# 
   768  0799                     	;# 
   769  07A0                     	;# 
   770  07A1                     	;# 
   771  07A3                     	;# 
   772  07A4                     	;# 
   773  07A6                     	;# 
   774  07A7                     	;# 
   775  07A9                     	;# 
   776  07AA                     	;# 
   777  0FE4                     	;# 
   778  0FE5                     	;# 
   779  0FE6                     	;# 
   780  0FE7                     	;# 
   781  0FE8                     	;# 
   782  0FE9                     	;# 
   783  0FEA                     	;# 
   784  0FEB                     	;# 
   785  0FED                     	;# 
   786  0FEE                     	;# 
   787  0FEF                     	;# 
   788  0000                     	;# 
   789  0001                     	;# 
   790  0002                     	;# 
   791  0003                     	;# 
   792  0004                     	;# 
   793  0005                     	;# 
   794  0006                     	;# 
   795  0007                     	;# 
   796  0008                     	;# 
   797  0009                     	;# 
   798  000A                     	;# 
   799  000B                     	;# 
   800  000C                     	;# 
   801  000D                     	;# 
   802  000E                     	;# 
   803  0010                     	;# 
   804  0011                     	;# 
   805  0012                     	;# 
   806  0013                     	;# 
   807  0015                     	;# 
   808  0016                     	;# 
   809  0016                     	;# 
   810  0017                     	;# 
   811  0018                     	;# 
   812  0019                     	;# 
   813  001A                     	;# 
   814  001B                     	;# 
   815  001C                     	;# 
   816  001E                     	;# 
   817  001F                     	;# 
   818  008C                     	;# 
   819  008D                     	;# 
   820  008E                     	;# 
   821  0090                     	;# 
   822  0091                     	;# 
   823  0092                     	;# 
   824  0093                     	;# 
   825  0095                     	;# 
   826  0096                     	;# 
   827  0097                     	;# 
   828  0098                     	;# 
   829  0099                     	;# 
   830  009A                     	;# 
   831  009B                     	;# 
   832  009B                     	;# 
   833  009C                     	;# 
   834  009D                     	;# 
   835  009E                     	;# 
   836  010C                     	;# 
   837  010D                     	;# 
   838  010E                     	;# 
   839  0110                     	;# 
   840  0111                     	;# 
   841  0112                     	;# 
   842  0113                     	;# 
   843  0114                     	;# 
   844  0115                     	;# 
   845  0116                     	;# 
   846  0117                     	;# 
   847  0118                     	;# 
   848  0119                     	;# 
   849  011A                     	;# 
   850  011B                     	;# 
   851  011D                     	;# 
   852  018C                     	;# 
   853  018D                     	;# 
   854  0191                     	;# 
   855  0191                     	;# 
   856  0192                     	;# 
   857  0193                     	;# 
   858  0193                     	;# 
   859  0193                     	;# 
   860  0194                     	;# 
   861  0195                     	;# 
   862  0196                     	;# 
   863  0199                     	;# 
   864  019A                     	;# 
   865  019B                     	;# 
   866  019B                     	;# 
   867  019B                     	;# 
   868  019B                     	;# 
   869  019C                     	;# 
   870  019C                     	;# 
   871  019D                     	;# 
   872  019E                     	;# 
   873  019F                     	;# 
   874  020D                     	;# 
   875  0210                     	;# 
   876  0211                     	;# 
   877  0212                     	;# 
   878  0213                     	;# 
   879  0214                     	;# 
   880  0215                     	;# 
   881  0215                     	;# 
   882  0216                     	;# 
   883  0217                     	;# 
   884  0291                     	;# 
   885  0291                     	;# 
   886  0292                     	;# 
   887  0293                     	;# 
   888  0294                     	;# 
   889  0295                     	;# 
   890  0295                     	;# 
   891  0296                     	;# 
   892  0298                     	;# 
   893  0298                     	;# 
   894  0299                     	;# 
   895  029A                     	;# 
   896  029B                     	;# 
   897  029C                     	;# 
   898  029C                     	;# 
   899  029D                     	;# 
   900  029E                     	;# 
   901  029F                     	;# 
   902  0311                     	;# 
   903  0311                     	;# 
   904  0312                     	;# 
   905  0313                     	;# 
   906  0314                     	;# 
   907  0315                     	;# 
   908  0315                     	;# 
   909  0316                     	;# 
   910  0318                     	;# 
   911  0318                     	;# 
   912  0319                     	;# 
   913  031A                     	;# 
   914  031C                     	;# 
   915  031C                     	;# 
   916  031D                     	;# 
   917  031E                     	;# 
   918  0394                     	;# 
   919  0395                     	;# 
   920  0396                     	;# 
   921  0415                     	;# 
   922  0416                     	;# 
   923  0417                     	;# 
   924  041C                     	;# 
   925  041D                     	;# 
   926  041E                     	;# 
   927  0791                     	;# 
   928  0792                     	;# 
   929  0793                     	;# 
   930  0794                     	;# 
   931  0795                     	;# 
   932  0798                     	;# 
   933  0799                     	;# 
   934  07A0                     	;# 
   935  07A1                     	;# 
   936  07A3                     	;# 
   937  07A4                     	;# 
   938  07A6                     	;# 
   939  07A7                     	;# 
   940  07A9                     	;# 
   941  07AA                     	;# 
   942  0FE4                     	;# 
   943  0FE5                     	;# 
   944  0FE6                     	;# 
   945  0FE7                     	;# 
   946  0FE8                     	;# 
   947  0FE9                     	;# 
   948  0FEA                     	;# 
   949  0FEB                     	;# 
   950  0FED                     	;# 
   951  0FEE                     	;# 
   952  0FEF                     	;# 
   953  0000                     	;# 
   954  0001                     	;# 
   955  0002                     	;# 
   956  0003                     	;# 
   957  0004                     	;# 
   958  0005                     	;# 
   959  0006                     	;# 
   960  0007                     	;# 
   961  0008                     	;# 
   962  0009                     	;# 
   963  000A                     	;# 
   964  000B                     	;# 
   965  000C                     	;# 
   966  000D                     	;# 
   967  000E                     	;# 
   968  0010                     	;# 
   969  0011                     	;# 
   970  0012                     	;# 
   971  0013                     	;# 
   972  0015                     	;# 
   973  0016                     	;# 
   974  0016                     	;# 
   975  0017                     	;# 
   976  0018                     	;# 
   977  0019                     	;# 
   978  001A                     	;# 
   979  001B                     	;# 
   980  001C                     	;# 
   981  001E                     	;# 
   982  001F                     	;# 
   983  008C                     	;# 
   984  008D                     	;# 
   985  008E                     	;# 
   986  0090                     	;# 
   987  0091                     	;# 
   988  0092                     	;# 
   989  0093                     	;# 
   990  0095                     	;# 
   991  0096                     	;# 
   992  0097                     	;# 
   993  0098                     	;# 
   994  0099                     	;# 
   995  009A                     	;# 
   996  009B                     	;# 
   997  009B                     	;# 
   998  009C                     	;# 
   999  009D                     	;# 
  1000  009E                     	;# 
  1001  010C                     	;# 
  1002  010D                     	;# 
  1003  010E                     	;# 
  1004  0110                     	;# 
  1005  0111                     	;# 
  1006  0112                     	;# 
  1007  0113                     	;# 
  1008  0114                     	;# 
  1009  0115                     	;# 
  1010  0116                     	;# 
  1011  0117                     	;# 
  1012  0118                     	;# 
  1013  0119                     	;# 
  1014  011A                     	;# 
  1015  011B                     	;# 
  1016  011D                     	;# 
  1017  018C                     	;# 
  1018  018D                     	;# 
  1019  0191                     	;# 
  1020  0191                     	;# 
  1021  0192                     	;# 
  1022  0193                     	;# 
  1023  0193                     	;# 
  1024  0193                     	;# 
  1025  0194                     	;# 
  1026  0195                     	;# 
  1027  0196                     	;# 
  1028  0199                     	;# 
  1029  019A                     	;# 
  1030  019B                     	;# 
  1031  019B                     	;# 
  1032  019B                     	;# 
  1033  019B                     	;# 
  1034  019C                     	;# 
  1035  019C                     	;# 
  1036  019D                     	;# 
  1037  019E                     	;# 
  1038  019F                     	;# 
  1039  020D                     	;# 
  1040  0210                     	;# 
  1041  0211                     	;# 
  1042  0212                     	;# 
  1043  0213                     	;# 
  1044  0214                     	;# 
  1045  0215                     	;# 
  1046  0215                     	;# 
  1047  0216                     	;# 
  1048  0217                     	;# 
  1049  0291                     	;# 
  1050  0291                     	;# 
  1051  0292                     	;# 
  1052  0293                     	;# 
  1053  0294                     	;# 
  1054  0295                     	;# 
  1055  0295                     	;# 
  1056  0296                     	;# 
  1057  0298                     	;# 
  1058  0298                     	;# 
  1059  0299                     	;# 
  1060  029A                     	;# 
  1061  029B                     	;# 
  1062  029C                     	;# 
  1063  029C                     	;# 
  1064  029D                     	;# 
  1065  029E                     	;# 
  1066  029F                     	;# 
  1067  0311                     	;# 
  1068  0311                     	;# 
  1069  0312                     	;# 
  1070  0313                     	;# 
  1071  0314                     	;# 
  1072  0315                     	;# 
  1073  0315                     	;# 
  1074  0316                     	;# 
  1075  0318                     	;# 
  1076  0318                     	;# 
  1077  0319                     	;# 
  1078  031A                     	;# 
  1079  031C                     	;# 
  1080  031C                     	;# 
  1081  031D                     	;# 
  1082  031E                     	;# 
  1083  0394                     	;# 
  1084  0395                     	;# 
  1085  0396                     	;# 
  1086  0415                     	;# 
  1087  0416                     	;# 
  1088  0417                     	;# 
  1089  041C                     	;# 
  1090  041D                     	;# 
  1091  041E                     	;# 
  1092  0791                     	;# 
  1093  0792                     	;# 
  1094  0793                     	;# 
  1095  0794                     	;# 
  1096  0795                     	;# 
  1097  0798                     	;# 
  1098  0799                     	;# 
  1099  07A0                     	;# 
  1100  07A1                     	;# 
  1101  07A3                     	;# 
  1102  07A4                     	;# 
  1103  07A6                     	;# 
  1104  07A7                     	;# 
  1105  07A9                     	;# 
  1106  07AA                     	;# 
  1107  0FE4                     	;# 
  1108  0FE5                     	;# 
  1109  0FE6                     	;# 
  1110  0FE7                     	;# 
  1111  0FE8                     	;# 
  1112  0FE9                     	;# 
  1113  0FEA                     	;# 
  1114  0FEB                     	;# 
  1115  0FED                     	;# 
  1116  0FEE                     	;# 
  1117  0FEF                     	;# 
  1118  0000                     	;# 
  1119  0001                     	;# 
  1120  0002                     	;# 
  1121  0003                     	;# 
  1122  0004                     	;# 
  1123  0005                     	;# 
  1124  0006                     	;# 
  1125  0007                     	;# 
  1126  0008                     	;# 
  1127  0009                     	;# 
  1128  000A                     	;# 
  1129  000B                     	;# 
  1130  000C                     	;# 
  1131  000D                     	;# 
  1132  000E                     	;# 
  1133  0010                     	;# 
  1134  0011                     	;# 
  1135  0012                     	;# 
  1136  0013                     	;# 
  1137  0015                     	;# 
  1138  0016                     	;# 
  1139  0016                     	;# 
  1140  0017                     	;# 
  1141  0018                     	;# 
  1142  0019                     	;# 
  1143  001A                     	;# 
  1144  001B                     	;# 
  1145  001C                     	;# 
  1146  001E                     	;# 
  1147  001F                     	;# 
  1148  008C                     	;# 
  1149  008D                     	;# 
  1150  008E                     	;# 
  1151  0090                     	;# 
  1152  0091                     	;# 
  1153  0092                     	;# 
  1154  0093                     	;# 
  1155  0095                     	;# 
  1156  0096                     	;# 
  1157  0097                     	;# 
  1158  0098                     	;# 
  1159  0099                     	;# 
  1160  009A                     	;# 
  1161  009B                     	;# 
  1162  009B                     	;# 
  1163  009C                     	;# 
  1164  009D                     	;# 
  1165  009E                     	;# 
  1166  010C                     	;# 
  1167  010D                     	;# 
  1168  010E                     	;# 
  1169  0110                     	;# 
  1170  0111                     	;# 
  1171  0112                     	;# 
  1172  0113                     	;# 
  1173  0114                     	;# 
  1174  0115                     	;# 
  1175  0116                     	;# 
  1176  0117                     	;# 
  1177  0118                     	;# 
  1178  0119                     	;# 
  1179  011A                     	;# 
  1180  011B                     	;# 
  1181  011D                     	;# 
  1182  018C                     	;# 
  1183  018D                     	;# 
  1184  0191                     	;# 
  1185  0191                     	;# 
  1186  0192                     	;# 
  1187  0193                     	;# 
  1188  0193                     	;# 
  1189  0193                     	;# 
  1190  0194                     	;# 
  1191  0195                     	;# 
  1192  0196                     	;# 
  1193  0199                     	;# 
  1194  019A                     	;# 
  1195  019B                     	;# 
  1196  019B                     	;# 
  1197  019B                     	;# 
  1198  019B                     	;# 
  1199  019C                     	;# 
  1200  019C                     	;# 
  1201  019D                     	;# 
  1202  019E                     	;# 
  1203  019F                     	;# 
  1204  020D                     	;# 
  1205  0210                     	;# 
  1206  0211                     	;# 
  1207  0212                     	;# 
  1208  0213                     	;# 
  1209  0214                     	;# 
  1210  0215                     	;# 
  1211  0215                     	;# 
  1212  0216                     	;# 
  1213  0217                     	;# 
  1214  0291                     	;# 
  1215  0291                     	;# 
  1216  0292                     	;# 
  1217  0293                     	;# 
  1218  0294                     	;# 
  1219  0295                     	;# 
  1220  0295                     	;# 
  1221  0296                     	;# 
  1222  0298                     	;# 
  1223  0298                     	;# 
  1224  0299                     	;# 
  1225  029A                     	;# 
  1226  029B                     	;# 
  1227  029C                     	;# 
  1228  029C                     	;# 
  1229  029D                     	;# 
  1230  029E                     	;# 
  1231  029F                     	;# 
  1232  0311                     	;# 
  1233  0311                     	;# 
  1234  0312                     	;# 
  1235  0313                     	;# 
  1236  0314                     	;# 
  1237  0315                     	;# 
  1238  0315                     	;# 
  1239  0316                     	;# 
  1240  0318                     	;# 
  1241  0318                     	;# 
  1242  0319                     	;# 
  1243  031A                     	;# 
  1244  031C                     	;# 
  1245  031C                     	;# 
  1246  031D                     	;# 
  1247  031E                     	;# 
  1248  0394                     	;# 
  1249  0395                     	;# 
  1250  0396                     	;# 
  1251  0415                     	;# 
  1252  0416                     	;# 
  1253  0417                     	;# 
  1254  041C                     	;# 
  1255  041D                     	;# 
  1256  041E                     	;# 
  1257  0791                     	;# 
  1258  0792                     	;# 
  1259  0793                     	;# 
  1260  0794                     	;# 
  1261  0795                     	;# 
  1262  0798                     	;# 
  1263  0799                     	;# 
  1264  07A0                     	;# 
  1265  07A1                     	;# 
  1266  07A3                     	;# 
  1267  07A4                     	;# 
  1268  07A6                     	;# 
  1269  07A7                     	;# 
  1270  07A9                     	;# 
  1271  07AA                     	;# 
  1272  0FE4                     	;# 
  1273  0FE5                     	;# 
  1274  0FE6                     	;# 
  1275  0FE7                     	;# 
  1276  0FE8                     	;# 
  1277  0FE9                     	;# 
  1278  0FEA                     	;# 
  1279  0FEB                     	;# 
  1280  0FED                     	;# 
  1281  0FEE                     	;# 
  1282  0FEF                     	;# 
  1283  0000                     	;# 
  1284  0001                     	;# 
  1285  0002                     	;# 
  1286  0003                     	;# 
  1287  0004                     	;# 
  1288  0005                     	;# 
  1289  0006                     	;# 
  1290  0007                     	;# 
  1291  0008                     	;# 
  1292  0009                     	;# 
  1293  000A                     	;# 
  1294  000B                     	;# 
  1295  000C                     	;# 
  1296  000D                     	;# 
  1297  000E                     	;# 
  1298  0010                     	;# 
  1299  0011                     	;# 
  1300  0012                     	;# 
  1301  0013                     	;# 
  1302  0015                     	;# 
  1303  0016                     	;# 
  1304  0016                     	;# 
  1305  0017                     	;# 
  1306  0018                     	;# 
  1307  0019                     	;# 
  1308  001A                     	;# 
  1309  001B                     	;# 
  1310  001C                     	;# 
  1311  001E                     	;# 
  1312  001F                     	;# 
  1313  008C                     	;# 
  1314  008D                     	;# 
  1315  008E                     	;# 
  1316  0090                     	;# 
  1317  0091                     	;# 
  1318  0092                     	;# 
  1319  0093                     	;# 
  1320  0095                     	;# 
  1321  0096                     	;# 
  1322  0097                     	;# 
  1323  0098                     	;# 
  1324  0099                     	;# 
  1325  009A                     	;# 
  1326  009B                     	;# 
  1327  009B                     	;# 
  1328  009C                     	;# 
  1329  009D                     	;# 
  1330  009E                     	;# 
  1331  010C                     	;# 
  1332  010D                     	;# 
  1333  010E                     	;# 
  1334  0110                     	;# 
  1335  0111                     	;# 
  1336  0112                     	;# 
  1337  0113                     	;# 
  1338  0114                     	;# 
  1339  0115                     	;# 
  1340  0116                     	;# 
  1341  0117                     	;# 
  1342  0118                     	;# 
  1343  0119                     	;# 
  1344  011A                     	;# 
  1345  011B                     	;# 
  1346  011D                     	;# 
  1347  018C                     	;# 
  1348  018D                     	;# 
  1349  0191                     	;# 
  1350  0191                     	;# 
  1351  0192                     	;# 
  1352  0193                     	;# 
  1353  0193                     	;# 
  1354  0193                     	;# 
  1355  0194                     	;# 
  1356  0195                     	;# 
  1357  0196                     	;# 
  1358  0199                     	;# 
  1359  019A                     	;# 
  1360  019B                     	;# 
  1361  019B                     	;# 
  1362  019B                     	;# 
  1363  019B                     	;# 
  1364  019C                     	;# 
  1365  019C                     	;# 
  1366  019D                     	;# 
  1367  019E                     	;# 
  1368  019F                     	;# 
  1369  020D                     	;# 
  1370  0210                     	;# 
  1371  0211                     	;# 
  1372  0212                     	;# 
  1373  0213                     	;# 
  1374  0214                     	;# 
  1375  0215                     	;# 
  1376  0215                     	;# 
  1377  0216                     	;# 
  1378  0217                     	;# 
  1379  0291                     	;# 
  1380  0291                     	;# 
  1381  0292                     	;# 
  1382  0293                     	;# 
  1383  0294                     	;# 
  1384  0295                     	;# 
  1385  0295                     	;# 
  1386  0296                     	;# 
  1387  0298                     	;# 
  1388  0298                     	;# 
  1389  0299                     	;# 
  1390  029A                     	;# 
  1391  029B                     	;# 
  1392  029C                     	;# 
  1393  029C                     	;# 
  1394  029D                     	;# 
  1395  029E                     	;# 
  1396  029F                     	;# 
  1397  0311                     	;# 
  1398  0311                     	;# 
  1399  0312                     	;# 
  1400  0313                     	;# 
  1401  0314                     	;# 
  1402  0315                     	;# 
  1403  0315                     	;# 
  1404  0316                     	;# 
  1405  0318                     	;# 
  1406  0318                     	;# 
  1407  0319                     	;# 
  1408  031A                     	;# 
  1409  031C                     	;# 
  1410  031C                     	;# 
  1411  031D                     	;# 
  1412  031E                     	;# 
  1413  0394                     	;# 
  1414  0395                     	;# 
  1415  0396                     	;# 
  1416  0415                     	;# 
  1417  0416                     	;# 
  1418  0417                     	;# 
  1419  041C                     	;# 
  1420  041D                     	;# 
  1421  041E                     	;# 
  1422  0791                     	;# 
  1423  0792                     	;# 
  1424  0793                     	;# 
  1425  0794                     	;# 
  1426  0795                     	;# 
  1427  0798                     	;# 
  1428  0799                     	;# 
  1429  07A0                     	;# 
  1430  07A1                     	;# 
  1431  07A3                     	;# 
  1432  07A4                     	;# 
  1433  07A6                     	;# 
  1434  07A7                     	;# 
  1435  07A9                     	;# 
  1436  07AA                     	;# 
  1437  0FE4                     	;# 
  1438  0FE5                     	;# 
  1439  0FE6                     	;# 
  1440  0FE7                     	;# 
  1441  0FE8                     	;# 
  1442  0FE9                     	;# 
  1443  0FEA                     	;# 
  1444  0FEB                     	;# 
  1445  0FED                     	;# 
  1446  0FEE                     	;# 
  1447  0FEF                     	;# 
  1448  0000                     	;# 
  1449  0001                     	;# 
  1450  0002                     	;# 
  1451  0003                     	;# 
  1452  0004                     	;# 
  1453  0005                     	;# 
  1454  0006                     	;# 
  1455  0007                     	;# 
  1456  0008                     	;# 
  1457  0009                     	;# 
  1458  000A                     	;# 
  1459  000B                     	;# 
  1460  000C                     	;# 
  1461  000D                     	;# 
  1462  000E                     	;# 
  1463  0010                     	;# 
  1464  0011                     	;# 
  1465  0012                     	;# 
  1466  0013                     	;# 
  1467  0015                     	;# 
  1468  0016                     	;# 
  1469  0016                     	;# 
  1470  0017                     	;# 
  1471  0018                     	;# 
  1472  0019                     	;# 
  1473  001A                     	;# 
  1474  001B                     	;# 
  1475  001C                     	;# 
  1476  001E                     	;# 
  1477  001F                     	;# 
  1478  008C                     	;# 
  1479  008D                     	;# 
  1480  008E                     	;# 
  1481  0090                     	;# 
  1482  0091                     	;# 
  1483  0092                     	;# 
  1484  0093                     	;# 
  1485  0095                     	;# 
  1486  0096                     	;# 
  1487  0097                     	;# 
  1488  0098                     	;# 
  1489  0099                     	;# 
  1490  009A                     	;# 
  1491  009B                     	;# 
  1492  009B                     	;# 
  1493  009C                     	;# 
  1494  009D                     	;# 
  1495  009E                     	;# 
  1496  010C                     	;# 
  1497  010D                     	;# 
  1498  010E                     	;# 
  1499  0110                     	;# 
  1500  0111                     	;# 
  1501  0112                     	;# 
  1502  0113                     	;# 
  1503  0114                     	;# 
  1504  0115                     	;# 
  1505  0116                     	;# 
  1506  0117                     	;# 
  1507  0118                     	;# 
  1508  0119                     	;# 
  1509  011A                     	;# 
  1510  011B                     	;# 
  1511  011D                     	;# 
  1512  018C                     	;# 
  1513  018D                     	;# 
  1514  0191                     	;# 
  1515  0191                     	;# 
  1516  0192                     	;# 
  1517  0193                     	;# 
  1518  0193                     	;# 
  1519  0193                     	;# 
  1520  0194                     	;# 
  1521  0195                     	;# 
  1522  0196                     	;# 
  1523  0199                     	;# 
  1524  019A                     	;# 
  1525  019B                     	;# 
  1526  019B                     	;# 
  1527  019B                     	;# 
  1528  019B                     	;# 
  1529  019C                     	;# 
  1530  019C                     	;# 
  1531  019D                     	;# 
  1532  019E                     	;# 
  1533  019F                     	;# 
  1534  020D                     	;# 
  1535  0210                     	;# 
  1536  0211                     	;# 
  1537  0212                     	;# 
  1538  0213                     	;# 
  1539  0214                     	;# 
  1540  0215                     	;# 
  1541  0215                     	;# 
  1542  0216                     	;# 
  1543  0217                     	;# 
  1544  0291                     	;# 
  1545  0291                     	;# 
  1546  0292                     	;# 
  1547  0293                     	;# 
  1548  0294                     	;# 
  1549  0295                     	;# 
  1550  0295                     	;# 
  1551  0296                     	;# 
  1552  0298                     	;# 
  1553  0298                     	;# 
  1554  0299                     	;# 
  1555  029A                     	;# 
  1556  029B                     	;# 
  1557  029C                     	;# 
  1558  029C                     	;# 
  1559  029D                     	;# 
  1560  029E                     	;# 
  1561  029F                     	;# 
  1562  0311                     	;# 
  1563  0311                     	;# 
  1564  0312                     	;# 
  1565  0313                     	;# 
  1566  0314                     	;# 
  1567  0315                     	;# 
  1568  0315                     	;# 
  1569  0316                     	;# 
  1570  0318                     	;# 
  1571  0318                     	;# 
  1572  0319                     	;# 
  1573  031A                     	;# 
  1574  031C                     	;# 
  1575  031C                     	;# 
  1576  031D                     	;# 
  1577  031E                     	;# 
  1578  0394                     	;# 
  1579  0395                     	;# 
  1580  0396                     	;# 
  1581  0415                     	;# 
  1582  0416                     	;# 
  1583  0417                     	;# 
  1584  041C                     	;# 
  1585  041D                     	;# 
  1586  041E                     	;# 
  1587  0791                     	;# 
  1588  0792                     	;# 
  1589  0793                     	;# 
  1590  0794                     	;# 
  1591  0795                     	;# 
  1592  0798                     	;# 
  1593  0799                     	;# 
  1594  07A0                     	;# 
  1595  07A1                     	;# 
  1596  07A3                     	;# 
  1597  07A4                     	;# 
  1598  07A6                     	;# 
  1599  07A7                     	;# 
  1600  07A9                     	;# 
  1601  07AA                     	;# 
  1602  0FE4                     	;# 
  1603  0FE5                     	;# 
  1604  0FE6                     	;# 
  1605  0FE7                     	;# 
  1606  0FE8                     	;# 
  1607  0FE9                     	;# 
  1608  0FEA                     	;# 
  1609  0FEB                     	;# 
  1610  0FED                     	;# 
  1611  0FEE                     	;# 
  1612  0FEF                     	;# 
  1613                           
  1614                           	psect	idataBANK2
  1615  1130                     __pidataBANK2:
  1616                           
  1617                           ;initializer for main@F2847
  1618  1130  3402               	retlw	2
  1619  1131  3404               	retlw	4
  1620  1132  3400               	retlw	0
  1621  1133  3400               	retlw	0
  1622  1134  3400               	retlw	0
  1623  1135  3400               	retlw	0
  1624  1136  3400               	retlw	0
  1625  1137  3400               	retlw	0
  1626  1138  3400               	retlw	0
  1627  1139  3400               	retlw	0
  1628  113A  34F4               	retlw	244
  1629  113B  3401               	retlw	1
  1630                           
  1631                           ;initializer for _segdata
  1632  113C  343F               	retlw	63
  1633  113D  3406               	retlw	6
  1634  113E  345B               	retlw	91
  1635  113F  344F               	retlw	79
  1636  1140  3466               	retlw	102
  1637  1141  346D               	retlw	109
  1638  1142  347D               	retlw	125
  1639  1143  3407               	retlw	7
  1640  1144  347F               	retlw	127
  1641  1145  346F               	retlw	111
  1642                           
  1643                           ;initializer for lcd_set_cursor@F2781
  1644  1146  3400               	retlw	0
  1645  1147  3440               	retlw	64
  1646  1148  3414               	retlw	20
  1647  1149  3454               	retlw	84
  1648                           
  1649                           ;initializer for print_digit@F2820
  1650  114A  34FF               	retlw	255
  1651  114B  34FF               	retlw	255
  1652  114C  34FF               	retlw	255
  1653  114D  34FF               	retlw	255
  1654                           
  1655                           ;initializer for main@F2849
  1656  114E  3427               	retlw	39
  1657  114F  3410               	retlw	16
  1658  1150  3402               	retlw	2
  1659  1151  3400               	retlw	0
  1660                           
  1661                           ;initializer for main@F2851
  1662  1152  3408               	retlw	8
  1663  1153  3410               	retlw	16
  1664  000D                     _PORTBbits	set	13
  1665  0097                     _WDTCON	set	151
  1666  0098                     _OSCTUNE	set	152
  1667  0099                     _OSCCON	set	153
  1668  0095                     _OPTION_REGbits	set	149
  1669  008E                     _TRISC	set	142
  1670  008D                     _TRISB	set	141
  1671  008C                     _TRISA	set	140
  1672  0090                     _TRISE	set	144
  1673  0116                     _BORCON	set	278
  1674  011D                     _APFCON	set	285
  1675  010E                     _LATC	set	270
  1676  010D                     _LATB	set	269
  1677  010C                     _LATA	set	268
  1678  0110                     _LATE	set	272
  1679  018C                     _ANSELA	set	396
  1680  018D                     _ANSELB	set	397
  1681  0215                     _SSPCON1	set	533
  1682  0212                     _SSPADD	set	530
  1683  0215                     _SSPCON1bits	set	533
  1684  0214                     _SSPSTATbits	set	532
  1685  0211                     _SSPBUF	set	529
  1686  0216                     _SSPCON2bits	set	534
  1687  0214                     _SSPSTAT	set	532
  1688  0216                     _SSPCON2	set	534
  1689  020D                     _WPUB	set	525
  1690  0210                     _WPUE	set	528
  1691                           
  1692                           	psect	stringtext1
  1693  2000                     __pstringtext1:
  1694  2000                     STR_3:
  1695  2000  344C               	retlw	76	;'L'
  1696  2001  346F               	retlw	111	;'o'
  1697  2002  3461               	retlw	97	;'a'
  1698  2003  3464               	retlw	100	;'d'
  1699  2004  3420               	retlw	32	;' '
  1700  2005  3463               	retlw	99	;'c'
  1701  2006  3465               	retlw	101	;'e'
  1702  2007  346C               	retlw	108	;'l'
  1703  2008  346C               	retlw	108	;'l'
  1704  2009  3420               	retlw	32	;' '
  1705  200A  3455               	retlw	85	;'U'
  1706  200B  346E               	retlw	110	;'n'
  1707  200C  3469               	retlw	105	;'i'
  1708  200D  3474               	retlw	116	;'t'
  1709  200E  3400               	retlw	0
  1710                           
  1711                           	psect	stringtext2
  1712  200F                     __pstringtext2:
  1713  200F                     STR_2:
  1714  200F  3449               	retlw	73	;'I'
  1715  2010  346E               	retlw	110	;'n'
  1716  2011  3469               	retlw	105	;'i'
  1717  2012  3474               	retlw	116	;'t'
  1718  2013  3469               	retlw	105	;'i'
  1719  2014  3461               	retlw	97	;'a'
  1720  2015  346C               	retlw	108	;'l'
  1721  2016  3469               	retlw	105	;'i'
  1722  2017  347A               	retlw	122	;'z'
  1723  2018  3465               	retlw	101	;'e'
  1724  2019  3400               	retlw	0
  1725                           
  1726                           	psect	stringtext3
  1727  201A                     __pstringtext3:
  1728  201A                     STR_5:
  1729  201A  3425               	retlw	37	;'%'
  1730  201B  3464               	retlw	100	;'d'
  1731  201C  3467               	retlw	103	;'g'
  1732  201D  3420               	retlw	32	;' '
  1733  201E  342F               	retlw	47	;'/'
  1734  201F  3420               	retlw	32	;' '
  1735  2020  3425               	retlw	37	;'%'
  1736  2021  3464               	retlw	100	;'d'
  1737  2022  3467               	retlw	103	;'g'
  1738  2023  3400               	retlw	0
  1739                           
  1740                           	psect	stringtext4
  1741  2024                     __pstringtext4:
  1742  2024                     STR_4:
  1743  2024  3425               	retlw	37	;'%'
  1744  2025  346C               	retlw	108	;'l'
  1745  2026  3475               	retlw	117	;'u'
  1746  2027  3420               	retlw	32	;' '
  1747  2028  3476               	retlw	118	;'v'
  1748  2029  3461               	retlw	97	;'a'
  1749  202A  346C               	retlw	108	;'l'
  1750  202B  3400               	retlw	0
  1751                           
  1752                           	psect	stringtext5
  1753  202C                     __pstringtext5:
  1754  202C                     STR_6:
  1755  202C  3425               	retlw	37	;'%'
  1756  202D  3464               	retlw	100	;'d'
  1757  202E  3420               	retlw	32	;' '
  1758  202F  3425               	retlw	37	;'%'
  1759  2030  3425               	retlw	37	;'%'
  1760  2031  3400               	retlw	0
  1761                           
  1762                           	psect	stringtext6
  1763  2032                     __pstringtext6:
  1764  2032                     STR_7:
  1765  2032  346C               	retlw	108	;'l'
  1766  2033  3464               	retlw	100	;'d'
  1767  2034  3400               	retlw	0
  1768                           
  1769                           	psect	stringtext7
  1770  2035                     __pstringtext7:
  1771  2035                     STR_11:
  1772  2035  346C               	retlw	108	;'l'
  1773  2036  3469               	retlw	105	;'i'
  1774  2037  3400               	retlw	0
  1775                           
  1776                           	psect	stringtext8
  1777  2038                     __pstringtext8:
  1778  2038                     STR_16:
  1779  2038  346C               	retlw	108	;'l'
  1780  2039  3475               	retlw	117	;'u'
  1781  203A  3400               	retlw	0
  1782                           
  1783                           	psect	stringtext9
  1784  203B                     __pstringtext9:
  1785  203B                     STR_1:
  1786  203B  3420               	retlw	32	;' '
  1787  203C  3400               	retlw	0
  1788                           
  1789                           	psect	stringtext10
  1790  0000                     __pstringtext10:
  1791  2032                     
  1792                           	psect	cinit
  1793  07E1                     start_initialization:	
  1794                           ; #config settings
  1795                           
  1796  07E1                     __initialization:
  1797                           
  1798                           ; Initialize objects allocated to BANK2
  1799  07E1  3030               	movlw	low __pidataBANK2
  1800  07E2  0084               	movwf	4
  1801  07E3  3091               	movlw	(high __pidataBANK2)| (0+128)
  1802  07E4  0085               	movwf	5
  1803  07E5  3020               	movlw	low __pdataBANK2
  1804  07E6  0086               	movwf	6
  1805  07E7  3001               	movlw	high __pdataBANK2
  1806  07E8  0087               	movwf	7
  1807  07E9  3024               	movlw	36
  1808  07EA  3190  2000  3187   	fcall	init_ram
  1809                           
  1810                           ; Clear objects allocated to BANK2
  1811  07ED  3044               	movlw	low __pbssBANK2
  1812  07EE  0084               	movwf	4
  1813  07EF  3001               	movlw	high __pbssBANK2
  1814  07F0  0085               	movwf	5
  1815  07F1  3013               	movlw	19
  1816  07F2  319F  273A  3187   	fcall	clear_ram0
  1817                           
  1818                           ; Clear objects allocated to BANK3
  1819  07F5  30A0               	movlw	low __pbssBANK3
  1820  07F6  0084               	movwf	4
  1821  07F7  3001               	movlw	high __pbssBANK3
  1822  07F8  0085               	movwf	5
  1823  07F9  3020               	movlw	32
  1824  07FA  319F  273A  3187   	fcall	clear_ram0
  1825  07FD                     end_of_initialization:	
  1826                           ;End of C runtime variable initialization code
  1827                           
  1828  07FD                     __end_of__initialization:
  1829  07FD  0020               	movlb	0
  1830  07FE  3196  2E78         	ljmp	_main	;jump to C main() function
  1831                           
  1832                           	psect	bssBANK2
  1833  0144                     __pbssBANK2:
  1834  0144                     main@F2853:
  1835  0144                     	ds	6
  1836  014A                     clear_segment@F2810:
  1837  014A                     	ds	4
  1838  014E                     _nout:
  1839  014E                     	ds	2
  1840  0150                     _width:
  1841  0150                     	ds	2
  1842  0152                     _prec:
  1843  0152                     	ds	2
  1844  0154                     _flags:
  1845  0154                     	ds	2
  1846  0156                     _m_brightness:
  1847  0156                     	ds	1
  1848                           
  1849                           	psect	dataBANK2
  1850  0120                     __pdataBANK2:
  1851  0120                     main@F2847:
  1852  0120                     	ds	12
  1853  012C                     _segdata:
  1854  012C                     	ds	10
  1855  0136                     lcd_set_cursor@F2781:
  1856  0136                     	ds	4
  1857  013A                     print_digit@F2820:
  1858  013A                     	ds	4
  1859  013E                     main@F2849:
  1860  013E                     	ds	4
  1861  0142                     main@F2851:
  1862  0142                     	ds	2
  1863                           
  1864                           	psect	bssBANK3
  1865  01A0                     __pbssBANK3:
  1866  01A0                     _dbuf:
  1867  01A0                     	ds	32
  1868                           
  1869                           	psect	inittext
  1870  1000                     init_ram:
  1871  1000  00FE               	movwf	btemp
  1872  1001                     initloop:
  1873  1001  0012               	moviw fsr0++
  1874  1002  001E               	movwi fsr1++
  1875  1003  0BFE               	decfsz	btemp,f
  1876  1004  2801               	goto	initloop
  1877  1005  3400               	retlw	0
  1878                           
  1879                           	psect	clrtext
  1880  1F3A                     clear_ram0:	
  1881                           ;	Called with FSR0 containing the base address, and
  1882                           ;	WREG with the size to clear
  1883                           
  1884  1F3A  0064               	clrwdt	;clear the watchdog before getting into this loop
  1885  1F3B                     clrloop0:
  1886  1F3B  0180               	clrf	0	;clear RAM location pointed to by FSR
  1887  1F3C  3101               	addfsr 0,1
  1888  1F3D  0B89               	decfsz	9,f	;Have we reached the end of clearing yet?
  1889  1F3E  2F3B               	goto	clrloop0	;have we reached the end yet?
  1890  1F3F  3400               	retlw	0	;all done for this memory range, return
  1891                           
  1892                           	psect	cstackBANK1
  1893  00A0                     __pcstackBANK1:
  1894  00A0                     ??_calc_percentage:
  1895  00A0                     ??_vfprintf:	
  1896                           ; 1 bytes @ 0x0
  1897                           
  1898                           
  1899                           ; 1 bytes @ 0x0
  1900  00A0                     	ds	2
  1901  00A2                     vfprintf@fp:
  1902                           
  1903                           ; 1 bytes @ 0x2
  1904  00A2                     	ds	1
  1905  00A3                     vfprintf@cfmt:
  1906                           
  1907                           ; 2 bytes @ 0x3
  1908  00A3                     	ds	2
  1909  00A5                     ?_sprintf:
  1910  00A5                     sprintf@fmt:	
  1911                           ; 2 bytes @ 0x5
  1912                           
  1913                           
  1914                           ; 2 bytes @ 0x5
  1915  00A5                     	ds	6
  1916  00AB                     ??_sprintf:
  1917                           
  1918                           ; 1 bytes @ 0xB
  1919  00AB                     	ds	1
  1920  00AC                     sprintf@s:
  1921                           
  1922                           ; 1 bytes @ 0xC
  1923  00AC                     	ds	1
  1924  00AD                     sprintf@ap:
  1925                           
  1926                           ; 1 bytes @ 0xD
  1927  00AD                     	ds	1
  1928  00AE                     sprintf@f:
  1929                           
  1930                           ; 5 bytes @ 0xE
  1931  00AE                     	ds	5
  1932  00B3                     ??_initialize:
  1933  00B3                     ??_print_gram:	
  1934                           ; 1 bytes @ 0x13
  1935                           
  1936                           
  1937                           ; 1 bytes @ 0x13
  1938  00B3                     	ds	1
  1939  00B4                     initialize@valstr:
  1940                           
  1941                           ; 16 bytes @ 0x14
  1942  00B4                     	ds	1
  1943  00B5                     print_gram@row1:
  1944                           
  1945                           ; 16 bytes @ 0x15
  1946  00B5                     	ds	15
  1947  00C4                     initialize@p:
  1948                           
  1949                           ; 1 bytes @ 0x24
  1950  00C4                     	ds	1
  1951  00C5                     print_gram@row2:
  1952                           
  1953                           ; 16 bytes @ 0x25
  1954  00C5                     	ds	16
  1955  00D5                     print_gram@p:
  1956                           
  1957                           ; 1 bytes @ 0x35
  1958  00D5                     	ds	1
  1959  00D6                     ??_main:
  1960                           
  1961                           ; 1 bytes @ 0x36
  1962  00D6                     	ds	2
  1963  00D8                     main@lcd:
  1964                           
  1965                           ; 4 bytes @ 0x38
  1966  00D8                     	ds	4
  1967  00DC                     main@tm1637:
  1968                           
  1969                           ; 2 bytes @ 0x3C
  1970  00DC                     	ds	2
  1971  00DE                     main@loadcell:
  1972                           
  1973                           ; 12 bytes @ 0x3E
  1974  00DE                     	ds	12
  1975  00EA                     main@drink:
  1976                           
  1977                           ; 6 bytes @ 0x4A
  1978  00EA                     	ds	6
  1979                           
  1980                           	psect	cstackCOMMON
  1981  0070                     __pcstackCOMMON:
  1982  0070                     ?_OSCILLATOR_Initialize:
  1983  0070                     ??_OSCILLATOR_Initialize:	
  1984                           ; 1 bytes @ 0x0
  1985                           
  1986  0070                     ?_WDT_Initialize:	
  1987                           ; 1 bytes @ 0x0
  1988                           
  1989  0070                     ??_WDT_Initialize:	
  1990                           ; 1 bytes @ 0x0
  1991                           
  1992  0070                     ?_initialize:	
  1993                           ; 1 bytes @ 0x0
  1994                           
  1995  0070                     ?_calc_percentage:	
  1996                           ; 1 bytes @ 0x0
  1997                           
  1998  0070                     ?_print_gram:	
  1999                           ; 1 bytes @ 0x0
  2000                           
  2001  0070                     ?_putch:	
  2002                           ; 1 bytes @ 0x0
  2003                           
  2004  0070                     ??_putch:	
  2005                           ; 1 bytes @ 0x0
  2006                           
  2007  0070                     ?_PIN_MANAGER_Initialize:	
  2008                           ; 1 bytes @ 0x0
  2009                           
  2010  0070                     ??_PIN_MANAGER_Initialize:	
  2011                           ; 1 bytes @ 0x0
  2012                           
  2013  0070                     ?_SYSTEM_Initialize:	
  2014                           ; 1 bytes @ 0x0
  2015                           
  2016  0070                     ??_SYSTEM_Initialize:	
  2017                           ; 1 bytes @ 0x0
  2018                           
  2019  0070                     ?_i2c_wait:	
  2020                           ; 1 bytes @ 0x0
  2021                           
  2022  0070                     ??_i2c_wait:	
  2023                           ; 1 bytes @ 0x0
  2024                           
  2025  0070                     ?_i2c_start:	
  2026                           ; 1 bytes @ 0x0
  2027                           
  2028  0070                     ??_i2c_start:	
  2029                           ; 1 bytes @ 0x0
  2030                           
  2031  0070                     ?_i2c_stop:	
  2032                           ; 1 bytes @ 0x0
  2033                           
  2034  0070                     ??_i2c_stop:	
  2035                           ; 1 bytes @ 0x0
  2036                           
  2037  0070                     ?_i2c_write:	
  2038                           ; 1 bytes @ 0x0
  2039                           
  2040  0070                     ??_i2c_write:	
  2041                           ; 1 bytes @ 0x0
  2042                           
  2043  0070                     ?_main:	
  2044                           ; 1 bytes @ 0x0
  2045                           
  2046  0070                     ?_CLK_SET_OUTPUT:	
  2047                           ; 1 bytes @ 0x0
  2048                           
  2049  0070                     ??_CLK_SET_OUTPUT:	
  2050                           ; 1 bytes @ 0x0
  2051                           
  2052  0070                     ?_CLK_SET_HIGH:	
  2053                           ; 1 bytes @ 0x0
  2054                           
  2055  0070                     ??_CLK_SET_HIGH:	
  2056                           ; 1 bytes @ 0x0
  2057                           
  2058  0070                     ?_CLK_SET_LOW:	
  2059                           ; 1 bytes @ 0x0
  2060                           
  2061  0070                     ??_CLK_SET_LOW:	
  2062                           ; 1 bytes @ 0x0
  2063                           
  2064  0070                     ?_DIO_SET_OUTPUT:	
  2065                           ; 1 bytes @ 0x0
  2066                           
  2067  0070                     ??_DIO_SET_OUTPUT:	
  2068                           ; 1 bytes @ 0x0
  2069                           
  2070  0070                     ?_DIO_SET_INPUT:	
  2071                           ; 1 bytes @ 0x0
  2072                           
  2073  0070                     ??_DIO_SET_INPUT:	
  2074                           ; 1 bytes @ 0x0
  2075                           
  2076  0070                     ?_DIO_SET_HIGH:	
  2077                           ; 1 bytes @ 0x0
  2078                           
  2079  0070                     ??_DIO_SET_HIGH:	
  2080                           ; 1 bytes @ 0x0
  2081                           
  2082  0070                     ?_DIO_SET_LOW:	
  2083                           ; 1 bytes @ 0x0
  2084                           
  2085  0070                     ??_DIO_SET_LOW:	
  2086                           ; 1 bytes @ 0x0
  2087                           
  2088  0070                     ?_start_segment:	
  2089                           ; 1 bytes @ 0x0
  2090                           
  2091  0070                     ?_stop_segment:	
  2092                           ; 1 bytes @ 0x0
  2093                           
  2094  0070                     ?_get_DIO_PIN_value:	
  2095                           ; 1 bytes @ 0x0
  2096                           
  2097  0070                     ??_get_DIO_PIN_value:	
  2098                           ; 1 bytes @ 0x0
  2099                           
  2100  0070                     ?_set_brigthness:	
  2101                           ; 1 bytes @ 0x0
  2102                           
  2103  0070                     ?_initialize_digit:	
  2104                           ; 1 bytes @ 0x0
  2105                           
  2106  0070                     ?_set_CELL_CLK_LOW:	
  2107                           ; 1 bytes @ 0x0
  2108                           
  2109  0070                     ??_set_CELL_CLK_LOW:	
  2110                           ; 1 bytes @ 0x0
  2111                           
  2112  0070                     ?_set_CELL_CLK_HIGH:	
  2113                           ; 1 bytes @ 0x0
  2114                           
  2115  0070                     ??_set_CELL_CLK_HIGH:	
  2116                           ; 1 bytes @ 0x0
  2117                           
  2118  0070                     ?_scale_convert_gram:	
  2119                           ; 1 bytes @ 0x0
  2120                           
  2121  0070                     ?_lcd_init:	
  2122                           ; 1 bytes @ 0x0
  2123                           
  2124  0070                     ?_lcd_backlight:	
  2125                           ; 1 bytes @ 0x0
  2126                           
  2127  0070                     ?_lcd_clear:	
  2128                           ; 1 bytes @ 0x0
  2129                           
  2130  0070                     ??___aodiv:	
  2131                           ; 1 bytes @ 0x0
  2132                           
  2133  0070                     ??___aomod:	
  2134                           ; 1 bytes @ 0x0
  2135                           
  2136  0070                     ??___lodiv:	
  2137                           ; 1 bytes @ 0x0
  2138                           
  2139  0070                     ??___lomod:	
  2140                           ; 1 bytes @ 0x0
  2141                           
  2142  0070                     ?__Umul8_16:	
  2143                           ; 1 bytes @ 0x0
  2144                           
  2145  0070                     ?_fputc:	
  2146                           ; 2 bytes @ 0x0
  2147                           
  2148  0070                     ?_strlen:	
  2149                           ; 2 bytes @ 0x0
  2150                           
  2151  0070                     ?_strncmp:	
  2152                           ; 2 bytes @ 0x0
  2153                           
  2154  0070                     ?_get_CELL_DAT_VAL:	
  2155                           ; 2 bytes @ 0x0
  2156                           
  2157  0070                     ?___awdiv:	
  2158                           ; 2 bytes @ 0x0
  2159                           
  2160  0070                     ?___awmod:	
  2161                           ; 2 bytes @ 0x0
  2162                           
  2163  0070                     ?___lldiv:	
  2164                           ; 2 bytes @ 0x0
  2165                           
  2166  0070                     ?___xxtofl:	
  2167                           ; 4 bytes @ 0x0
  2168                           
  2169  0070                     i2c_write@data:	
  2170                           ; 4 bytes @ 0x0
  2171                           
  2172  0070                     set_brigthness@brightness:	
  2173                           ; 1 bytes @ 0x0
  2174                           
  2175  0070                     __Umul8_16@multiplicand:	
  2176                           ; 1 bytes @ 0x0
  2177                           
  2178  0070                     putch@c:	
  2179                           ; 1 bytes @ 0x0
  2180                           
  2181  0070                     ___awdiv@divisor:	
  2182                           ; 1 bytes @ 0x0
  2183                           
  2184  0070                     ___awmod@divisor:	
  2185                           ; 2 bytes @ 0x0
  2186                           
  2187  0070                     fputc@c:	
  2188                           ; 2 bytes @ 0x0
  2189                           
  2190  0070                     strncmp@_l:	
  2191                           ; 2 bytes @ 0x0
  2192                           
  2193  0070                     ___lldiv@divisor:	
  2194                           ; 2 bytes @ 0x0
  2195                           
  2196  0070                     ___xxtofl@val:	
  2197                           ; 4 bytes @ 0x0
  2198                           
  2199                           
  2200                           ; 4 bytes @ 0x0
  2201  0070                     	ds	1
  2202  0071                     ?_lcd_cmd:
  2203  0071                     CLK_SET_OUTPUT@p:	
  2204                           ; 1 bytes @ 0x1
  2205                           
  2206  0071                     CLK_SET_HIGH@p:	
  2207                           ; 1 bytes @ 0x1
  2208                           
  2209  0071                     CLK_SET_LOW@p:	
  2210                           ; 1 bytes @ 0x1
  2211                           
  2212  0071                     DIO_SET_OUTPUT@p:	
  2213                           ; 1 bytes @ 0x1
  2214                           
  2215  0071                     DIO_SET_INPUT@p:	
  2216                           ; 1 bytes @ 0x1
  2217                           
  2218  0071                     DIO_SET_HIGH@p:	
  2219                           ; 1 bytes @ 0x1
  2220                           
  2221  0071                     DIO_SET_LOW@p:	
  2222                           ; 1 bytes @ 0x1
  2223                           
  2224  0071                     get_DIO_PIN_value@p:	
  2225                           ; 1 bytes @ 0x1
  2226                           
  2227  0071                     set_brigthness@on:	
  2228                           ; 1 bytes @ 0x1
  2229                           
  2230  0071                     set_CELL_CLK_LOW@p:	
  2231                           ; 1 bytes @ 0x1
  2232                           
  2233  0071                     set_CELL_CLK_HIGH@p:	
  2234                           ; 1 bytes @ 0x1
  2235                           
  2236  0071                     lcd_cmd@cmd:	
  2237                           ; 1 bytes @ 0x1
  2238                           
  2239  0071                     ___aodiv@counter:	
  2240                           ; 1 bytes @ 0x1
  2241                           
  2242  0071                     ___aomod@counter:	
  2243                           ; 1 bytes @ 0x1
  2244                           
  2245  0071                     ___lomod@counter:	
  2246                           ; 1 bytes @ 0x1
  2247                           
  2248  0071                     ___lodiv@quotient:	
  2249                           ; 1 bytes @ 0x1
  2250                           
  2251                           
  2252                           ; 8 bytes @ 0x1
  2253  0071                     	ds	1
  2254  0072                     ??__Umul8_16:
  2255  0072                     ??_strlen:	
  2256                           ; 1 bytes @ 0x2
  2257                           
  2258  0072                     ??_start_segment:	
  2259                           ; 1 bytes @ 0x2
  2260                           
  2261  0072                     ??_stop_segment:	
  2262                           ; 1 bytes @ 0x2
  2263                           
  2264  0072                     ?_write_byte:	
  2265                           ; 1 bytes @ 0x2
  2266                           
  2267  0072                     ??_set_brigthness:	
  2268                           ; 1 bytes @ 0x2
  2269                           
  2270  0072                     ??_get_CELL_DAT_VAL:	
  2271                           ; 1 bytes @ 0x2
  2272                           
  2273  0072                     ??_lcd_cmd:	
  2274                           ; 1 bytes @ 0x2
  2275                           
  2276  0072                     start_segment@p:	
  2277                           ; 1 bytes @ 0x2
  2278                           
  2279  0072                     stop_segment@p:	
  2280                           ; 1 bytes @ 0x2
  2281                           
  2282  0072                     write_byte@b:	
  2283                           ; 1 bytes @ 0x2
  2284                           
  2285  0072                     lcd_cmd@p:	
  2286                           ; 1 bytes @ 0x2
  2287                           
  2288  0072                     ___aodiv@sign:	
  2289                           ; 1 bytes @ 0x2
  2290                           
  2291  0072                     ___aomod@sign:	
  2292                           ; 1 bytes @ 0x2
  2293                           
  2294  0072                     fputc@fp:	
  2295                           ; 1 bytes @ 0x2
  2296                           
  2297  0072                     ___awdiv@dividend:	
  2298                           ; 1 bytes @ 0x2
  2299                           
  2300  0072                     ___awmod@dividend:	
  2301                           ; 2 bytes @ 0x2
  2302                           
  2303  0072                     strncmp@_r:	
  2304                           ; 2 bytes @ 0x2
  2305                           
  2306                           
  2307                           ; 2 bytes @ 0x2
  2308  0072                     	ds	1
  2309  0073                     ?_write4bits:
  2310  0073                     ?_command:	
  2311                           ; 1 bytes @ 0x3
  2312                           
  2313  0073                     ??_fputc:	
  2314                           ; 1 bytes @ 0x3
  2315                           
  2316  0073                     ??_write_byte:	
  2317                           ; 1 bytes @ 0x3
  2318                           
  2319  0073                     ??_lcd_backlight:	
  2320                           ; 1 bytes @ 0x3
  2321                           
  2322  0073                     ?_abs:	
  2323                           ; 1 bytes @ 0x3
  2324                           
  2325  0073                     set_brigthness@p:	
  2326                           ; 2 bytes @ 0x3
  2327                           
  2328  0073                     command@val:	
  2329                           ; 1 bytes @ 0x3
  2330                           
  2331  0073                     write4bits@val:	
  2332                           ; 1 bytes @ 0x3
  2333                           
  2334  0073                     strlen@a:	
  2335                           ; 1 bytes @ 0x3
  2336                           
  2337  0073                     abs@a:	
  2338                           ; 1 bytes @ 0x3
  2339                           
  2340  0073                     ___aodiv@quotient:	
  2341                           ; 2 bytes @ 0x3
  2342                           
  2343                           
  2344                           ; 8 bytes @ 0x3
  2345  0073                     	ds	1
  2346  0074                     ??_write4bits:
  2347  0074                     ??___awdiv:	
  2348                           ; 1 bytes @ 0x4
  2349                           
  2350  0074                     ??___awmod:	
  2351                           ; 1 bytes @ 0x4
  2352                           
  2353  0074                     ??___xxtofl:	
  2354                           ; 1 bytes @ 0x4
  2355                           
  2356  0074                     write_byte@ack:	
  2357                           ; 1 bytes @ 0x4
  2358                           
  2359  0074                     lcd_backlight@p:	
  2360                           ; 1 bytes @ 0x4
  2361                           
  2362  0074                     command@mode:	
  2363                           ; 1 bytes @ 0x4
  2364                           
  2365  0074                     strlen@s:	
  2366                           ; 1 bytes @ 0x4
  2367                           
  2368  0074                     __Umul8_16@product:	
  2369                           ; 1 bytes @ 0x4
  2370                           
  2371  0074                     strncmp@n:	
  2372                           ; 2 bytes @ 0x4
  2373                           
  2374  0074                     ___lldiv@dividend:	
  2375                           ; 2 bytes @ 0x4
  2376                           
  2377                           
  2378                           ; 4 bytes @ 0x4
  2379  0074                     	ds	1
  2380  0075                     ??_command:
  2381  0075                     ??_abs:	
  2382                           ; 1 bytes @ 0x5
  2383                           
  2384  0075                     write_byte@data:	
  2385                           ; 1 bytes @ 0x5
  2386                           
  2387  0075                     get_CELL_DAT_VAL@p:	
  2388                           ; 1 bytes @ 0x5
  2389                           
  2390  0075                     write4bits@p:	
  2391                           ; 1 bytes @ 0x5
  2392                           
  2393  0075                     ___awdiv@counter:	
  2394                           ; 1 bytes @ 0x5
  2395                           
  2396  0075                     ___awmod@counter:	
  2397                           ; 1 bytes @ 0x5
  2398                           
  2399                           
  2400                           ; 1 bytes @ 0x5
  2401  0075                     	ds	1
  2402  0076                     ??_strncmp:
  2403  0076                     ??_lcd_init:	
  2404                           ; 1 bytes @ 0x6
  2405                           
  2406  0076                     write_byte@i:	
  2407                           ; 1 bytes @ 0x6
  2408                           
  2409  0076                     ___awdiv@sign:	
  2410                           ; 1 bytes @ 0x6
  2411                           
  2412  0076                     ___awmod@sign:	
  2413                           ; 1 bytes @ 0x6
  2414                           
  2415  0076                     __Umul8_16@word_mpld:	
  2416                           ; 1 bytes @ 0x6
  2417                           
  2418                           
  2419                           ; 2 bytes @ 0x6
  2420  0076                     	ds	1
  2421  0077                     write_byte@p:
  2422  0077                     command@highnib:	
  2423                           ; 1 bytes @ 0x7
  2424                           
  2425  0077                     ___awdiv@quotient:	
  2426                           ; 1 bytes @ 0x7
  2427                           
  2428  0077                     strncmp@l:	
  2429                           ; 2 bytes @ 0x7
  2430                           
  2431                           
  2432                           ; 2 bytes @ 0x7
  2433  0077                     	ds	1
  2434  0078                     ?_set_segments:
  2435  0078                     ??___lldiv:	
  2436                           ; 1 bytes @ 0x8
  2437                           
  2438  0078                     ?_fputs:	
  2439                           ; 1 bytes @ 0x8
  2440                           
  2441  0078                     set_segments@segments:	
  2442                           ; 2 bytes @ 0x8
  2443                           
  2444  0078                     lcd_init@p:	
  2445                           ; 1 bytes @ 0x8
  2446                           
  2447  0078                     command@lownib:	
  2448                           ; 1 bytes @ 0x8
  2449                           
  2450  0078                     __Umul8_16@multiplier:	
  2451                           ; 1 bytes @ 0x8
  2452                           
  2453  0078                     ___xxtofl@sign:	
  2454                           ; 1 bytes @ 0x8
  2455                           
  2456  0078                     fputs@fp:	
  2457                           ; 1 bytes @ 0x8
  2458                           
  2459                           
  2460                           ; 1 bytes @ 0x8
  2461  0078                     	ds	1
  2462  0079                     ??_fputs:
  2463  0079                     ?_encode_digit:	
  2464                           ; 1 bytes @ 0x9
  2465                           
  2466  0079                     set_segments@length:	
  2467                           ; 1 bytes @ 0x9
  2468                           
  2469  0079                     encode_digit@digit:	
  2470                           ; 1 bytes @ 0x9
  2471                           
  2472  0079                     command@p:	
  2473                           ; 1 bytes @ 0x9
  2474                           
  2475  0079                     ___lodiv@counter:	
  2476                           ; 1 bytes @ 0x9
  2477                           
  2478  0079                     ___xxtofl@exp:	
  2479                           ; 1 bytes @ 0x9
  2480                           
  2481  0079                     strncmp@r:	
  2482                           ; 1 bytes @ 0x9
  2483                           
  2484  0079                     ___lldiv@quotient:	
  2485                           ; 2 bytes @ 0x9
  2486                           
  2487                           
  2488                           ; 4 bytes @ 0x9
  2489  0079                     	ds	1
  2490  007A                     ?_lcd_set_cursor:
  2491  007A                     ?_lcd_print:	
  2492                           ; 1 bytes @ 0xA
  2493                           
  2494  007A                     ??_encode_digit:	
  2495                           ; 1 bytes @ 0xA
  2496                           
  2497  007A                     set_segments@pos:	
  2498                           ; 1 bytes @ 0xA
  2499                           
  2500  007A                     encode_digit@p:	
  2501                           ; 1 bytes @ 0xA
  2502                           
  2503  007A                     lcd_set_cursor@col:	
  2504                           ; 1 bytes @ 0xA
  2505                           
  2506  007A                     lcd_print@str:	
  2507                           ; 1 bytes @ 0xA
  2508                           
  2509  007A                     ___xxtofl@arg:	
  2510                           ; 2 bytes @ 0xA
  2511                           
  2512                           
  2513                           ; 4 bytes @ 0xA
  2514  007A                     	ds	1
  2515  007B                     ??_set_segments:
  2516  007B                     lcd_set_cursor@row:	
  2517                           ; 1 bytes @ 0xB
  2518                           
  2519                           
  2520                           ; 1 bytes @ 0xB
  2521  007B                     	ds	1
  2522  007C                     ??_lcd_set_cursor:
  2523  007C                     ??_lcd_print:	
  2524                           ; 1 bytes @ 0xC
  2525                           
  2526  007C                     ??_pad:	
  2527                           ; 1 bytes @ 0xC
  2528                           
  2529                           
  2530                           ; 1 bytes @ 0xC
  2531  007C                     	ds	1
  2532  007D                     ?_print_digit:
  2533  007D                     ??_utoa:	
  2534                           ; 1 bytes @ 0xD
  2535                           
  2536  007D                     print_digit@number:	
  2537                           ; 1 bytes @ 0xD
  2538                           
  2539  007D                     lcd_print_with@p:	
  2540                           ; 1 bytes @ 0xD
  2541                           
  2542  007D                     ___lldiv@counter:	
  2543                           ; 1 bytes @ 0xD
  2544                           
  2545                           
  2546                           ; 1 bytes @ 0xD
  2547  007D                     	ds	1
  2548                           
  2549                           	psect	cstackBANK0
  2550  0020                     __pcstackBANK0:
  2551  0020                     ?_get_scale_val:
  2552  0020                     ?___fldiv:	
  2553                           ; 4 bytes @ 0x0
  2554                           
  2555  0020                     ?___aodiv:	
  2556                           ; 4 bytes @ 0x0
  2557                           
  2558  0020                     ?___aomod:	
  2559                           ; 8 bytes @ 0x0
  2560                           
  2561  0020                     ?___lodiv:	
  2562                           ; 8 bytes @ 0x0
  2563                           
  2564  0020                     ?___lomod:	
  2565                           ; 8 bytes @ 0x0
  2566                           
  2567  0020                     set_segments@k:	
  2568                           ; 8 bytes @ 0x0
  2569                           
  2570  0020                     get_scale_val@scale_avg_count:	
  2571                           ; 1 bytes @ 0x0
  2572                           
  2573  0020                     lcd_print@cmd:	
  2574                           ; 1 bytes @ 0x0
  2575                           
  2576  0020                     fputs@c:	
  2577                           ; 1 bytes @ 0x0
  2578                           
  2579  0020                     lcd_set_cursor@row_offsets:	
  2580                           ; 1 bytes @ 0x0
  2581                           
  2582  0020                     ___fldiv@a:	
  2583                           ; 4 bytes @ 0x0
  2584                           
  2585  0020                     ___aodiv@divisor:	
  2586                           ; 4 bytes @ 0x0
  2587                           
  2588  0020                     ___aomod@divisor:	
  2589                           ; 8 bytes @ 0x0
  2590                           
  2591  0020                     ___lodiv@divisor:	
  2592                           ; 8 bytes @ 0x0
  2593                           
  2594  0020                     ___lomod@divisor:	
  2595                           ; 8 bytes @ 0x0
  2596                           
  2597                           
  2598                           ; 8 bytes @ 0x0
  2599  0020                     	ds	1
  2600  0021                     set_segments@p:
  2601  0021                     lcd_print@p:	
  2602                           ; 1 bytes @ 0x1
  2603                           
  2604  0021                     fputs@i:	
  2605                           ; 1 bytes @ 0x1
  2606                           
  2607                           
  2608                           ; 2 bytes @ 0x1
  2609  0021                     	ds	1
  2610  0022                     ??_print_digit:
  2611                           
  2612                           ; 1 bytes @ 0x2
  2613  0022                     	ds	1
  2614  0023                     fputs@s:
  2615                           
  2616                           ; 1 bytes @ 0x3
  2617  0023                     	ds	1
  2618  0024                     ??_get_scale_val:
  2619  0024                     ?_pad:	
  2620                           ; 1 bytes @ 0x4
  2621                           
  2622  0024                     lcd_set_cursor@cmd:	
  2623                           ; 2 bytes @ 0x4
  2624                           
  2625  0024                     pad@buf:	
  2626                           ; 1 bytes @ 0x4
  2627                           
  2628  0024                     ___fldiv@b:	
  2629                           ; 1 bytes @ 0x4
  2630                           
  2631                           
  2632                           ; 4 bytes @ 0x4
  2633  0024                     	ds	1
  2634  0025                     lcd_set_cursor@p:
  2635  0025                     pad@p:	
  2636                           ; 1 bytes @ 0x5
  2637                           
  2638                           
  2639                           ; 2 bytes @ 0x5
  2640  0025                     	ds	1
  2641  0026                     ??_lcd_clear:
  2642  0026                     ?_lcd_print_with:	
  2643                           ; 1 bytes @ 0x6
  2644                           
  2645  0026                     lcd_print_with@str:	
  2646                           ; 1 bytes @ 0x6
  2647                           
  2648  0026                     print_digit@data:	
  2649                           ; 2 bytes @ 0x6
  2650                           
  2651                           
  2652                           ; 4 bytes @ 0x6
  2653  0026                     	ds	1
  2654  0027                     pad@i:
  2655                           
  2656                           ; 2 bytes @ 0x7
  2657  0027                     	ds	1
  2658  0028                     ??___fldiv:
  2659  0028                     lcd_clear@row:	
  2660                           ; 1 bytes @ 0x8
  2661                           
  2662  0028                     lcd_print_with@col:	
  2663                           ; 1 bytes @ 0x8
  2664                           
  2665  0028                     get_scale_val@weight_add:	
  2666                           ; 1 bytes @ 0x8
  2667                           
  2668  0028                     ___aodiv@dividend:	
  2669                           ; 4 bytes @ 0x8
  2670                           
  2671  0028                     ___aomod@dividend:	
  2672                           ; 8 bytes @ 0x8
  2673                           
  2674  0028                     ___lodiv@dividend:	
  2675                           ; 8 bytes @ 0x8
  2676                           
  2677  0028                     ___lomod@dividend:	
  2678                           ; 8 bytes @ 0x8
  2679                           
  2680                           
  2681                           ; 8 bytes @ 0x8
  2682  0028                     	ds	1
  2683  0029                     lcd_clear@col:
  2684  0029                     lcd_print_with@row:	
  2685                           ; 1 bytes @ 0x9
  2686                           
  2687  0029                     pad@w:	
  2688                           ; 1 bytes @ 0x9
  2689                           
  2690                           
  2691                           ; 2 bytes @ 0x9
  2692  0029                     	ds	1
  2693  002A                     ??_lcd_print_with:
  2694  002A                     print_digit@p:	
  2695                           ; 1 bytes @ 0xA
  2696                           
  2697  002A                     lcd_clear@p:	
  2698                           ; 1 bytes @ 0xA
  2699                           
  2700                           
  2701                           ; 1 bytes @ 0xA
  2702  002A                     	ds	1
  2703  002B                     print_digit@tmp:
  2704  002B                     pad@fp:	
  2705                           ; 1 bytes @ 0xB
  2706                           
  2707                           
  2708                           ; 1 bytes @ 0xB
  2709  002B                     	ds	1
  2710  002C                     ??_initialize_digit:
  2711  002C                     get_scale_val@j:	
  2712                           ; 1 bytes @ 0xC
  2713                           
  2714                           
  2715                           ; 1 bytes @ 0xC
  2716  002C                     	ds	1
  2717  002D                     initialize_digit@p:
  2718  002D                     get_scale_val@weight_count:	
  2719                           ; 1 bytes @ 0xD
  2720                           
  2721  002D                     ___fldiv@rem:	
  2722                           ; 4 bytes @ 0xD
  2723                           
  2724                           
  2725                           ; 4 bytes @ 0xD
  2726  002D                     	ds	3
  2727  0030                     ?_dtoa:
  2728  0030                     ?_utoa:	
  2729                           ; 2 bytes @ 0x10
  2730                           
  2731  0030                     dtoa@d:	
  2732                           ; 2 bytes @ 0x10
  2733                           
  2734  0030                     utoa@d:	
  2735                           ; 8 bytes @ 0x10
  2736                           
  2737                           
  2738                           ; 8 bytes @ 0x10
  2739  0030                     	ds	1
  2740  0031                     get_scale_val@i:
  2741  0031                     ___fldiv@sign:	
  2742                           ; 1 bytes @ 0x11
  2743                           
  2744                           
  2745                           ; 1 bytes @ 0x11
  2746  0031                     	ds	1
  2747  0032                     get_scale_val@p:
  2748  0032                     ___fldiv@new_exp:	
  2749                           ; 1 bytes @ 0x12
  2750                           
  2751                           
  2752                           ; 2 bytes @ 0x12
  2753  0032                     	ds	2
  2754  0034                     ___fldiv@grs:
  2755                           
  2756                           ; 4 bytes @ 0x14
  2757  0034                     	ds	4
  2758  0038                     ??_dtoa:
  2759  0038                     ___fldiv@bexp:	
  2760                           ; 1 bytes @ 0x18
  2761                           
  2762  0038                     utoa@p:	
  2763                           ; 1 bytes @ 0x18
  2764                           
  2765                           
  2766                           ; 2 bytes @ 0x18
  2767  0038                     	ds	1
  2768  0039                     ___fldiv@aexp:
  2769                           
  2770                           ; 1 bytes @ 0x19
  2771  0039                     	ds	1
  2772  003A                     ?___flmul:
  2773  003A                     utoa@fp:	
  2774                           ; 4 bytes @ 0x1A
  2775                           
  2776  003A                     ___flmul@b:	
  2777                           ; 1 bytes @ 0x1A
  2778                           
  2779                           
  2780                           ; 4 bytes @ 0x1A
  2781  003A                     	ds	1
  2782  003B                     _dtoa$1239:
  2783  003B                     utoa@w:	
  2784                           ; 2 bytes @ 0x1B
  2785                           
  2786                           
  2787                           ; 2 bytes @ 0x1B
  2788  003B                     	ds	2
  2789  003D                     dtoa@p:
  2790  003D                     utoa@n:	
  2791                           ; 2 bytes @ 0x1D
  2792                           
  2793                           
  2794                           ; 8 bytes @ 0x1D
  2795  003D                     	ds	1
  2796  003E                     ___flmul@a:
  2797                           
  2798                           ; 4 bytes @ 0x1E
  2799  003E                     	ds	1
  2800  003F                     dtoa@fp:
  2801                           
  2802                           ; 1 bytes @ 0x1F
  2803  003F                     	ds	1
  2804  0040                     dtoa@w:
  2805                           
  2806                           ; 2 bytes @ 0x20
  2807  0040                     	ds	2
  2808  0042                     ??___flmul:
  2809  0042                     dtoa@s:	
  2810                           ; 1 bytes @ 0x22
  2811                           
  2812                           
  2813                           ; 2 bytes @ 0x22
  2814  0042                     	ds	2
  2815  0044                     dtoa@n:
  2816                           
  2817                           ; 8 bytes @ 0x24
  2818  0044                     	ds	1
  2819  0045                     utoa@i:
  2820                           
  2821                           ; 2 bytes @ 0x25
  2822  0045                     	ds	2
  2823  0047                     ___flmul@sign:
  2824                           
  2825                           ; 1 bytes @ 0x27
  2826  0047                     	ds	1
  2827  0048                     ___flmul@grs:
  2828                           
  2829                           ; 4 bytes @ 0x28
  2830  0048                     	ds	4
  2831  004C                     ___flmul@aexp:
  2832  004C                     dtoa@i:	
  2833                           ; 1 bytes @ 0x2C
  2834                           
  2835                           
  2836                           ; 2 bytes @ 0x2C
  2837  004C                     	ds	1
  2838  004D                     ___flmul@bexp:
  2839                           
  2840                           ; 1 bytes @ 0x2D
  2841  004D                     	ds	1
  2842  004E                     ?_vfpfcnvrt:
  2843  004E                     vfpfcnvrt@fmt:	
  2844                           ; 2 bytes @ 0x2E
  2845                           
  2846  004E                     ___flmul@prod:	
  2847                           ; 1 bytes @ 0x2E
  2848                           
  2849                           
  2850                           ; 4 bytes @ 0x2E
  2851  004E                     	ds	1
  2852  004F                     vfpfcnvrt@ap:
  2853                           
  2854                           ; 1 bytes @ 0x2F
  2855  004F                     	ds	1
  2856  0050                     ??_vfpfcnvrt:
  2857                           
  2858                           ; 1 bytes @ 0x30
  2859  0050                     	ds	2
  2860  0052                     ___flmul@temp:
  2861                           
  2862                           ; 2 bytes @ 0x32
  2863  0052                     	ds	2
  2864  0054                     ?___fltol:
  2865  0054                     ___fltol@f1:	
  2866                           ; 4 bytes @ 0x34
  2867                           
  2868                           
  2869                           ; 4 bytes @ 0x34
  2870  0054                     	ds	4
  2871  0058                     ??___fltol:
  2872                           
  2873                           ; 1 bytes @ 0x38
  2874  0058                     	ds	4
  2875  005C                     vfpfcnvrt@ll:
  2876                           
  2877                           ; 8 bytes @ 0x3C
  2878  005C                     	ds	1
  2879  005D                     ___fltol@sign1:
  2880                           
  2881                           ; 1 bytes @ 0x3D
  2882  005D                     	ds	1
  2883  005E                     ___fltol@exp1:
  2884                           
  2885                           ; 1 bytes @ 0x3E
  2886  005E                     	ds	1
  2887  005F                     ??_scale_convert_gram:
  2888                           
  2889                           ; 1 bytes @ 0x3F
  2890  005F                     	ds	5
  2891  0064                     vfpfcnvrt@llu:
  2892                           
  2893                           ; 8 bytes @ 0x44
  2894  0064                     	ds	3
  2895  0067                     scale_convert_gram@temp:
  2896                           
  2897                           ; 4 bytes @ 0x47
  2898  0067                     	ds	4
  2899  006B                     scale_convert_gram@p:
  2900                           
  2901                           ; 1 bytes @ 0x4B
  2902  006B                     	ds	1
  2903  006C                     calc_percentage@p:
  2904  006C                     vfpfcnvrt@fp:	
  2905                           ; 1 bytes @ 0x4C
  2906                           
  2907                           
  2908                           ; 1 bytes @ 0x4C
  2909  006C                     	ds	1
  2910  006D                     ?_vfprintf:
  2911  006D                     vfprintf@fmt:	
  2912                           ; 2 bytes @ 0x4D
  2913                           
  2914                           
  2915                           ; 2 bytes @ 0x4D
  2916  006D                     	ds	2
  2917  006F                     vfprintf@ap:
  2918                           
  2919                           ; 1 bytes @ 0x4F
  2920  006F                     	ds	1
  2921                           
  2922                           	psect	maintext
  2923  1678                     __pmaintext:	
  2924 ;;
  2925 ;;Main: autosize = 0, tempsize = 2, incstack = 0, save=0
  2926 ;;
  2927 ;; *************** function _main *****************
  2928 ;; Defined at:
  2929 ;;		line 9 in file "main.c"
  2930 ;; Parameters:    Size  Location     Type
  2931 ;;		None
  2932 ;; Auto vars:     Size  Location     Type
  2933 ;;  loadcell       12   62[BANK1 ] struct .
  2934 ;;  drink           6   74[BANK1 ] struct .
  2935 ;;  lcd             4   56[BANK1 ] struct .
  2936 ;;  tm1637          2   60[BANK1 ] struct .
  2937 ;; Return value:  Size  Location     Type
  2938 ;;                  1    wreg      void 
  2939 ;; Registers used:
  2940 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  2941 ;; Tracked objects:
  2942 ;;		On entry : B1F/0
  2943 ;;		On exit  : 0/0
  2944 ;;		Unchanged: 0/0
  2945 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  2946 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2947 ;;      Locals:         0       0      24       0       0       0       0       0       0       0       0       0       
      +0       0
  2948 ;;      Temps:          0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0
  2949 ;;      Totals:         0       0      26       0       0       0       0       0       0       0       0       0       
      +0       0
  2950 ;;Total ram usage:       26 bytes
  2951 ;; Hardware stack levels required when called: 9
  2952 ;; This function calls:
  2953 ;;		_SYSTEM_Initialize
  2954 ;;		_calc_percentage
  2955 ;;		_initialize
  2956 ;;		_print_gram
  2957 ;; This function is called by:
  2958 ;;		Startup code after reset
  2959 ;; This function uses a non-reentrant model
  2960 ;;
  2961                           
  2962                           
  2963                           ;psect for function _main
  2964  1678                     _main:
  2965  1678                     l3831:	
  2966                           ;incstack = 0
  2967                           ; Regs used in _main: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  2968                           
  2969                           
  2970                           ;main.c: 11:     SYSTEM_Initialize();
  2971  1678  319F  274F  3196   	fcall	_SYSTEM_Initialize
  2972  167B                     l3833:
  2973                           
  2974                           ;main.c: 14:     ANSELA = 0x00;
  2975  167B  0023               	movlb	3	; select bank3
  2976  167C  018C               	clrf	12	;volatile
  2977  167D                     l3835:
  2978                           
  2979                           ;main.c: 15:     ANSELB = 0x00;
  2980  167D  018D               	clrf	13	;volatile
  2981  167E                     l3837:
  2982                           
  2983                           ;main.c: 19:     TRISB = 0x04;
  2984  167E  3004               	movlw	4
  2985  167F  0021               	movlb	1	; select bank1
  2986  1680  008D               	movwf	13	;volatile
  2987  1681                     l3839:
  2988                           
  2989                           ;main.c: 21:     LATA = 0x00;
  2990  1681  0022               	movlb	2	; select bank2
  2991  1682  018C               	clrf	12	;volatile
  2992  1683                     l3841:
  2993                           
  2994                           ;main.c: 22:     LATB = 0x00;
  2995  1683  018D               	clrf	13	;volatile
  2996  1684                     l3843:
  2997                           
  2998                           ;main.c: 25:     SSPADD = 0x13;
  2999  1684  3013               	movlw	19
  3000  1685  0024               	movlb	4	; select bank4
  3001  1686  0092               	movwf	18	;volatile
  3002  1687                     l3845:
  3003                           
  3004                           ;main.c: 26:     SSPCON1 = 0x28;
  3005  1687  3028               	movlw	40
  3006  1688  0095               	movwf	21	;volatile
  3007  1689                     l3847:
  3008                           
  3009                           ;main.c: 27:     SSPCON2 = 0x0;
  3010  1689  0196               	clrf	22	;volatile
  3011  168A                     l3849:
  3012                           
  3013                           ;main.c: 28:     SSPSTAT = 0;
  3014  168A  0194               	clrf	20	;volatile
  3015  168B                     l3851:
  3016                           
  3017                           ;main.c: 31:     LoadCell loadcell = {0x02, 0x04, 0, 0, 500};
  3018  168B  3020               	movlw	low main@F2847
  3019  168C  0086               	movwf	6
  3020  168D  3001               	movlw	high main@F2847
  3021  168E  0087               	movwf	7
  3022  168F  30DE               	movlw	low main@loadcell
  3023  1690  0084               	movwf	4
  3024  1691  3000               	movlw	high main@loadcell
  3025  1692  0085               	movwf	5
  3026  1693  300C               	movlw	12
  3027  1694  0021               	movlb	1	; select bank1
  3028  1695  00D6               	movwf	??_main^(0+128)
  3029  1696                     u4590:
  3030  1696  0016               	moviw fsr1++
  3031  1697  001A               	movwi fsr0++
  3032  1698  0BD6               	decfsz	??_main^(0+128),f
  3033  1699  2E96               	goto	u4590
  3034  169A                     l3853:
  3035                           
  3036                           ;main.c: 33:     Lcd lcd = {0x27, 16, 2, 0};
  3037  169A  0022               	movlb	2	; select bank2
  3038  169B  0841               	movf	(main@F2849+3)^(0+256),w
  3039  169C  0021               	movlb	1	; select bank1
  3040  169D  00DB               	movwf	(main@lcd+3)^(0+128)
  3041  169E  0022               	movlb	2	; select bank2
  3042  169F  0840               	movf	(main@F2849+2)^(0+256),w
  3043  16A0  0021               	movlb	1	; select bank1
  3044  16A1  00DA               	movwf	(main@lcd+2)^(0+128)
  3045  16A2  0022               	movlb	2	; select bank2
  3046  16A3  083F               	movf	(main@F2849+1)^(0+256),w
  3047  16A4  0021               	movlb	1	; select bank1
  3048  16A5  00D9               	movwf	(main@lcd+1)^(0+128)
  3049  16A6  0022               	movlb	2	; select bank2
  3050  16A7  083E               	movf	main@F2849^(0+256),w
  3051  16A8  0021               	movlb	1	; select bank1
  3052  16A9  00D8               	movwf	main@lcd^(0+128)
  3053  16AA                     l3855:
  3054                           
  3055                           ;main.c: 35:     TM1637 tm1637 = {0x08, 0x10};
  3056  16AA  0022               	movlb	2	; select bank2
  3057  16AB  0843               	movf	(main@F2851+1)^(0+256),w
  3058  16AC  0021               	movlb	1	; select bank1
  3059  16AD  00DD               	movwf	(main@tm1637+1)^(0+128)
  3060  16AE  0022               	movlb	2	; select bank2
  3061  16AF  0842               	movf	main@F2851^(0+256),w
  3062  16B0  0021               	movlb	1	; select bank1
  3063  16B1  00DC               	movwf	main@tm1637^(0+128)
  3064  16B2                     l3857:
  3065                           
  3066                           ;main.c: 37:     DrinkMeter drink = {&loadcell, &lcd, &tm1637, 500, 0};
  3067  16B2  3044               	movlw	low main@F2853
  3068  16B3  0086               	movwf	6
  3069  16B4  3001               	movlw	high main@F2853
  3070  16B5  0087               	movwf	7
  3071  16B6  30EA               	movlw	low main@drink
  3072  16B7  0084               	movwf	4
  3073  16B8  3000               	movlw	high main@drink
  3074  16B9  0085               	movwf	5
  3075  16BA  3006               	movlw	6
  3076  16BB  00D6               	movwf	??_main^(0+128)
  3077  16BC                     u4600:
  3078  16BC  0016               	moviw fsr1++
  3079  16BD  001A               	movwi fsr0++
  3080  16BE  0BD6               	decfsz	??_main^(0+128),f
  3081  16BF  2EBC               	goto	u4600
  3082  16C0                     l3859:
  3083  16C0  30DE               	movlw	(low (main@loadcell| 0))& (0+255)
  3084  16C1  00D6               	movwf	??_main^(0+128)
  3085  16C2  0856               	movf	??_main^(0+128),w
  3086  16C3  00EA               	movwf	main@drink^(0+128)
  3087  16C4                     l3861:
  3088  16C4  30D8               	movlw	(low (main@lcd| 0))& (0+255)
  3089  16C5  00D6               	movwf	??_main^(0+128)
  3090  16C6  0856               	movf	??_main^(0+128),w
  3091  16C7  00EB               	movwf	(low ((main@drink| 0+1)))^(0+128)
  3092  16C8                     l3863:
  3093  16C8  30DC               	movlw	(low (main@tm1637| 0))& (0+255)
  3094  16C9  00D6               	movwf	??_main^(0+128)
  3095  16CA  0856               	movf	??_main^(0+128),w
  3096  16CB  00EC               	movwf	(low ((main@drink| 0+2)))^(0+128)
  3097  16CC                     l3865:
  3098  16CC  30F4               	movlw	244
  3099  16CD  00ED               	movwf	(main@drink^(0+128)+3)
  3100  16CE  3001               	movlw	1
  3101  16CF  00EE               	movwf	(main@drink^(0+128)+4)
  3102  16D0                     l3867:
  3103  16D0  01EF               	clrf	(main@drink^(0+128)+5)
  3104  16D1                     l3869:
  3105                           
  3106                           ;main.c: 39:     initialize(&drink);
  3107  16D1  30EA               	movlw	(low (main@drink| 0))& (0+255)
  3108  16D2  3197  2771  3196   	fcall	_initialize
  3109  16D5                     l3871:
  3110                           
  3111                           ;main.c: 42:         calc_percentage(&drink);
  3112  16D5  30EA               	movlw	(low (main@drink| 0))& (0+255)
  3113  16D6  3189  2191  3196   	fcall	_calc_percentage
  3114  16D9                     l3873:
  3115                           
  3116                           ;main.c: 43:         print_gram(&drink);
  3117  16D9  30EA               	movlw	(low (main@drink| 0))& (0+255)
  3118  16DA  3194  24BB  3196   	fcall	_print_gram
  3119  16DD                     l3875:
  3120                           
  3121                           ;main.c: 45:         _delay((unsigned long)((500)*(8000000/4000.0)));
  3122  16DD  3006               	movlw	6
  3123  16DE  0021               	movlb	1	; select bank1
  3124  16DF  00D7               	movwf	(??_main^(0+128)+1)
  3125  16E0  3013               	movlw	19
  3126  16E1  00D6               	movwf	??_main^(0+128)
  3127  16E2  30AD               	movlw	173
  3128  16E3                     u4617:
  3129  16E3  0B89               	decfsz	9,f
  3130  16E4  2EE3               	goto	u4617
  3131  16E5  0BD6               	decfsz	??_main^(0+128),f
  3132  16E6  2EE3               	goto	u4617
  3133  16E7  0BD7               	decfsz	(??_main^(0+128)+1),f
  3134  16E8  2EE3               	goto	u4617
  3135  16E9  3200               	nop2
  3136  16EA  2ED5               	goto	l3871
  3137  16EB  3180  2802         	ljmp	start
  3138  16ED                     __end_of_main:
  3139                           
  3140                           	psect	text1
  3141  14BB                     __ptext1:	
  3142 ;; *************** function _print_gram *****************
  3143 ;; Defined at:
  3144 ;;		line 39 in file "drink_meter.c"
  3145 ;; Parameters:    Size  Location     Type
  3146 ;;  p               1    wreg     PTR struct .
  3147 ;;		 -> main@drink(6), 
  3148 ;; Auto vars:     Size  Location     Type
  3149 ;;  p               1   53[BANK1 ] PTR struct .
  3150 ;;		 -> main@drink(6), 
  3151 ;;  row2           16   37[BANK1 ] unsigned char [16]
  3152 ;;  row1           16   21[BANK1 ] unsigned char [16]
  3153 ;; Return value:  Size  Location     Type
  3154 ;;                  1    wreg      void 
  3155 ;; Registers used:
  3156 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  3157 ;; Tracked objects:
  3158 ;;		On entry : 0/0
  3159 ;;		On exit  : 0/0
  3160 ;;		Unchanged: 0/0
  3161 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  3162 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3163 ;;      Locals:         0       0      33       0       0       0       0       0       0       0       0       0       
      +0       0
  3164 ;;      Temps:          0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0
  3165 ;;      Totals:         0       0      35       0       0       0       0       0       0       0       0       0       
      +0       0
  3166 ;;Total ram usage:       35 bytes
  3167 ;; Hardware stack levels used: 1
  3168 ;; Hardware stack levels required when called: 8
  3169 ;; This function calls:
  3170 ;;		_lcd_clear
  3171 ;;		_lcd_print_with
  3172 ;;		_print_digit
  3173 ;;		_sprintf
  3174 ;; This function is called by:
  3175 ;;		_main
  3176 ;; This function uses a non-reentrant model
  3177 ;;
  3178                           
  3179                           
  3180                           ;psect for function _print_gram
  3181  14BB                     _print_gram:
  3182                           
  3183                           ;incstack = 0
  3184                           ; Regs used in _print_gram: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  3185                           ;print_gram@p stored from wreg
  3186  14BB  0021               	movlb	1	; select bank1
  3187  14BC  00D5               	movwf	print_gram@p^(0+128)
  3188  14BD                     l3811:
  3189                           
  3190                           ;drink_meter.c: 40:     char row1[16];;drink_meter.c: 41:     char row2[16];;drink_meter
      +                          .c: 43:     sprintf(row1, "%dg / %dg", p->loadcell->gram, p->max_gram);
  3191  14BD  301A               	movlw	low (STR_5| (0+32768))
  3192  14BE  00A5               	movwf	sprintf@fmt^(0+128)
  3193  14BF  30A0               	movlw	high (STR_5| (0+32768))
  3194  14C0  00A6               	movwf	(sprintf@fmt^(0+128)+1)
  3195  14C1  0855               	movf	print_gram@p^(0+128),w
  3196  14C2  0086               	movwf	6
  3197  14C3  0187               	clrf	7
  3198  14C4  0801               	movf	1,w
  3199  14C5  3E0A               	addlw	10
  3200  14C6  0086               	movwf	6
  3201  14C7  0187               	clrf	7
  3202  14C8  3F40               	moviw [0]fsr1
  3203  14C9  00A7               	movwf	(?_sprintf^(0+128)+2)
  3204  14CA  3F41               	moviw [1]fsr1
  3205  14CB  00A8               	movwf	((?_sprintf+1)^(0+128)+2)
  3206  14CC  0855               	movf	print_gram@p^(0+128),w
  3207  14CD  3E03               	addlw	3
  3208  14CE  0086               	movwf	6
  3209  14CF  0187               	clrf	7
  3210  14D0  3F40               	moviw [0]fsr1
  3211  14D1  00A9               	movwf	(?_sprintf^(0+128)+4)
  3212  14D2  3F41               	moviw [1]fsr1
  3213  14D3  00AA               	movwf	((?_sprintf+1)^(0+128)+4)
  3214  14D4  30B5               	movlw	(low (print_gram@row1| 0))& (0+255)
  3215  14D5  3191  2154  3194   	fcall	_sprintf
  3216                           
  3217                           ;drink_meter.c: 44:     sprintf(row2, "%d %%", p->percentage);
  3218  14D8  302C               	movlw	low (STR_6| (0+32768))
  3219  14D9  0021               	movlb	1	; select bank1
  3220  14DA  00A5               	movwf	sprintf@fmt^(0+128)
  3221  14DB  30A0               	movlw	high (STR_6| (0+32768))
  3222  14DC  00A6               	movwf	(sprintf@fmt^(0+128)+1)
  3223  14DD  0855               	movf	print_gram@p^(0+128),w
  3224  14DE  3E05               	addlw	5
  3225  14DF  0086               	movwf	6
  3226  14E0  0187               	clrf	7
  3227  14E1  0801               	movf	1,w
  3228  14E2  00B3               	movwf	??_print_gram^(0+128)
  3229  14E3  01B4               	clrf	(??_print_gram^(0+128)+1)
  3230  14E4  0833               	movf	??_print_gram^(0+128),w
  3231  14E5  00A7               	movwf	(?_sprintf^(0+128)+2)
  3232  14E6  0834               	movf	(??_print_gram+1)^(0+128),w
  3233  14E7  00A8               	movwf	((?_sprintf+1)^(0+128)+2)
  3234  14E8  30C5               	movlw	(low (print_gram@row2| 0))& (0+255)
  3235  14E9  3191  2154  3194   	fcall	_sprintf
  3236                           
  3237                           ;drink_meter.c: 46:     lcd_clear(p->lcd);
  3238  14EC  0021               	movlb	1	; select bank1
  3239  14ED  0A55               	incf	print_gram@p^(0+128),w
  3240  14EE  0086               	movwf	6
  3241  14EF  0187               	clrf	7
  3242  14F0  0801               	movf	1,w
  3243  14F1  3192  2217  3194   	fcall	_lcd_clear
  3244                           
  3245                           ;drink_meter.c: 48:     lcd_print_with(p->lcd, row1, 0, 0);
  3246  14F4  30B5               	movlw	low print_gram@row1
  3247  14F5  0020               	movlb	0	; select bank0
  3248  14F6  00A6               	movwf	lcd_print_with@str
  3249  14F7  3000               	movlw	high print_gram@row1
  3250  14F8  00A7               	movwf	lcd_print_with@str+1
  3251  14F9  01A8               	clrf	lcd_print_with@col
  3252  14FA  01A9               	clrf	lcd_print_with@row
  3253  14FB  0021               	movlb	1	; select bank1
  3254  14FC  0A55               	incf	print_gram@p^(0+128),w
  3255  14FD  0086               	movwf	6
  3256  14FE  0187               	clrf	7
  3257  14FF  0801               	movf	1,w
  3258  1500  3190  2033  3194   	fcall	_lcd_print_with
  3259                           
  3260                           ;drink_meter.c: 49:     lcd_print_with(p->lcd, row2, 0, 1);
  3261  1503  30C5               	movlw	low print_gram@row2
  3262  1504  0020               	movlb	0	; select bank0
  3263  1505  00A6               	movwf	lcd_print_with@str
  3264  1506  3000               	movlw	high print_gram@row2
  3265  1507  00A7               	movwf	lcd_print_with@str+1
  3266  1508  01A8               	clrf	lcd_print_with@col
  3267  1509  01A9               	clrf	lcd_print_with@row
  3268  150A  0AA9               	incf	lcd_print_with@row,f
  3269  150B  0021               	movlb	1	; select bank1
  3270  150C  0A55               	incf	print_gram@p^(0+128),w
  3271  150D  0086               	movwf	6
  3272  150E  0187               	clrf	7
  3273  150F  0801               	movf	1,w
  3274  1510  3190  2033  3194   	fcall	_lcd_print_with
  3275  1513                     l3813:
  3276                           
  3277                           ;drink_meter.c: 51:     print_digit(p->tm1637, p->percentage);
  3278  1513  0021               	movlb	1	; select bank1
  3279  1514  0855               	movf	print_gram@p^(0+128),w
  3280  1515  0086               	movwf	6
  3281  1516  0187               	clrf	7
  3282  1517  3F45               	moviw [5]fsr1
  3283  1518  00FD               	movwf	print_digit@number
  3284  1519  0855               	movf	print_gram@p^(0+128),w
  3285  151A  3E02               	addlw	2
  3286  151B  0086               	movwf	6
  3287  151C  0187               	clrf	7
  3288  151D  0801               	movf	1,w
  3289  151E  318B  238B  3194   	fcall	_print_digit
  3290  1521                     l366:
  3291  1521  0008               	return
  3292  1522                     __end_of_print_gram:
  3293                           
  3294                           	psect	text2
  3295  1771                     __ptext2:	
  3296 ;; *************** function _initialize *****************
  3297 ;; Defined at:
  3298 ;;		line 5 in file "drink_meter.c"
  3299 ;; Parameters:    Size  Location     Type
  3300 ;;  p               1    wreg     PTR struct .
  3301 ;;		 -> main@drink(6), 
  3302 ;; Auto vars:     Size  Location     Type
  3303 ;;  p               1   36[BANK1 ] PTR struct .
  3304 ;;		 -> main@drink(6), 
  3305 ;;  valstr         16   20[BANK1 ] unsigned char [16]
  3306 ;; Return value:  Size  Location     Type
  3307 ;;                  1    wreg      void 
  3308 ;; Registers used:
  3309 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  3310 ;; Tracked objects:
  3311 ;;		On entry : 0/0
  3312 ;;		On exit  : 0/0
  3313 ;;		Unchanged: 0/0
  3314 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  3315 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3316 ;;      Locals:         0       0      17       0       0       0       0       0       0       0       0       0       
      +0       0
  3317 ;;      Temps:          0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0
  3318 ;;      Totals:         0       0      18       0       0       0       0       0       0       0       0       0       
      +0       0
  3319 ;;Total ram usage:       18 bytes
  3320 ;; Hardware stack levels used: 1
  3321 ;; Hardware stack levels required when called: 8
  3322 ;; This function calls:
  3323 ;;		_get_scale_val
  3324 ;;		_initialize_digit
  3325 ;;		_lcd_backlight
  3326 ;;		_lcd_clear
  3327 ;;		_lcd_init
  3328 ;;		_lcd_print
  3329 ;;		_lcd_print_with
  3330 ;;		_print_digit
  3331 ;;		_sprintf
  3332 ;; This function is called by:
  3333 ;;		_main
  3334 ;; This function uses a non-reentrant model
  3335 ;;
  3336                           
  3337                           
  3338                           ;psect for function _initialize
  3339  1771                     _initialize:
  3340                           
  3341                           ;incstack = 0
  3342                           ; Regs used in _initialize: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  3343                           ;initialize@p stored from wreg
  3344  1771  0021               	movlb	1	; select bank1
  3345  1772  00C4               	movwf	initialize@p^(0+128)
  3346  1773                     l3791:
  3347                           
  3348                           ;drink_meter.c: 6:     lcd_init(p->lcd);
  3349  1773  0A44               	incf	initialize@p^(0+128),w
  3350  1774  0086               	movwf	6
  3351  1775  0187               	clrf	7
  3352  1776  0801               	movf	1,w
  3353  1777  318A  2236  3197   	fcall	_lcd_init
  3354                           
  3355                           ;drink_meter.c: 7:     lcd_backlight(p->lcd);
  3356  177A  0021               	movlb	1	; select bank1
  3357  177B  0A44               	incf	initialize@p^(0+128),w
  3358  177C  0086               	movwf	6
  3359  177D  0187               	clrf	7
  3360  177E  0801               	movf	1,w
  3361  177F  3190  2006  3197   	fcall	_lcd_backlight
  3362  1782                     l3793:
  3363                           
  3364                           ;drink_meter.c: 9:     lcd_print_with(p->lcd, "Initialize", 0, 0);
  3365  1782  300F               	movlw	low (STR_2| (0+32768))
  3366  1783  0020               	movlb	0	; select bank0
  3367  1784  00A6               	movwf	lcd_print_with@str
  3368  1785  30A0               	movlw	high (STR_2| (0+32768))
  3369  1786  00A7               	movwf	lcd_print_with@str+1
  3370  1787  01A8               	clrf	lcd_print_with@col
  3371  1788  01A9               	clrf	lcd_print_with@row
  3372  1789  0021               	movlb	1	; select bank1
  3373  178A  0A44               	incf	initialize@p^(0+128),w
  3374  178B  0086               	movwf	6
  3375  178C  0187               	clrf	7
  3376  178D  0801               	movf	1,w
  3377  178E  3190  2033  3197   	fcall	_lcd_print_with
  3378  1791                     l3795:
  3379                           
  3380                           ;drink_meter.c: 10:     lcd_print_with(p->lcd, "Load cell Unit", 0, 1);
  3381  1791  3000               	movlw	low (STR_3| (0+32768))
  3382  1792  0020               	movlb	0	; select bank0
  3383  1793  00A6               	movwf	lcd_print_with@str
  3384  1794  30A0               	movlw	high (STR_3| (0+32768))
  3385  1795  00A7               	movwf	lcd_print_with@str+1
  3386  1796  01A8               	clrf	lcd_print_with@col
  3387  1797  01A9               	clrf	lcd_print_with@row
  3388  1798  0AA9               	incf	lcd_print_with@row,f
  3389  1799  0021               	movlb	1	; select bank1
  3390  179A  0A44               	incf	initialize@p^(0+128),w
  3391  179B  0086               	movwf	6
  3392  179C  0187               	clrf	7
  3393  179D  0801               	movf	1,w
  3394  179E  3190  2033  3197   	fcall	_lcd_print_with
  3395                           
  3396                           ;drink_meter.c: 12:     initialize_digit(p->tm1637);
  3397  17A1  0021               	movlb	1	; select bank1
  3398  17A2  0844               	movf	initialize@p^(0+128),w
  3399  17A3  3E02               	addlw	2
  3400  17A4  0086               	movwf	6
  3401  17A5  0187               	clrf	7
  3402  17A6  0801               	movf	1,w
  3403  17A7  319F  27D9  3197   	fcall	_initialize_digit
  3404                           
  3405                           ;drink_meter.c: 13:     print_digit(p->tm1637, 0);
  3406  17AA  01FD               	clrf	print_digit@number
  3407  17AB  0021               	movlb	1	; select bank1
  3408  17AC  0844               	movf	initialize@p^(0+128),w
  3409  17AD  3E02               	addlw	2
  3410  17AE  0086               	movwf	6
  3411  17AF  0187               	clrf	7
  3412  17B0  0801               	movf	1,w
  3413  17B1  318B  238B  3197   	fcall	_print_digit
  3414                           
  3415                           ;drink_meter.c: 16:     p->loadcell->weight_zero = get_scale_val(p->loadcell, 50);
  3416  17B4  3032               	movlw	50
  3417  17B5  0021               	movlb	1	; select bank1
  3418  17B6  00B3               	movwf	??_initialize^(0+128)
  3419  17B7  0833               	movf	??_initialize^(0+128),w
  3420  17B8  0020               	movlb	0	; select bank0
  3421  17B9  00A0               	movwf	get_scale_val@scale_avg_count
  3422  17BA  0021               	movlb	1	; select bank1
  3423  17BB  0844               	movf	initialize@p^(0+128),w
  3424  17BC  0086               	movwf	6
  3425  17BD  0187               	clrf	7
  3426  17BE  0801               	movf	1,w
  3427  17BF  318C  2445  3197   	fcall	_get_scale_val
  3428  17C2  0021               	movlb	1	; select bank1
  3429  17C3  0844               	movf	initialize@p^(0+128),w
  3430  17C4  0086               	movwf	6
  3431  17C5  0187               	clrf	7
  3432  17C6  0801               	movf	1,w
  3433  17C7  3E02               	addlw	2
  3434  17C8  0086               	movwf	6
  3435  17C9  0187               	clrf	7
  3436  17CA  0020               	movlb	0	; select bank0
  3437  17CB  0820               	movf	?_get_scale_val,w
  3438  17CC  3FC0               	movwi [0]fsr1
  3439  17CD  0821               	movf	?_get_scale_val+1,w
  3440  17CE  3FC1               	movwi [1]fsr1
  3441  17CF  0822               	movf	?_get_scale_val+2,w
  3442  17D0  3FC2               	movwi [2]fsr1
  3443  17D1  0823               	movf	?_get_scale_val+3,w
  3444  17D2  3FC3               	movwi [3]fsr1
  3445  17D3                     l3797:
  3446                           
  3447                           ;drink_meter.c: 18:     char valstr[16];;drink_meter.c: 19:     sprintf(valstr, "%lu val
      +                          ", p->loadcell->weight_dat);
  3448  17D3  3024               	movlw	low (STR_4| (0+32768))
  3449  17D4  0021               	movlb	1	; select bank1
  3450  17D5  00A5               	movwf	sprintf@fmt^(0+128)
  3451  17D6  30A0               	movlw	high (STR_4| (0+32768))
  3452  17D7  00A6               	movwf	(sprintf@fmt^(0+128)+1)
  3453  17D8  0844               	movf	initialize@p^(0+128),w
  3454  17D9  0086               	movwf	6
  3455  17DA  0187               	clrf	7
  3456  17DB  0801               	movf	1,w
  3457  17DC  3E06               	addlw	6
  3458  17DD  0086               	movwf	6
  3459  17DE  0187               	clrf	7
  3460  17DF  3F40               	moviw [0]fsr1
  3461  17E0  00A7               	movwf	(?_sprintf^(0+128)+2)
  3462  17E1  3F41               	moviw [1]fsr1
  3463  17E2  00A8               	movwf	((?_sprintf+1)^(0+128)+2)
  3464  17E3  3F42               	moviw [2]fsr1
  3465  17E4  00A9               	movwf	((?_sprintf+2)^(0+128)+2)
  3466  17E5  3F43               	moviw [3]fsr1
  3467  17E6  00AA               	movwf	((?_sprintf+3)^(0+128)+2)
  3468  17E7  30B4               	movlw	(low (initialize@valstr| 0))& (0+255)
  3469  17E8  3191  2154  3197   	fcall	_sprintf
  3470  17EB                     l3799:
  3471                           
  3472                           ;drink_meter.c: 21:     lcd_clear(p->lcd);
  3473  17EB  0021               	movlb	1	; select bank1
  3474  17EC  0A44               	incf	initialize@p^(0+128),w
  3475  17ED  0086               	movwf	6
  3476  17EE  0187               	clrf	7
  3477  17EF  0801               	movf	1,w
  3478  17F0  3192  2217  3197   	fcall	_lcd_clear
  3479  17F3                     l3801:
  3480                           
  3481                           ;drink_meter.c: 22:     lcd_print(p->lcd, valstr);
  3482  17F3  30B4               	movlw	low initialize@valstr
  3483  17F4  00FA               	movwf	lcd_print@str
  3484  17F5  3000               	movlw	high initialize@valstr
  3485  17F6  00FB               	movwf	lcd_print@str+1
  3486  17F7  0021               	movlb	1	; select bank1
  3487  17F8  0A44               	incf	initialize@p^(0+128),w
  3488  17F9  0086               	movwf	6
  3489  17FA  0187               	clrf	7
  3490  17FB  0801               	movf	1,w
  3491  17FC  3191  210C  3197   	fcall	_lcd_print
  3492  17FF                     l358:
  3493  17FF  0008               	return
  3494  1800                     __end_of_initialize:
  3495                           
  3496                           	psect	text3
  3497  1154                     __ptext3:	
  3498 ;; *************** function _sprintf *****************
  3499 ;; Defined at:
  3500 ;;		line 9 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\nf_sprintf.c"
  3501 ;; Parameters:    Size  Location     Type
  3502 ;;  s               1    wreg     PTR unsigned char 
  3503 ;;		 -> print_gram@row2(16), print_gram@row1(16), initialize@valstr(16), 
  3504 ;;  fmt             2    5[BANK1 ] PTR const unsigned char 
  3505 ;;		 -> STR_6(6), STR_5(10), STR_4(8), 
  3506 ;; Auto vars:     Size  Location     Type
  3507 ;;  s               1   12[BANK1 ] PTR unsigned char 
  3508 ;;		 -> print_gram@row2(16), print_gram@row1(16), initialize@valstr(16), 
  3509 ;;  f               5   14[BANK1 ] struct _IO_FILE
  3510 ;;  ret             2    0        int 
  3511 ;;  ap              1   13[BANK1 ] PTR void [1]
  3512 ;;		 -> ?_sprintf(2), 
  3513 ;; Return value:  Size  Location     Type
  3514 ;;                  2    5[BANK1 ] int 
  3515 ;; Registers used:
  3516 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  3517 ;; Tracked objects:
  3518 ;;		On entry : 0/0
  3519 ;;		On exit  : 0/0
  3520 ;;		Unchanged: 0/0
  3521 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  3522 ;;      Params:         0       0       6       0       0       0       0       0       0       0       0       0       
      +0       0
  3523 ;;      Locals:         0       0       7       0       0       0       0       0       0       0       0       0       
      +0       0
  3524 ;;      Temps:          0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0
  3525 ;;      Totals:         0       0      14       0       0       0       0       0       0       0       0       0       
      +0       0
  3526 ;;Total ram usage:       14 bytes
  3527 ;; Hardware stack levels used: 1
  3528 ;; Hardware stack levels required when called: 7
  3529 ;; This function calls:
  3530 ;;		_vfprintf
  3531 ;; This function is called by:
  3532 ;;		_initialize
  3533 ;;		_print_gram
  3534 ;; This function uses a non-reentrant model
  3535 ;;
  3536                           
  3537                           
  3538                           ;psect for function _sprintf
  3539  1154                     _sprintf:
  3540                           
  3541                           ;incstack = 0
  3542                           ; Regs used in _sprintf: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  3543                           ;sprintf@s stored from wreg
  3544  1154  0021               	movlb	1	; select bank1
  3545  1155  00AC               	movwf	sprintf@s^(0+128)
  3546  1156                     l3637:
  3547  1156  30A7               	movlw	(low ((?_sprintf| 0+2)))& (0+255)
  3548  1157  00AB               	movwf	??_sprintf^(0+128)
  3549  1158  082B               	movf	??_sprintf^(0+128),w
  3550  1159  00AD               	movwf	sprintf@ap^(0+128)
  3551  115A  082C               	movf	sprintf@s^(0+128),w
  3552  115B  00AB               	movwf	??_sprintf^(0+128)
  3553  115C  082B               	movf	??_sprintf^(0+128),w
  3554  115D  00AE               	movwf	sprintf@f^(0+128)
  3555  115E                     l3639:
  3556  115E  01AF               	clrf	(sprintf@f^(0+128)+1)
  3557  115F  01B0               	clrf	((sprintf@f+1)^(0+128)+1)
  3558  1160                     l3641:
  3559  1160  01B1               	clrf	(sprintf@f^(0+128)+3)
  3560  1161  01B2               	clrf	((sprintf@f+1)^(0+128)+3)
  3561  1162                     l3643:
  3562  1162  0826               	movf	(sprintf@fmt+1)^(0+128),w
  3563  1163  0020               	movlb	0	; select bank0
  3564  1164  00EE               	movwf	vfprintf@fmt+1
  3565  1165  0021               	movlb	1	; select bank1
  3566  1166  0825               	movf	sprintf@fmt^(0+128),w
  3567  1167  0020               	movlb	0	; select bank0
  3568  1168  00ED               	movwf	vfprintf@fmt
  3569  1169  30AD               	movlw	(low (sprintf@ap| 0))& (0+255)
  3570  116A  0021               	movlb	1	; select bank1
  3571  116B  00AB               	movwf	??_sprintf^(0+128)
  3572  116C  082B               	movf	??_sprintf^(0+128),w
  3573  116D  0020               	movlb	0	; select bank0
  3574  116E  00EF               	movwf	vfprintf@ap
  3575  116F  30AE               	movlw	(low (sprintf@f| 0))& (0+255)
  3576  1170  3191  21DE  3191   	fcall	_vfprintf
  3577  1173                     l3645:
  3578  1173  0021               	movlb	1	; select bank1
  3579  1174  082F               	movf	(sprintf@f^(0+128)+1),w
  3580  1175  072C               	addwf	sprintf@s^(0+128),w
  3581  1176  00AB               	movwf	??_sprintf^(0+128)
  3582  1177  082B               	movf	??_sprintf^(0+128),w
  3583  1178  0086               	movwf	6
  3584  1179  0187               	clrf	7
  3585  117A  0181               	clrf	1
  3586  117B                     l982:
  3587  117B  0008               	return
  3588  117C                     __end_of_sprintf:
  3589                           
  3590                           	psect	text4
  3591  11DE                     __ptext4:	
  3592 ;; *************** function _vfprintf *****************
  3593 ;; Defined at:
  3594 ;;		line 1390 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c"
  3595 ;; Parameters:    Size  Location     Type
  3596 ;;  fp              1    wreg     PTR struct _IO_FILE
  3597 ;;		 -> sprintf@f(5), 
  3598 ;;  fmt             2   77[BANK0 ] PTR const unsigned char 
  3599 ;;		 -> STR_6(6), STR_5(10), STR_4(8), 
  3600 ;;  ap              1   79[BANK0 ] PTR PTR void 
  3601 ;;		 -> sprintf@ap(1), 
  3602 ;; Auto vars:     Size  Location     Type
  3603 ;;  fp              1    2[BANK1 ] PTR struct _IO_FILE
  3604 ;;		 -> sprintf@f(5), 
  3605 ;;  cfmt            2    3[BANK1 ] PTR unsigned char 
  3606 ;;		 -> STR_6(6), STR_5(10), STR_4(8), 
  3607 ;; Return value:  Size  Location     Type
  3608 ;;                  2   77[BANK0 ] int 
  3609 ;; Registers used:
  3610 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  3611 ;; Tracked objects:
  3612 ;;		On entry : 0/0
  3613 ;;		On exit  : 0/0
  3614 ;;		Unchanged: 0/0
  3615 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  3616 ;;      Params:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3617 ;;      Locals:         0       0       3       0       0       0       0       0       0       0       0       0       
      +0       0
  3618 ;;      Temps:          0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0
  3619 ;;      Totals:         0       3       5       0       0       0       0       0       0       0       0       0       
      +0       0
  3620 ;;Total ram usage:        8 bytes
  3621 ;; Hardware stack levels used: 1
  3622 ;; Hardware stack levels required when called: 6
  3623 ;; This function calls:
  3624 ;;		_vfpfcnvrt
  3625 ;; This function is called by:
  3626 ;;		_sprintf
  3627 ;; This function uses a non-reentrant model
  3628 ;;
  3629                           
  3630                           
  3631                           ;psect for function _vfprintf
  3632  11DE                     _vfprintf:
  3633                           
  3634                           ;incstack = 0
  3635                           ; Regs used in _vfprintf: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  3636                           ;vfprintf@fp stored from wreg
  3637  11DE  0021               	movlb	1	; select bank1
  3638  11DF  00A2               	movwf	vfprintf@fp^(0+128)
  3639  11E0                     l3457:
  3640                           
  3641                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 1390: int vfprint
      +                          f(FILE *fp, const char *fmt, va_list ap);C:\Program Files\Microchip\xc8\v2.32\pic\source
      +                          s\c99\common\doprnt.c: 1391: {;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\comm
      +                          on\doprnt.c: 1393:     char *cfmt;;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\
      +                          common\doprnt.c: 1395:     cfmt = (char *)fmt;
  3642  11E0  0020               	movlb	0	; select bank0
  3643  11E1  086E               	movf	vfprintf@fmt+1,w
  3644  11E2  0021               	movlb	1	; select bank1
  3645  11E3  00A4               	movwf	(vfprintf@cfmt+1)^(0+128)
  3646  11E4  0020               	movlb	0	; select bank0
  3647  11E5  086D               	movf	vfprintf@fmt,w
  3648  11E6  0021               	movlb	1	; select bank1
  3649  11E7  00A3               	movwf	vfprintf@cfmt^(0+128)
  3650  11E8                     l3459:
  3651                           
  3652                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 1396:     nout = 
      +                          0;
  3653  11E8  0022               	movlb	2	; select bank2
  3654  11E9  01CE               	clrf	_nout^(0+256)
  3655  11EA  01CF               	clrf	(_nout+1)^(0+256)
  3656                           
  3657                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 1397:     while (
      +                          *cfmt) {
  3658  11EB  2A04               	goto	l3463
  3659  11EC                     l3461:
  3660                           
  3661                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 1398:         nou
      +                          t += vfpfcnvrt(fp, &cfmt, ap);
  3662  11EC  30A3               	movlw	(low (vfprintf@cfmt| 0))& (0+255)
  3663  11ED  00A0               	movwf	??_vfprintf^(0+128)
  3664  11EE  0820               	movf	??_vfprintf^(0+128),w
  3665  11EF  0020               	movlb	0	; select bank0
  3666  11F0  00CE               	movwf	vfpfcnvrt@fmt
  3667  11F1  086F               	movf	vfprintf@ap,w
  3668  11F2  0021               	movlb	1	; select bank1
  3669  11F3  00A1               	movwf	(??_vfprintf+1)^(0+128)
  3670  11F4  0821               	movf	(??_vfprintf+1)^(0+128),w
  3671  11F5  0020               	movlb	0	; select bank0
  3672  11F6  00CF               	movwf	vfpfcnvrt@ap
  3673  11F7  0021               	movlb	1	; select bank1
  3674  11F8  0822               	movf	vfprintf@fp^(0+128),w
  3675  11F9  3183  238E  3191   	fcall	_vfpfcnvrt
  3676  11FC  0020               	movlb	0	; select bank0
  3677  11FD  084E               	movf	?_vfpfcnvrt,w
  3678  11FE  0022               	movlb	2	; select bank2
  3679  11FF  07CE               	addwf	_nout^(0+256),f
  3680  1200  0020               	movlb	0	; select bank0
  3681  1201  084F               	movf	?_vfpfcnvrt+1,w
  3682  1202  0022               	movlb	2	; select bank2
  3683  1203  3DCF               	addwfc	(_nout+1)^(0+256),f
  3684  1204                     l3463:
  3685                           
  3686                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 1397:     while (
      +                          *cfmt) {
  3687  1204  0021               	movlb	1	; select bank1
  3688  1205  0823               	movf	vfprintf@cfmt^(0+128),w
  3689  1206  0084               	movwf	4
  3690  1207  0824               	movf	(vfprintf@cfmt+1)^(0+128),w
  3691  1208  0085               	movwf	5
  3692  1209  0012               	moviw fsr0++
  3693  120A  1D03               	btfss	3,2
  3694  120B  2A0D               	goto	u4201
  3695  120C  2A0E               	goto	u4200
  3696  120D                     u4201:
  3697  120D  29EC               	goto	l3461
  3698  120E                     u4200:
  3699  120E                     l3465:
  3700                           
  3701                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 1400:     return 
      +                          nout;
  3702  120E  0022               	movlb	2	; select bank2
  3703  120F  084F               	movf	(_nout+1)^(0+256),w
  3704  1210  0020               	movlb	0	; select bank0
  3705  1211  00EE               	movwf	?_vfprintf+1
  3706  1212  0022               	movlb	2	; select bank2
  3707  1213  084E               	movf	_nout^(0+256),w
  3708  1214  0020               	movlb	0	; select bank0
  3709  1215  00ED               	movwf	?_vfprintf
  3710  1216                     l1076:
  3711  1216  0008               	return
  3712  1217                     __end_of_vfprintf:
  3713                           
  3714                           	psect	text5
  3715  038E                     __ptext5:	
  3716 ;; *************** function _vfpfcnvrt *****************
  3717 ;; Defined at:
  3718 ;;		line 692 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c"
  3719 ;; Parameters:    Size  Location     Type
  3720 ;;  fp              1    wreg     PTR struct _IO_FILE
  3721 ;;		 -> sprintf@f(5), 
  3722 ;;  fmt             1   46[BANK0 ] PTR PTR unsigned char 
  3723 ;;		 -> vfprintf@cfmt(2), 
  3724 ;;  ap              1   47[BANK0 ] PTR PTR void 
  3725 ;;		 -> sprintf@ap(1), 
  3726 ;; Auto vars:     Size  Location     Type
  3727 ;;  fp              1   76[BANK0 ] PTR struct _IO_FILE
  3728 ;;		 -> sprintf@f(5), 
  3729 ;;  llu             8   68[BANK0 ] unsigned long long 
  3730 ;;  ll              8   60[BANK0 ] long long 
  3731 ;;  f               4    0        long long 
  3732 ;;  ct              3    0        unsigned char [3]
  3733 ;;  vp              2    0        PTR void 
  3734 ;;  i               2    0        int 
  3735 ;;  done            2    0        int 
  3736 ;;  cp              2    0        PTR unsigned char 
  3737 ;;  c               1    0        unsigned char 
  3738 ;; Return value:  Size  Location     Type
  3739 ;;                  2   46[BANK0 ] int 
  3740 ;; Registers used:
  3741 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  3742 ;; Tracked objects:
  3743 ;;		On entry : 0/0
  3744 ;;		On exit  : 0/0
  3745 ;;		Unchanged: 0/0
  3746 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  3747 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3748 ;;      Locals:         0      17       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3749 ;;      Temps:          0      12       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3750 ;;      Totals:         0      31       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3751 ;;Total ram usage:       31 bytes
  3752 ;; Hardware stack levels used: 1
  3753 ;; Hardware stack levels required when called: 5
  3754 ;; This function calls:
  3755 ;;		_dtoa
  3756 ;;		_fputc
  3757 ;;		_strncmp
  3758 ;;		_utoa
  3759 ;; This function is called by:
  3760 ;;		_vfprintf
  3761 ;; This function uses a non-reentrant model
  3762 ;;
  3763                           
  3764                           
  3765                           ;psect for function _vfpfcnvrt
  3766  038E                     _vfpfcnvrt:
  3767                           
  3768                           ;incstack = 0
  3769                           ; Regs used in _vfpfcnvrt: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  3770                           ;vfpfcnvrt@fp stored from wreg
  3771  038E  0020               	movlb	0	; select bank0
  3772  038F  00EC               	movwf	vfpfcnvrt@fp
  3773  0390                     l3023:
  3774                           
  3775                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 692: static int v
      +                          fpfcnvrt(FILE *fp, char *fmt[], va_list ap);C:\Program Files\Microchip\xc8\v2.32\pic\sou
      +                          rces\c99\common\doprnt.c: 693: {;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\co
      +                          mmon\doprnt.c: 694:     char c, *cp, ct[3];;C:\Program Files\Microchip\xc8\v2.32\pic\sou
      +                          rces\c99\common\doprnt.c: 695:     int done, i;;C:\Program Files\Microchip\xc8\v2.32\pic
      +                          \sources\c99\common\doprnt.c: 696:     long long ll;;C:\Program Files\Microchip\xc8\v2.3
      +                          2\pic\sources\c99\common\doprnt.c: 697:     unsigned long long llu;
  3776  0390  084E               	movf	vfpfcnvrt@fmt,w
  3777  0391  0086               	movwf	6
  3778  0392  0187               	clrf	7
  3779  0393  3F40               	moviw [0]fsr1
  3780  0394  00D0               	movwf	??_vfpfcnvrt
  3781  0395  3F41               	moviw [1]fsr1
  3782  0396  00D1               	movwf	??_vfpfcnvrt+1
  3783  0397  0850               	movf	??_vfpfcnvrt,w
  3784  0398  0084               	movwf	4
  3785  0399  0851               	movf	??_vfpfcnvrt+1,w
  3786  039A  0085               	movwf	5
  3787  039B  0012               	moviw fsr0++
  3788  039C  3A25               	xorlw	37
  3789  039D  1D03               	btfss	3,2
  3790  039E  2BA0               	goto	u3381
  3791  039F  2BA1               	goto	u3380
  3792  03A0                     u3381:
  3793  03A0  2D66               	goto	l3091
  3794  03A1                     u3380:
  3795  03A1                     l3025:
  3796                           
  3797                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 703:         ++*f
      +                          mt;
  3798  03A1  084E               	movf	vfpfcnvrt@fmt,w
  3799  03A2  0086               	movwf	6
  3800  03A3  0187               	clrf	7
  3801  03A4  3001               	movlw	1
  3802  03A5  0781               	addwf	1,f
  3803  03A6  3141               	addfsr 1,1
  3804  03A7  1803               	skipnc
  3805  03A8  0A81               	incf	1,f
  3806  03A9                     l3027:
  3807                           
  3808                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 705:         flag
      +                          s = width = 0;
  3809  03A9  0022               	movlb	2	; select bank2
  3810  03AA  01D0               	clrf	_width^(0+256)
  3811  03AB  01D1               	clrf	(_width+1)^(0+256)
  3812  03AC  01D4               	clrf	_flags^(0+256)
  3813  03AD  01D5               	clrf	(_flags+1)^(0+256)
  3814  03AE                     l3029:
  3815                           
  3816                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 706:         prec
      +                           = -1;
  3817  03AE  30FF               	movlw	255
  3818  03AF  00D2               	movwf	_prec^(0+256)
  3819  03B0  30FF               	movlw	255
  3820  03B1  00D3               	movwf	(_prec^(0+256)+1)
  3821  03B2                     l3031:
  3822                           
  3823                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 847:         if (
      +                          (*fmt[0] == 'd') || (*fmt[0] == 'i')) {
  3824  03B2  0020               	movlb	0	; select bank0
  3825  03B3  084E               	movf	vfpfcnvrt@fmt,w
  3826  03B4  0086               	movwf	6
  3827  03B5  0187               	clrf	7
  3828  03B6  3F40               	moviw [0]fsr1
  3829  03B7  00D0               	movwf	??_vfpfcnvrt
  3830  03B8  3F41               	moviw [1]fsr1
  3831  03B9  00D1               	movwf	??_vfpfcnvrt+1
  3832  03BA  0850               	movf	??_vfpfcnvrt,w
  3833  03BB  0084               	movwf	4
  3834  03BC  0851               	movf	??_vfpfcnvrt+1,w
  3835  03BD  0085               	movwf	5
  3836  03BE  0012               	moviw fsr0++
  3837  03BF  3A64               	xorlw	100
  3838  03C0  1903               	btfsc	3,2
  3839  03C1  2BC3               	goto	u3391
  3840  03C2  2BC4               	goto	u3390
  3841  03C3                     u3391:
  3842  03C3  2BD5               	goto	l3035
  3843  03C4                     u3390:
  3844  03C4                     l3033:
  3845  03C4  084E               	movf	vfpfcnvrt@fmt,w
  3846  03C5  0086               	movwf	6
  3847  03C6  0187               	clrf	7
  3848  03C7  3F40               	moviw [0]fsr1
  3849  03C8  00D0               	movwf	??_vfpfcnvrt
  3850  03C9  3F41               	moviw [1]fsr1
  3851  03CA  00D1               	movwf	??_vfpfcnvrt+1
  3852  03CB  0850               	movf	??_vfpfcnvrt,w
  3853  03CC  0084               	movwf	4
  3854  03CD  0851               	movf	??_vfpfcnvrt+1,w
  3855  03CE  0085               	movwf	5
  3856  03CF  0012               	moviw fsr0++
  3857  03D0  3A69               	xorlw	105
  3858  03D1  1D03               	btfss	3,2
  3859  03D2  2BD4               	goto	u3401
  3860  03D3  2BD5               	goto	u3400
  3861  03D4                     u3401:
  3862  03D4  2C10               	goto	l3043
  3863  03D5                     u3400:
  3864  03D5                     l3035:
  3865                           
  3866                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 849:             
      +                          ++*fmt;
  3867  03D5  084E               	movf	vfpfcnvrt@fmt,w
  3868  03D6  0086               	movwf	6
  3869  03D7  0187               	clrf	7
  3870  03D8  3001               	movlw	1
  3871  03D9  0781               	addwf	1,f
  3872  03DA  3141               	addfsr 1,1
  3873  03DB  1803               	skipnc
  3874  03DC  0A81               	incf	1,f
  3875  03DD                     l3037:
  3876                           
  3877                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 850:             
      +                          ll = (long long)(*(int *)__va_arg(*(int **)ap, (int)0));
  3878  03DD  084F               	movf	vfpfcnvrt@ap,w
  3879  03DE  0086               	movwf	6
  3880  03DF  0187               	clrf	7
  3881  03E0  0801               	movf	1,w
  3882  03E1  0084               	movwf	4
  3883  03E2  0185               	clrf	5
  3884  03E3  3002               	movlw	2
  3885  03E4  0781               	addwf	1,f
  3886  03E5  3F00               	moviw [0]fsr0
  3887  03E6  00D0               	movwf	??_vfpfcnvrt
  3888  03E7  3F01               	moviw [1]fsr0
  3889  03E8  00D1               	movwf	??_vfpfcnvrt+1
  3890  03E9  0850               	movf	??_vfpfcnvrt,w
  3891  03EA  00DC               	movwf	vfpfcnvrt@ll
  3892  03EB  0851               	movf	??_vfpfcnvrt+1,w
  3893  03EC  00DD               	movwf	vfpfcnvrt@ll+1
  3894  03ED  0D89               	rlf	9,f
  3895  03EE  3B89               	subwfb	9,f
  3896  03EF  0989               	comf	9,f
  3897  03F0  00DE               	movwf	vfpfcnvrt@ll+2
  3898  03F1  00DF               	movwf	vfpfcnvrt@ll+3
  3899  03F2  00E0               	movwf	vfpfcnvrt@ll+4
  3900  03F3  00E1               	movwf	vfpfcnvrt@ll+5
  3901  03F4  00E2               	movwf	vfpfcnvrt@ll+6
  3902  03F5  00E3               	movwf	vfpfcnvrt@ll+7
  3903  03F6                     l3039:
  3904                           
  3905                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 852:             
      +                          return dtoa(fp, ll);
  3906  03F6  085C               	movf	vfpfcnvrt@ll,w
  3907  03F7  00B0               	movwf	dtoa@d
  3908  03F8  085D               	movf	vfpfcnvrt@ll+1,w
  3909  03F9  00B1               	movwf	dtoa@d+1
  3910  03FA  085E               	movf	vfpfcnvrt@ll+2,w
  3911  03FB  00B2               	movwf	dtoa@d+2
  3912  03FC  085F               	movf	vfpfcnvrt@ll+3,w
  3913  03FD  00B3               	movwf	dtoa@d+3
  3914  03FE  0860               	movf	vfpfcnvrt@ll+4,w
  3915  03FF  00B4               	movwf	dtoa@d+4
  3916  0400  0861               	movf	vfpfcnvrt@ll+5,w
  3917  0401  00B5               	movwf	dtoa@d+5
  3918  0402  0862               	movf	vfpfcnvrt@ll+6,w
  3919  0403  00B6               	movwf	dtoa@d+6
  3920  0404  0863               	movf	vfpfcnvrt@ll+7,w
  3921  0405  00B7               	movwf	dtoa@d+7
  3922  0406  086C               	movf	vfpfcnvrt@fp,w
  3923  0407  3180  206A  3183   	fcall	_dtoa
  3924  040A  0020               	movlb	0	; select bank0
  3925  040B  0831               	movf	?_dtoa+1,w
  3926  040C  00CF               	movwf	?_vfpfcnvrt+1
  3927  040D  0830               	movf	?_dtoa,w
  3928  040E  00CE               	movwf	?_vfpfcnvrt
  3929  040F  2D89               	goto	l1064
  3930  0410                     l3043:
  3931                           
  3932                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 857:         if (
      +                          !strncmp(*fmt, "ld", ((sizeof("ld")/sizeof("ld"[0]))-1)) || !strncmp(*fmt, "li", ((sizeo
      +                          f("li")/sizeof("li"[0]))-1))) {
  3933  0410  084E               	movf	vfpfcnvrt@fmt,w
  3934  0411  0086               	movwf	6
  3935  0412  0187               	clrf	7
  3936  0413  3F40               	moviw [0]fsr1
  3937  0414  00F0               	movwf	strncmp@_l
  3938  0415  3F41               	moviw [1]fsr1
  3939  0416  00F1               	movwf	strncmp@_l+1
  3940  0417  3032               	movlw	low (STR_7| (0+32768))
  3941  0418  00F2               	movwf	strncmp@_r
  3942  0419  30A0               	movlw	high (STR_7| (0+32768))
  3943  041A  00F3               	movwf	strncmp@_r+1
  3944  041B  3002               	movlw	2
  3945  041C  00F4               	movwf	strncmp@n
  3946  041D  3000               	movlw	0
  3947  041E  00F5               	movwf	strncmp@n+1
  3948  041F  3194  245F  3183   	fcall	_strncmp
  3949  0422  0870               	movf	?_strncmp,w
  3950  0423  0471               	iorwf	?_strncmp+1,w
  3951  0424  1903               	btfsc	3,2
  3952  0425  2C27               	goto	u3411
  3953  0426  2C28               	goto	u3410
  3954  0427                     u3411:
  3955  0427  2C41               	goto	l3047
  3956  0428                     u3410:
  3957  0428                     l3045:
  3958  0428  0020               	movlb	0	; select bank0
  3959  0429  084E               	movf	vfpfcnvrt@fmt,w
  3960  042A  0086               	movwf	6
  3961  042B  0187               	clrf	7
  3962  042C  3F40               	moviw [0]fsr1
  3963  042D  00F0               	movwf	strncmp@_l
  3964  042E  3F41               	moviw [1]fsr1
  3965  042F  00F1               	movwf	strncmp@_l+1
  3966  0430  3035               	movlw	low (STR_11| (0+32768))
  3967  0431  00F2               	movwf	strncmp@_r
  3968  0432  30A0               	movlw	high (STR_11| (0+32768))
  3969  0433  00F3               	movwf	strncmp@_r+1
  3970  0434  3002               	movlw	2
  3971  0435  00F4               	movwf	strncmp@n
  3972  0436  3000               	movlw	0
  3973  0437  00F5               	movwf	strncmp@n+1
  3974  0438  3194  245F  3183   	fcall	_strncmp
  3975  043B  0870               	movf	?_strncmp,w
  3976  043C  0471               	iorwf	?_strncmp+1,w
  3977  043D  1D03               	btfss	3,2
  3978  043E  2C40               	goto	u3421
  3979  043F  2C41               	goto	u3420
  3980  0440                     u3421:
  3981  0440  2C83               	goto	l3055
  3982  0441                     u3420:
  3983  0441                     l3047:
  3984                           
  3985                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 858: ;C:\Program 
      +                          Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 860:             *fmt += ((si
      +                          zeof("ld")/sizeof("ld"[0]))-1);
  3986  0441  0020               	movlb	0	; select bank0
  3987  0442  084E               	movf	vfpfcnvrt@fmt,w
  3988  0443  0086               	movwf	6
  3989  0444  0187               	clrf	7
  3990  0445  3002               	movlw	2
  3991  0446  0781               	addwf	1,f
  3992  0447  3141               	addfsr 1,1
  3993  0448  1803               	skipnc
  3994  0449  0A81               	incf	1,f
  3995  044A                     l3049:
  3996                           
  3997                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 861:             
      +                          ll = (long long)(*(long *)__va_arg(*(long **)ap, (long)0));
  3998  044A  084F               	movf	vfpfcnvrt@ap,w
  3999  044B  0086               	movwf	6
  4000  044C  0187               	clrf	7
  4001  044D  0801               	movf	1,w
  4002  044E  0084               	movwf	4
  4003  044F  0185               	clrf	5
  4004  0450  3004               	movlw	4
  4005  0451  0781               	addwf	1,f
  4006  0452  3F00               	moviw [0]fsr0
  4007  0453  00D0               	movwf	??_vfpfcnvrt
  4008  0454  3F01               	moviw [1]fsr0
  4009  0455  00D1               	movwf	??_vfpfcnvrt+1
  4010  0456  3F02               	moviw [2]fsr0
  4011  0457  00D2               	movwf	??_vfpfcnvrt+2
  4012  0458  3F03               	moviw [3]fsr0
  4013  0459  00D3               	movwf	??_vfpfcnvrt+3
  4014  045A  0850               	movf	??_vfpfcnvrt,w
  4015  045B  00DC               	movwf	vfpfcnvrt@ll
  4016  045C  0851               	movf	??_vfpfcnvrt+1,w
  4017  045D  00DD               	movwf	vfpfcnvrt@ll+1
  4018  045E  0852               	movf	??_vfpfcnvrt+2,w
  4019  045F  00DE               	movwf	vfpfcnvrt@ll+2
  4020  0460  0853               	movf	??_vfpfcnvrt+3,w
  4021  0461  00DF               	movwf	vfpfcnvrt@ll+3
  4022  0462  3000               	movlw	0
  4023  0463  1BDF               	btfsc	vfpfcnvrt@ll+3,7
  4024  0464  30FF               	movlw	255
  4025  0465  00E0               	movwf	vfpfcnvrt@ll+4
  4026  0466  00E1               	movwf	vfpfcnvrt@ll+5
  4027  0467  00E2               	movwf	vfpfcnvrt@ll+6
  4028  0468  00E3               	movwf	vfpfcnvrt@ll+7
  4029  0469                     l3051:
  4030                           
  4031                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 863:             
      +                          return dtoa(fp, ll);
  4032  0469  085C               	movf	vfpfcnvrt@ll,w
  4033  046A  00B0               	movwf	dtoa@d
  4034  046B  085D               	movf	vfpfcnvrt@ll+1,w
  4035  046C  00B1               	movwf	dtoa@d+1
  4036  046D  085E               	movf	vfpfcnvrt@ll+2,w
  4037  046E  00B2               	movwf	dtoa@d+2
  4038  046F  085F               	movf	vfpfcnvrt@ll+3,w
  4039  0470  00B3               	movwf	dtoa@d+3
  4040  0471  0860               	movf	vfpfcnvrt@ll+4,w
  4041  0472  00B4               	movwf	dtoa@d+4
  4042  0473  0861               	movf	vfpfcnvrt@ll+5,w
  4043  0474  00B5               	movwf	dtoa@d+5
  4044  0475  0862               	movf	vfpfcnvrt@ll+6,w
  4045  0476  00B6               	movwf	dtoa@d+6
  4046  0477  0863               	movf	vfpfcnvrt@ll+7,w
  4047  0478  00B7               	movwf	dtoa@d+7
  4048  0479  086C               	movf	vfpfcnvrt@fp,w
  4049  047A  3180  206A  3183   	fcall	_dtoa
  4050  047D  0020               	movlb	0	; select bank0
  4051  047E  0831               	movf	?_dtoa+1,w
  4052  047F  00CF               	movwf	?_vfpfcnvrt+1
  4053  0480  0830               	movf	?_dtoa,w
  4054  0481  00CE               	movwf	?_vfpfcnvrt
  4055  0482  2D89               	goto	l1064
  4056  0483                     l3055:
  4057                           
  4058                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 1204:         if 
      +                          (*fmt[0] == 'u') {
  4059  0483  0020               	movlb	0	; select bank0
  4060  0484  084E               	movf	vfpfcnvrt@fmt,w
  4061  0485  0086               	movwf	6
  4062  0486  0187               	clrf	7
  4063  0487  3F40               	moviw [0]fsr1
  4064  0488  00D0               	movwf	??_vfpfcnvrt
  4065  0489  3F41               	moviw [1]fsr1
  4066  048A  00D1               	movwf	??_vfpfcnvrt+1
  4067  048B  0850               	movf	??_vfpfcnvrt,w
  4068  048C  0084               	movwf	4
  4069  048D  0851               	movf	??_vfpfcnvrt+1,w
  4070  048E  0085               	movwf	5
  4071  048F  0012               	moviw fsr0++
  4072  0490  3A75               	xorlw	117
  4073  0491  1D03               	btfss	3,2
  4074  0492  2C94               	goto	u3431
  4075  0493  2C95               	goto	u3430
  4076  0494                     u3431:
  4077  0494  2CC9               	goto	l3065
  4078  0495                     u3430:
  4079  0495                     l3057:
  4080                           
  4081                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 1206:            
      +                           ++*fmt;
  4082  0495  084E               	movf	vfpfcnvrt@fmt,w
  4083  0496  0086               	movwf	6
  4084  0497  0187               	clrf	7
  4085  0498  3001               	movlw	1
  4086  0499  0781               	addwf	1,f
  4087  049A  3141               	addfsr 1,1
  4088  049B  1803               	skipnc
  4089  049C  0A81               	incf	1,f
  4090  049D                     l3059:
  4091                           
  4092                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 1207:            
      +                           llu = (unsigned long long)(*(unsigned int *)__va_arg(*(unsigned int **)ap, (unsigned in
      +                          t)0));
  4093  049D  084F               	movf	vfpfcnvrt@ap,w
  4094  049E  0086               	movwf	6
  4095  049F  0187               	clrf	7
  4096  04A0  0801               	movf	1,w
  4097  04A1  0084               	movwf	4
  4098  04A2  0185               	clrf	5
  4099  04A3  3002               	movlw	2
  4100  04A4  0781               	addwf	1,f
  4101  04A5  3F00               	moviw [0]fsr0
  4102  04A6  00E4               	movwf	vfpfcnvrt@llu
  4103  04A7  3F01               	moviw [1]fsr0
  4104  04A8  00E5               	movwf	vfpfcnvrt@llu+1
  4105  04A9  01E6               	clrf	vfpfcnvrt@llu+2
  4106  04AA  01E7               	clrf	vfpfcnvrt@llu+3
  4107  04AB  01E8               	clrf	vfpfcnvrt@llu+4
  4108  04AC  01E9               	clrf	vfpfcnvrt@llu+5
  4109  04AD  01EA               	clrf	vfpfcnvrt@llu+6
  4110  04AE  01EB               	clrf	vfpfcnvrt@llu+7
  4111  04AF                     l3061:
  4112                           
  4113                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 1209:            
      +                           return utoa(fp, llu);
  4114  04AF  0864               	movf	vfpfcnvrt@llu,w
  4115  04B0  00B0               	movwf	utoa@d
  4116  04B1  0865               	movf	vfpfcnvrt@llu+1,w
  4117  04B2  00B1               	movwf	utoa@d+1
  4118  04B3  0866               	movf	vfpfcnvrt@llu+2,w
  4119  04B4  00B2               	movwf	utoa@d+2
  4120  04B5  0867               	movf	vfpfcnvrt@llu+3,w
  4121  04B6  00B3               	movwf	utoa@d+3
  4122  04B7  0868               	movf	vfpfcnvrt@llu+4,w
  4123  04B8  00B4               	movwf	utoa@d+4
  4124  04B9  0869               	movf	vfpfcnvrt@llu+5,w
  4125  04BA  00B5               	movwf	utoa@d+5
  4126  04BB  086A               	movf	vfpfcnvrt@llu+6,w
  4127  04BC  00B6               	movwf	utoa@d+6
  4128  04BD  086B               	movf	vfpfcnvrt@llu+7,w
  4129  04BE  00B7               	movwf	utoa@d+7
  4130  04BF  086C               	movf	vfpfcnvrt@fp,w
  4131  04C0  318E  2612  3183   	fcall	_utoa
  4132  04C3  0020               	movlb	0	; select bank0
  4133  04C4  0831               	movf	?_utoa+1,w
  4134  04C5  00CF               	movwf	?_vfpfcnvrt+1
  4135  04C6  0830               	movf	?_utoa,w
  4136  04C7  00CE               	movwf	?_vfpfcnvrt
  4137  04C8  2D89               	goto	l1064
  4138  04C9                     l3065:
  4139                           
  4140                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 1214:         if 
      +                          (!strncmp(*fmt, "lu", ((sizeof("lu")/sizeof("lu"[0]))-1))) {
  4141  04C9  084E               	movf	vfpfcnvrt@fmt,w
  4142  04CA  0086               	movwf	6
  4143  04CB  0187               	clrf	7
  4144  04CC  3F40               	moviw [0]fsr1
  4145  04CD  00F0               	movwf	strncmp@_l
  4146  04CE  3F41               	moviw [1]fsr1
  4147  04CF  00F1               	movwf	strncmp@_l+1
  4148  04D0  3038               	movlw	low (STR_16| (0+32768))
  4149  04D1  00F2               	movwf	strncmp@_r
  4150  04D2  30A0               	movlw	high (STR_16| (0+32768))
  4151  04D3  00F3               	movwf	strncmp@_r+1
  4152  04D4  3002               	movlw	2
  4153  04D5  00F4               	movwf	strncmp@n
  4154  04D6  3000               	movlw	0
  4155  04D7  00F5               	movwf	strncmp@n+1
  4156  04D8  3194  245F  3183   	fcall	_strncmp
  4157  04DB  0870               	movf	?_strncmp,w
  4158  04DC  0471               	iorwf	?_strncmp+1,w
  4159  04DD  1D03               	btfss	3,2
  4160  04DE  2CE0               	goto	u3441
  4161  04DF  2CE1               	goto	u3440
  4162  04E0                     u3441:
  4163  04E0  2D30               	goto	l3075
  4164  04E1                     u3440:
  4165  04E1                     l3067:
  4166                           
  4167                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 1216:            
      +                           *fmt += ((sizeof("lu")/sizeof("lu"[0]))-1);
  4168  04E1  0020               	movlb	0	; select bank0
  4169  04E2  084E               	movf	vfpfcnvrt@fmt,w
  4170  04E3  0086               	movwf	6
  4171  04E4  0187               	clrf	7
  4172  04E5  3002               	movlw	2
  4173  04E6  0781               	addwf	1,f
  4174  04E7  3141               	addfsr 1,1
  4175  04E8  1803               	skipnc
  4176  04E9  0A81               	incf	1,f
  4177  04EA                     l3069:
  4178                           
  4179                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 1217:            
      +                           llu = (unsigned long long)(*(unsigned long *)__va_arg(*(unsigned long **)ap, (unsigned 
      +                          long)0));
  4180  04EA  084F               	movf	vfpfcnvrt@ap,w
  4181  04EB  0086               	movwf	6
  4182  04EC  0187               	clrf	7
  4183  04ED  0801               	movf	1,w
  4184  04EE  0084               	movwf	4
  4185  04EF  0185               	clrf	5
  4186  04F0  3004               	movlw	4
  4187  04F1  0781               	addwf	1,f
  4188  04F2  3F00               	moviw [0]fsr0
  4189  04F3  00D0               	movwf	??_vfpfcnvrt
  4190  04F4  3F01               	moviw [1]fsr0
  4191  04F5  00D1               	movwf	??_vfpfcnvrt+1
  4192  04F6  3F02               	moviw [2]fsr0
  4193  04F7  00D2               	movwf	??_vfpfcnvrt+2
  4194  04F8  3F03               	moviw [3]fsr0
  4195  04F9  00D3               	movwf	??_vfpfcnvrt+3
  4196  04FA  0850               	movf	??_vfpfcnvrt,w
  4197  04FB  00D4               	movwf	??_vfpfcnvrt+4
  4198  04FC  0851               	movf	??_vfpfcnvrt+1,w
  4199  04FD  00D5               	movwf	??_vfpfcnvrt+5
  4200  04FE  0852               	movf	??_vfpfcnvrt+2,w
  4201  04FF  00D6               	movwf	??_vfpfcnvrt+6
  4202  0500  0853               	movf	??_vfpfcnvrt+3,w
  4203  0501  00D7               	movwf	??_vfpfcnvrt+7
  4204  0502  01D8               	clrf	??_vfpfcnvrt+8
  4205  0503  01D9               	clrf	??_vfpfcnvrt+9
  4206  0504  01DA               	clrf	??_vfpfcnvrt+10
  4207  0505  01DB               	clrf	??_vfpfcnvrt+11
  4208  0506  085B               	movf	??_vfpfcnvrt+11,w
  4209  0507  00EB               	movwf	vfpfcnvrt@llu+7
  4210  0508  085A               	movf	??_vfpfcnvrt+10,w
  4211  0509  00EA               	movwf	vfpfcnvrt@llu+6
  4212  050A  0859               	movf	??_vfpfcnvrt+9,w
  4213  050B  00E9               	movwf	vfpfcnvrt@llu+5
  4214  050C  0858               	movf	??_vfpfcnvrt+8,w
  4215  050D  00E8               	movwf	vfpfcnvrt@llu+4
  4216  050E  0857               	movf	??_vfpfcnvrt+7,w
  4217  050F  00E7               	movwf	vfpfcnvrt@llu+3
  4218  0510  0856               	movf	??_vfpfcnvrt+6,w
  4219  0511  00E6               	movwf	vfpfcnvrt@llu+2
  4220  0512  0855               	movf	??_vfpfcnvrt+5,w
  4221  0513  00E5               	movwf	vfpfcnvrt@llu+1
  4222  0514  0854               	movf	??_vfpfcnvrt+4,w
  4223  0515  00E4               	movwf	vfpfcnvrt@llu
  4224  0516                     l3071:
  4225                           
  4226                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 1219:            
      +                           return utoa(fp, llu);
  4227  0516  0864               	movf	vfpfcnvrt@llu,w
  4228  0517  00B0               	movwf	utoa@d
  4229  0518  0865               	movf	vfpfcnvrt@llu+1,w
  4230  0519  00B1               	movwf	utoa@d+1
  4231  051A  0866               	movf	vfpfcnvrt@llu+2,w
  4232  051B  00B2               	movwf	utoa@d+2
  4233  051C  0867               	movf	vfpfcnvrt@llu+3,w
  4234  051D  00B3               	movwf	utoa@d+3
  4235  051E  0868               	movf	vfpfcnvrt@llu+4,w
  4236  051F  00B4               	movwf	utoa@d+4
  4237  0520  0869               	movf	vfpfcnvrt@llu+5,w
  4238  0521  00B5               	movwf	utoa@d+5
  4239  0522  086A               	movf	vfpfcnvrt@llu+6,w
  4240  0523  00B6               	movwf	utoa@d+6
  4241  0524  086B               	movf	vfpfcnvrt@llu+7,w
  4242  0525  00B7               	movwf	utoa@d+7
  4243  0526  086C               	movf	vfpfcnvrt@fp,w
  4244  0527  318E  2612  3183   	fcall	_utoa
  4245  052A  0020               	movlb	0	; select bank0
  4246  052B  0831               	movf	?_utoa+1,w
  4247  052C  00CF               	movwf	?_vfpfcnvrt+1
  4248  052D  0830               	movf	?_utoa,w
  4249  052E  00CE               	movwf	?_vfpfcnvrt
  4250  052F  2D89               	goto	l1064
  4251  0530                     l3075:
  4252                           
  4253                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 1372:         if 
      +                          ((*fmt)[0] == '%') {
  4254  0530  0020               	movlb	0	; select bank0
  4255  0531  084E               	movf	vfpfcnvrt@fmt,w
  4256  0532  0086               	movwf	6
  4257  0533  0187               	clrf	7
  4258  0534  3F40               	moviw [0]fsr1
  4259  0535  00D0               	movwf	??_vfpfcnvrt
  4260  0536  3F41               	moviw [1]fsr1
  4261  0537  00D1               	movwf	??_vfpfcnvrt+1
  4262  0538  0850               	movf	??_vfpfcnvrt,w
  4263  0539  0084               	movwf	4
  4264  053A  0851               	movf	??_vfpfcnvrt+1,w
  4265  053B  0085               	movwf	5
  4266  053C  0012               	moviw fsr0++
  4267  053D  3A25               	xorlw	37
  4268  053E  1D03               	btfss	3,2
  4269  053F  2D41               	goto	u3451
  4270  0540  2D42               	goto	u3450
  4271  0541                     u3451:
  4272  0541  2D5B               	goto	l3085
  4273  0542                     u3450:
  4274  0542                     l3077:
  4275                           
  4276                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 1373:            
      +                           ++*fmt;
  4277  0542  084E               	movf	vfpfcnvrt@fmt,w
  4278  0543  0086               	movwf	6
  4279  0544  0187               	clrf	7
  4280  0545  3001               	movlw	1
  4281  0546  0781               	addwf	1,f
  4282  0547  3141               	addfsr 1,1
  4283  0548  1803               	skipnc
  4284  0549  0A81               	incf	1,f
  4285  054A                     l3079:
  4286                           
  4287                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 1374:            
      +                           fputc((int)'%', fp);
  4288  054A  3025               	movlw	37
  4289  054B  00F0               	movwf	fputc@c
  4290  054C  3000               	movlw	0
  4291  054D  00F1               	movwf	fputc@c+1
  4292  054E  086C               	movf	vfpfcnvrt@fp,w
  4293  054F  00D0               	movwf	??_vfpfcnvrt
  4294  0550  0850               	movf	??_vfpfcnvrt,w
  4295  0551  00F2               	movwf	fputc@fp
  4296  0552  3192  2255  3183   	fcall	_fputc
  4297  0555                     l3081:
  4298                           
  4299                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 1375:            
      +                           return 1;
  4300  0555  3001               	movlw	1
  4301  0556  0020               	movlb	0	; select bank0
  4302  0557  00CE               	movwf	?_vfpfcnvrt
  4303  0558  3000               	movlw	0
  4304  0559  00CF               	movwf	?_vfpfcnvrt+1
  4305  055A  2D89               	goto	l1064
  4306  055B                     l3085:
  4307                           
  4308                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 1379:         ++*
      +                          fmt;
  4309  055B  084E               	movf	vfpfcnvrt@fmt,w
  4310  055C  0086               	movwf	6
  4311  055D  0187               	clrf	7
  4312  055E  3001               	movlw	1
  4313  055F  0781               	addwf	1,f
  4314  0560  3141               	addfsr 1,1
  4315  0561  1803               	skipnc
  4316  0562  0A81               	incf	1,f
  4317  0563                     l3087:
  4318                           
  4319                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 1380:         ret
      +                          urn 0;
  4320  0563  01CE               	clrf	?_vfpfcnvrt
  4321  0564  01CF               	clrf	?_vfpfcnvrt+1
  4322  0565  2D89               	goto	l1064
  4323  0566                     l3091:
  4324                           
  4325                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 1384:     fputc((
      +                          int)(*fmt)[0], fp);
  4326  0566  084E               	movf	vfpfcnvrt@fmt,w
  4327  0567  0086               	movwf	6
  4328  0568  0187               	clrf	7
  4329  0569  3F40               	moviw [0]fsr1
  4330  056A  00D0               	movwf	??_vfpfcnvrt
  4331  056B  3F41               	moviw [1]fsr1
  4332  056C  00D1               	movwf	??_vfpfcnvrt+1
  4333  056D  0850               	movf	??_vfpfcnvrt,w
  4334  056E  0084               	movwf	4
  4335  056F  0851               	movf	??_vfpfcnvrt+1,w
  4336  0570  0085               	movwf	5
  4337  0571  0800               	movf	0,w	;code access
  4338  0572  00D2               	movwf	??_vfpfcnvrt+2
  4339  0573  01D3               	clrf	??_vfpfcnvrt+3
  4340  0574  0852               	movf	??_vfpfcnvrt+2,w
  4341  0575  00F0               	movwf	fputc@c
  4342  0576  0853               	movf	??_vfpfcnvrt+3,w
  4343  0577  00F1               	movwf	fputc@c+1
  4344  0578  086C               	movf	vfpfcnvrt@fp,w
  4345  0579  00D4               	movwf	??_vfpfcnvrt+4
  4346  057A  0854               	movf	??_vfpfcnvrt+4,w
  4347  057B  00F2               	movwf	fputc@fp
  4348  057C  3192  2255  3183   	fcall	_fputc
  4349  057F                     l3093:
  4350                           
  4351                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 1385:     ++*fmt;
  4352  057F  0020               	movlb	0	; select bank0
  4353  0580  084E               	movf	vfpfcnvrt@fmt,w
  4354  0581  0086               	movwf	6
  4355  0582  0187               	clrf	7
  4356  0583  3001               	movlw	1
  4357  0584  0781               	addwf	1,f
  4358  0585  3141               	addfsr 1,1
  4359  0586  1803               	skipnc
  4360  0587  0A81               	incf	1,f
  4361  0588  2D55               	goto	l3081
  4362  0589                     l1064:
  4363  0589  0008               	return
  4364  058A                     __end_of_vfpfcnvrt:
  4365                           
  4366                           	psect	text6
  4367  0E12                     __ptext6:	
  4368 ;; *************** function _utoa *****************
  4369 ;; Defined at:
  4370 ;;		line 615 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c"
  4371 ;; Parameters:    Size  Location     Type
  4372 ;;  fp              1    wreg     PTR struct _IO_FILE
  4373 ;;		 -> sprintf@f(5), 
  4374 ;;  d               8   16[BANK0 ] unsigned long long 
  4375 ;; Auto vars:     Size  Location     Type
  4376 ;;  fp              1   26[BANK0 ] PTR struct _IO_FILE
  4377 ;;		 -> sprintf@f(5), 
  4378 ;;  n               8   29[BANK0 ] unsigned long long 
  4379 ;;  i               2   37[BANK0 ] int 
  4380 ;;  w               2   27[BANK0 ] int 
  4381 ;;  p               2   24[BANK0 ] int 
  4382 ;; Return value:  Size  Location     Type
  4383 ;;                  2   16[BANK0 ] int 
  4384 ;; Registers used:
  4385 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  4386 ;; Tracked objects:
  4387 ;;		On entry : 0/0
  4388 ;;		On exit  : 0/0
  4389 ;;		Unchanged: 0/0
  4390 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  4391 ;;      Params:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4392 ;;      Locals:         0      15       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4393 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4394 ;;      Totals:         1      23       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4395 ;;Total ram usage:       24 bytes
  4396 ;; Hardware stack levels used: 1
  4397 ;; Hardware stack levels required when called: 4
  4398 ;; This function calls:
  4399 ;;		___lodiv
  4400 ;;		___lomod
  4401 ;;		_pad
  4402 ;; This function is called by:
  4403 ;;		_vfpfcnvrt
  4404 ;; This function uses a non-reentrant model
  4405 ;;
  4406                           
  4407                           
  4408                           ;psect for function _utoa
  4409  0E12                     _utoa:
  4410                           
  4411                           ;incstack = 0
  4412                           ; Regs used in _utoa: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  4413                           ;utoa@fp stored from wreg
  4414  0E12  0020               	movlb	0	; select bank0
  4415  0E13  00BA               	movwf	utoa@fp
  4416  0E14                     l2851:
  4417                           
  4418                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 615: static int u
      +                          toa(FILE *fp, unsigned long long d);C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99
      +                          \common\doprnt.c: 616: {;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\dop
      +                          rnt.c: 617:     int i, p, w;;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common
      +                          \doprnt.c: 618:     unsigned long long n;;C:\Program Files\Microchip\xc8\v2.32\pic\sourc
      +                          es\c99\common\doprnt.c: 621:     if (!(prec < 0)) {
  4419  0E14  0022               	movlb	2	; select bank2
  4420  0E15  1BD3               	btfsc	(_prec+1)^(0+256),7
  4421  0E16  2E18               	goto	u3051
  4422  0E17  2E19               	goto	u3050
  4423  0E18                     u3051:
  4424  0E18  2E1D               	goto	l1045
  4425  0E19                     u3050:
  4426  0E19                     l2853:
  4427                           
  4428                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 622:         flag
      +                          s &= ~(1 << 1);
  4429  0E19  30FD               	movlw	253
  4430  0E1A  05D4               	andwf	_flags^(0+256),f
  4431  0E1B  30FF               	movlw	255
  4432  0E1C  05D5               	andwf	(_flags+1)^(0+256),f
  4433  0E1D                     l1045:	
  4434                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 623:     }
  4435                           
  4436                           
  4437                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 624:     p = (0 <
      +                           prec) ? prec : 1;
  4438  0E1D  0853               	movf	(_prec+1)^(0+256),w
  4439  0E1E  3A80               	xorlw	128
  4440  0E1F  00FD               	movwf	??_utoa
  4441  0E20  3080               	movlw	128
  4442  0E21  027D               	subwf	??_utoa,w
  4443  0E22  1D03               	skipz
  4444  0E23  2E26               	goto	u3065
  4445  0E24  3001               	movlw	1
  4446  0E25  0252               	subwf	_prec^(0+256),w
  4447  0E26                     u3065:
  4448  0E26  1803               	skipnc
  4449  0E27  2E29               	goto	u3061
  4450  0E28  2E2A               	goto	u3060
  4451  0E29                     u3061:
  4452  0E29  2E30               	goto	l2857
  4453  0E2A                     u3060:
  4454  0E2A                     l2855:
  4455  0E2A  3001               	movlw	1
  4456  0E2B  0020               	movlb	0	; select bank0
  4457  0E2C  00B8               	movwf	utoa@p
  4458  0E2D  3000               	movlw	0
  4459  0E2E  00B9               	movwf	utoa@p+1
  4460  0E2F  2E38               	goto	l1049
  4461  0E30                     l2857:
  4462  0E30  0022               	movlb	2	; select bank2
  4463  0E31  0853               	movf	(_prec+1)^(0+256),w
  4464  0E32  0020               	movlb	0	; select bank0
  4465  0E33  00B9               	movwf	utoa@p+1
  4466  0E34  0022               	movlb	2	; select bank2
  4467  0E35  0852               	movf	_prec^(0+256),w
  4468  0E36  0020               	movlb	0	; select bank0
  4469  0E37  00B8               	movwf	utoa@p
  4470  0E38                     l1049:
  4471                           
  4472                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 625:     w = widt
      +                          h;
  4473  0E38  0022               	movlb	2	; select bank2
  4474  0E39  0851               	movf	(_width+1)^(0+256),w
  4475  0E3A  0020               	movlb	0	; select bank0
  4476  0E3B  00BC               	movwf	utoa@w+1
  4477  0E3C  0022               	movlb	2	; select bank2
  4478  0E3D  0850               	movf	_width^(0+256),w
  4479  0E3E  0020               	movlb	0	; select bank0
  4480  0E3F  00BB               	movwf	utoa@w
  4481  0E40                     l2859:
  4482                           
  4483                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 628:     n = d;
  4484  0E40  0830               	movf	utoa@d,w
  4485  0E41  00BD               	movwf	utoa@n
  4486  0E42  0831               	movf	utoa@d+1,w
  4487  0E43  00BE               	movwf	utoa@n+1
  4488  0E44  0832               	movf	utoa@d+2,w
  4489  0E45  00BF               	movwf	utoa@n+2
  4490  0E46  0833               	movf	utoa@d+3,w
  4491  0E47  00C0               	movwf	utoa@n+3
  4492  0E48  0834               	movf	utoa@d+4,w
  4493  0E49  00C1               	movwf	utoa@n+4
  4494  0E4A  0835               	movf	utoa@d+5,w
  4495  0E4B  00C2               	movwf	utoa@n+5
  4496  0E4C  0836               	movf	utoa@d+6,w
  4497  0E4D  00C3               	movwf	utoa@n+6
  4498  0E4E  0837               	movf	utoa@d+7,w
  4499  0E4F  00C4               	movwf	utoa@n+7
  4500                           
  4501                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 629:     i = size
      +                          of(dbuf) - 1;
  4502  0E50  301F               	movlw	31
  4503  0E51  00C5               	movwf	utoa@i
  4504  0E52  3000               	movlw	0
  4505  0E53  00C6               	movwf	utoa@i+1
  4506  0E54                     l2861:
  4507                           
  4508                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 630:     dbuf[i] 
      +                          = '\0';
  4509  0E54  0023               	movlb	3	; select bank3
  4510  0E55  01BF               	clrf	(_dbuf^(0+384)+31)
  4511                           
  4512                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 631:     while (i
      +                           && (n || (0 < p) || ((0 < w) && (flags & (1 << 1))))) {
  4513  0E56  2EB8               	goto	l2873
  4514  0E57                     l2863:
  4515                           
  4516                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 632:         --i;
  4517  0E57  30FF               	movlw	255
  4518  0E58  0020               	movlb	0	; select bank0
  4519  0E59  07C5               	addwf	utoa@i,f
  4520  0E5A  30FF               	movlw	255
  4521  0E5B  3DC6               	addwfc	utoa@i+1,f
  4522  0E5C                     l2865:
  4523                           
  4524                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 633:         dbuf
      +                          [i] = '0' + (n % 10);
  4525  0E5C  300A               	movlw	10
  4526  0E5D  00A0               	movwf	___lomod@divisor
  4527  0E5E  01A1               	clrf	___lomod@divisor+1
  4528  0E5F  01A2               	clrf	___lomod@divisor+2
  4529  0E60  01A3               	clrf	___lomod@divisor+3
  4530  0E61  01A4               	clrf	___lomod@divisor+4
  4531  0E62  01A5               	clrf	___lomod@divisor+5
  4532  0E63  01A6               	clrf	___lomod@divisor+6
  4533  0E64  01A7               	clrf	___lomod@divisor+7
  4534  0E65  083D               	movf	utoa@n,w
  4535  0E66  00A8               	movwf	___lomod@dividend
  4536  0E67  083E               	movf	utoa@n+1,w
  4537  0E68  00A9               	movwf	___lomod@dividend+1
  4538  0E69  083F               	movf	utoa@n+2,w
  4539  0E6A  00AA               	movwf	___lomod@dividend+2
  4540  0E6B  0840               	movf	utoa@n+3,w
  4541  0E6C  00AB               	movwf	___lomod@dividend+3
  4542  0E6D  0841               	movf	utoa@n+4,w
  4543  0E6E  00AC               	movwf	___lomod@dividend+4
  4544  0E6F  0842               	movf	utoa@n+5,w
  4545  0E70  00AD               	movwf	___lomod@dividend+5
  4546  0E71  0843               	movf	utoa@n+6,w
  4547  0E72  00AE               	movwf	___lomod@dividend+6
  4548  0E73  0844               	movf	utoa@n+7,w
  4549  0E74  00AF               	movwf	___lomod@dividend+7
  4550  0E75  3195  2592  318E   	fcall	___lomod
  4551  0E78  0020               	movlb	0	; select bank0
  4552  0E79  0820               	movf	?___lomod,w
  4553  0E7A  3E30               	addlw	48
  4554  0E7B  00FD               	movwf	??_utoa
  4555  0E7C  0845               	movf	utoa@i,w
  4556  0E7D  3EA0               	addlw	(low (_dbuf| (0+256)))& (0+255)
  4557  0E7E  0086               	movwf	6
  4558  0E7F  3001               	movlw	1	; select bank3/4
  4559  0E80  0087               	movwf	7
  4560  0E81  087D               	movf	??_utoa,w
  4561  0E82  0081               	movwf	1
  4562  0E83                     l2867:
  4563                           
  4564                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 634:         --p;
  4565  0E83  30FF               	movlw	255
  4566  0E84  07B8               	addwf	utoa@p,f
  4567  0E85  30FF               	movlw	255
  4568  0E86  3DB9               	addwfc	utoa@p+1,f
  4569  0E87                     l2869:
  4570                           
  4571                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 635:         --w;
  4572  0E87  30FF               	movlw	255
  4573  0E88  07BB               	addwf	utoa@w,f
  4574  0E89  30FF               	movlw	255
  4575  0E8A  3DBC               	addwfc	utoa@w+1,f
  4576  0E8B                     l2871:
  4577                           
  4578                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 636:         n = 
      +                          n / 10;
  4579  0E8B  300A               	movlw	10
  4580  0E8C  00A0               	movwf	___lodiv@divisor
  4581  0E8D  01A1               	clrf	___lodiv@divisor+1
  4582  0E8E  01A2               	clrf	___lodiv@divisor+2
  4583  0E8F  01A3               	clrf	___lodiv@divisor+3
  4584  0E90  01A4               	clrf	___lodiv@divisor+4
  4585  0E91  01A5               	clrf	___lodiv@divisor+5
  4586  0E92  01A6               	clrf	___lodiv@divisor+6
  4587  0E93  01A7               	clrf	___lodiv@divisor+7
  4588  0E94  083D               	movf	utoa@n,w
  4589  0E95  00A8               	movwf	___lodiv@dividend
  4590  0E96  083E               	movf	utoa@n+1,w
  4591  0E97  00A9               	movwf	___lodiv@dividend+1
  4592  0E98  083F               	movf	utoa@n+2,w
  4593  0E99  00AA               	movwf	___lodiv@dividend+2
  4594  0E9A  0840               	movf	utoa@n+3,w
  4595  0E9B  00AB               	movwf	___lodiv@dividend+3
  4596  0E9C  0841               	movf	utoa@n+4,w
  4597  0E9D  00AC               	movwf	___lodiv@dividend+4
  4598  0E9E  0842               	movf	utoa@n+5,w
  4599  0E9F  00AD               	movwf	___lodiv@dividend+5
  4600  0EA0  0843               	movf	utoa@n+6,w
  4601  0EA1  00AE               	movwf	___lodiv@dividend+6
  4602  0EA2  0844               	movf	utoa@n+7,w
  4603  0EA3  00AF               	movwf	___lodiv@dividend+7
  4604  0EA4  3196  26ED  318E   	fcall	___lodiv
  4605  0EA7  0020               	movlb	0	; select bank0
  4606  0EA8  0820               	movf	?___lodiv,w
  4607  0EA9  00BD               	movwf	utoa@n
  4608  0EAA  0821               	movf	?___lodiv+1,w
  4609  0EAB  00BE               	movwf	utoa@n+1
  4610  0EAC  0822               	movf	?___lodiv+2,w
  4611  0EAD  00BF               	movwf	utoa@n+2
  4612  0EAE  0823               	movf	?___lodiv+3,w
  4613  0EAF  00C0               	movwf	utoa@n+3
  4614  0EB0  0824               	movf	?___lodiv+4,w
  4615  0EB1  00C1               	movwf	utoa@n+4
  4616  0EB2  0825               	movf	?___lodiv+5,w
  4617  0EB3  00C2               	movwf	utoa@n+5
  4618  0EB4  0826               	movf	?___lodiv+6,w
  4619  0EB5  00C3               	movwf	utoa@n+6
  4620  0EB6  0827               	movf	?___lodiv+7,w
  4621  0EB7  00C4               	movwf	utoa@n+7
  4622  0EB8                     l2873:
  4623                           
  4624                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 631:     while (i
      +                           && (n || (0 < p) || ((0 < w) && (flags & (1 << 1))))) {
  4625  0EB8  0020               	movlb	0	; select bank0
  4626  0EB9  0845               	movf	utoa@i,w
  4627  0EBA  0446               	iorwf	utoa@i+1,w
  4628  0EBB  1903               	btfsc	3,2
  4629  0EBC  2EBE               	goto	u3071
  4630  0EBD  2EBF               	goto	u3070
  4631  0EBE                     u3071:
  4632  0EBE  2EEB               	goto	l2883
  4633  0EBF                     u3070:
  4634  0EBF                     l2875:
  4635  0EBF  083D               	movf	utoa@n,w
  4636  0EC0  043E               	iorwf	utoa@n+1,w
  4637  0EC1  043F               	iorwf	utoa@n+2,w
  4638  0EC2  0440               	iorwf	utoa@n+3,w
  4639  0EC3  0441               	iorwf	utoa@n+4,w
  4640  0EC4  0442               	iorwf	utoa@n+5,w
  4641  0EC5  0443               	iorwf	utoa@n+6,w
  4642  0EC6  0444               	iorwf	utoa@n+7,w
  4643  0EC7  1D03               	skipz
  4644  0EC8  2ECA               	goto	u3081
  4645  0EC9  2ECB               	goto	u3080
  4646  0ECA                     u3081:
  4647  0ECA  2E57               	goto	l2863
  4648  0ECB                     u3080:
  4649  0ECB                     l2877:
  4650  0ECB  0839               	movf	utoa@p+1,w
  4651  0ECC  3A80               	xorlw	128
  4652  0ECD  00FD               	movwf	??_utoa
  4653  0ECE  3080               	movlw	128
  4654  0ECF  027D               	subwf	??_utoa,w
  4655  0ED0  1D03               	skipz
  4656  0ED1  2ED4               	goto	u3095
  4657  0ED2  3001               	movlw	1
  4658  0ED3  0238               	subwf	utoa@p,w
  4659  0ED4                     u3095:
  4660  0ED4  1803               	skipnc
  4661  0ED5  2ED7               	goto	u3091
  4662  0ED6  2ED8               	goto	u3090
  4663  0ED7                     u3091:
  4664  0ED7  2E57               	goto	l2863
  4665  0ED8                     u3090:
  4666  0ED8                     l2879:
  4667  0ED8  0020               	movlb	0	; select bank0
  4668  0ED9  083C               	movf	utoa@w+1,w
  4669  0EDA  3A80               	xorlw	128
  4670  0EDB  00FD               	movwf	??_utoa
  4671  0EDC  3080               	movlw	128
  4672  0EDD  027D               	subwf	??_utoa,w
  4673  0EDE  1D03               	skipz
  4674  0EDF  2EE2               	goto	u3105
  4675  0EE0  3001               	movlw	1
  4676  0EE1  023B               	subwf	utoa@w,w
  4677  0EE2                     u3105:
  4678  0EE2  1C03               	skipc
  4679  0EE3  2EE5               	goto	u3101
  4680  0EE4  2EE6               	goto	u3100
  4681  0EE5                     u3101:
  4682  0EE5  2EEB               	goto	l2883
  4683  0EE6                     u3100:
  4684  0EE6                     l2881:
  4685  0EE6  0022               	movlb	2	; select bank2
  4686  0EE7  18D4               	btfsc	_flags^(0+256),1
  4687  0EE8  2EEA               	goto	u3111
  4688  0EE9  2EEB               	goto	u3110
  4689  0EEA                     u3111:
  4690  0EEA  2E57               	goto	l2863
  4691  0EEB                     u3110:
  4692  0EEB                     l2883:
  4693                           
  4694                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 640:     return p
      +                          ad(fp, &dbuf[i], w);
  4695  0EEB  0020               	movlb	0	; select bank0
  4696  0EEC  0845               	movf	utoa@i,w
  4697  0EED  3EA0               	addlw	(low (_dbuf| (0+256)))& (0+255)
  4698  0EEE  00FD               	movwf	??_utoa
  4699  0EEF  087D               	movf	??_utoa,w
  4700  0EF0  00A4               	movwf	pad@buf
  4701  0EF1  083C               	movf	utoa@w+1,w
  4702  0EF2  00A6               	movwf	pad@p+1
  4703  0EF3  083B               	movf	utoa@w,w
  4704  0EF4  00A5               	movwf	pad@p
  4705  0EF5  083A               	movf	utoa@fp,w
  4706  0EF6  3193  2351  318E   	fcall	_pad
  4707  0EF9  0020               	movlb	0	; select bank0
  4708  0EFA  0825               	movf	?_pad+1,w
  4709  0EFB  00B1               	movwf	?_utoa+1
  4710  0EFC  0824               	movf	?_pad,w
  4711  0EFD  00B0               	movwf	?_utoa
  4712  0EFE                     l1057:
  4713  0EFE  0008               	return
  4714  0EFF                     __end_of_utoa:
  4715                           
  4716                           	psect	text7
  4717  1592                     __ptext7:	
  4718 ;; *************** function ___lomod *****************
  4719 ;; Defined at:
  4720 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\lomod.c"
  4721 ;; Parameters:    Size  Location     Type
  4722 ;;  divisor         8    0[BANK0 ] unsigned long long 
  4723 ;;  dividend        8    8[BANK0 ] unsigned long long 
  4724 ;; Auto vars:     Size  Location     Type
  4725 ;;  counter         1    1[COMMON] unsigned char 
  4726 ;; Return value:  Size  Location     Type
  4727 ;;                  8    0[BANK0 ] unsigned long long 
  4728 ;; Registers used:
  4729 ;;		wreg, status,2, status,0
  4730 ;; Tracked objects:
  4731 ;;		On entry : 0/0
  4732 ;;		On exit  : 0/0
  4733 ;;		Unchanged: 0/0
  4734 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  4735 ;;      Params:         0      16       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4736 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4737 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4738 ;;      Totals:         2      16       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4739 ;;Total ram usage:       18 bytes
  4740 ;; Hardware stack levels used: 1
  4741 ;; This function calls:
  4742 ;;		Nothing
  4743 ;; This function is called by:
  4744 ;;		_utoa
  4745 ;; This function uses a non-reentrant model
  4746 ;;
  4747                           
  4748                           
  4749                           ;psect for function ___lomod
  4750  1592                     ___lomod:
  4751  1592                     l2705:	
  4752                           ;incstack = 0
  4753                           ; Regs used in ___lomod: [wreg+status,2+status,0]
  4754                           
  4755  1592  0020               	movlb	0	; select bank0
  4756  1593  0820               	movf	___lomod@divisor,w
  4757  1594  0421               	iorwf	___lomod@divisor+1,w
  4758  1595  0422               	iorwf	___lomod@divisor+2,w
  4759  1596  0423               	iorwf	___lomod@divisor+3,w
  4760  1597  0424               	iorwf	___lomod@divisor+4,w
  4761  1598  0425               	iorwf	___lomod@divisor+5,w
  4762  1599  0426               	iorwf	___lomod@divisor+6,w
  4763  159A  0427               	iorwf	___lomod@divisor+7,w
  4764  159B  1903               	skipnz
  4765  159C  2D9E               	goto	u2771
  4766  159D  2D9F               	goto	u2770
  4767  159E                     u2771:
  4768  159E  2DF2               	goto	l762
  4769  159F                     u2770:
  4770  159F                     l2707:
  4771  159F  01F1               	clrf	___lomod@counter
  4772  15A0  0AF1               	incf	___lomod@counter,f
  4773  15A1  2DAE               	goto	l2713
  4774  15A2                     l2709:
  4775  15A2  35A0               	lslf	___lomod@divisor,f
  4776  15A3  0DA1               	rlf	___lomod@divisor+1,f
  4777  15A4  0DA2               	rlf	___lomod@divisor+2,f
  4778  15A5  0DA3               	rlf	___lomod@divisor+3,f
  4779  15A6  0DA4               	rlf	___lomod@divisor+4,f
  4780  15A7  0DA5               	rlf	___lomod@divisor+5,f
  4781  15A8  0DA6               	rlf	___lomod@divisor+6,f
  4782  15A9  0DA7               	rlf	___lomod@divisor+7,f
  4783  15AA                     l2711:
  4784  15AA  3001               	movlw	1
  4785  15AB  00F0               	movwf	??___lomod
  4786  15AC  0870               	movf	??___lomod,w
  4787  15AD  07F1               	addwf	___lomod@counter,f
  4788  15AE                     l2713:
  4789  15AE  1FA7               	btfss	___lomod@divisor+7,7
  4790  15AF  2DB1               	goto	u2781
  4791  15B0  2DB2               	goto	u2780
  4792  15B1                     u2781:
  4793  15B1  2DA2               	goto	l2709
  4794  15B2                     u2780:
  4795  15B2                     l2715:
  4796  15B2  0827               	movf	___lomod@divisor+7,w
  4797  15B3  022F               	subwf	___lomod@dividend+7,w
  4798  15B4  1D03               	skipz
  4799  15B5  2DD0               	goto	u2795
  4800  15B6  0826               	movf	___lomod@divisor+6,w
  4801  15B7  022E               	subwf	___lomod@dividend+6,w
  4802  15B8  1D03               	skipz
  4803  15B9  2DD0               	goto	u2795
  4804  15BA  0825               	movf	___lomod@divisor+5,w
  4805  15BB  022D               	subwf	___lomod@dividend+5,w
  4806  15BC  1D03               	skipz
  4807  15BD  2DD0               	goto	u2795
  4808  15BE  0824               	movf	___lomod@divisor+4,w
  4809  15BF  022C               	subwf	___lomod@dividend+4,w
  4810  15C0  1D03               	skipz
  4811  15C1  2DD0               	goto	u2795
  4812  15C2  0823               	movf	___lomod@divisor+3,w
  4813  15C3  022B               	subwf	___lomod@dividend+3,w
  4814  15C4  1D03               	skipz
  4815  15C5  2DD0               	goto	u2795
  4816  15C6  0822               	movf	___lomod@divisor+2,w
  4817  15C7  022A               	subwf	___lomod@dividend+2,w
  4818  15C8  1D03               	skipz
  4819  15C9  2DD0               	goto	u2795
  4820  15CA  0821               	movf	___lomod@divisor+1,w
  4821  15CB  0229               	subwf	___lomod@dividend+1,w
  4822  15CC  1D03               	skipz
  4823  15CD  2DD0               	goto	u2795
  4824  15CE  0820               	movf	___lomod@divisor,w
  4825  15CF  0228               	subwf	___lomod@dividend,w
  4826  15D0                     u2795:
  4827  15D0  1C03               	skipc
  4828  15D1  2DD3               	goto	u2791
  4829  15D2  2DD4               	goto	u2790
  4830  15D3                     u2791:
  4831  15D3  2DE4               	goto	l2719
  4832  15D4                     u2790:
  4833  15D4                     l2717:
  4834  15D4  0820               	movf	___lomod@divisor,w
  4835  15D5  02A8               	subwf	___lomod@dividend,f
  4836  15D6  0821               	movf	___lomod@divisor+1,w
  4837  15D7  3BA9               	subwfb	___lomod@dividend+1,f
  4838  15D8  0822               	movf	___lomod@divisor+2,w
  4839  15D9  3BAA               	subwfb	___lomod@dividend+2,f
  4840  15DA  0823               	movf	___lomod@divisor+3,w
  4841  15DB  3BAB               	subwfb	___lomod@dividend+3,f
  4842  15DC  0824               	movf	___lomod@divisor+4,w
  4843  15DD  3BAC               	subwfb	___lomod@dividend+4,f
  4844  15DE  0825               	movf	___lomod@divisor+5,w
  4845  15DF  3BAD               	subwfb	___lomod@dividend+5,f
  4846  15E0  0826               	movf	___lomod@divisor+6,w
  4847  15E1  3BAE               	subwfb	___lomod@dividend+6,f
  4848  15E2  0827               	movf	___lomod@divisor+7,w
  4849  15E3  3BAF               	subwfb	___lomod@dividend+7,f
  4850  15E4                     l2719:
  4851  15E4  36A7               	lsrf	___lomod@divisor+7,f
  4852  15E5  0CA6               	rrf	___lomod@divisor+6,f
  4853  15E6  0CA5               	rrf	___lomod@divisor+5,f
  4854  15E7  0CA4               	rrf	___lomod@divisor+4,f
  4855  15E8  0CA3               	rrf	___lomod@divisor+3,f
  4856  15E9  0CA2               	rrf	___lomod@divisor+2,f
  4857  15EA  0CA1               	rrf	___lomod@divisor+1,f
  4858  15EB  0CA0               	rrf	___lomod@divisor,f
  4859  15EC  3001               	movlw	1
  4860  15ED  02F1               	subwf	___lomod@counter,f
  4861  15EE  1D03               	btfss	3,2
  4862  15EF  2DF1               	goto	u2801
  4863  15F0  2DF2               	goto	u2800
  4864  15F1                     u2801:
  4865  15F1  2DB2               	goto	l2715
  4866  15F2                     u2800:
  4867  15F2                     l762:
  4868  15F2  0828               	movf	___lomod@dividend,w
  4869  15F3  00A0               	movwf	?___lomod
  4870  15F4  0829               	movf	___lomod@dividend+1,w
  4871  15F5  00A1               	movwf	?___lomod+1
  4872  15F6  082A               	movf	___lomod@dividend+2,w
  4873  15F7  00A2               	movwf	?___lomod+2
  4874  15F8  082B               	movf	___lomod@dividend+3,w
  4875  15F9  00A3               	movwf	?___lomod+3
  4876  15FA  082C               	movf	___lomod@dividend+4,w
  4877  15FB  00A4               	movwf	?___lomod+4
  4878  15FC  082D               	movf	___lomod@dividend+5,w
  4879  15FD  00A5               	movwf	?___lomod+5
  4880  15FE  082E               	movf	___lomod@dividend+6,w
  4881  15FF  00A6               	movwf	?___lomod+6
  4882  1600  082F               	movf	___lomod@dividend+7,w
  4883  1601  00A7               	movwf	?___lomod+7
  4884  1602                     l769:
  4885  1602  0008               	return
  4886  1603                     __end_of___lomod:
  4887                           
  4888                           	psect	text8
  4889  16ED                     __ptext8:	
  4890 ;; *************** function ___lodiv *****************
  4891 ;; Defined at:
  4892 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\lodiv.c"
  4893 ;; Parameters:    Size  Location     Type
  4894 ;;  divisor         8    0[BANK0 ] unsigned long long 
  4895 ;;  dividend        8    8[BANK0 ] unsigned long long 
  4896 ;; Auto vars:     Size  Location     Type
  4897 ;;  quotient        8    1[COMMON] unsigned long long 
  4898 ;;  counter         1    9[COMMON] unsigned char 
  4899 ;; Return value:  Size  Location     Type
  4900 ;;                  8    0[BANK0 ] unsigned long long 
  4901 ;; Registers used:
  4902 ;;		wreg, fsr1l, fsr1h, status,2, status,0
  4903 ;; Tracked objects:
  4904 ;;		On entry : 0/0
  4905 ;;		On exit  : 0/0
  4906 ;;		Unchanged: 0/0
  4907 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  4908 ;;      Params:         0      16       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4909 ;;      Locals:         9       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4910 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4911 ;;      Totals:        10      16       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4912 ;;Total ram usage:       26 bytes
  4913 ;; Hardware stack levels used: 1
  4914 ;; This function calls:
  4915 ;;		Nothing
  4916 ;; This function is called by:
  4917 ;;		_utoa
  4918 ;; This function uses a non-reentrant model
  4919 ;;
  4920                           
  4921                           
  4922                           ;psect for function ___lodiv
  4923  16ED                     ___lodiv:
  4924  16ED                     l2683:	
  4925                           ;incstack = 0
  4926                           ; Regs used in ___lodiv: [wreg+fsr1l+fsr1h+status,2+status,0]
  4927                           
  4928  16ED  3071               	movlw	low ___lodiv@quotient
  4929  16EE  0086               	movwf	6
  4930  16EF  3000               	movlw	high ___lodiv@quotient
  4931  16F0  0087               	movwf	7
  4932  16F1  3008               	movlw	8
  4933  16F2  00F0               	movwf	??___lodiv
  4934  16F3  3000               	movlw	0
  4935  16F4                     u2720:
  4936  16F4  001E               	movwi fsr1++
  4937  16F5  0BF0               	decfsz	??___lodiv,f
  4938  16F6  2EF4               	goto	u2720
  4939  16F7                     l2685:
  4940  16F7  0020               	movlb	0	; select bank0
  4941  16F8  0820               	movf	___lodiv@divisor,w
  4942  16F9  0421               	iorwf	___lodiv@divisor+1,w
  4943  16FA  0422               	iorwf	___lodiv@divisor+2,w
  4944  16FB  0423               	iorwf	___lodiv@divisor+3,w
  4945  16FC  0424               	iorwf	___lodiv@divisor+4,w
  4946  16FD  0425               	iorwf	___lodiv@divisor+5,w
  4947  16FE  0426               	iorwf	___lodiv@divisor+6,w
  4948  16FF  0427               	iorwf	___lodiv@divisor+7,w
  4949  1700  1903               	skipnz
  4950  1701  2F03               	goto	u2731
  4951  1702  2F04               	goto	u2730
  4952  1703                     u2731:
  4953  1703  2F60               	goto	l752
  4954  1704                     u2730:
  4955  1704                     l2687:
  4956  1704  01F9               	clrf	___lodiv@counter
  4957  1705  0AF9               	incf	___lodiv@counter,f
  4958  1706  2F13               	goto	l2693
  4959  1707                     l2689:
  4960  1707  35A0               	lslf	___lodiv@divisor,f
  4961  1708  0DA1               	rlf	___lodiv@divisor+1,f
  4962  1709  0DA2               	rlf	___lodiv@divisor+2,f
  4963  170A  0DA3               	rlf	___lodiv@divisor+3,f
  4964  170B  0DA4               	rlf	___lodiv@divisor+4,f
  4965  170C  0DA5               	rlf	___lodiv@divisor+5,f
  4966  170D  0DA6               	rlf	___lodiv@divisor+6,f
  4967  170E  0DA7               	rlf	___lodiv@divisor+7,f
  4968  170F                     l2691:
  4969  170F  3001               	movlw	1
  4970  1710  00F0               	movwf	??___lodiv
  4971  1711  0870               	movf	??___lodiv,w
  4972  1712  07F9               	addwf	___lodiv@counter,f
  4973  1713                     l2693:
  4974  1713  1FA7               	btfss	___lodiv@divisor+7,7
  4975  1714  2F16               	goto	u2741
  4976  1715  2F17               	goto	u2740
  4977  1716                     u2741:
  4978  1716  2F07               	goto	l2689
  4979  1717                     u2740:
  4980  1717                     l2695:
  4981  1717  35F1               	lslf	___lodiv@quotient,f
  4982  1718  0DF2               	rlf	___lodiv@quotient+1,f
  4983  1719  0DF3               	rlf	___lodiv@quotient+2,f
  4984  171A  0DF4               	rlf	___lodiv@quotient+3,f
  4985  171B  0DF5               	rlf	___lodiv@quotient+4,f
  4986  171C  0DF6               	rlf	___lodiv@quotient+5,f
  4987  171D  0DF7               	rlf	___lodiv@quotient+6,f
  4988  171E  0DF8               	rlf	___lodiv@quotient+7,f
  4989  171F                     l2697:
  4990  171F  0827               	movf	___lodiv@divisor+7,w
  4991  1720  022F               	subwf	___lodiv@dividend+7,w
  4992  1721  1D03               	skipz
  4993  1722  2F3D               	goto	u2755
  4994  1723  0826               	movf	___lodiv@divisor+6,w
  4995  1724  022E               	subwf	___lodiv@dividend+6,w
  4996  1725  1D03               	skipz
  4997  1726  2F3D               	goto	u2755
  4998  1727  0825               	movf	___lodiv@divisor+5,w
  4999  1728  022D               	subwf	___lodiv@dividend+5,w
  5000  1729  1D03               	skipz
  5001  172A  2F3D               	goto	u2755
  5002  172B  0824               	movf	___lodiv@divisor+4,w
  5003  172C  022C               	subwf	___lodiv@dividend+4,w
  5004  172D  1D03               	skipz
  5005  172E  2F3D               	goto	u2755
  5006  172F  0823               	movf	___lodiv@divisor+3,w
  5007  1730  022B               	subwf	___lodiv@dividend+3,w
  5008  1731  1D03               	skipz
  5009  1732  2F3D               	goto	u2755
  5010  1733  0822               	movf	___lodiv@divisor+2,w
  5011  1734  022A               	subwf	___lodiv@dividend+2,w
  5012  1735  1D03               	skipz
  5013  1736  2F3D               	goto	u2755
  5014  1737  0821               	movf	___lodiv@divisor+1,w
  5015  1738  0229               	subwf	___lodiv@dividend+1,w
  5016  1739  1D03               	skipz
  5017  173A  2F3D               	goto	u2755
  5018  173B  0820               	movf	___lodiv@divisor,w
  5019  173C  0228               	subwf	___lodiv@dividend,w
  5020  173D                     u2755:
  5021  173D  1C03               	skipc
  5022  173E  2F40               	goto	u2751
  5023  173F  2F41               	goto	u2750
  5024  1740                     u2751:
  5025  1740  2F52               	goto	l2703
  5026  1741                     u2750:
  5027  1741                     l2699:
  5028  1741  0820               	movf	___lodiv@divisor,w
  5029  1742  02A8               	subwf	___lodiv@dividend,f
  5030  1743  0821               	movf	___lodiv@divisor+1,w
  5031  1744  3BA9               	subwfb	___lodiv@dividend+1,f
  5032  1745  0822               	movf	___lodiv@divisor+2,w
  5033  1746  3BAA               	subwfb	___lodiv@dividend+2,f
  5034  1747  0823               	movf	___lodiv@divisor+3,w
  5035  1748  3BAB               	subwfb	___lodiv@dividend+3,f
  5036  1749  0824               	movf	___lodiv@divisor+4,w
  5037  174A  3BAC               	subwfb	___lodiv@dividend+4,f
  5038  174B  0825               	movf	___lodiv@divisor+5,w
  5039  174C  3BAD               	subwfb	___lodiv@dividend+5,f
  5040  174D  0826               	movf	___lodiv@divisor+6,w
  5041  174E  3BAE               	subwfb	___lodiv@dividend+6,f
  5042  174F  0827               	movf	___lodiv@divisor+7,w
  5043  1750  3BAF               	subwfb	___lodiv@dividend+7,f
  5044  1751                     l2701:
  5045  1751  1471               	bsf	___lodiv@quotient,0
  5046  1752                     l2703:
  5047  1752  36A7               	lsrf	___lodiv@divisor+7,f
  5048  1753  0CA6               	rrf	___lodiv@divisor+6,f
  5049  1754  0CA5               	rrf	___lodiv@divisor+5,f
  5050  1755  0CA4               	rrf	___lodiv@divisor+4,f
  5051  1756  0CA3               	rrf	___lodiv@divisor+3,f
  5052  1757  0CA2               	rrf	___lodiv@divisor+2,f
  5053  1758  0CA1               	rrf	___lodiv@divisor+1,f
  5054  1759  0CA0               	rrf	___lodiv@divisor,f
  5055  175A  3001               	movlw	1
  5056  175B  02F9               	subwf	___lodiv@counter,f
  5057  175C  1D03               	btfss	3,2
  5058  175D  2F5F               	goto	u2761
  5059  175E  2F60               	goto	u2760
  5060  175F                     u2761:
  5061  175F  2F17               	goto	l2695
  5062  1760                     u2760:
  5063  1760                     l752:
  5064  1760  0871               	movf	___lodiv@quotient,w
  5065  1761  00A0               	movwf	?___lodiv
  5066  1762  0872               	movf	___lodiv@quotient+1,w
  5067  1763  00A1               	movwf	?___lodiv+1
  5068  1764  0873               	movf	___lodiv@quotient+2,w
  5069  1765  00A2               	movwf	?___lodiv+2
  5070  1766  0874               	movf	___lodiv@quotient+3,w
  5071  1767  00A3               	movwf	?___lodiv+3
  5072  1768  0875               	movf	___lodiv@quotient+4,w
  5073  1769  00A4               	movwf	?___lodiv+4
  5074  176A  0876               	movf	___lodiv@quotient+5,w
  5075  176B  00A5               	movwf	?___lodiv+5
  5076  176C  0877               	movf	___lodiv@quotient+6,w
  5077  176D  00A6               	movwf	?___lodiv+6
  5078  176E  0878               	movf	___lodiv@quotient+7,w
  5079  176F  00A7               	movwf	?___lodiv+7
  5080  1770                     l759:
  5081  1770  0008               	return
  5082  1771                     __end_of___lodiv:
  5083                           
  5084                           	psect	text9
  5085  145F                     __ptext9:	
  5086 ;; *************** function _strncmp *****************
  5087 ;; Defined at:
  5088 ;;		line 3 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\strncmp.c"
  5089 ;; Parameters:    Size  Location     Type
  5090 ;;  _l              2    0[COMMON] PTR const unsigned char 
  5091 ;;		 -> STR_6(6), STR_5(10), STR_4(8), 
  5092 ;;  _r              2    2[COMMON] PTR const unsigned char 
  5093 ;;		 -> STR_18(3), STR_13(3), STR_9(3), 
  5094 ;;  n               2    4[COMMON] unsigned int 
  5095 ;; Auto vars:     Size  Location     Type
  5096 ;;  r               2    9[COMMON] PTR const unsigned char 
  5097 ;;		 -> STR_18(3), STR_13(3), STR_9(3), 
  5098 ;;  l               2    7[COMMON] PTR const unsigned char 
  5099 ;;		 -> STR_6(6), STR_5(10), STR_4(8), 
  5100 ;; Return value:  Size  Location     Type
  5101 ;;                  2    0[COMMON] int 
  5102 ;; Registers used:
  5103 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath
  5104 ;; Tracked objects:
  5105 ;;		On entry : 0/0
  5106 ;;		On exit  : 0/0
  5107 ;;		Unchanged: 0/0
  5108 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  5109 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5110 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5111 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5112 ;;      Totals:        11       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5113 ;;Total ram usage:       11 bytes
  5114 ;; Hardware stack levels used: 1
  5115 ;; This function calls:
  5116 ;;		Nothing
  5117 ;; This function is called by:
  5118 ;;		_vfpfcnvrt
  5119 ;; This function uses a non-reentrant model
  5120 ;;
  5121                           
  5122                           
  5123                           ;psect for function _strncmp
  5124  145F                     _strncmp:
  5125  145F                     l2887:	
  5126                           ;incstack = 0
  5127                           ; Regs used in _strncmp: [wreg-fsr0h+status,2+status,0+pclath]
  5128                           
  5129  145F  0871               	movf	strncmp@_l+1,w
  5130  1460  00F8               	movwf	strncmp@l+1
  5131  1461  0870               	movf	strncmp@_l,w
  5132  1462  00F7               	movwf	strncmp@l
  5133  1463  0873               	movf	strncmp@_r+1,w
  5134  1464  00FA               	movwf	strncmp@r+1
  5135  1465  0872               	movf	strncmp@_r,w
  5136  1466  00F9               	movwf	strncmp@r
  5137  1467                     l2889:
  5138  1467  3001               	movlw	1
  5139  1468  02F4               	subwf	strncmp@n,f
  5140  1469  3000               	movlw	0
  5141  146A  3BF5               	subwfb	strncmp@n+1,f
  5142  146B  0A74               	incf	strncmp@n,w
  5143  146C  1D03               	skipz
  5144  146D  2C72               	goto	u3121
  5145  146E  0A75               	incf	strncmp@n+1,w
  5146  146F  1D03               	btfss	3,2
  5147  1470  2C72               	goto	u3121
  5148  1471  2C73               	goto	u3120
  5149  1472                     u3121:
  5150  1472  2C82               	goto	l2897
  5151  1473                     u3120:
  5152  1473                     l2891:
  5153  1473  01F0               	clrf	?_strncmp
  5154  1474  01F1               	clrf	?_strncmp+1
  5155  1475  2CBA               	goto	l1116
  5156  1476                     l2895:
  5157  1476  3001               	movlw	1
  5158  1477  07F7               	addwf	strncmp@l,f
  5159  1478  3000               	movlw	0
  5160  1479  3DF8               	addwfc	strncmp@l+1,f
  5161  147A  3001               	movlw	1
  5162  147B  07F9               	addwf	strncmp@r,f
  5163  147C  3000               	movlw	0
  5164  147D  3DFA               	addwfc	strncmp@r+1,f
  5165  147E  3001               	movlw	1
  5166  147F  02F4               	subwf	strncmp@n,f
  5167  1480  3000               	movlw	0
  5168  1481  3BF5               	subwfb	strncmp@n+1,f
  5169  1482                     l2897:
  5170  1482  0877               	movf	strncmp@l,w
  5171  1483  0084               	movwf	4
  5172  1484  0878               	movf	strncmp@l+1,w
  5173  1485  0085               	movwf	5
  5174  1486  0012               	moviw fsr0++
  5175  1487  1903               	btfsc	3,2
  5176  1488  2C8A               	goto	u3131
  5177  1489  2C8B               	goto	u3130
  5178  148A                     u3131:
  5179  148A  2CAA               	goto	l2905
  5180  148B                     u3130:
  5181  148B                     l2899:
  5182  148B  0879               	movf	strncmp@r,w
  5183  148C  0084               	movwf	4
  5184  148D  087A               	movf	strncmp@r+1,w
  5185  148E  0085               	movwf	5
  5186  148F  0012               	moviw fsr0++
  5187  1490  1903               	btfsc	3,2
  5188  1491  2C93               	goto	u3141
  5189  1492  2C94               	goto	u3140
  5190  1493                     u3141:
  5191  1493  2CAA               	goto	l2905
  5192  1494                     u3140:
  5193  1494                     l2901:
  5194  1494  0874               	movf	strncmp@n,w
  5195  1495  0475               	iorwf	strncmp@n+1,w
  5196  1496  1903               	btfsc	3,2
  5197  1497  2C99               	goto	u3151
  5198  1498  2C9A               	goto	u3150
  5199  1499                     u3151:
  5200  1499  2CAA               	goto	l2905
  5201  149A                     u3150:
  5202  149A                     l2903:
  5203  149A  0879               	movf	strncmp@r,w
  5204  149B  0084               	movwf	4
  5205  149C  087A               	movf	strncmp@r+1,w
  5206  149D  0085               	movwf	5
  5207  149E  0800               	movf	0,w	;code access
  5208  149F  00F6               	movwf	??_strncmp
  5209  14A0  0877               	movf	strncmp@l,w
  5210  14A1  0084               	movwf	4
  5211  14A2  0878               	movf	strncmp@l+1,w
  5212  14A3  0085               	movwf	5
  5213  14A4  0800               	movf	0,w	;code access
  5214  14A5  0676               	xorwf	??_strncmp,w
  5215  14A6  1903               	skipnz
  5216  14A7  2CA9               	goto	u3161
  5217  14A8  2CAA               	goto	u3160
  5218  14A9                     u3161:
  5219  14A9  2C76               	goto	l2895
  5220  14AA                     u3160:
  5221  14AA                     l2905:
  5222  14AA  0877               	movf	strncmp@l,w
  5223  14AB  0084               	movwf	4
  5224  14AC  0878               	movf	strncmp@l+1,w
  5225  14AD  0085               	movwf	5
  5226  14AE  0800               	movf	0,w	;code access
  5227  14AF  00F6               	movwf	??_strncmp
  5228  14B0  0879               	movf	strncmp@r,w
  5229  14B1  0084               	movwf	4
  5230  14B2  087A               	movf	strncmp@r+1,w
  5231  14B3  0085               	movwf	5
  5232  14B4  0800               	movf	0,w	;code access
  5233  14B5  0276               	subwf	??_strncmp,w
  5234  14B6  00F0               	movwf	?_strncmp
  5235  14B7  01F1               	clrf	?_strncmp+1
  5236  14B8  1C03               	skipc
  5237  14B9  03F1               	decf	?_strncmp+1,f
  5238  14BA                     l1116:
  5239  14BA  0008               	return
  5240  14BB                     __end_of_strncmp:
  5241                           
  5242                           	psect	text10
  5243  006A                     __ptext10:	
  5244 ;; *************** function _dtoa *****************
  5245 ;; Defined at:
  5246 ;;		line 287 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c"
  5247 ;; Parameters:    Size  Location     Type
  5248 ;;  fp              1    wreg     PTR struct _IO_FILE
  5249 ;;		 -> sprintf@f(5), 
  5250 ;;  d               8   16[BANK0 ] long long 
  5251 ;; Auto vars:     Size  Location     Type
  5252 ;;  fp              1   31[BANK0 ] PTR struct _IO_FILE
  5253 ;;		 -> sprintf@f(5), 
  5254 ;;  n               8   36[BANK0 ] long long 
  5255 ;;  i               2   44[BANK0 ] int 
  5256 ;;  s               2   34[BANK0 ] int 
  5257 ;;  w               2   32[BANK0 ] int 
  5258 ;;  p               2   29[BANK0 ] int 
  5259 ;; Return value:  Size  Location     Type
  5260 ;;                  2   16[BANK0 ] int 
  5261 ;; Registers used:
  5262 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  5263 ;; Tracked objects:
  5264 ;;		On entry : 0/0
  5265 ;;		On exit  : 0/0
  5266 ;;		Unchanged: 0/0
  5267 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  5268 ;;      Params:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5269 ;;      Locals:         0      19       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5270 ;;      Temps:          0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5271 ;;      Totals:         0      30       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5272 ;;Total ram usage:       30 bytes
  5273 ;; Hardware stack levels used: 1
  5274 ;; Hardware stack levels required when called: 4
  5275 ;; This function calls:
  5276 ;;		___aodiv
  5277 ;;		___aomod
  5278 ;;		_abs
  5279 ;;		_pad
  5280 ;; This function is called by:
  5281 ;;		_vfpfcnvrt
  5282 ;; This function uses a non-reentrant model
  5283 ;;
  5284                           
  5285                           
  5286                           ;psect for function _dtoa
  5287  006A                     _dtoa:
  5288                           
  5289                           ;incstack = 0
  5290                           ; Regs used in _dtoa: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  5291                           ;dtoa@fp stored from wreg
  5292  006A  0020               	movlb	0	; select bank0
  5293  006B  00BF               	movwf	dtoa@fp
  5294  006C                     l2793:
  5295                           
  5296                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 287: static int d
      +                          toa(FILE *fp, long long d);C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\d
      +                          oprnt.c: 288: {;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 28
      +                          9:     int i, p, s, w;;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprn
      +                          t.c: 290:     long long n;;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\d
      +                          oprnt.c: 293:     n = d;
  5297  006C  0830               	movf	dtoa@d,w
  5298  006D  00C4               	movwf	dtoa@n
  5299  006E  0831               	movf	dtoa@d+1,w
  5300  006F  00C5               	movwf	dtoa@n+1
  5301  0070  0832               	movf	dtoa@d+2,w
  5302  0071  00C6               	movwf	dtoa@n+2
  5303  0072  0833               	movf	dtoa@d+3,w
  5304  0073  00C7               	movwf	dtoa@n+3
  5305  0074  0834               	movf	dtoa@d+4,w
  5306  0075  00C8               	movwf	dtoa@n+4
  5307  0076  0835               	movf	dtoa@d+5,w
  5308  0077  00C9               	movwf	dtoa@n+5
  5309  0078  0836               	movf	dtoa@d+6,w
  5310  0079  00CA               	movwf	dtoa@n+6
  5311  007A  0837               	movf	dtoa@d+7,w
  5312  007B  00CB               	movwf	dtoa@n+7
  5313  007C                     l2795:
  5314                           
  5315                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 294:     s = n < 
      +                          0 ? 1 : 0;
  5316  007C  3044               	movlw	low dtoa@n
  5317  007D  0086               	movwf	6
  5318  007E  3000               	movlw	high dtoa@n
  5319  007F  0087               	movwf	7
  5320  0080  3F47               	moviw [7]fsr1
  5321  0081  00B8               	movwf	??_dtoa
  5322  0082  1BB8               	btfsc	??_dtoa,7
  5323  0083  2885               	goto	u2891
  5324  0084  2887               	goto	u2890
  5325  0085                     u2891:
  5326  0085  3001               	movlw	1
  5327  0086  2888               	goto	u2900
  5328  0087                     u2890:
  5329  0087  3000               	movlw	0
  5330  0088                     u2900:
  5331  0088  0020               	movlb	0	; select bank0
  5332  0089  00B9               	movwf	??_dtoa+1
  5333  008A  01BA               	clrf	??_dtoa+2
  5334  008B  0839               	movf	??_dtoa+1,w
  5335  008C  00C2               	movwf	dtoa@s
  5336  008D  083A               	movf	??_dtoa+2,w
  5337  008E  00C3               	movwf	dtoa@s+1
  5338  008F                     l2797:
  5339                           
  5340                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 295:     if (s) {
  5341  008F  0842               	movf	dtoa@s,w
  5342  0090  0443               	iorwf	dtoa@s+1,w
  5343  0091  1903               	btfsc	3,2
  5344  0092  2894               	goto	u2911
  5345  0093  2895               	goto	u2910
  5346  0094                     u2911:
  5347  0094  28B3               	goto	l1019
  5348  0095                     u2910:
  5349  0095                     l2799:
  5350                           
  5351                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 296:         n = 
      +                          -n;
  5352  0095  09C4               	comf	dtoa@n,f
  5353  0096  09C5               	comf	dtoa@n+1,f
  5354  0097  09C6               	comf	dtoa@n+2,f
  5355  0098  09C7               	comf	dtoa@n+3,f
  5356  0099  09C8               	comf	dtoa@n+4,f
  5357  009A  09C9               	comf	dtoa@n+5,f
  5358  009B  09CA               	comf	dtoa@n+6,f
  5359  009C  09CB               	comf	dtoa@n+7,f
  5360  009D  0AC4               	incf	dtoa@n,f
  5361  009E  1D03               	skipz
  5362  009F  28B3               	goto	u292lld
  5363  00A0  0AC5               	incf	dtoa@n+1,f
  5364  00A1  1D03               	skipz
  5365  00A2  28B3               	goto	u292lld
  5366  00A3  0AC6               	incf	dtoa@n+2,f
  5367  00A4  1D03               	skipz
  5368  00A5  28B3               	goto	u292lld
  5369  00A6  0AC7               	incf	dtoa@n+3,f
  5370  00A7  1D03               	skipz
  5371  00A8  28B3               	goto	u292lld
  5372  00A9  0AC8               	incf	dtoa@n+4,f
  5373  00AA  1D03               	skipz
  5374  00AB  28B3               	goto	u292lld
  5375  00AC  0AC9               	incf	dtoa@n+5,f
  5376  00AD  1D03               	skipz
  5377  00AE  28B3               	goto	u292lld
  5378  00AF  0ACA               	incf	dtoa@n+6,f
  5379  00B0  1D03               	skipz
  5380  00B1  28B3               	goto	u292lld
  5381  00B2  0ACB               	incf	dtoa@n+7,f
  5382  00B3                     u292lld:
  5383  00B3                     l1019:	
  5384                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 297:     }
  5385                           
  5386                           
  5387                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 300:     if (!(pr
      +                          ec < 0)) {
  5388  00B3  0022               	movlb	2	; select bank2
  5389  00B4  1BD3               	btfsc	(_prec+1)^(0+256),7
  5390  00B5  28B7               	goto	u2931
  5391  00B6  28B8               	goto	u2930
  5392  00B7                     u2931:
  5393  00B7  28BC               	goto	l1020
  5394  00B8                     u2930:
  5395  00B8                     l2801:
  5396                           
  5397                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 301:         flag
      +                          s &= ~(1 << 1);
  5398  00B8  30FD               	movlw	253
  5399  00B9  05D4               	andwf	_flags^(0+256),f
  5400  00BA  30FF               	movlw	255
  5401  00BB  05D5               	andwf	(_flags+1)^(0+256),f
  5402  00BC                     l1020:	
  5403                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 302:     }
  5404                           
  5405                           
  5406                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 303:     p = (0 <
      +                           prec) ? prec : 1;
  5407  00BC  0853               	movf	(_prec+1)^(0+256),w
  5408  00BD  3A80               	xorlw	128
  5409  00BE  0020               	movlb	0	; select bank0
  5410  00BF  00B8               	movwf	??_dtoa
  5411  00C0  3080               	movlw	128
  5412  00C1  0238               	subwf	??_dtoa,w
  5413  00C2  1D03               	skipz
  5414  00C3  28C7               	goto	u2945
  5415  00C4  3001               	movlw	1
  5416  00C5  0022               	movlb	2	; select bank2
  5417  00C6  0252               	subwf	_prec^(0+256),w
  5418  00C7                     u2945:
  5419  00C7  1803               	skipnc
  5420  00C8  28CA               	goto	u2941
  5421  00C9  28CB               	goto	u2940
  5422  00CA                     u2941:
  5423  00CA  28D1               	goto	l2805
  5424  00CB                     u2940:
  5425  00CB                     l2803:
  5426  00CB  3001               	movlw	1
  5427  00CC  0020               	movlb	0	; select bank0
  5428  00CD  00BD               	movwf	dtoa@p
  5429  00CE  3000               	movlw	0
  5430  00CF  00BE               	movwf	dtoa@p+1
  5431  00D0  28D9               	goto	l1024
  5432  00D1                     l2805:
  5433  00D1  0022               	movlb	2	; select bank2
  5434  00D2  0853               	movf	(_prec+1)^(0+256),w
  5435  00D3  0020               	movlb	0	; select bank0
  5436  00D4  00BE               	movwf	dtoa@p+1
  5437  00D5  0022               	movlb	2	; select bank2
  5438  00D6  0852               	movf	_prec^(0+256),w
  5439  00D7  0020               	movlb	0	; select bank0
  5440  00D8  00BD               	movwf	dtoa@p
  5441  00D9                     l1024:
  5442                           
  5443                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 304:     w = widt
      +                          h;
  5444  00D9  0022               	movlb	2	; select bank2
  5445  00DA  0851               	movf	(_width+1)^(0+256),w
  5446  00DB  0020               	movlb	0	; select bank0
  5447  00DC  00C1               	movwf	dtoa@w+1
  5448  00DD  0022               	movlb	2	; select bank2
  5449  00DE  0850               	movf	_width^(0+256),w
  5450  00DF  0020               	movlb	0	; select bank0
  5451  00E0  00C0               	movwf	dtoa@w
  5452  00E1                     l2807:
  5453                           
  5454                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 305:     if (s ||
      +                           (flags & (1 << 2))) {
  5455  00E1  0842               	movf	dtoa@s,w
  5456  00E2  0443               	iorwf	dtoa@s+1,w
  5457  00E3  1D03               	btfss	3,2
  5458  00E4  28E6               	goto	u2951
  5459  00E5  28E7               	goto	u2950
  5460  00E6                     u2951:
  5461  00E6  28EC               	goto	l2811
  5462  00E7                     u2950:
  5463  00E7                     l2809:
  5464  00E7  0022               	movlb	2	; select bank2
  5465  00E8  1D54               	btfss	_flags^(0+256),2
  5466  00E9  28EB               	goto	u2961
  5467  00EA  28EC               	goto	u2960
  5468  00EB                     u2961:
  5469  00EB  28F1               	goto	l1025
  5470  00EC                     u2960:
  5471  00EC                     l2811:
  5472                           
  5473                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 306:         --w;
  5474  00EC  30FF               	movlw	255
  5475  00ED  0020               	movlb	0	; select bank0
  5476  00EE  07C0               	addwf	dtoa@w,f
  5477  00EF  30FF               	movlw	255
  5478  00F0  3DC1               	addwfc	dtoa@w+1,f
  5479  00F1                     l1025:	
  5480                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 307:     }
  5481                           
  5482                           
  5483                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 310:     i = size
      +                          of(dbuf) - 1;
  5484  00F1  301F               	movlw	31
  5485  00F2  0020               	movlb	0	; select bank0
  5486  00F3  00CC               	movwf	dtoa@i
  5487  00F4  3000               	movlw	0
  5488  00F5  00CD               	movwf	dtoa@i+1
  5489  00F6                     l2813:
  5490                           
  5491                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 311:     dbuf[i] 
      +                          = '\0';
  5492  00F6  0023               	movlb	3	; select bank3
  5493  00F7  01BF               	clrf	(_dbuf^(0+384)+31)
  5494                           
  5495                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 312:     while (!
      +                          (i < 1) && (n || (0 < p) || ((0 < w) && (flags & (1 << 1))))) {
  5496  00F8  2962               	goto	l1028
  5497  00F9                     l2815:
  5498                           
  5499                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 313:         --i;
  5500  00F9  30FF               	movlw	255
  5501  00FA  0020               	movlb	0	; select bank0
  5502  00FB  07CC               	addwf	dtoa@i,f
  5503  00FC  30FF               	movlw	255
  5504  00FD  3DCD               	addwfc	dtoa@i+1,f
  5505  00FE                     l2817:
  5506                           
  5507                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 314:         dbuf
      +                          [i] = (char)((int)'0' + abs(n % 10));
  5508  00FE  300A               	movlw	10
  5509  00FF  00A0               	movwf	___aomod@divisor
  5510  0100  01A1               	clrf	___aomod@divisor+1
  5511  0101  01A2               	clrf	___aomod@divisor+2
  5512  0102  01A3               	clrf	___aomod@divisor+3
  5513  0103  01A4               	clrf	___aomod@divisor+4
  5514  0104  01A5               	clrf	___aomod@divisor+5
  5515  0105  01A6               	clrf	___aomod@divisor+6
  5516  0106  01A7               	clrf	___aomod@divisor+7
  5517  0107  0844               	movf	dtoa@n,w
  5518  0108  00A8               	movwf	___aomod@dividend
  5519  0109  0845               	movf	dtoa@n+1,w
  5520  010A  00A9               	movwf	___aomod@dividend+1
  5521  010B  0846               	movf	dtoa@n+2,w
  5522  010C  00AA               	movwf	___aomod@dividend+2
  5523  010D  0847               	movf	dtoa@n+3,w
  5524  010E  00AB               	movwf	___aomod@dividend+3
  5525  010F  0848               	movf	dtoa@n+4,w
  5526  0110  00AC               	movwf	___aomod@dividend+4
  5527  0111  0849               	movf	dtoa@n+5,w
  5528  0112  00AD               	movwf	___aomod@dividend+5
  5529  0113  084A               	movf	dtoa@n+6,w
  5530  0114  00AE               	movwf	___aomod@dividend+6
  5531  0115  084B               	movf	dtoa@n+7,w
  5532  0116  00AF               	movwf	___aomod@dividend+7
  5533  0117  318D  2528  3180   	fcall	___aomod
  5534  011A  0020               	movlb	0	; select bank0
  5535  011B  0821               	movf	?___aomod+1,w
  5536  011C  00F4               	movwf	abs@a+1
  5537  011D  0820               	movf	?___aomod,w
  5538  011E  00F3               	movwf	abs@a
  5539  011F  3190  207F  3180   	fcall	_abs
  5540  0122  0873               	movf	?_abs,w
  5541  0123  3E30               	addlw	48
  5542  0124  0020               	movlb	0	; select bank0
  5543  0125  00B8               	movwf	??_dtoa
  5544  0126  084C               	movf	dtoa@i,w
  5545  0127  3EA0               	addlw	(low (_dbuf| (0+256)))& (0+255)
  5546  0128  0086               	movwf	6
  5547  0129  3001               	movlw	1	; select bank3/4
  5548  012A  0087               	movwf	7
  5549  012B  0838               	movf	??_dtoa,w
  5550  012C  0081               	movwf	1
  5551  012D                     l2819:
  5552                           
  5553                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 315:         --p;
  5554  012D  30FF               	movlw	255
  5555  012E  07BD               	addwf	dtoa@p,f
  5556  012F  30FF               	movlw	255
  5557  0130  3DBE               	addwfc	dtoa@p+1,f
  5558  0131                     l2821:
  5559                           
  5560                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 316:         --w;
  5561  0131  30FF               	movlw	255
  5562  0132  07C0               	addwf	dtoa@w,f
  5563  0133  30FF               	movlw	255
  5564  0134  3DC1               	addwfc	dtoa@w+1,f
  5565  0135                     l2823:
  5566                           
  5567                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 317:         n = 
      +                          n / 10;
  5568  0135  300A               	movlw	10
  5569  0136  00A0               	movwf	___aodiv@divisor
  5570  0137  01A1               	clrf	___aodiv@divisor+1
  5571  0138  01A2               	clrf	___aodiv@divisor+2
  5572  0139  01A3               	clrf	___aodiv@divisor+3
  5573  013A  01A4               	clrf	___aodiv@divisor+4
  5574  013B  01A5               	clrf	___aodiv@divisor+5
  5575  013C  01A6               	clrf	___aodiv@divisor+6
  5576  013D  01A7               	clrf	___aodiv@divisor+7
  5577  013E  0844               	movf	dtoa@n,w
  5578  013F  00A8               	movwf	___aodiv@dividend
  5579  0140  0845               	movf	dtoa@n+1,w
  5580  0141  00A9               	movwf	___aodiv@dividend+1
  5581  0142  0846               	movf	dtoa@n+2,w
  5582  0143  00AA               	movwf	___aodiv@dividend+2
  5583  0144  0847               	movf	dtoa@n+3,w
  5584  0145  00AB               	movwf	___aodiv@dividend+3
  5585  0146  0848               	movf	dtoa@n+4,w
  5586  0147  00AC               	movwf	___aodiv@dividend+4
  5587  0148  0849               	movf	dtoa@n+5,w
  5588  0149  00AD               	movwf	___aodiv@dividend+5
  5589  014A  084A               	movf	dtoa@n+6,w
  5590  014B  00AE               	movwf	___aodiv@dividend+6
  5591  014C  084B               	movf	dtoa@n+7,w
  5592  014D  00AF               	movwf	___aodiv@dividend+7
  5593  014E  318E  26FF  3180   	fcall	___aodiv
  5594  0151  0020               	movlb	0	; select bank0
  5595  0152  0820               	movf	?___aodiv,w
  5596  0153  00C4               	movwf	dtoa@n
  5597  0154  0821               	movf	?___aodiv+1,w
  5598  0155  00C5               	movwf	dtoa@n+1
  5599  0156  0822               	movf	?___aodiv+2,w
  5600  0157  00C6               	movwf	dtoa@n+2
  5601  0158  0823               	movf	?___aodiv+3,w
  5602  0159  00C7               	movwf	dtoa@n+3
  5603  015A  0824               	movf	?___aodiv+4,w
  5604  015B  00C8               	movwf	dtoa@n+4
  5605  015C  0825               	movf	?___aodiv+5,w
  5606  015D  00C9               	movwf	dtoa@n+5
  5607  015E  0826               	movf	?___aodiv+6,w
  5608  015F  00CA               	movwf	dtoa@n+6
  5609  0160  0827               	movf	?___aodiv+7,w
  5610  0161  00CB               	movwf	dtoa@n+7
  5611  0162                     l1028:	
  5612                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 318:     }
  5613                           
  5614                           
  5615                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 312:     while (!
      +                          (i < 1) && (n || (0 < p) || ((0 < w) && (flags & (1 << 1))))) {
  5616  0162  0020               	movlb	0	; select bank0
  5617  0163  084D               	movf	dtoa@i+1,w
  5618  0164  3A80               	xorlw	128
  5619  0165  00B8               	movwf	??_dtoa
  5620  0166  3080               	movlw	128
  5621  0167  0238               	subwf	??_dtoa,w
  5622  0168  1D03               	skipz
  5623  0169  296C               	goto	u2975
  5624  016A  3001               	movlw	1
  5625  016B  024C               	subwf	dtoa@i,w
  5626  016C                     u2975:
  5627  016C  1C03               	skipc
  5628  016D  296F               	goto	u2971
  5629  016E  2970               	goto	u2970
  5630  016F                     u2971:
  5631  016F  299D               	goto	l2833
  5632  0170                     u2970:
  5633  0170                     l2825:
  5634  0170  0020               	movlb	0	; select bank0
  5635  0171  0844               	movf	dtoa@n,w
  5636  0172  0445               	iorwf	dtoa@n+1,w
  5637  0173  0446               	iorwf	dtoa@n+2,w
  5638  0174  0447               	iorwf	dtoa@n+3,w
  5639  0175  0448               	iorwf	dtoa@n+4,w
  5640  0176  0449               	iorwf	dtoa@n+5,w
  5641  0177  044A               	iorwf	dtoa@n+6,w
  5642  0178  044B               	iorwf	dtoa@n+7,w
  5643  0179  1D03               	skipz
  5644  017A  297C               	goto	u2981
  5645  017B  297D               	goto	u2980
  5646  017C                     u2981:
  5647  017C  28F9               	goto	l2815
  5648  017D                     u2980:
  5649  017D                     l2827:
  5650  017D  083E               	movf	dtoa@p+1,w
  5651  017E  3A80               	xorlw	128
  5652  017F  00B8               	movwf	??_dtoa
  5653  0180  3080               	movlw	128
  5654  0181  0238               	subwf	??_dtoa,w
  5655  0182  1D03               	skipz
  5656  0183  2986               	goto	u2995
  5657  0184  3001               	movlw	1
  5658  0185  023D               	subwf	dtoa@p,w
  5659  0186                     u2995:
  5660  0186  1803               	skipnc
  5661  0187  2989               	goto	u2991
  5662  0188  298A               	goto	u2990
  5663  0189                     u2991:
  5664  0189  28F9               	goto	l2815
  5665  018A                     u2990:
  5666  018A                     l2829:
  5667  018A  0020               	movlb	0	; select bank0
  5668  018B  0841               	movf	dtoa@w+1,w
  5669  018C  3A80               	xorlw	128
  5670  018D  00B8               	movwf	??_dtoa
  5671  018E  3080               	movlw	128
  5672  018F  0238               	subwf	??_dtoa,w
  5673  0190  1D03               	skipz
  5674  0191  2994               	goto	u3005
  5675  0192  3001               	movlw	1
  5676  0193  0240               	subwf	dtoa@w,w
  5677  0194                     u3005:
  5678  0194  1C03               	skipc
  5679  0195  2997               	goto	u3001
  5680  0196  2998               	goto	u3000
  5681  0197                     u3001:
  5682  0197  299D               	goto	l2833
  5683  0198                     u3000:
  5684  0198                     l2831:
  5685  0198  0022               	movlb	2	; select bank2
  5686  0199  18D4               	btfsc	_flags^(0+256),1
  5687  019A  299C               	goto	u3011
  5688  019B  299D               	goto	u3010
  5689  019C                     u3011:
  5690  019C  28F9               	goto	l2815
  5691  019D                     u3010:
  5692  019D                     l2833:
  5693                           
  5694                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 321:     if (s ||
      +                           (flags & (1 << 2))) {
  5695  019D  0020               	movlb	0	; select bank0
  5696  019E  0842               	movf	dtoa@s,w
  5697  019F  0443               	iorwf	dtoa@s+1,w
  5698  01A0  1D03               	btfss	3,2
  5699  01A1  29A3               	goto	u3021
  5700  01A2  29A4               	goto	u3020
  5701  01A3                     u3021:
  5702  01A3  29A9               	goto	l2837
  5703  01A4                     u3020:
  5704  01A4                     l2835:
  5705  01A4  0022               	movlb	2	; select bank2
  5706  01A5  1D54               	btfss	_flags^(0+256),2
  5707  01A6  29A8               	goto	u3031
  5708  01A7  29A9               	goto	u3030
  5709  01A8                     u3031:
  5710  01A8  29C6               	goto	l2847
  5711  01A9                     u3030:
  5712  01A9                     l2837:
  5713                           
  5714                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 322:         --i;
  5715  01A9  30FF               	movlw	255
  5716  01AA  0020               	movlb	0	; select bank0
  5717  01AB  07CC               	addwf	dtoa@i,f
  5718  01AC  30FF               	movlw	255
  5719  01AD  3DCD               	addwfc	dtoa@i+1,f
  5720  01AE                     l2839:
  5721                           
  5722                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 323:         dbuf
      +                          [i] = s ? '-' : '+';
  5723  01AE  0842               	movf	dtoa@s,w
  5724  01AF  0443               	iorwf	dtoa@s+1,w
  5725  01B0  1D03               	btfss	3,2
  5726  01B1  29B3               	goto	u3041
  5727  01B2  29B4               	goto	u3040
  5728  01B3                     u3041:
  5729  01B3  29B9               	goto	l2843
  5730  01B4                     u3040:
  5731  01B4                     l2841:
  5732  01B4  302B               	movlw	43
  5733  01B5  00BB               	movwf	_dtoa$1239
  5734  01B6  3000               	movlw	0
  5735  01B7  00BC               	movwf	_dtoa$1239+1
  5736  01B8  29BD               	goto	l2845
  5737  01B9                     l2843:
  5738  01B9  302D               	movlw	45
  5739  01BA  00BB               	movwf	_dtoa$1239
  5740  01BB  3000               	movlw	0
  5741  01BC  00BC               	movwf	_dtoa$1239+1
  5742  01BD                     l2845:
  5743  01BD  083B               	movf	_dtoa$1239,w
  5744  01BE  00B8               	movwf	??_dtoa
  5745  01BF  084C               	movf	dtoa@i,w
  5746  01C0  3EA0               	addlw	(low (_dbuf| (0+256)))& (0+255)
  5747  01C1  0086               	movwf	6
  5748  01C2  3001               	movlw	1	; select bank3/4
  5749  01C3  0087               	movwf	7
  5750  01C4  0838               	movf	??_dtoa,w
  5751  01C5  0081               	movwf	1
  5752  01C6                     l2847:
  5753                           
  5754                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 327:     return p
      +                          ad(fp, &dbuf[i], w);
  5755  01C6  0020               	movlb	0	; select bank0
  5756  01C7  084C               	movf	dtoa@i,w
  5757  01C8  3EA0               	addlw	(low (_dbuf| (0+256)))& (0+255)
  5758  01C9  00B8               	movwf	??_dtoa
  5759  01CA  0838               	movf	??_dtoa,w
  5760  01CB  00A4               	movwf	pad@buf
  5761  01CC  0841               	movf	dtoa@w+1,w
  5762  01CD  00A6               	movwf	pad@p+1
  5763  01CE  0840               	movf	dtoa@w,w
  5764  01CF  00A5               	movwf	pad@p
  5765  01D0  083F               	movf	dtoa@fp,w
  5766  01D1  3193  2351  3180   	fcall	_pad
  5767  01D4  0020               	movlb	0	; select bank0
  5768  01D5  0825               	movf	?_pad+1,w
  5769  01D6  00B1               	movwf	?_dtoa+1
  5770  01D7  0824               	movf	?_pad,w
  5771  01D8  00B0               	movwf	?_dtoa
  5772  01D9                     l1042:
  5773  01D9  0008               	return
  5774  01DA                     __end_of_dtoa:
  5775                           
  5776                           	psect	text11
  5777  1351                     __ptext11:	
  5778 ;; *************** function _pad *****************
  5779 ;; Defined at:
  5780 ;;		line 72 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c"
  5781 ;; Parameters:    Size  Location     Type
  5782 ;;  fp              1    wreg     PTR struct _IO_FILE
  5783 ;;		 -> sprintf@f(5), 
  5784 ;;  buf             1    4[BANK0 ] PTR unsigned char 
  5785 ;;		 -> dbuf(32), 
  5786 ;;  p               2    5[BANK0 ] int 
  5787 ;; Auto vars:     Size  Location     Type
  5788 ;;  fp              1   11[BANK0 ] PTR struct _IO_FILE
  5789 ;;		 -> sprintf@f(5), 
  5790 ;;  w               2    9[BANK0 ] int 
  5791 ;;  i               2    7[BANK0 ] int 
  5792 ;; Return value:  Size  Location     Type
  5793 ;;                  2    4[BANK0 ] int 
  5794 ;; Registers used:
  5795 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  5796 ;; Tracked objects:
  5797 ;;		On entry : 0/0
  5798 ;;		On exit  : 0/0
  5799 ;;		Unchanged: 0/0
  5800 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  5801 ;;      Params:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5802 ;;      Locals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5803 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5804 ;;      Totals:         1       8       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5805 ;;Total ram usage:        9 bytes
  5806 ;; Hardware stack levels used: 1
  5807 ;; Hardware stack levels required when called: 3
  5808 ;; This function calls:
  5809 ;;		_fputc
  5810 ;;		_fputs
  5811 ;;		_strlen
  5812 ;; This function is called by:
  5813 ;;		_dtoa
  5814 ;;		_utoa
  5815 ;; This function uses a non-reentrant model
  5816 ;;
  5817                           
  5818                           
  5819                           ;psect for function _pad
  5820  1351                     _pad:
  5821                           
  5822                           ;incstack = 0
  5823                           ; Regs used in _pad: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  5824                           ;pad@fp stored from wreg
  5825  1351  0020               	movlb	0	; select bank0
  5826  1352  00AB               	movwf	pad@fp
  5827  1353                     l2721:
  5828                           
  5829                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 72: static int pa
      +                          d(FILE *fp, char *buf, int p);C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\commo
      +                          n\doprnt.c: 73: {;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 
      +                          74:     int i, w;;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 
      +                          77:     if (flags & (1 << 0)) {
  5830  1353  0022               	movlb	2	; select bank2
  5831  1354  1C54               	btfss	_flags^(0+256),0
  5832  1355  2B57               	goto	u2811
  5833  1356  2B58               	goto	u2810
  5834  1357                     u2811:
  5835  1357  2B61               	goto	l2725
  5836  1358                     u2810:
  5837  1358                     l2723:
  5838                           
  5839                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 78:         fputs
      +                          ((const char *)buf, fp);
  5840  1358  0020               	movlb	0	; select bank0
  5841  1359  082B               	movf	pad@fp,w
  5842  135A  00FC               	movwf	??_pad
  5843  135B  087C               	movf	??_pad,w
  5844  135C  00F8               	movwf	fputs@fp
  5845  135D  0824               	movf	pad@buf,w
  5846  135E  3191  217C  3193   	fcall	_fputs
  5847  1361                     l2725:
  5848                           
  5849                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 82:     w = (p < 
      +                          0) ? 0 : p;
  5850  1361  0020               	movlb	0	; select bank0
  5851  1362  1BA6               	btfsc	pad@p+1,7
  5852  1363  2B65               	goto	u2821
  5853  1364  2B66               	goto	u2820
  5854  1365                     u2821:
  5855  1365  2B6B               	goto	l2729
  5856  1366                     u2820:
  5857  1366                     l2727:
  5858  1366  0826               	movf	pad@p+1,w
  5859  1367  00AA               	movwf	pad@w+1
  5860  1368  0825               	movf	pad@p,w
  5861  1369  00A9               	movwf	pad@w
  5862  136A  2B6D               	goto	l1011
  5863  136B                     l2729:
  5864  136B  01A9               	clrf	pad@w
  5865  136C  01AA               	clrf	pad@w+1
  5866  136D                     l1011:
  5867                           
  5868                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 83:     i = 0;
  5869  136D  01A7               	clrf	pad@i
  5870  136E  01A8               	clrf	pad@i+1
  5871                           
  5872                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 84:     while (i 
      +                          < w) {
  5873  136F  2B81               	goto	l2735
  5874  1370                     l2731:
  5875                           
  5876                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 85:         fputc
      +                          (' ', fp);
  5877  1370  3020               	movlw	32
  5878  1371  00F0               	movwf	fputc@c
  5879  1372  3000               	movlw	0
  5880  1373  00F1               	movwf	fputc@c+1
  5881  1374  0020               	movlb	0	; select bank0
  5882  1375  082B               	movf	pad@fp,w
  5883  1376  00FC               	movwf	??_pad
  5884  1377  087C               	movf	??_pad,w
  5885  1378  00F2               	movwf	fputc@fp
  5886  1379  3192  2255  3193   	fcall	_fputc
  5887  137C                     l2733:
  5888                           
  5889                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 86:         ++i;
  5890  137C  3001               	movlw	1
  5891  137D  0020               	movlb	0	; select bank0
  5892  137E  07A7               	addwf	pad@i,f
  5893  137F  3000               	movlw	0
  5894  1380  3DA8               	addwfc	pad@i+1,f
  5895  1381                     l2735:
  5896                           
  5897                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 84:     while (i 
      +                          < w) {
  5898  1381  0828               	movf	pad@i+1,w
  5899  1382  3A80               	xorlw	128
  5900  1383  00FC               	movwf	??_pad
  5901  1384  082A               	movf	pad@w+1,w
  5902  1385  3A80               	xorlw	128
  5903  1386  027C               	subwf	??_pad,w
  5904  1387  1D03               	skipz
  5905  1388  2B8B               	goto	u2835
  5906  1389  0829               	movf	pad@w,w
  5907  138A  0227               	subwf	pad@i,w
  5908  138B                     u2835:
  5909  138B  1C03               	skipc
  5910  138C  2B8E               	goto	u2831
  5911  138D  2B8F               	goto	u2830
  5912  138E                     u2831:
  5913  138E  2B70               	goto	l2731
  5914  138F                     u2830:
  5915  138F                     l1014:
  5916                           
  5917                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 90:     if (!(fla
      +                          gs & (1 << 0))) {
  5918  138F  0022               	movlb	2	; select bank2
  5919  1390  1854               	btfsc	_flags^(0+256),0
  5920  1391  2B93               	goto	u2841
  5921  1392  2B94               	goto	u2840
  5922  1393                     u2841:
  5923  1393  2B9D               	goto	l2739
  5924  1394                     u2840:
  5925  1394                     l2737:
  5926                           
  5927                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 91:         fputs
      +                          ((const char *)buf, fp);
  5928  1394  0020               	movlb	0	; select bank0
  5929  1395  082B               	movf	pad@fp,w
  5930  1396  00FC               	movwf	??_pad
  5931  1397  087C               	movf	??_pad,w
  5932  1398  00F8               	movwf	fputs@fp
  5933  1399  0824               	movf	pad@buf,w
  5934  139A  3191  217C  3193   	fcall	_fputs
  5935  139D                     l2739:
  5936                           
  5937                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 94:     return (i
      +                          nt)(strlen(buf) + (size_t)w);
  5938  139D  0020               	movlb	0	; select bank0
  5939  139E  0824               	movf	pad@buf,w
  5940  139F  3190  2099  3193   	fcall	_strlen
  5941  13A2  0020               	movlb	0	; select bank0
  5942  13A3  0829               	movf	pad@w,w
  5943  13A4  0770               	addwf	?_strlen,w
  5944  13A5  00A4               	movwf	?_pad
  5945  13A6  082A               	movf	pad@w+1,w
  5946  13A7  3D71               	addwfc	?_strlen+1,w
  5947  13A8  00A5               	movwf	?_pad+1
  5948  13A9                     l1016:
  5949  13A9  0008               	return
  5950  13AA                     __end_of_pad:
  5951                           
  5952                           	psect	text12
  5953  1099                     __ptext12:	
  5954 ;; *************** function _strlen *****************
  5955 ;; Defined at:
  5956 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\strlen.c"
  5957 ;; Parameters:    Size  Location     Type
  5958 ;;  s               1    wreg     PTR const unsigned char 
  5959 ;;		 -> dbuf(32), 
  5960 ;; Auto vars:     Size  Location     Type
  5961 ;;  s               1    4[COMMON] PTR const unsigned char 
  5962 ;;		 -> dbuf(32), 
  5963 ;;  a               1    3[COMMON] PTR const unsigned char 
  5964 ;;		 -> dbuf(32), 
  5965 ;; Return value:  Size  Location     Type
  5966 ;;                  2    0[COMMON] unsigned int 
  5967 ;; Registers used:
  5968 ;;		wreg, fsr1l, fsr1h, status,2, status,0
  5969 ;; Tracked objects:
  5970 ;;		On entry : 0/0
  5971 ;;		On exit  : 0/0
  5972 ;;		Unchanged: 0/0
  5973 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  5974 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5975 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5976 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5977 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5978 ;;Total ram usage:        5 bytes
  5979 ;; Hardware stack levels used: 1
  5980 ;; This function calls:
  5981 ;;		Nothing
  5982 ;; This function is called by:
  5983 ;;		_pad
  5984 ;; This function uses a non-reentrant model
  5985 ;;
  5986                           
  5987                           
  5988                           ;psect for function _strlen
  5989  1099                     _strlen:
  5990                           
  5991                           ;incstack = 0
  5992                           ; Regs used in _strlen: [wreg+fsr1l+fsr1h+status,2+status,0]
  5993                           ;strlen@s stored from wreg
  5994  1099  00F4               	movwf	strlen@s
  5995  109A                     l2533:
  5996  109A  0874               	movf	strlen@s,w
  5997  109B  00F2               	movwf	??_strlen
  5998  109C  0872               	movf	??_strlen,w
  5999  109D  00F3               	movwf	strlen@a
  6000  109E  28A3               	goto	l2537
  6001  109F                     l2535:
  6002  109F  3001               	movlw	1
  6003  10A0  00F2               	movwf	??_strlen
  6004  10A1  0872               	movf	??_strlen,w
  6005  10A2  07F4               	addwf	strlen@s,f
  6006  10A3                     l2537:
  6007  10A3  0874               	movf	strlen@s,w
  6008  10A4  0086               	movwf	6
  6009  10A5  3001               	movlw	1	; select bank2/3
  6010  10A6  0087               	movwf	7
  6011  10A7  0801               	movf	1,w
  6012  10A8  1D03               	btfss	3,2
  6013  10A9  28AB               	goto	u2381
  6014  10AA  28AC               	goto	u2380
  6015  10AB                     u2381:
  6016  10AB  289F               	goto	l2535
  6017  10AC                     u2380:
  6018  10AC                     l2539:
  6019  10AC  0873               	movf	strlen@a,w
  6020  10AD  0274               	subwf	strlen@s,w
  6021  10AE  00F0               	movwf	?_strlen
  6022  10AF  01F1               	clrf	?_strlen+1
  6023  10B0  1BF0               	btfsc	?_strlen,7
  6024  10B1  03F1               	decf	?_strlen+1,f
  6025  10B2                     l1112:
  6026  10B2  0008               	return
  6027  10B3                     __end_of_strlen:
  6028                           
  6029                           	psect	text13
  6030  117C                     __ptext13:	
  6031 ;; *************** function _fputs *****************
  6032 ;; Defined at:
  6033 ;;		line 8 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\nf_fputs.c"
  6034 ;; Parameters:    Size  Location     Type
  6035 ;;  s               1    wreg     PTR const unsigned char 
  6036 ;;		 -> dbuf(32), 
  6037 ;;  fp              1    8[COMMON] PTR struct _IO_FILE
  6038 ;;		 -> sprintf@f(5), 
  6039 ;; Auto vars:     Size  Location     Type
  6040 ;;  s               1    3[BANK0 ] PTR const unsigned char 
  6041 ;;		 -> dbuf(32), 
  6042 ;;  i               2    1[BANK0 ] int 
  6043 ;;  c               1    0[BANK0 ] unsigned char 
  6044 ;; Return value:  Size  Location     Type
  6045 ;;                  2    8[COMMON] int 
  6046 ;; Registers used:
  6047 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  6048 ;; Tracked objects:
  6049 ;;		On entry : 0/0
  6050 ;;		On exit  : 0/0
  6051 ;;		Unchanged: 0/0
  6052 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  6053 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6054 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6055 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6056 ;;      Totals:         4       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6057 ;;Total ram usage:        8 bytes
  6058 ;; Hardware stack levels used: 1
  6059 ;; Hardware stack levels required when called: 2
  6060 ;; This function calls:
  6061 ;;		_fputc
  6062 ;; This function is called by:
  6063 ;;		_pad
  6064 ;; This function uses a non-reentrant model
  6065 ;;
  6066                           
  6067                           
  6068                           ;psect for function _fputs
  6069  117C                     _fputs:
  6070                           
  6071                           ;incstack = 0
  6072                           ; Regs used in _fputs: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  6073                           ;fputs@s stored from wreg
  6074  117C  0020               	movlb	0	; select bank0
  6075  117D  00A3               	movwf	fputs@s
  6076  117E                     l2525:
  6077  117E  01A1               	clrf	fputs@i
  6078  117F  01A2               	clrf	fputs@i+1
  6079  1180  2994               	goto	l2531
  6080  1181                     l2527:
  6081  1181  0820               	movf	fputs@c,w
  6082  1182  00F9               	movwf	??_fputs
  6083  1183  01FA               	clrf	??_fputs+1
  6084  1184  0879               	movf	??_fputs,w
  6085  1185  00F0               	movwf	fputc@c
  6086  1186  087A               	movf	??_fputs+1,w
  6087  1187  00F1               	movwf	fputc@c+1
  6088  1188  0878               	movf	fputs@fp,w
  6089  1189  00FB               	movwf	??_fputs+2
  6090  118A  087B               	movf	??_fputs+2,w
  6091  118B  00F2               	movwf	fputc@fp
  6092  118C  3192  2255  3191   	fcall	_fputc
  6093  118F                     l2529:
  6094  118F  3001               	movlw	1
  6095  1190  0020               	movlb	0	; select bank0
  6096  1191  07A1               	addwf	fputs@i,f
  6097  1192  3000               	movlw	0
  6098  1193  3DA2               	addwfc	fputs@i+1,f
  6099  1194                     l2531:
  6100  1194  0821               	movf	fputs@i,w
  6101  1195  0723               	addwf	fputs@s,w
  6102  1196  00F9               	movwf	??_fputs
  6103  1197  0879               	movf	??_fputs,w
  6104  1198  0086               	movwf	6
  6105  1199  3001               	movlw	1	; select bank2/3
  6106  119A  0087               	movwf	7
  6107  119B  0801               	movf	1,w
  6108  119C  00FA               	movwf	??_fputs+1
  6109  119D  087A               	movf	??_fputs+1,w
  6110  119E  00A0               	movwf	fputs@c
  6111  119F  0820               	movf	fputs@c,w
  6112  11A0  1D03               	btfss	3,2
  6113  11A1  29A3               	goto	u2371
  6114  11A2  29A4               	goto	u2370
  6115  11A3                     u2371:
  6116  11A3  2981               	goto	l2527
  6117  11A4                     u2370:
  6118  11A4                     l1103:
  6119  11A4  0008               	return
  6120  11A5                     __end_of_fputs:
  6121                           
  6122                           	psect	text14
  6123  1255                     __ptext14:	
  6124 ;; *************** function _fputc *****************
  6125 ;; Defined at:
  6126 ;;		line 8 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\nf_fputc.c"
  6127 ;; Parameters:    Size  Location     Type
  6128 ;;  c               2    0[COMMON] int 
  6129 ;;  fp              1    2[COMMON] PTR struct _IO_FILE
  6130 ;;		 -> sprintf@f(5), 
  6131 ;; Auto vars:     Size  Location     Type
  6132 ;;		None
  6133 ;; Return value:  Size  Location     Type
  6134 ;;                  2    0[COMMON] int 
  6135 ;; Registers used:
  6136 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  6137 ;; Tracked objects:
  6138 ;;		On entry : 0/0
  6139 ;;		On exit  : 0/0
  6140 ;;		Unchanged: 0/0
  6141 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  6142 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6143 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6144 ;;      Temps:          5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6145 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6146 ;;Total ram usage:        8 bytes
  6147 ;; Hardware stack levels used: 1
  6148 ;; Hardware stack levels required when called: 1
  6149 ;; This function calls:
  6150 ;;		_putch
  6151 ;; This function is called by:
  6152 ;;		_pad
  6153 ;;		_vfpfcnvrt
  6154 ;;		_fputs
  6155 ;; This function uses a non-reentrant model
  6156 ;;
  6157                           
  6158                           
  6159                           ;psect for function _fputc
  6160  1255                     _fputc:
  6161  1255                     l2503:	
  6162                           ;incstack = 0
  6163                           ; Regs used in _fputc: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  6164                           
  6165  1255  0872               	movf	fputc@fp,w
  6166  1256  1903               	btfsc	3,2
  6167  1257  2A59               	goto	u2311
  6168  1258  2A5A               	goto	u2310
  6169  1259                     u2311:
  6170  1259  2A5F               	goto	l2507
  6171  125A                     u2310:
  6172  125A                     l2505:
  6173  125A  0872               	movf	fputc@fp,w
  6174  125B  1D03               	btfss	3,2
  6175  125C  2A5E               	goto	u2321
  6176  125D  2A5F               	goto	u2320
  6177  125E                     u2321:
  6178  125E  2A64               	goto	l2509
  6179  125F                     u2320:
  6180  125F                     l2507:
  6181  125F  0870               	movf	fputc@c,w
  6182  1260  3188  2000  3192   	fcall	_putch
  6183  1263  2AA3               	goto	l1095
  6184  1264                     l2509:
  6185  1264  0872               	movf	fputc@fp,w
  6186  1265  3E03               	addlw	3
  6187  1266  0086               	movwf	6
  6188  1267  0187               	clrf	7
  6189  1268  0016               	moviw fsr1++
  6190  1269  0401               	iorwf	1,w
  6191  126A  1903               	btfsc	3,2
  6192  126B  2A6D               	goto	u2331
  6193  126C  2A6E               	goto	u2330
  6194  126D                     u2331:
  6195  126D  2A8B               	goto	l2513
  6196  126E                     u2330:
  6197  126E                     l2511:
  6198  126E  0872               	movf	fputc@fp,w
  6199  126F  3E03               	addlw	3
  6200  1270  0086               	movwf	6
  6201  1271  0187               	clrf	7
  6202  1272  3F40               	moviw [0]fsr1
  6203  1273  00F3               	movwf	??_fputc
  6204  1274  3F41               	moviw [1]fsr1
  6205  1275  00F4               	movwf	??_fputc+1
  6206  1276  0A72               	incf	fputc@fp,w
  6207  1277  0086               	movwf	6
  6208  1278  0187               	clrf	7
  6209  1279  3F40               	moviw [0]fsr1
  6210  127A  00F5               	movwf	??_fputc+2
  6211  127B  3F41               	moviw [1]fsr1
  6212  127C  00F6               	movwf	??_fputc+3
  6213  127D  0876               	movf	??_fputc+3,w
  6214  127E  3A80               	xorlw	128
  6215  127F  00F7               	movwf	??_fputc+4
  6216  1280  0874               	movf	??_fputc+1,w
  6217  1281  3A80               	xorlw	128
  6218  1282  0277               	subwf	??_fputc+4,w
  6219  1283  1D03               	skipz
  6220  1284  2A87               	goto	u2345
  6221  1285  0873               	movf	??_fputc,w
  6222  1286  0275               	subwf	??_fputc+2,w
  6223  1287                     u2345:
  6224  1287  1803               	skipnc
  6225  1288  2A8A               	goto	u2341
  6226  1289  2A8B               	goto	u2340
  6227  128A                     u2341:
  6228  128A  2AA3               	goto	l1095
  6229  128B                     u2340:
  6230  128B                     l2513:
  6231  128B  0870               	movf	fputc@c,w
  6232  128C  00F3               	movwf	??_fputc
  6233  128D  0872               	movf	fputc@fp,w
  6234  128E  0086               	movwf	6
  6235  128F  0187               	clrf	7
  6236  1290  0A72               	incf	fputc@fp,w
  6237  1291  0084               	movwf	4
  6238  1292  0185               	clrf	5
  6239  1293  0800               	movf	0,w
  6240  1294  0701               	addwf	1,w
  6241  1295  00F4               	movwf	??_fputc+1
  6242  1296  0874               	movf	??_fputc+1,w
  6243  1297  0086               	movwf	6
  6244  1298  0187               	clrf	7
  6245  1299  0873               	movf	??_fputc,w
  6246  129A  0081               	movwf	1
  6247  129B                     l2515:
  6248  129B  0A72               	incf	fputc@fp,w
  6249  129C  0086               	movwf	6
  6250  129D  0187               	clrf	7
  6251  129E  3001               	movlw	1
  6252  129F  0781               	addwf	1,f
  6253  12A0  3141               	addfsr 1,1
  6254  12A1  1803               	skipnc
  6255  12A2  0A81               	incf	1,f
  6256  12A3                     l1095:
  6257  12A3  0008               	return
  6258  12A4                     __end_of_fputc:
  6259                           
  6260                           	psect	text15
  6261  0800                     __ptext15:	
  6262 ;; *************** function _putch *****************
  6263 ;; Defined at:
  6264 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\putch.c"
  6265 ;; Parameters:    Size  Location     Type
  6266 ;;  c               1    wreg     unsigned char 
  6267 ;; Auto vars:     Size  Location     Type
  6268 ;;  c               1    0[COMMON] unsigned char 
  6269 ;; Return value:  Size  Location     Type
  6270 ;;                  1    wreg      void 
  6271 ;; Registers used:
  6272 ;;		wreg
  6273 ;; Tracked objects:
  6274 ;;		On entry : 0/0
  6275 ;;		On exit  : 0/0
  6276 ;;		Unchanged: 0/0
  6277 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  6278 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6279 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6280 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6281 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6282 ;;Total ram usage:        0 bytes
  6283 ;; Hardware stack levels used: 1
  6284 ;; This function calls:
  6285 ;;		Nothing
  6286 ;; This function is called by:
  6287 ;;		_fputc
  6288 ;; This function uses a non-reentrant model
  6289 ;;
  6290                           
  6291                           
  6292                           ;psect for function _putch
  6293  0800                     _putch:
  6294  0800                     l1106:	
  6295                           ;incstack = 0
  6296                           ; Regs used in _putch: [wreg]
  6297                           
  6298  0800  0008               	return
  6299  0801                     __end_of_putch:
  6300                           
  6301                           	psect	text16
  6302  107F                     __ptext16:	
  6303 ;; *************** function _abs *****************
  6304 ;; Defined at:
  6305 ;;		line 1 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\abs.c"
  6306 ;; Parameters:    Size  Location     Type
  6307 ;;  a               2    3[COMMON] int 
  6308 ;; Auto vars:     Size  Location     Type
  6309 ;;		None
  6310 ;; Return value:  Size  Location     Type
  6311 ;;                  2    3[COMMON] int 
  6312 ;; Registers used:
  6313 ;;		wreg, status,2, status,0
  6314 ;; Tracked objects:
  6315 ;;		On entry : 0/0
  6316 ;;		On exit  : 0/0
  6317 ;;		Unchanged: 0/0
  6318 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  6319 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6320 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6321 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6322 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6323 ;;Total ram usage:        4 bytes
  6324 ;; Hardware stack levels used: 1
  6325 ;; This function calls:
  6326 ;;		Nothing
  6327 ;; This function is called by:
  6328 ;;		_dtoa
  6329 ;; This function uses a non-reentrant model
  6330 ;;
  6331                           
  6332                           
  6333                           ;psect for function _abs
  6334  107F                     _abs:
  6335  107F                     l2743:	
  6336                           ;incstack = 0
  6337                           ; Regs used in _abs: [wreg+status,2+status,0]
  6338                           
  6339  107F  0874               	movf	abs@a+1,w
  6340  1080  3A80               	xorlw	128
  6341  1081  00F5               	movwf	??_abs
  6342  1082  3080               	movlw	128
  6343  1083  0275               	subwf	??_abs,w
  6344  1084  1D03               	skipz
  6345  1085  2888               	goto	u2855
  6346  1086  3001               	movlw	1
  6347  1087  0273               	subwf	abs@a,w
  6348  1088                     u2855:
  6349  1088  1803               	skipnc
  6350  1089  288B               	goto	u2851
  6351  108A  288C               	goto	u2850
  6352  108B                     u2851:
  6353  108B  2898               	goto	l1080
  6354  108C                     u2850:
  6355  108C                     l2745:
  6356  108C  0973               	comf	abs@a,w
  6357  108D  00F5               	movwf	??_abs
  6358  108E  0974               	comf	abs@a+1,w
  6359  108F  00F6               	movwf	??_abs+1
  6360  1090  0AF5               	incf	??_abs,f
  6361  1091  1903               	skipnz
  6362  1092  0AF6               	incf	??_abs+1,f
  6363  1093  0875               	movf	??_abs,w
  6364  1094  00F3               	movwf	?_abs
  6365  1095  0876               	movf	??_abs+1,w
  6366  1096  00F4               	movwf	?_abs+1
  6367  1097  2898               	goto	l1083
  6368  1098                     l1080:
  6369  1098                     l1083:
  6370  1098  0008               	return
  6371  1099                     __end_of_abs:
  6372                           
  6373                           	psect	text17
  6374  0D28                     __ptext17:	
  6375 ;; *************** function ___aomod *****************
  6376 ;; Defined at:
  6377 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\aomod.c"
  6378 ;; Parameters:    Size  Location     Type
  6379 ;;  divisor         8    0[BANK0 ] long long 
  6380 ;;  dividend        8    8[BANK0 ] long long 
  6381 ;; Auto vars:     Size  Location     Type
  6382 ;;  sign            1    2[COMMON] unsigned char 
  6383 ;;  counter         1    1[COMMON] unsigned char 
  6384 ;; Return value:  Size  Location     Type
  6385 ;;                  8    0[BANK0 ] long long 
  6386 ;; Registers used:
  6387 ;;		wreg, fsr1l, fsr1h, status,2, status,0
  6388 ;; Tracked objects:
  6389 ;;		On entry : 0/0
  6390 ;;		On exit  : 0/0
  6391 ;;		Unchanged: 0/0
  6392 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  6393 ;;      Params:         0      16       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6394 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6395 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6396 ;;      Totals:         3      16       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6397 ;;Total ram usage:       19 bytes
  6398 ;; Hardware stack levels used: 1
  6399 ;; This function calls:
  6400 ;;		Nothing
  6401 ;; This function is called by:
  6402 ;;		_dtoa
  6403 ;; This function uses a non-reentrant model
  6404 ;;
  6405                           
  6406                           
  6407                           ;psect for function ___aomod
  6408  0D28                     ___aomod:
  6409  0D28                     l2653:	
  6410                           ;incstack = 0
  6411                           ; Regs used in ___aomod: [wreg+fsr1l+fsr1h+status,2+status,0]
  6412                           
  6413  0D28  01F2               	clrf	___aomod@sign
  6414  0D29                     l2655:
  6415  0D29  3028               	movlw	low ___aomod@dividend
  6416  0D2A  0086               	movwf	6
  6417  0D2B  3000               	movlw	high ___aomod@dividend
  6418  0D2C  0087               	movwf	7
  6419  0D2D  3F47               	moviw [7]fsr1
  6420  0D2E  00F0               	movwf	??___aomod
  6421  0D2F  1FF0               	btfss	??___aomod,7
  6422  0D30  2D32               	goto	u2621
  6423  0D31  2D33               	goto	u2620
  6424  0D32                     u2621:
  6425  0D32  2D54               	goto	l2659
  6426  0D33                     u2620:
  6427  0D33                     l2657:
  6428  0D33  0020               	movlb	0	; select bank0
  6429  0D34  09A8               	comf	___aomod@dividend,f
  6430  0D35  09A9               	comf	___aomod@dividend+1,f
  6431  0D36  09AA               	comf	___aomod@dividend+2,f
  6432  0D37  09AB               	comf	___aomod@dividend+3,f
  6433  0D38  09AC               	comf	___aomod@dividend+4,f
  6434  0D39  09AD               	comf	___aomod@dividend+5,f
  6435  0D3A  09AE               	comf	___aomod@dividend+6,f
  6436  0D3B  09AF               	comf	___aomod@dividend+7,f
  6437  0D3C  0AA8               	incf	___aomod@dividend,f
  6438  0D3D  1D03               	skipz
  6439  0D3E  2D52               	goto	u263lld
  6440  0D3F  0AA9               	incf	___aomod@dividend+1,f
  6441  0D40  1D03               	skipz
  6442  0D41  2D52               	goto	u263lld
  6443  0D42  0AAA               	incf	___aomod@dividend+2,f
  6444  0D43  1D03               	skipz
  6445  0D44  2D52               	goto	u263lld
  6446  0D45  0AAB               	incf	___aomod@dividend+3,f
  6447  0D46  1D03               	skipz
  6448  0D47  2D52               	goto	u263lld
  6449  0D48  0AAC               	incf	___aomod@dividend+4,f
  6450  0D49  1D03               	skipz
  6451  0D4A  2D52               	goto	u263lld
  6452  0D4B  0AAD               	incf	___aomod@dividend+5,f
  6453  0D4C  1D03               	skipz
  6454  0D4D  2D52               	goto	u263lld
  6455  0D4E  0AAE               	incf	___aomod@dividend+6,f
  6456  0D4F  1D03               	skipz
  6457  0D50  2D52               	goto	u263lld
  6458  0D51  0AAF               	incf	___aomod@dividend+7,f
  6459  0D52                     u263lld:
  6460  0D52  01F2               	clrf	___aomod@sign
  6461  0D53  0AF2               	incf	___aomod@sign,f
  6462  0D54                     l2659:
  6463  0D54  3020               	movlw	low ___aomod@divisor
  6464  0D55  0086               	movwf	6
  6465  0D56  3000               	movlw	high ___aomod@divisor
  6466  0D57  0087               	movwf	7
  6467  0D58  3F47               	moviw [7]fsr1
  6468  0D59  00F0               	movwf	??___aomod
  6469  0D5A  1FF0               	btfss	??___aomod,7
  6470  0D5B  2D5D               	goto	u2641
  6471  0D5C  2D5E               	goto	u2640
  6472  0D5D                     u2641:
  6473  0D5D  2D7D               	goto	l2663
  6474  0D5E                     u2640:
  6475  0D5E                     l2661:
  6476  0D5E  0020               	movlb	0	; select bank0
  6477  0D5F  09A0               	comf	___aomod@divisor,f
  6478  0D60  09A1               	comf	___aomod@divisor+1,f
  6479  0D61  09A2               	comf	___aomod@divisor+2,f
  6480  0D62  09A3               	comf	___aomod@divisor+3,f
  6481  0D63  09A4               	comf	___aomod@divisor+4,f
  6482  0D64  09A5               	comf	___aomod@divisor+5,f
  6483  0D65  09A6               	comf	___aomod@divisor+6,f
  6484  0D66  09A7               	comf	___aomod@divisor+7,f
  6485  0D67  0AA0               	incf	___aomod@divisor,f
  6486  0D68  1D03               	skipz
  6487  0D69  2D7D               	goto	u265lld
  6488  0D6A  0AA1               	incf	___aomod@divisor+1,f
  6489  0D6B  1D03               	skipz
  6490  0D6C  2D7D               	goto	u265lld
  6491  0D6D  0AA2               	incf	___aomod@divisor+2,f
  6492  0D6E  1D03               	skipz
  6493  0D6F  2D7D               	goto	u265lld
  6494  0D70  0AA3               	incf	___aomod@divisor+3,f
  6495  0D71  1D03               	skipz
  6496  0D72  2D7D               	goto	u265lld
  6497  0D73  0AA4               	incf	___aomod@divisor+4,f
  6498  0D74  1D03               	skipz
  6499  0D75  2D7D               	goto	u265lld
  6500  0D76  0AA5               	incf	___aomod@divisor+5,f
  6501  0D77  1D03               	skipz
  6502  0D78  2D7D               	goto	u265lld
  6503  0D79  0AA6               	incf	___aomod@divisor+6,f
  6504  0D7A  1D03               	skipz
  6505  0D7B  2D7D               	goto	u265lld
  6506  0D7C  0AA7               	incf	___aomod@divisor+7,f
  6507  0D7D                     u265lld:
  6508  0D7D                     l2663:
  6509  0D7D  0020               	movlb	0	; select bank0
  6510  0D7E  0820               	movf	___aomod@divisor,w
  6511  0D7F  0421               	iorwf	___aomod@divisor+1,w
  6512  0D80  0422               	iorwf	___aomod@divisor+2,w
  6513  0D81  0423               	iorwf	___aomod@divisor+3,w
  6514  0D82  0424               	iorwf	___aomod@divisor+4,w
  6515  0D83  0425               	iorwf	___aomod@divisor+5,w
  6516  0D84  0426               	iorwf	___aomod@divisor+6,w
  6517  0D85  0427               	iorwf	___aomod@divisor+7,w
  6518  0D86  1903               	skipnz
  6519  0D87  2D89               	goto	u2661
  6520  0D88  2D8A               	goto	u2660
  6521  0D89                     u2661:
  6522  0D89  2DDD               	goto	l2679
  6523  0D8A                     u2660:
  6524  0D8A                     l2665:
  6525  0D8A  01F1               	clrf	___aomod@counter
  6526  0D8B  0AF1               	incf	___aomod@counter,f
  6527  0D8C  2D99               	goto	l2671
  6528  0D8D                     l2667:
  6529  0D8D  35A0               	lslf	___aomod@divisor,f
  6530  0D8E  0DA1               	rlf	___aomod@divisor+1,f
  6531  0D8F  0DA2               	rlf	___aomod@divisor+2,f
  6532  0D90  0DA3               	rlf	___aomod@divisor+3,f
  6533  0D91  0DA4               	rlf	___aomod@divisor+4,f
  6534  0D92  0DA5               	rlf	___aomod@divisor+5,f
  6535  0D93  0DA6               	rlf	___aomod@divisor+6,f
  6536  0D94  0DA7               	rlf	___aomod@divisor+7,f
  6537  0D95                     l2669:
  6538  0D95  3001               	movlw	1
  6539  0D96  00F0               	movwf	??___aomod
  6540  0D97  0870               	movf	??___aomod,w
  6541  0D98  07F1               	addwf	___aomod@counter,f
  6542  0D99                     l2671:
  6543  0D99  1FA7               	btfss	___aomod@divisor+7,7
  6544  0D9A  2D9C               	goto	u2671
  6545  0D9B  2D9D               	goto	u2670
  6546  0D9C                     u2671:
  6547  0D9C  2D8D               	goto	l2667
  6548  0D9D                     u2670:
  6549  0D9D                     l2673:
  6550  0D9D  0827               	movf	___aomod@divisor+7,w
  6551  0D9E  022F               	subwf	___aomod@dividend+7,w
  6552  0D9F  1D03               	skipz
  6553  0DA0  2DBB               	goto	u2685
  6554  0DA1  0826               	movf	___aomod@divisor+6,w
  6555  0DA2  022E               	subwf	___aomod@dividend+6,w
  6556  0DA3  1D03               	skipz
  6557  0DA4  2DBB               	goto	u2685
  6558  0DA5  0825               	movf	___aomod@divisor+5,w
  6559  0DA6  022D               	subwf	___aomod@dividend+5,w
  6560  0DA7  1D03               	skipz
  6561  0DA8  2DBB               	goto	u2685
  6562  0DA9  0824               	movf	___aomod@divisor+4,w
  6563  0DAA  022C               	subwf	___aomod@dividend+4,w
  6564  0DAB  1D03               	skipz
  6565  0DAC  2DBB               	goto	u2685
  6566  0DAD  0823               	movf	___aomod@divisor+3,w
  6567  0DAE  022B               	subwf	___aomod@dividend+3,w
  6568  0DAF  1D03               	skipz
  6569  0DB0  2DBB               	goto	u2685
  6570  0DB1  0822               	movf	___aomod@divisor+2,w
  6571  0DB2  022A               	subwf	___aomod@dividend+2,w
  6572  0DB3  1D03               	skipz
  6573  0DB4  2DBB               	goto	u2685
  6574  0DB5  0821               	movf	___aomod@divisor+1,w
  6575  0DB6  0229               	subwf	___aomod@dividend+1,w
  6576  0DB7  1D03               	skipz
  6577  0DB8  2DBB               	goto	u2685
  6578  0DB9  0820               	movf	___aomod@divisor,w
  6579  0DBA  0228               	subwf	___aomod@dividend,w
  6580  0DBB                     u2685:
  6581  0DBB  1C03               	skipc
  6582  0DBC  2DBE               	goto	u2681
  6583  0DBD  2DBF               	goto	u2680
  6584  0DBE                     u2681:
  6585  0DBE  2DCF               	goto	l2677
  6586  0DBF                     u2680:
  6587  0DBF                     l2675:
  6588  0DBF  0820               	movf	___aomod@divisor,w
  6589  0DC0  02A8               	subwf	___aomod@dividend,f
  6590  0DC1  0821               	movf	___aomod@divisor+1,w
  6591  0DC2  3BA9               	subwfb	___aomod@dividend+1,f
  6592  0DC3  0822               	movf	___aomod@divisor+2,w
  6593  0DC4  3BAA               	subwfb	___aomod@dividend+2,f
  6594  0DC5  0823               	movf	___aomod@divisor+3,w
  6595  0DC6  3BAB               	subwfb	___aomod@dividend+3,f
  6596  0DC7  0824               	movf	___aomod@divisor+4,w
  6597  0DC8  3BAC               	subwfb	___aomod@dividend+4,f
  6598  0DC9  0825               	movf	___aomod@divisor+5,w
  6599  0DCA  3BAD               	subwfb	___aomod@dividend+5,f
  6600  0DCB  0826               	movf	___aomod@divisor+6,w
  6601  0DCC  3BAE               	subwfb	___aomod@dividend+6,f
  6602  0DCD  0827               	movf	___aomod@divisor+7,w
  6603  0DCE  3BAF               	subwfb	___aomod@dividend+7,f
  6604  0DCF                     l2677:
  6605  0DCF  36A7               	lsrf	___aomod@divisor+7,f
  6606  0DD0  0CA6               	rrf	___aomod@divisor+6,f
  6607  0DD1  0CA5               	rrf	___aomod@divisor+5,f
  6608  0DD2  0CA4               	rrf	___aomod@divisor+4,f
  6609  0DD3  0CA3               	rrf	___aomod@divisor+3,f
  6610  0DD4  0CA2               	rrf	___aomod@divisor+2,f
  6611  0DD5  0CA1               	rrf	___aomod@divisor+1,f
  6612  0DD6  0CA0               	rrf	___aomod@divisor,f
  6613  0DD7  3001               	movlw	1
  6614  0DD8  02F1               	subwf	___aomod@counter,f
  6615  0DD9  1D03               	btfss	3,2
  6616  0DDA  2DDC               	goto	u2691
  6617  0DDB  2DDD               	goto	u2690
  6618  0DDC                     u2691:
  6619  0DDC  2D9D               	goto	l2673
  6620  0DDD                     u2690:
  6621  0DDD                     l2679:
  6622  0DDD  0872               	movf	___aomod@sign,w
  6623  0DDE  1903               	btfsc	3,2
  6624  0DDF  2DE1               	goto	u2701
  6625  0DE0  2DE2               	goto	u2700
  6626  0DE1                     u2701:
  6627  0DE1  2E00               	goto	l632
  6628  0DE2                     u2700:
  6629  0DE2                     l2681:
  6630  0DE2  09A8               	comf	___aomod@dividend,f
  6631  0DE3  09A9               	comf	___aomod@dividend+1,f
  6632  0DE4  09AA               	comf	___aomod@dividend+2,f
  6633  0DE5  09AB               	comf	___aomod@dividend+3,f
  6634  0DE6  09AC               	comf	___aomod@dividend+4,f
  6635  0DE7  09AD               	comf	___aomod@dividend+5,f
  6636  0DE8  09AE               	comf	___aomod@dividend+6,f
  6637  0DE9  09AF               	comf	___aomod@dividend+7,f
  6638  0DEA  0AA8               	incf	___aomod@dividend,f
  6639  0DEB  1D03               	skipz
  6640  0DEC  2E00               	goto	u271lld
  6641  0DED  0AA9               	incf	___aomod@dividend+1,f
  6642  0DEE  1D03               	skipz
  6643  0DEF  2E00               	goto	u271lld
  6644  0DF0  0AAA               	incf	___aomod@dividend+2,f
  6645  0DF1  1D03               	skipz
  6646  0DF2  2E00               	goto	u271lld
  6647  0DF3  0AAB               	incf	___aomod@dividend+3,f
  6648  0DF4  1D03               	skipz
  6649  0DF5  2E00               	goto	u271lld
  6650  0DF6  0AAC               	incf	___aomod@dividend+4,f
  6651  0DF7  1D03               	skipz
  6652  0DF8  2E00               	goto	u271lld
  6653  0DF9  0AAD               	incf	___aomod@dividend+5,f
  6654  0DFA  1D03               	skipz
  6655  0DFB  2E00               	goto	u271lld
  6656  0DFC  0AAE               	incf	___aomod@dividend+6,f
  6657  0DFD  1D03               	skipz
  6658  0DFE  2E00               	goto	u271lld
  6659  0DFF  0AAF               	incf	___aomod@dividend+7,f
  6660  0E00                     u271lld:
  6661  0E00                     l632:
  6662  0E00  0020               	movlb	0	; select bank0
  6663  0E01  0828               	movf	___aomod@dividend,w
  6664  0E02  00A0               	movwf	?___aomod
  6665  0E03  0829               	movf	___aomod@dividend+1,w
  6666  0E04  00A1               	movwf	?___aomod+1
  6667  0E05  082A               	movf	___aomod@dividend+2,w
  6668  0E06  00A2               	movwf	?___aomod+2
  6669  0E07  082B               	movf	___aomod@dividend+3,w
  6670  0E08  00A3               	movwf	?___aomod+3
  6671  0E09  082C               	movf	___aomod@dividend+4,w
  6672  0E0A  00A4               	movwf	?___aomod+4
  6673  0E0B  082D               	movf	___aomod@dividend+5,w
  6674  0E0C  00A5               	movwf	?___aomod+5
  6675  0E0D  082E               	movf	___aomod@dividend+6,w
  6676  0E0E  00A6               	movwf	?___aomod+6
  6677  0E0F  082F               	movf	___aomod@dividend+7,w
  6678  0E10  00A7               	movwf	?___aomod+7
  6679  0E11                     l633:
  6680  0E11  0008               	return
  6681  0E12                     __end_of___aomod:
  6682                           
  6683                           	psect	text18
  6684  0EFF                     __ptext18:	
  6685 ;; *************** function ___aodiv *****************
  6686 ;; Defined at:
  6687 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\aodiv.c"
  6688 ;; Parameters:    Size  Location     Type
  6689 ;;  divisor         8    0[BANK0 ] long long 
  6690 ;;  dividend        8    8[BANK0 ] long long 
  6691 ;; Auto vars:     Size  Location     Type
  6692 ;;  quotient        8    3[COMMON] long long 
  6693 ;;  sign            1    2[COMMON] unsigned char 
  6694 ;;  counter         1    1[COMMON] unsigned char 
  6695 ;; Return value:  Size  Location     Type
  6696 ;;                  8    0[BANK0 ] long long 
  6697 ;; Registers used:
  6698 ;;		wreg, fsr1l, fsr1h, status,2, status,0
  6699 ;; Tracked objects:
  6700 ;;		On entry : 0/0
  6701 ;;		On exit  : 0/0
  6702 ;;		Unchanged: 0/0
  6703 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  6704 ;;      Params:         0      16       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6705 ;;      Locals:        10       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6706 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6707 ;;      Totals:        11      16       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6708 ;;Total ram usage:       27 bytes
  6709 ;; Hardware stack levels used: 1
  6710 ;; This function calls:
  6711 ;;		Nothing
  6712 ;; This function is called by:
  6713 ;;		_dtoa
  6714 ;; This function uses a non-reentrant model
  6715 ;;
  6716                           
  6717                           
  6718                           ;psect for function ___aodiv
  6719  0EFF                     ___aodiv:
  6720  0EFF                     l2615:	
  6721                           ;incstack = 0
  6722                           ; Regs used in ___aodiv: [wreg+fsr1l+fsr1h+status,2+status,0]
  6723                           
  6724  0EFF  01F2               	clrf	___aodiv@sign
  6725  0F00                     l2617:
  6726  0F00  3020               	movlw	low ___aodiv@divisor
  6727  0F01  0086               	movwf	6
  6728  0F02  3000               	movlw	high ___aodiv@divisor
  6729  0F03  0087               	movwf	7
  6730  0F04  3F47               	moviw [7]fsr1
  6731  0F05  00F0               	movwf	??___aodiv
  6732  0F06  1FF0               	btfss	??___aodiv,7
  6733  0F07  2F09               	goto	u2511
  6734  0F08  2F0A               	goto	u2510
  6735  0F09                     u2511:
  6736  0F09  2F2B               	goto	l2621
  6737  0F0A                     u2510:
  6738  0F0A                     l2619:
  6739  0F0A  0020               	movlb	0	; select bank0
  6740  0F0B  09A0               	comf	___aodiv@divisor,f
  6741  0F0C  09A1               	comf	___aodiv@divisor+1,f
  6742  0F0D  09A2               	comf	___aodiv@divisor+2,f
  6743  0F0E  09A3               	comf	___aodiv@divisor+3,f
  6744  0F0F  09A4               	comf	___aodiv@divisor+4,f
  6745  0F10  09A5               	comf	___aodiv@divisor+5,f
  6746  0F11  09A6               	comf	___aodiv@divisor+6,f
  6747  0F12  09A7               	comf	___aodiv@divisor+7,f
  6748  0F13  0AA0               	incf	___aodiv@divisor,f
  6749  0F14  1D03               	skipz
  6750  0F15  2F29               	goto	u252lld
  6751  0F16  0AA1               	incf	___aodiv@divisor+1,f
  6752  0F17  1D03               	skipz
  6753  0F18  2F29               	goto	u252lld
  6754  0F19  0AA2               	incf	___aodiv@divisor+2,f
  6755  0F1A  1D03               	skipz
  6756  0F1B  2F29               	goto	u252lld
  6757  0F1C  0AA3               	incf	___aodiv@divisor+3,f
  6758  0F1D  1D03               	skipz
  6759  0F1E  2F29               	goto	u252lld
  6760  0F1F  0AA4               	incf	___aodiv@divisor+4,f
  6761  0F20  1D03               	skipz
  6762  0F21  2F29               	goto	u252lld
  6763  0F22  0AA5               	incf	___aodiv@divisor+5,f
  6764  0F23  1D03               	skipz
  6765  0F24  2F29               	goto	u252lld
  6766  0F25  0AA6               	incf	___aodiv@divisor+6,f
  6767  0F26  1D03               	skipz
  6768  0F27  2F29               	goto	u252lld
  6769  0F28  0AA7               	incf	___aodiv@divisor+7,f
  6770  0F29                     u252lld:
  6771  0F29  01F2               	clrf	___aodiv@sign
  6772  0F2A  0AF2               	incf	___aodiv@sign,f
  6773  0F2B                     l2621:
  6774  0F2B  3028               	movlw	low ___aodiv@dividend
  6775  0F2C  0086               	movwf	6
  6776  0F2D  3000               	movlw	high ___aodiv@dividend
  6777  0F2E  0087               	movwf	7
  6778  0F2F  3F47               	moviw [7]fsr1
  6779  0F30  00F0               	movwf	??___aodiv
  6780  0F31  1FF0               	btfss	??___aodiv,7
  6781  0F32  2F34               	goto	u2531
  6782  0F33  2F35               	goto	u2530
  6783  0F34                     u2531:
  6784  0F34  2F58               	goto	l2627
  6785  0F35                     u2530:
  6786  0F35                     l2623:
  6787  0F35  0020               	movlb	0	; select bank0
  6788  0F36  09A8               	comf	___aodiv@dividend,f
  6789  0F37  09A9               	comf	___aodiv@dividend+1,f
  6790  0F38  09AA               	comf	___aodiv@dividend+2,f
  6791  0F39  09AB               	comf	___aodiv@dividend+3,f
  6792  0F3A  09AC               	comf	___aodiv@dividend+4,f
  6793  0F3B  09AD               	comf	___aodiv@dividend+5,f
  6794  0F3C  09AE               	comf	___aodiv@dividend+6,f
  6795  0F3D  09AF               	comf	___aodiv@dividend+7,f
  6796  0F3E  0AA8               	incf	___aodiv@dividend,f
  6797  0F3F  1D03               	skipz
  6798  0F40  2F54               	goto	u254lld
  6799  0F41  0AA9               	incf	___aodiv@dividend+1,f
  6800  0F42  1D03               	skipz
  6801  0F43  2F54               	goto	u254lld
  6802  0F44  0AAA               	incf	___aodiv@dividend+2,f
  6803  0F45  1D03               	skipz
  6804  0F46  2F54               	goto	u254lld
  6805  0F47  0AAB               	incf	___aodiv@dividend+3,f
  6806  0F48  1D03               	skipz
  6807  0F49  2F54               	goto	u254lld
  6808  0F4A  0AAC               	incf	___aodiv@dividend+4,f
  6809  0F4B  1D03               	skipz
  6810  0F4C  2F54               	goto	u254lld
  6811  0F4D  0AAD               	incf	___aodiv@dividend+5,f
  6812  0F4E  1D03               	skipz
  6813  0F4F  2F54               	goto	u254lld
  6814  0F50  0AAE               	incf	___aodiv@dividend+6,f
  6815  0F51  1D03               	skipz
  6816  0F52  2F54               	goto	u254lld
  6817  0F53  0AAF               	incf	___aodiv@dividend+7,f
  6818  0F54                     u254lld:
  6819  0F54                     l2625:
  6820  0F54  3001               	movlw	1
  6821  0F55  00F0               	movwf	??___aodiv
  6822  0F56  0870               	movf	??___aodiv,w
  6823  0F57  06F2               	xorwf	___aodiv@sign,f
  6824  0F58                     l2627:
  6825  0F58  3073               	movlw	low ___aodiv@quotient
  6826  0F59  0086               	movwf	6
  6827  0F5A  3000               	movlw	high ___aodiv@quotient
  6828  0F5B  0087               	movwf	7
  6829  0F5C  3008               	movlw	8
  6830  0F5D  00F0               	movwf	??___aodiv
  6831  0F5E  3000               	movlw	0
  6832  0F5F                     u2550:
  6833  0F5F  001E               	movwi fsr1++
  6834  0F60  0BF0               	decfsz	??___aodiv,f
  6835  0F61  2F5F               	goto	u2550
  6836  0F62                     l2629:
  6837  0F62  0020               	movlb	0	; select bank0
  6838  0F63  0820               	movf	___aodiv@divisor,w
  6839  0F64  0421               	iorwf	___aodiv@divisor+1,w
  6840  0F65  0422               	iorwf	___aodiv@divisor+2,w
  6841  0F66  0423               	iorwf	___aodiv@divisor+3,w
  6842  0F67  0424               	iorwf	___aodiv@divisor+4,w
  6843  0F68  0425               	iorwf	___aodiv@divisor+5,w
  6844  0F69  0426               	iorwf	___aodiv@divisor+6,w
  6845  0F6A  0427               	iorwf	___aodiv@divisor+7,w
  6846  0F6B  1903               	skipnz
  6847  0F6C  2F6E               	goto	u2561
  6848  0F6D  2F6F               	goto	u2560
  6849  0F6E                     u2561:
  6850  0F6E  2FCB               	goto	l2649
  6851  0F6F                     u2560:
  6852  0F6F                     l2631:
  6853  0F6F  01F1               	clrf	___aodiv@counter
  6854  0F70  0AF1               	incf	___aodiv@counter,f
  6855  0F71  2F7E               	goto	l2637
  6856  0F72                     l2633:
  6857  0F72  35A0               	lslf	___aodiv@divisor,f
  6858  0F73  0DA1               	rlf	___aodiv@divisor+1,f
  6859  0F74  0DA2               	rlf	___aodiv@divisor+2,f
  6860  0F75  0DA3               	rlf	___aodiv@divisor+3,f
  6861  0F76  0DA4               	rlf	___aodiv@divisor+4,f
  6862  0F77  0DA5               	rlf	___aodiv@divisor+5,f
  6863  0F78  0DA6               	rlf	___aodiv@divisor+6,f
  6864  0F79  0DA7               	rlf	___aodiv@divisor+7,f
  6865  0F7A                     l2635:
  6866  0F7A  3001               	movlw	1
  6867  0F7B  00F0               	movwf	??___aodiv
  6868  0F7C  0870               	movf	??___aodiv,w
  6869  0F7D  07F1               	addwf	___aodiv@counter,f
  6870  0F7E                     l2637:
  6871  0F7E  1FA7               	btfss	___aodiv@divisor+7,7
  6872  0F7F  2F81               	goto	u2571
  6873  0F80  2F82               	goto	u2570
  6874  0F81                     u2571:
  6875  0F81  2F72               	goto	l2633
  6876  0F82                     u2570:
  6877  0F82                     l2639:
  6878  0F82  35F3               	lslf	___aodiv@quotient,f
  6879  0F83  0DF4               	rlf	___aodiv@quotient+1,f
  6880  0F84  0DF5               	rlf	___aodiv@quotient+2,f
  6881  0F85  0DF6               	rlf	___aodiv@quotient+3,f
  6882  0F86  0DF7               	rlf	___aodiv@quotient+4,f
  6883  0F87  0DF8               	rlf	___aodiv@quotient+5,f
  6884  0F88  0DF9               	rlf	___aodiv@quotient+6,f
  6885  0F89  0DFA               	rlf	___aodiv@quotient+7,f
  6886  0F8A                     l2641:
  6887  0F8A  0827               	movf	___aodiv@divisor+7,w
  6888  0F8B  022F               	subwf	___aodiv@dividend+7,w
  6889  0F8C  1D03               	skipz
  6890  0F8D  2FA8               	goto	u2585
  6891  0F8E  0826               	movf	___aodiv@divisor+6,w
  6892  0F8F  022E               	subwf	___aodiv@dividend+6,w
  6893  0F90  1D03               	skipz
  6894  0F91  2FA8               	goto	u2585
  6895  0F92  0825               	movf	___aodiv@divisor+5,w
  6896  0F93  022D               	subwf	___aodiv@dividend+5,w
  6897  0F94  1D03               	skipz
  6898  0F95  2FA8               	goto	u2585
  6899  0F96  0824               	movf	___aodiv@divisor+4,w
  6900  0F97  022C               	subwf	___aodiv@dividend+4,w
  6901  0F98  1D03               	skipz
  6902  0F99  2FA8               	goto	u2585
  6903  0F9A  0823               	movf	___aodiv@divisor+3,w
  6904  0F9B  022B               	subwf	___aodiv@dividend+3,w
  6905  0F9C  1D03               	skipz
  6906  0F9D  2FA8               	goto	u2585
  6907  0F9E  0822               	movf	___aodiv@divisor+2,w
  6908  0F9F  022A               	subwf	___aodiv@dividend+2,w
  6909  0FA0  1D03               	skipz
  6910  0FA1  2FA8               	goto	u2585
  6911  0FA2  0821               	movf	___aodiv@divisor+1,w
  6912  0FA3  0229               	subwf	___aodiv@dividend+1,w
  6913  0FA4  1D03               	skipz
  6914  0FA5  2FA8               	goto	u2585
  6915  0FA6  0820               	movf	___aodiv@divisor,w
  6916  0FA7  0228               	subwf	___aodiv@dividend,w
  6917  0FA8                     u2585:
  6918  0FA8  1C03               	skipc
  6919  0FA9  2FAB               	goto	u2581
  6920  0FAA  2FAC               	goto	u2580
  6921  0FAB                     u2581:
  6922  0FAB  2FBD               	goto	l2647
  6923  0FAC                     u2580:
  6924  0FAC                     l2643:
  6925  0FAC  0820               	movf	___aodiv@divisor,w
  6926  0FAD  02A8               	subwf	___aodiv@dividend,f
  6927  0FAE  0821               	movf	___aodiv@divisor+1,w
  6928  0FAF  3BA9               	subwfb	___aodiv@dividend+1,f
  6929  0FB0  0822               	movf	___aodiv@divisor+2,w
  6930  0FB1  3BAA               	subwfb	___aodiv@dividend+2,f
  6931  0FB2  0823               	movf	___aodiv@divisor+3,w
  6932  0FB3  3BAB               	subwfb	___aodiv@dividend+3,f
  6933  0FB4  0824               	movf	___aodiv@divisor+4,w
  6934  0FB5  3BAC               	subwfb	___aodiv@dividend+4,f
  6935  0FB6  0825               	movf	___aodiv@divisor+5,w
  6936  0FB7  3BAD               	subwfb	___aodiv@dividend+5,f
  6937  0FB8  0826               	movf	___aodiv@divisor+6,w
  6938  0FB9  3BAE               	subwfb	___aodiv@dividend+6,f
  6939  0FBA  0827               	movf	___aodiv@divisor+7,w
  6940  0FBB  3BAF               	subwfb	___aodiv@dividend+7,f
  6941  0FBC                     l2645:
  6942  0FBC  1473               	bsf	___aodiv@quotient,0
  6943  0FBD                     l2647:
  6944  0FBD  36A7               	lsrf	___aodiv@divisor+7,f
  6945  0FBE  0CA6               	rrf	___aodiv@divisor+6,f
  6946  0FBF  0CA5               	rrf	___aodiv@divisor+5,f
  6947  0FC0  0CA4               	rrf	___aodiv@divisor+4,f
  6948  0FC1  0CA3               	rrf	___aodiv@divisor+3,f
  6949  0FC2  0CA2               	rrf	___aodiv@divisor+2,f
  6950  0FC3  0CA1               	rrf	___aodiv@divisor+1,f
  6951  0FC4  0CA0               	rrf	___aodiv@divisor,f
  6952  0FC5  3001               	movlw	1
  6953  0FC6  02F1               	subwf	___aodiv@counter,f
  6954  0FC7  1D03               	btfss	3,2
  6955  0FC8  2FCA               	goto	u2591
  6956  0FC9  2FCB               	goto	u2590
  6957  0FCA                     u2591:
  6958  0FCA  2F82               	goto	l2639
  6959  0FCB                     u2590:
  6960  0FCB                     l2649:
  6961  0FCB  0872               	movf	___aodiv@sign,w
  6962  0FCC  1903               	btfsc	3,2
  6963  0FCD  2FCF               	goto	u2601
  6964  0FCE  2FD0               	goto	u2600
  6965  0FCF                     u2601:
  6966  0FCF  2FEE               	goto	l619
  6967  0FD0                     u2600:
  6968  0FD0                     l2651:
  6969  0FD0  09F3               	comf	___aodiv@quotient,f
  6970  0FD1  09F4               	comf	___aodiv@quotient+1,f
  6971  0FD2  09F5               	comf	___aodiv@quotient+2,f
  6972  0FD3  09F6               	comf	___aodiv@quotient+3,f
  6973  0FD4  09F7               	comf	___aodiv@quotient+4,f
  6974  0FD5  09F8               	comf	___aodiv@quotient+5,f
  6975  0FD6  09F9               	comf	___aodiv@quotient+6,f
  6976  0FD7  09FA               	comf	___aodiv@quotient+7,f
  6977  0FD8  0AF3               	incf	___aodiv@quotient,f
  6978  0FD9  1D03               	skipz
  6979  0FDA  2FEE               	goto	u261lld
  6980  0FDB  0AF4               	incf	___aodiv@quotient+1,f
  6981  0FDC  1D03               	skipz
  6982  0FDD  2FEE               	goto	u261lld
  6983  0FDE  0AF5               	incf	___aodiv@quotient+2,f
  6984  0FDF  1D03               	skipz
  6985  0FE0  2FEE               	goto	u261lld
  6986  0FE1  0AF6               	incf	___aodiv@quotient+3,f
  6987  0FE2  1D03               	skipz
  6988  0FE3  2FEE               	goto	u261lld
  6989  0FE4  0AF7               	incf	___aodiv@quotient+4,f
  6990  0FE5  1D03               	skipz
  6991  0FE6  2FEE               	goto	u261lld
  6992  0FE7  0AF8               	incf	___aodiv@quotient+5,f
  6993  0FE8  1D03               	skipz
  6994  0FE9  2FEE               	goto	u261lld
  6995  0FEA  0AF9               	incf	___aodiv@quotient+6,f
  6996  0FEB  1D03               	skipz
  6997  0FEC  2FEE               	goto	u261lld
  6998  0FED  0AFA               	incf	___aodiv@quotient+7,f
  6999  0FEE                     u261lld:
  7000  0FEE                     l619:
  7001  0FEE  0873               	movf	___aodiv@quotient,w
  7002  0FEF  0020               	movlb	0	; select bank0
  7003  0FF0  00A0               	movwf	?___aodiv
  7004  0FF1  0874               	movf	___aodiv@quotient+1,w
  7005  0FF2  00A1               	movwf	?___aodiv+1
  7006  0FF3  0875               	movf	___aodiv@quotient+2,w
  7007  0FF4  00A2               	movwf	?___aodiv+2
  7008  0FF5  0876               	movf	___aodiv@quotient+3,w
  7009  0FF6  00A3               	movwf	?___aodiv+3
  7010  0FF7  0877               	movf	___aodiv@quotient+4,w
  7011  0FF8  00A4               	movwf	?___aodiv+4
  7012  0FF9  0878               	movf	___aodiv@quotient+5,w
  7013  0FFA  00A5               	movwf	?___aodiv+5
  7014  0FFB  0879               	movf	___aodiv@quotient+6,w
  7015  0FFC  00A6               	movwf	?___aodiv+6
  7016  0FFD  087A               	movf	___aodiv@quotient+7,w
  7017  0FFE  00A7               	movwf	?___aodiv+7
  7018  0FFF                     l620:
  7019  0FFF  0008               	return
  7020  1000                     __end_of___aodiv:
  7021                           
  7022                           	psect	text19
  7023  1033                     __ptext19:	
  7024 ;; *************** function _lcd_print_with *****************
  7025 ;; Defined at:
  7026 ;;		line 135 in file "lcd_lib.c"
  7027 ;; Parameters:    Size  Location     Type
  7028 ;;  p               1    wreg     PTR struct .
  7029 ;;		 -> NULL(0), main@lcd(4), 
  7030 ;;  str             2    6[BANK0 ] PTR unsigned char 
  7031 ;;		 -> print_gram@row2(16), print_gram@row1(16), STR_3(15), STR_2(11), 
  7032 ;;  col             1    8[BANK0 ] unsigned char 
  7033 ;;  row             1    9[BANK0 ] unsigned char 
  7034 ;; Auto vars:     Size  Location     Type
  7035 ;;  p               1   13[COMMON] PTR struct .
  7036 ;;		 -> NULL(0), main@lcd(4), 
  7037 ;; Return value:  Size  Location     Type
  7038 ;;                  1    wreg      void 
  7039 ;; Registers used:
  7040 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  7041 ;; Tracked objects:
  7042 ;;		On entry : 0/0
  7043 ;;		On exit  : 0/0
  7044 ;;		Unchanged: 0/0
  7045 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  7046 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7047 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7048 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7049 ;;      Totals:         1       6       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7050 ;;Total ram usage:        7 bytes
  7051 ;; Hardware stack levels used: 1
  7052 ;; Hardware stack levels required when called: 5
  7053 ;; This function calls:
  7054 ;;		_lcd_print
  7055 ;;		_lcd_set_cursor
  7056 ;; This function is called by:
  7057 ;;		_initialize
  7058 ;;		_print_gram
  7059 ;; This function uses a non-reentrant model
  7060 ;;
  7061                           
  7062                           
  7063                           ;psect for function _lcd_print_with
  7064  1033                     _lcd_print_with:
  7065                           
  7066                           ;incstack = 0
  7067                           ; Regs used in _lcd_print_with: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  7068                           ;lcd_print_with@p stored from wreg
  7069  1033  00FD               	movwf	lcd_print_with@p
  7070  1034                     l3633:
  7071                           
  7072                           ;lcd_lib.c: 136:     lcd_set_cursor(p, col, row);
  7073  1034  0020               	movlb	0	; select bank0
  7074  1035  0828               	movf	lcd_print_with@col,w
  7075  1036  00AA               	movwf	??_lcd_print_with
  7076  1037  082A               	movf	??_lcd_print_with,w
  7077  1038  00FA               	movwf	lcd_set_cursor@col
  7078  1039  0829               	movf	lcd_print_with@row,w
  7079  103A  00AB               	movwf	??_lcd_print_with+1
  7080  103B  082B               	movf	??_lcd_print_with+1,w
  7081  103C  00FB               	movwf	lcd_set_cursor@row
  7082  103D  087D               	movf	lcd_print_with@p,w
  7083  103E  3191  21A5  3190   	fcall	_lcd_set_cursor
  7084  1041                     l3635:
  7085                           
  7086                           ;lcd_lib.c: 137:     lcd_print(p, str);
  7087  1041  0020               	movlb	0	; select bank0
  7088  1042  0827               	movf	lcd_print_with@str+1,w
  7089  1043  00FB               	movwf	lcd_print@str+1
  7090  1044  0826               	movf	lcd_print_with@str,w
  7091  1045  00FA               	movwf	lcd_print@str
  7092  1046  087D               	movf	lcd_print_with@p,w
  7093  1047  3191  210C  3190   	fcall	_lcd_print
  7094  104A                     l329:
  7095  104A  0008               	return
  7096  104B                     __end_of_lcd_print_with:
  7097                           
  7098                           	psect	text20
  7099  0A36                     __ptext20:	
  7100 ;; *************** function _lcd_init *****************
  7101 ;; Defined at:
  7102 ;;		line 18 in file "lcd_lib.c"
  7103 ;; Parameters:    Size  Location     Type
  7104 ;;  p               1    wreg     PTR struct .
  7105 ;;		 -> NULL(0), main@lcd(4), 
  7106 ;; Auto vars:     Size  Location     Type
  7107 ;;  p               1    8[COMMON] PTR struct .
  7108 ;;		 -> NULL(0), main@lcd(4), 
  7109 ;; Return value:  Size  Location     Type
  7110 ;;                  1    wreg      void 
  7111 ;; Registers used:
  7112 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  7113 ;; Tracked objects:
  7114 ;;		On entry : 0/0
  7115 ;;		On exit  : 0/0
  7116 ;;		Unchanged: 0/0
  7117 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  7118 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7119 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7120 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7121 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7122 ;;Total ram usage:        3 bytes
  7123 ;; Hardware stack levels used: 1
  7124 ;; Hardware stack levels required when called: 4
  7125 ;; This function calls:
  7126 ;;		_write4bits
  7127 ;; This function is called by:
  7128 ;;		_initialize
  7129 ;; This function uses a non-reentrant model
  7130 ;;
  7131                           
  7132                           
  7133                           ;psect for function _lcd_init
  7134  0A36                     _lcd_init:
  7135                           
  7136                           ;incstack = 0
  7137                           ; Regs used in _lcd_init: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
  7138                           ;lcd_init@p stored from wreg
  7139  0A36  00F8               	movwf	lcd_init@p
  7140  0A37                     l3575:
  7141                           
  7142                           ;lcd_lib.c: 19:     _delay((unsigned long)((400)*(8000000/4000.0)));
  7143  0A37  3005               	movlw	5
  7144  0A38  00F7               	movwf	??_lcd_init+1
  7145  0A39  300F               	movlw	15
  7146  0A3A  00F6               	movwf	??_lcd_init
  7147  0A3B  30F1               	movlw	241
  7148  0A3C                     u4627:
  7149  0A3C  0B89               	decfsz	9,f
  7150  0A3D  2A3C               	goto	u4627
  7151  0A3E  0BF6               	decfsz	??_lcd_init,f
  7152  0A3F  2A3C               	goto	u4627
  7153  0A40  0BF7               	decfsz	??_lcd_init+1,f
  7154  0A41  2A3C               	goto	u4627
  7155  0A42  0000               	nop
  7156  0A43                     l3577:
  7157                           
  7158                           ;lcd_lib.c: 21:     write4bits(p, 0x30);
  7159  0A43  3030               	movlw	48
  7160  0A44  00F6               	movwf	??_lcd_init
  7161  0A45  0876               	movf	??_lcd_init,w
  7162  0A46  00F3               	movwf	write4bits@val
  7163  0A47  0878               	movf	lcd_init@p,w
  7164  0A48  3190  20CE  318A   	fcall	_write4bits
  7165  0A4B                     l3579:
  7166                           
  7167                           ;lcd_lib.c: 22:     _delay((unsigned long)((5)*(8000000/4000.0)));
  7168  0A4B  300D               	movlw	13
  7169  0A4C  00F6               	movwf	??_lcd_init
  7170  0A4D  30FC               	movlw	252
  7171  0A4E                     u4637:
  7172  0A4E  0B89               	decfsz	9,f
  7173  0A4F  2A4E               	goto	u4637
  7174  0A50  0BF6               	decfsz	??_lcd_init,f
  7175  0A51  2A4E               	goto	u4637
  7176                           
  7177                           ;lcd_lib.c: 24:     write4bits(p, 0x30);
  7178  0A52  3030               	movlw	48
  7179  0A53  00F6               	movwf	??_lcd_init
  7180  0A54  0876               	movf	??_lcd_init,w
  7181  0A55  00F3               	movwf	write4bits@val
  7182  0A56  0878               	movf	lcd_init@p,w
  7183  0A57  3190  20CE  318A   	fcall	_write4bits
  7184  0A5A                     l3581:
  7185                           
  7186                           ;lcd_lib.c: 25:     _delay((unsigned long)((5)*(8000000/4000.0)));
  7187  0A5A  300D               	movlw	13
  7188  0A5B  00F6               	movwf	??_lcd_init
  7189  0A5C  30FC               	movlw	252
  7190  0A5D                     u4647:
  7191  0A5D  0B89               	decfsz	9,f
  7192  0A5E  2A5D               	goto	u4647
  7193  0A5F  0BF6               	decfsz	??_lcd_init,f
  7194  0A60  2A5D               	goto	u4647
  7195  0A61                     l3583:
  7196                           
  7197                           ;lcd_lib.c: 27:     write4bits(p, 0x30);
  7198  0A61  3030               	movlw	48
  7199  0A62  00F6               	movwf	??_lcd_init
  7200  0A63  0876               	movf	??_lcd_init,w
  7201  0A64  00F3               	movwf	write4bits@val
  7202  0A65  0878               	movf	lcd_init@p,w
  7203  0A66  3190  20CE  318A   	fcall	_write4bits
  7204                           
  7205                           ;lcd_lib.c: 28:     _delay((unsigned long)((300)*(8000000/4000000.0)));
  7206  0A69  30C8               	movlw	200
  7207  0A6A                     u4657:
  7208  0A6A  0B89               	decfsz	9,f
  7209  0A6B  2A6A               	goto	u4657
  7210  0A6C                     l3585:
  7211                           
  7212                           ;lcd_lib.c: 30:     write4bits(p, 0x20);
  7213  0A6C  3020               	movlw	32
  7214  0A6D  00F6               	movwf	??_lcd_init
  7215  0A6E  0876               	movf	??_lcd_init,w
  7216  0A6F  00F3               	movwf	write4bits@val
  7217  0A70  0878               	movf	lcd_init@p,w
  7218  0A71  3190  20CE  318A   	fcall	_write4bits
  7219  0A74                     l3587:
  7220                           
  7221                           ;lcd_lib.c: 31:     _delay((unsigned long)((10)*(8000000/4000000.0)));
  7222  0A74  3006               	movlw	6
  7223  0A75                     u4667:
  7224  0A75  0B89               	decfsz	9,f
  7225  0A76  2A75               	goto	u4667
  7226  0A77  3200               	nop2
  7227                           
  7228                           ;lcd_lib.c: 34:     write4bits(p, 0x20);
  7229  0A78  3020               	movlw	32
  7230  0A79  00F6               	movwf	??_lcd_init
  7231  0A7A  0876               	movf	??_lcd_init,w
  7232  0A7B  00F3               	movwf	write4bits@val
  7233  0A7C  0878               	movf	lcd_init@p,w
  7234  0A7D  3190  20CE  318A   	fcall	_write4bits
  7235  0A80                     l3589:
  7236                           
  7237                           ;lcd_lib.c: 36:     _delay((unsigned long)((100)*(8000000/4000000.0)));
  7238  0A80  3042               	movlw	66
  7239  0A81                     u4677:
  7240  0A81  0B89               	decfsz	9,f
  7241  0A82  2A81               	goto	u4677
  7242  0A83  3200               	nop2
  7243  0A84                     l3591:
  7244                           
  7245                           ;lcd_lib.c: 38:     write4bits(p, 0x80);
  7246  0A84  3080               	movlw	128
  7247  0A85  00F6               	movwf	??_lcd_init
  7248  0A86  0876               	movf	??_lcd_init,w
  7249  0A87  00F3               	movwf	write4bits@val
  7250  0A88  0878               	movf	lcd_init@p,w
  7251  0A89  3190  20CE  318A   	fcall	_write4bits
  7252  0A8C                     l3593:
  7253                           
  7254                           ;lcd_lib.c: 43:     write4bits(p, 0x00);
  7255  0A8C  01F3               	clrf	write4bits@val
  7256  0A8D  0878               	movf	lcd_init@p,w
  7257  0A8E  3190  20CE  318A   	fcall	_write4bits
  7258  0A91                     l3595:
  7259                           
  7260                           ;lcd_lib.c: 45:     _delay((unsigned long)((100)*(8000000/4000000.0)));
  7261  0A91  3042               	movlw	66
  7262  0A92                     u4687:
  7263  0A92  0B89               	decfsz	9,f
  7264  0A93  2A92               	goto	u4687
  7265  0A94  3200               	nop2
  7266                           
  7267                           ;lcd_lib.c: 47:     write4bits(p, 0xC0);
  7268  0A95  30C0               	movlw	192
  7269  0A96  00F6               	movwf	??_lcd_init
  7270  0A97  0876               	movf	??_lcd_init,w
  7271  0A98  00F3               	movwf	write4bits@val
  7272  0A99  0878               	movf	lcd_init@p,w
  7273  0A9A  3190  20CE  318A   	fcall	_write4bits
  7274                           
  7275                           ;lcd_lib.c: 51:     write4bits(p, 0x00);
  7276  0A9D  01F3               	clrf	write4bits@val
  7277  0A9E  0878               	movf	lcd_init@p,w
  7278  0A9F  3190  20CE  318A   	fcall	_write4bits
  7279  0AA2                     l3597:
  7280                           
  7281                           ;lcd_lib.c: 53:     _delay((unsigned long)((100)*(8000000/4000000.0)));
  7282  0AA2  3042               	movlw	66
  7283  0AA3                     u4697:
  7284  0AA3  0B89               	decfsz	9,f
  7285  0AA4  2AA3               	goto	u4697
  7286  0AA5  3200               	nop2
  7287  0AA6                     l3599:
  7288                           
  7289                           ;lcd_lib.c: 55:     write4bits(p, 0x10);
  7290  0AA6  3010               	movlw	16
  7291  0AA7  00F6               	movwf	??_lcd_init
  7292  0AA8  0876               	movf	??_lcd_init,w
  7293  0AA9  00F3               	movwf	write4bits@val
  7294  0AAA  0878               	movf	lcd_init@p,w
  7295  0AAB  3190  20CE  318A   	fcall	_write4bits
  7296                           
  7297                           ;lcd_lib.c: 57:     _delay((unsigned long)((5)*(8000000/4000.0)));
  7298  0AAE  300D               	movlw	13
  7299  0AAF  00F6               	movwf	??_lcd_init
  7300  0AB0  30FC               	movlw	252
  7301  0AB1                     u4707:
  7302  0AB1  0B89               	decfsz	9,f
  7303  0AB2  2AB1               	goto	u4707
  7304  0AB3  0BF6               	decfsz	??_lcd_init,f
  7305  0AB4  2AB1               	goto	u4707
  7306  0AB5                     l3601:
  7307                           
  7308                           ;lcd_lib.c: 60:     write4bits(p, 0x00);
  7309  0AB5  01F3               	clrf	write4bits@val
  7310  0AB6  0878               	movf	lcd_init@p,w
  7311  0AB7  3190  20CE  318A   	fcall	_write4bits
  7312  0ABA                     l3603:
  7313                           
  7314                           ;lcd_lib.c: 62:     _delay((unsigned long)((100)*(8000000/4000000.0)));
  7315  0ABA  3042               	movlw	66
  7316  0ABB                     u4717:
  7317  0ABB  0B89               	decfsz	9,f
  7318  0ABC  2ABB               	goto	u4717
  7319  0ABD  3200               	nop2
  7320                           
  7321                           ;lcd_lib.c: 64:     write4bits(p, 0x60);
  7322  0ABE  3060               	movlw	96
  7323  0ABF  00F6               	movwf	??_lcd_init
  7324  0AC0  0876               	movf	??_lcd_init,w
  7325  0AC1  00F3               	movwf	write4bits@val
  7326  0AC2  0878               	movf	lcd_init@p,w
  7327  0AC3  3190  20CE  318A   	fcall	_write4bits
  7328                           
  7329                           ;lcd_lib.c: 68:     write4bits(p, 0x00);
  7330  0AC6  01F3               	clrf	write4bits@val
  7331  0AC7  0878               	movf	lcd_init@p,w
  7332  0AC8  3190  20CE  318A   	fcall	_write4bits
  7333  0ACB                     l3605:
  7334                           
  7335                           ;lcd_lib.c: 70:     _delay((unsigned long)((100)*(8000000/4000000.0)));
  7336  0ACB  3042               	movlw	66
  7337  0ACC                     u4727:
  7338  0ACC  0B89               	decfsz	9,f
  7339  0ACD  2ACC               	goto	u4727
  7340  0ACE  3200               	nop2
  7341  0ACF                     l3607:
  7342                           
  7343                           ;lcd_lib.c: 72:     write4bits(p, 0x20);
  7344  0ACF  3020               	movlw	32
  7345  0AD0  00F6               	movwf	??_lcd_init
  7346  0AD1  0876               	movf	??_lcd_init,w
  7347  0AD2  00F3               	movwf	write4bits@val
  7348  0AD3  0878               	movf	lcd_init@p,w
  7349  0AD4  3190  20CE  318A   	fcall	_write4bits
  7350                           
  7351                           ;lcd_lib.c: 74:     _delay((unsigned long)((3)*(8000000/4000.0)));
  7352  0AD7  3008               	movlw	8
  7353  0AD8  00F6               	movwf	??_lcd_init
  7354  0AD9  30CA               	movlw	202
  7355  0ADA                     u4737:
  7356  0ADA  0B89               	decfsz	9,f
  7357  0ADB  2ADA               	goto	u4737
  7358  0ADC  0BF6               	decfsz	??_lcd_init,f
  7359  0ADD  2ADA               	goto	u4737
  7360  0ADE                     l302:
  7361  0ADE  0008               	return
  7362  0ADF                     __end_of_lcd_init:
  7363                           
  7364                           	psect	text21
  7365  10CE                     __ptext21:	
  7366 ;; *************** function _write4bits *****************
  7367 ;; Defined at:
  7368 ;;		line 155 in file "lcd_lib.c"
  7369 ;; Parameters:    Size  Location     Type
  7370 ;;  p               1    wreg     PTR struct .
  7371 ;;		 -> NULL(0), main@lcd(4), 
  7372 ;;  val             1    3[COMMON] unsigned char 
  7373 ;; Auto vars:     Size  Location     Type
  7374 ;;  p               1    5[COMMON] PTR struct .
  7375 ;;		 -> NULL(0), main@lcd(4), 
  7376 ;; Return value:  Size  Location     Type
  7377 ;;                  1    wreg      void 
  7378 ;; Registers used:
  7379 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  7380 ;; Tracked objects:
  7381 ;;		On entry : 0/0
  7382 ;;		On exit  : 0/0
  7383 ;;		Unchanged: 0/0
  7384 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  7385 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7386 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7387 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7388 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7389 ;;Total ram usage:        3 bytes
  7390 ;; Hardware stack levels used: 1
  7391 ;; Hardware stack levels required when called: 3
  7392 ;; This function calls:
  7393 ;;		_lcd_cmd
  7394 ;; This function is called by:
  7395 ;;		_lcd_init
  7396 ;; This function uses a non-reentrant model
  7397 ;;
  7398                           
  7399                           
  7400                           ;psect for function _write4bits
  7401  10CE                     _write4bits:
  7402                           
  7403                           ;incstack = 0
  7404                           ; Regs used in _write4bits: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
  7405                           ;write4bits@p stored from wreg
  7406  10CE  00F5               	movwf	write4bits@p
  7407  10CF                     l3179:
  7408                           
  7409                           ;lcd_lib.c: 156:     lcd_cmd(p, val);
  7410  10CF  0873               	movf	write4bits@val,w
  7411  10D0  00F4               	movwf	??_write4bits
  7412  10D1  0874               	movf	??_write4bits,w
  7413  10D2  00F1               	movwf	lcd_cmd@cmd
  7414  10D3  0875               	movf	write4bits@p,w
  7415  10D4  3190  201C  3190   	fcall	_lcd_cmd
  7416                           
  7417                           ;lcd_lib.c: 157:     lcd_cmd(p, val | 0b00000100);
  7418  10D7  0873               	movf	write4bits@val,w
  7419  10D8  3804               	iorlw	4
  7420  10D9  00F4               	movwf	??_write4bits
  7421  10DA  0874               	movf	??_write4bits,w
  7422  10DB  00F1               	movwf	lcd_cmd@cmd
  7423  10DC  0875               	movf	write4bits@p,w
  7424  10DD  3190  201C  3190   	fcall	_lcd_cmd
  7425                           
  7426                           ;lcd_lib.c: 158:     lcd_cmd(p, val);
  7427  10E0  0873               	movf	write4bits@val,w
  7428  10E1  00F4               	movwf	??_write4bits
  7429  10E2  0874               	movf	??_write4bits,w
  7430  10E3  00F1               	movwf	lcd_cmd@cmd
  7431  10E4  0875               	movf	write4bits@p,w
  7432  10E5  3190  201C  3190   	fcall	_lcd_cmd
  7433  10E8                     l335:
  7434  10E8  0008               	return
  7435  10E9                     __end_of_write4bits:
  7436                           
  7437                           	psect	text22
  7438  1217                     __ptext22:	
  7439 ;; *************** function _lcd_clear *****************
  7440 ;; Defined at:
  7441 ;;		line 91 in file "lcd_lib.c"
  7442 ;; Parameters:    Size  Location     Type
  7443 ;;  p               1    wreg     PTR struct .
  7444 ;;		 -> NULL(0), main@lcd(4), 
  7445 ;; Auto vars:     Size  Location     Type
  7446 ;;  p               1   10[BANK0 ] PTR struct .
  7447 ;;		 -> NULL(0), main@lcd(4), 
  7448 ;;  col             1    9[BANK0 ] unsigned char 
  7449 ;;  row             1    8[BANK0 ] unsigned char 
  7450 ;; Return value:  Size  Location     Type
  7451 ;;                  1    wreg      void 
  7452 ;; Registers used:
  7453 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  7454 ;; Tracked objects:
  7455 ;;		On entry : 0/0
  7456 ;;		On exit  : 0/0
  7457 ;;		Unchanged: 0/0
  7458 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  7459 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7460 ;;      Locals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7461 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7462 ;;      Totals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7463 ;;Total ram usage:        5 bytes
  7464 ;; Hardware stack levels used: 1
  7465 ;; Hardware stack levels required when called: 5
  7466 ;; This function calls:
  7467 ;;		_lcd_print
  7468 ;;		_lcd_set_cursor
  7469 ;; This function is called by:
  7470 ;;		_initialize
  7471 ;;		_print_gram
  7472 ;; This function uses a non-reentrant model
  7473 ;;
  7474                           
  7475                           
  7476                           ;psect for function _lcd_clear
  7477  1217                     _lcd_clear:
  7478                           
  7479                           ;incstack = 0
  7480                           ; Regs used in _lcd_clear: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  7481                           ;lcd_clear@p stored from wreg
  7482  1217  0020               	movlb	0	; select bank0
  7483  1218  00AA               	movwf	lcd_clear@p
  7484  1219                     l3615:
  7485                           
  7486                           ;lcd_lib.c: 92:     for(uint8_t row = 0; row < (p->ROW); row++){
  7487  1219  01A8               	clrf	lcd_clear@row
  7488  121A  2A44               	goto	l3629
  7489  121B                     l3617:
  7490                           
  7491                           ;lcd_lib.c: 93:         for(uint8_t col = 0; col < (p->COL); col++){
  7492  121B  01A9               	clrf	lcd_clear@col
  7493  121C  2A37               	goto	l3625
  7494  121D                     l3619:
  7495                           
  7496                           ;lcd_lib.c: 94:             lcd_set_cursor(p, col, row);
  7497  121D  0829               	movf	lcd_clear@col,w
  7498  121E  00A6               	movwf	??_lcd_clear
  7499  121F  0826               	movf	??_lcd_clear,w
  7500  1220  00FA               	movwf	lcd_set_cursor@col
  7501  1221  0828               	movf	lcd_clear@row,w
  7502  1222  00A7               	movwf	??_lcd_clear+1
  7503  1223  0827               	movf	??_lcd_clear+1,w
  7504  1224  00FB               	movwf	lcd_set_cursor@row
  7505  1225  082A               	movf	lcd_clear@p,w
  7506  1226  3191  21A5  3192   	fcall	_lcd_set_cursor
  7507  1229                     l3621:
  7508                           
  7509                           ;lcd_lib.c: 95:             lcd_print(p, " ");
  7510  1229  303B               	movlw	low (STR_1| (0+32768))
  7511  122A  00FA               	movwf	lcd_print@str
  7512  122B  30A0               	movlw	high (STR_1| (0+32768))
  7513  122C  00FB               	movwf	lcd_print@str+1
  7514  122D  0020               	movlb	0	; select bank0
  7515  122E  082A               	movf	lcd_clear@p,w
  7516  122F  3191  210C  3192   	fcall	_lcd_print
  7517  1232                     l3623:
  7518                           
  7519                           ;lcd_lib.c: 96:         }
  7520  1232  3001               	movlw	1
  7521  1233  0020               	movlb	0	; select bank0
  7522  1234  00A6               	movwf	??_lcd_clear
  7523  1235  0826               	movf	??_lcd_clear,w
  7524  1236  07A9               	addwf	lcd_clear@col,f
  7525  1237                     l3625:
  7526  1237  0A2A               	incf	lcd_clear@p,w
  7527  1238  0086               	movwf	6
  7528  1239  0187               	clrf	7
  7529  123A  0801               	movf	1,w
  7530  123B  0229               	subwf	lcd_clear@col,w
  7531  123C  1C03               	skipc
  7532  123D  2A3F               	goto	u4281
  7533  123E  2A40               	goto	u4280
  7534  123F                     u4281:
  7535  123F  2A1D               	goto	l3619
  7536  1240                     u4280:
  7537  1240                     l3627:
  7538                           
  7539                           ;lcd_lib.c: 97:     }
  7540  1240  3001               	movlw	1
  7541  1241  00A6               	movwf	??_lcd_clear
  7542  1242  0826               	movf	??_lcd_clear,w
  7543  1243  07A8               	addwf	lcd_clear@row,f
  7544  1244                     l3629:
  7545  1244  082A               	movf	lcd_clear@p,w
  7546  1245  3E02               	addlw	2
  7547  1246  0086               	movwf	6
  7548  1247  0187               	clrf	7
  7549  1248  0801               	movf	1,w
  7550  1249  0228               	subwf	lcd_clear@row,w
  7551  124A  1C03               	skipc
  7552  124B  2A4D               	goto	u4291
  7553  124C  2A4E               	goto	u4290
  7554  124D                     u4291:
  7555  124D  2A1B               	goto	l3617
  7556  124E                     u4290:
  7557  124E                     l3631:
  7558                           
  7559                           ;lcd_lib.c: 99:     lcd_set_cursor(p, 0, 0);
  7560  124E  01FA               	clrf	lcd_set_cursor@col
  7561  124F  01FB               	clrf	lcd_set_cursor@row
  7562  1250  082A               	movf	lcd_clear@p,w
  7563  1251  3191  21A5  3192   	fcall	_lcd_set_cursor
  7564  1254                     l314:
  7565  1254  0008               	return
  7566  1255                     __end_of_lcd_clear:
  7567                           
  7568                           	psect	text23
  7569  11A5                     __ptext23:	
  7570 ;; *************** function _lcd_set_cursor *****************
  7571 ;; Defined at:
  7572 ;;		line 107 in file "lcd_lib.c"
  7573 ;; Parameters:    Size  Location     Type
  7574 ;;  p               1    wreg     PTR struct .
  7575 ;;		 -> NULL(0), main@lcd(4), 
  7576 ;;  col             1   10[COMMON] unsigned char 
  7577 ;;  row             1   11[COMMON] unsigned char 
  7578 ;; Auto vars:     Size  Location     Type
  7579 ;;  p               1    5[BANK0 ] PTR struct .
  7580 ;;		 -> NULL(0), main@lcd(4), 
  7581 ;;  row_offsets     4    0[BANK0 ] unsigned char [4]
  7582 ;;  cmd             1    4[BANK0 ] unsigned char 
  7583 ;; Return value:  Size  Location     Type
  7584 ;;                  1    wreg      void 
  7585 ;; Registers used:
  7586 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  7587 ;; Tracked objects:
  7588 ;;		On entry : 0/0
  7589 ;;		On exit  : 0/0
  7590 ;;		Unchanged: 0/0
  7591 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  7592 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7593 ;;      Locals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7594 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7595 ;;      Totals:         3       6       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7596 ;;Total ram usage:        9 bytes
  7597 ;; Hardware stack levels used: 1
  7598 ;; Hardware stack levels required when called: 4
  7599 ;; This function calls:
  7600 ;;		_command
  7601 ;; This function is called by:
  7602 ;;		_lcd_clear
  7603 ;;		_lcd_print_with
  7604 ;; This function uses a non-reentrant model
  7605 ;;
  7606                           
  7607                           
  7608                           ;psect for function _lcd_set_cursor
  7609  11A5                     _lcd_set_cursor:
  7610                           
  7611                           ;incstack = 0
  7612                           ; Regs used in _lcd_set_cursor: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
  7613                           ;lcd_set_cursor@p stored from wreg
  7614  11A5  0020               	movlb	0	; select bank0
  7615  11A6  00A5               	movwf	lcd_set_cursor@p
  7616  11A7                     l3181:
  7617                           
  7618                           ;lcd_lib.c: 108:     uint8_t row_offsets[] = {0x00, 0x40, 0x14, 0x54};
  7619  11A7  0022               	movlb	2	; select bank2
  7620  11A8  0839               	movf	(lcd_set_cursor@F2781+3)^(0+256),w
  7621  11A9  0020               	movlb	0	; select bank0
  7622  11AA  00A3               	movwf	lcd_set_cursor@row_offsets+3
  7623  11AB  0022               	movlb	2	; select bank2
  7624  11AC  0838               	movf	(lcd_set_cursor@F2781+2)^(0+256),w
  7625  11AD  0020               	movlb	0	; select bank0
  7626  11AE  00A2               	movwf	lcd_set_cursor@row_offsets+2
  7627  11AF  0022               	movlb	2	; select bank2
  7628  11B0  0837               	movf	(lcd_set_cursor@F2781+1)^(0+256),w
  7629  11B1  0020               	movlb	0	; select bank0
  7630  11B2  00A1               	movwf	lcd_set_cursor@row_offsets+1
  7631  11B3  0022               	movlb	2	; select bank2
  7632  11B4  0836               	movf	lcd_set_cursor@F2781^(0+256),w
  7633  11B5  0020               	movlb	0	; select bank0
  7634  11B6  00A0               	movwf	lcd_set_cursor@row_offsets
  7635  11B7                     l3183:
  7636                           
  7637                           ;lcd_lib.c: 109:     if(row > p->ROW){
  7638  11B7  0825               	movf	lcd_set_cursor@p,w
  7639  11B8  3E02               	addlw	2
  7640  11B9  0086               	movwf	6
  7641  11BA  0187               	clrf	7
  7642  11BB  087B               	movf	lcd_set_cursor@row,w
  7643  11BC  0201               	subwf	1,w
  7644  11BD  1803               	skipnc
  7645  11BE  29C0               	goto	u3551
  7646  11BF  29C1               	goto	u3550
  7647  11C0                     u3551:
  7648  11C0  29CA               	goto	l319
  7649  11C1                     u3550:
  7650  11C1                     l3185:
  7651                           
  7652                           ;lcd_lib.c: 110:         row = p->ROW - 1;
  7653  11C1  0825               	movf	lcd_set_cursor@p,w
  7654  11C2  3E02               	addlw	2
  7655  11C3  0086               	movwf	6
  7656  11C4  0187               	clrf	7
  7657  11C5  0801               	movf	1,w
  7658  11C6  3EFF               	addlw	255
  7659  11C7  00FC               	movwf	??_lcd_set_cursor
  7660  11C8  087C               	movf	??_lcd_set_cursor,w
  7661  11C9  00FB               	movwf	lcd_set_cursor@row
  7662  11CA                     l319:	
  7663                           ;lcd_lib.c: 111:     }
  7664                           
  7665                           
  7666                           ;lcd_lib.c: 112:     uint8_t cmd = 0x80 | (col + row_offsets[row]);
  7667  11CA  087B               	movf	lcd_set_cursor@row,w
  7668  11CB  3E20               	addlw	(low (lcd_set_cursor@row_offsets| 0))& (0+255)
  7669  11CC  0086               	movwf	6
  7670  11CD  0187               	clrf	7
  7671  11CE  0801               	movf	1,w
  7672  11CF  077A               	addwf	lcd_set_cursor@col,w
  7673  11D0  3880               	iorlw	128
  7674  11D1  00FC               	movwf	??_lcd_set_cursor
  7675  11D2  087C               	movf	??_lcd_set_cursor,w
  7676  11D3  00A4               	movwf	lcd_set_cursor@cmd
  7677  11D4                     l3187:
  7678                           
  7679                           ;lcd_lib.c: 113:     command(p, cmd, 0);
  7680  11D4  0824               	movf	lcd_set_cursor@cmd,w
  7681  11D5  00FC               	movwf	??_lcd_set_cursor
  7682  11D6  087C               	movf	??_lcd_set_cursor,w
  7683  11D7  00F3               	movwf	command@val
  7684  11D8  01F4               	clrf	command@mode
  7685  11D9  0825               	movf	lcd_set_cursor@p,w
  7686  11DA  3192  22FA  3191   	fcall	_command
  7687  11DD                     l320:
  7688  11DD  0008               	return
  7689  11DE                     __end_of_lcd_set_cursor:
  7690                           
  7691                           	psect	text24
  7692  110C                     __ptext24:	
  7693 ;; *************** function _lcd_print *****************
  7694 ;; Defined at:
  7695 ;;		line 121 in file "lcd_lib.c"
  7696 ;; Parameters:    Size  Location     Type
  7697 ;;  p               1    wreg     PTR struct .
  7698 ;;		 -> NULL(0), main@lcd(4), 
  7699 ;;  str             2   10[COMMON] PTR unsigned char 
  7700 ;;		 -> print_gram@row2(16), print_gram@row1(16), initialize@valstr(16), STR_3(15), 
  7701 ;;		 -> STR_2(11), STR_1(2), 
  7702 ;; Auto vars:     Size  Location     Type
  7703 ;;  p               1    1[BANK0 ] PTR struct .
  7704 ;;		 -> NULL(0), main@lcd(4), 
  7705 ;;  cmd             1    0[BANK0 ] unsigned char 
  7706 ;; Return value:  Size  Location     Type
  7707 ;;                  1    wreg      void 
  7708 ;; Registers used:
  7709 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  7710 ;; Tracked objects:
  7711 ;;		On entry : 0/0
  7712 ;;		On exit  : 0/0
  7713 ;;		Unchanged: 0/0
  7714 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  7715 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7716 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7717 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7718 ;;      Totals:         3       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7719 ;;Total ram usage:        5 bytes
  7720 ;; Hardware stack levels used: 1
  7721 ;; Hardware stack levels required when called: 4
  7722 ;; This function calls:
  7723 ;;		_command
  7724 ;; This function is called by:
  7725 ;;		_lcd_clear
  7726 ;;		_lcd_print_with
  7727 ;;		_initialize
  7728 ;; This function uses a non-reentrant model
  7729 ;;
  7730                           
  7731                           
  7732                           ;psect for function _lcd_print
  7733  110C                     _lcd_print:
  7734                           
  7735                           ;incstack = 0
  7736                           ; Regs used in _lcd_print: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  7737                           ;lcd_print@p stored from wreg
  7738  110C  0020               	movlb	0	; select bank0
  7739  110D  00A1               	movwf	lcd_print@p
  7740  110E                     l3189:
  7741                           
  7742                           ;lcd_lib.c: 122:     while (*str) {
  7743  110E  2926               	goto	l3197
  7744  110F                     l3191:
  7745                           
  7746                           ;lcd_lib.c: 123:         uint8_t cmd = *str++;
  7747  110F  087A               	movf	lcd_print@str,w
  7748  1110  0084               	movwf	4
  7749  1111  087B               	movf	lcd_print@str+1,w
  7750  1112  0085               	movwf	5
  7751  1113  0800               	movf	0,w	;code access
  7752  1114  00FC               	movwf	??_lcd_print
  7753  1115  087C               	movf	??_lcd_print,w
  7754  1116  0020               	movlb	0	; select bank0
  7755  1117  00A0               	movwf	lcd_print@cmd
  7756  1118                     l3193:
  7757  1118  3001               	movlw	1
  7758  1119  07FA               	addwf	lcd_print@str,f
  7759  111A  3000               	movlw	0
  7760  111B  3DFB               	addwfc	lcd_print@str+1,f
  7761  111C                     l3195:
  7762                           
  7763                           ;lcd_lib.c: 124:         command(p, cmd, 0b00000001);
  7764  111C  0820               	movf	lcd_print@cmd,w
  7765  111D  00FC               	movwf	??_lcd_print
  7766  111E  087C               	movf	??_lcd_print,w
  7767  111F  00F3               	movwf	command@val
  7768  1120  01F4               	clrf	command@mode
  7769  1121  0AF4               	incf	command@mode,f
  7770  1122  0821               	movf	lcd_print@p,w
  7771  1123  3192  22FA  3191   	fcall	_command
  7772  1126                     l3197:
  7773                           
  7774                           ;lcd_lib.c: 122:     while (*str) {
  7775  1126  087A               	movf	lcd_print@str,w
  7776  1127  0084               	movwf	4
  7777  1128  087B               	movf	lcd_print@str+1,w
  7778  1129  0085               	movwf	5
  7779  112A  0012               	moviw fsr0++
  7780  112B  1D03               	btfss	3,2
  7781  112C  292E               	goto	u3561
  7782  112D  292F               	goto	u3560
  7783  112E                     u3561:
  7784  112E  290F               	goto	l3191
  7785  112F                     u3560:
  7786  112F                     l326:
  7787  112F  0008               	return
  7788  1130                     __end_of_lcd_print:
  7789                           
  7790                           	psect	text25
  7791  12FA                     __ptext25:	
  7792 ;; *************** function _command *****************
  7793 ;; Defined at:
  7794 ;;		line 140 in file "lcd_lib.c"
  7795 ;; Parameters:    Size  Location     Type
  7796 ;;  p               1    wreg     PTR struct .
  7797 ;;		 -> NULL(0), main@lcd(4), 
  7798 ;;  val             1    3[COMMON] unsigned char 
  7799 ;;  mode            1    4[COMMON] unsigned char 
  7800 ;; Auto vars:     Size  Location     Type
  7801 ;;  p               1    9[COMMON] PTR struct .
  7802 ;;		 -> NULL(0), main@lcd(4), 
  7803 ;;  lownib          1    8[COMMON] unsigned char 
  7804 ;;  highnib         1    7[COMMON] unsigned char 
  7805 ;; Return value:  Size  Location     Type
  7806 ;;                  1    wreg      void 
  7807 ;; Registers used:
  7808 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  7809 ;; Tracked objects:
  7810 ;;		On entry : 0/0
  7811 ;;		On exit  : 0/0
  7812 ;;		Unchanged: 0/0
  7813 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  7814 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7815 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7816 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7817 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7818 ;;Total ram usage:        7 bytes
  7819 ;; Hardware stack levels used: 1
  7820 ;; Hardware stack levels required when called: 3
  7821 ;; This function calls:
  7822 ;;		_lcd_cmd
  7823 ;; This function is called by:
  7824 ;;		_lcd_set_cursor
  7825 ;;		_lcd_print
  7826 ;; This function uses a non-reentrant model
  7827 ;;
  7828                           
  7829                           
  7830                           ;psect for function _command
  7831  12FA                     _command:
  7832                           
  7833                           ;incstack = 0
  7834                           ; Regs used in _command: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
  7835                           ;command@p stored from wreg
  7836  12FA  00F9               	movwf	command@p
  7837  12FB                     l2925:
  7838                           
  7839                           ;lcd_lib.c: 141:     uint8_t highnib = (val & 0xf0) | p->_backlightval | mode;
  7840  12FB  0879               	movf	command@p,w
  7841  12FC  3E03               	addlw	3
  7842  12FD  0086               	movwf	6
  7843  12FE  0187               	clrf	7
  7844  12FF  0873               	movf	command@val,w
  7845  1300  39F0               	andlw	240
  7846  1301  0401               	iorwf	1,w
  7847  1302  0474               	iorwf	command@mode,w
  7848  1303  00F5               	movwf	??_command
  7849  1304  0875               	movf	??_command,w
  7850  1305  00F7               	movwf	command@highnib
  7851                           
  7852                           ;lcd_lib.c: 142:  uint8_t lownib = ((val << 4) & 0xf0) | p->_backlightval | mode;
  7853  1306  0879               	movf	command@p,w
  7854  1307  3E03               	addlw	3
  7855  1308  0086               	movwf	6
  7856  1309  0187               	clrf	7
  7857  130A  0873               	movf	command@val,w
  7858  130B  00F5               	movwf	??_command
  7859  130C  3003               	movlw	3
  7860  130D                     u3185:
  7861  130D  35F5               	lslf	??_command,f
  7862  130E  3EFF               	addlw	-1
  7863  130F  1D03               	skipz
  7864  1310  2B0D               	goto	u3185
  7865  1311  3575               	lslf	??_command,w
  7866  1312  39F0               	andlw	240
  7867  1313  0401               	iorwf	1,w
  7868  1314  0474               	iorwf	command@mode,w
  7869  1315  00F6               	movwf	??_command+1
  7870  1316  0876               	movf	??_command+1,w
  7871  1317  00F8               	movwf	command@lownib
  7872  1318                     l2927:
  7873                           
  7874                           ;lcd_lib.c: 144:  lcd_cmd(p, highnib);
  7875  1318  0877               	movf	command@highnib,w
  7876  1319  00F5               	movwf	??_command
  7877  131A  0875               	movf	??_command,w
  7878  131B  00F1               	movwf	lcd_cmd@cmd
  7879  131C  0879               	movf	command@p,w
  7880  131D  3190  201C  3192   	fcall	_lcd_cmd
  7881  1320                     l2929:
  7882                           
  7883                           ;lcd_lib.c: 145:     lcd_cmd(p, highnib | 0b00000100);
  7884  1320  0877               	movf	command@highnib,w
  7885  1321  3804               	iorlw	4
  7886  1322  00F5               	movwf	??_command
  7887  1323  0875               	movf	??_command,w
  7888  1324  00F1               	movwf	lcd_cmd@cmd
  7889  1325  0879               	movf	command@p,w
  7890  1326  3190  201C  3192   	fcall	_lcd_cmd
  7891  1329                     l2931:
  7892                           
  7893                           ;lcd_lib.c: 146:     lcd_cmd(p, highnib & ~0b00000100);
  7894  1329  0877               	movf	command@highnib,w
  7895  132A  39FB               	andlw	251
  7896  132B  00F5               	movwf	??_command
  7897  132C  0875               	movf	??_command,w
  7898  132D  00F1               	movwf	lcd_cmd@cmd
  7899  132E  0879               	movf	command@p,w
  7900  132F  3190  201C  3192   	fcall	_lcd_cmd
  7901  1332                     l2933:
  7902                           
  7903                           ;lcd_lib.c: 148:     _delay((unsigned long)((100)*(8000000/4000000.0)));
  7904  1332  3042               	movlw	66
  7905  1333                     u4747:
  7906  1333  0B89               	decfsz	9,f
  7907  1334  2B33               	goto	u4747
  7908  1335  3200               	nop2
  7909  1336                     l2935:
  7910                           
  7911                           ;lcd_lib.c: 150:  lcd_cmd(p, lownib);
  7912  1336  0878               	movf	command@lownib,w
  7913  1337  00F5               	movwf	??_command
  7914  1338  0875               	movf	??_command,w
  7915  1339  00F1               	movwf	lcd_cmd@cmd
  7916  133A  0879               	movf	command@p,w
  7917  133B  3190  201C  3192   	fcall	_lcd_cmd
  7918  133E                     l2937:
  7919                           
  7920                           ;lcd_lib.c: 151:     lcd_cmd(p, lownib | 0b00000100);
  7921  133E  0878               	movf	command@lownib,w
  7922  133F  3804               	iorlw	4
  7923  1340  00F5               	movwf	??_command
  7924  1341  0875               	movf	??_command,w
  7925  1342  00F1               	movwf	lcd_cmd@cmd
  7926  1343  0879               	movf	command@p,w
  7927  1344  3190  201C  3192   	fcall	_lcd_cmd
  7928  1347                     l2939:
  7929                           
  7930                           ;lcd_lib.c: 152:     lcd_cmd(p, lownib & ~0b00000100);
  7931  1347  0878               	movf	command@lownib,w
  7932  1348  39FB               	andlw	251
  7933  1349  00F5               	movwf	??_command
  7934  134A  0875               	movf	??_command,w
  7935  134B  00F1               	movwf	lcd_cmd@cmd
  7936  134C  0879               	movf	command@p,w
  7937  134D  3190  201C  3192   	fcall	_lcd_cmd
  7938  1350                     l332:
  7939  1350  0008               	return
  7940  1351                     __end_of_command:
  7941                           
  7942                           	psect	text26
  7943  1006                     __ptext26:	
  7944 ;; *************** function _lcd_backlight *****************
  7945 ;; Defined at:
  7946 ;;		line 81 in file "lcd_lib.c"
  7947 ;; Parameters:    Size  Location     Type
  7948 ;;  p               1    wreg     PTR struct .
  7949 ;;		 -> NULL(0), main@lcd(4), 
  7950 ;; Auto vars:     Size  Location     Type
  7951 ;;  p               1    4[COMMON] PTR struct .
  7952 ;;		 -> NULL(0), main@lcd(4), 
  7953 ;; Return value:  Size  Location     Type
  7954 ;;                  1    wreg      void 
  7955 ;; Registers used:
  7956 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  7957 ;; Tracked objects:
  7958 ;;		On entry : 0/0
  7959 ;;		On exit  : 0/0
  7960 ;;		Unchanged: 0/0
  7961 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  7962 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7963 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7964 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7965 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7966 ;;Total ram usage:        2 bytes
  7967 ;; Hardware stack levels used: 1
  7968 ;; Hardware stack levels required when called: 3
  7969 ;; This function calls:
  7970 ;;		_lcd_cmd
  7971 ;; This function is called by:
  7972 ;;		_initialize
  7973 ;; This function uses a non-reentrant model
  7974 ;;
  7975                           
  7976                           
  7977                           ;psect for function _lcd_backlight
  7978  1006                     _lcd_backlight:
  7979                           
  7980                           ;incstack = 0
  7981                           ; Regs used in _lcd_backlight: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
  7982                           ;lcd_backlight@p stored from wreg
  7983  1006  00F4               	movwf	lcd_backlight@p
  7984  1007                     l3609:
  7985                           
  7986                           ;lcd_lib.c: 82:     lcd_cmd(p, 0x08);
  7987  1007  3008               	movlw	8
  7988  1008  00F3               	movwf	??_lcd_backlight
  7989  1009  0873               	movf	??_lcd_backlight,w
  7990  100A  00F1               	movwf	lcd_cmd@cmd
  7991  100B  0874               	movf	lcd_backlight@p,w
  7992  100C  3190  201C  3190   	fcall	_lcd_cmd
  7993  100F                     l3611:
  7994                           
  7995                           ;lcd_lib.c: 83:     p->_backlightval = 0x08;
  7996  100F  3008               	movlw	8
  7997  1010  00F3               	movwf	??_lcd_backlight
  7998  1011  0874               	movf	lcd_backlight@p,w
  7999  1012  3E03               	addlw	3
  8000  1013  0086               	movwf	6
  8001  1014  0187               	clrf	7
  8002  1015  0873               	movf	??_lcd_backlight,w
  8003  1016  0081               	movwf	1
  8004  1017                     l3613:
  8005                           
  8006                           ;lcd_lib.c: 84:     _delay((unsigned long)((10)*(8000000/4000000.0)));
  8007  1017  3006               	movlw	6
  8008  1018                     u4757:
  8009  1018  0B89               	decfsz	9,f
  8010  1019  2818               	goto	u4757
  8011  101A  3200               	nop2
  8012  101B                     l305:
  8013  101B  0008               	return
  8014  101C                     __end_of_lcd_backlight:
  8015                           
  8016                           	psect	text27
  8017  101C                     __ptext27:	
  8018 ;; *************** function _lcd_cmd *****************
  8019 ;; Defined at:
  8020 ;;		line 6 in file "lcd_lib.c"
  8021 ;; Parameters:    Size  Location     Type
  8022 ;;  p               1    wreg     PTR struct .
  8023 ;;		 -> NULL(0), main@lcd(4), 
  8024 ;;  cmd             1    1[COMMON] unsigned char 
  8025 ;; Auto vars:     Size  Location     Type
  8026 ;;  p               1    2[COMMON] PTR struct .
  8027 ;;		 -> NULL(0), main@lcd(4), 
  8028 ;; Return value:  Size  Location     Type
  8029 ;;                  1    wreg      void 
  8030 ;; Registers used:
  8031 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  8032 ;; Tracked objects:
  8033 ;;		On entry : 0/0
  8034 ;;		On exit  : 0/0
  8035 ;;		Unchanged: 0/0
  8036 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  8037 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8038 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8039 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8040 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8041 ;;Total ram usage:        2 bytes
  8042 ;; Hardware stack levels used: 1
  8043 ;; Hardware stack levels required when called: 2
  8044 ;; This function calls:
  8045 ;;		_i2c_start
  8046 ;;		_i2c_stop
  8047 ;;		_i2c_write
  8048 ;; This function is called by:
  8049 ;;		_lcd_backlight
  8050 ;;		_command
  8051 ;;		_write4bits
  8052 ;; This function uses a non-reentrant model
  8053 ;;
  8054                           
  8055                           
  8056                           ;psect for function _lcd_cmd
  8057  101C                     _lcd_cmd:
  8058                           
  8059                           ;incstack = 0
  8060                           ; Regs used in _lcd_cmd: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
  8061                           ;lcd_cmd@p stored from wreg
  8062  101C  00F2               	movwf	lcd_cmd@p
  8063  101D                     l2783:
  8064                           
  8065                           ;lcd_lib.c: 7:     i2c_start();
  8066  101D  319F  27B3  3190   	fcall	_i2c_start
  8067  1020                     l2785:
  8068                           
  8069                           ;lcd_lib.c: 8:     i2c_write(p->lcd_address << 1);
  8070  1020  0872               	movf	lcd_cmd@p,w
  8071  1021  0086               	movwf	6
  8072  1022  0187               	clrf	7
  8073  1023  3501               	lslf	1,w
  8074  1024  319F  27C9  3190   	fcall	_i2c_write
  8075  1027                     l2787:
  8076                           
  8077                           ;lcd_lib.c: 9:     i2c_write(cmd);
  8078  1027  0871               	movf	lcd_cmd@cmd,w
  8079  1028  319F  27C9  3190   	fcall	_i2c_write
  8080  102B                     l2789:
  8081                           
  8082                           ;lcd_lib.c: 10:     i2c_stop();
  8083  102B  3180  2004  3190   	fcall	_i2c_stop
  8084  102E                     l2791:
  8085                           
  8086                           ;lcd_lib.c: 11:     _delay((unsigned long)((10)*(8000000/4000000.0)));
  8087  102E  3006               	movlw	6
  8088  102F                     u4767:
  8089  102F  0B89               	decfsz	9,f
  8090  1030  282F               	goto	u4767
  8091  1031  3200               	nop2
  8092  1032                     l299:
  8093  1032  0008               	return
  8094  1033                     __end_of_lcd_cmd:
  8095                           
  8096                           	psect	text28
  8097  1FC9                     __ptext28:	
  8098 ;; *************** function _i2c_write *****************
  8099 ;; Defined at:
  8100 ;;		line 25 in file "i2c.c"
  8101 ;; Parameters:    Size  Location     Type
  8102 ;;  data            1    wreg     unsigned char 
  8103 ;; Auto vars:     Size  Location     Type
  8104 ;;  data            1    0[COMMON] unsigned char 
  8105 ;; Return value:  Size  Location     Type
  8106 ;;                  1    wreg      void 
  8107 ;; Registers used:
  8108 ;;		wreg, status,2, status,0, pclath, cstack
  8109 ;; Tracked objects:
  8110 ;;		On entry : 0/0
  8111 ;;		On exit  : 0/0
  8112 ;;		Unchanged: 0/0
  8113 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  8114 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8115 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8116 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8117 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8118 ;;Total ram usage:        1 bytes
  8119 ;; Hardware stack levels used: 1
  8120 ;; Hardware stack levels required when called: 1
  8121 ;; This function calls:
  8122 ;;		_i2c_wait
  8123 ;; This function is called by:
  8124 ;;		_lcd_cmd
  8125 ;; This function uses a non-reentrant model
  8126 ;;
  8127                           
  8128                           
  8129                           ;psect for function _i2c_write
  8130  1FC9                     _i2c_write:
  8131                           
  8132                           ;incstack = 0
  8133                           ; Regs used in _i2c_write: [wreg+status,2+status,0+pclath+cstack]
  8134                           ;i2c_write@data stored from wreg
  8135  1FC9  00F0               	movwf	i2c_write@data
  8136  1FCA                     l2549:
  8137                           
  8138                           ;i2c.c: 26:     SSPBUF = data;
  8139  1FCA  0870               	movf	i2c_write@data,w
  8140  1FCB  0024               	movlb	4	; select bank4
  8141  1FCC  0091               	movwf	17	;volatile
  8142  1FCD                     l96:	
  8143                           ;i2c.c: 27:     while(SSPSTATbits.BF);
  8144                           
  8145  1FCD  1814               	btfsc	20,0	;volatile
  8146  1FCE  2FD0               	goto	u2411
  8147  1FCF  2FD1               	goto	u2410
  8148  1FD0                     u2411:
  8149  1FD0  2FCD               	goto	l96
  8150  1FD1                     u2410:
  8151  1FD1                     l99:
  8152  1FD1  1B16               	btfsc	22,6	;volatile
  8153  1FD2  2FD4               	goto	u2421
  8154  1FD3  2FD5               	goto	u2420
  8155  1FD4                     u2421:
  8156  1FD4  2FD1               	goto	l99
  8157  1FD5                     u2420:
  8158  1FD5                     l2551:
  8159                           
  8160                           ;i2c.c: 29:     i2c_wait();
  8161  1FD5  319F  27BD  319F   	fcall	_i2c_wait
  8162  1FD8                     l102:
  8163  1FD8  0008               	return
  8164  1FD9                     __end_of_i2c_write:
  8165                           
  8166                           	psect	text29
  8167  0004                     __ptext29:	
  8168 ;; *************** function _i2c_stop *****************
  8169 ;; Defined at:
  8170 ;;		line 14 in file "i2c.c"
  8171 ;; Parameters:    Size  Location     Type
  8172 ;;		None
  8173 ;; Auto vars:     Size  Location     Type
  8174 ;;		None
  8175 ;; Return value:  Size  Location     Type
  8176 ;;                  1    wreg      void 
  8177 ;; Registers used:
  8178 ;;		None
  8179 ;; Tracked objects:
  8180 ;;		On entry : 0/0
  8181 ;;		On exit  : 0/0
  8182 ;;		Unchanged: 0/0
  8183 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  8184 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8185 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8186 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8187 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8188 ;;Total ram usage:        0 bytes
  8189 ;; Hardware stack levels used: 1
  8190 ;; This function calls:
  8191 ;;		Nothing
  8192 ;; This function is called by:
  8193 ;;		_lcd_cmd
  8194 ;; This function uses a non-reentrant model
  8195 ;;
  8196                           
  8197                           
  8198                           ;psect for function _i2c_stop
  8199  0004                     _i2c_stop:
  8200  0004                     l2547:	
  8201                           ;incstack = 0
  8202                           ; Regs used in _i2c_stop: []
  8203                           
  8204                           
  8205                           ;i2c.c: 15:     SSPCON2bits.PEN = 1;
  8206  0004  0024               	movlb	4	; select bank4
  8207  0005  1516               	bsf	22,2	;volatile
  8208  0006                     l84:	
  8209                           ;i2c.c: 16:     while(SSPCON2bits.PEN);
  8210                           
  8211  0006  1916               	btfsc	22,2	;volatile
  8212  0007  2809               	goto	u2401
  8213  0008  280A               	goto	u2400
  8214  0009                     u2401:
  8215  0009  2806               	goto	l84
  8216  000A                     u2400:
  8217  000A                     l87:
  8218  000A  0008               	return
  8219  000B                     __end_of_i2c_stop:
  8220                           
  8221                           	psect	text30
  8222  1FB3                     __ptext30:	
  8223 ;; *************** function _i2c_start *****************
  8224 ;; Defined at:
  8225 ;;		line 8 in file "i2c.c"
  8226 ;; Parameters:    Size  Location     Type
  8227 ;;		None
  8228 ;; Auto vars:     Size  Location     Type
  8229 ;;		None
  8230 ;; Return value:  Size  Location     Type
  8231 ;;                  1    wreg      void 
  8232 ;; Registers used:
  8233 ;;		wreg, status,2, status,0, pclath, cstack
  8234 ;; Tracked objects:
  8235 ;;		On entry : 0/0
  8236 ;;		On exit  : 0/0
  8237 ;;		Unchanged: 0/0
  8238 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  8239 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8240 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8241 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8242 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8243 ;;Total ram usage:        0 bytes
  8244 ;; Hardware stack levels used: 1
  8245 ;; Hardware stack levels required when called: 1
  8246 ;; This function calls:
  8247 ;;		_i2c_wait
  8248 ;; This function is called by:
  8249 ;;		_lcd_cmd
  8250 ;; This function uses a non-reentrant model
  8251 ;;
  8252                           
  8253                           
  8254                           ;psect for function _i2c_start
  8255  1FB3                     _i2c_start:
  8256  1FB3                     l2543:	
  8257                           ;incstack = 0
  8258                           ; Regs used in _i2c_start: [wreg+status,2+status,0+pclath+cstack]
  8259                           
  8260                           
  8261                           ;i2c.c: 9:     i2c_wait();
  8262  1FB3  319F  27BD  319F   	fcall	_i2c_wait
  8263  1FB6                     l2545:
  8264                           
  8265                           ;i2c.c: 10:     SSPCON2bits.SEN = 1;
  8266  1FB6  0024               	movlb	4	; select bank4
  8267  1FB7  1416               	bsf	22,0	;volatile
  8268  1FB8                     l78:	
  8269                           ;i2c.c: 11:     while(SSPCON2bits.SEN);
  8270                           
  8271  1FB8  1816               	btfsc	22,0	;volatile
  8272  1FB9  2FBB               	goto	u2391
  8273  1FBA  2FBC               	goto	u2390
  8274  1FBB                     u2391:
  8275  1FBB  2FB8               	goto	l78
  8276  1FBC                     u2390:
  8277  1FBC                     l81:
  8278  1FBC  0008               	return
  8279  1FBD                     __end_of_i2c_start:
  8280                           
  8281                           	psect	text31
  8282  1FBD                     __ptext31:	
  8283 ;; *************** function _i2c_wait *****************
  8284 ;; Defined at:
  8285 ;;		line 4 in file "i2c.c"
  8286 ;; Parameters:    Size  Location     Type
  8287 ;;		None
  8288 ;; Auto vars:     Size  Location     Type
  8289 ;;		None
  8290 ;; Return value:  Size  Location     Type
  8291 ;;                  1    wreg      void 
  8292 ;; Registers used:
  8293 ;;		wreg, status,2
  8294 ;; Tracked objects:
  8295 ;;		On entry : 0/0
  8296 ;;		On exit  : 0/0
  8297 ;;		Unchanged: 0/0
  8298 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  8299 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8300 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8301 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8302 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8303 ;;Total ram usage:        0 bytes
  8304 ;; Hardware stack levels used: 1
  8305 ;; This function calls:
  8306 ;;		Nothing
  8307 ;; This function is called by:
  8308 ;;		_i2c_start
  8309 ;;		_i2c_write
  8310 ;;		_i2c_repeated_start
  8311 ;;		_i2c_read
  8312 ;; This function uses a non-reentrant model
  8313 ;;
  8314                           
  8315                           
  8316                           ;psect for function _i2c_wait
  8317  1FBD                     _i2c_wait:
  8318  1FBD                     l2519:	
  8319                           ;incstack = 0
  8320                           ; Regs used in _i2c_wait: [wreg+status,2]
  8321                           
  8322  1FBD                     l2521:	
  8323                           ;i2c.c: 5:     while((SSPCON2 & 0x1F) || (SSPSTAT & 0x04));
  8324                           
  8325  1FBD  0024               	movlb	4	; select bank4
  8326  1FBE  0816               	movf	22,w	;volatile
  8327  1FBF  391F               	andlw	31
  8328  1FC0  1D03               	btfss	3,2
  8329  1FC1  2FC3               	goto	u2351
  8330  1FC2  2FC4               	goto	u2350
  8331  1FC3                     u2351:
  8332  1FC3  2FBD               	goto	l2521
  8333  1FC4                     u2350:
  8334  1FC4                     l2523:
  8335  1FC4  1914               	btfsc	20,2	;volatile
  8336  1FC5  2FC7               	goto	u2361
  8337  1FC6  2FC8               	goto	u2360
  8338  1FC7                     u2361:
  8339  1FC7  2FBD               	goto	l2521
  8340  1FC8                     u2360:
  8341  1FC8                     l75:
  8342  1FC8  0008               	return
  8343  1FC9                     __end_of_i2c_wait:
  8344                           
  8345                           	psect	text32
  8346  1FD9                     __ptext32:	
  8347 ;; *************** function _initialize_digit *****************
  8348 ;; Defined at:
  8349 ;;		line 187 in file "tm1637.c"
  8350 ;; Parameters:    Size  Location     Type
  8351 ;;  p               1    wreg     PTR struct .
  8352 ;;		 -> NULL(0), main@tm1637(2), 
  8353 ;; Auto vars:     Size  Location     Type
  8354 ;;  p               1   13[BANK0 ] PTR struct .
  8355 ;;		 -> NULL(0), main@tm1637(2), 
  8356 ;; Return value:  Size  Location     Type
  8357 ;;                  1    wreg      void 
  8358 ;; Registers used:
  8359 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  8360 ;; Tracked objects:
  8361 ;;		On entry : 0/0
  8362 ;;		On exit  : 0/0
  8363 ;;		Unchanged: 0/0
  8364 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  8365 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8366 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8367 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8368 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8369 ;;Total ram usage:        2 bytes
  8370 ;; Hardware stack levels used: 1
  8371 ;; Hardware stack levels required when called: 4
  8372 ;; This function calls:
  8373 ;;		_print_digit
  8374 ;;		_set_brigthness
  8375 ;; This function is called by:
  8376 ;;		_initialize
  8377 ;; This function uses a non-reentrant model
  8378 ;;
  8379                           
  8380                           
  8381                           ;psect for function _initialize_digit
  8382  1FD9                     _initialize_digit:
  8383                           
  8384                           ;incstack = 0
  8385                           ; Regs used in _initialize_digit: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
  8386                           ;initialize_digit@p stored from wreg
  8387  1FD9  0020               	movlb	0	; select bank0
  8388  1FDA  00AD               	movwf	initialize_digit@p
  8389  1FDB                     l3493:
  8390                           
  8391                           ;tm1637.c: 188:     set_brigthness(p, 0x0f, 1);
  8392  1FDB  300F               	movlw	15
  8393  1FDC  00AC               	movwf	??_initialize_digit
  8394  1FDD  082C               	movf	??_initialize_digit,w
  8395  1FDE  00F0               	movwf	set_brigthness@brightness
  8396  1FDF  01F1               	clrf	set_brigthness@on
  8397  1FE0  0AF1               	incf	set_brigthness@on,f
  8398  1FE1  082D               	movf	initialize_digit@p,w
  8399  1FE2  319F  27EC  319F   	fcall	_set_brigthness
  8400  1FE5                     l3495:
  8401                           
  8402                           ;tm1637.c: 189:     print_digit(p, 0);
  8403  1FE5  01FD               	clrf	print_digit@number
  8404  1FE6  0020               	movlb	0	; select bank0
  8405  1FE7  082D               	movf	initialize_digit@p,w
  8406  1FE8  318B  238B  319F   	fcall	_print_digit
  8407  1FEB                     l232:
  8408  1FEB  0008               	return
  8409  1FEC                     __end_of_initialize_digit:
  8410                           
  8411                           	psect	text33
  8412  1FEC                     __ptext33:	
  8413 ;; *************** function _set_brigthness *****************
  8414 ;; Defined at:
  8415 ;;		line 133 in file "tm1637.c"
  8416 ;; Parameters:    Size  Location     Type
  8417 ;;  p               1    wreg     PTR struct .
  8418 ;;		 -> NULL(0), main@tm1637(2), 
  8419 ;;  brightness      1    0[COMMON] unsigned char 
  8420 ;;  on              1    1[COMMON] unsigned char 
  8421 ;; Auto vars:     Size  Location     Type
  8422 ;;  p               1    3[COMMON] PTR struct .
  8423 ;;		 -> NULL(0), main@tm1637(2), 
  8424 ;; Return value:  Size  Location     Type
  8425 ;;                  1    wreg      void 
  8426 ;; Registers used:
  8427 ;;		wreg, status,2, status,0
  8428 ;; Tracked objects:
  8429 ;;		On entry : 0/0
  8430 ;;		On exit  : 0/0
  8431 ;;		Unchanged: 0/0
  8432 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  8433 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8434 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8435 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8436 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8437 ;;Total ram usage:        4 bytes
  8438 ;; Hardware stack levels used: 1
  8439 ;; This function calls:
  8440 ;;		Nothing
  8441 ;; This function is called by:
  8442 ;;		_initialize_digit
  8443 ;; This function uses a non-reentrant model
  8444 ;;
  8445                           
  8446                           
  8447                           ;psect for function _set_brigthness
  8448  1FEC                     _set_brigthness:
  8449  1FEC                     l3099:	
  8450                           ;incstack = 0
  8451                           ; Regs used in _set_brigthness: [wreg+status,2+status,0]
  8452                           
  8453                           
  8454                           ;tm1637.c: 134:     if(on == 1){
  8455  1FEC  0371               	decf	set_brigthness@on,w
  8456  1FED  1D03               	btfss	3,2
  8457  1FEE  2FF0               	goto	u3461
  8458  1FEF  2FF1               	goto	u3460
  8459  1FF0                     u3461:
  8460  1FF0  2FF9               	goto	l3103
  8461  1FF1                     u3460:
  8462  1FF1                     l3101:
  8463                           
  8464                           ;tm1637.c: 135:         m_brightness = (brightness & 0x7 | 0x08);
  8465  1FF1  0870               	movf	set_brigthness@brightness,w
  8466  1FF2  3907               	andlw	7
  8467  1FF3  3808               	iorlw	8
  8468  1FF4  00F2               	movwf	??_set_brigthness
  8469  1FF5  0872               	movf	??_set_brigthness,w
  8470  1FF6  0022               	movlb	2	; select bank2
  8471  1FF7  00D6               	movwf	_m_brightness^(0+256)
  8472                           
  8473                           ;tm1637.c: 136:     }else{
  8474  1FF8  2FFF               	goto	l215
  8475  1FF9                     l3103:
  8476                           
  8477                           ;tm1637.c: 137:         m_brightness = (brightness & 0x7 | 0x00);
  8478  1FF9  0870               	movf	set_brigthness@brightness,w
  8479  1FFA  3907               	andlw	7
  8480  1FFB  00F2               	movwf	??_set_brigthness
  8481  1FFC  0872               	movf	??_set_brigthness,w
  8482  1FFD  0022               	movlb	2	; select bank2
  8483  1FFE  00D6               	movwf	_m_brightness^(0+256)
  8484  1FFF                     l215:
  8485  1FFF  0008               	return
  8486  2000                     __end_of_set_brigthness:
  8487                           
  8488                           	psect	text34
  8489  0B8B                     __ptext34:	
  8490 ;; *************** function _print_digit *****************
  8491 ;; Defined at:
  8492 ;;		line 192 in file "tm1637.c"
  8493 ;; Parameters:    Size  Location     Type
  8494 ;;  p               1    wreg     PTR struct .
  8495 ;;		 -> NULL(0), main@tm1637(2), 
  8496 ;;  number          1   13[COMMON] unsigned char 
  8497 ;; Auto vars:     Size  Location     Type
  8498 ;;  p               1   10[BANK0 ] PTR struct .
  8499 ;;		 -> NULL(0), main@tm1637(2), 
  8500 ;;  data            4    6[BANK0 ] unsigned char [4]
  8501 ;;  tmp             1   11[BANK0 ] unsigned char 
  8502 ;; Return value:  Size  Location     Type
  8503 ;;                  1    wreg      void 
  8504 ;; Registers used:
  8505 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  8506 ;; Tracked objects:
  8507 ;;		On entry : 0/0
  8508 ;;		On exit  : 0/0
  8509 ;;		Unchanged: 0/0
  8510 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  8511 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8512 ;;      Locals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8513 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8514 ;;      Totals:         1      10       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8515 ;;Total ram usage:       11 bytes
  8516 ;; Hardware stack levels used: 1
  8517 ;; Hardware stack levels required when called: 3
  8518 ;; This function calls:
  8519 ;;		___awdiv
  8520 ;;		___awmod
  8521 ;;		_encode_digit
  8522 ;;		_set_segments
  8523 ;; This function is called by:
  8524 ;;		_initialize_digit
  8525 ;;		_initialize
  8526 ;;		_print_gram
  8527 ;; This function uses a non-reentrant model
  8528 ;;
  8529                           
  8530                           
  8531                           ;psect for function _print_digit
  8532  0B8B                     _print_digit:
  8533                           
  8534                           ;incstack = 0
  8535                           ; Regs used in _print_digit: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
  8536                           ;print_digit@p stored from wreg
  8537  0B8B  0020               	movlb	0	; select bank0
  8538  0B8C  00AA               	movwf	print_digit@p
  8539  0B8D                     l3105:
  8540                           
  8541                           ;tm1637.c: 193:     uint8_t data[] = {0xff, 0xff, 0xff, 0xff};
  8542  0B8D  0022               	movlb	2	; select bank2
  8543  0B8E  083D               	movf	(print_digit@F2820+3)^(0+256),w
  8544  0B8F  0020               	movlb	0	; select bank0
  8545  0B90  00A9               	movwf	print_digit@data+3
  8546  0B91  0022               	movlb	2	; select bank2
  8547  0B92  083C               	movf	(print_digit@F2820+2)^(0+256),w
  8548  0B93  0020               	movlb	0	; select bank0
  8549  0B94  00A8               	movwf	print_digit@data+2
  8550  0B95  0022               	movlb	2	; select bank2
  8551  0B96  083B               	movf	(print_digit@F2820+1)^(0+256),w
  8552  0B97  0020               	movlb	0	; select bank0
  8553  0B98  00A7               	movwf	print_digit@data+1
  8554  0B99  0022               	movlb	2	; select bank2
  8555  0B9A  083A               	movf	print_digit@F2820^(0+256),w
  8556  0B9B  0020               	movlb	0	; select bank0
  8557  0B9C  00A6               	movwf	print_digit@data
  8558                           
  8559                           ;tm1637.c: 196:     uint8_t tmp = number;
  8560  0B9D  087D               	movf	print_digit@number,w
  8561  0B9E  00A2               	movwf	??_print_digit
  8562  0B9F  0822               	movf	??_print_digit,w
  8563  0BA0  00AB               	movwf	print_digit@tmp
  8564  0BA1                     l3107:
  8565                           
  8566                           ;tm1637.c: 197:     data[0] = encode_digit(p, tmp / 1000);
  8567  0BA1  30E8               	movlw	232
  8568  0BA2  00F0               	movwf	___awdiv@divisor
  8569  0BA3  3003               	movlw	3
  8570  0BA4  00F1               	movwf	___awdiv@divisor+1
  8571  0BA5  082B               	movf	print_digit@tmp,w
  8572  0BA6  00A2               	movwf	??_print_digit
  8573  0BA7  01A3               	clrf	??_print_digit+1
  8574  0BA8  0822               	movf	??_print_digit,w
  8575  0BA9  00F2               	movwf	___awdiv@dividend
  8576  0BAA  0823               	movf	??_print_digit+1,w
  8577  0BAB  00F3               	movwf	___awdiv@dividend+1
  8578  0BAC  3180  200B  318B   	fcall	___awdiv
  8579  0BAF  0870               	movf	?___awdiv,w
  8580  0BB0  0020               	movlb	0	; select bank0
  8581  0BB1  00A4               	movwf	??_print_digit+2
  8582  0BB2  0824               	movf	??_print_digit+2,w
  8583  0BB3  00F9               	movwf	encode_digit@digit
  8584  0BB4  082A               	movf	print_digit@p,w
  8585  0BB5  319F  2747  318B   	fcall	_encode_digit
  8586  0BB8  0020               	movlb	0	; select bank0
  8587  0BB9  00A5               	movwf	??_print_digit+3
  8588  0BBA  0825               	movf	??_print_digit+3,w
  8589  0BBB  00A6               	movwf	print_digit@data
  8590  0BBC                     l3109:
  8591                           
  8592                           ;tm1637.c: 198:     tmp %= 1000;
  8593  0BBC  30E8               	movlw	232
  8594  0BBD  00F0               	movwf	___awmod@divisor
  8595  0BBE  3003               	movlw	3
  8596  0BBF  00F1               	movwf	___awmod@divisor+1
  8597  0BC0  082B               	movf	print_digit@tmp,w
  8598  0BC1  00A2               	movwf	??_print_digit
  8599  0BC2  01A3               	clrf	??_print_digit+1
  8600  0BC3  0822               	movf	??_print_digit,w
  8601  0BC4  00F2               	movwf	___awmod@dividend
  8602  0BC5  0823               	movf	??_print_digit+1,w
  8603  0BC6  00F3               	movwf	___awmod@dividend+1
  8604  0BC7  3188  2001  318B   	fcall	___awmod
  8605  0BCA  0870               	movf	?___awmod,w
  8606  0BCB  0020               	movlb	0	; select bank0
  8607  0BCC  00A4               	movwf	??_print_digit+2
  8608  0BCD  0824               	movf	??_print_digit+2,w
  8609  0BCE  00AB               	movwf	print_digit@tmp
  8610  0BCF                     l3111:
  8611                           
  8612                           ;tm1637.c: 199:     data[1] = encode_digit(p, tmp / 100);
  8613  0BCF  3064               	movlw	100
  8614  0BD0  00F0               	movwf	___awdiv@divisor
  8615  0BD1  3000               	movlw	0
  8616  0BD2  00F1               	movwf	___awdiv@divisor+1
  8617  0BD3  082B               	movf	print_digit@tmp,w
  8618  0BD4  00A2               	movwf	??_print_digit
  8619  0BD5  01A3               	clrf	??_print_digit+1
  8620  0BD6  0822               	movf	??_print_digit,w
  8621  0BD7  00F2               	movwf	___awdiv@dividend
  8622  0BD8  0823               	movf	??_print_digit+1,w
  8623  0BD9  00F3               	movwf	___awdiv@dividend+1
  8624  0BDA  3180  200B  318B   	fcall	___awdiv
  8625  0BDD  0870               	movf	?___awdiv,w
  8626  0BDE  0020               	movlb	0	; select bank0
  8627  0BDF  00A4               	movwf	??_print_digit+2
  8628  0BE0  0824               	movf	??_print_digit+2,w
  8629  0BE1  00F9               	movwf	encode_digit@digit
  8630  0BE2  082A               	movf	print_digit@p,w
  8631  0BE3  319F  2747  318B   	fcall	_encode_digit
  8632  0BE6  0020               	movlb	0	; select bank0
  8633  0BE7  00A5               	movwf	??_print_digit+3
  8634  0BE8  0825               	movf	??_print_digit+3,w
  8635  0BE9  00A7               	movwf	print_digit@data+1
  8636  0BEA                     l3113:
  8637                           
  8638                           ;tm1637.c: 200:     tmp %= 100;
  8639  0BEA  3064               	movlw	100
  8640  0BEB  00F0               	movwf	___awmod@divisor
  8641  0BEC  3000               	movlw	0
  8642  0BED  00F1               	movwf	___awmod@divisor+1
  8643  0BEE  082B               	movf	print_digit@tmp,w
  8644  0BEF  00A2               	movwf	??_print_digit
  8645  0BF0  01A3               	clrf	??_print_digit+1
  8646  0BF1  0822               	movf	??_print_digit,w
  8647  0BF2  00F2               	movwf	___awmod@dividend
  8648  0BF3  0823               	movf	??_print_digit+1,w
  8649  0BF4  00F3               	movwf	___awmod@dividend+1
  8650  0BF5  3188  2001  318B   	fcall	___awmod
  8651  0BF8  0870               	movf	?___awmod,w
  8652  0BF9  0020               	movlb	0	; select bank0
  8653  0BFA  00A4               	movwf	??_print_digit+2
  8654  0BFB  0824               	movf	??_print_digit+2,w
  8655  0BFC  00AB               	movwf	print_digit@tmp
  8656  0BFD                     l3115:
  8657                           
  8658                           ;tm1637.c: 201:     data[2] = encode_digit(p, tmp / 10);
  8659  0BFD  300A               	movlw	10
  8660  0BFE  00F0               	movwf	___awdiv@divisor
  8661  0BFF  3000               	movlw	0
  8662  0C00  00F1               	movwf	___awdiv@divisor+1
  8663  0C01  082B               	movf	print_digit@tmp,w
  8664  0C02  00A2               	movwf	??_print_digit
  8665  0C03  01A3               	clrf	??_print_digit+1
  8666  0C04  0822               	movf	??_print_digit,w
  8667  0C05  00F2               	movwf	___awdiv@dividend
  8668  0C06  0823               	movf	??_print_digit+1,w
  8669  0C07  00F3               	movwf	___awdiv@dividend+1
  8670  0C08  3180  200B  318B   	fcall	___awdiv
  8671  0C0B  0870               	movf	?___awdiv,w
  8672  0C0C  0020               	movlb	0	; select bank0
  8673  0C0D  00A4               	movwf	??_print_digit+2
  8674  0C0E  0824               	movf	??_print_digit+2,w
  8675  0C0F  00F9               	movwf	encode_digit@digit
  8676  0C10  082A               	movf	print_digit@p,w
  8677  0C11  319F  2747  318B   	fcall	_encode_digit
  8678  0C14  0020               	movlb	0	; select bank0
  8679  0C15  00A5               	movwf	??_print_digit+3
  8680  0C16  0825               	movf	??_print_digit+3,w
  8681  0C17  00A8               	movwf	print_digit@data+2
  8682  0C18                     l3117:
  8683                           
  8684                           ;tm1637.c: 202:     tmp %= 10;
  8685  0C18  300A               	movlw	10
  8686  0C19  00F0               	movwf	___awmod@divisor
  8687  0C1A  3000               	movlw	0
  8688  0C1B  00F1               	movwf	___awmod@divisor+1
  8689  0C1C  082B               	movf	print_digit@tmp,w
  8690  0C1D  00A2               	movwf	??_print_digit
  8691  0C1E  01A3               	clrf	??_print_digit+1
  8692  0C1F  0822               	movf	??_print_digit,w
  8693  0C20  00F2               	movwf	___awmod@dividend
  8694  0C21  0823               	movf	??_print_digit+1,w
  8695  0C22  00F3               	movwf	___awmod@dividend+1
  8696  0C23  3188  2001  318B   	fcall	___awmod
  8697  0C26  0870               	movf	?___awmod,w
  8698  0C27  0020               	movlb	0	; select bank0
  8699  0C28  00A4               	movwf	??_print_digit+2
  8700  0C29  0824               	movf	??_print_digit+2,w
  8701  0C2A  00AB               	movwf	print_digit@tmp
  8702  0C2B                     l3119:
  8703                           
  8704                           ;tm1637.c: 203:     data[3] = encode_digit(p, tmp);
  8705  0C2B  082B               	movf	print_digit@tmp,w
  8706  0C2C  00A2               	movwf	??_print_digit
  8707  0C2D  0822               	movf	??_print_digit,w
  8708  0C2E  00F9               	movwf	encode_digit@digit
  8709  0C2F  082A               	movf	print_digit@p,w
  8710  0C30  319F  2747  318B   	fcall	_encode_digit
  8711  0C33  0020               	movlb	0	; select bank0
  8712  0C34  00A3               	movwf	??_print_digit+1
  8713  0C35  0823               	movf	??_print_digit+1,w
  8714  0C36  00A9               	movwf	print_digit@data+3
  8715  0C37                     l3121:
  8716                           
  8717                           ;tm1637.c: 205:     set_segments(p, data, 4, 0);
  8718  0C37  3026               	movlw	(low (print_digit@data| 0))& (0+255)
  8719  0C38  00A2               	movwf	??_print_digit
  8720  0C39  0822               	movf	??_print_digit,w
  8721  0C3A  00F8               	movwf	set_segments@segments
  8722  0C3B  3004               	movlw	4
  8723  0C3C  00A3               	movwf	??_print_digit+1
  8724  0C3D  0823               	movf	??_print_digit+1,w
  8725  0C3E  00F9               	movwf	set_segments@length
  8726  0C3F  01FA               	clrf	set_segments@pos
  8727  0C40  082A               	movf	print_digit@p,w
  8728  0C41  3194  2404  318B   	fcall	_set_segments
  8729  0C44                     l237:
  8730  0C44  0008               	return
  8731  0C45                     __end_of_print_digit:
  8732                           
  8733                           	psect	text35
  8734  1404                     __ptext35:	
  8735 ;; *************** function _set_segments *****************
  8736 ;; Defined at:
  8737 ;;		line 147 in file "tm1637.c"
  8738 ;; Parameters:    Size  Location     Type
  8739 ;;  p               1    wreg     PTR struct .
  8740 ;;		 -> NULL(0), main@tm1637(2), 
  8741 ;;  segments        1    8[COMMON] PTR const unsigned char 
  8742 ;;		 -> print_digit@data(4), clear_segment@data(4), 
  8743 ;;  length          1    9[COMMON] unsigned char 
  8744 ;;  pos             1   10[COMMON] unsigned char 
  8745 ;; Auto vars:     Size  Location     Type
  8746 ;;  p               1    1[BANK0 ] PTR struct .
  8747 ;;		 -> NULL(0), main@tm1637(2), 
  8748 ;;  k               1    0[BANK0 ] unsigned char 
  8749 ;; Return value:  Size  Location     Type
  8750 ;;                  1    wreg      void 
  8751 ;; Registers used:
  8752 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  8753 ;; Tracked objects:
  8754 ;;		On entry : 0/0
  8755 ;;		On exit  : 0/0
  8756 ;;		Unchanged: 0/0
  8757 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  8758 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8759 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8760 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8761 ;;      Totals:         5       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8762 ;;Total ram usage:        7 bytes
  8763 ;; Hardware stack levels used: 1
  8764 ;; Hardware stack levels required when called: 2
  8765 ;; This function calls:
  8766 ;;		_start_segment
  8767 ;;		_stop_segment
  8768 ;;		_write_byte
  8769 ;; This function is called by:
  8770 ;;		_print_digit
  8771 ;;		_clear_segment
  8772 ;; This function uses a non-reentrant model
  8773 ;;
  8774                           
  8775                           
  8776                           ;psect for function _set_segments
  8777  1404                     _set_segments:
  8778                           
  8779                           ;incstack = 0
  8780                           ; Regs used in _set_segments: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
  8781                           ;set_segments@p stored from wreg
  8782  1404  0020               	movlb	0	; select bank0
  8783  1405  00A1               	movwf	set_segments@p
  8784  1406                     l2909:
  8785                           
  8786                           ;tm1637.c: 149:     start_segment(p);
  8787  1406  0821               	movf	set_segments@p,w
  8788  1407  3190  204B  3194   	fcall	_start_segment
  8789                           
  8790                           ;tm1637.c: 150:     write_byte(p, 0x40);
  8791  140A  3040               	movlw	64
  8792  140B  00FB               	movwf	??_set_segments
  8793  140C  087B               	movf	??_set_segments,w
  8794  140D  00F2               	movwf	write_byte@b
  8795  140E  0020               	movlb	0	; select bank0
  8796  140F  0821               	movf	set_segments@p,w
  8797  1410  3192  22A4  3194   	fcall	_write_byte
  8798                           
  8799                           ;tm1637.c: 151:     stop_segment(p);
  8800  1413  0020               	movlb	0	; select bank0
  8801  1414  0821               	movf	set_segments@p,w
  8802  1415  3190  2065  3194   	fcall	_stop_segment
  8803                           
  8804                           ;tm1637.c: 154:     start_segment(p);
  8805  1418  0020               	movlb	0	; select bank0
  8806  1419  0821               	movf	set_segments@p,w
  8807  141A  3190  204B  3194   	fcall	_start_segment
  8808                           
  8809                           ;tm1637.c: 155:     write_byte(p, 0xC0 + (pos & 0x03));
  8810  141D  087A               	movf	set_segments@pos,w
  8811  141E  3903               	andlw	3
  8812  141F  3EC0               	addlw	192
  8813  1420  00FB               	movwf	??_set_segments
  8814  1421  087B               	movf	??_set_segments,w
  8815  1422  00F2               	movwf	write_byte@b
  8816  1423  0020               	movlb	0	; select bank0
  8817  1424  0821               	movf	set_segments@p,w
  8818  1425  3192  22A4  3194   	fcall	_write_byte
  8819  1428                     l2911:
  8820                           
  8821                           ;tm1637.c: 158:     for(uint8_t k = 0; k < length; k++){
  8822  1428  0020               	movlb	0	; select bank0
  8823  1429  01A0               	clrf	set_segments@k
  8824  142A  2C3E               	goto	l2917
  8825  142B                     l2913:
  8826                           
  8827                           ;tm1637.c: 159:         write_byte(p, segments[k]);
  8828  142B  0820               	movf	set_segments@k,w
  8829  142C  0778               	addwf	set_segments@segments,w
  8830  142D  00FB               	movwf	??_set_segments
  8831  142E  087B               	movf	??_set_segments,w
  8832  142F  0086               	movwf	6
  8833  1430  0187               	clrf	7
  8834  1431  0801               	movf	1,w
  8835  1432  00FC               	movwf	??_set_segments+1
  8836  1433  087C               	movf	??_set_segments+1,w
  8837  1434  00F2               	movwf	write_byte@b
  8838  1435  0821               	movf	set_segments@p,w
  8839  1436  3192  22A4  3194   	fcall	_write_byte
  8840  1439                     l2915:
  8841                           
  8842                           ;tm1637.c: 160:     }
  8843  1439  3001               	movlw	1
  8844  143A  00FB               	movwf	??_set_segments
  8845  143B  087B               	movf	??_set_segments,w
  8846  143C  0020               	movlb	0	; select bank0
  8847  143D  07A0               	addwf	set_segments@k,f
  8848  143E                     l2917:
  8849  143E  0879               	movf	set_segments@length,w
  8850  143F  0220               	subwf	set_segments@k,w
  8851  1440  1C03               	skipc
  8852  1441  2C43               	goto	u3171
  8853  1442  2C44               	goto	u3170
  8854  1443                     u3171:
  8855  1443  2C2B               	goto	l2913
  8856  1444                     u3170:
  8857  1444                     l2919:
  8858                           
  8859                           ;tm1637.c: 162:     stop_segment(p);
  8860  1444  0821               	movf	set_segments@p,w
  8861  1445  3190  2065  3194   	fcall	_stop_segment
  8862                           
  8863                           ;tm1637.c: 165:     start_segment(p);
  8864  1448  0020               	movlb	0	; select bank0
  8865  1449  0821               	movf	set_segments@p,w
  8866  144A  3190  204B  3194   	fcall	_start_segment
  8867                           
  8868                           ;tm1637.c: 166:     write_byte(p, 0x80 + (m_brightness & 0x0f));
  8869  144D  0022               	movlb	2	; select bank2
  8870  144E  0856               	movf	_m_brightness^(0+256),w
  8871  144F  390F               	andlw	15
  8872  1450  3E80               	addlw	128
  8873  1451  00FB               	movwf	??_set_segments
  8874  1452  087B               	movf	??_set_segments,w
  8875  1453  00F2               	movwf	write_byte@b
  8876  1454  0020               	movlb	0	; select bank0
  8877  1455  0821               	movf	set_segments@p,w
  8878  1456  3192  22A4  3194   	fcall	_write_byte
  8879                           
  8880                           ;tm1637.c: 167:     stop_segment(p);
  8881  1459  0020               	movlb	0	; select bank0
  8882  145A  0821               	movf	set_segments@p,w
  8883  145B  3190  2065  3194   	fcall	_stop_segment
  8884  145E                     l221:
  8885  145E  0008               	return
  8886  145F                     __end_of_set_segments:
  8887                           
  8888                           	psect	text36
  8889  12A4                     __ptext36:	
  8890 ;; *************** function _write_byte *****************
  8891 ;; Defined at:
  8892 ;;		line 78 in file "tm1637.c"
  8893 ;; Parameters:    Size  Location     Type
  8894 ;;  p               1    wreg     PTR struct .
  8895 ;;		 -> NULL(0), main@tm1637(2), 
  8896 ;;  b               1    2[COMMON] unsigned char 
  8897 ;; Auto vars:     Size  Location     Type
  8898 ;;  p               1    7[COMMON] PTR struct .
  8899 ;;		 -> NULL(0), main@tm1637(2), 
  8900 ;;  i               1    6[COMMON] unsigned char 
  8901 ;;  data            1    5[COMMON] unsigned char 
  8902 ;;  ack             1    4[COMMON] unsigned char 
  8903 ;; Return value:  Size  Location     Type
  8904 ;;                  1    wreg      unsigned char 
  8905 ;; Registers used:
  8906 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  8907 ;; Tracked objects:
  8908 ;;		On entry : 0/0
  8909 ;;		On exit  : 0/0
  8910 ;;		Unchanged: 0/0
  8911 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  8912 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8913 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8914 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8915 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8916 ;;Total ram usage:        6 bytes
  8917 ;; Hardware stack levels used: 1
  8918 ;; Hardware stack levels required when called: 1
  8919 ;; This function calls:
  8920 ;;		_CLK_SET_HIGH
  8921 ;;		_CLK_SET_LOW
  8922 ;;		_CLK_SET_OUTPUT
  8923 ;;		_DIO_SET_HIGH
  8924 ;;		_DIO_SET_INPUT
  8925 ;;		_DIO_SET_LOW
  8926 ;;		_DIO_SET_OUTPUT
  8927 ;;		_get_DIO_PIN_value
  8928 ;; This function is called by:
  8929 ;;		_set_segments
  8930 ;; This function uses a non-reentrant model
  8931 ;;
  8932                           
  8933                           
  8934                           ;psect for function _write_byte
  8935  12A4                     _write_byte:
  8936                           
  8937                           ;incstack = 0
  8938                           ; Regs used in _write_byte: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
  8939                           ;write_byte@p stored from wreg
  8940  12A4  00F7               	movwf	write_byte@p
  8941  12A5                     l2751:
  8942                           
  8943                           ;tm1637.c: 79:     uint8_t data = b;
  8944  12A5  0872               	movf	write_byte@b,w
  8945  12A6  00F3               	movwf	??_write_byte
  8946  12A7  0873               	movf	??_write_byte,w
  8947  12A8  00F5               	movwf	write_byte@data
  8948  12A9                     l2753:
  8949                           
  8950                           ;tm1637.c: 82:     CLK_SET_OUTPUT(p);
  8951  12A9  0877               	movf	write_byte@p,w
  8952  12AA  319F  2781  3192   	fcall	_CLK_SET_OUTPUT
  8953  12AD                     l2755:
  8954                           
  8955                           ;tm1637.c: 83:     for(uint8_t i = 0; i < 8; i++){
  8956  12AD  01F6               	clrf	write_byte@i
  8957  12AE                     l2761:
  8958                           
  8959                           ;tm1637.c: 85:         CLK_SET_LOW(p);
  8960  12AE  0877               	movf	write_byte@p,w
  8961  12AF  319F  2777  3192   	fcall	_CLK_SET_LOW
  8962  12B2                     l2763:
  8963                           
  8964                           ;tm1637.c: 87:         if(data & 0x01){
  8965  12B2  1C75               	btfss	write_byte@data,0
  8966  12B3  2AB5               	goto	u2861
  8967  12B4  2AB6               	goto	u2860
  8968  12B5                     u2861:
  8969  12B5  2ABB               	goto	l2767
  8970  12B6                     u2860:
  8971  12B6                     l2765:
  8972                           
  8973                           ;tm1637.c: 89:             DIO_SET_HIGH(p);
  8974  12B6  0877               	movf	write_byte@p,w
  8975  12B7  319F  278B  3192   	fcall	_DIO_SET_HIGH
  8976                           
  8977                           ;tm1637.c: 90:         }else{
  8978  12BA  2ABF               	goto	l208
  8979  12BB                     l2767:
  8980                           
  8981                           ;tm1637.c: 92:             DIO_SET_LOW(p);
  8982  12BB  0877               	movf	write_byte@p,w
  8983  12BC  319F  2795  3192   	fcall	_DIO_SET_LOW
  8984  12BF                     l208:	
  8985                           ;tm1637.c: 93:         }
  8986                           
  8987                           
  8988                           ;tm1637.c: 96:         CLK_SET_HIGH(p);
  8989  12BF  0877               	movf	write_byte@p,w
  8990  12C0  319F  276D  3192   	fcall	_CLK_SET_HIGH
  8991  12C3                     l2769:
  8992                           
  8993                           ;tm1637.c: 98:         data = data >> 1;
  8994  12C3  3675               	lsrf	write_byte@data,w
  8995  12C4  00F3               	movwf	??_write_byte
  8996  12C5  0873               	movf	??_write_byte,w
  8997  12C6  00F5               	movwf	write_byte@data
  8998  12C7                     l2771:
  8999                           
  9000                           ;tm1637.c: 99:     }
  9001  12C7  3001               	movlw	1
  9002  12C8  00F3               	movwf	??_write_byte
  9003  12C9  0873               	movf	??_write_byte,w
  9004  12CA  07F6               	addwf	write_byte@i,f
  9005  12CB                     l2773:
  9006  12CB  3008               	movlw	8
  9007  12CC  0276               	subwf	write_byte@i,w
  9008  12CD  1C03               	skipc
  9009  12CE  2AD0               	goto	u2871
  9010  12CF  2AD1               	goto	u2870
  9011  12D0                     u2871:
  9012  12D0  2AAE               	goto	l2761
  9013  12D1                     u2870:
  9014  12D1                     l2775:
  9015                           
  9016                           ;tm1637.c: 104:     CLK_SET_LOW(p);
  9017  12D1  0877               	movf	write_byte@p,w
  9018  12D2  319F  2777  3192   	fcall	_CLK_SET_LOW
  9019                           
  9020                           ;tm1637.c: 105:     DIO_SET_HIGH(p);
  9021  12D5  0877               	movf	write_byte@p,w
  9022  12D6  319F  278B  3192   	fcall	_DIO_SET_HIGH
  9023                           
  9024                           ;tm1637.c: 108:     CLK_SET_HIGH(p);
  9025  12D9  0877               	movf	write_byte@p,w
  9026  12DA  319F  276D  3192   	fcall	_CLK_SET_HIGH
  9027                           
  9028                           ;tm1637.c: 111:     DIO_SET_INPUT(p);
  9029  12DD  0877               	movf	write_byte@p,w
  9030  12DE  319F  27A9  3192   	fcall	_DIO_SET_INPUT
  9031                           
  9032                           ;tm1637.c: 113:     uint8_t ack = get_DIO_PIN_value(p);
  9033  12E1  0877               	movf	write_byte@p,w
  9034  12E2  3195  2522  3192   	fcall	_get_DIO_PIN_value
  9035  12E5  00F3               	movwf	??_write_byte
  9036  12E6  0873               	movf	??_write_byte,w
  9037  12E7  00F4               	movwf	write_byte@ack
  9038  12E8                     l2777:
  9039                           
  9040                           ;tm1637.c: 114:     if(ack == 0){
  9041  12E8  0874               	movf	write_byte@ack,w
  9042  12E9  1D03               	btfss	3,2
  9043  12EA  2AEC               	goto	u2881
  9044  12EB  2AED               	goto	u2880
  9045  12EC                     u2881:
  9046  12EC  2AF5               	goto	l209
  9047  12ED                     u2880:
  9048  12ED                     l2779:
  9049                           
  9050                           ;tm1637.c: 116:         DIO_SET_OUTPUT(p);
  9051  12ED  0877               	movf	write_byte@p,w
  9052  12EE  319F  279F  3192   	fcall	_DIO_SET_OUTPUT
  9053                           
  9054                           ;tm1637.c: 119:         DIO_SET_LOW(p);
  9055  12F1  0877               	movf	write_byte@p,w
  9056  12F2  319F  2795  3192   	fcall	_DIO_SET_LOW
  9057  12F5                     l209:	
  9058                           ;tm1637.c: 120:     }
  9059                           
  9060                           
  9061                           ;tm1637.c: 123:     DIO_SET_OUTPUT(p);
  9062  12F5  0877               	movf	write_byte@p,w
  9063  12F6  319F  279F  3192   	fcall	_DIO_SET_OUTPUT
  9064  12F9                     l210:
  9065  12F9  0008               	return
  9066  12FA                     __end_of_write_byte:
  9067                           
  9068                           	psect	text37
  9069  1522                     __ptext37:	
  9070 ;; *************** function _get_DIO_PIN_value *****************
  9071 ;; Defined at:
  9072 ;;		line 67 in file "tm1637.c"
  9073 ;; Parameters:    Size  Location     Type
  9074 ;;  p               1    wreg     PTR struct .
  9075 ;;		 -> NULL(0), main@tm1637(2), 
  9076 ;; Auto vars:     Size  Location     Type
  9077 ;;  p               1    1[COMMON] PTR struct .
  9078 ;;		 -> NULL(0), main@tm1637(2), 
  9079 ;; Return value:  Size  Location     Type
  9080 ;;                  1    wreg      unsigned char 
  9081 ;; Registers used:
  9082 ;;		wreg, fsr1l, fsr1h, status,2, status,0
  9083 ;; Tracked objects:
  9084 ;;		On entry : 0/0
  9085 ;;		On exit  : 0/0
  9086 ;;		Unchanged: 0/0
  9087 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  9088 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9089 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9090 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9091 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9092 ;;Total ram usage:        2 bytes
  9093 ;; Hardware stack levels used: 1
  9094 ;; This function calls:
  9095 ;;		Nothing
  9096 ;; This function is called by:
  9097 ;;		_write_byte
  9098 ;; This function uses a non-reentrant model
  9099 ;;
  9100                           
  9101                           
  9102                           ;psect for function _get_DIO_PIN_value
  9103  1522                     _get_DIO_PIN_value:
  9104                           
  9105                           ;incstack = 0
  9106                           ; Regs used in _get_DIO_PIN_value: [wreg+fsr1l+fsr1h+status,2+status,0]
  9107                           ;get_DIO_PIN_value@p stored from wreg
  9108  1522  00F1               	movwf	get_DIO_PIN_value@p
  9109  1523                     l2567:
  9110                           
  9111                           ;tm1637.c: 68:     if(p->dat_pin == 0x01){ return PORTBbits.RB0; }
  9112  1523  0A71               	incf	get_DIO_PIN_value@p,w
  9113  1524  0086               	movwf	6
  9114  1525  0187               	clrf	7
  9115  1526  0301               	decf	1,w
  9116  1527  1D03               	btfss	3,2
  9117  1528  2D2A               	goto	u2431
  9118  1529  2D2B               	goto	u2430
  9119  152A                     u2431:
  9120  152A  2D2F               	goto	l2573
  9121  152B                     u2430:
  9122  152B                     l2569:
  9123  152B  0020               	movlb	0	; select bank0
  9124  152C  080D               	movf	13,w	;volatile
  9125  152D  3901               	andlw	1
  9126  152E  2D91               	goto	l195
  9127  152F                     l2573:
  9128                           
  9129                           ;tm1637.c: 69:     if(p->dat_pin == 0x02){ return PORTBbits.RB1; }
  9130  152F  0A71               	incf	get_DIO_PIN_value@p,w
  9131  1530  0086               	movwf	6
  9132  1531  0187               	clrf	7
  9133  1532  3002               	movlw	2
  9134  1533  0601               	xorwf	1,w
  9135  1534  1D03               	btfss	3,2
  9136  1535  2D37               	goto	u2441
  9137  1536  2D38               	goto	u2440
  9138  1537                     u2441:
  9139  1537  2D3C               	goto	l2579
  9140  1538                     u2440:
  9141  1538                     l2575:
  9142  1538  0020               	movlb	0	; select bank0
  9143  1539  0C0D               	rrf	13,w	;volatile
  9144  153A  3901               	andlw	1
  9145  153B  2D91               	goto	l195
  9146  153C                     l2579:
  9147                           
  9148                           ;tm1637.c: 70:     if(p->dat_pin == 0x04){ return PORTBbits.RB2; }
  9149  153C  0A71               	incf	get_DIO_PIN_value@p,w
  9150  153D  0086               	movwf	6
  9151  153E  0187               	clrf	7
  9152  153F  3004               	movlw	4
  9153  1540  0601               	xorwf	1,w
  9154  1541  1D03               	btfss	3,2
  9155  1542  2D44               	goto	u2451
  9156  1543  2D45               	goto	u2450
  9157  1544                     u2451:
  9158  1544  2D4A               	goto	l2585
  9159  1545                     u2450:
  9160  1545                     l2581:
  9161  1545  0020               	movlb	0	; select bank0
  9162  1546  0C0D               	rrf	13,w	;volatile
  9163  1547  0C89               	rrf	9,f
  9164  1548  3901               	andlw	1
  9165  1549  2D91               	goto	l195
  9166  154A                     l2585:
  9167                           
  9168                           ;tm1637.c: 71:     if(p->dat_pin == 0x08){ return PORTBbits.RB3; }
  9169  154A  0A71               	incf	get_DIO_PIN_value@p,w
  9170  154B  0086               	movwf	6
  9171  154C  0187               	clrf	7
  9172  154D  3008               	movlw	8
  9173  154E  0601               	xorwf	1,w
  9174  154F  1D03               	btfss	3,2
  9175  1550  2D52               	goto	u2461
  9176  1551  2D53               	goto	u2460
  9177  1552                     u2461:
  9178  1552  2D5A               	goto	l2591
  9179  1553                     u2460:
  9180  1553                     l2587:
  9181  1553  0020               	movlb	0	; select bank0
  9182  1554  0C0D               	rrf	13,w	;volatile
  9183  1555  00F0               	movwf	??_get_DIO_PIN_value
  9184  1556  0CF0               	rrf	??_get_DIO_PIN_value,f
  9185  1557  0C70               	rrf	??_get_DIO_PIN_value,w
  9186  1558  3901               	andlw	1
  9187  1559  2D91               	goto	l195
  9188  155A                     l2591:
  9189                           
  9190                           ;tm1637.c: 72:     if(p->dat_pin == 0x10){ return PORTBbits.RB4; }
  9191  155A  0A71               	incf	get_DIO_PIN_value@p,w
  9192  155B  0086               	movwf	6
  9193  155C  0187               	clrf	7
  9194  155D  3010               	movlw	16
  9195  155E  0601               	xorwf	1,w
  9196  155F  1D03               	btfss	3,2
  9197  1560  2D62               	goto	u2471
  9198  1561  2D63               	goto	u2470
  9199  1562                     u2471:
  9200  1562  2D67               	goto	l2597
  9201  1563                     u2470:
  9202  1563                     l2593:
  9203  1563  0020               	movlb	0	; select bank0
  9204  1564  0E0D               	swapf	13,w	;volatile
  9205  1565  3901               	andlw	1
  9206  1566  2D91               	goto	l195
  9207  1567                     l2597:
  9208                           
  9209                           ;tm1637.c: 73:     if(p->dat_pin == 0x20){ return PORTBbits.RB5; }
  9210  1567  0A71               	incf	get_DIO_PIN_value@p,w
  9211  1568  0086               	movwf	6
  9212  1569  0187               	clrf	7
  9213  156A  3020               	movlw	32
  9214  156B  0601               	xorwf	1,w
  9215  156C  1D03               	btfss	3,2
  9216  156D  2D6F               	goto	u2481
  9217  156E  2D70               	goto	u2480
  9218  156F                     u2481:
  9219  156F  2D75               	goto	l2603
  9220  1570                     u2480:
  9221  1570                     l2599:
  9222  1570  0020               	movlb	0	; select bank0
  9223  1571  0E0D               	swapf	13,w	;volatile
  9224  1572  0C89               	rrf	9,f
  9225  1573  3901               	andlw	1
  9226  1574  2D91               	goto	l195
  9227  1575                     l2603:
  9228                           
  9229                           ;tm1637.c: 74:     if(p->dat_pin == 0x40){ return PORTBbits.RB6; }
  9230  1575  0A71               	incf	get_DIO_PIN_value@p,w
  9231  1576  0086               	movwf	6
  9232  1577  0187               	clrf	7
  9233  1578  3040               	movlw	64
  9234  1579  0601               	xorwf	1,w
  9235  157A  1D03               	btfss	3,2
  9236  157B  2D7D               	goto	u2491
  9237  157C  2D7E               	goto	u2490
  9238  157D                     u2491:
  9239  157D  2D84               	goto	l2609
  9240  157E                     u2490:
  9241  157E                     l2605:
  9242  157E  0020               	movlb	0	; select bank0
  9243  157F  0E0D               	swapf	13,w	;volatile
  9244  1580  0C89               	rrf	9,f
  9245  1581  0C89               	rrf	9,f
  9246  1582  3901               	andlw	1
  9247  1583  2D91               	goto	l195
  9248  1584                     l2609:
  9249                           
  9250                           ;tm1637.c: 75:     if(p->dat_pin == 0x80){ return PORTBbits.RB7; }
  9251  1584  0A71               	incf	get_DIO_PIN_value@p,w
  9252  1585  0086               	movwf	6
  9253  1586  0187               	clrf	7
  9254  1587  3080               	movlw	128
  9255  1588  0601               	xorwf	1,w
  9256  1589  1D03               	btfss	3,2
  9257  158A  2D8C               	goto	u2501
  9258  158B  2D8D               	goto	u2500
  9259  158C                     u2501:
  9260  158C  2D91               	goto	l195
  9261  158D                     u2500:
  9262  158D                     l2611:
  9263  158D  0020               	movlb	0	; select bank0
  9264  158E  0D0D               	rlf	13,w	;volatile
  9265  158F  0D0D               	rlf	13,w	;volatile
  9266  1590  3901               	andlw	1
  9267  1591                     l195:
  9268  1591  0008               	return
  9269  1592                     __end_of_get_DIO_PIN_value:
  9270                           
  9271                           	psect	text38
  9272  1FA9                     __ptext38:	
  9273 ;; *************** function _DIO_SET_INPUT *****************
  9274 ;; Defined at:
  9275 ;;		line 32 in file "tm1637.c"
  9276 ;; Parameters:    Size  Location     Type
  9277 ;;  p               1    wreg     PTR struct .
  9278 ;;		 -> NULL(0), main@tm1637(2), 
  9279 ;; Auto vars:     Size  Location     Type
  9280 ;;  p               1    1[COMMON] PTR struct .
  9281 ;;		 -> NULL(0), main@tm1637(2), 
  9282 ;; Return value:  Size  Location     Type
  9283 ;;                  1    wreg      void 
  9284 ;; Registers used:
  9285 ;;		wreg, fsr1l, fsr1h, status,2, status,0
  9286 ;; Tracked objects:
  9287 ;;		On entry : 0/0
  9288 ;;		On exit  : 0/0
  9289 ;;		Unchanged: 0/0
  9290 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  9291 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9292 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9293 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9294 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9295 ;;Total ram usage:        2 bytes
  9296 ;; Hardware stack levels used: 1
  9297 ;; This function calls:
  9298 ;;		Nothing
  9299 ;; This function is called by:
  9300 ;;		_write_byte
  9301 ;; This function uses a non-reentrant model
  9302 ;;
  9303                           
  9304                           
  9305                           ;psect for function _DIO_SET_INPUT
  9306  1FA9                     _DIO_SET_INPUT:
  9307                           
  9308                           ;incstack = 0
  9309                           ; Regs used in _DIO_SET_INPUT: [wreg+fsr1l+fsr1h+status,2+status,0]
  9310                           ;DIO_SET_INPUT@p stored from wreg
  9311  1FA9  00F1               	movwf	DIO_SET_INPUT@p
  9312  1FAA                     l2561:
  9313  1FAA  0A71               	incf	DIO_SET_INPUT@p,w
  9314  1FAB  0086               	movwf	6
  9315  1FAC  0187               	clrf	7
  9316  1FAD  0801               	movf	1,w
  9317  1FAE  00F0               	movwf	??_DIO_SET_INPUT
  9318  1FAF  0870               	movf	??_DIO_SET_INPUT,w
  9319  1FB0  0021               	movlb	1	; select bank1
  9320  1FB1  048D               	iorwf	13,f	;volatile
  9321  1FB2                     l179:
  9322  1FB2  0008               	return
  9323  1FB3                     __end_of_DIO_SET_INPUT:
  9324                           
  9325                           	psect	text39
  9326  1065                     __ptext39:	
  9327 ;; *************** function _stop_segment *****************
  9328 ;; Defined at:
  9329 ;;		line 53 in file "tm1637.c"
  9330 ;; Parameters:    Size  Location     Type
  9331 ;;  p               1    wreg     PTR struct .
  9332 ;;		 -> NULL(0), main@tm1637(2), 
  9333 ;; Auto vars:     Size  Location     Type
  9334 ;;  p               1    2[COMMON] PTR struct .
  9335 ;;		 -> NULL(0), main@tm1637(2), 
  9336 ;; Return value:  Size  Location     Type
  9337 ;;                  1    wreg      void 
  9338 ;; Registers used:
  9339 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  9340 ;; Tracked objects:
  9341 ;;		On entry : 0/0
  9342 ;;		On exit  : 0/0
  9343 ;;		Unchanged: 0/0
  9344 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  9345 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9346 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9347 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9348 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9349 ;;Total ram usage:        1 bytes
  9350 ;; Hardware stack levels used: 1
  9351 ;; Hardware stack levels required when called: 1
  9352 ;; This function calls:
  9353 ;;		_CLK_SET_HIGH
  9354 ;;		_CLK_SET_LOW
  9355 ;;		_CLK_SET_OUTPUT
  9356 ;;		_DIO_SET_HIGH
  9357 ;;		_DIO_SET_LOW
  9358 ;;		_DIO_SET_OUTPUT
  9359 ;; This function is called by:
  9360 ;;		_set_segments
  9361 ;; This function uses a non-reentrant model
  9362 ;;
  9363                           
  9364                           
  9365                           ;psect for function _stop_segment
  9366  1065                     _stop_segment:
  9367                           
  9368                           ;incstack = 0
  9369                           ; Regs used in _stop_segment: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
  9370                           ;stop_segment@p stored from wreg
  9371  1065  00F2               	movwf	stop_segment@p
  9372  1066                     l2749:
  9373                           
  9374                           ;tm1637.c: 55:     DIO_SET_OUTPUT(p);
  9375  1066  0872               	movf	stop_segment@p,w
  9376  1067  319F  279F  3190   	fcall	_DIO_SET_OUTPUT
  9377                           
  9378                           ;tm1637.c: 56:     CLK_SET_OUTPUT(p);
  9379  106A  0872               	movf	stop_segment@p,w
  9380  106B  319F  2781  3190   	fcall	_CLK_SET_OUTPUT
  9381                           
  9382                           ;tm1637.c: 59:     CLK_SET_LOW(p);
  9383  106E  0872               	movf	stop_segment@p,w
  9384  106F  319F  2777  3190   	fcall	_CLK_SET_LOW
  9385                           
  9386                           ;tm1637.c: 60:     DIO_SET_LOW(p);
  9387  1072  0872               	movf	stop_segment@p,w
  9388  1073  319F  2795  3190   	fcall	_DIO_SET_LOW
  9389                           
  9390                           ;tm1637.c: 63:     CLK_SET_HIGH(p);
  9391  1076  0872               	movf	stop_segment@p,w
  9392  1077  319F  276D  3190   	fcall	_CLK_SET_HIGH
  9393                           
  9394                           ;tm1637.c: 64:     DIO_SET_HIGH(p);
  9395  107A  0872               	movf	stop_segment@p,w
  9396  107B  319F  278B  3190   	fcall	_DIO_SET_HIGH
  9397  107E                     l191:
  9398  107E  0008               	return
  9399  107F                     __end_of_stop_segment:
  9400                           
  9401                           	psect	text40
  9402  104B                     __ptext40:	
  9403 ;; *************** function _start_segment *****************
  9404 ;; Defined at:
  9405 ;;		line 39 in file "tm1637.c"
  9406 ;; Parameters:    Size  Location     Type
  9407 ;;  p               1    wreg     PTR struct .
  9408 ;;		 -> NULL(0), main@tm1637(2), 
  9409 ;; Auto vars:     Size  Location     Type
  9410 ;;  p               1    2[COMMON] PTR struct .
  9411 ;;		 -> NULL(0), main@tm1637(2), 
  9412 ;; Return value:  Size  Location     Type
  9413 ;;                  1    wreg      void 
  9414 ;; Registers used:
  9415 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  9416 ;; Tracked objects:
  9417 ;;		On entry : 0/0
  9418 ;;		On exit  : 0/0
  9419 ;;		Unchanged: 0/0
  9420 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  9421 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9422 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9423 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9424 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9425 ;;Total ram usage:        1 bytes
  9426 ;; Hardware stack levels used: 1
  9427 ;; Hardware stack levels required when called: 1
  9428 ;; This function calls:
  9429 ;;		_CLK_SET_HIGH
  9430 ;;		_CLK_SET_LOW
  9431 ;;		_CLK_SET_OUTPUT
  9432 ;;		_DIO_SET_HIGH
  9433 ;;		_DIO_SET_LOW
  9434 ;;		_DIO_SET_OUTPUT
  9435 ;; This function is called by:
  9436 ;;		_set_segments
  9437 ;; This function uses a non-reentrant model
  9438 ;;
  9439                           
  9440                           
  9441                           ;psect for function _start_segment
  9442  104B                     _start_segment:
  9443                           
  9444                           ;incstack = 0
  9445                           ; Regs used in _start_segment: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
  9446                           ;start_segment@p stored from wreg
  9447  104B  00F2               	movwf	start_segment@p
  9448  104C                     l2747:
  9449                           
  9450                           ;tm1637.c: 41:     DIO_SET_OUTPUT(p);
  9451  104C  0872               	movf	start_segment@p,w
  9452  104D  319F  279F  3190   	fcall	_DIO_SET_OUTPUT
  9453                           
  9454                           ;tm1637.c: 42:     CLK_SET_OUTPUT(p);
  9455  1050  0872               	movf	start_segment@p,w
  9456  1051  319F  2781  3190   	fcall	_CLK_SET_OUTPUT
  9457                           
  9458                           ;tm1637.c: 45:     DIO_SET_HIGH(p);
  9459  1054  0872               	movf	start_segment@p,w
  9460  1055  319F  278B  3190   	fcall	_DIO_SET_HIGH
  9461                           
  9462                           ;tm1637.c: 46:     CLK_SET_HIGH(p);
  9463  1058  0872               	movf	start_segment@p,w
  9464  1059  319F  276D  3190   	fcall	_CLK_SET_HIGH
  9465                           
  9466                           ;tm1637.c: 49:     DIO_SET_LOW(p);
  9467  105C  0872               	movf	start_segment@p,w
  9468  105D  319F  2795  3190   	fcall	_DIO_SET_LOW
  9469                           
  9470                           ;tm1637.c: 50:     CLK_SET_LOW(p);
  9471  1060  0872               	movf	start_segment@p,w
  9472  1061  319F  2777  3190   	fcall	_CLK_SET_LOW
  9473  1064                     l188:
  9474  1064  0008               	return
  9475  1065                     __end_of_start_segment:
  9476                           
  9477                           	psect	text41
  9478  1F9F                     __ptext41:	
  9479 ;; *************** function _DIO_SET_OUTPUT *****************
  9480 ;; Defined at:
  9481 ;;		line 30 in file "tm1637.c"
  9482 ;; Parameters:    Size  Location     Type
  9483 ;;  p               1    wreg     PTR struct .
  9484 ;;		 -> NULL(0), main@tm1637(2), 
  9485 ;; Auto vars:     Size  Location     Type
  9486 ;;  p               1    1[COMMON] PTR struct .
  9487 ;;		 -> NULL(0), main@tm1637(2), 
  9488 ;; Return value:  Size  Location     Type
  9489 ;;                  1    wreg      void 
  9490 ;; Registers used:
  9491 ;;		wreg, fsr1l, fsr1h, status,2, status,0
  9492 ;; Tracked objects:
  9493 ;;		On entry : 0/0
  9494 ;;		On exit  : 0/0
  9495 ;;		Unchanged: 0/0
  9496 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  9497 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9498 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9499 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9500 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9501 ;;Total ram usage:        2 bytes
  9502 ;; Hardware stack levels used: 1
  9503 ;; This function calls:
  9504 ;;		Nothing
  9505 ;; This function is called by:
  9506 ;;		_start_segment
  9507 ;;		_stop_segment
  9508 ;;		_write_byte
  9509 ;; This function uses a non-reentrant model
  9510 ;;
  9511                           
  9512                           
  9513                           ;psect for function _DIO_SET_OUTPUT
  9514  1F9F                     _DIO_SET_OUTPUT:
  9515                           
  9516                           ;incstack = 0
  9517                           ; Regs used in _DIO_SET_OUTPUT: [wreg+fsr1l+fsr1h+status,2+status,0]
  9518                           ;DIO_SET_OUTPUT@p stored from wreg
  9519  1F9F  00F1               	movwf	DIO_SET_OUTPUT@p
  9520  1FA0                     l2559:
  9521  1FA0  0A71               	incf	DIO_SET_OUTPUT@p,w
  9522  1FA1  0086               	movwf	6
  9523  1FA2  0187               	clrf	7
  9524  1FA3  0901               	comf	1,w
  9525  1FA4  00F0               	movwf	??_DIO_SET_OUTPUT
  9526  1FA5  0870               	movf	??_DIO_SET_OUTPUT,w
  9527  1FA6  0021               	movlb	1	; select bank1
  9528  1FA7  058D               	andwf	13,f	;volatile
  9529  1FA8                     l176:
  9530  1FA8  0008               	return
  9531  1FA9                     __end_of_DIO_SET_OUTPUT:
  9532                           
  9533                           	psect	text42
  9534  1F95                     __ptext42:	
  9535 ;; *************** function _DIO_SET_LOW *****************
  9536 ;; Defined at:
  9537 ;;		line 36 in file "tm1637.c"
  9538 ;; Parameters:    Size  Location     Type
  9539 ;;  p               1    wreg     PTR struct .
  9540 ;;		 -> NULL(0), main@tm1637(2), 
  9541 ;; Auto vars:     Size  Location     Type
  9542 ;;  p               1    1[COMMON] PTR struct .
  9543 ;;		 -> NULL(0), main@tm1637(2), 
  9544 ;; Return value:  Size  Location     Type
  9545 ;;                  1    wreg      void 
  9546 ;; Registers used:
  9547 ;;		wreg, fsr1l, fsr1h, status,2, status,0
  9548 ;; Tracked objects:
  9549 ;;		On entry : 0/0
  9550 ;;		On exit  : 0/0
  9551 ;;		Unchanged: 0/0
  9552 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  9553 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9554 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9555 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9556 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9557 ;;Total ram usage:        2 bytes
  9558 ;; Hardware stack levels used: 1
  9559 ;; This function calls:
  9560 ;;		Nothing
  9561 ;; This function is called by:
  9562 ;;		_start_segment
  9563 ;;		_stop_segment
  9564 ;;		_write_byte
  9565 ;; This function uses a non-reentrant model
  9566 ;;
  9567                           
  9568                           
  9569                           ;psect for function _DIO_SET_LOW
  9570  1F95                     _DIO_SET_LOW:
  9571                           
  9572                           ;incstack = 0
  9573                           ; Regs used in _DIO_SET_LOW: [wreg+fsr1l+fsr1h+status,2+status,0]
  9574                           ;DIO_SET_LOW@p stored from wreg
  9575  1F95  00F1               	movwf	DIO_SET_LOW@p
  9576  1F96                     l2565:
  9577  1F96  0A71               	incf	DIO_SET_LOW@p,w
  9578  1F97  0086               	movwf	6
  9579  1F98  0187               	clrf	7
  9580  1F99  0901               	comf	1,w
  9581  1F9A  00F0               	movwf	??_DIO_SET_LOW
  9582  1F9B  0870               	movf	??_DIO_SET_LOW,w
  9583  1F9C  0022               	movlb	2	; select bank2
  9584  1F9D  058D               	andwf	13,f	;volatile
  9585  1F9E                     l185:
  9586  1F9E  0008               	return
  9587  1F9F                     __end_of_DIO_SET_LOW:
  9588                           
  9589                           	psect	text43
  9590  1F8B                     __ptext43:	
  9591 ;; *************** function _DIO_SET_HIGH *****************
  9592 ;; Defined at:
  9593 ;;		line 34 in file "tm1637.c"
  9594 ;; Parameters:    Size  Location     Type
  9595 ;;  p               1    wreg     PTR struct .
  9596 ;;		 -> NULL(0), main@tm1637(2), 
  9597 ;; Auto vars:     Size  Location     Type
  9598 ;;  p               1    1[COMMON] PTR struct .
  9599 ;;		 -> NULL(0), main@tm1637(2), 
  9600 ;; Return value:  Size  Location     Type
  9601 ;;                  1    wreg      void 
  9602 ;; Registers used:
  9603 ;;		wreg, fsr1l, fsr1h, status,2, status,0
  9604 ;; Tracked objects:
  9605 ;;		On entry : 0/0
  9606 ;;		On exit  : 0/0
  9607 ;;		Unchanged: 0/0
  9608 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  9609 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9610 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9611 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9612 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9613 ;;Total ram usage:        2 bytes
  9614 ;; Hardware stack levels used: 1
  9615 ;; This function calls:
  9616 ;;		Nothing
  9617 ;; This function is called by:
  9618 ;;		_start_segment
  9619 ;;		_stop_segment
  9620 ;;		_write_byte
  9621 ;; This function uses a non-reentrant model
  9622 ;;
  9623                           
  9624                           
  9625                           ;psect for function _DIO_SET_HIGH
  9626  1F8B                     _DIO_SET_HIGH:
  9627                           
  9628                           ;incstack = 0
  9629                           ; Regs used in _DIO_SET_HIGH: [wreg+fsr1l+fsr1h+status,2+status,0]
  9630                           ;DIO_SET_HIGH@p stored from wreg
  9631  1F8B  00F1               	movwf	DIO_SET_HIGH@p
  9632  1F8C                     l2563:
  9633  1F8C  0A71               	incf	DIO_SET_HIGH@p,w
  9634  1F8D  0086               	movwf	6
  9635  1F8E  0187               	clrf	7
  9636  1F8F  0801               	movf	1,w
  9637  1F90  00F0               	movwf	??_DIO_SET_HIGH
  9638  1F91  0870               	movf	??_DIO_SET_HIGH,w
  9639  1F92  0022               	movlb	2	; select bank2
  9640  1F93  048D               	iorwf	13,f	;volatile
  9641  1F94                     l182:
  9642  1F94  0008               	return
  9643  1F95                     __end_of_DIO_SET_HIGH:
  9644                           
  9645                           	psect	text44
  9646  1F81                     __ptext44:	
  9647 ;; *************** function _CLK_SET_OUTPUT *****************
  9648 ;; Defined at:
  9649 ;;		line 22 in file "tm1637.c"
  9650 ;; Parameters:    Size  Location     Type
  9651 ;;  p               1    wreg     PTR struct .
  9652 ;;		 -> NULL(0), main@tm1637(2), 
  9653 ;; Auto vars:     Size  Location     Type
  9654 ;;  p               1    1[COMMON] PTR struct .
  9655 ;;		 -> NULL(0), main@tm1637(2), 
  9656 ;; Return value:  Size  Location     Type
  9657 ;;                  1    wreg      void 
  9658 ;; Registers used:
  9659 ;;		wreg, fsr1l, fsr1h, status,2, status,0
  9660 ;; Tracked objects:
  9661 ;;		On entry : 0/0
  9662 ;;		On exit  : 0/0
  9663 ;;		Unchanged: 0/0
  9664 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  9665 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9666 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9667 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9668 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9669 ;;Total ram usage:        2 bytes
  9670 ;; Hardware stack levels used: 1
  9671 ;; This function calls:
  9672 ;;		Nothing
  9673 ;; This function is called by:
  9674 ;;		_start_segment
  9675 ;;		_stop_segment
  9676 ;;		_write_byte
  9677 ;; This function uses a non-reentrant model
  9678 ;;
  9679                           
  9680                           
  9681                           ;psect for function _CLK_SET_OUTPUT
  9682  1F81                     _CLK_SET_OUTPUT:
  9683                           
  9684                           ;incstack = 0
  9685                           ; Regs used in _CLK_SET_OUTPUT: [wreg+fsr1l+fsr1h+status,2+status,0]
  9686                           ;CLK_SET_OUTPUT@p stored from wreg
  9687  1F81  00F1               	movwf	CLK_SET_OUTPUT@p
  9688  1F82                     l2553:
  9689  1F82  0871               	movf	CLK_SET_OUTPUT@p,w
  9690  1F83  0086               	movwf	6
  9691  1F84  0187               	clrf	7
  9692  1F85  0901               	comf	1,w
  9693  1F86  00F0               	movwf	??_CLK_SET_OUTPUT
  9694  1F87  0870               	movf	??_CLK_SET_OUTPUT,w
  9695  1F88  0021               	movlb	1	; select bank1
  9696  1F89  058D               	andwf	13,f	;volatile
  9697  1F8A                     l167:
  9698  1F8A  0008               	return
  9699  1F8B                     __end_of_CLK_SET_OUTPUT:
  9700                           
  9701                           	psect	text45
  9702  1F77                     __ptext45:	
  9703 ;; *************** function _CLK_SET_LOW *****************
  9704 ;; Defined at:
  9705 ;;		line 27 in file "tm1637.c"
  9706 ;; Parameters:    Size  Location     Type
  9707 ;;  p               1    wreg     PTR struct .
  9708 ;;		 -> NULL(0), main@tm1637(2), 
  9709 ;; Auto vars:     Size  Location     Type
  9710 ;;  p               1    1[COMMON] PTR struct .
  9711 ;;		 -> NULL(0), main@tm1637(2), 
  9712 ;; Return value:  Size  Location     Type
  9713 ;;                  1    wreg      void 
  9714 ;; Registers used:
  9715 ;;		wreg, fsr1l, fsr1h, status,2, status,0
  9716 ;; Tracked objects:
  9717 ;;		On entry : 0/0
  9718 ;;		On exit  : 0/0
  9719 ;;		Unchanged: 0/0
  9720 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  9721 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9722 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9723 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9724 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9725 ;;Total ram usage:        2 bytes
  9726 ;; Hardware stack levels used: 1
  9727 ;; This function calls:
  9728 ;;		Nothing
  9729 ;; This function is called by:
  9730 ;;		_start_segment
  9731 ;;		_stop_segment
  9732 ;;		_write_byte
  9733 ;; This function uses a non-reentrant model
  9734 ;;
  9735                           
  9736                           
  9737                           ;psect for function _CLK_SET_LOW
  9738  1F77                     _CLK_SET_LOW:
  9739                           
  9740                           ;incstack = 0
  9741                           ; Regs used in _CLK_SET_LOW: [wreg+fsr1l+fsr1h+status,2+status,0]
  9742                           ;CLK_SET_LOW@p stored from wreg
  9743  1F77  00F1               	movwf	CLK_SET_LOW@p
  9744  1F78                     l2557:
  9745  1F78  0871               	movf	CLK_SET_LOW@p,w
  9746  1F79  0086               	movwf	6
  9747  1F7A  0187               	clrf	7
  9748  1F7B  0901               	comf	1,w
  9749  1F7C  00F0               	movwf	??_CLK_SET_LOW
  9750  1F7D  0870               	movf	??_CLK_SET_LOW,w
  9751  1F7E  0022               	movlb	2	; select bank2
  9752  1F7F  058D               	andwf	13,f	;volatile
  9753  1F80                     l173:
  9754  1F80  0008               	return
  9755  1F81                     __end_of_CLK_SET_LOW:
  9756                           
  9757                           	psect	text46
  9758  1F6D                     __ptext46:	
  9759 ;; *************** function _CLK_SET_HIGH *****************
  9760 ;; Defined at:
  9761 ;;		line 25 in file "tm1637.c"
  9762 ;; Parameters:    Size  Location     Type
  9763 ;;  p               1    wreg     PTR struct .
  9764 ;;		 -> NULL(0), main@tm1637(2), 
  9765 ;; Auto vars:     Size  Location     Type
  9766 ;;  p               1    1[COMMON] PTR struct .
  9767 ;;		 -> NULL(0), main@tm1637(2), 
  9768 ;; Return value:  Size  Location     Type
  9769 ;;                  1    wreg      void 
  9770 ;; Registers used:
  9771 ;;		wreg, fsr1l, fsr1h, status,2, status,0
  9772 ;; Tracked objects:
  9773 ;;		On entry : 0/0
  9774 ;;		On exit  : 0/0
  9775 ;;		Unchanged: 0/0
  9776 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  9777 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9778 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9779 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9780 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9781 ;;Total ram usage:        2 bytes
  9782 ;; Hardware stack levels used: 1
  9783 ;; This function calls:
  9784 ;;		Nothing
  9785 ;; This function is called by:
  9786 ;;		_start_segment
  9787 ;;		_stop_segment
  9788 ;;		_write_byte
  9789 ;; This function uses a non-reentrant model
  9790 ;;
  9791                           
  9792                           
  9793                           ;psect for function _CLK_SET_HIGH
  9794  1F6D                     _CLK_SET_HIGH:
  9795                           
  9796                           ;incstack = 0
  9797                           ; Regs used in _CLK_SET_HIGH: [wreg+fsr1l+fsr1h+status,2+status,0]
  9798                           ;CLK_SET_HIGH@p stored from wreg
  9799  1F6D  00F1               	movwf	CLK_SET_HIGH@p
  9800  1F6E                     l2555:
  9801  1F6E  0871               	movf	CLK_SET_HIGH@p,w
  9802  1F6F  0086               	movwf	6
  9803  1F70  0187               	clrf	7
  9804  1F71  0801               	movf	1,w
  9805  1F72  00F0               	movwf	??_CLK_SET_HIGH
  9806  1F73  0870               	movf	??_CLK_SET_HIGH,w
  9807  1F74  0022               	movlb	2	; select bank2
  9808  1F75  048D               	iorwf	13,f	;volatile
  9809  1F76                     l170:
  9810  1F76  0008               	return
  9811  1F77                     __end_of_CLK_SET_HIGH:
  9812                           
  9813                           	psect	text47
  9814  1F47                     __ptext47:	
  9815 ;; *************** function _encode_digit *****************
  9816 ;; Defined at:
  9817 ;;		line 183 in file "tm1637.c"
  9818 ;; Parameters:    Size  Location     Type
  9819 ;;  p               1    wreg     PTR struct .
  9820 ;;		 -> NULL(0), main@tm1637(2), 
  9821 ;;  digit           1    9[COMMON] unsigned char 
  9822 ;; Auto vars:     Size  Location     Type
  9823 ;;  p               1   10[COMMON] PTR struct .
  9824 ;;		 -> NULL(0), main@tm1637(2), 
  9825 ;; Return value:  Size  Location     Type
  9826 ;;                  1    wreg      unsigned char 
  9827 ;; Registers used:
  9828 ;;		wreg, fsr1l, fsr1h, status,2, status,0
  9829 ;; Tracked objects:
  9830 ;;		On entry : 0/0
  9831 ;;		On exit  : 0/0
  9832 ;;		Unchanged: 0/0
  9833 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  9834 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9835 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9836 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9837 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9838 ;;Total ram usage:        2 bytes
  9839 ;; Hardware stack levels used: 1
  9840 ;; This function calls:
  9841 ;;		Nothing
  9842 ;; This function is called by:
  9843 ;;		_print_digit
  9844 ;; This function uses a non-reentrant model
  9845 ;;
  9846                           
  9847                           
  9848                           ;psect for function _encode_digit
  9849  1F47                     _encode_digit:
  9850  1F47                     l2921:	
  9851                           ;incstack = 0
  9852                           ; Regs used in _encode_digit: [wreg+fsr1l+fsr1h+status,2+status,0]
  9853                           
  9854                           
  9855                           ;tm1637.c: 184:     return segdata[digit & 0x0f];
  9856  1F47  0879               	movf	encode_digit@digit,w
  9857  1F48  390F               	andlw	15
  9858  1F49  3E2C               	addlw	(low (_segdata| (0+256)))& (0+255)
  9859  1F4A  0086               	movwf	6
  9860  1F4B  3001               	movlw	1	; select bank2/3
  9861  1F4C  0087               	movwf	7
  9862  1F4D  0801               	movf	1,w
  9863  1F4E                     l229:
  9864  1F4E  0008               	return
  9865  1F4F                     __end_of_encode_digit:
  9866                           
  9867                           	psect	text48
  9868  0801                     __ptext48:	
  9869 ;; *************** function ___awmod *****************
  9870 ;; Defined at:
  9871 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\awmod.c"
  9872 ;; Parameters:    Size  Location     Type
  9873 ;;  divisor         2    0[COMMON] int 
  9874 ;;  dividend        2    2[COMMON] int 
  9875 ;; Auto vars:     Size  Location     Type
  9876 ;;  sign            1    6[COMMON] unsigned char 
  9877 ;;  counter         1    5[COMMON] unsigned char 
  9878 ;; Return value:  Size  Location     Type
  9879 ;;                  2    0[COMMON] int 
  9880 ;; Registers used:
  9881 ;;		wreg, status,2, status,0
  9882 ;; Tracked objects:
  9883 ;;		On entry : 0/0
  9884 ;;		On exit  : 0/0
  9885 ;;		Unchanged: 0/0
  9886 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  9887 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9888 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9889 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9890 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9891 ;;Total ram usage:        7 bytes
  9892 ;; Hardware stack levels used: 1
  9893 ;; This function calls:
  9894 ;;		Nothing
  9895 ;; This function is called by:
  9896 ;;		_print_digit
  9897 ;; This function uses a non-reentrant model
  9898 ;;
  9899                           
  9900                           
  9901                           ;psect for function ___awmod
  9902  0801                     ___awmod:
  9903  0801                     l2985:	
  9904                           ;incstack = 0
  9905                           ; Regs used in ___awmod: [wreg+status,2+status,0]
  9906                           
  9907  0801  01F6               	clrf	___awmod@sign
  9908  0802                     l2987:
  9909  0802  1FF3               	btfss	___awmod@dividend+1,7
  9910  0803  2805               	goto	u3291
  9911  0804  2806               	goto	u3290
  9912  0805                     u3291:
  9913  0805  280D               	goto	l2993
  9914  0806                     u3290:
  9915  0806                     l2989:
  9916  0806  09F2               	comf	___awmod@dividend,f
  9917  0807  09F3               	comf	___awmod@dividend+1,f
  9918  0808  0AF2               	incf	___awmod@dividend,f
  9919  0809  1903               	skipnz
  9920  080A  0AF3               	incf	___awmod@dividend+1,f
  9921  080B                     l2991:
  9922  080B  01F6               	clrf	___awmod@sign
  9923  080C  0AF6               	incf	___awmod@sign,f
  9924  080D                     l2993:
  9925  080D  1FF1               	btfss	___awmod@divisor+1,7
  9926  080E  2810               	goto	u3301
  9927  080F  2811               	goto	u3300
  9928  0810                     u3301:
  9929  0810  2816               	goto	l2997
  9930  0811                     u3300:
  9931  0811                     l2995:
  9932  0811  09F0               	comf	___awmod@divisor,f
  9933  0812  09F1               	comf	___awmod@divisor+1,f
  9934  0813  0AF0               	incf	___awmod@divisor,f
  9935  0814  1903               	skipnz
  9936  0815  0AF1               	incf	___awmod@divisor+1,f
  9937  0816                     l2997:
  9938  0816  0870               	movf	___awmod@divisor,w
  9939  0817  0471               	iorwf	___awmod@divisor+1,w
  9940  0818  1903               	btfsc	3,2
  9941  0819  281B               	goto	u3311
  9942  081A  281C               	goto	u3310
  9943  081B                     u3311:
  9944  081B  2845               	goto	l3015
  9945  081C                     u3310:
  9946  081C                     l2999:
  9947  081C  01F5               	clrf	___awmod@counter
  9948  081D  0AF5               	incf	___awmod@counter,f
  9949  081E  2828               	goto	l3005
  9950  081F                     l3001:
  9951  081F  3001               	movlw	1
  9952  0820                     u3325:
  9953  0820  35F0               	lslf	___awmod@divisor,f
  9954  0821  0DF1               	rlf	___awmod@divisor+1,f
  9955  0822  0B89               	decfsz	9,f
  9956  0823  2820               	goto	u3325
  9957  0824                     l3003:
  9958  0824  3001               	movlw	1
  9959  0825  00F4               	movwf	??___awmod
  9960  0826  0874               	movf	??___awmod,w
  9961  0827  07F5               	addwf	___awmod@counter,f
  9962  0828                     l3005:
  9963  0828  1FF1               	btfss	___awmod@divisor+1,7
  9964  0829  282B               	goto	u3331
  9965  082A  282C               	goto	u3330
  9966  082B                     u3331:
  9967  082B  281F               	goto	l3001
  9968  082C                     u3330:
  9969  082C                     l3007:
  9970  082C  0871               	movf	___awmod@divisor+1,w
  9971  082D  0273               	subwf	___awmod@dividend+1,w
  9972  082E  1D03               	skipz
  9973  082F  2832               	goto	u3345
  9974  0830  0870               	movf	___awmod@divisor,w
  9975  0831  0272               	subwf	___awmod@dividend,w
  9976  0832                     u3345:
  9977  0832  1C03               	skipc
  9978  0833  2835               	goto	u3341
  9979  0834  2836               	goto	u3340
  9980  0835                     u3341:
  9981  0835  283A               	goto	l3011
  9982  0836                     u3340:
  9983  0836                     l3009:
  9984  0836  0870               	movf	___awmod@divisor,w
  9985  0837  02F2               	subwf	___awmod@dividend,f
  9986  0838  0871               	movf	___awmod@divisor+1,w
  9987  0839  3BF3               	subwfb	___awmod@dividend+1,f
  9988  083A                     l3011:
  9989  083A  3001               	movlw	1
  9990  083B                     u3355:
  9991  083B  36F1               	lsrf	___awmod@divisor+1,f
  9992  083C  0CF0               	rrf	___awmod@divisor,f
  9993  083D  0B89               	decfsz	9,f
  9994  083E  283B               	goto	u3355
  9995  083F                     l3013:
  9996  083F  3001               	movlw	1
  9997  0840  02F5               	subwf	___awmod@counter,f
  9998  0841  1D03               	btfss	3,2
  9999  0842  2844               	goto	u3361
 10000  0843  2845               	goto	u3360
 10001  0844                     u3361:
 10002  0844  282C               	goto	l3007
 10003  0845                     u3360:
 10004  0845                     l3015:
 10005  0845  0876               	movf	___awmod@sign,w
 10006  0846  1903               	btfsc	3,2
 10007  0847  2849               	goto	u3371
 10008  0848  284A               	goto	u3370
 10009  0849                     u3371:
 10010  0849  284F               	goto	l3019
 10011  084A                     u3370:
 10012  084A                     l3017:
 10013  084A  09F2               	comf	___awmod@dividend,f
 10014  084B  09F3               	comf	___awmod@dividend+1,f
 10015  084C  0AF2               	incf	___awmod@dividend,f
 10016  084D  1903               	skipnz
 10017  084E  0AF3               	incf	___awmod@dividend+1,f
 10018  084F                     l3019:
 10019  084F  0873               	movf	___awmod@dividend+1,w
 10020  0850  00F1               	movwf	?___awmod+1
 10021  0851  0872               	movf	___awmod@dividend,w
 10022  0852  00F0               	movwf	?___awmod
 10023  0853                     l685:
 10024  0853  0008               	return
 10025  0854                     __end_of___awmod:
 10026                           
 10027                           	psect	text49
 10028  000B                     __ptext49:	
 10029 ;; *************** function ___awdiv *****************
 10030 ;; Defined at:
 10031 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\awdiv.c"
 10032 ;; Parameters:    Size  Location     Type
 10033 ;;  divisor         2    0[COMMON] int 
 10034 ;;  dividend        2    2[COMMON] int 
 10035 ;; Auto vars:     Size  Location     Type
 10036 ;;  quotient        2    7[COMMON] int 
 10037 ;;  sign            1    6[COMMON] unsigned char 
 10038 ;;  counter         1    5[COMMON] unsigned char 
 10039 ;; Return value:  Size  Location     Type
 10040 ;;                  2    0[COMMON] int 
 10041 ;; Registers used:
 10042 ;;		wreg, status,2, status,0
 10043 ;; Tracked objects:
 10044 ;;		On entry : 0/0
 10045 ;;		On exit  : 0/0
 10046 ;;		Unchanged: 0/0
 10047 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 10048 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10049 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10050 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10051 ;;      Totals:         9       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10052 ;;Total ram usage:        9 bytes
 10053 ;; Hardware stack levels used: 1
 10054 ;; This function calls:
 10055 ;;		Nothing
 10056 ;; This function is called by:
 10057 ;;		_print_digit
 10058 ;; This function uses a non-reentrant model
 10059 ;;
 10060                           
 10061                           
 10062                           ;psect for function ___awdiv
 10063  000B                     ___awdiv:
 10064  000B                     l2941:	
 10065                           ;incstack = 0
 10066                           ; Regs used in ___awdiv: [wreg+status,2+status,0]
 10067                           
 10068  000B  01F6               	clrf	___awdiv@sign
 10069  000C                     l2943:
 10070  000C  1FF1               	btfss	___awdiv@divisor+1,7
 10071  000D  280F               	goto	u3191
 10072  000E  2810               	goto	u3190
 10073  000F                     u3191:
 10074  000F  2817               	goto	l2949
 10075  0010                     u3190:
 10076  0010                     l2945:
 10077  0010  09F0               	comf	___awdiv@divisor,f
 10078  0011  09F1               	comf	___awdiv@divisor+1,f
 10079  0012  0AF0               	incf	___awdiv@divisor,f
 10080  0013  1903               	skipnz
 10081  0014  0AF1               	incf	___awdiv@divisor+1,f
 10082  0015                     l2947:
 10083  0015  01F6               	clrf	___awdiv@sign
 10084  0016  0AF6               	incf	___awdiv@sign,f
 10085  0017                     l2949:
 10086  0017  1FF3               	btfss	___awdiv@dividend+1,7
 10087  0018  281A               	goto	u3201
 10088  0019  281B               	goto	u3200
 10089  001A                     u3201:
 10090  001A  2824               	goto	l2955
 10091  001B                     u3200:
 10092  001B                     l2951:
 10093  001B  09F2               	comf	___awdiv@dividend,f
 10094  001C  09F3               	comf	___awdiv@dividend+1,f
 10095  001D  0AF2               	incf	___awdiv@dividend,f
 10096  001E  1903               	skipnz
 10097  001F  0AF3               	incf	___awdiv@dividend+1,f
 10098  0020                     l2953:
 10099  0020  3001               	movlw	1
 10100  0021  00F4               	movwf	??___awdiv
 10101  0022  0874               	movf	??___awdiv,w
 10102  0023  06F6               	xorwf	___awdiv@sign,f
 10103  0024                     l2955:
 10104  0024  01F7               	clrf	___awdiv@quotient
 10105  0025  01F8               	clrf	___awdiv@quotient+1
 10106  0026                     l2957:
 10107  0026  0870               	movf	___awdiv@divisor,w
 10108  0027  0471               	iorwf	___awdiv@divisor+1,w
 10109  0028  1903               	btfsc	3,2
 10110  0029  282B               	goto	u3211
 10111  002A  282C               	goto	u3210
 10112  002B                     u3211:
 10113  002B  285B               	goto	l2977
 10114  002C                     u3210:
 10115  002C                     l2959:
 10116  002C  01F5               	clrf	___awdiv@counter
 10117  002D  0AF5               	incf	___awdiv@counter,f
 10118  002E  2838               	goto	l2965
 10119  002F                     l2961:
 10120  002F  3001               	movlw	1
 10121  0030                     u3225:
 10122  0030  35F0               	lslf	___awdiv@divisor,f
 10123  0031  0DF1               	rlf	___awdiv@divisor+1,f
 10124  0032  0B89               	decfsz	9,f
 10125  0033  2830               	goto	u3225
 10126  0034                     l2963:
 10127  0034  3001               	movlw	1
 10128  0035  00F4               	movwf	??___awdiv
 10129  0036  0874               	movf	??___awdiv,w
 10130  0037  07F5               	addwf	___awdiv@counter,f
 10131  0038                     l2965:
 10132  0038  1FF1               	btfss	___awdiv@divisor+1,7
 10133  0039  283B               	goto	u3231
 10134  003A  283C               	goto	u3230
 10135  003B                     u3231:
 10136  003B  282F               	goto	l2961
 10137  003C                     u3230:
 10138  003C                     l2967:
 10139  003C  3001               	movlw	1
 10140  003D                     u3245:
 10141  003D  35F7               	lslf	___awdiv@quotient,f
 10142  003E  0DF8               	rlf	___awdiv@quotient+1,f
 10143  003F  0B89               	decfsz	9,f
 10144  0040  283D               	goto	u3245
 10145  0041  0871               	movf	___awdiv@divisor+1,w
 10146  0042  0273               	subwf	___awdiv@dividend+1,w
 10147  0043  1D03               	skipz
 10148  0044  2847               	goto	u3255
 10149  0045  0870               	movf	___awdiv@divisor,w
 10150  0046  0272               	subwf	___awdiv@dividend,w
 10151  0047                     u3255:
 10152  0047  1C03               	skipc
 10153  0048  284A               	goto	u3251
 10154  0049  284B               	goto	u3250
 10155  004A                     u3251:
 10156  004A  2850               	goto	l2973
 10157  004B                     u3250:
 10158  004B                     l2969:
 10159  004B  0870               	movf	___awdiv@divisor,w
 10160  004C  02F2               	subwf	___awdiv@dividend,f
 10161  004D  0871               	movf	___awdiv@divisor+1,w
 10162  004E  3BF3               	subwfb	___awdiv@dividend+1,f
 10163  004F                     l2971:
 10164  004F  1477               	bsf	___awdiv@quotient,0
 10165  0050                     l2973:
 10166  0050  3001               	movlw	1
 10167  0051                     u3265:
 10168  0051  36F1               	lsrf	___awdiv@divisor+1,f
 10169  0052  0CF0               	rrf	___awdiv@divisor,f
 10170  0053  0B89               	decfsz	9,f
 10171  0054  2851               	goto	u3265
 10172  0055                     l2975:
 10173  0055  3001               	movlw	1
 10174  0056  02F5               	subwf	___awdiv@counter,f
 10175  0057  1D03               	btfss	3,2
 10176  0058  285A               	goto	u3271
 10177  0059  285B               	goto	u3270
 10178  005A                     u3271:
 10179  005A  283C               	goto	l2967
 10180  005B                     u3270:
 10181  005B                     l2977:
 10182  005B  0876               	movf	___awdiv@sign,w
 10183  005C  1903               	btfsc	3,2
 10184  005D  285F               	goto	u3281
 10185  005E  2860               	goto	u3280
 10186  005F                     u3281:
 10187  005F  2865               	goto	l2981
 10188  0060                     u3280:
 10189  0060                     l2979:
 10190  0060  09F7               	comf	___awdiv@quotient,f
 10191  0061  09F8               	comf	___awdiv@quotient+1,f
 10192  0062  0AF7               	incf	___awdiv@quotient,f
 10193  0063  1903               	skipnz
 10194  0064  0AF8               	incf	___awdiv@quotient+1,f
 10195  0065                     l2981:
 10196  0065  0878               	movf	___awdiv@quotient+1,w
 10197  0066  00F1               	movwf	?___awdiv+1
 10198  0067  0877               	movf	___awdiv@quotient,w
 10199  0068  00F0               	movwf	?___awdiv
 10200  0069                     l672:
 10201  0069  0008               	return
 10202  006A                     __end_of___awdiv:
 10203                           
 10204                           	psect	text50
 10205  0991                     __ptext50:	
 10206 ;; *************** function _calc_percentage *****************
 10207 ;; Defined at:
 10208 ;;		line 25 in file "drink_meter.c"
 10209 ;; Parameters:    Size  Location     Type
 10210 ;;  p               1    wreg     PTR struct .
 10211 ;;		 -> main@drink(6), 
 10212 ;; Auto vars:     Size  Location     Type
 10213 ;;  p               1   76[BANK0 ] PTR struct .
 10214 ;;		 -> main@drink(6), 
 10215 ;; Return value:  Size  Location     Type
 10216 ;;                  1    wreg      void 
 10217 ;; Registers used:
 10218 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 10219 ;; Tracked objects:
 10220 ;;		On entry : 0/0
 10221 ;;		On exit  : 0/0
 10222 ;;		Unchanged: 0/0
 10223 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 10224 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10225 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10226 ;;      Temps:          0       0       5       0       0       0       0       0       0       0       0       0       
      +0       0
 10227 ;;      Totals:         0       1       5       0       0       0       0       0       0       0       0       0       
      +0       0
 10228 ;;Total ram usage:        6 bytes
 10229 ;; Hardware stack levels used: 1
 10230 ;; Hardware stack levels required when called: 2
 10231 ;; This function calls:
 10232 ;;		___fldiv
 10233 ;;		___flmul
 10234 ;;		___fltol
 10235 ;;		___xxtofl
 10236 ;;		_get_scale_val
 10237 ;;		_scale_convert_gram
 10238 ;; This function is called by:
 10239 ;;		_main
 10240 ;;		_set_max_gram
 10241 ;; This function uses a non-reentrant model
 10242 ;;
 10243                           
 10244                           
 10245                           ;psect for function _calc_percentage
 10246  0991                     _calc_percentage:
 10247                           
 10248                           ;incstack = 0
 10249                           ; Regs used in _calc_percentage: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
 10250                           ;calc_percentage@p stored from wreg
 10251  0991  0020               	movlb	0	; select bank0
 10252  0992  00EC               	movwf	calc_percentage@p
 10253  0993                     l3803:
 10254                           
 10255                           ;drink_meter.c: 27:     p->loadcell->weight_dat = get_scale_val(p->loadcell, 16);
 10256  0993  3010               	movlw	16
 10257  0994  0021               	movlb	1	; select bank1
 10258  0995  00A0               	movwf	??_calc_percentage^(0+128)
 10259  0996  0820               	movf	??_calc_percentage^(0+128),w
 10260  0997  0020               	movlb	0	; select bank0
 10261  0998  00A0               	movwf	get_scale_val@scale_avg_count
 10262  0999  086C               	movf	calc_percentage@p,w
 10263  099A  0086               	movwf	6
 10264  099B  0187               	clrf	7
 10265  099C  0801               	movf	1,w
 10266  099D  318C  2445  3189   	fcall	_get_scale_val
 10267  09A0  0020               	movlb	0	; select bank0
 10268  09A1  086C               	movf	calc_percentage@p,w
 10269  09A2  0086               	movwf	6
 10270  09A3  0187               	clrf	7
 10271  09A4  0801               	movf	1,w
 10272  09A5  3E06               	addlw	6
 10273  09A6  0086               	movwf	6
 10274  09A7  0187               	clrf	7
 10275  09A8  0820               	movf	?_get_scale_val,w
 10276  09A9  3FC0               	movwi [0]fsr1
 10277  09AA  0821               	movf	?_get_scale_val+1,w
 10278  09AB  3FC1               	movwi [1]fsr1
 10279  09AC  0822               	movf	?_get_scale_val+2,w
 10280  09AD  3FC2               	movwi [2]fsr1
 10281  09AE  0823               	movf	?_get_scale_val+3,w
 10282  09AF  3FC3               	movwi [3]fsr1
 10283                           
 10284                           ;drink_meter.c: 28:     scale_convert_gram(p->loadcell);
 10285  09B0  086C               	movf	calc_percentage@p,w
 10286  09B1  0086               	movwf	6
 10287  09B2  0187               	clrf	7
 10288  09B3  0801               	movf	1,w
 10289  09B4  3188  2054  3189   	fcall	_scale_convert_gram
 10290  09B7                     l3805:
 10291                           
 10292                           ;drink_meter.c: 31:     if(p->loadcell->gram == 0){
 10293  09B7  0020               	movlb	0	; select bank0
 10294  09B8  086C               	movf	calc_percentage@p,w
 10295  09B9  0086               	movwf	6
 10296  09BA  0187               	clrf	7
 10297  09BB  0801               	movf	1,w
 10298  09BC  3E0A               	addlw	10
 10299  09BD  0086               	movwf	6
 10300  09BE  0187               	clrf	7
 10301  09BF  0016               	moviw fsr1++
 10302  09C0  0401               	iorwf	1,w
 10303  09C1  1D03               	btfss	3,2
 10304  09C2  29C4               	goto	u4561
 10305  09C3  29C5               	goto	u4560
 10306  09C4                     u4561:
 10307  09C4  29CB               	goto	l3809
 10308  09C5                     u4560:
 10309  09C5                     l3807:
 10310                           
 10311                           ;drink_meter.c: 32:         p->percentage = 0;
 10312  09C5  086C               	movf	calc_percentage@p,w
 10313  09C6  3E05               	addlw	5
 10314  09C7  0086               	movwf	6
 10315  09C8  0187               	clrf	7
 10316  09C9  0181               	clrf	1
 10317                           
 10318                           ;drink_meter.c: 33:     }else{
 10319  09CA  2A35               	goto	l363
 10320  09CB                     l3809:
 10321                           
 10322                           ;drink_meter.c: 35:         p->percentage = ((float)p->loadcell->gram / (float)p->max_gr
      +                          am) * 100;
 10323  09CB  086C               	movf	calc_percentage@p,w
 10324  09CC  0086               	movwf	6
 10325  09CD  0187               	clrf	7
 10326  09CE  0801               	movf	1,w
 10327  09CF  3E0A               	addlw	10
 10328  09D0  0086               	movwf	6
 10329  09D1  0187               	clrf	7
 10330  09D2  3F40               	moviw [0]fsr1
 10331  09D3  0021               	movlb	1	; select bank1
 10332  09D4  00A0               	movwf	??_calc_percentage^(0+128)
 10333  09D5  3F41               	moviw [1]fsr1
 10334  09D6  00A1               	movwf	(??_calc_percentage^(0+128)+1)
 10335  09D7  0820               	movf	??_calc_percentage^(0+128),w
 10336  09D8  00F0               	movwf	___xxtofl@val
 10337  09D9  0821               	movf	(??_calc_percentage+1)^(0+128),w
 10338  09DA  00F1               	movwf	___xxtofl@val+1
 10339  09DB  01F2               	clrf	___xxtofl@val+2
 10340  09DC  01F3               	clrf	___xxtofl@val+3
 10341  09DD  3000               	movlw	0
 10342  09DE  318A  22DF  3189   	fcall	___xxtofl
 10343  09E1  0873               	movf	?___xxtofl+3,w
 10344  09E2  0020               	movlb	0	; select bank0
 10345  09E3  00A7               	movwf	___fldiv@b+3
 10346  09E4  0872               	movf	?___xxtofl+2,w
 10347  09E5  00A6               	movwf	___fldiv@b+2
 10348  09E6  0871               	movf	?___xxtofl+1,w
 10349  09E7  00A5               	movwf	___fldiv@b+1
 10350  09E8  0870               	movf	?___xxtofl,w
 10351  09E9  00A4               	movwf	___fldiv@b
 10352  09EA  086C               	movf	calc_percentage@p,w
 10353  09EB  3E03               	addlw	3
 10354  09EC  0086               	movwf	6
 10355  09ED  0187               	clrf	7
 10356  09EE  3F40               	moviw [0]fsr1
 10357  09EF  0021               	movlb	1	; select bank1
 10358  09F0  00A2               	movwf	(??_calc_percentage+2)^(0+128)
 10359  09F1  3F41               	moviw [1]fsr1
 10360  09F2  00A3               	movwf	((??_calc_percentage+2)^(0+128)+1)
 10361  09F3  0822               	movf	(??_calc_percentage+2)^(0+128),w
 10362  09F4  00F0               	movwf	___xxtofl@val
 10363  09F5  0823               	movf	(??_calc_percentage+3)^(0+128),w
 10364  09F6  00F1               	movwf	___xxtofl@val+1
 10365  09F7  01F2               	clrf	___xxtofl@val+2
 10366  09F8  01F3               	clrf	___xxtofl@val+3
 10367  09F9  3000               	movlw	0
 10368  09FA  318A  22DF  3189   	fcall	___xxtofl
 10369  09FD  0873               	movf	?___xxtofl+3,w
 10370  09FE  0020               	movlb	0	; select bank0
 10371  09FF  00A3               	movwf	___fldiv@a+3
 10372  0A00  0872               	movf	?___xxtofl+2,w
 10373  0A01  00A2               	movwf	___fldiv@a+2
 10374  0A02  0871               	movf	?___xxtofl+1,w
 10375  0A03  00A1               	movwf	___fldiv@a+1
 10376  0A04  0870               	movf	?___xxtofl,w
 10377  0A05  00A0               	movwf	___fldiv@a
 10378  0A06  3181  21DA  3189   	fcall	___fldiv
 10379  0A09  0020               	movlb	0	; select bank0
 10380  0A0A  0823               	movf	?___fldiv+3,w
 10381  0A0B  00C1               	movwf	___flmul@a+3
 10382  0A0C  0822               	movf	?___fldiv+2,w
 10383  0A0D  00C0               	movwf	___flmul@a+2
 10384  0A0E  0821               	movf	?___fldiv+1,w
 10385  0A0F  00BF               	movwf	___flmul@a+1
 10386  0A10  0820               	movf	?___fldiv,w
 10387  0A11  00BE               	movwf	___flmul@a
 10388  0A12  3042               	movlw	66
 10389  0A13  00BD               	movwf	___flmul@b+3
 10390  0A14  30C8               	movlw	200
 10391  0A15  00BC               	movwf	___flmul@b+2
 10392  0A16  3000               	movlw	0
 10393  0A17  00BB               	movwf	___flmul@b+1
 10394  0A18  3000               	movlw	0
 10395  0A19  00BA               	movwf	___flmul@b
 10396  0A1A  3185  258A  3189   	fcall	___flmul
 10397  0A1D  0020               	movlb	0	; select bank0
 10398  0A1E  083D               	movf	?___flmul+3,w
 10399  0A1F  00D7               	movwf	___fltol@f1+3
 10400  0A20  083C               	movf	?___flmul+2,w
 10401  0A21  00D6               	movwf	___fltol@f1+2
 10402  0A22  083B               	movf	?___flmul+1,w
 10403  0A23  00D5               	movwf	___fltol@f1+1
 10404  0A24  083A               	movf	?___flmul,w
 10405  0A25  00D4               	movwf	___fltol@f1
 10406  0A26  3196  2603  3189   	fcall	___fltol
 10407  0A29  0020               	movlb	0	; select bank0
 10408  0A2A  0854               	movf	?___fltol,w
 10409  0A2B  0021               	movlb	1	; select bank1
 10410  0A2C  00A4               	movwf	(??_calc_percentage+4)^(0+128)
 10411  0A2D  0020               	movlb	0	; select bank0
 10412  0A2E  086C               	movf	calc_percentage@p,w
 10413  0A2F  3E05               	addlw	5
 10414  0A30  0086               	movwf	6
 10415  0A31  0187               	clrf	7
 10416  0A32  0021               	movlb	1	; select bank1
 10417  0A33  0824               	movf	(??_calc_percentage+4)^(0+128),w
 10418  0A34  0081               	movwf	1
 10419  0A35                     l363:
 10420  0A35  0008               	return
 10421  0A36                     __end_of_calc_percentage:
 10422                           
 10423                           	psect	text51
 10424  0854                     __ptext51:	
 10425 ;; *************** function _scale_convert_gram *****************
 10426 ;; Defined at:
 10427 ;;		line 75 in file "loadcell.c"
 10428 ;; Parameters:    Size  Location     Type
 10429 ;;  p               1    wreg     PTR struct .
 10430 ;;		 -> NULL(0), main@loadcell(12), 
 10431 ;; Auto vars:     Size  Location     Type
 10432 ;;  p               1   75[BANK0 ] PTR struct .
 10433 ;;		 -> NULL(0), main@loadcell(12), 
 10434 ;;  temp            4   71[BANK0 ] float 
 10435 ;; Return value:  Size  Location     Type
 10436 ;;                  1    wreg      void 
 10437 ;; Registers used:
 10438 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 10439 ;; Tracked objects:
 10440 ;;		On entry : 0/0
 10441 ;;		On exit  : 0/0
 10442 ;;		Unchanged: 0/0
 10443 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 10444 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10445 ;;      Locals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10446 ;;      Temps:          0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10447 ;;      Totals:         0      13       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10448 ;;Total ram usage:       13 bytes
 10449 ;; Hardware stack levels used: 1
 10450 ;; Hardware stack levels required when called: 1
 10451 ;; This function calls:
 10452 ;;		___fldiv
 10453 ;;		___fltol
 10454 ;;		___xxtofl
 10455 ;; This function is called by:
 10456 ;;		_calc_percentage
 10457 ;; This function uses a non-reentrant model
 10458 ;;
 10459                           
 10460                           
 10461                           ;psect for function _scale_convert_gram
 10462  0854                     _scale_convert_gram:
 10463                           
 10464                           ;incstack = 0
 10465                           ; Regs used in _scale_convert_gram: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
 10466                           ;scale_convert_gram@p stored from wreg
 10467  0854  0020               	movlb	0	; select bank0
 10468  0855  00EB               	movwf	scale_convert_gram@p
 10469  0856                     l3563:
 10470                           
 10471                           ;loadcell.c: 77:     if(p->weight_dat < p->weight_zero){
 10472  0856  086B               	movf	scale_convert_gram@p,w
 10473  0857  3E02               	addlw	2
 10474  0858  0086               	movwf	6
 10475  0859  0187               	clrf	7
 10476  085A  3F40               	moviw [0]fsr1
 10477  085B  00DF               	movwf	??_scale_convert_gram
 10478  085C  3F41               	moviw [1]fsr1
 10479  085D  00E0               	movwf	??_scale_convert_gram+1
 10480  085E  3F42               	moviw [2]fsr1
 10481  085F  00E1               	movwf	??_scale_convert_gram+2
 10482  0860  3F43               	moviw [3]fsr1
 10483  0861  00E2               	movwf	??_scale_convert_gram+3
 10484  0862  086B               	movf	scale_convert_gram@p,w
 10485  0863  3E06               	addlw	6
 10486  0864  0086               	movwf	6
 10487  0865  0187               	clrf	7
 10488  0866  3F40               	moviw [0]fsr1
 10489  0867  00E3               	movwf	??_scale_convert_gram+4
 10490  0868  3F41               	moviw [1]fsr1
 10491  0869  00E4               	movwf	??_scale_convert_gram+5
 10492  086A  3F42               	moviw [2]fsr1
 10493  086B  00E5               	movwf	??_scale_convert_gram+6
 10494  086C  3F43               	moviw [3]fsr1
 10495  086D  00E6               	movwf	??_scale_convert_gram+7
 10496  086E  0862               	movf	??_scale_convert_gram+3,w
 10497  086F  0266               	subwf	??_scale_convert_gram+7,w
 10498  0870  1D03               	skipz
 10499  0871  287C               	goto	u4275
 10500  0872  0861               	movf	??_scale_convert_gram+2,w
 10501  0873  0265               	subwf	??_scale_convert_gram+6,w
 10502  0874  1D03               	skipz
 10503  0875  287C               	goto	u4275
 10504  0876  0860               	movf	??_scale_convert_gram+1,w
 10505  0877  0264               	subwf	??_scale_convert_gram+5,w
 10506  0878  1D03               	skipz
 10507  0879  287C               	goto	u4275
 10508  087A  085F               	movf	??_scale_convert_gram,w
 10509  087B  0263               	subwf	??_scale_convert_gram+4,w
 10510  087C                     u4275:
 10511  087C  1803               	skipnc
 10512  087D  287F               	goto	u4271
 10513  087E  2880               	goto	u4270
 10514  087F                     u4271:
 10515  087F  2888               	goto	l3569
 10516  0880                     u4270:
 10517  0880                     l3565:
 10518                           
 10519                           ;loadcell.c: 78:         p->gram = 0;
 10520  0880  086B               	movf	scale_convert_gram@p,w
 10521  0881  3E0A               	addlw	10
 10522  0882  0086               	movwf	6
 10523  0883  0187               	clrf	7
 10524  0884  3000               	movlw	0
 10525  0885  3FC0               	movwi [0]fsr1
 10526  0886  3FC1               	movwi [1]fsr1
 10527  0887  28ED               	goto	l280
 10528  0888                     l3569:
 10529                           
 10530                           ;loadcell.c: 82:     float temp = p->weight_dat - p->weight_zero;
 10531  0888  086B               	movf	scale_convert_gram@p,w
 10532  0889  3E02               	addlw	2
 10533  088A  0086               	movwf	6
 10534  088B  0187               	clrf	7
 10535  088C  3F40               	moviw [0]fsr1
 10536  088D  00DF               	movwf	??_scale_convert_gram
 10537  088E  3F41               	moviw [1]fsr1
 10538  088F  00E0               	movwf	??_scale_convert_gram+1
 10539  0890  3F42               	moviw [2]fsr1
 10540  0891  00E1               	movwf	??_scale_convert_gram+2
 10541  0892  3F43               	moviw [3]fsr1
 10542  0893  00E2               	movwf	??_scale_convert_gram+3
 10543  0894  086B               	movf	scale_convert_gram@p,w
 10544  0895  3E06               	addlw	6
 10545  0896  0086               	movwf	6
 10546  0897  0187               	clrf	7
 10547  0898  3F40               	moviw [0]fsr1
 10548  0899  00E3               	movwf	??_scale_convert_gram+4
 10549  089A  3F41               	moviw [1]fsr1
 10550  089B  00E4               	movwf	??_scale_convert_gram+5
 10551  089C  3F42               	moviw [2]fsr1
 10552  089D  00E5               	movwf	??_scale_convert_gram+6
 10553  089E  3F43               	moviw [3]fsr1
 10554  089F  00E6               	movwf	??_scale_convert_gram+7
 10555  08A0  085F               	movf	??_scale_convert_gram,w
 10556  08A1  02E3               	subwf	??_scale_convert_gram+4,f
 10557  08A2  0860               	movf	??_scale_convert_gram+1,w
 10558  08A3  3BE4               	subwfb	??_scale_convert_gram+5,f
 10559  08A4  0861               	movf	??_scale_convert_gram+2,w
 10560  08A5  3BE5               	subwfb	??_scale_convert_gram+6,f
 10561  08A6  0862               	movf	??_scale_convert_gram+3,w
 10562  08A7  3BE6               	subwfb	??_scale_convert_gram+7,f
 10563  08A8  0866               	movf	??_scale_convert_gram+7,w
 10564  08A9  00F3               	movwf	___xxtofl@val+3
 10565  08AA  0865               	movf	??_scale_convert_gram+6,w
 10566  08AB  00F2               	movwf	___xxtofl@val+2
 10567  08AC  0864               	movf	??_scale_convert_gram+5,w
 10568  08AD  00F1               	movwf	___xxtofl@val+1
 10569  08AE  0863               	movf	??_scale_convert_gram+4,w
 10570  08AF  00F0               	movwf	___xxtofl@val
 10571  08B0  3000               	movlw	0
 10572  08B1  318A  22DF  3188   	fcall	___xxtofl
 10573  08B4  0873               	movf	?___xxtofl+3,w
 10574  08B5  0020               	movlb	0	; select bank0
 10575  08B6  00EA               	movwf	scale_convert_gram@temp+3
 10576  08B7  0872               	movf	?___xxtofl+2,w
 10577  08B8  00E9               	movwf	scale_convert_gram@temp+2
 10578  08B9  0871               	movf	?___xxtofl+1,w
 10579  08BA  00E8               	movwf	scale_convert_gram@temp+1
 10580  08BB  0870               	movf	?___xxtofl,w
 10581  08BC  00E7               	movwf	scale_convert_gram@temp
 10582  08BD                     l3571:
 10583                           
 10584                           ;loadcell.c: 83:     temp = temp / 493;
 10585  08BD  3043               	movlw	67
 10586  08BE  00A3               	movwf	___fldiv@a+3
 10587  08BF  30F6               	movlw	246
 10588  08C0  00A2               	movwf	___fldiv@a+2
 10589  08C1  3080               	movlw	128
 10590  08C2  00A1               	movwf	___fldiv@a+1
 10591  08C3  3000               	movlw	0
 10592  08C4  00A0               	movwf	___fldiv@a
 10593  08C5  086A               	movf	scale_convert_gram@temp+3,w
 10594  08C6  00A7               	movwf	___fldiv@b+3
 10595  08C7  0869               	movf	scale_convert_gram@temp+2,w
 10596  08C8  00A6               	movwf	___fldiv@b+2
 10597  08C9  0868               	movf	scale_convert_gram@temp+1,w
 10598  08CA  00A5               	movwf	___fldiv@b+1
 10599  08CB  0867               	movf	scale_convert_gram@temp,w
 10600  08CC  00A4               	movwf	___fldiv@b
 10601  08CD  3181  21DA  3188   	fcall	___fldiv
 10602  08D0  0020               	movlb	0	; select bank0
 10603  08D1  0823               	movf	?___fldiv+3,w
 10604  08D2  00EA               	movwf	scale_convert_gram@temp+3
 10605  08D3  0822               	movf	?___fldiv+2,w
 10606  08D4  00E9               	movwf	scale_convert_gram@temp+2
 10607  08D5  0821               	movf	?___fldiv+1,w
 10608  08D6  00E8               	movwf	scale_convert_gram@temp+1
 10609  08D7  0820               	movf	?___fldiv,w
 10610  08D8  00E7               	movwf	scale_convert_gram@temp
 10611  08D9                     l3573:
 10612                           
 10613                           ;loadcell.c: 84:     p->gram = (uint16_t)temp;
 10614  08D9  086A               	movf	scale_convert_gram@temp+3,w
 10615  08DA  00D7               	movwf	___fltol@f1+3
 10616  08DB  0869               	movf	scale_convert_gram@temp+2,w
 10617  08DC  00D6               	movwf	___fltol@f1+2
 10618  08DD  0868               	movf	scale_convert_gram@temp+1,w
 10619  08DE  00D5               	movwf	___fltol@f1+1
 10620  08DF  0867               	movf	scale_convert_gram@temp,w
 10621  08E0  00D4               	movwf	___fltol@f1
 10622  08E1  3196  2603  3188   	fcall	___fltol
 10623  08E4  0020               	movlb	0	; select bank0
 10624  08E5  086B               	movf	scale_convert_gram@p,w
 10625  08E6  3E0A               	addlw	10
 10626  08E7  0086               	movwf	6
 10627  08E8  0187               	clrf	7
 10628  08E9  0854               	movf	?___fltol,w
 10629  08EA  3FC0               	movwi [0]fsr1
 10630  08EB  0855               	movf	?___fltol+1,w
 10631  08EC  3FC1               	movwi [1]fsr1
 10632  08ED                     l280:
 10633  08ED  0008               	return
 10634  08EE                     __end_of_scale_convert_gram:
 10635                           
 10636                           	psect	text52
 10637  0ADF                     __ptext52:	
 10638 ;; *************** function ___xxtofl *****************
 10639 ;; Defined at:
 10640 ;;		line 10 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\xxtofl.c"
 10641 ;; Parameters:    Size  Location     Type
 10642 ;;  sign            1    wreg     unsigned char 
 10643 ;;  val             4    0[COMMON] long 
 10644 ;; Auto vars:     Size  Location     Type
 10645 ;;  sign            1    8[COMMON] unsigned char 
 10646 ;;  arg             4   10[COMMON] unsigned long 
 10647 ;;  exp             1    9[COMMON] unsigned char 
 10648 ;; Return value:  Size  Location     Type
 10649 ;;                  4    0[COMMON] unsigned char 
 10650 ;; Registers used:
 10651 ;;		wreg, status,2, status,0
 10652 ;; Tracked objects:
 10653 ;;		On entry : 0/0
 10654 ;;		On exit  : 0/0
 10655 ;;		Unchanged: 0/0
 10656 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 10657 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10658 ;;      Locals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10659 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10660 ;;      Totals:        14       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10661 ;;Total ram usage:       14 bytes
 10662 ;; Hardware stack levels used: 1
 10663 ;; This function calls:
 10664 ;;		Nothing
 10665 ;; This function is called by:
 10666 ;;		_scale_convert_gram
 10667 ;;		_calc_percentage
 10668 ;; This function uses a non-reentrant model
 10669 ;;
 10670                           
 10671                           
 10672                           ;psect for function ___xxtofl
 10673  0ADF                     ___xxtofl:
 10674                           
 10675                           ;incstack = 0
 10676                           ; Regs used in ___xxtofl: [wreg+status,2+status,0]
 10677                           ;___xxtofl@sign stored from wreg
 10678  0ADF  00F8               	movwf	___xxtofl@sign
 10679  0AE0                     l3413:
 10680  0AE0  0878               	movf	___xxtofl@sign,w
 10681  0AE1  1903               	btfsc	3,2
 10682  0AE2  2AE4               	goto	u4061
 10683  0AE3  2AE5               	goto	u4060
 10684  0AE4                     u4061:
 10685  0AE4  2AF9               	goto	l3419
 10686  0AE5                     u4060:
 10687  0AE5                     l3415:
 10688  0AE5  1FF3               	btfss	___xxtofl@val+3,7
 10689  0AE6  2AE8               	goto	u4071
 10690  0AE7  2AE9               	goto	u4070
 10691  0AE8                     u4071:
 10692  0AE8  2AF9               	goto	l3419
 10693  0AE9                     u4070:
 10694  0AE9                     l3417:
 10695  0AE9  0970               	comf	___xxtofl@val,w
 10696  0AEA  00FA               	movwf	___xxtofl@arg
 10697  0AEB  0971               	comf	___xxtofl@val+1,w
 10698  0AEC  00FB               	movwf	___xxtofl@arg+1
 10699  0AED  0972               	comf	___xxtofl@val+2,w
 10700  0AEE  00FC               	movwf	___xxtofl@arg+2
 10701  0AEF  0973               	comf	___xxtofl@val+3,w
 10702  0AF0  00FD               	movwf	___xxtofl@arg+3
 10703  0AF1  0AFA               	incf	___xxtofl@arg,f
 10704  0AF2  1903               	skipnz
 10705  0AF3  0AFB               	incf	___xxtofl@arg+1,f
 10706  0AF4  1903               	skipnz
 10707  0AF5  0AFC               	incf	___xxtofl@arg+2,f
 10708  0AF6  1903               	skipnz
 10709  0AF7  0AFD               	incf	___xxtofl@arg+3,f
 10710  0AF8  2B01               	goto	l960
 10711  0AF9                     l3419:
 10712  0AF9  0873               	movf	___xxtofl@val+3,w
 10713  0AFA  00FD               	movwf	___xxtofl@arg+3
 10714  0AFB  0872               	movf	___xxtofl@val+2,w
 10715  0AFC  00FC               	movwf	___xxtofl@arg+2
 10716  0AFD  0871               	movf	___xxtofl@val+1,w
 10717  0AFE  00FB               	movwf	___xxtofl@arg+1
 10718  0AFF  0870               	movf	___xxtofl@val,w
 10719  0B00  00FA               	movwf	___xxtofl@arg
 10720  0B01                     l960:
 10721  0B01  0873               	movf	___xxtofl@val+3,w
 10722  0B02  0472               	iorwf	___xxtofl@val+2,w
 10723  0B03  0471               	iorwf	___xxtofl@val+1,w
 10724  0B04  0470               	iorwf	___xxtofl@val,w
 10725  0B05  1D03               	skipz
 10726  0B06  2B08               	goto	u4081
 10727  0B07  2B09               	goto	u4080
 10728  0B08                     u4081:
 10729  0B08  2B12               	goto	l3425
 10730  0B09                     u4080:
 10731  0B09                     l3421:
 10732  0B09  3000               	movlw	0
 10733  0B0A  00F3               	movwf	?___xxtofl+3
 10734  0B0B  3000               	movlw	0
 10735  0B0C  00F2               	movwf	?___xxtofl+2
 10736  0B0D  3000               	movlw	0
 10737  0B0E  00F1               	movwf	?___xxtofl+1
 10738  0B0F  3000               	movlw	0
 10739  0B10  00F0               	movwf	?___xxtofl
 10740  0B11  2B8A               	goto	l962
 10741  0B12                     l3425:
 10742  0B12  3096               	movlw	150
 10743  0B13  00F4               	movwf	??___xxtofl
 10744  0B14  0874               	movf	??___xxtofl,w
 10745  0B15  00F9               	movwf	___xxtofl@exp
 10746  0B16  2B22               	goto	l3429
 10747  0B17                     l3427:
 10748  0B17  3001               	movlw	1
 10749  0B18  00F4               	movwf	??___xxtofl
 10750  0B19  0874               	movf	??___xxtofl,w
 10751  0B1A  07F9               	addwf	___xxtofl@exp,f
 10752  0B1B  3001               	movlw	1
 10753  0B1C                     u4095:
 10754  0B1C  36FD               	lsrf	___xxtofl@arg+3,f
 10755  0B1D  0CFC               	rrf	___xxtofl@arg+2,f
 10756  0B1E  0CFB               	rrf	___xxtofl@arg+1,f
 10757  0B1F  0CFA               	rrf	___xxtofl@arg,f
 10758  0B20  0B89               	decfsz	9,f
 10759  0B21  2B1C               	goto	u4095
 10760  0B22                     l3429:
 10761  0B22  30FE               	movlw	254
 10762  0B23  057D               	andwf	___xxtofl@arg+3,w
 10763  0B24  1D03               	btfss	3,2
 10764  0B25  2B27               	goto	u4101
 10765  0B26  2B28               	goto	u4100
 10766  0B27                     u4101:
 10767  0B27  2B17               	goto	l3427
 10768  0B28                     u4100:
 10769  0B28  2B3C               	goto	l966
 10770  0B29                     l3431:
 10771  0B29  3001               	movlw	1
 10772  0B2A  00F4               	movwf	??___xxtofl
 10773  0B2B  0874               	movf	??___xxtofl,w
 10774  0B2C  07F9               	addwf	___xxtofl@exp,f
 10775  0B2D                     l3433:
 10776  0B2D  3001               	movlw	1
 10777  0B2E  07FA               	addwf	___xxtofl@arg,f
 10778  0B2F  3000               	movlw	0
 10779  0B30  3DFB               	addwfc	___xxtofl@arg+1,f
 10780  0B31  3000               	movlw	0
 10781  0B32  3DFC               	addwfc	___xxtofl@arg+2,f
 10782  0B33  3000               	movlw	0
 10783  0B34  3DFD               	addwfc	___xxtofl@arg+3,f
 10784  0B35                     l3435:
 10785  0B35  3001               	movlw	1
 10786  0B36                     u4115:
 10787  0B36  36FD               	lsrf	___xxtofl@arg+3,f
 10788  0B37  0CFC               	rrf	___xxtofl@arg+2,f
 10789  0B38  0CFB               	rrf	___xxtofl@arg+1,f
 10790  0B39  0CFA               	rrf	___xxtofl@arg,f
 10791  0B3A  0B89               	decfsz	9,f
 10792  0B3B  2B36               	goto	u4115
 10793  0B3C                     l966:
 10794  0B3C  30FF               	movlw	255
 10795  0B3D  057D               	andwf	___xxtofl@arg+3,w
 10796  0B3E  1D03               	btfss	3,2
 10797  0B3F  2B41               	goto	u4121
 10798  0B40  2B42               	goto	u4120
 10799  0B41                     u4121:
 10800  0B41  2B29               	goto	l3431
 10801  0B42                     u4120:
 10802  0B42  2B4C               	goto	l3439
 10803  0B43                     l3437:
 10804  0B43  3001               	movlw	1
 10805  0B44  02F9               	subwf	___xxtofl@exp,f
 10806  0B45  3001               	movlw	1
 10807  0B46                     u4135:
 10808  0B46  35FA               	lslf	___xxtofl@arg,f
 10809  0B47  0DFB               	rlf	___xxtofl@arg+1,f
 10810  0B48  0DFC               	rlf	___xxtofl@arg+2,f
 10811  0B49  0DFD               	rlf	___xxtofl@arg+3,f
 10812  0B4A  0B89               	decfsz	9,f
 10813  0B4B  2B46               	goto	u4135
 10814  0B4C                     l3439:
 10815  0B4C  1BFC               	btfsc	___xxtofl@arg+2,7
 10816  0B4D  2B4F               	goto	u4141
 10817  0B4E  2B50               	goto	u4140
 10818  0B4F                     u4141:
 10819  0B4F  2B56               	goto	l973
 10820  0B50                     u4140:
 10821  0B50                     l3441:
 10822  0B50  3002               	movlw	2
 10823  0B51  0279               	subwf	___xxtofl@exp,w
 10824  0B52  1803               	skipnc
 10825  0B53  2B55               	goto	u4151
 10826  0B54  2B56               	goto	u4150
 10827  0B55                     u4151:
 10828  0B55  2B43               	goto	l3437
 10829  0B56                     u4150:
 10830  0B56                     l973:
 10831  0B56  1879               	btfsc	___xxtofl@exp,0
 10832  0B57  2B59               	goto	u4161
 10833  0B58  2B5A               	goto	u4160
 10834  0B59                     u4161:
 10835  0B59  2B62               	goto	l974
 10836  0B5A                     u4160:
 10837  0B5A                     l3443:
 10838  0B5A  30FF               	movlw	255
 10839  0B5B  05FA               	andwf	___xxtofl@arg,f
 10840  0B5C  30FF               	movlw	255
 10841  0B5D  05FB               	andwf	___xxtofl@arg+1,f
 10842  0B5E  307F               	movlw	127
 10843  0B5F  05FC               	andwf	___xxtofl@arg+2,f
 10844  0B60  30FF               	movlw	255
 10845  0B61  05FD               	andwf	___xxtofl@arg+3,f
 10846  0B62                     l974:
 10847  0B62  1003               	clrc
 10848  0B63  0CF9               	rrf	___xxtofl@exp,f
 10849  0B64                     l3445:
 10850  0B64  0879               	movf	___xxtofl@exp,w
 10851  0B65  00F4               	movwf	??___xxtofl
 10852  0B66  01F5               	clrf	??___xxtofl+1
 10853  0B67  01F6               	clrf	??___xxtofl+2
 10854  0B68  01F7               	clrf	??___xxtofl+3
 10855  0B69  3018               	movlw	24
 10856  0B6A                     u4175:
 10857  0B6A  35F4               	lslf	??___xxtofl,f
 10858  0B6B  0DF5               	rlf	??___xxtofl+1,f
 10859  0B6C  0DF6               	rlf	??___xxtofl+2,f
 10860  0B6D  0DF7               	rlf	??___xxtofl+3,f
 10861  0B6E                     u4170:
 10862  0B6E  0B89               	decfsz	9,f
 10863  0B6F  2B6A               	goto	u4175
 10864  0B70  0874               	movf	??___xxtofl,w
 10865  0B71  04FA               	iorwf	___xxtofl@arg,f
 10866  0B72  0875               	movf	??___xxtofl+1,w
 10867  0B73  04FB               	iorwf	___xxtofl@arg+1,f
 10868  0B74  0876               	movf	??___xxtofl+2,w
 10869  0B75  04FC               	iorwf	___xxtofl@arg+2,f
 10870  0B76  0877               	movf	??___xxtofl+3,w
 10871  0B77  04FD               	iorwf	___xxtofl@arg+3,f
 10872  0B78                     l3447:
 10873  0B78  0878               	movf	___xxtofl@sign,w
 10874  0B79  1903               	btfsc	3,2
 10875  0B7A  2B7C               	goto	u4181
 10876  0B7B  2B7D               	goto	u4180
 10877  0B7C                     u4181:
 10878  0B7C  2B82               	goto	l3453
 10879  0B7D                     u4180:
 10880  0B7D                     l3449:
 10881  0B7D  1FF3               	btfss	___xxtofl@val+3,7
 10882  0B7E  2B80               	goto	u4191
 10883  0B7F  2B81               	goto	u4190
 10884  0B80                     u4191:
 10885  0B80  2B82               	goto	l3453
 10886  0B81                     u4190:
 10887  0B81                     l3451:
 10888  0B81  17FD               	bsf	___xxtofl@arg+3,7
 10889  0B82                     l3453:
 10890  0B82  087D               	movf	___xxtofl@arg+3,w
 10891  0B83  00F3               	movwf	?___xxtofl+3
 10892  0B84  087C               	movf	___xxtofl@arg+2,w
 10893  0B85  00F2               	movwf	?___xxtofl+2
 10894  0B86  087B               	movf	___xxtofl@arg+1,w
 10895  0B87  00F1               	movwf	?___xxtofl+1
 10896  0B88  087A               	movf	___xxtofl@arg,w
 10897  0B89  00F0               	movwf	?___xxtofl
 10898  0B8A                     l962:
 10899  0B8A  0008               	return
 10900  0B8B                     __end_of___xxtofl:
 10901                           
 10902                           	psect	text53
 10903  1603                     __ptext53:	
 10904 ;; *************** function ___fltol *****************
 10905 ;; Defined at:
 10906 ;;		line 43 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\fltol.c"
 10907 ;; Parameters:    Size  Location     Type
 10908 ;;  f1              4   52[BANK0 ] unsigned char 
 10909 ;; Auto vars:     Size  Location     Type
 10910 ;;  exp1            1   62[BANK0 ] unsigned char 
 10911 ;;  sign1           1   61[BANK0 ] unsigned char 
 10912 ;; Return value:  Size  Location     Type
 10913 ;;                  4   52[BANK0 ] long 
 10914 ;; Registers used:
 10915 ;;		wreg, status,2, status,0
 10916 ;; Tracked objects:
 10917 ;;		On entry : 0/0
 10918 ;;		On exit  : 0/0
 10919 ;;		Unchanged: 0/0
 10920 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 10921 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10922 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10923 ;;      Temps:          0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10924 ;;      Totals:         0      11       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10925 ;;Total ram usage:       11 bytes
 10926 ;; Hardware stack levels used: 1
 10927 ;; This function calls:
 10928 ;;		Nothing
 10929 ;; This function is called by:
 10930 ;;		_scale_convert_gram
 10931 ;;		_calc_percentage
 10932 ;; This function uses a non-reentrant model
 10933 ;;
 10934                           
 10935                           
 10936                           ;psect for function ___fltol
 10937  1603                     ___fltol:
 10938  1603                     l3223:	
 10939                           ;incstack = 0
 10940                           ; Regs used in ___fltol: [wreg+status,2+status,0]
 10941                           
 10942  1603  1003               	clrc
 10943  1604  0020               	movlb	0	; select bank0
 10944  1605  0D56               	rlf	___fltol@f1+2,w
 10945  1606  0D57               	rlf	___fltol@f1+3,w
 10946  1607  00D8               	movwf	??___fltol
 10947  1608  0858               	movf	??___fltol,w
 10948  1609  00DE               	movwf	___fltol@exp1
 10949  160A  085E               	movf	___fltol@exp1,w
 10950  160B  1D03               	btfss	3,2
 10951  160C  2E0E               	goto	u3641
 10952  160D  2E0F               	goto	u3640
 10953  160E                     u3641:
 10954  160E  2E18               	goto	l3229
 10955  160F                     u3640:
 10956  160F                     l3225:
 10957  160F  3000               	movlw	0
 10958  1610  00D7               	movwf	?___fltol+3
 10959  1611  3000               	movlw	0
 10960  1612  00D6               	movwf	?___fltol+2
 10961  1613  3000               	movlw	0
 10962  1614  00D5               	movwf	?___fltol+1
 10963  1615  3000               	movlw	0
 10964  1616  00D4               	movwf	?___fltol
 10965  1617  2E77               	goto	l713
 10966  1618                     l3229:
 10967  1618  0854               	movf	___fltol@f1,w
 10968  1619  00D8               	movwf	??___fltol
 10969  161A  0855               	movf	___fltol@f1+1,w
 10970  161B  00D9               	movwf	??___fltol+1
 10971  161C  0856               	movf	___fltol@f1+2,w
 10972  161D  00DA               	movwf	??___fltol+2
 10973  161E  0857               	movf	___fltol@f1+3,w
 10974  161F  00DB               	movwf	??___fltol+3
 10975  1620  301F               	movlw	31
 10976  1621                     u3655:
 10977  1621  36DB               	lsrf	??___fltol+3,f
 10978  1622  0CDA               	rrf	??___fltol+2,f
 10979  1623  0CD9               	rrf	??___fltol+1,f
 10980  1624  0CD8               	rrf	??___fltol,f
 10981  1625                     u3650:
 10982  1625  0B89               	decfsz	9,f
 10983  1626  2E21               	goto	u3655
 10984  1627  0858               	movf	??___fltol,w
 10985  1628  00DC               	movwf	??___fltol+4
 10986  1629  085C               	movf	??___fltol+4,w
 10987  162A  00DD               	movwf	___fltol@sign1
 10988  162B                     l3231:
 10989  162B  17D6               	bsf	___fltol@f1+2,7
 10990  162C                     l3233:
 10991  162C  30FF               	movlw	255
 10992  162D  05D4               	andwf	___fltol@f1,f
 10993  162E  30FF               	movlw	255
 10994  162F  05D5               	andwf	___fltol@f1+1,f
 10995  1630  30FF               	movlw	255
 10996  1631  05D6               	andwf	___fltol@f1+2,f
 10997  1632  3000               	movlw	0
 10998  1633  05D7               	andwf	___fltol@f1+3,f
 10999  1634                     l3235:
 11000  1634  3096               	movlw	150
 11001  1635  02DE               	subwf	___fltol@exp1,f
 11002  1636                     l3237:
 11003  1636  1FDE               	btfss	___fltol@exp1,7
 11004  1637  2E39               	goto	u3661
 11005  1638  2E3A               	goto	u3660
 11006  1639                     u3661:
 11007  1639  2E52               	goto	l3247
 11008  163A                     u3660:
 11009  163A                     l3239:
 11010  163A  085E               	movf	___fltol@exp1,w
 11011  163B  3A80               	xorlw	128
 11012  163C  3E97               	addlw	151
 11013  163D  1803               	skipnc
 11014  163E  2E40               	goto	u3671
 11015  163F  2E41               	goto	u3670
 11016  1640                     u3671:
 11017  1640  2E42               	goto	l3245
 11018  1641                     u3670:
 11019  1641  2E0F               	goto	l3225
 11020  1642                     l3245:
 11021  1642  3001               	movlw	1
 11022  1643                     u3685:
 11023  1643  36D7               	lsrf	___fltol@f1+3,f
 11024  1644  0CD6               	rrf	___fltol@f1+2,f
 11025  1645  0CD5               	rrf	___fltol@f1+1,f
 11026  1646  0CD4               	rrf	___fltol@f1,f
 11027  1647  0B89               	decfsz	9,f
 11028  1648  2E43               	goto	u3685
 11029  1649  3001               	movlw	1
 11030  164A  00D8               	movwf	??___fltol
 11031  164B  0858               	movf	??___fltol,w
 11032  164C  07DE               	addwf	___fltol@exp1,f
 11033  164D  1D03               	btfss	3,2
 11034  164E  2E50               	goto	u3691
 11035  164F  2E51               	goto	u3690
 11036  1650                     u3691:
 11037  1650  2E42               	goto	l3245
 11038  1651                     u3690:
 11039  1651  2E67               	goto	l3255
 11040  1652                     l3247:
 11041  1652  3020               	movlw	32
 11042  1653  025E               	subwf	___fltol@exp1,w
 11043  1654  1C03               	skipc
 11044  1655  2E57               	goto	u3701
 11045  1656  2E58               	goto	u3700
 11046  1657                     u3701:
 11047  1657  2E62               	goto	l720
 11048  1658                     u3700:
 11049  1658  2E0F               	goto	l3225
 11050  1659                     l3253:
 11051  1659  3001               	movlw	1
 11052  165A                     u3715:
 11053  165A  35D4               	lslf	___fltol@f1,f
 11054  165B  0DD5               	rlf	___fltol@f1+1,f
 11055  165C  0DD6               	rlf	___fltol@f1+2,f
 11056  165D  0DD7               	rlf	___fltol@f1+3,f
 11057  165E  0B89               	decfsz	9,f
 11058  165F  2E5A               	goto	u3715
 11059  1660  3001               	movlw	1
 11060  1661  02DE               	subwf	___fltol@exp1,f
 11061  1662                     l720:
 11062  1662  085E               	movf	___fltol@exp1,w
 11063  1663  1D03               	btfss	3,2
 11064  1664  2E66               	goto	u3721
 11065  1665  2E67               	goto	u3720
 11066  1666                     u3721:
 11067  1666  2E59               	goto	l3253
 11068  1667                     u3720:
 11069  1667                     l3255:
 11070  1667  085D               	movf	___fltol@sign1,w
 11071  1668  1903               	btfsc	3,2
 11072  1669  2E6B               	goto	u3731
 11073  166A  2E6C               	goto	u3730
 11074  166B                     u3731:
 11075  166B  2E77               	goto	l723
 11076  166C                     u3730:
 11077  166C                     l3257:
 11078  166C  09D4               	comf	___fltol@f1,f
 11079  166D  09D5               	comf	___fltol@f1+1,f
 11080  166E  09D6               	comf	___fltol@f1+2,f
 11081  166F  09D7               	comf	___fltol@f1+3,f
 11082  1670  0AD4               	incf	___fltol@f1,f
 11083  1671  1903               	skipnz
 11084  1672  0AD5               	incf	___fltol@f1+1,f
 11085  1673  1903               	skipnz
 11086  1674  0AD6               	incf	___fltol@f1+2,f
 11087  1675  1903               	skipnz
 11088  1676  0AD7               	incf	___fltol@f1+3,f
 11089  1677                     l723:
 11090  1677                     l713:
 11091  1677  0008               	return
 11092  1678                     __end_of___fltol:
 11093                           
 11094                           	psect	text54
 11095  01DA                     __ptext54:	
 11096 ;; *************** function ___fldiv *****************
 11097 ;; Defined at:
 11098 ;;		line 8 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\sprcdiv.c"
 11099 ;; Parameters:    Size  Location     Type
 11100 ;;  a               4    0[BANK0 ] long 
 11101 ;;  b               4    4[BANK0 ] long 
 11102 ;; Auto vars:     Size  Location     Type
 11103 ;;  grs             4   20[BANK0 ] unsigned long 
 11104 ;;  rem             4   13[BANK0 ] unsigned long 
 11105 ;;  new_exp         2   18[BANK0 ] int 
 11106 ;;  aexp            1   25[BANK0 ] unsigned char 
 11107 ;;  bexp            1   24[BANK0 ] unsigned char 
 11108 ;;  sign            1   17[BANK0 ] unsigned char 
 11109 ;; Return value:  Size  Location     Type
 11110 ;;                  4    0[BANK0 ] unsigned char 
 11111 ;; Registers used:
 11112 ;;		wreg, status,2, status,0
 11113 ;; Tracked objects:
 11114 ;;		On entry : 0/0
 11115 ;;		On exit  : 0/0
 11116 ;;		Unchanged: 0/0
 11117 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 11118 ;;      Params:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11119 ;;      Locals:         0      13       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11120 ;;      Temps:          0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11121 ;;      Totals:         0      26       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11122 ;;Total ram usage:       26 bytes
 11123 ;; Hardware stack levels used: 1
 11124 ;; This function calls:
 11125 ;;		Nothing
 11126 ;; This function is called by:
 11127 ;;		_scale_convert_gram
 11128 ;;		_calc_percentage
 11129 ;; This function uses a non-reentrant model
 11130 ;;
 11131                           
 11132                           
 11133                           ;psect for function ___fldiv
 11134  01DA                     ___fldiv:
 11135  01DA                     l3259:	
 11136                           ;incstack = 0
 11137                           ; Regs used in ___fldiv: [wreg+status,2+status,0]
 11138                           
 11139  01DA  0020               	movlb	0	; select bank0
 11140  01DB  0827               	movf	___fldiv@b+3,w
 11141  01DC  3980               	andlw	128
 11142  01DD  00A8               	movwf	??___fldiv
 11143  01DE  0828               	movf	??___fldiv,w
 11144  01DF  00B1               	movwf	___fldiv@sign
 11145  01E0                     l3261:
 11146  01E0  3527               	lslf	___fldiv@b+3,w
 11147  01E1  00A8               	movwf	??___fldiv
 11148  01E2  0828               	movf	??___fldiv,w
 11149  01E3  00B8               	movwf	___fldiv@bexp
 11150  01E4                     l3263:
 11151  01E4  1FA6               	btfss	___fldiv@b+2,7
 11152  01E5  29E7               	goto	u3741
 11153  01E6  29E8               	goto	u3740
 11154  01E7                     u3741:
 11155  01E7  29E9               	goto	l3267
 11156  01E8                     u3740:
 11157  01E8                     l3265:
 11158  01E8  1438               	bsf	___fldiv@bexp,0
 11159  01E9                     l3267:
 11160  01E9  0838               	movf	___fldiv@bexp,w
 11161  01EA  1903               	btfsc	3,2
 11162  01EB  29ED               	goto	u3751
 11163  01EC  29EE               	goto	u3750
 11164  01ED                     u3751:
 11165  01ED  29FE               	goto	l3277
 11166  01EE                     u3750:
 11167  01EE                     l3269:
 11168  01EE  0A38               	incf	___fldiv@bexp,w
 11169  01EF  1D03               	btfss	3,2
 11170  01F0  29F2               	goto	u3761
 11171  01F1  29F3               	goto	u3760
 11172  01F2                     u3761:
 11173  01F2  29FB               	goto	l3273
 11174  01F3                     u3760:
 11175  01F3                     l3271:
 11176  01F3  3000               	movlw	0
 11177  01F4  00A7               	movwf	___fldiv@b+3
 11178  01F5  3000               	movlw	0
 11179  01F6  00A6               	movwf	___fldiv@b+2
 11180  01F7  3000               	movlw	0
 11181  01F8  00A5               	movwf	___fldiv@b+1
 11182  01F9  3000               	movlw	0
 11183  01FA  00A4               	movwf	___fldiv@b
 11184  01FB                     l3273:
 11185  01FB  17A6               	bsf	___fldiv@b+2,7
 11186  01FC                     l3275:
 11187  01FC  01A7               	clrf	___fldiv@b+3
 11188  01FD  2A06               	goto	l3279
 11189  01FE                     l3277:
 11190  01FE  3000               	movlw	0
 11191  01FF  00A7               	movwf	___fldiv@b+3
 11192  0200  3000               	movlw	0
 11193  0201  00A6               	movwf	___fldiv@b+2
 11194  0202  3000               	movlw	0
 11195  0203  00A5               	movwf	___fldiv@b+1
 11196  0204  3000               	movlw	0
 11197  0205  00A4               	movwf	___fldiv@b
 11198  0206                     l3279:
 11199  0206  0823               	movf	___fldiv@a+3,w
 11200  0207  3980               	andlw	128
 11201  0208  00A8               	movwf	??___fldiv
 11202  0209  0828               	movf	??___fldiv,w
 11203  020A  06B1               	xorwf	___fldiv@sign,f
 11204  020B                     l3281:
 11205  020B  3523               	lslf	___fldiv@a+3,w
 11206  020C  00A8               	movwf	??___fldiv
 11207  020D  0828               	movf	??___fldiv,w
 11208  020E  00B9               	movwf	___fldiv@aexp
 11209  020F                     l3283:
 11210  020F  1FA2               	btfss	___fldiv@a+2,7
 11211  0210  2A12               	goto	u3771
 11212  0211  2A13               	goto	u3770
 11213  0212                     u3771:
 11214  0212  2A14               	goto	l3287
 11215  0213                     u3770:
 11216  0213                     l3285:
 11217  0213  1439               	bsf	___fldiv@aexp,0
 11218  0214                     l3287:
 11219  0214  0839               	movf	___fldiv@aexp,w
 11220  0215  1903               	btfsc	3,2
 11221  0216  2A18               	goto	u3781
 11222  0217  2A19               	goto	u3780
 11223  0218                     u3781:
 11224  0218  2A29               	goto	l3297
 11225  0219                     u3780:
 11226  0219                     l3289:
 11227  0219  0A39               	incf	___fldiv@aexp,w
 11228  021A  1D03               	btfss	3,2
 11229  021B  2A1D               	goto	u3791
 11230  021C  2A1E               	goto	u3790
 11231  021D                     u3791:
 11232  021D  2A26               	goto	l3293
 11233  021E                     u3790:
 11234  021E                     l3291:
 11235  021E  3000               	movlw	0
 11236  021F  00A3               	movwf	___fldiv@a+3
 11237  0220  3000               	movlw	0
 11238  0221  00A2               	movwf	___fldiv@a+2
 11239  0222  3000               	movlw	0
 11240  0223  00A1               	movwf	___fldiv@a+1
 11241  0224  3000               	movlw	0
 11242  0225  00A0               	movwf	___fldiv@a
 11243  0226                     l3293:
 11244  0226  17A2               	bsf	___fldiv@a+2,7
 11245  0227                     l3295:
 11246  0227  01A3               	clrf	___fldiv@a+3
 11247  0228  2A31               	goto	l876
 11248  0229                     l3297:
 11249  0229  3000               	movlw	0
 11250  022A  00A3               	movwf	___fldiv@a+3
 11251  022B  3000               	movlw	0
 11252  022C  00A2               	movwf	___fldiv@a+2
 11253  022D  3000               	movlw	0
 11254  022E  00A1               	movwf	___fldiv@a+1
 11255  022F  3000               	movlw	0
 11256  0230  00A0               	movwf	___fldiv@a
 11257  0231                     l876:
 11258  0231  0823               	movf	___fldiv@a+3,w
 11259  0232  0422               	iorwf	___fldiv@a+2,w
 11260  0233  0421               	iorwf	___fldiv@a+1,w
 11261  0234  0420               	iorwf	___fldiv@a,w
 11262  0235  1D03               	skipz
 11263  0236  2A38               	goto	u3801
 11264  0237  2A39               	goto	u3800
 11265  0238                     u3801:
 11266  0238  2A52               	goto	l3307
 11267  0239                     u3800:
 11268  0239                     l3299:
 11269  0239  3000               	movlw	0
 11270  023A  00A7               	movwf	___fldiv@b+3
 11271  023B  3000               	movlw	0
 11272  023C  00A6               	movwf	___fldiv@b+2
 11273  023D  3000               	movlw	0
 11274  023E  00A5               	movwf	___fldiv@b+1
 11275  023F  3000               	movlw	0
 11276  0240  00A4               	movwf	___fldiv@b
 11277  0241  3080               	movlw	128
 11278  0242  04A6               	iorwf	___fldiv@b+2,f
 11279  0243  307F               	movlw	127
 11280  0244  04A7               	iorwf	___fldiv@b+3,f
 11281  0245                     l3301:
 11282  0245  0831               	movf	___fldiv@sign,w
 11283  0246  00A8               	movwf	??___fldiv
 11284  0247  0828               	movf	??___fldiv,w
 11285  0248  04A7               	iorwf	___fldiv@b+3,f
 11286  0249                     l3303:
 11287  0249  0827               	movf	___fldiv@b+3,w
 11288  024A  00A3               	movwf	?___fldiv+3
 11289  024B  0826               	movf	___fldiv@b+2,w
 11290  024C  00A2               	movwf	?___fldiv+2
 11291  024D  0825               	movf	___fldiv@b+1,w
 11292  024E  00A1               	movwf	?___fldiv+1
 11293  024F  0824               	movf	___fldiv@b,w
 11294  0250  00A0               	movwf	?___fldiv
 11295  0251  2B8D               	goto	l878
 11296  0252                     l3307:
 11297  0252  0838               	movf	___fldiv@bexp,w
 11298  0253  1D03               	btfss	3,2
 11299  0254  2A56               	goto	u3811
 11300  0255  2A57               	goto	u3810
 11301  0256                     u3811:
 11302  0256  2A60               	goto	l3313
 11303  0257                     u3810:
 11304  0257                     l3309:
 11305  0257  3000               	movlw	0
 11306  0258  00A3               	movwf	?___fldiv+3
 11307  0259  3000               	movlw	0
 11308  025A  00A2               	movwf	?___fldiv+2
 11309  025B  3000               	movlw	0
 11310  025C  00A1               	movwf	?___fldiv+1
 11311  025D  3000               	movlw	0
 11312  025E  00A0               	movwf	?___fldiv
 11313  025F  2B8D               	goto	l878
 11314  0260                     l3313:
 11315  0260  0838               	movf	___fldiv@bexp,w
 11316  0261  00A8               	movwf	??___fldiv
 11317  0262  01A9               	clrf	??___fldiv+1
 11318  0263  0829               	movf	??___fldiv+1,w
 11319  0264  00AB               	movwf	??___fldiv+3
 11320  0265  0839               	movf	___fldiv@aexp,w
 11321  0266  0228               	subwf	??___fldiv,w
 11322  0267  00AA               	movwf	??___fldiv+2
 11323  0268  1C03               	skipc
 11324  0269  03AB               	decf	??___fldiv+3,f
 11325  026A  082A               	movf	??___fldiv+2,w
 11326  026B  3E7F               	addlw	127
 11327  026C  00B2               	movwf	___fldiv@new_exp
 11328  026D  3000               	movlw	0
 11329  026E  3D2B               	addwfc	??___fldiv+3,w
 11330  026F  00B3               	movwf	___fldiv@new_exp+1
 11331  0270                     l3315:
 11332  0270  0827               	movf	___fldiv@b+3,w
 11333  0271  00B0               	movwf	___fldiv@rem+3
 11334  0272  0826               	movf	___fldiv@b+2,w
 11335  0273  00AF               	movwf	___fldiv@rem+2
 11336  0274  0825               	movf	___fldiv@b+1,w
 11337  0275  00AE               	movwf	___fldiv@rem+1
 11338  0276  0824               	movf	___fldiv@b,w
 11339  0277  00AD               	movwf	___fldiv@rem
 11340  0278                     l3317:
 11341  0278  3000               	movlw	0
 11342  0279  00A7               	movwf	___fldiv@b+3
 11343  027A  3000               	movlw	0
 11344  027B  00A6               	movwf	___fldiv@b+2
 11345  027C  3000               	movlw	0
 11346  027D  00A5               	movwf	___fldiv@b+1
 11347  027E  3000               	movlw	0
 11348  027F  00A4               	movwf	___fldiv@b
 11349  0280                     l3319:
 11350  0280  3000               	movlw	0
 11351  0281  00B7               	movwf	___fldiv@grs+3
 11352  0282  3000               	movlw	0
 11353  0283  00B6               	movwf	___fldiv@grs+2
 11354  0284  3000               	movlw	0
 11355  0285  00B5               	movwf	___fldiv@grs+1
 11356  0286  3000               	movlw	0
 11357  0287  00B4               	movwf	___fldiv@grs
 11358  0288                     l3321:
 11359  0288  01B9               	clrf	___fldiv@aexp
 11360  0289  2AC8               	goto	l3341
 11361  028A                     l3323:
 11362  028A  0839               	movf	___fldiv@aexp,w
 11363  028B  1903               	btfsc	3,2
 11364  028C  2A8E               	goto	u3821
 11365  028D  2A8F               	goto	u3820
 11366  028E                     u3821:
 11367  028E  2AA9               	goto	l3333
 11368  028F                     u3820:
 11369  028F                     l3325:
 11370  028F  3001               	movlw	1
 11371  0290                     u3835:
 11372  0290  35AD               	lslf	___fldiv@rem,f
 11373  0291  0DAE               	rlf	___fldiv@rem+1,f
 11374  0292  0DAF               	rlf	___fldiv@rem+2,f
 11375  0293  0DB0               	rlf	___fldiv@rem+3,f
 11376  0294  0B89               	decfsz	9,f
 11377  0295  2A90               	goto	u3835
 11378  0296  3001               	movlw	1
 11379  0297                     u3845:
 11380  0297  35A4               	lslf	___fldiv@b,f
 11381  0298  0DA5               	rlf	___fldiv@b+1,f
 11382  0299  0DA6               	rlf	___fldiv@b+2,f
 11383  029A  0DA7               	rlf	___fldiv@b+3,f
 11384  029B  0B89               	decfsz	9,f
 11385  029C  2A97               	goto	u3845
 11386  029D                     l3327:
 11387  029D  1FB7               	btfss	___fldiv@grs+3,7
 11388  029E  2AA0               	goto	u3851
 11389  029F  2AA1               	goto	u3850
 11390  02A0                     u3851:
 11391  02A0  2AA2               	goto	l3331
 11392  02A1                     u3850:
 11393  02A1                     l3329:
 11394  02A1  1424               	bsf	___fldiv@b,0
 11395  02A2                     l3331:
 11396  02A2  3001               	movlw	1
 11397  02A3                     u3865:
 11398  02A3  35B4               	lslf	___fldiv@grs,f
 11399  02A4  0DB5               	rlf	___fldiv@grs+1,f
 11400  02A5  0DB6               	rlf	___fldiv@grs+2,f
 11401  02A6  0DB7               	rlf	___fldiv@grs+3,f
 11402  02A7  0B89               	decfsz	9,f
 11403  02A8  2AA3               	goto	u3865
 11404  02A9                     l3333:
 11405  02A9  0823               	movf	___fldiv@a+3,w
 11406  02AA  0230               	subwf	___fldiv@rem+3,w
 11407  02AB  1D03               	skipz
 11408  02AC  2AB7               	goto	u3875
 11409  02AD  0822               	movf	___fldiv@a+2,w
 11410  02AE  022F               	subwf	___fldiv@rem+2,w
 11411  02AF  1D03               	skipz
 11412  02B0  2AB7               	goto	u3875
 11413  02B1  0821               	movf	___fldiv@a+1,w
 11414  02B2  022E               	subwf	___fldiv@rem+1,w
 11415  02B3  1D03               	skipz
 11416  02B4  2AB7               	goto	u3875
 11417  02B5  0820               	movf	___fldiv@a,w
 11418  02B6  022D               	subwf	___fldiv@rem,w
 11419  02B7                     u3875:
 11420  02B7  1C03               	skipc
 11421  02B8  2ABA               	goto	u3871
 11422  02B9  2ABB               	goto	u3870
 11423  02BA                     u3871:
 11424  02BA  2AC4               	goto	l3339
 11425  02BB                     u3870:
 11426  02BB                     l3335:
 11427  02BB  1737               	bsf	___fldiv@grs+3,6
 11428  02BC                     l3337:
 11429  02BC  0820               	movf	___fldiv@a,w
 11430  02BD  02AD               	subwf	___fldiv@rem,f
 11431  02BE  0821               	movf	___fldiv@a+1,w
 11432  02BF  3BAE               	subwfb	___fldiv@rem+1,f
 11433  02C0  0822               	movf	___fldiv@a+2,w
 11434  02C1  3BAF               	subwfb	___fldiv@rem+2,f
 11435  02C2  0823               	movf	___fldiv@a+3,w
 11436  02C3  3BB0               	subwfb	___fldiv@rem+3,f
 11437  02C4                     l3339:
 11438  02C4  3001               	movlw	1
 11439  02C5  00A8               	movwf	??___fldiv
 11440  02C6  0828               	movf	??___fldiv,w
 11441  02C7  07B9               	addwf	___fldiv@aexp,f
 11442  02C8                     l3341:
 11443  02C8  301A               	movlw	26
 11444  02C9  0239               	subwf	___fldiv@aexp,w
 11445  02CA  1C03               	skipc
 11446  02CB  2ACD               	goto	u3881
 11447  02CC  2ACE               	goto	u3880
 11448  02CD                     u3881:
 11449  02CD  2A8A               	goto	l3323
 11450  02CE                     u3880:
 11451  02CE                     l3343:
 11452  02CE  0830               	movf	___fldiv@rem+3,w
 11453  02CF  042F               	iorwf	___fldiv@rem+2,w
 11454  02D0  042E               	iorwf	___fldiv@rem+1,w
 11455  02D1  042D               	iorwf	___fldiv@rem,w
 11456  02D2  1903               	skipnz
 11457  02D3  2AD5               	goto	u3891
 11458  02D4  2AD6               	goto	u3890
 11459  02D5                     u3891:
 11460  02D5  2AEF               	goto	l3357
 11461  02D6                     u3890:
 11462  02D6                     l3345:
 11463  02D6  1434               	bsf	___fldiv@grs,0
 11464  02D7  2AEF               	goto	l3357
 11465  02D8                     l3347:
 11466  02D8  3001               	movlw	1
 11467  02D9                     u3905:
 11468  02D9  35A4               	lslf	___fldiv@b,f
 11469  02DA  0DA5               	rlf	___fldiv@b+1,f
 11470  02DB  0DA6               	rlf	___fldiv@b+2,f
 11471  02DC  0DA7               	rlf	___fldiv@b+3,f
 11472  02DD  0B89               	decfsz	9,f
 11473  02DE  2AD9               	goto	u3905
 11474  02DF                     l3349:
 11475  02DF  1FB7               	btfss	___fldiv@grs+3,7
 11476  02E0  2AE2               	goto	u3911
 11477  02E1  2AE3               	goto	u3910
 11478  02E2                     u3911:
 11479  02E2  2AE4               	goto	l3353
 11480  02E3                     u3910:
 11481  02E3                     l3351:
 11482  02E3  1424               	bsf	___fldiv@b,0
 11483  02E4                     l3353:
 11484  02E4  3001               	movlw	1
 11485  02E5                     u3925:
 11486  02E5  35B4               	lslf	___fldiv@grs,f
 11487  02E6  0DB5               	rlf	___fldiv@grs+1,f
 11488  02E7  0DB6               	rlf	___fldiv@grs+2,f
 11489  02E8  0DB7               	rlf	___fldiv@grs+3,f
 11490  02E9  0B89               	decfsz	9,f
 11491  02EA  2AE5               	goto	u3925
 11492  02EB                     l3355:
 11493  02EB  30FF               	movlw	255
 11494  02EC  07B2               	addwf	___fldiv@new_exp,f
 11495  02ED  30FF               	movlw	255
 11496  02EE  3DB3               	addwfc	___fldiv@new_exp+1,f
 11497  02EF                     l3357:
 11498  02EF  1FA6               	btfss	___fldiv@b+2,7
 11499  02F0  2AF2               	goto	u3931
 11500  02F1  2AF3               	goto	u3930
 11501  02F2                     u3931:
 11502  02F2  2AD8               	goto	l3347
 11503  02F3                     u3930:
 11504  02F3                     l3359:
 11505  02F3  01B9               	clrf	___fldiv@aexp
 11506  02F4                     l3361:
 11507  02F4  1FB7               	btfss	___fldiv@grs+3,7
 11508  02F5  2AF7               	goto	u3941
 11509  02F6  2AF8               	goto	u3940
 11510  02F7                     u3941:
 11511  02F7  2B14               	goto	l3369
 11512  02F8                     u3940:
 11513  02F8                     l3363:
 11514  02F8  30FF               	movlw	255
 11515  02F9  0534               	andwf	___fldiv@grs,w
 11516  02FA  00A8               	movwf	??___fldiv
 11517  02FB  30FF               	movlw	255
 11518  02FC  0535               	andwf	___fldiv@grs+1,w
 11519  02FD  00A9               	movwf	??___fldiv+1
 11520  02FE  30FF               	movlw	255
 11521  02FF  0536               	andwf	___fldiv@grs+2,w
 11522  0300  00AA               	movwf	??___fldiv+2
 11523  0301  307F               	movlw	127
 11524  0302  0537               	andwf	___fldiv@grs+3,w
 11525  0303  00AB               	movwf	??___fldiv+3
 11526  0304  082B               	movf	??___fldiv+3,w
 11527  0305  042A               	iorwf	??___fldiv+2,w
 11528  0306  0429               	iorwf	??___fldiv+1,w
 11529  0307  0428               	iorwf	??___fldiv,w
 11530  0308  1903               	skipnz
 11531  0309  2B0B               	goto	u3951
 11532  030A  2B0C               	goto	u3950
 11533  030B                     u3951:
 11534  030B  2B0F               	goto	l892
 11535  030C                     u3950:
 11536  030C                     l3365:
 11537  030C  01B9               	clrf	___fldiv@aexp
 11538  030D  0AB9               	incf	___fldiv@aexp,f
 11539  030E  2B14               	goto	l3369
 11540  030F                     l892:
 11541  030F  1C24               	btfss	___fldiv@b,0
 11542  0310  2B12               	goto	u3961
 11543  0311  2B13               	goto	u3960
 11544  0312                     u3961:
 11545  0312  2B14               	goto	l3369
 11546  0313                     u3960:
 11547  0313  2B0C               	goto	l3365
 11548  0314                     l3369:
 11549  0314  0839               	movf	___fldiv@aexp,w
 11550  0315  1903               	btfsc	3,2
 11551  0316  2B18               	goto	u3971
 11552  0317  2B19               	goto	u3970
 11553  0318                     u3971:
 11554  0318  2B41               	goto	l3379
 11555  0319                     u3970:
 11556  0319                     l3371:
 11557  0319  3001               	movlw	1
 11558  031A  07A4               	addwf	___fldiv@b,f
 11559  031B  3000               	movlw	0
 11560  031C  3DA5               	addwfc	___fldiv@b+1,f
 11561  031D  3000               	movlw	0
 11562  031E  3DA6               	addwfc	___fldiv@b+2,f
 11563  031F  3000               	movlw	0
 11564  0320  3DA7               	addwfc	___fldiv@b+3,f
 11565  0321                     l3373:
 11566  0321  1C27               	btfss	___fldiv@b+3,0
 11567  0322  2B24               	goto	u3981
 11568  0323  2B25               	goto	u3980
 11569  0324                     u3981:
 11570  0324  2B41               	goto	l3379
 11571  0325                     u3980:
 11572  0325                     l3375:
 11573  0325  0824               	movf	___fldiv@b,w
 11574  0326  00A8               	movwf	??___fldiv
 11575  0327  0825               	movf	___fldiv@b+1,w
 11576  0328  00A9               	movwf	??___fldiv+1
 11577  0329  0826               	movf	___fldiv@b+2,w
 11578  032A  00AA               	movwf	??___fldiv+2
 11579  032B  0827               	movf	___fldiv@b+3,w
 11580  032C  00AB               	movwf	??___fldiv+3
 11581  032D  3001               	movlw	1
 11582  032E  00AC               	movwf	??___fldiv+4
 11583  032F                     u3995:
 11584  032F  37AB               	asrf	??___fldiv+3,f
 11585  0330  0CAA               	rrf	??___fldiv+2,f
 11586  0331  0CA9               	rrf	??___fldiv+1,f
 11587  0332  0CA8               	rrf	??___fldiv,f
 11588  0333                     u3990:
 11589  0333  0BAC               	decfsz	??___fldiv+4,f
 11590  0334  2B2F               	goto	u3995
 11591  0335  082B               	movf	??___fldiv+3,w
 11592  0336  00A7               	movwf	___fldiv@b+3
 11593  0337  082A               	movf	??___fldiv+2,w
 11594  0338  00A6               	movwf	___fldiv@b+2
 11595  0339  0829               	movf	??___fldiv+1,w
 11596  033A  00A5               	movwf	___fldiv@b+1
 11597  033B  0828               	movf	??___fldiv,w
 11598  033C  00A4               	movwf	___fldiv@b
 11599  033D                     l3377:
 11600  033D  3001               	movlw	1
 11601  033E  07B2               	addwf	___fldiv@new_exp,f
 11602  033F  3000               	movlw	0
 11603  0340  3DB3               	addwfc	___fldiv@new_exp+1,f
 11604  0341                     l3379:
 11605  0341  0833               	movf	___fldiv@new_exp+1,w
 11606  0342  3A80               	xorlw	128
 11607  0343  00A8               	movwf	??___fldiv
 11608  0344  3080               	movlw	128
 11609  0345  0228               	subwf	??___fldiv,w
 11610  0346  1D03               	skipz
 11611  0347  2B4A               	goto	u4005
 11612  0348  30FF               	movlw	255
 11613  0349  0232               	subwf	___fldiv@new_exp,w
 11614  034A                     u4005:
 11615  034A  1C03               	skipc
 11616  034B  2B4D               	goto	u4001
 11617  034C  2B4E               	goto	u4000
 11618  034D                     u4001:
 11619  034D  2B5B               	goto	l897
 11620  034E                     u4000:
 11621  034E                     l3381:
 11622  034E  30FF               	movlw	255
 11623  034F  0020               	movlb	0	; select bank0
 11624  0350  00B2               	movwf	___fldiv@new_exp
 11625  0351  3000               	movlw	0
 11626  0352  00B3               	movwf	___fldiv@new_exp+1
 11627  0353  3000               	movlw	0
 11628  0354  00A7               	movwf	___fldiv@b+3
 11629  0355  3000               	movlw	0
 11630  0356  00A6               	movwf	___fldiv@b+2
 11631  0357  3000               	movlw	0
 11632  0358  00A5               	movwf	___fldiv@b+1
 11633  0359  3000               	movlw	0
 11634  035A  00A4               	movwf	___fldiv@b
 11635  035B                     l897:
 11636  035B  0020               	movlb	0	; select bank0
 11637  035C  0833               	movf	___fldiv@new_exp+1,w
 11638  035D  3A80               	xorlw	128
 11639  035E  00A8               	movwf	??___fldiv
 11640  035F  3080               	movlw	128
 11641  0360  0228               	subwf	??___fldiv,w
 11642  0361  1D03               	skipz
 11643  0362  2B65               	goto	u4015
 11644  0363  3001               	movlw	1
 11645  0364  0232               	subwf	___fldiv@new_exp,w
 11646  0365                     u4015:
 11647  0365  1803               	skipnc
 11648  0366  2B68               	goto	u4011
 11649  0367  2B69               	goto	u4010
 11650  0368                     u4011:
 11651  0368  2B75               	goto	l898
 11652  0369                     u4010:
 11653  0369                     l3383:
 11654  0369  0020               	movlb	0	; select bank0
 11655  036A  01B2               	clrf	___fldiv@new_exp
 11656  036B  01B3               	clrf	___fldiv@new_exp+1
 11657  036C                     l3385:
 11658  036C  3000               	movlw	0
 11659  036D  00A7               	movwf	___fldiv@b+3
 11660  036E  3000               	movlw	0
 11661  036F  00A6               	movwf	___fldiv@b+2
 11662  0370  3000               	movlw	0
 11663  0371  00A5               	movwf	___fldiv@b+1
 11664  0372  3000               	movlw	0
 11665  0373  00A4               	movwf	___fldiv@b
 11666  0374                     l3387:
 11667  0374  01B1               	clrf	___fldiv@sign
 11668  0375                     l898:
 11669  0375  0020               	movlb	0	; select bank0
 11670  0376  0832               	movf	___fldiv@new_exp,w
 11671  0377  00A8               	movwf	??___fldiv
 11672  0378  0828               	movf	??___fldiv,w
 11673  0379  00B8               	movwf	___fldiv@bexp
 11674  037A                     l3389:
 11675  037A  1C38               	btfss	___fldiv@bexp,0
 11676  037B  2B7D               	goto	u4021
 11677  037C  2B7E               	goto	u4020
 11678  037D                     u4021:
 11679  037D  2B80               	goto	l3393
 11680  037E                     u4020:
 11681  037E                     l3391:
 11682  037E  17A6               	bsf	___fldiv@b+2,7
 11683  037F  2B84               	goto	l900
 11684  0380                     l3393:
 11685  0380  307F               	movlw	127
 11686  0381  00A8               	movwf	??___fldiv
 11687  0382  0828               	movf	??___fldiv,w
 11688  0383  05A6               	andwf	___fldiv@b+2,f
 11689  0384                     l900:
 11690  0384  3638               	lsrf	___fldiv@bexp,w
 11691  0385  00A8               	movwf	??___fldiv
 11692  0386  0828               	movf	??___fldiv,w
 11693  0387  00A7               	movwf	___fldiv@b+3
 11694  0388  0831               	movf	___fldiv@sign,w
 11695  0389  00A8               	movwf	??___fldiv
 11696  038A  0828               	movf	??___fldiv,w
 11697  038B  04A7               	iorwf	___fldiv@b+3,f
 11698  038C  2A49               	goto	l3303
 11699  038D                     l878:
 11700  038D  0008               	return
 11701  038E                     __end_of___fldiv:
 11702                           
 11703                           	psect	text55
 11704  0C45                     __ptext55:	
 11705 ;; *************** function _get_scale_val *****************
 11706 ;; Defined at:
 11707 ;;		line 34 in file "loadcell.c"
 11708 ;; Parameters:    Size  Location     Type
 11709 ;;  p               1    wreg     PTR struct .
 11710 ;;		 -> NULL(0), main@loadcell(12), 
 11711 ;;  scale_avg_co    1    0[BANK0 ] unsigned char 
 11712 ;; Auto vars:     Size  Location     Type
 11713 ;;  p               1   18[BANK0 ] PTR struct .
 11714 ;;		 -> NULL(0), main@loadcell(12), 
 11715 ;;  i               1   17[BANK0 ] unsigned char 
 11716 ;;  j               1   12[BANK0 ] unsigned char 
 11717 ;;  weight_count    4   13[BANK0 ] unsigned long 
 11718 ;;  weight_add      4    8[BANK0 ] unsigned long 
 11719 ;; Return value:  Size  Location     Type
 11720 ;;                  4    0[BANK0 ] unsigned long 
 11721 ;; Registers used:
 11722 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 11723 ;; Tracked objects:
 11724 ;;		On entry : 0/0
 11725 ;;		On exit  : 0/0
 11726 ;;		Unchanged: 0/0
 11727 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 11728 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11729 ;;      Locals:         0      11       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11730 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11731 ;;      Totals:         0      19       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11732 ;;Total ram usage:       19 bytes
 11733 ;; Hardware stack levels used: 1
 11734 ;; Hardware stack levels required when called: 1
 11735 ;; This function calls:
 11736 ;;		___lldiv
 11737 ;;		_get_CELL_DAT_VAL
 11738 ;;		_set_CELL_CLK_HIGH
 11739 ;;		_set_CELL_CLK_LOW
 11740 ;; This function is called by:
 11741 ;;		_initialize
 11742 ;;		_calc_percentage
 11743 ;; This function uses a non-reentrant model
 11744 ;;
 11745                           
 11746                           
 11747                           ;psect for function _get_scale_val
 11748  0C45                     _get_scale_val:
 11749                           
 11750                           ;incstack = 0
 11751                           ; Regs used in _get_scale_val: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
 11752                           ;get_scale_val@p stored from wreg
 11753  0C45  0020               	movlb	0	; select bank0
 11754  0C46  00B2               	movwf	get_scale_val@p
 11755  0C47                     l3497:
 11756                           
 11757                           ;loadcell.c: 35:     set_CELL_CLK_LOW(p);
 11758  0C47  0832               	movf	get_scale_val@p,w
 11759  0C48  319F  2763  318C   	fcall	_set_CELL_CLK_LOW
 11760  0C4B                     l3499:
 11761                           
 11762                           ;loadcell.c: 36:     unsigned long weight_count = 0;
 11763  0C4B  3000               	movlw	0
 11764  0C4C  0020               	movlb	0	; select bank0
 11765  0C4D  00B0               	movwf	get_scale_val@weight_count+3
 11766  0C4E  3000               	movlw	0
 11767  0C4F  00AF               	movwf	get_scale_val@weight_count+2
 11768  0C50  3000               	movlw	0
 11769  0C51  00AE               	movwf	get_scale_val@weight_count+1
 11770  0C52  3000               	movlw	0
 11771  0C53  00AD               	movwf	get_scale_val@weight_count
 11772  0C54                     l3501:
 11773                           
 11774                           ;loadcell.c: 37:     unsigned long weight_add = 0;
 11775  0C54  3000               	movlw	0
 11776  0C55  00AB               	movwf	get_scale_val@weight_add+3
 11777  0C56  3000               	movlw	0
 11778  0C57  00AA               	movwf	get_scale_val@weight_add+2
 11779  0C58  3000               	movlw	0
 11780  0C59  00A9               	movwf	get_scale_val@weight_add+1
 11781  0C5A  3000               	movlw	0
 11782  0C5B  00A8               	movwf	get_scale_val@weight_add
 11783  0C5C                     l3503:
 11784                           
 11785                           ;loadcell.c: 38:     for (uint8_t j = 0; j < scale_avg_count; j++)
 11786  0C5C  01AC               	clrf	get_scale_val@j
 11787  0C5D  2CE4               	goto	l3553
 11788  0C5E                     l3505:
 11789  0C5E  0020               	movlb	0	; select bank0
 11790  0C5F  0832               	movf	get_scale_val@p,w
 11791  0C60  3188  20EE  318C   	fcall	_get_CELL_DAT_VAL
 11792  0C63  0870               	movf	?_get_CELL_DAT_VAL,w
 11793  0C64  0471               	iorwf	?_get_CELL_DAT_VAL+1,w
 11794  0C65  1903               	btfsc	3,2
 11795  0C66  2C68               	goto	u4211
 11796  0C67  2C69               	goto	u4210
 11797  0C68                     u4211:
 11798  0C68  2C5E               	goto	l3505
 11799  0C69                     u4210:
 11800  0C69                     l3507:
 11801  0C69  0020               	movlb	0	; select bank0
 11802  0C6A  0832               	movf	get_scale_val@p,w
 11803  0C6B  3188  20EE  318C   	fcall	_get_CELL_DAT_VAL
 11804  0C6E  0370               	decf	?_get_CELL_DAT_VAL,w
 11805  0C6F  0471               	iorwf	?_get_CELL_DAT_VAL+1,w
 11806  0C70  1903               	btfsc	3,2
 11807  0C71  2C73               	goto	u4221
 11808  0C72  2C74               	goto	u4220
 11809  0C73                     u4221:
 11810  0C73  2C69               	goto	l3507
 11811  0C74                     u4220:
 11812  0C74                     l3509:
 11813                           
 11814                           ;loadcell.c: 42:         _delay((unsigned long)((10)*(8000000/4000000.0)));
 11815  0C74  3006               	movlw	6
 11816  0C75                     u4777:
 11817  0C75  0B89               	decfsz	9,f
 11818  0C76  2C75               	goto	u4777
 11819  0C77  3200               	nop2
 11820  0C78                     l3511:
 11821                           
 11822                           ;loadcell.c: 44:         uint8_t i;;loadcell.c: 45:         for (i = 0; i < 24; i++){
 11823  0C78  0020               	movlb	0	; select bank0
 11824  0C79  01B1               	clrf	get_scale_val@i
 11825  0C7A                     l3517:
 11826                           
 11827                           ;loadcell.c: 46:             weight_count <<= 1;
 11828  0C7A  3001               	movlw	1
 11829  0C7B                     u4235:
 11830  0C7B  35AD               	lslf	get_scale_val@weight_count,f
 11831  0C7C  0DAE               	rlf	get_scale_val@weight_count+1,f
 11832  0C7D  0DAF               	rlf	get_scale_val@weight_count+2,f
 11833  0C7E  0DB0               	rlf	get_scale_val@weight_count+3,f
 11834  0C7F  0B89               	decfsz	9,f
 11835  0C80  2C7B               	goto	u4235
 11836  0C81                     l3519:
 11837                           
 11838                           ;loadcell.c: 47:             set_CELL_CLK_HIGH(p);
 11839  0C81  0832               	movf	get_scale_val@p,w
 11840  0C82  319F  2759  318C   	fcall	_set_CELL_CLK_HIGH
 11841  0C85                     l3521:
 11842                           
 11843                           ;loadcell.c: 48:             _delay((unsigned long)((10)*(8000000/4000000.0)));
 11844  0C85  3006               	movlw	6
 11845  0C86                     u4787:
 11846  0C86  0B89               	decfsz	9,f
 11847  0C87  2C86               	goto	u4787
 11848  0C88  3200               	nop2
 11849  0C89                     l3523:
 11850                           
 11851                           ;loadcell.c: 49:             set_CELL_CLK_LOW(p);
 11852  0C89  0020               	movlb	0	; select bank0
 11853  0C8A  0832               	movf	get_scale_val@p,w
 11854  0C8B  319F  2763  318C   	fcall	_set_CELL_CLK_LOW
 11855  0C8E                     l3525:
 11856                           
 11857                           ;loadcell.c: 50:             weight_count += get_CELL_DAT_VAL(p);
 11858  0C8E  0020               	movlb	0	; select bank0
 11859  0C8F  0832               	movf	get_scale_val@p,w
 11860  0C90  3188  20EE  318C   	fcall	_get_CELL_DAT_VAL
 11861  0C93  0870               	movf	?_get_CELL_DAT_VAL,w
 11862  0C94  0020               	movlb	0	; select bank0
 11863  0C95  00A4               	movwf	??_get_scale_val
 11864  0C96  0871               	movf	?_get_CELL_DAT_VAL+1,w
 11865  0C97  00A5               	movwf	??_get_scale_val+1
 11866  0C98  3000               	movlw	0
 11867  0C99  1BA5               	btfsc	??_get_scale_val+1,7
 11868  0C9A  30FF               	movlw	255
 11869  0C9B  00A6               	movwf	??_get_scale_val+2
 11870  0C9C  00A7               	movwf	??_get_scale_val+3
 11871  0C9D  0824               	movf	??_get_scale_val,w
 11872  0C9E  07AD               	addwf	get_scale_val@weight_count,f
 11873  0C9F  0825               	movf	??_get_scale_val+1,w
 11874  0CA0  3DAE               	addwfc	get_scale_val@weight_count+1,f
 11875  0CA1  0826               	movf	??_get_scale_val+2,w
 11876  0CA2  3DAF               	addwfc	get_scale_val@weight_count+2,f
 11877  0CA3  0827               	movf	??_get_scale_val+3,w
 11878  0CA4  3DB0               	addwfc	get_scale_val@weight_count+3,f
 11879  0CA5                     l3527:
 11880                           
 11881                           ;loadcell.c: 51:             _delay((unsigned long)((10)*(8000000/4000000.0)));
 11882  0CA5  3006               	movlw	6
 11883  0CA6                     u4797:
 11884  0CA6  0B89               	decfsz	9,f
 11885  0CA7  2CA6               	goto	u4797
 11886  0CA8  3200               	nop2
 11887  0CA9                     l3529:
 11888                           
 11889                           ;loadcell.c: 52:         }
 11890  0CA9  3001               	movlw	1
 11891  0CAA  0020               	movlb	0	; select bank0
 11892  0CAB  00A4               	movwf	??_get_scale_val
 11893  0CAC  0824               	movf	??_get_scale_val,w
 11894  0CAD  07B1               	addwf	get_scale_val@i,f
 11895  0CAE                     l3531:
 11896  0CAE  3018               	movlw	24
 11897  0CAF  0231               	subwf	get_scale_val@i,w
 11898  0CB0  1C03               	skipc
 11899  0CB1  2CB3               	goto	u4241
 11900  0CB2  2CB4               	goto	u4240
 11901  0CB3                     u4241:
 11902  0CB3  2C7A               	goto	l3517
 11903  0CB4                     u4240:
 11904  0CB4                     l3533:
 11905                           
 11906                           ;loadcell.c: 54:         for (i = 0; i < 1; i++){
 11907  0CB4  01B1               	clrf	get_scale_val@i
 11908  0CB5                     l3539:
 11909                           
 11910                           ;loadcell.c: 55:             set_CELL_CLK_HIGH(p);
 11911  0CB5  0832               	movf	get_scale_val@p,w
 11912  0CB6  319F  2759  318C   	fcall	_set_CELL_CLK_HIGH
 11913  0CB9                     l3541:
 11914                           
 11915                           ;loadcell.c: 56:             _delay((unsigned long)((10)*(8000000/4000000.0)));
 11916  0CB9  3006               	movlw	6
 11917  0CBA                     u4807:
 11918  0CBA  0B89               	decfsz	9,f
 11919  0CBB  2CBA               	goto	u4807
 11920  0CBC  3200               	nop2
 11921  0CBD                     l3543:
 11922                           
 11923                           ;loadcell.c: 57:             set_CELL_CLK_LOW(p);
 11924  0CBD  0020               	movlb	0	; select bank0
 11925  0CBE  0832               	movf	get_scale_val@p,w
 11926  0CBF  319F  2763  318C   	fcall	_set_CELL_CLK_LOW
 11927                           
 11928                           ;loadcell.c: 58:             _delay((unsigned long)((10)*(8000000/4000000.0)));
 11929  0CC2  3006               	movlw	6
 11930  0CC3                     u4817:
 11931  0CC3  0B89               	decfsz	9,f
 11932  0CC4  2CC3               	goto	u4817
 11933  0CC5  3200               	nop2
 11934  0CC6                     l3545:
 11935                           
 11936                           ;loadcell.c: 59:         };
 11937  0CC6  3001               	movlw	1
 11938  0CC7  0020               	movlb	0	; select bank0
 11939  0CC8  00A4               	movwf	??_get_scale_val
 11940  0CC9  0824               	movf	??_get_scale_val,w
 11941  0CCA  07B1               	addwf	get_scale_val@i,f
 11942  0CCB                     l3547:
 11943  0CCB  0831               	movf	get_scale_val@i,w
 11944  0CCC  1903               	btfsc	3,2
 11945  0CCD  2CCF               	goto	u4251
 11946  0CCE  2CD0               	goto	u4250
 11947  0CCF                     u4251:
 11948  0CCF  2CB5               	goto	l3539
 11949  0CD0                     u4250:
 11950  0CD0                     l3549:
 11951                           
 11952                           ;loadcell.c: 60:         weight_add += weight_count;
 11953  0CD0  082D               	movf	get_scale_val@weight_count,w
 11954  0CD1  07A8               	addwf	get_scale_val@weight_add,f
 11955  0CD2  082E               	movf	get_scale_val@weight_count+1,w
 11956  0CD3  3DA9               	addwfc	get_scale_val@weight_add+1,f
 11957  0CD4  082F               	movf	get_scale_val@weight_count+2,w
 11958  0CD5  3DAA               	addwfc	get_scale_val@weight_add+2,f
 11959  0CD6  0830               	movf	get_scale_val@weight_count+3,w
 11960  0CD7  3DAB               	addwfc	get_scale_val@weight_add+3,f
 11961                           
 11962                           ;loadcell.c: 61:         weight_count = 0;
 11963  0CD8  3000               	movlw	0
 11964  0CD9  00B0               	movwf	get_scale_val@weight_count+3
 11965  0CDA  3000               	movlw	0
 11966  0CDB  00AF               	movwf	get_scale_val@weight_count+2
 11967  0CDC  3000               	movlw	0
 11968  0CDD  00AE               	movwf	get_scale_val@weight_count+1
 11969  0CDE  3000               	movlw	0
 11970  0CDF  00AD               	movwf	get_scale_val@weight_count
 11971  0CE0                     l3551:
 11972                           
 11973                           ;loadcell.c: 62:     }
 11974  0CE0  3001               	movlw	1
 11975  0CE1  00A4               	movwf	??_get_scale_val
 11976  0CE2  0824               	movf	??_get_scale_val,w
 11977  0CE3  07AC               	addwf	get_scale_val@j,f
 11978  0CE4                     l3553:
 11979  0CE4  0820               	movf	get_scale_val@scale_avg_count,w
 11980  0CE5  022C               	subwf	get_scale_val@j,w
 11981  0CE6  1C03               	skipc
 11982  0CE7  2CE9               	goto	u4261
 11983  0CE8  2CEA               	goto	u4260
 11984  0CE9                     u4261:
 11985  0CE9  2C5E               	goto	l3505
 11986  0CEA                     u4260:
 11987  0CEA                     l3555:
 11988                           
 11989                           ;loadcell.c: 63:     weight_count = weight_add / scale_avg_count;
 11990  0CEA  0820               	movf	get_scale_val@scale_avg_count,w
 11991  0CEB  00A4               	movwf	??_get_scale_val
 11992  0CEC  01A5               	clrf	??_get_scale_val+1
 11993  0CED  01A6               	clrf	??_get_scale_val+2
 11994  0CEE  01A7               	clrf	??_get_scale_val+3
 11995  0CEF  0827               	movf	??_get_scale_val+3,w
 11996  0CF0  00F3               	movwf	___lldiv@divisor+3
 11997  0CF1  0826               	movf	??_get_scale_val+2,w
 11998  0CF2  00F2               	movwf	___lldiv@divisor+2
 11999  0CF3  0825               	movf	??_get_scale_val+1,w
 12000  0CF4  00F1               	movwf	___lldiv@divisor+1
 12001  0CF5  0824               	movf	??_get_scale_val,w
 12002  0CF6  00F0               	movwf	___lldiv@divisor
 12003  0CF7  082B               	movf	get_scale_val@weight_add+3,w
 12004  0CF8  00F7               	movwf	___lldiv@dividend+3
 12005  0CF9  082A               	movf	get_scale_val@weight_add+2,w
 12006  0CFA  00F6               	movwf	___lldiv@dividend+2
 12007  0CFB  0829               	movf	get_scale_val@weight_add+1,w
 12008  0CFC  00F5               	movwf	___lldiv@dividend+1
 12009  0CFD  0828               	movf	get_scale_val@weight_add,w
 12010  0CFE  00F4               	movwf	___lldiv@dividend
 12011  0CFF  3193  23AA  318C   	fcall	___lldiv
 12012  0D02  0873               	movf	?___lldiv+3,w
 12013  0D03  0020               	movlb	0	; select bank0
 12014  0D04  00B0               	movwf	get_scale_val@weight_count+3
 12015  0D05  0872               	movf	?___lldiv+2,w
 12016  0D06  00AF               	movwf	get_scale_val@weight_count+2
 12017  0D07  0871               	movf	?___lldiv+1,w
 12018  0D08  00AE               	movwf	get_scale_val@weight_count+1
 12019  0D09  0870               	movf	?___lldiv,w
 12020  0D0A  00AD               	movwf	get_scale_val@weight_count
 12021  0D0B                     l3557:
 12022                           
 12023                           ;loadcell.c: 66:     weight_count = weight_count ^ 0x800000;
 12024  0D0B  3000               	movlw	0
 12025  0D0C  062D               	xorwf	get_scale_val@weight_count,w
 12026  0D0D  00A4               	movwf	??_get_scale_val
 12027  0D0E  3000               	movlw	0
 12028  0D0F  062E               	xorwf	get_scale_val@weight_count+1,w
 12029  0D10  00A5               	movwf	??_get_scale_val+1
 12030  0D11  3080               	movlw	128
 12031  0D12  062F               	xorwf	get_scale_val@weight_count+2,w
 12032  0D13  00A6               	movwf	??_get_scale_val+2
 12033  0D14  3000               	movlw	0
 12034  0D15  0630               	xorwf	get_scale_val@weight_count+3,w
 12035  0D16  00A7               	movwf	??_get_scale_val+3
 12036  0D17  0827               	movf	??_get_scale_val+3,w
 12037  0D18  00B0               	movwf	get_scale_val@weight_count+3
 12038  0D19  0826               	movf	??_get_scale_val+2,w
 12039  0D1A  00AF               	movwf	get_scale_val@weight_count+2
 12040  0D1B  0825               	movf	??_get_scale_val+1,w
 12041  0D1C  00AE               	movwf	get_scale_val@weight_count+1
 12042  0D1D  0824               	movf	??_get_scale_val,w
 12043  0D1E  00AD               	movwf	get_scale_val@weight_count
 12044  0D1F                     l3559:
 12045                           
 12046                           ;loadcell.c: 67:     return weight_count;
 12047  0D1F  0830               	movf	get_scale_val@weight_count+3,w
 12048  0D20  00A3               	movwf	?_get_scale_val+3
 12049  0D21  082F               	movf	get_scale_val@weight_count+2,w
 12050  0D22  00A2               	movwf	?_get_scale_val+2
 12051  0D23  082E               	movf	get_scale_val@weight_count+1,w
 12052  0D24  00A1               	movwf	?_get_scale_val+1
 12053  0D25  082D               	movf	get_scale_val@weight_count,w
 12054  0D26  00A0               	movwf	?_get_scale_val
 12055  0D27                     l276:
 12056  0D27  0008               	return
 12057  0D28                     __end_of_get_scale_val:
 12058                           
 12059                           	psect	text56
 12060  1F63                     __ptext56:	
 12061 ;; *************** function _set_CELL_CLK_LOW *****************
 12062 ;; Defined at:
 12063 ;;		line 7 in file "loadcell.c"
 12064 ;; Parameters:    Size  Location     Type
 12065 ;;  p               1    wreg     PTR struct .
 12066 ;;		 -> NULL(0), main@loadcell(12), 
 12067 ;; Auto vars:     Size  Location     Type
 12068 ;;  p               1    1[COMMON] PTR struct .
 12069 ;;		 -> NULL(0), main@loadcell(12), 
 12070 ;; Return value:  Size  Location     Type
 12071 ;;                  1    wreg      void 
 12072 ;; Registers used:
 12073 ;;		wreg, fsr1l, fsr1h, status,2, status,0
 12074 ;; Tracked objects:
 12075 ;;		On entry : 0/0
 12076 ;;		On exit  : 0/0
 12077 ;;		Unchanged: 0/0
 12078 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 12079 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12080 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12081 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12082 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12083 ;;Total ram usage:        2 bytes
 12084 ;; Hardware stack levels used: 1
 12085 ;; This function calls:
 12086 ;;		Nothing
 12087 ;; This function is called by:
 12088 ;;		_get_scale_val
 12089 ;; This function uses a non-reentrant model
 12090 ;;
 12091                           
 12092                           
 12093                           ;psect for function _set_CELL_CLK_LOW
 12094  1F63                     _set_CELL_CLK_LOW:
 12095                           
 12096                           ;incstack = 0
 12097                           ; Regs used in _set_CELL_CLK_LOW: [wreg+fsr1l+fsr1h+status,2+status,0]
 12098                           ;set_CELL_CLK_LOW@p stored from wreg
 12099  1F63  00F1               	movwf	set_CELL_CLK_LOW@p
 12100  1F64                     l3123:
 12101  1F64  0871               	movf	set_CELL_CLK_LOW@p,w
 12102  1F65  0086               	movwf	6
 12103  1F66  0187               	clrf	7
 12104  1F67  0901               	comf	1,w
 12105  1F68  00F0               	movwf	??_set_CELL_CLK_LOW
 12106  1F69  0870               	movf	??_set_CELL_CLK_LOW,w
 12107  1F6A  0022               	movlb	2	; select bank2
 12108  1F6B  058D               	andwf	13,f	;volatile
 12109  1F6C                     l246:
 12110  1F6C  0008               	return
 12111  1F6D                     __end_of_set_CELL_CLK_LOW:
 12112                           
 12113                           	psect	text57
 12114  1F59                     __ptext57:	
 12115 ;; *************** function _set_CELL_CLK_HIGH *****************
 12116 ;; Defined at:
 12117 ;;		line 12 in file "loadcell.c"
 12118 ;; Parameters:    Size  Location     Type
 12119 ;;  p               1    wreg     PTR struct .
 12120 ;;		 -> NULL(0), main@loadcell(12), 
 12121 ;; Auto vars:     Size  Location     Type
 12122 ;;  p               1    1[COMMON] PTR struct .
 12123 ;;		 -> NULL(0), main@loadcell(12), 
 12124 ;; Return value:  Size  Location     Type
 12125 ;;                  1    wreg      void 
 12126 ;; Registers used:
 12127 ;;		wreg, fsr1l, fsr1h, status,2, status,0
 12128 ;; Tracked objects:
 12129 ;;		On entry : 0/0
 12130 ;;		On exit  : 0/0
 12131 ;;		Unchanged: 0/0
 12132 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 12133 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12134 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12135 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12136 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12137 ;;Total ram usage:        2 bytes
 12138 ;; Hardware stack levels used: 1
 12139 ;; This function calls:
 12140 ;;		Nothing
 12141 ;; This function is called by:
 12142 ;;		_get_scale_val
 12143 ;; This function uses a non-reentrant model
 12144 ;;
 12145                           
 12146                           
 12147                           ;psect for function _set_CELL_CLK_HIGH
 12148  1F59                     _set_CELL_CLK_HIGH:
 12149                           
 12150                           ;incstack = 0
 12151                           ; Regs used in _set_CELL_CLK_HIGH: [wreg+fsr1l+fsr1h+status,2+status,0]
 12152                           ;set_CELL_CLK_HIGH@p stored from wreg
 12153  1F59  00F1               	movwf	set_CELL_CLK_HIGH@p
 12154  1F5A                     l3125:
 12155  1F5A  0871               	movf	set_CELL_CLK_HIGH@p,w
 12156  1F5B  0086               	movwf	6
 12157  1F5C  0187               	clrf	7
 12158  1F5D  0801               	movf	1,w
 12159  1F5E  00F0               	movwf	??_set_CELL_CLK_HIGH
 12160  1F5F  0870               	movf	??_set_CELL_CLK_HIGH,w
 12161  1F60  0022               	movlb	2	; select bank2
 12162  1F61  048D               	iorwf	13,f	;volatile
 12163  1F62                     l249:
 12164  1F62  0008               	return
 12165  1F63                     __end_of_set_CELL_CLK_HIGH:
 12166                           
 12167                           	psect	text58
 12168  08EE                     __ptext58:	
 12169 ;; *************** function _get_CELL_DAT_VAL *****************
 12170 ;; Defined at:
 12171 ;;		line 15 in file "loadcell.c"
 12172 ;; Parameters:    Size  Location     Type
 12173 ;;  p               1    wreg     PTR struct .
 12174 ;;		 -> NULL(0), main@loadcell(12), 
 12175 ;; Auto vars:     Size  Location     Type
 12176 ;;  p               1    5[COMMON] PTR struct .
 12177 ;;		 -> NULL(0), main@loadcell(12), 
 12178 ;; Return value:  Size  Location     Type
 12179 ;;                  2    0[COMMON] int 
 12180 ;; Registers used:
 12181 ;;		wreg, fsr1l, fsr1h, status,2, status,0
 12182 ;; Tracked objects:
 12183 ;;		On entry : 0/0
 12184 ;;		On exit  : 0/0
 12185 ;;		Unchanged: 0/0
 12186 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 12187 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12188 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12189 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12190 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12191 ;;Total ram usage:        6 bytes
 12192 ;; Hardware stack levels used: 1
 12193 ;; This function calls:
 12194 ;;		Nothing
 12195 ;; This function is called by:
 12196 ;;		_get_scale_val
 12197 ;; This function uses a non-reentrant model
 12198 ;;
 12199                           
 12200                           
 12201                           ;psect for function _get_CELL_DAT_VAL
 12202  08EE                     _get_CELL_DAT_VAL:
 12203                           
 12204                           ;incstack = 0
 12205                           ; Regs used in _get_CELL_DAT_VAL: [wreg+fsr1l+fsr1h+status,2+status,0]
 12206                           ;get_CELL_DAT_VAL@p stored from wreg
 12207  08EE  00F5               	movwf	get_CELL_DAT_VAL@p
 12208  08EF                     l3127:
 12209                           
 12210                           ;loadcell.c: 16:     if(p->cell_dat == 0x01){ return PORTBbits.RB0; }
 12211  08EF  0A75               	incf	get_CELL_DAT_VAL@p,w
 12212  08F0  0086               	movwf	6
 12213  08F1  0187               	clrf	7
 12214  08F2  0301               	decf	1,w
 12215  08F3  1D03               	btfss	3,2
 12216  08F4  28F6               	goto	u3471
 12217  08F5  28F7               	goto	u3470
 12218  08F6                     u3471:
 12219  08F6  2901               	goto	l3133
 12220  08F7                     u3470:
 12221  08F7                     l3129:
 12222  08F7  0020               	movlb	0	; select bank0
 12223  08F8  080D               	movf	13,w	;volatile
 12224  08F9  3901               	andlw	1
 12225  08FA  00F2               	movwf	??_get_CELL_DAT_VAL
 12226  08FB  01F3               	clrf	??_get_CELL_DAT_VAL+1
 12227  08FC  0872               	movf	??_get_CELL_DAT_VAL,w
 12228  08FD  00F0               	movwf	?_get_CELL_DAT_VAL
 12229  08FE  0873               	movf	??_get_CELL_DAT_VAL+1,w
 12230  08FF  00F1               	movwf	?_get_CELL_DAT_VAL+1
 12231  0900  2990               	goto	l253
 12232  0901                     l3133:
 12233                           
 12234                           ;loadcell.c: 17:     if(p->cell_dat == 0x02){ return PORTBbits.RB1; }
 12235  0901  0A75               	incf	get_CELL_DAT_VAL@p,w
 12236  0902  0086               	movwf	6
 12237  0903  0187               	clrf	7
 12238  0904  3002               	movlw	2
 12239  0905  0601               	xorwf	1,w
 12240  0906  1D03               	btfss	3,2
 12241  0907  2909               	goto	u3481
 12242  0908  290A               	goto	u3480
 12243  0909                     u3481:
 12244  0909  2914               	goto	l3139
 12245  090A                     u3480:
 12246  090A                     l3135:
 12247  090A  0020               	movlb	0	; select bank0
 12248  090B  0C0D               	rrf	13,w	;volatile
 12249  090C  3901               	andlw	1
 12250  090D  00F2               	movwf	??_get_CELL_DAT_VAL
 12251  090E  01F3               	clrf	??_get_CELL_DAT_VAL+1
 12252  090F  0872               	movf	??_get_CELL_DAT_VAL,w
 12253  0910  00F0               	movwf	?_get_CELL_DAT_VAL
 12254  0911  0873               	movf	??_get_CELL_DAT_VAL+1,w
 12255  0912  00F1               	movwf	?_get_CELL_DAT_VAL+1
 12256  0913  2990               	goto	l253
 12257  0914                     l3139:
 12258                           
 12259                           ;loadcell.c: 18:     if(p->cell_dat == 0x04){ return PORTBbits.RB2; }
 12260  0914  0A75               	incf	get_CELL_DAT_VAL@p,w
 12261  0915  0086               	movwf	6
 12262  0916  0187               	clrf	7
 12263  0917  3004               	movlw	4
 12264  0918  0601               	xorwf	1,w
 12265  0919  1D03               	btfss	3,2
 12266  091A  291C               	goto	u3491
 12267  091B  291D               	goto	u3490
 12268  091C                     u3491:
 12269  091C  2928               	goto	l3145
 12270  091D                     u3490:
 12271  091D                     l3141:
 12272  091D  0020               	movlb	0	; select bank0
 12273  091E  0C0D               	rrf	13,w	;volatile
 12274  091F  0C89               	rrf	9,f
 12275  0920  3901               	andlw	1
 12276  0921  00F2               	movwf	??_get_CELL_DAT_VAL
 12277  0922  01F3               	clrf	??_get_CELL_DAT_VAL+1
 12278  0923  0872               	movf	??_get_CELL_DAT_VAL,w
 12279  0924  00F0               	movwf	?_get_CELL_DAT_VAL
 12280  0925  0873               	movf	??_get_CELL_DAT_VAL+1,w
 12281  0926  00F1               	movwf	?_get_CELL_DAT_VAL+1
 12282  0927  2990               	goto	l253
 12283  0928                     l3145:
 12284                           
 12285                           ;loadcell.c: 19:     if(p->cell_dat == 0x08){ return PORTBbits.RB3; }
 12286  0928  0A75               	incf	get_CELL_DAT_VAL@p,w
 12287  0929  0086               	movwf	6
 12288  092A  0187               	clrf	7
 12289  092B  3008               	movlw	8
 12290  092C  0601               	xorwf	1,w
 12291  092D  1D03               	btfss	3,2
 12292  092E  2930               	goto	u3501
 12293  092F  2931               	goto	u3500
 12294  0930                     u3501:
 12295  0930  293E               	goto	l3151
 12296  0931                     u3500:
 12297  0931                     l3147:
 12298  0931  0020               	movlb	0	; select bank0
 12299  0932  0C0D               	rrf	13,w	;volatile
 12300  0933  00F2               	movwf	??_get_CELL_DAT_VAL
 12301  0934  0CF2               	rrf	??_get_CELL_DAT_VAL,f
 12302  0935  0C72               	rrf	??_get_CELL_DAT_VAL,w
 12303  0936  3901               	andlw	1
 12304  0937  00F3               	movwf	??_get_CELL_DAT_VAL+1
 12305  0938  01F4               	clrf	??_get_CELL_DAT_VAL+2
 12306  0939  0873               	movf	??_get_CELL_DAT_VAL+1,w
 12307  093A  00F0               	movwf	?_get_CELL_DAT_VAL
 12308  093B  0874               	movf	??_get_CELL_DAT_VAL+2,w
 12309  093C  00F1               	movwf	?_get_CELL_DAT_VAL+1
 12310  093D  2990               	goto	l253
 12311  093E                     l3151:
 12312                           
 12313                           ;loadcell.c: 20:     if(p->cell_dat == 0x10){ return PORTBbits.RB4; }
 12314  093E  0A75               	incf	get_CELL_DAT_VAL@p,w
 12315  093F  0086               	movwf	6
 12316  0940  0187               	clrf	7
 12317  0941  3010               	movlw	16
 12318  0942  0601               	xorwf	1,w
 12319  0943  1D03               	btfss	3,2
 12320  0944  2946               	goto	u3511
 12321  0945  2947               	goto	u3510
 12322  0946                     u3511:
 12323  0946  2951               	goto	l3157
 12324  0947                     u3510:
 12325  0947                     l3153:
 12326  0947  0020               	movlb	0	; select bank0
 12327  0948  0E0D               	swapf	13,w	;volatile
 12328  0949  3901               	andlw	1
 12329  094A  00F2               	movwf	??_get_CELL_DAT_VAL
 12330  094B  01F3               	clrf	??_get_CELL_DAT_VAL+1
 12331  094C  0872               	movf	??_get_CELL_DAT_VAL,w
 12332  094D  00F0               	movwf	?_get_CELL_DAT_VAL
 12333  094E  0873               	movf	??_get_CELL_DAT_VAL+1,w
 12334  094F  00F1               	movwf	?_get_CELL_DAT_VAL+1
 12335  0950  2990               	goto	l253
 12336  0951                     l3157:
 12337                           
 12338                           ;loadcell.c: 21:     if(p->cell_dat == 0x20){ return PORTBbits.RB5; }
 12339  0951  0A75               	incf	get_CELL_DAT_VAL@p,w
 12340  0952  0086               	movwf	6
 12341  0953  0187               	clrf	7
 12342  0954  3020               	movlw	32
 12343  0955  0601               	xorwf	1,w
 12344  0956  1D03               	btfss	3,2
 12345  0957  2959               	goto	u3521
 12346  0958  295A               	goto	u3520
 12347  0959                     u3521:
 12348  0959  2965               	goto	l3163
 12349  095A                     u3520:
 12350  095A                     l3159:
 12351  095A  0020               	movlb	0	; select bank0
 12352  095B  0E0D               	swapf	13,w	;volatile
 12353  095C  0C89               	rrf	9,f
 12354  095D  3901               	andlw	1
 12355  095E  00F2               	movwf	??_get_CELL_DAT_VAL
 12356  095F  01F3               	clrf	??_get_CELL_DAT_VAL+1
 12357  0960  0872               	movf	??_get_CELL_DAT_VAL,w
 12358  0961  00F0               	movwf	?_get_CELL_DAT_VAL
 12359  0962  0873               	movf	??_get_CELL_DAT_VAL+1,w
 12360  0963  00F1               	movwf	?_get_CELL_DAT_VAL+1
 12361  0964  2990               	goto	l253
 12362  0965                     l3163:
 12363                           
 12364                           ;loadcell.c: 22:     if(p->cell_dat == 0x40){ return PORTBbits.RB6; }
 12365  0965  0A75               	incf	get_CELL_DAT_VAL@p,w
 12366  0966  0086               	movwf	6
 12367  0967  0187               	clrf	7
 12368  0968  3040               	movlw	64
 12369  0969  0601               	xorwf	1,w
 12370  096A  1D03               	btfss	3,2
 12371  096B  296D               	goto	u3531
 12372  096C  296E               	goto	u3530
 12373  096D                     u3531:
 12374  096D  297A               	goto	l3169
 12375  096E                     u3530:
 12376  096E                     l3165:
 12377  096E  0020               	movlb	0	; select bank0
 12378  096F  0E0D               	swapf	13,w	;volatile
 12379  0970  0C89               	rrf	9,f
 12380  0971  0C89               	rrf	9,f
 12381  0972  3901               	andlw	1
 12382  0973  00F2               	movwf	??_get_CELL_DAT_VAL
 12383  0974  01F3               	clrf	??_get_CELL_DAT_VAL+1
 12384  0975  0872               	movf	??_get_CELL_DAT_VAL,w
 12385  0976  00F0               	movwf	?_get_CELL_DAT_VAL
 12386  0977  0873               	movf	??_get_CELL_DAT_VAL+1,w
 12387  0978  00F1               	movwf	?_get_CELL_DAT_VAL+1
 12388  0979  2990               	goto	l253
 12389  097A                     l3169:
 12390                           
 12391                           ;loadcell.c: 23:     if(p->cell_dat == 0x80){ return PORTBbits.RB7; }
 12392  097A  0A75               	incf	get_CELL_DAT_VAL@p,w
 12393  097B  0086               	movwf	6
 12394  097C  0187               	clrf	7
 12395  097D  3080               	movlw	128
 12396  097E  0601               	xorwf	1,w
 12397  097F  1D03               	btfss	3,2
 12398  0980  2982               	goto	u3541
 12399  0981  2983               	goto	u3540
 12400  0982                     u3541:
 12401  0982  298E               	goto	l3175
 12402  0983                     u3540:
 12403  0983                     l3171:
 12404  0983  0020               	movlb	0	; select bank0
 12405  0984  0D0D               	rlf	13,w	;volatile
 12406  0985  0D0D               	rlf	13,w	;volatile
 12407  0986  3901               	andlw	1
 12408  0987  00F2               	movwf	??_get_CELL_DAT_VAL
 12409  0988  01F3               	clrf	??_get_CELL_DAT_VAL+1
 12410  0989  0872               	movf	??_get_CELL_DAT_VAL,w
 12411  098A  00F0               	movwf	?_get_CELL_DAT_VAL
 12412  098B  0873               	movf	??_get_CELL_DAT_VAL+1,w
 12413  098C  00F1               	movwf	?_get_CELL_DAT_VAL+1
 12414  098D  2990               	goto	l253
 12415  098E                     l3175:
 12416                           
 12417                           ;loadcell.c: 25:     return 0;
 12418  098E  01F0               	clrf	?_get_CELL_DAT_VAL
 12419  098F  01F1               	clrf	?_get_CELL_DAT_VAL+1
 12420  0990                     l253:
 12421  0990  0008               	return
 12422  0991                     __end_of_get_CELL_DAT_VAL:
 12423                           
 12424                           	psect	text59
 12425  13AA                     __ptext59:	
 12426 ;; *************** function ___lldiv *****************
 12427 ;; Defined at:
 12428 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\__lldiv.c"
 12429 ;; Parameters:    Size  Location     Type
 12430 ;;  divisor         4    0[COMMON] unsigned long 
 12431 ;;  dividend        4    4[COMMON] unsigned long 
 12432 ;; Auto vars:     Size  Location     Type
 12433 ;;  quotient        4    9[COMMON] unsigned long 
 12434 ;;  counter         1   13[COMMON] unsigned char 
 12435 ;; Return value:  Size  Location     Type
 12436 ;;                  4    0[COMMON] unsigned long 
 12437 ;; Registers used:
 12438 ;;		wreg, status,2, status,0
 12439 ;; Tracked objects:
 12440 ;;		On entry : 0/0
 12441 ;;		On exit  : 0/0
 12442 ;;		Unchanged: 0/0
 12443 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 12444 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12445 ;;      Locals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12446 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12447 ;;      Totals:        14       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12448 ;;Total ram usage:       14 bytes
 12449 ;; Hardware stack levels used: 1
 12450 ;; This function calls:
 12451 ;;		Nothing
 12452 ;; This function is called by:
 12453 ;;		_get_scale_val
 12454 ;; This function uses a non-reentrant model
 12455 ;;
 12456                           
 12457                           
 12458                           ;psect for function ___lldiv
 12459  13AA                     ___lldiv:
 12460  13AA                     l3199:	
 12461                           ;incstack = 0
 12462                           ; Regs used in ___lldiv: [wreg+status,2+status,0]
 12463                           
 12464  13AA  3000               	movlw	0
 12465  13AB  00FC               	movwf	___lldiv@quotient+3
 12466  13AC  3000               	movlw	0
 12467  13AD  00FB               	movwf	___lldiv@quotient+2
 12468  13AE  3000               	movlw	0
 12469  13AF  00FA               	movwf	___lldiv@quotient+1
 12470  13B0  3000               	movlw	0
 12471  13B1  00F9               	movwf	___lldiv@quotient
 12472  13B2  0873               	movf	___lldiv@divisor+3,w
 12473  13B3  0472               	iorwf	___lldiv@divisor+2,w
 12474  13B4  0471               	iorwf	___lldiv@divisor+1,w
 12475  13B5  0470               	iorwf	___lldiv@divisor,w
 12476  13B6  1903               	skipnz
 12477  13B7  2BB9               	goto	u3571
 12478  13B8  2BBA               	goto	u3570
 12479  13B9                     u3571:
 12480  13B9  2BFB               	goto	l3219
 12481  13BA                     u3570:
 12482  13BA                     l3201:
 12483  13BA  01FD               	clrf	___lldiv@counter
 12484  13BB  0AFD               	incf	___lldiv@counter,f
 12485  13BC  2BC8               	goto	l3205
 12486  13BD                     l3203:
 12487  13BD  3001               	movlw	1
 12488  13BE                     u3585:
 12489  13BE  35F0               	lslf	___lldiv@divisor,f
 12490  13BF  0DF1               	rlf	___lldiv@divisor+1,f
 12491  13C0  0DF2               	rlf	___lldiv@divisor+2,f
 12492  13C1  0DF3               	rlf	___lldiv@divisor+3,f
 12493  13C2  0B89               	decfsz	9,f
 12494  13C3  2BBE               	goto	u3585
 12495  13C4  3001               	movlw	1
 12496  13C5  00F8               	movwf	??___lldiv
 12497  13C6  0878               	movf	??___lldiv,w
 12498  13C7  07FD               	addwf	___lldiv@counter,f
 12499  13C8                     l3205:
 12500  13C8  1FF3               	btfss	___lldiv@divisor+3,7
 12501  13C9  2BCB               	goto	u3591
 12502  13CA  2BCC               	goto	u3590
 12503  13CB                     u3591:
 12504  13CB  2BBD               	goto	l3203
 12505  13CC                     u3590:
 12506  13CC                     l3207:
 12507  13CC  3001               	movlw	1
 12508  13CD                     u3605:
 12509  13CD  35F9               	lslf	___lldiv@quotient,f
 12510  13CE  0DFA               	rlf	___lldiv@quotient+1,f
 12511  13CF  0DFB               	rlf	___lldiv@quotient+2,f
 12512  13D0  0DFC               	rlf	___lldiv@quotient+3,f
 12513  13D1  0B89               	decfsz	9,f
 12514  13D2  2BCD               	goto	u3605
 12515  13D3                     l3209:
 12516  13D3  0873               	movf	___lldiv@divisor+3,w
 12517  13D4  0277               	subwf	___lldiv@dividend+3,w
 12518  13D5  1D03               	skipz
 12519  13D6  2BE1               	goto	u3615
 12520  13D7  0872               	movf	___lldiv@divisor+2,w
 12521  13D8  0276               	subwf	___lldiv@dividend+2,w
 12522  13D9  1D03               	skipz
 12523  13DA  2BE1               	goto	u3615
 12524  13DB  0871               	movf	___lldiv@divisor+1,w
 12525  13DC  0275               	subwf	___lldiv@dividend+1,w
 12526  13DD  1D03               	skipz
 12527  13DE  2BE1               	goto	u3615
 12528  13DF  0870               	movf	___lldiv@divisor,w
 12529  13E0  0274               	subwf	___lldiv@dividend,w
 12530  13E1                     u3615:
 12531  13E1  1C03               	skipc
 12532  13E2  2BE4               	goto	u3611
 12533  13E3  2BE5               	goto	u3610
 12534  13E4                     u3611:
 12535  13E4  2BEE               	goto	l3215
 12536  13E5                     u3610:
 12537  13E5                     l3211:
 12538  13E5  0870               	movf	___lldiv@divisor,w
 12539  13E6  02F4               	subwf	___lldiv@dividend,f
 12540  13E7  0871               	movf	___lldiv@divisor+1,w
 12541  13E8  3BF5               	subwfb	___lldiv@dividend+1,f
 12542  13E9  0872               	movf	___lldiv@divisor+2,w
 12543  13EA  3BF6               	subwfb	___lldiv@dividend+2,f
 12544  13EB  0873               	movf	___lldiv@divisor+3,w
 12545  13EC  3BF7               	subwfb	___lldiv@dividend+3,f
 12546  13ED                     l3213:
 12547  13ED  1479               	bsf	___lldiv@quotient,0
 12548  13EE                     l3215:
 12549  13EE  3001               	movlw	1
 12550  13EF                     u3625:
 12551  13EF  36F3               	lsrf	___lldiv@divisor+3,f
 12552  13F0  0CF2               	rrf	___lldiv@divisor+2,f
 12553  13F1  0CF1               	rrf	___lldiv@divisor+1,f
 12554  13F2  0CF0               	rrf	___lldiv@divisor,f
 12555  13F3  0B89               	decfsz	9,f
 12556  13F4  2BEF               	goto	u3625
 12557  13F5                     l3217:
 12558  13F5  3001               	movlw	1
 12559  13F6  02FD               	subwf	___lldiv@counter,f
 12560  13F7  1D03               	btfss	3,2
 12561  13F8  2BFA               	goto	u3631
 12562  13F9  2BFB               	goto	u3630
 12563  13FA                     u3631:
 12564  13FA  2BCC               	goto	l3207
 12565  13FB                     u3630:
 12566  13FB                     l3219:
 12567  13FB  087C               	movf	___lldiv@quotient+3,w
 12568  13FC  00F3               	movwf	?___lldiv+3
 12569  13FD  087B               	movf	___lldiv@quotient+2,w
 12570  13FE  00F2               	movwf	?___lldiv+2
 12571  13FF  087A               	movf	___lldiv@quotient+1,w
 12572  1400  00F1               	movwf	?___lldiv+1
 12573  1401  0879               	movf	___lldiv@quotient,w
 12574  1402  00F0               	movwf	?___lldiv
 12575  1403                     l555:
 12576  1403  0008               	return
 12577  1404                     __end_of___lldiv:
 12578                           
 12579                           	psect	text60
 12580  058A                     __ptext60:	
 12581 ;; *************** function ___flmul *****************
 12582 ;; Defined at:
 12583 ;;		line 8 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\sprcmul.c"
 12584 ;; Parameters:    Size  Location     Type
 12585 ;;  b               4   26[BANK0 ] unsigned long 
 12586 ;;  a               4   30[BANK0 ] unsigned long 
 12587 ;; Auto vars:     Size  Location     Type
 12588 ;;  prod            4   46[BANK0 ] struct .
 12589 ;;  grs             4   40[BANK0 ] unsigned long 
 12590 ;;  temp            2   50[BANK0 ] struct .
 12591 ;;  bexp            1   45[BANK0 ] unsigned char 
 12592 ;;  aexp            1   44[BANK0 ] unsigned char 
 12593 ;;  sign            1   39[BANK0 ] unsigned char 
 12594 ;; Return value:  Size  Location     Type
 12595 ;;                  4   26[BANK0 ] unsigned char 
 12596 ;; Registers used:
 12597 ;;		wreg, status,2, status,0, pclath, cstack
 12598 ;; Tracked objects:
 12599 ;;		On entry : 0/0
 12600 ;;		On exit  : 0/0
 12601 ;;		Unchanged: 0/0
 12602 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 12603 ;;      Params:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12604 ;;      Locals:         0      13       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12605 ;;      Temps:          0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12606 ;;      Totals:         0      26       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12607 ;;Total ram usage:       26 bytes
 12608 ;; Hardware stack levels used: 1
 12609 ;; Hardware stack levels required when called: 1
 12610 ;; This function calls:
 12611 ;;		__Umul8_16
 12612 ;; This function is called by:
 12613 ;;		_calc_percentage
 12614 ;; This function uses a non-reentrant model
 12615 ;;
 12616                           
 12617                           
 12618                           ;psect for function ___flmul
 12619  058A                     ___flmul:
 12620  058A                     l3649:	
 12621                           ;incstack = 0
 12622                           ; Regs used in ___flmul: [wreg+status,2+status,0+pclath+cstack]
 12623                           
 12624  058A  0020               	movlb	0	; select bank0
 12625  058B  083D               	movf	___flmul@b+3,w
 12626  058C  3980               	andlw	128
 12627  058D  00C2               	movwf	??___flmul
 12628  058E  0842               	movf	??___flmul,w
 12629  058F  00C7               	movwf	___flmul@sign
 12630  0590                     l3651:
 12631  0590  353D               	lslf	___flmul@b+3,w
 12632  0591  00C2               	movwf	??___flmul
 12633  0592  0842               	movf	??___flmul,w
 12634  0593  00CD               	movwf	___flmul@bexp
 12635  0594                     l3653:
 12636  0594  1FBC               	btfss	___flmul@b+2,7
 12637  0595  2D97               	goto	u4301
 12638  0596  2D98               	goto	u4300
 12639  0597                     u4301:
 12640  0597  2D99               	goto	l3657
 12641  0598                     u4300:
 12642  0598                     l3655:
 12643  0598  144D               	bsf	___flmul@bexp,0
 12644  0599                     l3657:
 12645  0599  084D               	movf	___flmul@bexp,w
 12646  059A  1903               	btfsc	3,2
 12647  059B  2D9D               	goto	u4311
 12648  059C  2D9E               	goto	u4310
 12649  059D                     u4311:
 12650  059D  2DAD               	goto	l3665
 12651  059E                     u4310:
 12652  059E                     l3659:
 12653  059E  0A4D               	incf	___flmul@bexp,w
 12654  059F  1D03               	btfss	3,2
 12655  05A0  2DA2               	goto	u4321
 12656  05A1  2DA3               	goto	u4320
 12657  05A2                     u4321:
 12658  05A2  2DAB               	goto	l3663
 12659  05A3                     u4320:
 12660  05A3                     l3661:
 12661  05A3  3000               	movlw	0
 12662  05A4  00BD               	movwf	___flmul@b+3
 12663  05A5  3000               	movlw	0
 12664  05A6  00BC               	movwf	___flmul@b+2
 12665  05A7  3000               	movlw	0
 12666  05A8  00BB               	movwf	___flmul@b+1
 12667  05A9  3000               	movlw	0
 12668  05AA  00BA               	movwf	___flmul@b
 12669  05AB                     l3663:
 12670  05AB  17BC               	bsf	___flmul@b+2,7
 12671  05AC  2DB5               	goto	l3667
 12672  05AD                     l3665:
 12673  05AD  3000               	movlw	0
 12674  05AE  00BD               	movwf	___flmul@b+3
 12675  05AF  3000               	movlw	0
 12676  05B0  00BC               	movwf	___flmul@b+2
 12677  05B1  3000               	movlw	0
 12678  05B2  00BB               	movwf	___flmul@b+1
 12679  05B3  3000               	movlw	0
 12680  05B4  00BA               	movwf	___flmul@b
 12681  05B5                     l3667:
 12682  05B5  0841               	movf	___flmul@a+3,w
 12683  05B6  3980               	andlw	128
 12684  05B7  00C2               	movwf	??___flmul
 12685  05B8  0842               	movf	??___flmul,w
 12686  05B9  06C7               	xorwf	___flmul@sign,f
 12687  05BA                     l3669:
 12688  05BA  3541               	lslf	___flmul@a+3,w
 12689  05BB  00C2               	movwf	??___flmul
 12690  05BC  0842               	movf	??___flmul,w
 12691  05BD  00CC               	movwf	___flmul@aexp
 12692  05BE                     l3671:
 12693  05BE  1FC0               	btfss	___flmul@a+2,7
 12694  05BF  2DC1               	goto	u4331
 12695  05C0  2DC2               	goto	u4330
 12696  05C1                     u4331:
 12697  05C1  2DC3               	goto	l3675
 12698  05C2                     u4330:
 12699  05C2                     l3673:
 12700  05C2  144C               	bsf	___flmul@aexp,0
 12701  05C3                     l3675:
 12702  05C3  084C               	movf	___flmul@aexp,w
 12703  05C4  1903               	btfsc	3,2
 12704  05C5  2DC7               	goto	u4341
 12705  05C6  2DC8               	goto	u4340
 12706  05C7                     u4341:
 12707  05C7  2DD7               	goto	l3683
 12708  05C8                     u4340:
 12709  05C8                     l3677:
 12710  05C8  0A4C               	incf	___flmul@aexp,w
 12711  05C9  1D03               	btfss	3,2
 12712  05CA  2DCC               	goto	u4351
 12713  05CB  2DCD               	goto	u4350
 12714  05CC                     u4351:
 12715  05CC  2DD5               	goto	l3681
 12716  05CD                     u4350:
 12717  05CD                     l3679:
 12718  05CD  3000               	movlw	0
 12719  05CE  00C1               	movwf	___flmul@a+3
 12720  05CF  3000               	movlw	0
 12721  05D0  00C0               	movwf	___flmul@a+2
 12722  05D1  3000               	movlw	0
 12723  05D2  00BF               	movwf	___flmul@a+1
 12724  05D3  3000               	movlw	0
 12725  05D4  00BE               	movwf	___flmul@a
 12726  05D5                     l3681:
 12727  05D5  17C0               	bsf	___flmul@a+2,7
 12728  05D6  2DDF               	goto	l3685
 12729  05D7                     l3683:
 12730  05D7  3000               	movlw	0
 12731  05D8  00C1               	movwf	___flmul@a+3
 12732  05D9  3000               	movlw	0
 12733  05DA  00C0               	movwf	___flmul@a+2
 12734  05DB  3000               	movlw	0
 12735  05DC  00BF               	movwf	___flmul@a+1
 12736  05DD  3000               	movlw	0
 12737  05DE  00BE               	movwf	___flmul@a
 12738  05DF                     l3685:
 12739  05DF  084C               	movf	___flmul@aexp,w
 12740  05E0  1903               	btfsc	3,2
 12741  05E1  2DE3               	goto	u4361
 12742  05E2  2DE4               	goto	u4360
 12743  05E3                     u4361:
 12744  05E3  2DE9               	goto	l3689
 12745  05E4                     u4360:
 12746  05E4                     l3687:
 12747  05E4  084D               	movf	___flmul@bexp,w
 12748  05E5  1D03               	btfss	3,2
 12749  05E6  2DE8               	goto	u4371
 12750  05E7  2DE9               	goto	u4370
 12751  05E8                     u4371:
 12752  05E8  2DF2               	goto	l3693
 12753  05E9                     u4370:
 12754  05E9                     l3689:
 12755  05E9  3000               	movlw	0
 12756  05EA  00BD               	movwf	?___flmul+3
 12757  05EB  3000               	movlw	0
 12758  05EC  00BC               	movwf	?___flmul+2
 12759  05ED  3000               	movlw	0
 12760  05EE  00BB               	movwf	?___flmul+1
 12761  05EF  3000               	movlw	0
 12762  05F0  00BA               	movwf	?___flmul
 12763  05F1  2FE0               	goto	l916
 12764  05F2                     l3693:
 12765  05F2  083A               	movf	___flmul@b,w
 12766  05F3  00C2               	movwf	??___flmul
 12767  05F4  0842               	movf	??___flmul,w
 12768  05F5  00F0               	movwf	__Umul8_16@multiplicand
 12769  05F6  0840               	movf	___flmul@a+2,w
 12770  05F7  3190  20E9  3185   	fcall	__Umul8_16
 12771  05FA  0871               	movf	?__Umul8_16+1,w
 12772  05FB  0020               	movlb	0	; select bank0
 12773  05FC  00D3               	movwf	___flmul@temp+1
 12774  05FD  0870               	movf	?__Umul8_16,w
 12775  05FE  00D2               	movwf	___flmul@temp
 12776  05FF                     l3695:
 12777  05FF  0852               	movf	___flmul@temp,w
 12778  0600  00C2               	movwf	??___flmul
 12779  0601  01C3               	clrf	??___flmul+1
 12780  0602  01C4               	clrf	??___flmul+2
 12781  0603  01C5               	clrf	??___flmul+3
 12782  0604  0845               	movf	??___flmul+3,w
 12783  0605  00CB               	movwf	___flmul@grs+3
 12784  0606  0844               	movf	??___flmul+2,w
 12785  0607  00CA               	movwf	___flmul@grs+2
 12786  0608  0843               	movf	??___flmul+1,w
 12787  0609  00C9               	movwf	___flmul@grs+1
 12788  060A  0842               	movf	??___flmul,w
 12789  060B  00C8               	movwf	___flmul@grs
 12790  060C                     l3697:
 12791  060C  0853               	movf	___flmul@temp+1,w
 12792  060D  00C2               	movwf	??___flmul
 12793  060E  01C3               	clrf	??___flmul+1
 12794  060F  01C4               	clrf	??___flmul+2
 12795  0610  01C5               	clrf	??___flmul+3
 12796  0611  0845               	movf	??___flmul+3,w
 12797  0612  00D1               	movwf	___flmul@prod+3
 12798  0613  0844               	movf	??___flmul+2,w
 12799  0614  00D0               	movwf	___flmul@prod+2
 12800  0615  0843               	movf	??___flmul+1,w
 12801  0616  00CF               	movwf	___flmul@prod+1
 12802  0617  0842               	movf	??___flmul,w
 12803  0618  00CE               	movwf	___flmul@prod
 12804  0619  083B               	movf	___flmul@b+1,w
 12805  061A  00C2               	movwf	??___flmul
 12806  061B  0842               	movf	??___flmul,w
 12807  061C  00F0               	movwf	__Umul8_16@multiplicand
 12808  061D  083F               	movf	___flmul@a+1,w
 12809  061E  3190  20E9  3185   	fcall	__Umul8_16
 12810  0621  0871               	movf	?__Umul8_16+1,w
 12811  0622  0020               	movlb	0	; select bank0
 12812  0623  00D3               	movwf	___flmul@temp+1
 12813  0624  0870               	movf	?__Umul8_16,w
 12814  0625  00D2               	movwf	___flmul@temp
 12815  0626                     l3699:
 12816  0626  0852               	movf	___flmul@temp,w
 12817  0627  00C2               	movwf	??___flmul
 12818  0628  01C3               	clrf	??___flmul+1
 12819  0629  01C4               	clrf	??___flmul+2
 12820  062A  01C5               	clrf	??___flmul+3
 12821  062B  0842               	movf	??___flmul,w
 12822  062C  07C8               	addwf	___flmul@grs,f
 12823  062D  0843               	movf	??___flmul+1,w
 12824  062E  3DC9               	addwfc	___flmul@grs+1,f
 12825  062F  0844               	movf	??___flmul+2,w
 12826  0630  3DCA               	addwfc	___flmul@grs+2,f
 12827  0631  0845               	movf	??___flmul+3,w
 12828  0632  3DCB               	addwfc	___flmul@grs+3,f
 12829  0633                     l3701:
 12830  0633  0853               	movf	___flmul@temp+1,w
 12831  0634  00C2               	movwf	??___flmul
 12832  0635  01C3               	clrf	??___flmul+1
 12833  0636  01C4               	clrf	??___flmul+2
 12834  0637  01C5               	clrf	??___flmul+3
 12835  0638  0842               	movf	??___flmul,w
 12836  0639  07CE               	addwf	___flmul@prod,f
 12837  063A  0843               	movf	??___flmul+1,w
 12838  063B  3DCF               	addwfc	___flmul@prod+1,f
 12839  063C  0844               	movf	??___flmul+2,w
 12840  063D  3DD0               	addwfc	___flmul@prod+2,f
 12841  063E  0845               	movf	??___flmul+3,w
 12842  063F  3DD1               	addwfc	___flmul@prod+3,f
 12843  0640  083C               	movf	___flmul@b+2,w
 12844  0641  00C2               	movwf	??___flmul
 12845  0642  0842               	movf	??___flmul,w
 12846  0643  00F0               	movwf	__Umul8_16@multiplicand
 12847  0644  083E               	movf	___flmul@a,w
 12848  0645  3190  20E9  3185   	fcall	__Umul8_16
 12849  0648  0871               	movf	?__Umul8_16+1,w
 12850  0649  0020               	movlb	0	; select bank0
 12851  064A  00D3               	movwf	___flmul@temp+1
 12852  064B  0870               	movf	?__Umul8_16,w
 12853  064C  00D2               	movwf	___flmul@temp
 12854  064D                     l3703:
 12855  064D  0852               	movf	___flmul@temp,w
 12856  064E  00C2               	movwf	??___flmul
 12857  064F  01C3               	clrf	??___flmul+1
 12858  0650  01C4               	clrf	??___flmul+2
 12859  0651  01C5               	clrf	??___flmul+3
 12860  0652  0842               	movf	??___flmul,w
 12861  0653  07C8               	addwf	___flmul@grs,f
 12862  0654  0843               	movf	??___flmul+1,w
 12863  0655  3DC9               	addwfc	___flmul@grs+1,f
 12864  0656  0844               	movf	??___flmul+2,w
 12865  0657  3DCA               	addwfc	___flmul@grs+2,f
 12866  0658  0845               	movf	??___flmul+3,w
 12867  0659  3DCB               	addwfc	___flmul@grs+3,f
 12868  065A                     l3705:
 12869  065A  0853               	movf	___flmul@temp+1,w
 12870  065B  00C2               	movwf	??___flmul
 12871  065C  01C3               	clrf	??___flmul+1
 12872  065D  01C4               	clrf	??___flmul+2
 12873  065E  01C5               	clrf	??___flmul+3
 12874  065F  0842               	movf	??___flmul,w
 12875  0660  07CE               	addwf	___flmul@prod,f
 12876  0661  0843               	movf	??___flmul+1,w
 12877  0662  3DCF               	addwfc	___flmul@prod+1,f
 12878  0663  0844               	movf	??___flmul+2,w
 12879  0664  3DD0               	addwfc	___flmul@prod+2,f
 12880  0665  0845               	movf	??___flmul+3,w
 12881  0666  3DD1               	addwfc	___flmul@prod+3,f
 12882  0667                     l3707:
 12883  0667  3008               	movlw	8
 12884  0668                     u4385:
 12885  0668  35C8               	lslf	___flmul@grs,f
 12886  0669  0DC9               	rlf	___flmul@grs+1,f
 12887  066A  0DCA               	rlf	___flmul@grs+2,f
 12888  066B  0DCB               	rlf	___flmul@grs+3,f
 12889  066C  0B89               	decfsz	9,f
 12890  066D  2E68               	goto	u4385
 12891  066E                     l3709:
 12892  066E  083B               	movf	___flmul@b+1,w
 12893  066F  00C2               	movwf	??___flmul
 12894  0670  0842               	movf	??___flmul,w
 12895  0671  00F0               	movwf	__Umul8_16@multiplicand
 12896  0672  083E               	movf	___flmul@a,w
 12897  0673  3190  20E9  3185   	fcall	__Umul8_16
 12898  0676  0871               	movf	?__Umul8_16+1,w
 12899  0677  0020               	movlb	0	; select bank0
 12900  0678  00D3               	movwf	___flmul@temp+1
 12901  0679  0870               	movf	?__Umul8_16,w
 12902  067A  00D2               	movwf	___flmul@temp
 12903  067B                     l3711:
 12904  067B  0852               	movf	___flmul@temp,w
 12905  067C  07C8               	addwf	___flmul@grs,f
 12906  067D  0853               	movf	___flmul@temp+1,w
 12907  067E  3DC9               	addwfc	___flmul@grs+1,f
 12908  067F  3000               	movlw	0
 12909  0680  3DCA               	addwfc	___flmul@grs+2,f
 12910  0681  3DCB               	addwfc	___flmul@grs+3,f
 12911  0682                     l3713:
 12912  0682  083A               	movf	___flmul@b,w
 12913  0683  00C2               	movwf	??___flmul
 12914  0684  0842               	movf	??___flmul,w
 12915  0685  00F0               	movwf	__Umul8_16@multiplicand
 12916  0686  083F               	movf	___flmul@a+1,w
 12917  0687  3190  20E9  3185   	fcall	__Umul8_16
 12918  068A  0871               	movf	?__Umul8_16+1,w
 12919  068B  0020               	movlb	0	; select bank0
 12920  068C  00D3               	movwf	___flmul@temp+1
 12921  068D  0870               	movf	?__Umul8_16,w
 12922  068E  00D2               	movwf	___flmul@temp
 12923  068F                     l3715:
 12924  068F  0852               	movf	___flmul@temp,w
 12925  0690  07C8               	addwf	___flmul@grs,f
 12926  0691  0853               	movf	___flmul@temp+1,w
 12927  0692  3DC9               	addwfc	___flmul@grs+1,f
 12928  0693  3000               	movlw	0
 12929  0694  3DCA               	addwfc	___flmul@grs+2,f
 12930  0695  3DCB               	addwfc	___flmul@grs+3,f
 12931  0696                     l3717:
 12932  0696  3008               	movlw	8
 12933  0697                     u4395:
 12934  0697  35C8               	lslf	___flmul@grs,f
 12935  0698  0DC9               	rlf	___flmul@grs+1,f
 12936  0699  0DCA               	rlf	___flmul@grs+2,f
 12937  069A  0DCB               	rlf	___flmul@grs+3,f
 12938  069B  0B89               	decfsz	9,f
 12939  069C  2E97               	goto	u4395
 12940  069D  083A               	movf	___flmul@b,w
 12941  069E  00C2               	movwf	??___flmul
 12942  069F  0842               	movf	??___flmul,w
 12943  06A0  00F0               	movwf	__Umul8_16@multiplicand
 12944  06A1  083E               	movf	___flmul@a,w
 12945  06A2  3190  20E9  3185   	fcall	__Umul8_16
 12946  06A5  0871               	movf	?__Umul8_16+1,w
 12947  06A6  0020               	movlb	0	; select bank0
 12948  06A7  00D3               	movwf	___flmul@temp+1
 12949  06A8  0870               	movf	?__Umul8_16,w
 12950  06A9  00D2               	movwf	___flmul@temp
 12951  06AA                     l3719:
 12952  06AA  0852               	movf	___flmul@temp,w
 12953  06AB  07C8               	addwf	___flmul@grs,f
 12954  06AC  0853               	movf	___flmul@temp+1,w
 12955  06AD  3DC9               	addwfc	___flmul@grs+1,f
 12956  06AE  3000               	movlw	0
 12957  06AF  3DCA               	addwfc	___flmul@grs+2,f
 12958  06B0  3DCB               	addwfc	___flmul@grs+3,f
 12959  06B1                     l3721:
 12960  06B1  083B               	movf	___flmul@b+1,w
 12961  06B2  00C2               	movwf	??___flmul
 12962  06B3  0842               	movf	??___flmul,w
 12963  06B4  00F0               	movwf	__Umul8_16@multiplicand
 12964  06B5  0840               	movf	___flmul@a+2,w
 12965  06B6  3190  20E9  3185   	fcall	__Umul8_16
 12966  06B9  0871               	movf	?__Umul8_16+1,w
 12967  06BA  0020               	movlb	0	; select bank0
 12968  06BB  00D3               	movwf	___flmul@temp+1
 12969  06BC  0870               	movf	?__Umul8_16,w
 12970  06BD  00D2               	movwf	___flmul@temp
 12971  06BE  0852               	movf	___flmul@temp,w
 12972  06BF  07CE               	addwf	___flmul@prod,f
 12973  06C0  0853               	movf	___flmul@temp+1,w
 12974  06C1  3DCF               	addwfc	___flmul@prod+1,f
 12975  06C2  3000               	movlw	0
 12976  06C3  3DD0               	addwfc	___flmul@prod+2,f
 12977  06C4  3DD1               	addwfc	___flmul@prod+3,f
 12978  06C5                     l3723:
 12979  06C5  083C               	movf	___flmul@b+2,w
 12980  06C6  00C2               	movwf	??___flmul
 12981  06C7  0842               	movf	??___flmul,w
 12982  06C8  00F0               	movwf	__Umul8_16@multiplicand
 12983  06C9  083F               	movf	___flmul@a+1,w
 12984  06CA  3190  20E9  3185   	fcall	__Umul8_16
 12985  06CD  0871               	movf	?__Umul8_16+1,w
 12986  06CE  0020               	movlb	0	; select bank0
 12987  06CF  00D3               	movwf	___flmul@temp+1
 12988  06D0  0870               	movf	?__Umul8_16,w
 12989  06D1  00D2               	movwf	___flmul@temp
 12990  06D2                     l3725:
 12991  06D2  0852               	movf	___flmul@temp,w
 12992  06D3  07CE               	addwf	___flmul@prod,f
 12993  06D4  0853               	movf	___flmul@temp+1,w
 12994  06D5  3DCF               	addwfc	___flmul@prod+1,f
 12995  06D6  3000               	movlw	0
 12996  06D7  3DD0               	addwfc	___flmul@prod+2,f
 12997  06D8  3DD1               	addwfc	___flmul@prod+3,f
 12998  06D9  083C               	movf	___flmul@b+2,w
 12999  06DA  00C2               	movwf	??___flmul
 13000  06DB  0842               	movf	??___flmul,w
 13001  06DC  00F0               	movwf	__Umul8_16@multiplicand
 13002  06DD  0840               	movf	___flmul@a+2,w
 13003  06DE  3190  20E9  3185   	fcall	__Umul8_16
 13004  06E1  0871               	movf	?__Umul8_16+1,w
 13005  06E2  0020               	movlb	0	; select bank0
 13006  06E3  00D3               	movwf	___flmul@temp+1
 13007  06E4  0870               	movf	?__Umul8_16,w
 13008  06E5  00D2               	movwf	___flmul@temp
 13009  06E6                     l3727:
 13010  06E6  0852               	movf	___flmul@temp,w
 13011  06E7  00C2               	movwf	??___flmul
 13012  06E8  0853               	movf	___flmul@temp+1,w
 13013  06E9  00C3               	movwf	??___flmul+1
 13014  06EA  01C4               	clrf	??___flmul+2
 13015  06EB  01C5               	clrf	??___flmul+3
 13016  06EC  3008               	movlw	8
 13017  06ED                     u4405:
 13018  06ED  35C2               	lslf	??___flmul,f
 13019  06EE  0DC3               	rlf	??___flmul+1,f
 13020  06EF  0DC4               	rlf	??___flmul+2,f
 13021  06F0  0DC5               	rlf	??___flmul+3,f
 13022  06F1                     u4400:
 13023  06F1  0B89               	decfsz	9,f
 13024  06F2  2EED               	goto	u4405
 13025  06F3  0842               	movf	??___flmul,w
 13026  06F4  07CE               	addwf	___flmul@prod,f
 13027  06F5  0843               	movf	??___flmul+1,w
 13028  06F6  3DCF               	addwfc	___flmul@prod+1,f
 13029  06F7  0844               	movf	??___flmul+2,w
 13030  06F8  3DD0               	addwfc	___flmul@prod+2,f
 13031  06F9  0845               	movf	??___flmul+3,w
 13032  06FA  3DD1               	addwfc	___flmul@prod+3,f
 13033  06FB                     l3729:
 13034  06FB  0848               	movf	___flmul@grs,w
 13035  06FC  00C2               	movwf	??___flmul
 13036  06FD  0849               	movf	___flmul@grs+1,w
 13037  06FE  00C3               	movwf	??___flmul+1
 13038  06FF  084A               	movf	___flmul@grs+2,w
 13039  0700  00C4               	movwf	??___flmul+2
 13040  0701  084B               	movf	___flmul@grs+3,w
 13041  0702  00C5               	movwf	??___flmul+3
 13042  0703  3018               	movlw	24
 13043  0704                     u4415:
 13044  0704  36C5               	lsrf	??___flmul+3,f
 13045  0705  0CC4               	rrf	??___flmul+2,f
 13046  0706  0CC3               	rrf	??___flmul+1,f
 13047  0707  0CC2               	rrf	??___flmul,f
 13048  0708                     u4410:
 13049  0708  0B89               	decfsz	9,f
 13050  0709  2F04               	goto	u4415
 13051  070A  0842               	movf	??___flmul,w
 13052  070B  07CE               	addwf	___flmul@prod,f
 13053  070C  0843               	movf	??___flmul+1,w
 13054  070D  3DCF               	addwfc	___flmul@prod+1,f
 13055  070E  0844               	movf	??___flmul+2,w
 13056  070F  3DD0               	addwfc	___flmul@prod+2,f
 13057  0710  0845               	movf	??___flmul+3,w
 13058  0711  3DD1               	addwfc	___flmul@prod+3,f
 13059  0712                     l3731:
 13060  0712  3008               	movlw	8
 13061  0713                     u4425:
 13062  0713  35C8               	lslf	___flmul@grs,f
 13063  0714  0DC9               	rlf	___flmul@grs+1,f
 13064  0715  0DCA               	rlf	___flmul@grs+2,f
 13065  0716  0DCB               	rlf	___flmul@grs+3,f
 13066  0717  0B89               	decfsz	9,f
 13067  0718  2F13               	goto	u4425
 13068  0719                     l3733:
 13069  0719  084D               	movf	___flmul@bexp,w
 13070  071A  074C               	addwf	___flmul@aexp,w
 13071  071B  00C2               	movwf	??___flmul
 13072  071C  01C3               	clrf	??___flmul+1
 13073  071D  0DC3               	rlf	??___flmul+1,f
 13074  071E  0842               	movf	??___flmul,w
 13075  071F  3E82               	addlw	130
 13076  0720  00D2               	movwf	___flmul@temp
 13077  0721  30FF               	movlw	255
 13078  0722  3D43               	addwfc	??___flmul+1,w
 13079  0723  00D3               	movwf	___flmul@temp+1
 13080  0724  2F3C               	goto	l3745
 13081  0725                     l3735:
 13082  0725  3001               	movlw	1
 13083  0726                     u4435:
 13084  0726  35CE               	lslf	___flmul@prod,f
 13085  0727  0DCF               	rlf	___flmul@prod+1,f
 13086  0728  0DD0               	rlf	___flmul@prod+2,f
 13087  0729  0DD1               	rlf	___flmul@prod+3,f
 13088  072A  0B89               	decfsz	9,f
 13089  072B  2F26               	goto	u4435
 13090  072C                     l3737:
 13091  072C  1FCB               	btfss	___flmul@grs+3,7
 13092  072D  2F2F               	goto	u4441
 13093  072E  2F30               	goto	u4440
 13094  072F                     u4441:
 13095  072F  2F31               	goto	l3741
 13096  0730                     u4440:
 13097  0730                     l3739:
 13098  0730  144E               	bsf	___flmul@prod,0
 13099  0731                     l3741:
 13100  0731  3001               	movlw	1
 13101  0732                     u4455:
 13102  0732  35C8               	lslf	___flmul@grs,f
 13103  0733  0DC9               	rlf	___flmul@grs+1,f
 13104  0734  0DCA               	rlf	___flmul@grs+2,f
 13105  0735  0DCB               	rlf	___flmul@grs+3,f
 13106  0736  0B89               	decfsz	9,f
 13107  0737  2F32               	goto	u4455
 13108  0738                     l3743:
 13109  0738  30FF               	movlw	255
 13110  0739  07D2               	addwf	___flmul@temp,f
 13111  073A  30FF               	movlw	255
 13112  073B  3DD3               	addwfc	___flmul@temp+1,f
 13113  073C                     l3745:
 13114  073C  1FD0               	btfss	___flmul@prod+2,7
 13115  073D  2F3F               	goto	u4461
 13116  073E  2F40               	goto	u4460
 13117  073F                     u4461:
 13118  073F  2F25               	goto	l3735
 13119  0740                     u4460:
 13120  0740                     l3747:
 13121  0740  01CC               	clrf	___flmul@aexp
 13122  0741                     l3749:
 13123  0741  1FCB               	btfss	___flmul@grs+3,7
 13124  0742  2F44               	goto	u4471
 13125  0743  2F45               	goto	u4470
 13126  0744                     u4471:
 13127  0744  2F61               	goto	l3757
 13128  0745                     u4470:
 13129  0745                     l3751:
 13130  0745  30FF               	movlw	255
 13131  0746  0548               	andwf	___flmul@grs,w
 13132  0747  00C2               	movwf	??___flmul
 13133  0748  30FF               	movlw	255
 13134  0749  0549               	andwf	___flmul@grs+1,w
 13135  074A  00C3               	movwf	??___flmul+1
 13136  074B  30FF               	movlw	255
 13137  074C  054A               	andwf	___flmul@grs+2,w
 13138  074D  00C4               	movwf	??___flmul+2
 13139  074E  307F               	movlw	127
 13140  074F  054B               	andwf	___flmul@grs+3,w
 13141  0750  00C5               	movwf	??___flmul+3
 13142  0751  0845               	movf	??___flmul+3,w
 13143  0752  0444               	iorwf	??___flmul+2,w
 13144  0753  0443               	iorwf	??___flmul+1,w
 13145  0754  0442               	iorwf	??___flmul,w
 13146  0755  1903               	skipnz
 13147  0756  2F58               	goto	u4481
 13148  0757  2F59               	goto	u4480
 13149  0758                     u4481:
 13150  0758  2F5C               	goto	l922
 13151  0759                     u4480:
 13152  0759                     l3753:
 13153  0759  01CC               	clrf	___flmul@aexp
 13154  075A  0ACC               	incf	___flmul@aexp,f
 13155  075B  2F61               	goto	l3757
 13156  075C                     l922:
 13157  075C  1C4E               	btfss	___flmul@prod,0
 13158  075D  2F5F               	goto	u4491
 13159  075E  2F60               	goto	u4490
 13160  075F                     u4491:
 13161  075F  2F61               	goto	l3757
 13162  0760                     u4490:
 13163  0760  2F59               	goto	l3753
 13164  0761                     l3757:
 13165  0761  084C               	movf	___flmul@aexp,w
 13166  0762  1903               	btfsc	3,2
 13167  0763  2F65               	goto	u4501
 13168  0764  2F66               	goto	u4500
 13169  0765                     u4501:
 13170  0765  2F8E               	goto	l3767
 13171  0766                     u4500:
 13172  0766                     l3759:
 13173  0766  3001               	movlw	1
 13174  0767  07CE               	addwf	___flmul@prod,f
 13175  0768  3000               	movlw	0
 13176  0769  3DCF               	addwfc	___flmul@prod+1,f
 13177  076A  3000               	movlw	0
 13178  076B  3DD0               	addwfc	___flmul@prod+2,f
 13179  076C  3000               	movlw	0
 13180  076D  3DD1               	addwfc	___flmul@prod+3,f
 13181  076E                     l3761:
 13182  076E  1C51               	btfss	___flmul@prod+3,0
 13183  076F  2F71               	goto	u4511
 13184  0770  2F72               	goto	u4510
 13185  0771                     u4511:
 13186  0771  2F8E               	goto	l3767
 13187  0772                     u4510:
 13188  0772                     l3763:
 13189  0772  084E               	movf	___flmul@prod,w
 13190  0773  00C2               	movwf	??___flmul
 13191  0774  084F               	movf	___flmul@prod+1,w
 13192  0775  00C3               	movwf	??___flmul+1
 13193  0776  0850               	movf	___flmul@prod+2,w
 13194  0777  00C4               	movwf	??___flmul+2
 13195  0778  0851               	movf	___flmul@prod+3,w
 13196  0779  00C5               	movwf	??___flmul+3
 13197  077A  3001               	movlw	1
 13198  077B  00C6               	movwf	??___flmul+4
 13199  077C                     u4525:
 13200  077C  37C5               	asrf	??___flmul+3,f
 13201  077D  0CC4               	rrf	??___flmul+2,f
 13202  077E  0CC3               	rrf	??___flmul+1,f
 13203  077F  0CC2               	rrf	??___flmul,f
 13204  0780                     u4520:
 13205  0780  0BC6               	decfsz	??___flmul+4,f
 13206  0781  2F7C               	goto	u4525
 13207  0782  0845               	movf	??___flmul+3,w
 13208  0783  00D1               	movwf	___flmul@prod+3
 13209  0784  0844               	movf	??___flmul+2,w
 13210  0785  00D0               	movwf	___flmul@prod+2
 13211  0786  0843               	movf	??___flmul+1,w
 13212  0787  00CF               	movwf	___flmul@prod+1
 13213  0788  0842               	movf	??___flmul,w
 13214  0789  00CE               	movwf	___flmul@prod
 13215  078A                     l3765:
 13216  078A  3001               	movlw	1
 13217  078B  07D2               	addwf	___flmul@temp,f
 13218  078C  3000               	movlw	0
 13219  078D  3DD3               	addwfc	___flmul@temp+1,f
 13220  078E                     l3767:
 13221  078E  0853               	movf	___flmul@temp+1,w
 13222  078F  3A80               	xorlw	128
 13223  0790  00C2               	movwf	??___flmul
 13224  0791  3080               	movlw	128
 13225  0792  0242               	subwf	??___flmul,w
 13226  0793  1D03               	skipz
 13227  0794  2F97               	goto	u4535
 13228  0795  30FF               	movlw	255
 13229  0796  0252               	subwf	___flmul@temp,w
 13230  0797                     u4535:
 13231  0797  1C03               	skipc
 13232  0798  2F9A               	goto	u4531
 13233  0799  2F9B               	goto	u4530
 13234  079A                     u4531:
 13235  079A  2FA5               	goto	l3771
 13236  079B                     u4530:
 13237  079B                     l3769:
 13238  079B  307F               	movlw	127
 13239  079C  0020               	movlb	0	; select bank0
 13240  079D  00D1               	movwf	___flmul@prod+3
 13241  079E  3080               	movlw	128
 13242  079F  00D0               	movwf	___flmul@prod+2
 13243  07A0  3000               	movlw	0
 13244  07A1  00CF               	movwf	___flmul@prod+1
 13245  07A2  3000               	movlw	0
 13246  07A3  00CE               	movwf	___flmul@prod
 13247  07A4  2FD4               	goto	l928
 13248  07A5                     l3771:
 13249  07A5  0020               	movlb	0	; select bank0
 13250  07A6  0853               	movf	___flmul@temp+1,w
 13251  07A7  3A80               	xorlw	128
 13252  07A8  00C2               	movwf	??___flmul
 13253  07A9  3080               	movlw	128
 13254  07AA  0242               	subwf	??___flmul,w
 13255  07AB  1D03               	skipz
 13256  07AC  2FAF               	goto	u4545
 13257  07AD  3001               	movlw	1
 13258  07AE  0252               	subwf	___flmul@temp,w
 13259  07AF                     u4545:
 13260  07AF  1803               	skipnc
 13261  07B0  2FB2               	goto	u4541
 13262  07B1  2FB3               	goto	u4540
 13263  07B2                     u4541:
 13264  07B2  2FBE               	goto	l3777
 13265  07B3                     u4540:
 13266  07B3                     l3773:
 13267  07B3  3000               	movlw	0
 13268  07B4  0020               	movlb	0	; select bank0
 13269  07B5  00D1               	movwf	___flmul@prod+3
 13270  07B6  3000               	movlw	0
 13271  07B7  00D0               	movwf	___flmul@prod+2
 13272  07B8  3000               	movlw	0
 13273  07B9  00CF               	movwf	___flmul@prod+1
 13274  07BA  3000               	movlw	0
 13275  07BB  00CE               	movwf	___flmul@prod
 13276  07BC                     l3775:
 13277  07BC  01C7               	clrf	___flmul@sign
 13278  07BD  2FD4               	goto	l928
 13279  07BE                     l3777:
 13280  07BE  0020               	movlb	0	; select bank0
 13281  07BF  0852               	movf	___flmul@temp,w
 13282  07C0  00C2               	movwf	??___flmul
 13283  07C1  0842               	movf	??___flmul,w
 13284  07C2  00CD               	movwf	___flmul@bexp
 13285  07C3  30FF               	movlw	255
 13286  07C4  05CE               	andwf	___flmul@prod,f
 13287  07C5  30FF               	movlw	255
 13288  07C6  05CF               	andwf	___flmul@prod+1,f
 13289  07C7  307F               	movlw	127
 13290  07C8  05D0               	andwf	___flmul@prod+2,f
 13291  07C9  3000               	movlw	0
 13292  07CA  05D1               	andwf	___flmul@prod+3,f
 13293  07CB                     l3779:
 13294  07CB  1C4D               	btfss	___flmul@bexp,0
 13295  07CC  2FCE               	goto	u4551
 13296  07CD  2FCF               	goto	u4550
 13297  07CE                     u4551:
 13298  07CE  2FD0               	goto	l3783
 13299  07CF                     u4550:
 13300  07CF                     l3781:
 13301  07CF  17D0               	bsf	___flmul@prod+2,7
 13302  07D0                     l3783:
 13303  07D0  364D               	lsrf	___flmul@bexp,w
 13304  07D1  00C2               	movwf	??___flmul
 13305  07D2  0842               	movf	??___flmul,w
 13306  07D3  00D1               	movwf	___flmul@prod+3
 13307  07D4                     l928:
 13308  07D4  0847               	movf	___flmul@sign,w
 13309  07D5  00C2               	movwf	??___flmul
 13310  07D6  0842               	movf	??___flmul,w
 13311  07D7  04D1               	iorwf	___flmul@prod+3,f
 13312  07D8                     l3785:
 13313  07D8  0851               	movf	___flmul@prod+3,w
 13314  07D9  00BD               	movwf	?___flmul+3
 13315  07DA  0850               	movf	___flmul@prod+2,w
 13316  07DB  00BC               	movwf	?___flmul+2
 13317  07DC  084F               	movf	___flmul@prod+1,w
 13318  07DD  00BB               	movwf	?___flmul+1
 13319  07DE  084E               	movf	___flmul@prod,w
 13320  07DF  00BA               	movwf	?___flmul
 13321  07E0                     l916:
 13322  07E0  0008               	return
 13323  07E1                     __end_of___flmul:
 13324                           
 13325                           	psect	text61
 13326  10E9                     __ptext61:	
 13327 ;; *************** function __Umul8_16 *****************
 13328 ;; Defined at:
 13329 ;;		line 4 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\Umul8_16.c"
 13330 ;; Parameters:    Size  Location     Type
 13331 ;;  multiplier      1    wreg     unsigned char 
 13332 ;;  multiplicand    1    0[COMMON] unsigned char 
 13333 ;; Auto vars:     Size  Location     Type
 13334 ;;  multiplier      1    8[COMMON] unsigned char 
 13335 ;;  word_mpld       2    6[COMMON] unsigned int 
 13336 ;;  product         2    4[COMMON] unsigned int 
 13337 ;; Return value:  Size  Location     Type
 13338 ;;                  2    0[COMMON] unsigned int 
 13339 ;; Registers used:
 13340 ;;		wreg, status,2, status,0
 13341 ;; Tracked objects:
 13342 ;;		On entry : 0/0
 13343 ;;		On exit  : 0/0
 13344 ;;		Unchanged: 0/0
 13345 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 13346 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13347 ;;      Locals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13348 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13349 ;;      Totals:         9       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13350 ;;Total ram usage:        9 bytes
 13351 ;; Hardware stack levels used: 1
 13352 ;; This function calls:
 13353 ;;		Nothing
 13354 ;; This function is called by:
 13355 ;;		___flmul
 13356 ;; This function uses a non-reentrant model
 13357 ;;
 13358                           
 13359                           
 13360                           ;psect for function __Umul8_16
 13361  10E9                     __Umul8_16:
 13362                           
 13363                           ;incstack = 0
 13364                           ; Regs used in __Umul8_16: [wreg+status,2+status,0]
 13365                           ;__Umul8_16@multiplier stored from wreg
 13366  10E9  00F8               	movwf	__Umul8_16@multiplier
 13367  10EA                     l3399:
 13368  10EA  01F4               	clrf	__Umul8_16@product
 13369  10EB  01F5               	clrf	__Umul8_16@product+1
 13370  10EC                     l3401:
 13371  10EC  0870               	movf	__Umul8_16@multiplicand,w
 13372  10ED  00F2               	movwf	??__Umul8_16
 13373  10EE  01F3               	clrf	??__Umul8_16+1
 13374  10EF  0872               	movf	??__Umul8_16,w
 13375  10F0  00F6               	movwf	__Umul8_16@word_mpld
 13376  10F1  0873               	movf	??__Umul8_16+1,w
 13377  10F2  00F7               	movwf	__Umul8_16@word_mpld+1
 13378  10F3                     l3403:
 13379  10F3  1C78               	btfss	__Umul8_16@multiplier,0
 13380  10F4  28F6               	goto	u4031
 13381  10F5  28F7               	goto	u4030
 13382  10F6                     u4031:
 13383  10F6  28FB               	goto	l935
 13384  10F7                     u4030:
 13385  10F7                     l3405:
 13386  10F7  0876               	movf	__Umul8_16@word_mpld,w
 13387  10F8  07F4               	addwf	__Umul8_16@product,f
 13388  10F9  0877               	movf	__Umul8_16@word_mpld+1,w
 13389  10FA  3DF5               	addwfc	__Umul8_16@product+1,f
 13390  10FB                     l935:
 13391  10FB  3001               	movlw	1
 13392  10FC                     u4045:
 13393  10FC  35F6               	lslf	__Umul8_16@word_mpld,f
 13394  10FD  0DF7               	rlf	__Umul8_16@word_mpld+1,f
 13395  10FE  0B89               	decfsz	9,f
 13396  10FF  28FC               	goto	u4045
 13397  1100  1003               	clrc
 13398  1101  0CF8               	rrf	__Umul8_16@multiplier,f
 13399  1102                     l3407:
 13400  1102  0878               	movf	__Umul8_16@multiplier,w
 13401  1103  1D03               	btfss	3,2
 13402  1104  2906               	goto	u4051
 13403  1105  2907               	goto	u4050
 13404  1106                     u4051:
 13405  1106  28F3               	goto	l3403
 13406  1107                     u4050:
 13407  1107                     l3409:
 13408  1107  0875               	movf	__Umul8_16@product+1,w
 13409  1108  00F1               	movwf	?__Umul8_16+1
 13410  1109  0874               	movf	__Umul8_16@product,w
 13411  110A  00F0               	movwf	?__Umul8_16
 13412  110B                     l937:
 13413  110B  0008               	return
 13414  110C                     __end_of__Umul8_16:
 13415                           
 13416                           	psect	text62
 13417  1F4F                     __ptext62:	
 13418 ;; *************** function _SYSTEM_Initialize *****************
 13419 ;; Defined at:
 13420 ;;		line 50 in file "mcc_generated_files/mcc.c"
 13421 ;; Parameters:    Size  Location     Type
 13422 ;;		None
 13423 ;; Auto vars:     Size  Location     Type
 13424 ;;		None
 13425 ;; Return value:  Size  Location     Type
 13426 ;;                  1    wreg      void 
 13427 ;; Registers used:
 13428 ;;		wreg, status,2, status,0, pclath, cstack
 13429 ;; Tracked objects:
 13430 ;;		On entry : 0/0
 13431 ;;		On exit  : 0/0
 13432 ;;		Unchanged: 0/0
 13433 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 13434 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13435 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13436 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13437 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13438 ;;Total ram usage:        0 bytes
 13439 ;; Hardware stack levels used: 1
 13440 ;; Hardware stack levels required when called: 1
 13441 ;; This function calls:
 13442 ;;		_OSCILLATOR_Initialize
 13443 ;;		_PIN_MANAGER_Initialize
 13444 ;;		_WDT_Initialize
 13445 ;; This function is called by:
 13446 ;;		_main
 13447 ;; This function uses a non-reentrant model
 13448 ;;
 13449                           
 13450                           
 13451                           ;psect for function _SYSTEM_Initialize
 13452  1F4F                     _SYSTEM_Initialize:
 13453  1F4F                     l3789:	
 13454                           ;incstack = 0
 13455                           ; Regs used in _SYSTEM_Initialize: [wreg+status,2+status,0+pclath+cstack]
 13456                           
 13457                           
 13458                           ;mcc_generated_files/mcc.c: 53:     PIN_MANAGER_Initialize();
 13459  1F4F  3190  20B3  319F   	fcall	_PIN_MANAGER_Initialize
 13460                           
 13461                           ;mcc_generated_files/mcc.c: 54:     OSCILLATOR_Initialize();
 13462  1F52  319F  2740  319F   	fcall	_OSCILLATOR_Initialize
 13463                           
 13464                           ;mcc_generated_files/mcc.c: 55:     WDT_Initialize();
 13465  1F55  319F  2736  319F   	fcall	_WDT_Initialize
 13466  1F58                     l51:
 13467  1F58  0008               	return
 13468  1F59                     __end_of_SYSTEM_Initialize:
 13469                           
 13470                           	psect	text63
 13471  1F36                     __ptext63:	
 13472 ;; *************** function _WDT_Initialize *****************
 13473 ;; Defined at:
 13474 ;;		line 68 in file "mcc_generated_files/mcc.c"
 13475 ;; Parameters:    Size  Location     Type
 13476 ;;		None
 13477 ;; Auto vars:     Size  Location     Type
 13478 ;;		None
 13479 ;; Return value:  Size  Location     Type
 13480 ;;                  1    wreg      void 
 13481 ;; Registers used:
 13482 ;;		wreg
 13483 ;; Tracked objects:
 13484 ;;		On entry : 0/0
 13485 ;;		On exit  : 0/0
 13486 ;;		Unchanged: 0/0
 13487 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 13488 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13489 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13490 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13491 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13492 ;;Total ram usage:        0 bytes
 13493 ;; Hardware stack levels used: 1
 13494 ;; This function calls:
 13495 ;;		Nothing
 13496 ;; This function is called by:
 13497 ;;		_SYSTEM_Initialize
 13498 ;; This function uses a non-reentrant model
 13499 ;;
 13500                           
 13501                           
 13502                           ;psect for function _WDT_Initialize
 13503  1F36                     _WDT_Initialize:
 13504  1F36                     l3491:	
 13505                           ;incstack = 0
 13506                           ; Regs used in _WDT_Initialize: [wreg]
 13507                           
 13508                           
 13509                           ;mcc_generated_files/mcc.c: 71:     WDTCON = 0x16;
 13510  1F36  3016               	movlw	22
 13511  1F37  0021               	movlb	1	; select bank1
 13512  1F38  0097               	movwf	23	;volatile
 13513  1F39                     l57:
 13514  1F39  0008               	return
 13515  1F3A                     __end_of_WDT_Initialize:
 13516                           
 13517                           	psect	text64
 13518  10B3                     __ptext64:	
 13519 ;; *************** function _PIN_MANAGER_Initialize *****************
 13520 ;; Defined at:
 13521 ;;		line 55 in file "mcc_generated_files/pin_manager.c"
 13522 ;; Parameters:    Size  Location     Type
 13523 ;;		None
 13524 ;; Auto vars:     Size  Location     Type
 13525 ;;		None
 13526 ;; Return value:  Size  Location     Type
 13527 ;;                  1    wreg      void 
 13528 ;; Registers used:
 13529 ;;		wreg, status,2
 13530 ;; Tracked objects:
 13531 ;;		On entry : 0/0
 13532 ;;		On exit  : 0/0
 13533 ;;		Unchanged: 0/0
 13534 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 13535 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13536 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13537 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13538 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13539 ;;Total ram usage:        0 bytes
 13540 ;; Hardware stack levels used: 1
 13541 ;; This function calls:
 13542 ;;		Nothing
 13543 ;; This function is called by:
 13544 ;;		_SYSTEM_Initialize
 13545 ;; This function uses a non-reentrant model
 13546 ;;
 13547                           
 13548                           
 13549                           ;psect for function _PIN_MANAGER_Initialize
 13550  10B3                     _PIN_MANAGER_Initialize:
 13551  10B3                     l3469:	
 13552                           ;incstack = 0
 13553                           ; Regs used in _PIN_MANAGER_Initialize: [wreg+status,2]
 13554                           
 13555                           
 13556                           ;mcc_generated_files/pin_manager.c: 60:     LATE = 0x00;
 13557  10B3  0022               	movlb	2	; select bank2
 13558  10B4  0190               	clrf	16	;volatile
 13559                           
 13560                           ;mcc_generated_files/pin_manager.c: 61:     LATA = 0x00;
 13561  10B5  018C               	clrf	12	;volatile
 13562                           
 13563                           ;mcc_generated_files/pin_manager.c: 62:     LATB = 0x00;
 13564  10B6  018D               	clrf	13	;volatile
 13565                           
 13566                           ;mcc_generated_files/pin_manager.c: 63:     LATC = 0x00;
 13567  10B7  018E               	clrf	14	;volatile
 13568  10B8                     l3471:
 13569                           
 13570                           ;mcc_generated_files/pin_manager.c: 68:     TRISE = 0x08;
 13571  10B8  3008               	movlw	8
 13572  10B9  0021               	movlb	1	; select bank1
 13573  10BA  0090               	movwf	16	;volatile
 13574  10BB                     l3473:
 13575                           
 13576                           ;mcc_generated_files/pin_manager.c: 69:     TRISA = 0xFF;
 13577  10BB  30FF               	movlw	255
 13578  10BC  008C               	movwf	12	;volatile
 13579  10BD                     l3475:
 13580                           
 13581                           ;mcc_generated_files/pin_manager.c: 70:     TRISB = 0xFF;
 13582  10BD  30FF               	movlw	255
 13583  10BE  008D               	movwf	13	;volatile
 13584  10BF                     l3477:
 13585                           
 13586                           ;mcc_generated_files/pin_manager.c: 71:     TRISC = 0xFF;
 13587  10BF  30FF               	movlw	255
 13588  10C0  008E               	movwf	14	;volatile
 13589  10C1                     l3479:
 13590                           
 13591                           ;mcc_generated_files/pin_manager.c: 76:     ANSELB = 0xFE;
 13592  10C1  30FE               	movlw	254
 13593  10C2  0023               	movlb	3	; select bank3
 13594  10C3  008D               	movwf	13	;volatile
 13595  10C4                     l3481:
 13596                           
 13597                           ;mcc_generated_files/pin_manager.c: 77:     ANSELA = 0x1F;
 13598  10C4  301F               	movlw	31
 13599  10C5  008C               	movwf	12	;volatile
 13600                           
 13601                           ;mcc_generated_files/pin_manager.c: 82:     WPUE = 0x00;
 13602  10C6  0024               	movlb	4	; select bank4
 13603  10C7  0190               	clrf	16	;volatile
 13604                           
 13605                           ;mcc_generated_files/pin_manager.c: 83:     WPUB = 0x00;
 13606  10C8  018D               	clrf	13	;volatile
 13607  10C9                     l3483:
 13608                           
 13609                           ;mcc_generated_files/pin_manager.c: 84:     OPTION_REGbits.nWPUEN = 1;
 13610  10C9  0021               	movlb	1	; select bank1
 13611  10CA  1795               	bsf	21,7	;volatile
 13612                           
 13613                           ;mcc_generated_files/pin_manager.c: 90:     APFCON = 0x00;
 13614  10CB  0022               	movlb	2	; select bank2
 13615  10CC  019D               	clrf	29	;volatile
 13616  10CD                     l31:
 13617  10CD  0008               	return
 13618  10CE                     __end_of_PIN_MANAGER_Initialize:
 13619                           
 13620                           	psect	text65
 13621  1F40                     __ptext65:	
 13622 ;; *************** function _OSCILLATOR_Initialize *****************
 13623 ;; Defined at:
 13624 ;;		line 58 in file "mcc_generated_files/mcc.c"
 13625 ;; Parameters:    Size  Location     Type
 13626 ;;		None
 13627 ;; Auto vars:     Size  Location     Type
 13628 ;;		None
 13629 ;; Return value:  Size  Location     Type
 13630 ;;                  1    wreg      void 
 13631 ;; Registers used:
 13632 ;;		wreg, status,2
 13633 ;; Tracked objects:
 13634 ;;		On entry : 0/0
 13635 ;;		On exit  : 0/0
 13636 ;;		Unchanged: 0/0
 13637 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 13638 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13639 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13640 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13641 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13642 ;;Total ram usage:        0 bytes
 13643 ;; Hardware stack levels used: 1
 13644 ;; This function calls:
 13645 ;;		Nothing
 13646 ;; This function is called by:
 13647 ;;		_SYSTEM_Initialize
 13648 ;; This function uses a non-reentrant model
 13649 ;;
 13650                           
 13651                           
 13652                           ;psect for function _OSCILLATOR_Initialize
 13653  1F40                     _OSCILLATOR_Initialize:
 13654  1F40                     l3485:	
 13655                           ;incstack = 0
 13656                           ; Regs used in _OSCILLATOR_Initialize: [wreg+status,2]
 13657                           
 13658                           
 13659                           ;mcc_generated_files/mcc.c: 61:     OSCCON = 0x70;
 13660  1F40  3070               	movlw	112
 13661  1F41  0021               	movlb	1	; select bank1
 13662  1F42  0099               	movwf	25	;volatile
 13663  1F43                     l3487:
 13664                           
 13665                           ;mcc_generated_files/mcc.c: 63:     OSCTUNE = 0x00;
 13666  1F43  0198               	clrf	24	;volatile
 13667  1F44                     l3489:
 13668                           
 13669                           ;mcc_generated_files/mcc.c: 65:     BORCON = 0x00;
 13670  1F44  0022               	movlb	2	; select bank2
 13671  1F45  0196               	clrf	22	;volatile
 13672  1F46                     l54:
 13673  1F46  0008               	return
 13674  1F47                     __end_of_OSCILLATOR_Initialize:
 13675  007E                     btemp	set	126	;btemp
 13676  007E                     wtemp0	set	126
 13677                           
 13678                           	psect	config
 13679                           
 13680                           ;Config register CONFIG1 @ 0x8007
 13681                           ;	Oscillator Selection
 13682                           ;	FOSC = INTOSC, INTOSC oscillator: I/O function on CLKIN pin
 13683                           ;	Watchdog Timer Enable
 13684                           ;	WDTE = OFF, WDT disabled
 13685                           ;	Power-up Timer Enable
 13686                           ;	PWRTE = OFF, PWRT disabled
 13687                           ;	MCLR Pin Function Select
 13688                           ;	MCLRE = ON, MCLR/VPP pin function is MCLR
 13689                           ;	Flash Program Memory Code Protection
 13690                           ;	CP = OFF, Program memory code protection is disabled
 13691                           ;	Data Memory Code Protection
 13692                           ;	CPD = OFF, Data memory code protection is disabled
 13693                           ;	Brown-out Reset Enable
 13694                           ;	BOREN = ON, Brown-out Reset enabled
 13695                           ;	Clock Out Enable
 13696                           ;	CLKOUTEN = OFF, CLKOUT function is disabled. I/O or oscillator function on the CLKOUT 
      +                          pin
 13697                           ;	Internal/External Switchover
 13698                           ;	IESO = ON, Internal/External Switchover mode is enabled
 13699                           ;	Fail-Safe Clock Monitor Enable
 13700                           ;	FCMEN = ON, Fail-Safe Clock Monitor is enabled
 13701  8007                     	org	32775
 13702  8007  3FE4               	dw	16356
 13703                           
 13704                           ;Config register CONFIG2 @ 0x8008
 13705                           ;	Flash Memory Self-Write Protection
 13706                           ;	WRT = OFF, Write protection off
 13707                           ;	Voltage Regulator Capacitor Enable
 13708                           ;	VCAPEN = OFF, All VCAP pin functionality is disabled
 13709                           ;	PLL Enable
 13710                           ;	PLLEN = OFF, 4x PLL disabled
 13711                           ;	Stack Overflow/Underflow Reset Enable
 13712                           ;	STVREN = ON, Stack Overflow or Underflow will cause a Reset
 13713                           ;	Brown-out Reset Voltage Selection
 13714                           ;	BORV = LO, Brown-out Reset Voltage (Vbor), low trip point selected.
 13715                           ;	Low-Voltage Programming Enable
 13716                           ;	LVP = OFF, High-voltage on MCLR/VPP must be used for programming
 13717  8008                     	org	32776
 13718  8008  1EFF               	dw	7935

Data Sizes:
    Strings     61
    Constant    0
    Data        36
    BSS         51
    Persistent  32
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14     14      14
    BANK0            80     80      80
    BANK1            80     80      80
    BANK2            80      0      55
    BANK3            80      0      32
    BANK4            80      0       0
    BANK5            80      0       0
    BANK6            80      0       0
    BANK7            80      0       0
    BANK8            80      0       0
    BANK9            80      0       0
    BANK10           80      0       0
    BANK11           80      0       0
    BANK12           48      0       0

Pointer List with Targets:

    encode_digit@p	PTR struct . size(1) Largest target is 2
		 -> NULL(NULL[0]), main@tm1637(BANK1[2]), 

    set_brigthness@p	PTR struct . size(1) Largest target is 2
		 -> NULL(NULL[0]), main@tm1637(BANK1[2]), 

    strncmp@_r	PTR const unsigned char  size(2) Largest target is 3
		 -> STR_18(CODE[3]), STR_13(CODE[3]), STR_9(CODE[3]), 

    strncmp@r	PTR const unsigned char  size(2) Largest target is 3
		 -> STR_18(CODE[3]), STR_13(CODE[3]), STR_9(CODE[3]), 

    strncmp@_l	PTR const unsigned char  size(2) Largest target is 10
		 -> STR_6(CODE[6]), STR_5(CODE[10]), STR_4(CODE[8]), 

    strncmp@l	PTR const unsigned char  size(2) Largest target is 10
		 -> STR_6(CODE[6]), STR_5(CODE[10]), STR_4(CODE[8]), 

    strlen@s	PTR const unsigned char  size(1) Largest target is 32
		 -> dbuf(BANK3[32]), 

    strlen@a	PTR const unsigned char  size(1) Largest target is 32
		 -> dbuf(BANK3[32]), 

    fputs@s	PTR const unsigned char  size(1) Largest target is 32
		 -> dbuf(BANK3[32]), 

    fputs@fp	PTR struct _IO_FILE size(1) Largest target is 6
		 -> sprintf@f(BANK1[5]), 

    fputc@fp.buffer	PTR unsigned char  size(1) Largest target is 16
		 -> print_gram@row2(BANK1[16]), print_gram@row1(BANK1[16]), initialize@valstr(BANK1[16]), 

    fputc@fp	PTR struct _IO_FILE size(1) Largest target is 6
		 -> sprintf@f(BANK1[5]), 

    vfprintf@ap	PTR PTR void  size(1) Largest target is 1
		 -> sprintf@ap(BANK1[1]), 

    vfprintf@fp	PTR struct _IO_FILE size(1) Largest target is 6
		 -> sprintf@f(BANK1[5]), 

    vfprintf@fmt	PTR const unsigned char  size(2) Largest target is 10
		 -> STR_6(CODE[6]), STR_5(CODE[10]), STR_4(CODE[8]), 

    vfprintf@cfmt	PTR unsigned char  size(2) Largest target is 10
		 -> STR_6(CODE[6]), STR_5(CODE[10]), STR_4(CODE[8]), 

    vfpfcnvrt@fp	PTR struct _IO_FILE size(1) Largest target is 6
		 -> sprintf@f(BANK1[5]), 

    vfpfcnvrt@ap	PTR PTR void  size(1) Largest target is 1
		 -> sprintf@ap(BANK1[1]), 

    vfpfcnvrt@fmt	PTR PTR unsigned char  size(1) Largest target is 2
		 -> vfprintf@cfmt(BANK1[2]), 

    utoa@fp	PTR struct _IO_FILE size(1) Largest target is 6
		 -> sprintf@f(BANK1[5]), 

    dtoa@fp	PTR struct _IO_FILE size(1) Largest target is 6
		 -> sprintf@f(BANK1[5]), 

    pad@fp	PTR struct _IO_FILE size(1) Largest target is 6
		 -> sprintf@f(BANK1[5]), 

    pad@buf	PTR unsigned char  size(1) Largest target is 32
		 -> dbuf(BANK3[32]), 

    sprintf@fmt	PTR const unsigned char  size(2) Largest target is 10
		 -> STR_6(CODE[6]), STR_5(CODE[10]), STR_4(CODE[8]), 

    sprintf@s	PTR unsigned char  size(1) Largest target is 16
		 -> print_gram@row2(BANK1[16]), print_gram@row1(BANK1[16]), initialize@valstr(BANK1[16]), 

    sprintf@ap	PTR void [1] size(1) Largest target is 2
		 -> ?_sprintf(BANK1[2]), 

    S1159_IO_FILE$buffer	PTR unsigned char  size(1) Largest target is 16
		 -> print_gram@row2(BANK1[16]), print_gram@row1(BANK1[16]), initialize@valstr(BANK1[16]), 

    f.buffer	PTR unsigned char  size(1) Largest target is 16
		 -> print_gram@row2(BANK1[16]), print_gram@row1(BANK1[16]), initialize@valstr(BANK1[16]), 

    set_max_gram@p.tm1637	PTR struct . size(1) Largest target is 2
		 -> NULL(NULL[0]), main@tm1637(BANK1[2]), 

    set_max_gram@p.lcd	PTR struct . size(1) Largest target is 4
		 -> NULL(NULL[0]), main@lcd(BANK1[4]), 

    set_max_gram@p.loadcell	PTR struct . size(1) Largest target is 12
		 -> NULL(NULL[0]), main@loadcell(BANK1[12]), 

    print_gram@p.tm1637	PTR struct . size(1) Largest target is 2
		 -> NULL(NULL[0]), main@tm1637(BANK1[2]), 

    print_gram@p.lcd	PTR struct . size(1) Largest target is 4
		 -> NULL(NULL[0]), main@lcd(BANK1[4]), 

    print_gram@p.loadcell	PTR struct . size(1) Largest target is 12
		 -> NULL(NULL[0]), main@loadcell(BANK1[12]), 

    print_gram@p	PTR struct . size(1) Largest target is 9
		 -> main@drink(BANK1[6]), 

    calc_percentage@p.tm1637	PTR struct . size(1) Largest target is 2
		 -> NULL(NULL[0]), main@tm1637(BANK1[2]), 

    calc_percentage@p.lcd	PTR struct . size(1) Largest target is 4
		 -> NULL(NULL[0]), main@lcd(BANK1[4]), 

    calc_percentage@p.loadcell	PTR struct . size(1) Largest target is 12
		 -> NULL(NULL[0]), main@loadcell(BANK1[12]), 

    calc_percentage@p	PTR struct . size(1) Largest target is 9
		 -> main@drink(BANK1[6]), 

    initialize@p.tm1637	PTR struct . size(1) Largest target is 2
		 -> NULL(NULL[0]), main@tm1637(BANK1[2]), 

    initialize@p.lcd	PTR struct . size(1) Largest target is 4
		 -> NULL(NULL[0]), main@lcd(BANK1[4]), 

    initialize@p.loadcell	PTR struct . size(1) Largest target is 12
		 -> NULL(NULL[0]), main@loadcell(BANK1[12]), 

    initialize@p	PTR struct . size(1) Largest target is 9
		 -> main@drink(BANK1[6]), 

    write4bits@p	PTR struct . size(1) Largest target is 4
		 -> NULL(NULL[0]), main@lcd(BANK1[4]), 

    command@p	PTR struct . size(1) Largest target is 4
		 -> NULL(NULL[0]), main@lcd(BANK1[4]), 

    lcd_print_with@str	PTR unsigned char  size(2) Largest target is 16
		 -> print_gram@row2(BANK1[16]), print_gram@row1(BANK1[16]), STR_3(CODE[15]), STR_2(CODE[11]), 

    lcd_print_with@p	PTR struct . size(1) Largest target is 4
		 -> NULL(NULL[0]), main@lcd(BANK1[4]), 

    lcd_print@p	PTR struct . size(1) Largest target is 4
		 -> NULL(NULL[0]), main@lcd(BANK1[4]), 

    lcd_print@str	PTR unsigned char  size(2) Largest target is 16
		 -> print_gram@row2(BANK1[16]), print_gram@row1(BANK1[16]), initialize@valstr(BANK1[16]), STR_3(CODE[15]), 
		 -> STR_2(CODE[11]), STR_1(CODE[2]), 

    lcd_set_cursor@p	PTR struct . size(1) Largest target is 4
		 -> NULL(NULL[0]), main@lcd(BANK1[4]), 

    lcd_clear@p	PTR struct . size(1) Largest target is 4
		 -> NULL(NULL[0]), main@lcd(BANK1[4]), 

    lcd_backlight@p	PTR struct . size(1) Largest target is 4
		 -> NULL(NULL[0]), main@lcd(BANK1[4]), 

    lcd_init@p	PTR struct . size(1) Largest target is 4
		 -> NULL(NULL[0]), main@lcd(BANK1[4]), 

    lcd_cmd@p	PTR struct . size(1) Largest target is 4
		 -> NULL(NULL[0]), main@lcd(BANK1[4]), 

    scale_convert_gram@p	PTR struct . size(1) Largest target is 12
		 -> NULL(NULL[0]), main@loadcell(BANK1[12]), 

    get_scale_val@p	PTR struct . size(1) Largest target is 12
		 -> NULL(NULL[0]), main@loadcell(BANK1[12]), 

    get_CELL_DAT_VAL@p	PTR struct . size(1) Largest target is 12
		 -> NULL(NULL[0]), main@loadcell(BANK1[12]), 

    set_CELL_CLK_HIGH@p	PTR struct . size(1) Largest target is 12
		 -> NULL(NULL[0]), main@loadcell(BANK1[12]), 

    set_CELL_CLK_LOW@p	PTR struct . size(1) Largest target is 12
		 -> NULL(NULL[0]), main@loadcell(BANK1[12]), 

    print_digit@p	PTR struct . size(1) Largest target is 2
		 -> NULL(NULL[0]), main@tm1637(BANK1[2]), 

    initialize_digit@p	PTR struct . size(1) Largest target is 2
		 -> NULL(NULL[0]), main@tm1637(BANK1[2]), 

    set_segments@segments	PTR const unsigned char  size(1) Largest target is 4
		 -> print_digit@data(BANK0[4]), clear_segment@data(COMMON[4]), 

    set_segments@p	PTR struct . size(1) Largest target is 2
		 -> NULL(NULL[0]), main@tm1637(BANK1[2]), 

    write_byte@p	PTR struct . size(1) Largest target is 2
		 -> NULL(NULL[0]), main@tm1637(BANK1[2]), 

    get_DIO_PIN_value@p	PTR struct . size(1) Largest target is 2
		 -> NULL(NULL[0]), main@tm1637(BANK1[2]), 

    stop_segment@p	PTR struct . size(1) Largest target is 2
		 -> NULL(NULL[0]), main@tm1637(BANK1[2]), 

    start_segment@p	PTR struct . size(1) Largest target is 2
		 -> NULL(NULL[0]), main@tm1637(BANK1[2]), 

    DIO_SET_LOW@p	PTR struct . size(1) Largest target is 2
		 -> NULL(NULL[0]), main@tm1637(BANK1[2]), 

    DIO_SET_HIGH@p	PTR struct . size(1) Largest target is 2
		 -> NULL(NULL[0]), main@tm1637(BANK1[2]), 

    DIO_SET_INPUT@p	PTR struct . size(1) Largest target is 2
		 -> NULL(NULL[0]), main@tm1637(BANK1[2]), 

    DIO_SET_OUTPUT@p	PTR struct . size(1) Largest target is 2
		 -> NULL(NULL[0]), main@tm1637(BANK1[2]), 

    CLK_SET_LOW@p	PTR struct . size(1) Largest target is 2
		 -> NULL(NULL[0]), main@tm1637(BANK1[2]), 

    CLK_SET_HIGH@p	PTR struct . size(1) Largest target is 2
		 -> NULL(NULL[0]), main@tm1637(BANK1[2]), 

    CLK_SET_OUTPUT@p	PTR struct . size(1) Largest target is 2
		 -> NULL(NULL[0]), main@tm1637(BANK1[2]), 

    drink.tm1637	PTR struct . size(1) Largest target is 2
		 -> NULL(NULL[0]), main@tm1637(BANK1[2]), 

    drink.lcd	PTR struct . size(1) Largest target is 4
		 -> NULL(NULL[0]), main@lcd(BANK1[4]), 

    drink.loadcell	PTR struct . size(1) Largest target is 12
		 -> NULL(NULL[0]), main@loadcell(BANK1[12]), 

    S223$tm1637	PTR struct . size(1) Largest target is 2
		 -> NULL(NULL[0]), main@tm1637(BANK1[2]), 

    F2853.tm1637	PTR struct . size(1) Largest target is 2
		 -> NULL(NULL[0]), main@tm1637(BANK1[2]), 

    S223$lcd	PTR struct . size(1) Largest target is 4
		 -> NULL(NULL[0]), main@lcd(BANK1[4]), 

    F2853.lcd	PTR struct . size(1) Largest target is 4
		 -> NULL(NULL[0]), main@lcd(BANK1[4]), 

    S223$loadcell	PTR struct . size(1) Largest target is 12
		 -> NULL(NULL[0]), main@loadcell(BANK1[12]), 

    F2853.loadcell	PTR struct . size(1) Largest target is 12
		 -> NULL(NULL[0]), main@loadcell(BANK1[12]), 


Critical Paths under _main in COMMON

    _print_gram->_lcd_print_with
    _print_gram->_print_digit
    _initialize->_lcd_print_with
    _initialize->_print_digit
    _vfpfcnvrt->_utoa
    _utoa->_pad
    _dtoa->_pad
    _pad->_fputs
    _fputs->_fputc
    _abs->___aomod
    _lcd_print_with->_lcd_print
    _lcd_print_with->_lcd_set_cursor
    _lcd_init->_write4bits
    _write4bits->_lcd_cmd
    _lcd_clear->_lcd_print
    _lcd_clear->_lcd_set_cursor
    _lcd_set_cursor->_command
    _lcd_print->_command
    _command->_lcd_cmd
    _lcd_backlight->_lcd_cmd
    _lcd_cmd->_i2c_write
    _initialize_digit->_print_digit
    _print_digit->_set_segments
    _set_segments->_write_byte
    _write_byte->_CLK_SET_HIGH
    _write_byte->_CLK_SET_LOW
    _write_byte->_CLK_SET_OUTPUT
    _write_byte->_DIO_SET_HIGH
    _write_byte->_DIO_SET_INPUT
    _write_byte->_DIO_SET_LOW
    _write_byte->_DIO_SET_OUTPUT
    _write_byte->_get_DIO_PIN_value
    _stop_segment->_CLK_SET_HIGH
    _stop_segment->_CLK_SET_LOW
    _stop_segment->_CLK_SET_OUTPUT
    _stop_segment->_DIO_SET_HIGH
    _stop_segment->_DIO_SET_LOW
    _stop_segment->_DIO_SET_OUTPUT
    _start_segment->_CLK_SET_HIGH
    _start_segment->_CLK_SET_LOW
    _start_segment->_CLK_SET_OUTPUT
    _start_segment->_DIO_SET_HIGH
    _start_segment->_DIO_SET_LOW
    _start_segment->_DIO_SET_OUTPUT
    _encode_digit->___awdiv
    _calc_percentage->___xxtofl
    _scale_convert_gram->___xxtofl
    ___fltol->___xxtofl
    ___fldiv->___xxtofl
    _get_scale_val->___lldiv
    ___flmul->___xxtofl

Critical Paths under _main in BANK0

    _sprintf->_vfprintf
    _vfprintf->_vfpfcnvrt
    _vfpfcnvrt->_dtoa
    _utoa->___lodiv
    _utoa->___lomod
    _dtoa->___aodiv
    _dtoa->___aomod
    _pad->_fputs
    _abs->___aomod
    _lcd_print_with->_lcd_set_cursor
    _lcd_clear->_lcd_set_cursor
    _initialize_digit->_print_digit
    _print_digit->_set_segments
    _calc_percentage->_scale_convert_gram
    _scale_convert_gram->___fltol
    ___fltol->___flmul
    ___flmul->___fldiv

Critical Paths under _main in BANK1

    _main->_print_gram
    _print_gram->_sprintf
    _initialize->_sprintf
    _sprintf->_vfprintf

Critical Paths under _main in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _main in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                26    26      0   88424
                                             54 BANK1     26    26      0
                  _SYSTEM_Initialize
                    _calc_percentage
                         _initialize
                         _print_gram
 ---------------------------------------------------------------------------------
 (1) _print_gram                                          35    35      0   31339
                                             19 BANK1     35    35      0
                          _lcd_clear
                     _lcd_print_with
                        _print_digit
                            _sprintf
 ---------------------------------------------------------------------------------
 (1) _initialize                                          18    18      0   47743
                                             19 BANK1     18    18      0
                      _get_scale_val
                   _initialize_digit
                      _lcd_backlight
                          _lcd_clear
                           _lcd_init
                          _lcd_print
                     _lcd_print_with
                        _print_digit
                            _sprintf
 ---------------------------------------------------------------------------------
 (2) _sprintf                                             16    10      6   11742
                                              5 BANK1     14     8      6
                           _vfprintf
 ---------------------------------------------------------------------------------
 (3) _vfprintf                                             8     5      3   11210
                                             77 BANK0      3     0      3
                                              0 BANK1      5     5      0
                          _vfpfcnvrt
 ---------------------------------------------------------------------------------
 (4) _vfpfcnvrt                                           47    45      2   10889
                                             46 BANK0     31    29      2
                               _dtoa
                              _fputc
                            _strncmp
                               _utoa
 ---------------------------------------------------------------------------------
 (5) _utoa                                                24    16      8    3838
                                             13 COMMON     1     1      0
                                             16 BANK0     23    15      8
                            ___lodiv
                            ___lomod
                                _pad
 ---------------------------------------------------------------------------------
 (6) ___lomod                                             18     2     16     311
                                              0 COMMON     2     2      0
                                              0 BANK0     16     0     16
 ---------------------------------------------------------------------------------
 (6) ___lodiv                                             26    10     16     314
                                              0 COMMON    10    10      0
                                              0 BANK0     16     0     16
 ---------------------------------------------------------------------------------
 (5) _strncmp                                             11     5      6     909
                                              0 COMMON    11     5      6
 ---------------------------------------------------------------------------------
 (5) _dtoa                                                30    22      8    4437
                                             16 BANK0     30    22      8
                            ___aodiv
                            ___aomod
                                _abs
                                _pad
 ---------------------------------------------------------------------------------
 (6) _pad                                                  9     6      3    2722
                                             12 COMMON     1     1      0
                                              4 BANK0      8     5      3
                              _fputc
                              _fputs
                             _strlen
 ---------------------------------------------------------------------------------
 (7) _strlen                                               5     3      2     123
                                              0 COMMON     5     3      2
 ---------------------------------------------------------------------------------
 (7) _fputs                                                8     7      1    1149
                                              8 COMMON     4     3      1
                                              0 BANK0      4     4      0
                              _fputc
 ---------------------------------------------------------------------------------
 (8) _fputc                                                8     5      3     834
                                              0 COMMON     8     5      3
                              _putch
 ---------------------------------------------------------------------------------
 (9) _putch                                                1     1      0       0
 ---------------------------------------------------------------------------------
 (6) _abs                                                  4     2      2     142
                                              3 COMMON     4     2      2
                            ___aomod (ARG)
 ---------------------------------------------------------------------------------
 (6) ___aomod                                             19     3     16     448
                                              0 COMMON     3     3      0
                                              0 BANK0     16     0     16
 ---------------------------------------------------------------------------------
 (6) ___aodiv                                             27    11     16     452
                                              0 COMMON    11    11      0
                                              0 BANK0     16     0     16
 ---------------------------------------------------------------------------------
 (2) _lcd_print_with                                       7     3      4    6154
                                             13 COMMON     1     1      0
                                              6 BANK0      6     2      4
                          _lcd_print
                     _lcd_set_cursor
 ---------------------------------------------------------------------------------
 (2) _lcd_init                                             3     3      0    3155
                                              6 COMMON     3     3      0
                         _write4bits
 ---------------------------------------------------------------------------------
 (3) _write4bits                                           3     2      1    2814
                                              3 COMMON     3     2      1
                            _lcd_cmd
 ---------------------------------------------------------------------------------
 (2) _lcd_clear                                            5     5      0    5268
                                              6 BANK0      5     5      0
                          _lcd_print
                     _lcd_set_cursor
 ---------------------------------------------------------------------------------
 (3) _lcd_set_cursor                                       9     7      2    2659
                                             10 COMMON     3     1      2
                                              0 BANK0      6     6      0
                            _command
 ---------------------------------------------------------------------------------
 (3) _lcd_print                                            5     3      2    2341
                                             10 COMMON     3     1      2
                                              0 BANK0      2     2      0
                            _command
 ---------------------------------------------------------------------------------
 (4) _command                                              7     5      2    1924
                                              3 COMMON     7     5      2
                            _lcd_cmd
 ---------------------------------------------------------------------------------
 (2) _lcd_backlight                                        2     2      0    1233
                                              3 COMMON     2     2      0
                            _lcd_cmd
 ---------------------------------------------------------------------------------
 (5) _lcd_cmd                                              2     1      1    1156
                                              1 COMMON     2     1      1
                          _i2c_start
                           _i2c_stop
                          _i2c_write
 ---------------------------------------------------------------------------------
 (6) _i2c_write                                            1     1      0      22
                                              0 COMMON     1     1      0
                           _i2c_wait
 ---------------------------------------------------------------------------------
 (6) _i2c_stop                                             0     0      0       0
 ---------------------------------------------------------------------------------
 (6) _i2c_start                                            0     0      0       0
                           _i2c_wait
 ---------------------------------------------------------------------------------
 (7) _i2c_wait                                             0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _initialize_digit                                     2     2      0    8211
                                             12 BANK0      2     2      0
                        _print_digit
                     _set_brigthness
 ---------------------------------------------------------------------------------
 (3) _set_brigthness                                       4     2      2     268
                                              0 COMMON     4     2      2
 ---------------------------------------------------------------------------------
 (2) _print_digit                                         11    10      1    7866
                                             13 COMMON     1     0      1
                                              2 BANK0     10    10      0
                            ___awdiv
                            ___awmod
                       _encode_digit
                       _set_segments
 ---------------------------------------------------------------------------------
 (3) _set_segments                                         7     4      3    5118
                                              8 COMMON     5     2      3
                                              0 BANK0      2     2      0
                      _start_segment
                       _stop_segment
                         _write_byte
 ---------------------------------------------------------------------------------
 (4) _write_byte                                           6     5      1    2020
                                              2 COMMON     6     5      1
                       _CLK_SET_HIGH
                        _CLK_SET_LOW
                     _CLK_SET_OUTPUT
                       _DIO_SET_HIGH
                      _DIO_SET_INPUT
                        _DIO_SET_LOW
                     _DIO_SET_OUTPUT
                  _get_DIO_PIN_value
 ---------------------------------------------------------------------------------
 (5) _get_DIO_PIN_value                                    2     2      0     209
                                              0 COMMON     2     2      0
 ---------------------------------------------------------------------------------
 (5) _DIO_SET_INPUT                                        2     2      0      55
                                              0 COMMON     2     2      0
 ---------------------------------------------------------------------------------
 (4) _stop_segment                                         1     1      0    1122
                                              2 COMMON     1     1      0
                       _CLK_SET_HIGH
                        _CLK_SET_LOW
                     _CLK_SET_OUTPUT
                       _DIO_SET_HIGH
                        _DIO_SET_LOW
                     _DIO_SET_OUTPUT
 ---------------------------------------------------------------------------------
 (4) _start_segment                                        1     1      0    1122
                                              2 COMMON     1     1      0
                       _CLK_SET_HIGH
                        _CLK_SET_LOW
                     _CLK_SET_OUTPUT
                       _DIO_SET_HIGH
                        _DIO_SET_LOW
                     _DIO_SET_OUTPUT
 ---------------------------------------------------------------------------------
 (5) _DIO_SET_OUTPUT                                       2     2      0     154
                                              0 COMMON     2     2      0
 ---------------------------------------------------------------------------------
 (5) _DIO_SET_LOW                                          2     2      0     154
                                              0 COMMON     2     2      0
 ---------------------------------------------------------------------------------
 (5) _DIO_SET_HIGH                                         2     2      0     154
                                              0 COMMON     2     2      0
 ---------------------------------------------------------------------------------
 (5) _CLK_SET_OUTPUT                                       2     2      0     121
                                              0 COMMON     2     2      0
 ---------------------------------------------------------------------------------
 (5) _CLK_SET_LOW                                          2     2      0     154
                                              0 COMMON     2     2      0
 ---------------------------------------------------------------------------------
 (5) _CLK_SET_HIGH                                         2     2      0     154
                                              0 COMMON     2     2      0
 ---------------------------------------------------------------------------------
 (3) _encode_digit                                         2     1      1     526
                                              9 COMMON     2     1      1
                            ___awdiv (ARG)
 ---------------------------------------------------------------------------------
 (3) ___awmod                                              7     3      4     752
                                              0 COMMON     7     3      4
 ---------------------------------------------------------------------------------
 (3) ___awdiv                                              9     5      4     756
                                              0 COMMON     9     5      4
 ---------------------------------------------------------------------------------
 (1) _calc_percentage                                      6     6      0    9030
                                             76 BANK0      1     1      0
                                              0 BANK1      5     5      0
                            ___fldiv
                            ___flmul
                            ___fltol
                           ___xxtofl
                      _get_scale_val
                 _scale_convert_gram
 ---------------------------------------------------------------------------------
 (2) _scale_convert_gram                                  13    13      0    2567
                                             63 BANK0     13    13      0
                            ___fldiv
                            ___fltol
                           ___xxtofl
 ---------------------------------------------------------------------------------
 (3) ___xxtofl                                            14    10      4     550
                                              0 COMMON    14    10      4
 ---------------------------------------------------------------------------------
 (3) ___fltol                                             11     7      4     381
                                             52 BANK0     11     7      4
                            ___fldiv (ARG)
                            ___flmul (ARG)
                           ___xxtofl (ARG)
 ---------------------------------------------------------------------------------
 (3) ___fldiv                                             26    18      8    1425
                                              0 BANK0     26    18      8
                           ___xxtofl (ARG)
 ---------------------------------------------------------------------------------
 (2) _get_scale_val                                       19    15      4    1448
                                              0 BANK0     19    15      4
                            ___lldiv
                   _get_CELL_DAT_VAL
                  _set_CELL_CLK_HIGH
                   _set_CELL_CLK_LOW
 ---------------------------------------------------------------------------------
 (3) _set_CELL_CLK_LOW                                     2     2      0     121
                                              0 COMMON     2     2      0
 ---------------------------------------------------------------------------------
 (3) _set_CELL_CLK_HIGH                                    2     2      0      88
                                              0 COMMON     2     2      0
 ---------------------------------------------------------------------------------
 (3) _get_CELL_DAT_VAL                                     6     4      2     275
                                              0 COMMON     6     4      2
 ---------------------------------------------------------------------------------
 (3) ___lldiv                                             14     6      8     314
                                              0 COMMON    14     6      8
 ---------------------------------------------------------------------------------
 (2) ___flmul                                             26    18      8    2417
                                             26 BANK0     26    18      8
                          __Umul8_16
                            ___fldiv (ARG)
                           ___xxtofl (ARG)
 ---------------------------------------------------------------------------------
 (3) __Umul8_16                                            9     7      2     799
                                              0 COMMON     9     7      2
 ---------------------------------------------------------------------------------
 (1) _SYSTEM_Initialize                                    0     0      0       0
              _OSCILLATOR_Initialize
             _PIN_MANAGER_Initialize
                     _WDT_Initialize
 ---------------------------------------------------------------------------------
 (2) _WDT_Initialize                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _PIN_MANAGER_Initialize                               0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _OSCILLATOR_Initialize                                0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 9
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _SYSTEM_Initialize
     _OSCILLATOR_Initialize
     _PIN_MANAGER_Initialize
     _WDT_Initialize
   _calc_percentage
     ___fldiv
       ___xxtofl (ARG)
     ___flmul
       __Umul8_16
       ___fldiv (ARG)
       ___xxtofl (ARG)
     ___fltol
       ___fldiv (ARG)
       ___flmul (ARG)
       ___xxtofl (ARG)
     ___xxtofl
     _get_scale_val
       ___lldiv
       _get_CELL_DAT_VAL
       _set_CELL_CLK_HIGH
       _set_CELL_CLK_LOW
     _scale_convert_gram
       ___fldiv
       ___fltol
       ___xxtofl
   _initialize
     _get_scale_val
     _initialize_digit
       _print_digit
         ___awdiv
         ___awmod
         _encode_digit
           ___awdiv (ARG)
         _set_segments
           _start_segment
             _CLK_SET_HIGH
             _CLK_SET_LOW
             _CLK_SET_OUTPUT
             _DIO_SET_HIGH
             _DIO_SET_LOW
             _DIO_SET_OUTPUT
           _stop_segment
             _CLK_SET_HIGH
             _CLK_SET_LOW
             _CLK_SET_OUTPUT
             _DIO_SET_HIGH
             _DIO_SET_LOW
             _DIO_SET_OUTPUT
           _write_byte
             _CLK_SET_HIGH
             _CLK_SET_LOW
             _CLK_SET_OUTPUT
             _DIO_SET_HIGH
             _DIO_SET_INPUT
             _DIO_SET_LOW
             _DIO_SET_OUTPUT
             _get_DIO_PIN_value
       _set_brigthness
     _lcd_backlight
       _lcd_cmd
         _i2c_start
           _i2c_wait
         _i2c_stop
         _i2c_write
           _i2c_wait
     _lcd_clear
       _lcd_print
         _command
           _lcd_cmd
       _lcd_set_cursor
         _command
     _lcd_init
       _write4bits
         _lcd_cmd
     _lcd_print
     _lcd_print_with
       _lcd_print
       _lcd_set_cursor
     _print_digit
     _sprintf
       _vfprintf
         _vfpfcnvrt
           _dtoa
             ___aodiv
             ___aomod
             _abs
               ___aomod (ARG)
             _pad
               _fputc
                 _putch
               _fputs
                 _fputc
               _strlen
           _fputc
           _strncmp
           _utoa
             ___lodiv
             ___lomod
             _pad
   _print_gram
     _lcd_clear
     _lcd_print_with
     _print_digit
     _sprintf

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             3F0      0       0       0        0.0%
EEDATA             100      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
BITCOMMON            E      0       0       1        0.0%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
COMMON               E      E       E       2      100.0%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
BITSFR2              0      0       0       3        0.0%
SFR2                 0      0       0       3        0.0%
STACK                0      0       0       3        0.0%
BITBANK0            50      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
BANK0               50     50      50       5      100.0%
BITSFR4              0      0       0       5        0.0%
SFR4                 0      0       0       5        0.0%
BITBANK1            50      0       0       6        0.0%
BITSFR5              0      0       0       6        0.0%
SFR5                 0      0       0       6        0.0%
BANK1               50     50      50       7      100.0%
BITSFR6              0      0       0       7        0.0%
SFR6                 0      0       0       7        0.0%
BITBANK2            50      0       0       8        0.0%
BITSFR7              0      0       0       8        0.0%
SFR7                 0      0       0       8        0.0%
BANK2               50      0      37       9       68.8%
BITSFR8              0      0       0       9        0.0%
SFR8                 0      0       0       9        0.0%
BITBANK3            50      0       0      10        0.0%
BITSFR9              0      0       0      10        0.0%
SFR9                 0      0       0      10        0.0%
BANK3               50      0      20      11       40.0%
BITSFR10             0      0       0      11        0.0%
SFR10                0      0       0      11        0.0%
BITBANK4            50      0       0      12        0.0%
BITSFR11             0      0       0      12        0.0%
SFR11                0      0       0      12        0.0%
BANK4               50      0       0      13        0.0%
BITSFR12             0      0       0      13        0.0%
SFR12                0      0       0      13        0.0%
BITBANK5            50      0       0      14        0.0%
BITSFR13             0      0       0      14        0.0%
SFR13                0      0       0      14        0.0%
BANK5               50      0       0      15        0.0%
BITSFR14             0      0       0      15        0.0%
SFR14                0      0       0      15        0.0%
BITBANK6            50      0       0      16        0.0%
BITSFR15             0      0       0      16        0.0%
SFR15                0      0       0      16        0.0%
BANK6               50      0       0      17        0.0%
BITSFR16             0      0       0      17        0.0%
SFR16                0      0       0      17        0.0%
BITBANK7            50      0       0      18        0.0%
BITSFR17             0      0       0      18        0.0%
SFR17                0      0       0      18        0.0%
BANK7               50      0       0      19        0.0%
BITSFR18             0      0       0      19        0.0%
SFR18                0      0       0      19        0.0%
BITSFR19             0      0       0      20        0.0%
SFR19                0      0       0      20        0.0%
ABS                  0      0     105      20        0.0%
BITBANK8            50      0       0      21        0.0%
BITSFR20             0      0       0      21        0.0%
SFR20                0      0       0      21        0.0%
BANK8               50      0       0      22        0.0%
BITSFR21             0      0       0      22        0.0%
SFR21                0      0       0      22        0.0%
BITBANK9            50      0       0      23        0.0%
BITSFR22             0      0       0      23        0.0%
SFR22                0      0       0      23        0.0%
BANK9               50      0       0      24        0.0%
BITSFR23             0      0       0      24        0.0%
SFR23                0      0       0      24        0.0%
BITBANK10           50      0       0      25        0.0%
BITSFR24             0      0       0      25        0.0%
SFR24                0      0       0      25        0.0%
BANK10              50      0       0      26        0.0%
BITSFR25             0      0       0      26        0.0%
SFR25                0      0       0      26        0.0%
BITBANK11           50      0       0      27        0.0%
BITSFR26             0      0       0      27        0.0%
SFR26                0      0       0      27        0.0%
BANK11              50      0       0      28        0.0%
BITSFR27             0      0       0      28        0.0%
SFR27                0      0       0      28        0.0%
BITBANK12           30      0       0      29        0.0%
BITSFR28             0      0       0      29        0.0%
SFR28                0      0       0      29        0.0%
BANK12              30      0       0      30        0.0%
BITSFR29             0      0       0      30        0.0%
SFR29                0      0       0      30        0.0%
BITSFR30             0      0       0      31        0.0%
SFR30                0      0       0      31        0.0%
DATA                 0      0     105      31        0.0%
BITSFR31             0      0       0      32        0.0%
SFR31                0      0       0      32        0.0%


Microchip Technology PIC Macro Assembler V2.32 build 20210201212658 
Symbol Table                                                                                   Sun Dec 19 16:05:43 2021

                   ___fldiv@aexp 0039                     ___fldiv@bexp 0038                     ___fldiv@sign 0031  
         __size_of_start_segment 001A                      _SSPSTATbits 0214                               l31 10CD  
                             l51 1F58                               l54 1F46                               l57 1F39  
                             l81 1FBC                               l75 1FC8                               l84 0006  
                             l78 1FB8                               l87 000A                               l96 1FCD  
                             l99 1FD1                     ___awdiv@sign 0076                     lcd_clear@col 0029  
            __Umul8_16@word_mpld 0076                     lcd_clear@row 0028                              l102 1FD8  
                            l210 12F9                              l221 145E                              l302 0ADE  
                            l215 1FFF                              l208 12BF                              l232 1FEB  
                            l320 11DD                              l209 12F5                              l305 101B  
                            l170 1F76                              l314 1254                              l332 1350  
                            l253 0990                              l229 1F4E                              l173 1F80  
                            l237 0C44                              l246 1F6C                              l182 1F94  
                            l326 112F                              l167 1F8A                              l191 107E  
                            l319 11CA                              l335 10E8                              l280 08ED  
                            l176 1FA8                              l249 1F62                              l185 1F9E  
                            l329 104A                              l363 0A35                              l179 1FB2  
                            l195 1591                              l276 0D27                              l188 1064  
                            l620 0FFF                              l358 17FF                              l366 1521  
                            l720 1662                              l632 0E00                              l713 1677  
                            l633 0E11                              l555 1403                              l723 1677  
                            l299 1032                              l619 0FEE                              l900 0384  
                            l672 0069                              l752 1760                              l922 075C  
                            l762 15F2                              l916 07E0                              l685 0853  
                            l935 10FB                              l759 1770                              l928 07D4  
                            l960 0B01                              l937 110B                              l769 1602  
                            l962 0B8A                              l892 030F                              l876 0231  
                            l973 0B56                              l878 038D                              l974 0B62  
                            l966 0B3C                              l982 117B                              l897 035B  
                            l898 0375                              _abs 107F                              _pad 1351  
                   ___awmod@sign 0076                              wreg 0009                     ___flmul@aexp 004C  
                   ___flmul@bexp 004D                      command@mode 0074                     ___flmul@sign 0047  
                   ___flmul@temp 0052                     ___flmul@prod 004E        get_scale_val@weight_count 002D  
                ?_lcd_set_cursor 007A                   ??_encode_digit 007A                     ___fltol@exp1 005E  
                           l1011 136D                             l1020 00BC                             l1014 138F  
                           l1103 11A4                             l1112 10B2                             l1016 13A9  
                           l1024 00D9                             l1025 00F1                             l1106 0800  
                           l1042 01D9                             l1019 00B3                             ?_abs 0073  
                           l1028 0162                             l1116 14BA                             l1045 0E1D  
                           l1080 1098                             l1064 0589                             l3001 081F  
                           l1057 0EFE                             l1049 0E38                             l3011 083A  
                           l3003 0824                             l1083 1098                             l1076 1216  
                           l3013 083F                             l3005 0828                             l3101 1FF1  
                           l3007 082C                             l3015 0845                             l3111 0BCF  
                           l3103 1FF9                             l1095 12A3                             l3031 03B2  
                           l3023 0390                             l3201 13BA                             l3017 084A  
                           l3009 0836                             l3121 0C37                             l3113 0BEA  
                           l3105 0B8D                             l3033 03C4                             l3025 03A1  
                           l3211 13E5                             l3203 13BD                             l3123 1F64  
                           l3019 084F                             l3115 0BFD                             l3107 0BA1  
                           l3051 0469                             l3043 0410                             l3035 03D5  
                           l3027 03A9                             l3213 13ED                             l3205 13C8  
                           l3141 091D                             l3133 0901                             l3125 1F5A  
                           l3301 0245                             l3117 0C18                             l3109 0BBC  
                           l3061 04AF                             l3045 0428                             l3037 03DD  
                           l3029 03AE                             l3215 13EE                             l3207 13CC  
                           l3151 093E                             l3135 090A                             l3127 08EF  
                           l3303 0249                             l3231 162B                             l3223 1603  
                           l3119 0C2B                             l2511 126E                             l2503 1255  
                           l3071 0516                             l3055 0483                             l3047 0441  
                           l3039 03F6                             l3401 10EC                             l3217 13F5  
                           l3209 13D3                             l3153 0947                             l3145 0928  
                           l3129 08F7                             l3321 0288                             l3313 0260  
                           l3233 162C                             l3225 160F                             l2521 1FBD  
                           l2513 128B                             l2505 125A                             l3081 0555  
                           l3057 0495                             l3065 04C9                             l3049 044A  
                           l3403 10F3                             l3219 13FB                             l3171 0983  
                           l3163 0965                             l3147 0931                             l3139 0914  
                           l3331 02A2                             l3323 028A                             l3315 0270  
                           l3307 0252                             l3235 1634                             l2611 158D  
                           l2603 1575                             l2523 1FC4                             l2515 129B  
                           l2507 125F                             l2531 1194                             l3067 04E1  
                           l3075 0530                             l3059 049D                             l3091 0566  
                           l3405 10F7                             l3165 096E                             l3157 0951  
                           l3501 0C54                             l3325 028F                             l3333 02A9  
                           l3341 02C8                             l3317 0278                             l3309 0257  
                           l3261 01E0                             l3253 1659                             l3245 1642  
                           l3237 1636                             l3229 1618                             l3421 0B09  
                           l3413 0AE0                             l2605 157E                             l3181 11A7  
                           l2621 0F2B                             l2509 1264                             l2525 117E  
                           l2533 109A                             l2701 1751                             l3093 057F  
                           l3077 0542                             l3085 055B                             l3069 04EA  
                           l3407 1102                             l3175 098E                             l3159 095A  
                           l3511 0C78                             l3503 0C5C                             l3351 02E3  
                           l3343 02CE                             l3335 02BB                             l3327 029D  
                           l3319 0280                             l3271 01F3                             l3263 01E4  
                           l3255 1667                             l3239 163A                             l3247 1652  
                           l3431 0B29                             l3415 0AE5                             l2519 1FBD  
                           l2543 1FB3                             l2551 1FD5                             l3191 110F  
                           l3183 11B7                             l2631 0F6F                             l2623 0F35  
                           l2615 0EFF                             l2527 1181                             l2535 109F  
                           l2703 1752                             l2711 15AA                             l3087 0563  
                           l3079 054A                             l3409 1107                             l3169 097A  
                           l3521 0C85                             l3505 0C5E                             l3361 02F4  
                           l3353 02E4                             l3345 02D6                             l3337 02BC  
                           l3329 02A1                             l3281 020B                             l3273 01FB  
                           l3265 01E8                             l3257 166C                             l3441 0B50  
                           l3433 0B2D                             l3425 0B12                             l3417 0AE9  
                           l2553 1F82                             l2561 1FAA                             l2609 1584  
                           l2545 1FB6                             l3193 1118                             l3185 11C1  
                           l3601 0AB5                             l2641 0F8A                             l2633 0F72  
                           l2625 0F54                             l2617 0F00                             l2529 118F  
                           l2537 10A3                             l2721 1353                             l2801 00B8  
                           l2713 15AE                             l2705 1592                             l3531 0CAE  
                           l3523 0C89                             l3507 0C69                             l3371 0319  
                           l3363 02F8                             l3355 02EB                             l3347 02D8  
                           l3339 02C4                             l3291 021E                             l3283 020F  
                           l3275 01FC                             l3267 01E9                             l3259 01DA  
                           l3451 0B81                             l3443 0B5A                             l3435 0B35  
                           l3427 0B17                             l3419 0AF9                             l2555 1F6E  
                           l2563 1F8C                             l3099 1FEC                             l2547 0004  
                           l3611 100F                             l3195 111C                             l3187 11D4  
                           l3179 10CF                             l3603 0ABA                             l2651 0FD0  
                           l2643 0FAC                             l2635 0F7A                             l2627 0F58  
                           l2619 0F0A                             l2539 10AC                             l2731 1370  
                           l2723 1358                             l2811 00EC                             l2803 00CB  
                           l2715 15B2                             l2707 159F                             l3701 0633  
                           l3541 0CB9                             l3533 0CB4                             l3525 0C8E  
                           l3517 0C7A                             l3509 0C74                             l3381 034E  
                           l3373 0321                             l3365 030C                             l3349 02DF  
                           l3357 02EF                             l3293 0226                             l3285 0213  
                           l3269 01EE                             l3277 01FE                             l3453 0B82  
                           l3445 0B64                             l3437 0B43                             l3429 0B22  
                           l2557 1F78                             l2565 1F96                             l2581 1545  
                           l2573 152F                             l2549 1FCA                             l3613 1017  
                           l3197 1126                             l3189 110E                             l3621 1229  
                           l3605 0ACB                             l2645 0FBC                             l2637 0F7E  
                           l2629 0F62                             l2661 0D5E                             l2653 0D28  
                           l2733 137C                             l2725 1361                             l2821 0131  
                           l2813 00F6                             l2805 00D1                             l2901 1494  
                           l2717 15D4                             l2709 15A2                             l3461 11EC  
                           l3471 10B8                             l3711 067B                             l3703 064D  
                           l3199 13AA                             l3551 0CE0                             l3543 0CBD  
                           l3527 0CA5                             l3519 0C81                             l3391 037E  
                           l3383 0369                             l3375 0325                             l3359 02F3  
                           l3295 0227                             l3287 0214                             l3279 0206  
                           l3447 0B78                             l3439 0B4C                             l2559 1FA0  
                           l2591 155A                             l2575 1538                             l2567 1523  
                           l2751 12A5                             l2911 1428                             l3631 124E  
                           l3623 1232                             l3615 1219                             l3607 0ACF  
                           l2647 0FBD                             l2639 0F82                             l2671 0D99  
                           l2663 0D7D                             l2655 0D29                             l2743 107F  
                           l2735 1381                             l2727 1366                             l2831 0198  
                           l2823 0135                             l2815 00F9                             l2807 00E1  
                           l2903 149A                             l2719 15E4                             l3463 1204  
                           l3481 10C4                             l3473 10BB                             l3721 06B1  
                           l3713 0682                             l3705 065A                             l3545 0CC6  
                           l3529 0CA9                             l3553 0CE4                             l3393 0380  
                           l3385 036C                             l3377 033D                             l3369 0314  
                           l3289 0219                             l3297 0229                             l3449 0B7D  
                           l2921 1F47                             l2593 1563                             l2585 154A  
                           l2569 152B                             l2761 12AE                             l2753 12A9  
                           l2913 142B                             l3609 1007                             l3625 1237  
                           l3617 121B                             l3633 1034                             l2649 0FCB  
                           l2681 0DE2                             l2673 0D9D                             l2665 0D8A  
                           l2657 0D33                             l2745 108C                             l2737 1394  
                           l2729 136B                             l2841 01B4                             l2825 0170  
                           l2833 019D                             l2817 00FE                             l2809 00E7  
                           l2905 14AA                             l3465 120E                             l3457 11E0  
                           l3641 1160                             l3801 17F3                             l3483 10C9  
                           l3475 10BD                             l3491 1F36                             l3731 0712  
                           l3723 06C5                             l3715 068F                             l3707 0667  
                           l3651 0590                             l3555 0CEA                             l3547 0CCB  
                           l3539 0CB5                             l3387 0374                             l3379 0341  
                           l3299 0239                             l3571 08BD                             l3563 0856  
                           l3803 0993                             l2747 104C                             l2587 1553  
                           l2579 153C                             l2771 12C7                             l2763 12B2  
                           l2755 12AD                             l2915 1439                             l2931 1329  
                           l3627 1240                             l3619 121D                             l3635 1041  
                           l2675 0DBF                             l2667 0D8D                             l2659 0D54  
                           l2739 139D                             l2843 01B9                             l2835 01A4  
                           l2827 017D                             l2819 012D                             l2691 170F  
                           l2683 16ED                             l2851 0E14                             l3459 11E8  
                           l3643 1162                             l3811 14BD                             l3485 1F40  
                           l3477 10BF                             l3469 10B3                             l3741 0731  
                           l3733 0719                             l3725 06D2                             l3717 0696  
                           l3709 066E                             l3661 05A3                             l3653 0594  
                           l3557 0D0B                             l3549 0CD0                             l3389 037A  
                           l3573 08D9                             l3565 0880                             l3805 09B7  
                           l2941 000B                             l2749 1066                             l2597 1567  
                           l2773 12CB                             l2765 12B6                             l2917 143E  
                           l2909 1406                             l3493 1FDB                             l2933 1332  
                           l2925 12FB                             l3629 1244                             l3581 0A5A  
                           l2677 0DCF                             l2669 0D95                             l2845 01BD  
                           l2837 01A9                             l2829 018A                             l2693 1713  
                           l2685 16F7                             l2861 0E54                             l2853 0E19  
                           l3645 1173                             l3637 1156                             l3813 1513  
                           ?_pad 0024                             l3487 1F43                             l3479 10C1  
                           l3399 10EA                             l3751 0745                             l3743 0738  
                           l3735 0725                             l3727 06E6                             l3719 06AA  
                           l3671 05BE                             l3663 05AB                             l3655 0598  
                           l3559 0D1F                             l3807 09C5                             l2951 001B  
                           l2943 000C                             l2599 1570                             l2775 12D1  
                           l2767 12BB                             l2919 1444                             l3495 1FE5  
                           l2791 102E                             l2783 101D                             l2935 1336  
                           l2927 1318                             l3591 0A84                             l3583 0A61  
                           l3575 0A37                             l2679 0DDD                             l2839 01AE  
                           l2847 01C6                             l2695 1717                             l2687 1704  
                           l2871 0E8B                             l2863 0E57                             l2855 0E2A  
                           l3639 115E                             l3831 1678                             l3489 1F44  
                           l3761 076E                             l3753 0759                             l3737 072C  
                           l3745 073C                             l3729 06FB                             l3681 05D5  
                           l3673 05C2                             l3665 05AD                             l3657 0599  
                           l3649 058A                             l3497 0C47                             l3569 0888  
                           l3809 09CB                             l2961 002F                             l2953 0020  
                           l2945 0010                             l2777 12E8                             l2769 12C3  
                           l2785 1020                             l2937 133E                             l2929 1320  
                           l3593 0A8C                             l3585 0A6C                             l3577 0A43  
                           l2793 006C                             l2697 171F                             l2689 1707  
                           l2881 0EE6                             l2865 0E5C                             l2873 0EB8  
                           l2857 0E30                             l3841 1683                             l3833 167B  
                           l3771 07A5                             l3763 0772                             l3747 0740  
                           l3739 0730                             l3683 05D7                             l3675 05C3  
                           l3667 05B5                             l3659 059E                             l3499 0C4B  
                           l2971 004F                             l2963 0034                             l2955 0024  
                           l2947 0015                             l2779 12ED                             l2787 1027  
                           l2939 1347                             l3595 0A91                             l3587 0A74  
                           l3579 0A4B                             l2795 007C                             l2891 1473  
                           l2699 1741                             l2875 0EBF                             l2883 0EEB  
                           l2867 0E83                             l2859 0E40                             l3851 168B  
                           l3843 1684                             l3835 167D                             l3781 07CF  
                           l3773 07B3                             l3765 078A                             l3757 0761  
                           l3749 0741                             l3693 05F2                             l3685 05DF  
                           l3677 05C8                             l3669 05BA                             l2981 0065  
                           l2973 0050                             l2965 0038                             l2957 0026  
                           l2949 0017                             l2789 102B                             l3597 0AA2  
                           l3589 0A80                             l2797 008F                             l2877 0ECB  
                           l2869 0E87                             l3861 16C4                             l3853 169A  
                           l3845 1687                             l3837 167E                             l3783 07D0  
                           l3775 07BC                             l3759 0766                             l3767 078E  
                           l3695 05FF                             l3687 05E4                             l3679 05CD  
                           l2975 0055                             l2967 003C                             l2959 002C  
                           l2991 080B                             l3599 0AA6                             l2799 0095  
                           l2895 1476                             l2887 145F                             l2879 0ED8  
                           l3791 1773                             l3871 16D5                             l3863 16C8  
                           l3855 16AA                             l3847 1689                             l3839 1681  
                           l3785 07D8                             l3777 07BE                             l3769 079B  
                           l3697 060C                             l3689 05E9                             l2969 004B  
                           l2977 005B                             l2993 080D                             l2985 0801  
                           l2897 1482                             l2889 1467                             l3793 1782  
                           l3873 16D9                             l3865 16CC                             l3857 16B2  
                           l3849 168A                             l3779 07CB                             l3699 0626  
                           l2979 0060                             l2995 0811                             l2987 0802  
                           l2899 148B                             l3795 1791                             l3875 16DD  
                           l3867 16D0                             l3859 16C0                             l3789 1F4F  
                           l2997 0816                             l2989 0806                             l3797 17D3  
                           l3869 16D1                             l2999 081C                             l3799 17EB  
                           STR_1 203B                             STR_2 200F                             STR_3 2000  
                           STR_4 2024                             STR_5 201A                             STR_6 202C  
                           STR_7 2032                             STR_9 2032                             u3000 0198  
                           u3001 0197                             u3010 019D                             u3011 019C  
                           u3020 01A4                             u3100 0EE6                             u3021 01A3  
                           u3005 0194                             u3101 0EE5                             _LATA 010C  
                           u2310 125A                             u3030 01A9                             u3110 0EEB  
                           _LATB 010D                             u2311 1259                             u3031 01A8  
                           u3111 0EEA                             _LATC 010E                             u4000 034E  
                           u3200 001B                             u2400 000A                             u2320 125F  
                           u3040 01B4                             u3120 1473                             u4001 034D  
                           u3201 001A                             u2401 0009                             u2321 125E  
                           u3041 01B3                             u3121 1472                             u3105 0EE2  
                           _LATE 0110                             u4010 0369                             u3210 002C  
                           u2410 1FD1                             u2330 126E                             u3130 148B  
                           u3050 0E19                             u4011 0368                             u3211 002B  
                           u2411 1FD0                             u2331 126D                             u3131 148A  
                           u3051 0E18                             u4020 037E                             u4100 0B28  
                           u3300 0811                             u2500 158D                             u2420 1FD5  
                           u2340 128B                             u3140 1494                             u3060 0E2A  
                           u4021 037D                             u4005 034A                             u4101 0B27  
                           u3301 0810                             u2501 158C                             u2421 1FD4  
                           u2341 128A                             u3141 1493                             u3061 0E29  
                           u4030 10F7                             u3230 003C                             u3310 081C  
                           u2430 152B                             u2350 1FC4                             u2510 0F0A  
                           u3150 149A                             u3070 0EBF                             u4031 10F6  
                           u4015 0365                             u3231 003B                             u3311 081B  
                           u2431 152A                             u2351 1FC3                             u2511 0F09  
                           u3151 1499                             u3071 0EBE                             u4120 0B42  
                           u2440 1538                             u2360 1FC8                             u2600 0FD0  
                           u3160 14AA                             u3080 0ECB                             u3400 03D5  
                           u4200 120E                             u4121 0B41                             u3225 0030  
                           u2441 1537                             u2361 1FC7                             u2601 0FCF  
                           u2345 1287                             u3161 14A9                             u3081 0ECA  
                           u3065 0E26                             u3401 03D4                             u4201 120D  
                           u4050 1107                             u4210 0C69                             u3250 004B  
                           u3330 082C                             u2450 1545                             u3170 1444  
                           u2530 0F35                             u2370 11A4                             u3090 0ED8  
                           u3410 0428                             u4051 1106                             u4211 0C68  
                           u4115 0B36                             u3251 004A                             u3331 082B  
                           u2451 1544                             u3171 1443                             u2531 0F34  
                           u2371 11A3                             u3091 0ED7                             u3411 0427  
                           u4300 0598                             u3500 0931                             u4220 0C74  
                           u4140 0B50                             u4060 0AE5                             u3340 0836  
                           u2460 1553                             u2700 0DE2                             u2620 0D33  
                           u2380 10AC                             u3420 0441                             u4045 10FC  
                           u4301 0597                             u3501 0930                             u4221 0C73  
                           u4141 0B4F                             u4061 0AE4                             u3245 003D  
                           u3341 0835                             u3325 0820                             u2461 1552  
                           u2701 0DE1                             u2621 0D32                             u2381 10AB  
                           u3421 0440                             u4310 059E                             u3510 0947  
                           u4150 0B56                             u4070 0AE9                             u3270 005B  
                           u3190 0010                             u2470 1563                             u2390 1FBC  
                           u2550 0F5F                             u3430 0495                             u4311 059D  
                           u3511 0946                             u4151 0B55                             u4135 0B46  
                           u4071 0AE8                             u3271 005A                             u3255 0047  
                           u3191 000F                             u2471 1562                             u2391 1FBB  
                           u3095 0ED4                             u3431 0494                             u4400 06F1  
                           u4320 05A3                             u3520 095A                             u4240 0CB4  
                           u4160 0B5A                             u4080 0B09                             u3280 0060  
                           u3360 0845                             u2480 1570                             u2560 0F6F  
                           u2640 0D5E                             u2720 16F4                             u2800 15F2  
                           u3440 04E1                             u4321 05A2                             u3521 0959  
                           u4241 0CB3                             u4161 0B59                             u4081 0B08  
                           u3281 005F                             u3265 0051                             u3361 0844  
                           u3345 0832                             u2481 156F                             u3185 130D  
                           u2561 0F6E                             u2641 0D5D                             u2801 15F1  
                           u3441 04E0                             u4410 0708                             u4330 05C2  
                           u3610 13E5                             u3530 096E                             u4250 0CD0  
                           u4170 0B6E                             u3370 084A                             u3290 0806  
                           u2490 157E                             u2570 0F82                             u2810 1358  
                           u2730 1704                             u3450 0542                             u4331 05C1  
                           u3611 13E4                             u3531 096D                             u4251 0CCF  
                           u4235 0C7B                             u3371 0849                             u3355 083B  
                           u3291 0805                             u2491 157D                             u2571 0F81  
                           u2811 1357                             u2731 1703                             u3451 0541  
                           u4500 0766                             u4340 05C8                             u3540 0983  
                           u4260 0CEA                             u3700 1658                             u4180 0B7D  
                           u3460 1FF1                             u2580 0FAC                             u2660 0D8A  
                           u2820 1366                             u2900 0088                             u2740 1717  
                           u3380 03A1                             u4501 0765                             u4405 06ED  
                           u4341 05C7                             u3605 13CD                             u3541 0982  
                           u4261 0CE9                             u3701 1657                             u4181 0B7C  
                           u3461 1FF0                             u2581 0FAB                             u2661 0D89  
                           u2821 1365                             u2741 1716                             u3381 03A0  
                           u4510 0772                             u4350 05CD                             u3630 13FB  
                           u3470 08F7                             u4190 0B81                             u4270 0880  
                           u3550 11C1                             u2590 0FCB                             u2670 0D9D  
                           u2830 138F                             u2910 0095                             u2750 1741  
                           u3390 03C4                             u4511 0771                             u4415 0704  
                           u4351 05CC                             u3631 13FA                             u3615 13E1  
                           u3471 08F6                             u4191 0B80                             u4175 0B6A  
                           u4095 0B1C                             u4271 087F                             u3551 11C0  
                           u2591 0FCA                             u2671 0D9C                             u2831 138E  
                           u2911 0094                             u2751 1740                             u3391 03C3  
                           u4520 0780                             u4440 0730                             u4360 05E4  
                           u3480 090A                             u3800 0239                             u3720 1667  
                           u3640 160F                             u3560 112F                             u4280 1240  
                           u2680 0DBF                             u2840 1394                             u2760 1760  
                           u4600 16BC                             u4441 072F                             u4425 0713  
                           u4361 05E3                             u3625 13EF                             u3481 0909  
                           u3801 0238                             u3721 1666                             u3641 160E  
                           u3561 112E                             u4281 123F                             u2585 0FA8  
                           u2681 0DBE                             u2841 1393                             u2761 175F  
                           u4530 079B                             u4370 05E9                             u3570 13BA  
                           u3490 091D                             u3810 0257                             u3730 166C  
                           u3650 1625                             u4290 124E                             u2690 0DDD  
                           u2850 108C                             u2930 00B8                             u2770 159F  
                           u4531 079A                             u4435 0726                             u4371 05E8  
                           u3571 13B9                             u3491 091C                             u3811 0256  
                           u3731 166B                             u3715 165A                             u4275 087C  
                           u4291 124D                             u2691 0DDC                             u2851 108B  
                           u2835 138B                             u2931 00B7                             u2755 173D  
                           u2771 159E                             u4540 07B3                             u4460 0740  
                           u3820 028F                             u3740 01E8                             u3660 163A  
                           u2860 12B6                             u2940 00CB                             u2780 15B2  
                           u4541 07B2                             u4525 077C                             u4461 073F  
                           u3821 028E                             u3741 01E7                             u3661 1639  
                           u2861 12B5                             u2685 0DBB                             u2941 00CA  
                           u2781 15B1                             u4550 07CF                             u4470 0745  
                           u3590 13CC                             u3910 02E3                             u3750 01EE  
                           u3670 1641                             u2870 12D1                             u2950 00E7  
                           u2790 15D4                             u4551 07CE                             u4535 0797  
                           u4471 0744                             u4455 0732                             u3591 13CB  
                           u3911 02E2                             u3751 01ED                             u3671 1640  
                           u3655 1621                             u2871 12D0                             u2855 1088  
                           u2951 00E6                             u2791 15D3                             u4480 0759  
                           u3760 01F3                             u4560 09C5                             u2880 12ED  
                           u2960 00EC                             u4545 07AF                             u4481 0758  
                           u4385 0668                             u3585 13BE                             u3905 02D9  
                           u3761 01F2                             u4561 09C4                             u2881 12EC  
                           u2961 00EB                             u2945 00C7                             u4617 16E3  
                           u4490 0760                             u3930 02F3                             u3850 02A1  
                           u3770 0213                             u3690 1651                             u2970 0170  
                           u2890 0087                             u4491 075F                             u4395 0697  
                           u3931 02F2                             u3851 02A0                             u3835 0290  
                           u3771 0212                             u3691 1650                             u4707 0AB1  
                           u4627 0A3C                             u2971 016F                             u2891 0085  
                           u2795 15D0                             u3940 02F8                             u3780 0219  
                           u2980 017D                             u3941 02F7                             u3925 02E5  
                           u3845 0297                             u3781 0218                             u3685 1643  
                           u4717 0ABB                             u4637 0A4E                             u2981 017C  
                           u3950 030C                             u3870 02BB                             u3790 021E  
                           u2990 018A                             u4590 1696                             u4807 0CBA  
                           u3951 030B                             u3871 02BA                             u3791 021D  
                           u4727 0ACC                             u4647 0A5D                             u2991 0189  
                           u2975 016C                             u3960 0313                             u3880 02CE  
                           u4817 0CC3                             u3961 0312                             u3881 02CD  
                           u3865 02A3                             u4737 0ADA                             u4657 0A6A  
                           u3970 0319                             u3890 02D6                             u3971 0318  
                           u3891 02D5                             u3875 02B7                             u4747 1333  
                           u4667 0A75                             u2995 0186                             u3980 0325  
                           u3981 0324                             u4757 1018                             u4677 0A81  
                           u3990 0333                             u4767 102F                             u4687 0A92  
                           u4777 0C75                             u4697 0AA3                             u4787 0C86  
                           u3995 032F                             u4797 0CA6                    encode_digit@p 007A  
                           _WPUB 020D                             _WPUE 0210                             abs@a 0073  
                           _dbuf 01A0                  ??_lcd_backlight 0073                             _main 1678  
                           _dtoa 006A                             _prec 0152                    write_byte@ack 0074  
                           _nout 014E                             pad@i 0027                             pad@p 0025  
                           fsr0h 0005                             fsr1h 0007                             indf0 0000  
                           fsr0l 0004                             indf1 0001                             fsr1l 0006  
                           pad@w 0029                             btemp 007E                             _utoa 0E12  
                   print_digit@p 002A                             start 0002                  ___fldiv@new_exp 0032  
                ?_lcd_print_with 0026                initialize_digit@p 002D                            ??_abs 0075  
                          ??_pad 007C   __size_of_OSCILLATOR_Initialize 0007    __end_of_OSCILLATOR_Initialize 1F47  
          __size_of_stop_segment 001A                    ___fltol@sign1 005D                  __end_of___aodiv 1000  
                          ?_main 0070                            ?_dtoa 0030                  __end_of___aomod 0E12  
                __end_of___fldiv 038E                  __end_of___awdiv 006A                            STR_11 2035  
                          STR_13 2035                            STR_16 2038                            STR_18 2038  
                __end_of___awmod 0854                  __end_of___flmul 07E1                  __end_of___fltol 1678  
                __end_of___lldiv 1404                            ?_utoa 0030                  __end_of___lodiv 1771  
                ___awdiv@divisor 0070                  __end_of___lomod 1603                  ___awdiv@counter 0075  
                   vfpfcnvrt@fmt 004E                     vfpfcnvrt@llu 0064                            _TRISA 008C  
                          _TRISB 008D                            _TRISC 008E                            _TRISE 0090  
                   main@loadcell 00DE           scale_convert_gram@temp 0067                     lcd_print@cmd 0020  
                   lcd_print@str 007A                  __end_of_lcd_cmd 1033                  __end_of_command 1351  
                          _flags 0154                   _WDT_Initialize 1F36                            _fputc 1255  
                          _fputs 117C                    _start_segment 104B                   write_byte@data 0075  
                          pad@fp 002B                            _width 0150                            _putch 0800  
                          dtoa@d 0030                            dtoa@i 004C                            dtoa@n 0044  
                          dtoa@p 003D                            dtoa@s 0042                            dtoa@w 0040  
       __size_of_calc_percentage 00A5                            utoa@d 0030                            utoa@i 0045  
                          utoa@n 003D                            utoa@p 0038                            utoa@w 003B  
                          status 0003               _scale_convert_gram 0854                            wtemp0 007E  
                __end_of_sprintf 117C       __size_of_set_CELL_CLK_HIGH 000A                  __end_of_strncmp 14BB  
               ___lodiv@dividend 0028                  ??_get_scale_val 0024             __end_of_CLK_SET_HIGH 1F77  
                __initialization 07E1                     _stop_segment 1065              ?_scale_convert_gram 0070  
                   __end_of_main 16ED                     __end_of_dtoa 01DA                    command@lownib 0078  
                   __end_of_utoa 0EFF             __end_of_DIO_SET_HIGH 1F95                 __end_of_i2c_wait 1FC9  
               __end_of_i2c_stop 000B                           ??_main 00D6                           ??_dtoa 0038  
                         ??_utoa 007D             __size_of_CLK_SET_LOW 000A                 ___lodiv@quotient 0071  
         __end_of_WDT_Initialize 1F3A             __size_of_DIO_SET_LOW 000A             ??_scale_convert_gram 005F  
                set_segments@pos 007A                   ?_start_segment 0070                  DIO_SET_OUTPUT@p 0071  
              get_CELL_DAT_VAL@p 0075                           ?_fputc 0070                           ?_fputs 0078  
               ___awdiv@dividend 0072                           _APFCON 011D                           _ANSELA 018C  
                         ?_putch 0070                           _ANSELB 018D                           _BORCON 0116  
                         _OSCCON 0099                set_CELL_CLK_LOW@p 0071                           u252lld 0F29  
                         u261lld 0FEE                           u254lld 0F54                           u271lld 0E00  
                         u263lld 0D52                           u265lld 0D7D                           _WDTCON 0097  
                         u292lld 00B3                           _SSPADD 0212                           _SSPBUF 0211  
             __size_of_i2c_start 000A                 __end_of___xxtofl 0B8B               __size_of_i2c_write 0010  
              ?_initialize_digit 0070         __end_of_get_CELL_DAT_VAL 0991               ??_initialize_digit 002C  
                   vfprintf@cfmt 00A3                 __end_of_lcd_init 0ADF                        ??___aodiv 0070  
                      ??___aomod 0070                        ??___fldiv 0028                        ??___awdiv 0074  
                      ??___awmod 0074                        ??___flmul 0042                        ??___fltol 0058  
                      ??___lldiv 0078                        ??___lodiv 0070                        ??___lomod 0070  
           __end_of_encode_digit 1F4F                 calc_percentage@p 006C                 ___awdiv@quotient 0077  
                ___awmod@divisor 0070                  ___awmod@counter 0075                           pad@buf 0024  
                      ??_lcd_cmd 0072                           dtoa@fp 003F                        ??_command 0075  
                         _strlen 1099                           fputc@c 0070                           fputs@c 0020  
                         fputs@i 0021                           fputs@s 0023               __size_of__Umul8_16 0023  
                ?_WDT_Initialize 0070                      initialize@p 00C4                           putch@c 0070  
                 print_digit@tmp 002B                 __end_of_vfprintf 1217                           utoa@fp 003A  
                      ??_sprintf 00AB          __size_of_set_brigthness 0014                        ??_strncmp 0076  
                   ?_print_digit 007D                     ___xxtofl@arg 007A                     ___xxtofl@exp 0079  
              _SYSTEM_Initialize 1F4F                     ___xxtofl@val 0070          __end_of__initialization 07FD  
             ?_SYSTEM_Initialize 0070                   print_gram@row1 00B5                   print_gram@row2 00C5  
        __size_of_CLK_SET_OUTPUT 000A                       ___fltol@f1 0054        __size_of_set_CELL_CLK_LOW 000A  
                 command@highnib 0077         set_brigthness@brightness 0070                   __pcstackCOMMON 0070  
              ??_calc_percentage 00A0                     __pidataBANK2 1130              ??_SYSTEM_Initialize 0070  
                  __end_of_fputc 12A4                    __end_of_fputs 11A5                    __end_of_putch 0801  
                 get_scale_val@i 0031                   get_scale_val@j 002C                   get_scale_val@p 0032  
          __end_of_DIO_SET_INPUT 1FB3                __end_of_i2c_start 1FBD                 ??_lcd_set_cursor 007C  
              __end_of_i2c_write 1FD9                   _OPTION_REGbits 0095                  ??_start_segment 0072  
             __size_of_lcd_clear 003E               __size_of_lcd_print 0024                          ??_fputc 0073  
      __end_of_SYSTEM_Initialize 1F59                          ??_fputs 0079                          ??_putch 0070  
                     __pbssBANK2 0144                       __pbssBANK3 01A0            __size_of_CLK_SET_HIGH 000A  
               ??_lcd_print_with 002A                        ?_i2c_wait 0070                        ?_i2c_stop 0070  
              lcd_print_with@col 0028                _get_DIO_PIN_value 1522                lcd_print_with@row 0029  
              lcd_print_with@str 0026          __size_of_DIO_SET_OUTPUT 000A               ?_get_DIO_PIN_value 0070  
          __size_of_DIO_SET_HIGH 000A                __end_of__Umul8_16 110C                       __pmaintext 1678  
            ??_get_DIO_PIN_value 0070                          ?_strlen 0070               set_CELL_CLK_HIGH@p 0071  
             set_segments@length 0079                        ?___xxtofl 0070                     _CLK_SET_HIGH 1F6D  
             __size_of_vfpfcnvrt 01FC                          _OSCTUNE 0098                          _SSPCON1 0215  
                        _SSPCON2 0216                        ?_lcd_init 0070                          _SSPSTAT 0214  
               ___lomod@dividend 0028        __end_of_get_DIO_PIN_value 1592                     _DIO_SET_HIGH 1F8B  
                     ??_i2c_wait 0070                       ??_i2c_stop 0070            __end_of_lcd_backlight 101C  
          __size_of_encode_digit 0008                __end_of_lcd_clear 1255                          ___aodiv 0EFF  
              __end_of_lcd_print 1130                          ___aomod 0D28                          ___fldiv 01DA  
                        ___awdiv 000B                          ___awmod 0801                          ___flmul 058A  
                        ___fltol 1603                          ___lldiv 13AA                          ___lodiv 16ED  
                        ___lomod 1592                        ?_vfprintf 006D                    ?_set_segments 0078  
                     _initialize 1771                          __ptext1 14BB                          __ptext2 1771  
                        __ptext3 1154                          __ptext4 11DE                          __ptext5 038E  
                        __ptext6 0E12                          __ptext7 1592                          __ptext8 16ED  
                        __ptext9 145F                          _lcd_cmd 101C                          _command 12FA  
                __size_of_strlen 001A            _OSCILLATOR_Initialize 1F40                     __size_of_abs 001A  
                   __size_of_pad 0059                       ??___xxtofl 0074                 ___awmod@dividend 0072  
                        _segdata 012C         ??_PIN_MANAGER_Initialize 0070                   _set_brigthness 1FEC  
                        main@lcd 00D8       __size_of_SYSTEM_Initialize 000A                          _sprintf 1154  
                        clrloop0 1F3B                       ??_lcd_init 0076                          _strncmp 145F  
           end_of_initialization 07FD                     _encode_digit 1F47               clear_segment@F2810 014A  
                        fputc@fp 0072                          init_ram 1000                          fputs@fp 0078  
                        initloop 1001                   _CLK_SET_OUTPUT 1F81             __size_of_print_digit 00BA  
           set_segments@segments 0078                  ___lldiv@divisor 0070                  ___lldiv@counter 007D  
          __end_of_get_scale_val 0D28                 _set_CELL_CLK_LOW 1F63                ?_get_CELL_DAT_VAL 0070  
              __end_of_vfpfcnvrt 058A                  print_digit@data 0026               ??_get_CELL_DAT_VAL 0072  
                 ??_set_segments 007B                       ??_vfprintf 00A0                    ??_CLK_SET_LOW 0070  
                        strlen@a 0073                          strlen@s 0074                 ??_WDT_Initialize 0070  
                      _PORTBbits 000D                    ??_DIO_SET_LOW 0070        __size_of_initialize_digit 0013  
                   _m_brightness 0156                       _print_gram 14BB                    i2c_write@data 0070  
         __end_of_set_brigthness 2000        lcd_set_cursor@row_offsets 0020                    ___xxtofl@sign 0078  
                     lcd_cmd@cmd 0071      __size_of_scale_convert_gram 009A                      ___fldiv@grs 0034  
                    ___fldiv@rem 002D                       lcd_clear@p 002A                 initialize@valstr 00B4  
     __size_of_get_DIO_PIN_value 0070                  _calc_percentage 0991           __end_of_CLK_SET_OUTPUT 1F8B  
                     main@tm1637 00DC                      ___flmul@grs 0048                       command@val 0073  
                 _DIO_SET_OUTPUT 1F9F                       lcd_print@p 0021                      print_gram@p 00D5  
                     _write4bits 10CE                      vfpfcnvrt@ap 004F                      vfpfcnvrt@fp 006C  
                    vfpfcnvrt@ll 005C                       _write_byte 12A4                      ?_initialize 0070  
         ?_OSCILLATOR_Initialize 0070                   __end_of_strlen 10B3              start_initialization 07E1  
                ___lodiv@divisor 0020                  ?_set_brigthness 0070              __end_of_CLK_SET_LOW 1F81  
                ___lodiv@counter 0079  __size_of_PIN_MANAGER_Initialize 001B                      __end_of_abs 1099  
                      _i2c_start 1FB3                      __end_of_pad 13AA                        _i2c_write 1FC9  
            __end_of_DIO_SET_LOW 1F9F                   DIO_SET_INPUT@p 0071                  ?_CLK_SET_OUTPUT 0070  
         __end_of_DIO_SET_OUTPUT 1FA9                __size_of_i2c_wait 000C                __size_of_i2c_stop 0007  
                    vfprintf@fmt 006D                        __Umul8_16 10E9          get_scale_val@weight_add 0028  
                    __pdataBANK2 0120                         ??_strlen 0072                      ?_print_gram 0070  
                      ___fldiv@a 0020                        ___fldiv@b 0024              lcd_set_cursor@F2781 0136  
                      ___flmul@a 003E                        ___flmul@b 003A                        ___latbits 0003  
        __end_of_calc_percentage 0A36                    __pcstackBANK0 0020                    __pcstackBANK1 00A0  
               ___aodiv@dividend 0028                       ?_i2c_start 0070                       ?_i2c_write 0070  
          __end_of_start_segment 1065                __size_of___xxtofl 00AC             __end_of_set_segments 145F  
                ?_DIO_SET_OUTPUT 0070                __size_of_lcd_init 00A9              __size_of_initialize 008F  
         __size_of_DIO_SET_INPUT 000A                 set_brigthness@on 0071           _PIN_MANAGER_Initialize 10B3  
                      _dtoa$1239 003B                    ?_stop_segment 0070                      ?_write4bits 0073  
                       ?___aodiv 0020                         ?___aomod 0020                         ?___fldiv 0020  
                       ?___awdiv 0070                 ___aodiv@quotient 0073                         ?___awmod 0070  
                       ?___flmul 003A                         ?___fltol 0054                         ?___lldiv 0070  
                       ?___lodiv 0020                         ?___lomod 0020                       ?__Umul8_16 0070  
                      _lcd_clear 1217                      _CLK_SET_LOW 1F77                      ?_write_byte 0072  
                      _lcd_print 110C                         ?_lcd_cmd 0071                __size_of_vfprintf 0039  
               _initialize_digit 1FD9                         ?_command 0073                  ___lomod@divisor 0020  
                    _DIO_SET_LOW 1F95                  ___lomod@counter 0071         __end_of_set_CELL_CLK_LOW 1F6D  
                       ?_sprintf 00A5                   __size_of_fputc 004F                   __size_of_fputs 0029  
                       ?_strncmp 0070                   __size_of_putch 0001          __size_of_lcd_set_cursor 0039  
                    write4bits@p 0075     get_scale_val@scale_avg_count 0020                    CLK_SET_HIGH@p 0071  
                      clear_ram0 1F3A                  lcd_set_cursor@p 0025              __size_of_print_gram 0067  
                 ??_stop_segment 0072                        main@F2851 0142                        main@F2853 0144  
                      main@F2847 0120                        main@F2849 013E          __size_of_lcd_print_with 0018  
                     ?_lcd_clear 0070                encode_digit@digit 0079                        _vfpfcnvrt 038E  
                     ?_lcd_print 007A                        lcd_init@p 0078                    _DIO_SET_INPUT 1FA9  
                      main@drink 00EA              scale_convert_gram@p 006B                      write_byte@b 0072  
                    write_byte@i 0076                      write_byte@p 0077        __size_of_get_CELL_DAT_VAL 00A3  
         __size_of_lcd_backlight 0016                 ?_calc_percentage 0070                      ??_i2c_start 0070  
                    ??_i2c_write 0070              __size_of_write4bits 001B                    ??_print_digit 0022  
                       _i2c_wait 1FBD                    DIO_SET_HIGH@p 0071                         _i2c_stop 0004  
            __size_of_write_byte 0056                    set_segments@k 0020                    set_segments@p 0021  
                     vfprintf@ap 006F                       vfprintf@fp 00A2                    stop_segment@p 0072  
        ??_OSCILLATOR_Initialize 0070                      ??__Umul8_16 0072                 __size_of___aodiv 0101  
               __size_of___aomod 00EA                 __size_of___fldiv 01B4                 __size_of___awdiv 005F  
               __size_of___awmod 0053                 __size_of___flmul 0257                 __size_of___fltol 0075  
               __size_of___lldiv 005A                 __size_of___lodiv 0084                 __size_of___lomod 0071  
                     ?_vfpfcnvrt 004E                     ??_initialize 00B3                 ??_set_brigthness 0072  
                ___aodiv@divisor 0020                  ___aodiv@counter 0071                   ?_DIO_SET_INPUT 0070  
               __size_of_lcd_cmd 0017                 __size_of_command 0057                       sprintf@fmt 00A5  
     __end_of_scale_convert_gram 08EE                         ___xxtofl 0ADF                  lcd_print_with@p 007D  
                set_brigthness@p 0073            __size_of_set_segments 005B                 ??_CLK_SET_OUTPUT 0070  
         __size_of_get_scale_val 00E3                         __ptext10 006A                         __ptext11 1351  
                       __ptext20 0A36                         __ptext12 1099                         __ptext21 10CE  
                       __ptext13 117C                         __ptext30 1FB3                         __ptext22 1217  
                       __ptext14 1255                         __ptext31 1FBD                         __ptext23 11A5  
                       __ptext15 0800                         __ptext40 104B                         __ptext32 1FD9  
                       __ptext24 110C                         __ptext16 107F                         __ptext41 1F9F  
                       __ptext33 1FEC                         __ptext25 12FA                         __ptext17 0D28  
                       __ptext50 0991                         __ptext42 1F95                         __ptext34 0B8B  
                       __ptext26 1006                         __ptext18 0EFF                         __ptext51 0854  
                       __ptext43 1F8B                         __ptext35 1404                         __ptext27 101C  
                       __ptext19 1033                         __ptext60 058A                         __ptext52 0ADF  
                       __ptext44 1F81                         __ptext36 12A4                         __ptext28 1FC9  
                       __ptext61 10E9                         __ptext53 1603                         __ptext45 1F77  
                       __ptext37 1522                         __ptext29 0004                         __ptext62 1F4F  
                       __ptext54 01DA                         __ptext46 1F6D                         __ptext38 1FA9  
                       __ptext63 1F36                         __ptext55 0C45                         __ptext47 1F47  
                       __ptext39 1065                         __ptext64 10B3                         __ptext56 1F63  
                       __ptext48 0801                         __ptext65 1F40                         __ptext57 1F59  
                       __ptext49 000B                         __ptext58 08EE                         __ptext59 13AA  
                       _lcd_init 0A36                 __size_of_sprintf 0028                 __size_of_strncmp 005C  
                  __size_of_main 0075                    __size_of_dtoa 0170                    __size_of_utoa 00ED  
             __end_of_initialize 1800                    write4bits@val 0073                     CLK_SET_LOW@p 0071  
            __end_of_print_digit 0C45                    _lcd_backlight 1006                         lcd_cmd@p 0072  
                       _vfprintf 11DE                         command@p 0079                      ??_lcd_clear 0026  
                   _set_segments 1404                      ??_lcd_print 007C                 ___aomod@dividend 0028  
                   ??_print_gram 00B3                    ?_CLK_SET_HIGH 0070                     DIO_SET_LOW@p 0071  
              print_digit@number 007D             __end_of_stop_segment 107F                 ??_DIO_SET_OUTPUT 0070  
                CLK_SET_OUTPUT@p 0071                   __pstringtext10 0000          __size_of_WDT_Initialize 0004  
                  ?_DIO_SET_HIGH 0070                   _lcd_set_cursor 11A5                lcd_set_cursor@cmd 0024  
              lcd_set_cursor@col 007A                        sprintf@ap 00AD                lcd_set_cursor@row 007B  
               ___lldiv@dividend 0074          ?_PIN_MANAGER_Initialize 0070               get_DIO_PIN_value@p 0071  
       __end_of_initialize_digit 1FEC                 print_digit@F2820 013A                   ?_lcd_backlight 0070  
                      strncmp@_l 0070                        strncmp@_r 0072                _set_CELL_CLK_HIGH 1F59  
             __end_of_print_gram 1522                     ??_write4bits 0074                    _get_scale_val 0C45  
                 _lcd_print_with 1033               ?_set_CELL_CLK_HIGH 0070                  ___aomod@divisor 0020  
                    ??_vfpfcnvrt 0050                  ___aomod@counter 0071                     ?_CLK_SET_LOW 0070  
                   ??_write_byte 0073                  ??_DIO_SET_INPUT 0070                    __pstringtext1 2000  
                  __pstringtext2 200F                    __pstringtext3 201A                    __pstringtext4 2024  
                  __pstringtext5 202C                    __pstringtext6 2032                    __pstringtext7 2035  
                  __pstringtext8 2038                    __pstringtext9 203B              ??_set_CELL_CLK_HIGH 0070  
         __Umul8_16@multiplicand 0070                     ?_DIO_SET_LOW 0070                   ??_CLK_SET_HIGH 0070  
                       sprintf@f 00AE                         sprintf@s 00AC                 ___lldiv@quotient 0079  
               _get_CELL_DAT_VAL 08EE                         strncmp@l 0077                         strncmp@n 0074  
                       strncmp@r 0079                      _SSPCON1bits 0215                      _SSPCON2bits 0216  
              ?_set_CELL_CLK_LOW 0070           __end_of_lcd_set_cursor 11DE                   start_segment@p 0072  
                 ??_DIO_SET_HIGH 0070                    ?_encode_digit 0079               ??_set_CELL_CLK_LOW 0070  
             __end_of_write4bits 10E9                     ___aodiv@sign 0072   __end_of_PIN_MANAGER_Initialize 10CE  
                    _print_digit 0B8B        __end_of_set_CELL_CLK_HIGH 1F63             __Umul8_16@multiplier 0078  
             __end_of_write_byte 12FA                   lcd_backlight@p 0074                     ___aomod@sign 0072  
         __end_of_lcd_print_with 104B                   ?_get_scale_val 0020                __Umul8_16@product 0074  

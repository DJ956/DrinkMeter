

Microchip MPLAB XC8 Assembler V2.32 build 20210201212658 
                                                                                               Sat Jan 01 18:49:01 2022

Microchip MPLAB XC8 C Compiler v2.32 (Free license) build 20210201212658 Og1 
     1                           	processor	16F1938
     2                           	pagewidth 120
     3                           	opt	flic
     4                           	psect	idataBANK1,global,class=CODE,delta=2,noexec
     5                           	psect	idataBANK2,global,class=CODE,delta=2,noexec
     6                           	psect	stringtext1,global,class=STRCODE,delta=2,noexec
     7                           	psect	stringtext2,global,class=STRCODE,delta=2,noexec
     8                           	psect	stringtext3,global,class=STRCODE,delta=2,noexec
     9                           	psect	stringtext4,global,class=STRCODE,delta=2,noexec
    10                           	psect	stringtext5,global,class=STRCODE,delta=2,noexec
    11                           	psect	stringtext6,global,class=STRCODE,delta=2,noexec
    12                           	psect	stringtext7,global,class=STRCODE,delta=2,noexec
    13                           	psect	stringtext8,global,class=STRCODE,delta=2,noexec
    14                           	psect	stringtext9,global,class=STRCODE,delta=2,noexec
    15                           	psect	stringtext10,global,class=STRCODE,delta=2,noexec
    16                           	psect	stringtext11,global,class=STRCODE,delta=2,noexec
    17                           	psect	cinit,global,class=CODE,merge=1,delta=2
    18                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1,noexec
    19                           	psect	dataBANK1,global,class=BANK1,space=1,delta=1,noexec
    20                           	psect	bssBANK2,global,class=BANK2,space=1,delta=1,noexec
    21                           	psect	dataBANK2,global,class=BANK2,space=1,delta=1,noexec
    22                           	psect	bssBANK3,global,class=BANK3,space=1,delta=1,noexec
    23                           	psect	inittext,global,class=CODE,delta=2
    24                           	psect	clrtext,global,class=CODE,delta=2
    25                           	psect	cstackBANK2,global,class=BANK2,space=1,delta=1,noexec
    26                           	psect	cstackBANK1,global,class=BANK1,space=1,delta=1,noexec
    27                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1,noexec
    28                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,noexec
    29                           	psect	maintext,global,class=CODE,merge=1,split=1,delta=2
    30                           	psect	text1,local,class=CODE,merge=1,delta=2
    31                           	psect	text2,local,class=CODE,merge=1,delta=2
    32                           	psect	text3,local,class=CODE,merge=1,delta=2
    33                           	psect	text4,local,class=CODE,merge=1,delta=2,group=2
    34                           	psect	text5,local,class=CODE,merge=1,delta=2,group=2
    35                           	psect	text6,local,class=CODE,merge=1,delta=2,group=2
    36                           	psect	text7,local,class=CODE,merge=1,delta=2,group=2
    37                           	psect	text8,local,class=CODE,merge=1,delta=2,group=2
    38                           	psect	text9,local,class=CODE,merge=1,delta=2
    39                           	psect	text10,local,class=CODE,merge=1,delta=2
    40                           	psect	text11,local,class=CODE,merge=1,delta=2,group=3
    41                           	psect	text12,local,class=CODE,merge=1,delta=2,group=1
    42                           	psect	text13,local,class=CODE,merge=1,delta=2,group=1
    43                           	psect	text14,local,class=CODE,merge=1,delta=2,group=1
    44                           	psect	text15,local,class=CODE,merge=1,delta=2,group=2
    45                           	psect	text16,local,class=CODE,merge=1,delta=2,group=2
    46                           	psect	text17,local,class=CODE,merge=1,delta=2,group=3
    47                           	psect	text18,local,class=CODE,merge=1,delta=2,group=1
    48                           	psect	text19,local,class=CODE,merge=1,delta=2,group=1
    49                           	psect	text20,local,class=CODE,merge=1,delta=2,group=3
    50                           	psect	text21,local,class=CODE,merge=1,delta=2,group=3
    51                           	psect	text22,local,class=CODE,merge=1,delta=2,group=3
    52                           	psect	text23,local,class=CODE,merge=1,delta=2,group=3
    53                           	psect	text24,local,class=CODE,merge=1,delta=2,group=3
    54                           	psect	text25,local,class=CODE,merge=1,delta=2,group=2
    55                           	psect	text26,local,class=CODE,merge=1,delta=2,group=2
    56                           	psect	text27,local,class=CODE,merge=1,delta=2
    57                           	psect	text28,local,class=CODE,merge=1,delta=2
    58                           	psect	text29,local,class=CODE,merge=1,delta=2
    59                           	psect	text30,local,class=CODE,merge=1,delta=2
    60                           	psect	text31,local,class=CODE,merge=1,delta=2
    61                           	psect	text32,local,class=CODE,merge=1,delta=2
    62                           	psect	text33,local,class=CODE,merge=1,delta=2
    63                           	psect	text34,local,class=CODE,merge=1,delta=2
    64                           	psect	text35,local,class=CODE,merge=1,delta=2
    65                           	psect	text36,local,class=CODE,merge=1,delta=2
    66                           	psect	text37,local,class=CODE,merge=1,delta=2
    67                           	psect	text38,local,class=CODE,merge=1,delta=2
    68                           	psect	text39,local,class=CODE,merge=1,delta=2
    69                           	psect	text40,local,class=CODE,merge=1,delta=2
    70                           	psect	text41,local,class=CODE,merge=1,delta=2
    71                           	psect	text42,local,class=CODE,merge=1,delta=2
    72                           	psect	text43,local,class=CODE,merge=1,delta=2
    73                           	psect	text44,local,class=CODE,merge=1,delta=2
    74                           	psect	text45,local,class=CODE,merge=1,delta=2
    75                           	psect	text46,local,class=CODE,merge=1,delta=2
    76                           	psect	text47,local,class=CODE,merge=1,delta=2
    77                           	psect	text48,local,class=CODE,merge=1,delta=2
    78                           	psect	text49,local,class=CODE,merge=1,delta=2
    79                           	psect	text50,local,class=CODE,merge=1,delta=2
    80                           	psect	text51,local,class=CODE,merge=1,delta=2
    81                           	psect	text52,local,class=CODE,merge=1,delta=2
    82                           	psect	text53,local,class=CODE,merge=1,delta=2
    83                           	psect	text54,local,class=CODE,merge=1,delta=2
    84                           	psect	text55,local,class=CODE,merge=1,delta=2
    85                           	psect	text56,local,class=CODE,merge=1,delta=2,group=2
    86                           	psect	text57,local,class=CODE,merge=1,delta=2,group=2
    87                           	psect	text58,local,class=CODE,merge=1,delta=2
    88                           	psect	text59,local,class=CODE,merge=1,delta=2
    89                           	psect	text60,local,class=CODE,merge=1,delta=2
    90                           	psect	text61,local,class=CODE,merge=1,delta=2
    91                           	psect	text62,local,class=CODE,merge=1,delta=2,group=2
    92                           	psect	text63,local,class=CODE,merge=1,delta=2
    93                           	psect	text64,local,class=CODE,merge=1,delta=2
    94                           	psect	text65,local,class=CODE,merge=1,delta=2
    95                           	psect	text66,local,class=CODE,merge=1,delta=2
    96                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=2,noexec
    97                           	dabs	1,0x7E,2
    98  0000                     
    99                           ; Version 2.32
   100                           ; Generated 02/02/2021 GMT
   101                           ; 
   102                           ; Copyright Â© 2021, Microchip Technology Inc. and its subsidiaries ("Microchip")
   103                           ; All rights reserved.
   104                           ; 
   105                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
   106                           ; 
   107                           ; Redistribution and use in source and binary forms, with or without modification, are
   108                           ; permitted provided that the following conditions are met:
   109                           ; 
   110                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
   111                           ;        conditions and the following disclaimer.
   112                           ; 
   113                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
   114                           ;        of conditions and the following disclaimer in the documentation and/or other
   115                           ;        materials provided with the distribution. Publication is not required when
   116                           ;        this file is used in an embedded application.
   117                           ; 
   118                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
   119                           ;        software without specific prior written permission.
   120                           ; 
   121                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
   122                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
   123                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
   124                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
   125                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
   126                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
   127                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
   128                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
   129                           ; 
   130                           ; 
   131                           ; Code-generator required, PIC16F1938 Definitions
   132                           ; 
   133                           ; SFR Addresses
   134  0000                     	;# 
   135  0001                     	;# 
   136  0002                     	;# 
   137  0003                     	;# 
   138  0004                     	;# 
   139  0005                     	;# 
   140  0006                     	;# 
   141  0007                     	;# 
   142  0008                     	;# 
   143  0009                     	;# 
   144  000A                     	;# 
   145  000B                     	;# 
   146  000C                     	;# 
   147  000D                     	;# 
   148  000E                     	;# 
   149  0010                     	;# 
   150  0011                     	;# 
   151  0012                     	;# 
   152  0013                     	;# 
   153  0015                     	;# 
   154  0016                     	;# 
   155  0016                     	;# 
   156  0017                     	;# 
   157  0018                     	;# 
   158  0019                     	;# 
   159  001A                     	;# 
   160  001B                     	;# 
   161  001C                     	;# 
   162  001E                     	;# 
   163  001F                     	;# 
   164  008C                     	;# 
   165  008D                     	;# 
   166  008E                     	;# 
   167  0090                     	;# 
   168  0091                     	;# 
   169  0092                     	;# 
   170  0093                     	;# 
   171  0095                     	;# 
   172  0096                     	;# 
   173  0097                     	;# 
   174  0098                     	;# 
   175  0099                     	;# 
   176  009A                     	;# 
   177  009B                     	;# 
   178  009B                     	;# 
   179  009C                     	;# 
   180  009D                     	;# 
   181  009E                     	;# 
   182  010C                     	;# 
   183  010D                     	;# 
   184  010E                     	;# 
   185  0110                     	;# 
   186  0111                     	;# 
   187  0112                     	;# 
   188  0113                     	;# 
   189  0114                     	;# 
   190  0115                     	;# 
   191  0116                     	;# 
   192  0117                     	;# 
   193  0118                     	;# 
   194  0119                     	;# 
   195  011A                     	;# 
   196  011B                     	;# 
   197  011D                     	;# 
   198  018C                     	;# 
   199  018D                     	;# 
   200  0191                     	;# 
   201  0191                     	;# 
   202  0192                     	;# 
   203  0193                     	;# 
   204  0193                     	;# 
   205  0193                     	;# 
   206  0194                     	;# 
   207  0195                     	;# 
   208  0196                     	;# 
   209  0199                     	;# 
   210  019A                     	;# 
   211  019B                     	;# 
   212  019B                     	;# 
   213  019B                     	;# 
   214  019B                     	;# 
   215  019C                     	;# 
   216  019C                     	;# 
   217  019D                     	;# 
   218  019E                     	;# 
   219  019F                     	;# 
   220  020D                     	;# 
   221  0210                     	;# 
   222  0211                     	;# 
   223  0212                     	;# 
   224  0213                     	;# 
   225  0214                     	;# 
   226  0215                     	;# 
   227  0215                     	;# 
   228  0216                     	;# 
   229  0217                     	;# 
   230  0291                     	;# 
   231  0291                     	;# 
   232  0292                     	;# 
   233  0293                     	;# 
   234  0294                     	;# 
   235  0295                     	;# 
   236  0295                     	;# 
   237  0296                     	;# 
   238  0298                     	;# 
   239  0298                     	;# 
   240  0299                     	;# 
   241  029A                     	;# 
   242  029B                     	;# 
   243  029C                     	;# 
   244  029C                     	;# 
   245  029D                     	;# 
   246  029E                     	;# 
   247  029F                     	;# 
   248  0311                     	;# 
   249  0311                     	;# 
   250  0312                     	;# 
   251  0313                     	;# 
   252  0314                     	;# 
   253  0315                     	;# 
   254  0315                     	;# 
   255  0316                     	;# 
   256  0318                     	;# 
   257  0318                     	;# 
   258  0319                     	;# 
   259  031A                     	;# 
   260  031C                     	;# 
   261  031C                     	;# 
   262  031D                     	;# 
   263  031E                     	;# 
   264  0394                     	;# 
   265  0395                     	;# 
   266  0396                     	;# 
   267  0415                     	;# 
   268  0416                     	;# 
   269  0417                     	;# 
   270  041C                     	;# 
   271  041D                     	;# 
   272  041E                     	;# 
   273  0791                     	;# 
   274  0792                     	;# 
   275  0793                     	;# 
   276  0794                     	;# 
   277  0795                     	;# 
   278  0798                     	;# 
   279  0799                     	;# 
   280  07A0                     	;# 
   281  07A1                     	;# 
   282  07A3                     	;# 
   283  07A4                     	;# 
   284  07A6                     	;# 
   285  07A7                     	;# 
   286  07A9                     	;# 
   287  07AA                     	;# 
   288  0FE4                     	;# 
   289  0FE5                     	;# 
   290  0FE6                     	;# 
   291  0FE7                     	;# 
   292  0FE8                     	;# 
   293  0FE9                     	;# 
   294  0FEA                     	;# 
   295  0FEB                     	;# 
   296  0FED                     	;# 
   297  0FEE                     	;# 
   298  0FEF                     	;# 
   299  0000                     	;# 
   300  0001                     	;# 
   301  0002                     	;# 
   302  0003                     	;# 
   303  0004                     	;# 
   304  0005                     	;# 
   305  0006                     	;# 
   306  0007                     	;# 
   307  0008                     	;# 
   308  0009                     	;# 
   309  000A                     	;# 
   310  000B                     	;# 
   311  000C                     	;# 
   312  000D                     	;# 
   313  000E                     	;# 
   314  0010                     	;# 
   315  0011                     	;# 
   316  0012                     	;# 
   317  0013                     	;# 
   318  0015                     	;# 
   319  0016                     	;# 
   320  0016                     	;# 
   321  0017                     	;# 
   322  0018                     	;# 
   323  0019                     	;# 
   324  001A                     	;# 
   325  001B                     	;# 
   326  001C                     	;# 
   327  001E                     	;# 
   328  001F                     	;# 
   329  008C                     	;# 
   330  008D                     	;# 
   331  008E                     	;# 
   332  0090                     	;# 
   333  0091                     	;# 
   334  0092                     	;# 
   335  0093                     	;# 
   336  0095                     	;# 
   337  0096                     	;# 
   338  0097                     	;# 
   339  0098                     	;# 
   340  0099                     	;# 
   341  009A                     	;# 
   342  009B                     	;# 
   343  009B                     	;# 
   344  009C                     	;# 
   345  009D                     	;# 
   346  009E                     	;# 
   347  010C                     	;# 
   348  010D                     	;# 
   349  010E                     	;# 
   350  0110                     	;# 
   351  0111                     	;# 
   352  0112                     	;# 
   353  0113                     	;# 
   354  0114                     	;# 
   355  0115                     	;# 
   356  0116                     	;# 
   357  0117                     	;# 
   358  0118                     	;# 
   359  0119                     	;# 
   360  011A                     	;# 
   361  011B                     	;# 
   362  011D                     	;# 
   363  018C                     	;# 
   364  018D                     	;# 
   365  0191                     	;# 
   366  0191                     	;# 
   367  0192                     	;# 
   368  0193                     	;# 
   369  0193                     	;# 
   370  0193                     	;# 
   371  0194                     	;# 
   372  0195                     	;# 
   373  0196                     	;# 
   374  0199                     	;# 
   375  019A                     	;# 
   376  019B                     	;# 
   377  019B                     	;# 
   378  019B                     	;# 
   379  019B                     	;# 
   380  019C                     	;# 
   381  019C                     	;# 
   382  019D                     	;# 
   383  019E                     	;# 
   384  019F                     	;# 
   385  020D                     	;# 
   386  0210                     	;# 
   387  0211                     	;# 
   388  0212                     	;# 
   389  0213                     	;# 
   390  0214                     	;# 
   391  0215                     	;# 
   392  0215                     	;# 
   393  0216                     	;# 
   394  0217                     	;# 
   395  0291                     	;# 
   396  0291                     	;# 
   397  0292                     	;# 
   398  0293                     	;# 
   399  0294                     	;# 
   400  0295                     	;# 
   401  0295                     	;# 
   402  0296                     	;# 
   403  0298                     	;# 
   404  0298                     	;# 
   405  0299                     	;# 
   406  029A                     	;# 
   407  029B                     	;# 
   408  029C                     	;# 
   409  029C                     	;# 
   410  029D                     	;# 
   411  029E                     	;# 
   412  029F                     	;# 
   413  0311                     	;# 
   414  0311                     	;# 
   415  0312                     	;# 
   416  0313                     	;# 
   417  0314                     	;# 
   418  0315                     	;# 
   419  0315                     	;# 
   420  0316                     	;# 
   421  0318                     	;# 
   422  0318                     	;# 
   423  0319                     	;# 
   424  031A                     	;# 
   425  031C                     	;# 
   426  031C                     	;# 
   427  031D                     	;# 
   428  031E                     	;# 
   429  0394                     	;# 
   430  0395                     	;# 
   431  0396                     	;# 
   432  0415                     	;# 
   433  0416                     	;# 
   434  0417                     	;# 
   435  041C                     	;# 
   436  041D                     	;# 
   437  041E                     	;# 
   438  0791                     	;# 
   439  0792                     	;# 
   440  0793                     	;# 
   441  0794                     	;# 
   442  0795                     	;# 
   443  0798                     	;# 
   444  0799                     	;# 
   445  07A0                     	;# 
   446  07A1                     	;# 
   447  07A3                     	;# 
   448  07A4                     	;# 
   449  07A6                     	;# 
   450  07A7                     	;# 
   451  07A9                     	;# 
   452  07AA                     	;# 
   453  0FE4                     	;# 
   454  0FE5                     	;# 
   455  0FE6                     	;# 
   456  0FE7                     	;# 
   457  0FE8                     	;# 
   458  0FE9                     	;# 
   459  0FEA                     	;# 
   460  0FEB                     	;# 
   461  0FED                     	;# 
   462  0FEE                     	;# 
   463  0FEF                     	;# 
   464  0000                     	;# 
   465  0001                     	;# 
   466  0002                     	;# 
   467  0003                     	;# 
   468  0004                     	;# 
   469  0005                     	;# 
   470  0006                     	;# 
   471  0007                     	;# 
   472  0008                     	;# 
   473  0009                     	;# 
   474  000A                     	;# 
   475  000B                     	;# 
   476  000C                     	;# 
   477  000D                     	;# 
   478  000E                     	;# 
   479  0010                     	;# 
   480  0011                     	;# 
   481  0012                     	;# 
   482  0013                     	;# 
   483  0015                     	;# 
   484  0016                     	;# 
   485  0016                     	;# 
   486  0017                     	;# 
   487  0018                     	;# 
   488  0019                     	;# 
   489  001A                     	;# 
   490  001B                     	;# 
   491  001C                     	;# 
   492  001E                     	;# 
   493  001F                     	;# 
   494  008C                     	;# 
   495  008D                     	;# 
   496  008E                     	;# 
   497  0090                     	;# 
   498  0091                     	;# 
   499  0092                     	;# 
   500  0093                     	;# 
   501  0095                     	;# 
   502  0096                     	;# 
   503  0097                     	;# 
   504  0098                     	;# 
   505  0099                     	;# 
   506  009A                     	;# 
   507  009B                     	;# 
   508  009B                     	;# 
   509  009C                     	;# 
   510  009D                     	;# 
   511  009E                     	;# 
   512  010C                     	;# 
   513  010D                     	;# 
   514  010E                     	;# 
   515  0110                     	;# 
   516  0111                     	;# 
   517  0112                     	;# 
   518  0113                     	;# 
   519  0114                     	;# 
   520  0115                     	;# 
   521  0116                     	;# 
   522  0117                     	;# 
   523  0118                     	;# 
   524  0119                     	;# 
   525  011A                     	;# 
   526  011B                     	;# 
   527  011D                     	;# 
   528  018C                     	;# 
   529  018D                     	;# 
   530  0191                     	;# 
   531  0191                     	;# 
   532  0192                     	;# 
   533  0193                     	;# 
   534  0193                     	;# 
   535  0193                     	;# 
   536  0194                     	;# 
   537  0195                     	;# 
   538  0196                     	;# 
   539  0199                     	;# 
   540  019A                     	;# 
   541  019B                     	;# 
   542  019B                     	;# 
   543  019B                     	;# 
   544  019B                     	;# 
   545  019C                     	;# 
   546  019C                     	;# 
   547  019D                     	;# 
   548  019E                     	;# 
   549  019F                     	;# 
   550  020D                     	;# 
   551  0210                     	;# 
   552  0211                     	;# 
   553  0212                     	;# 
   554  0213                     	;# 
   555  0214                     	;# 
   556  0215                     	;# 
   557  0215                     	;# 
   558  0216                     	;# 
   559  0217                     	;# 
   560  0291                     	;# 
   561  0291                     	;# 
   562  0292                     	;# 
   563  0293                     	;# 
   564  0294                     	;# 
   565  0295                     	;# 
   566  0295                     	;# 
   567  0296                     	;# 
   568  0298                     	;# 
   569  0298                     	;# 
   570  0299                     	;# 
   571  029A                     	;# 
   572  029B                     	;# 
   573  029C                     	;# 
   574  029C                     	;# 
   575  029D                     	;# 
   576  029E                     	;# 
   577  029F                     	;# 
   578  0311                     	;# 
   579  0311                     	;# 
   580  0312                     	;# 
   581  0313                     	;# 
   582  0314                     	;# 
   583  0315                     	;# 
   584  0315                     	;# 
   585  0316                     	;# 
   586  0318                     	;# 
   587  0318                     	;# 
   588  0319                     	;# 
   589  031A                     	;# 
   590  031C                     	;# 
   591  031C                     	;# 
   592  031D                     	;# 
   593  031E                     	;# 
   594  0394                     	;# 
   595  0395                     	;# 
   596  0396                     	;# 
   597  0415                     	;# 
   598  0416                     	;# 
   599  0417                     	;# 
   600  041C                     	;# 
   601  041D                     	;# 
   602  041E                     	;# 
   603  0791                     	;# 
   604  0792                     	;# 
   605  0793                     	;# 
   606  0794                     	;# 
   607  0795                     	;# 
   608  0798                     	;# 
   609  0799                     	;# 
   610  07A0                     	;# 
   611  07A1                     	;# 
   612  07A3                     	;# 
   613  07A4                     	;# 
   614  07A6                     	;# 
   615  07A7                     	;# 
   616  07A9                     	;# 
   617  07AA                     	;# 
   618  0FE4                     	;# 
   619  0FE5                     	;# 
   620  0FE6                     	;# 
   621  0FE7                     	;# 
   622  0FE8                     	;# 
   623  0FE9                     	;# 
   624  0FEA                     	;# 
   625  0FEB                     	;# 
   626  0FED                     	;# 
   627  0FEE                     	;# 
   628  0FEF                     	;# 
   629  0000                     	;# 
   630  0001                     	;# 
   631  0002                     	;# 
   632  0003                     	;# 
   633  0004                     	;# 
   634  0005                     	;# 
   635  0006                     	;# 
   636  0007                     	;# 
   637  0008                     	;# 
   638  0009                     	;# 
   639  000A                     	;# 
   640  000B                     	;# 
   641  000C                     	;# 
   642  000D                     	;# 
   643  000E                     	;# 
   644  0010                     	;# 
   645  0011                     	;# 
   646  0012                     	;# 
   647  0013                     	;# 
   648  0015                     	;# 
   649  0016                     	;# 
   650  0016                     	;# 
   651  0017                     	;# 
   652  0018                     	;# 
   653  0019                     	;# 
   654  001A                     	;# 
   655  001B                     	;# 
   656  001C                     	;# 
   657  001E                     	;# 
   658  001F                     	;# 
   659  008C                     	;# 
   660  008D                     	;# 
   661  008E                     	;# 
   662  0090                     	;# 
   663  0091                     	;# 
   664  0092                     	;# 
   665  0093                     	;# 
   666  0095                     	;# 
   667  0096                     	;# 
   668  0097                     	;# 
   669  0098                     	;# 
   670  0099                     	;# 
   671  009A                     	;# 
   672  009B                     	;# 
   673  009B                     	;# 
   674  009C                     	;# 
   675  009D                     	;# 
   676  009E                     	;# 
   677  010C                     	;# 
   678  010D                     	;# 
   679  010E                     	;# 
   680  0110                     	;# 
   681  0111                     	;# 
   682  0112                     	;# 
   683  0113                     	;# 
   684  0114                     	;# 
   685  0115                     	;# 
   686  0116                     	;# 
   687  0117                     	;# 
   688  0118                     	;# 
   689  0119                     	;# 
   690  011A                     	;# 
   691  011B                     	;# 
   692  011D                     	;# 
   693  018C                     	;# 
   694  018D                     	;# 
   695  0191                     	;# 
   696  0191                     	;# 
   697  0192                     	;# 
   698  0193                     	;# 
   699  0193                     	;# 
   700  0193                     	;# 
   701  0194                     	;# 
   702  0195                     	;# 
   703  0196                     	;# 
   704  0199                     	;# 
   705  019A                     	;# 
   706  019B                     	;# 
   707  019B                     	;# 
   708  019B                     	;# 
   709  019B                     	;# 
   710  019C                     	;# 
   711  019C                     	;# 
   712  019D                     	;# 
   713  019E                     	;# 
   714  019F                     	;# 
   715  020D                     	;# 
   716  0210                     	;# 
   717  0211                     	;# 
   718  0212                     	;# 
   719  0213                     	;# 
   720  0214                     	;# 
   721  0215                     	;# 
   722  0215                     	;# 
   723  0216                     	;# 
   724  0217                     	;# 
   725  0291                     	;# 
   726  0291                     	;# 
   727  0292                     	;# 
   728  0293                     	;# 
   729  0294                     	;# 
   730  0295                     	;# 
   731  0295                     	;# 
   732  0296                     	;# 
   733  0298                     	;# 
   734  0298                     	;# 
   735  0299                     	;# 
   736  029A                     	;# 
   737  029B                     	;# 
   738  029C                     	;# 
   739  029C                     	;# 
   740  029D                     	;# 
   741  029E                     	;# 
   742  029F                     	;# 
   743  0311                     	;# 
   744  0311                     	;# 
   745  0312                     	;# 
   746  0313                     	;# 
   747  0314                     	;# 
   748  0315                     	;# 
   749  0315                     	;# 
   750  0316                     	;# 
   751  0318                     	;# 
   752  0318                     	;# 
   753  0319                     	;# 
   754  031A                     	;# 
   755  031C                     	;# 
   756  031C                     	;# 
   757  031D                     	;# 
   758  031E                     	;# 
   759  0394                     	;# 
   760  0395                     	;# 
   761  0396                     	;# 
   762  0415                     	;# 
   763  0416                     	;# 
   764  0417                     	;# 
   765  041C                     	;# 
   766  041D                     	;# 
   767  041E                     	;# 
   768  0791                     	;# 
   769  0792                     	;# 
   770  0793                     	;# 
   771  0794                     	;# 
   772  0795                     	;# 
   773  0798                     	;# 
   774  0799                     	;# 
   775  07A0                     	;# 
   776  07A1                     	;# 
   777  07A3                     	;# 
   778  07A4                     	;# 
   779  07A6                     	;# 
   780  07A7                     	;# 
   781  07A9                     	;# 
   782  07AA                     	;# 
   783  0FE4                     	;# 
   784  0FE5                     	;# 
   785  0FE6                     	;# 
   786  0FE7                     	;# 
   787  0FE8                     	;# 
   788  0FE9                     	;# 
   789  0FEA                     	;# 
   790  0FEB                     	;# 
   791  0FED                     	;# 
   792  0FEE                     	;# 
   793  0FEF                     	;# 
   794  0000                     	;# 
   795  0001                     	;# 
   796  0002                     	;# 
   797  0003                     	;# 
   798  0004                     	;# 
   799  0005                     	;# 
   800  0006                     	;# 
   801  0007                     	;# 
   802  0008                     	;# 
   803  0009                     	;# 
   804  000A                     	;# 
   805  000B                     	;# 
   806  000C                     	;# 
   807  000D                     	;# 
   808  000E                     	;# 
   809  0010                     	;# 
   810  0011                     	;# 
   811  0012                     	;# 
   812  0013                     	;# 
   813  0015                     	;# 
   814  0016                     	;# 
   815  0016                     	;# 
   816  0017                     	;# 
   817  0018                     	;# 
   818  0019                     	;# 
   819  001A                     	;# 
   820  001B                     	;# 
   821  001C                     	;# 
   822  001E                     	;# 
   823  001F                     	;# 
   824  008C                     	;# 
   825  008D                     	;# 
   826  008E                     	;# 
   827  0090                     	;# 
   828  0091                     	;# 
   829  0092                     	;# 
   830  0093                     	;# 
   831  0095                     	;# 
   832  0096                     	;# 
   833  0097                     	;# 
   834  0098                     	;# 
   835  0099                     	;# 
   836  009A                     	;# 
   837  009B                     	;# 
   838  009B                     	;# 
   839  009C                     	;# 
   840  009D                     	;# 
   841  009E                     	;# 
   842  010C                     	;# 
   843  010D                     	;# 
   844  010E                     	;# 
   845  0110                     	;# 
   846  0111                     	;# 
   847  0112                     	;# 
   848  0113                     	;# 
   849  0114                     	;# 
   850  0115                     	;# 
   851  0116                     	;# 
   852  0117                     	;# 
   853  0118                     	;# 
   854  0119                     	;# 
   855  011A                     	;# 
   856  011B                     	;# 
   857  011D                     	;# 
   858  018C                     	;# 
   859  018D                     	;# 
   860  0191                     	;# 
   861  0191                     	;# 
   862  0192                     	;# 
   863  0193                     	;# 
   864  0193                     	;# 
   865  0193                     	;# 
   866  0194                     	;# 
   867  0195                     	;# 
   868  0196                     	;# 
   869  0199                     	;# 
   870  019A                     	;# 
   871  019B                     	;# 
   872  019B                     	;# 
   873  019B                     	;# 
   874  019B                     	;# 
   875  019C                     	;# 
   876  019C                     	;# 
   877  019D                     	;# 
   878  019E                     	;# 
   879  019F                     	;# 
   880  020D                     	;# 
   881  0210                     	;# 
   882  0211                     	;# 
   883  0212                     	;# 
   884  0213                     	;# 
   885  0214                     	;# 
   886  0215                     	;# 
   887  0215                     	;# 
   888  0216                     	;# 
   889  0217                     	;# 
   890  0291                     	;# 
   891  0291                     	;# 
   892  0292                     	;# 
   893  0293                     	;# 
   894  0294                     	;# 
   895  0295                     	;# 
   896  0295                     	;# 
   897  0296                     	;# 
   898  0298                     	;# 
   899  0298                     	;# 
   900  0299                     	;# 
   901  029A                     	;# 
   902  029B                     	;# 
   903  029C                     	;# 
   904  029C                     	;# 
   905  029D                     	;# 
   906  029E                     	;# 
   907  029F                     	;# 
   908  0311                     	;# 
   909  0311                     	;# 
   910  0312                     	;# 
   911  0313                     	;# 
   912  0314                     	;# 
   913  0315                     	;# 
   914  0315                     	;# 
   915  0316                     	;# 
   916  0318                     	;# 
   917  0318                     	;# 
   918  0319                     	;# 
   919  031A                     	;# 
   920  031C                     	;# 
   921  031C                     	;# 
   922  031D                     	;# 
   923  031E                     	;# 
   924  0394                     	;# 
   925  0395                     	;# 
   926  0396                     	;# 
   927  0415                     	;# 
   928  0416                     	;# 
   929  0417                     	;# 
   930  041C                     	;# 
   931  041D                     	;# 
   932  041E                     	;# 
   933  0791                     	;# 
   934  0792                     	;# 
   935  0793                     	;# 
   936  0794                     	;# 
   937  0795                     	;# 
   938  0798                     	;# 
   939  0799                     	;# 
   940  07A0                     	;# 
   941  07A1                     	;# 
   942  07A3                     	;# 
   943  07A4                     	;# 
   944  07A6                     	;# 
   945  07A7                     	;# 
   946  07A9                     	;# 
   947  07AA                     	;# 
   948  0FE4                     	;# 
   949  0FE5                     	;# 
   950  0FE6                     	;# 
   951  0FE7                     	;# 
   952  0FE8                     	;# 
   953  0FE9                     	;# 
   954  0FEA                     	;# 
   955  0FEB                     	;# 
   956  0FED                     	;# 
   957  0FEE                     	;# 
   958  0FEF                     	;# 
   959  0000                     	;# 
   960  0001                     	;# 
   961  0002                     	;# 
   962  0003                     	;# 
   963  0004                     	;# 
   964  0005                     	;# 
   965  0006                     	;# 
   966  0007                     	;# 
   967  0008                     	;# 
   968  0009                     	;# 
   969  000A                     	;# 
   970  000B                     	;# 
   971  000C                     	;# 
   972  000D                     	;# 
   973  000E                     	;# 
   974  0010                     	;# 
   975  0011                     	;# 
   976  0012                     	;# 
   977  0013                     	;# 
   978  0015                     	;# 
   979  0016                     	;# 
   980  0016                     	;# 
   981  0017                     	;# 
   982  0018                     	;# 
   983  0019                     	;# 
   984  001A                     	;# 
   985  001B                     	;# 
   986  001C                     	;# 
   987  001E                     	;# 
   988  001F                     	;# 
   989  008C                     	;# 
   990  008D                     	;# 
   991  008E                     	;# 
   992  0090                     	;# 
   993  0091                     	;# 
   994  0092                     	;# 
   995  0093                     	;# 
   996  0095                     	;# 
   997  0096                     	;# 
   998  0097                     	;# 
   999  0098                     	;# 
  1000  0099                     	;# 
  1001  009A                     	;# 
  1002  009B                     	;# 
  1003  009B                     	;# 
  1004  009C                     	;# 
  1005  009D                     	;# 
  1006  009E                     	;# 
  1007  010C                     	;# 
  1008  010D                     	;# 
  1009  010E                     	;# 
  1010  0110                     	;# 
  1011  0111                     	;# 
  1012  0112                     	;# 
  1013  0113                     	;# 
  1014  0114                     	;# 
  1015  0115                     	;# 
  1016  0116                     	;# 
  1017  0117                     	;# 
  1018  0118                     	;# 
  1019  0119                     	;# 
  1020  011A                     	;# 
  1021  011B                     	;# 
  1022  011D                     	;# 
  1023  018C                     	;# 
  1024  018D                     	;# 
  1025  0191                     	;# 
  1026  0191                     	;# 
  1027  0192                     	;# 
  1028  0193                     	;# 
  1029  0193                     	;# 
  1030  0193                     	;# 
  1031  0194                     	;# 
  1032  0195                     	;# 
  1033  0196                     	;# 
  1034  0199                     	;# 
  1035  019A                     	;# 
  1036  019B                     	;# 
  1037  019B                     	;# 
  1038  019B                     	;# 
  1039  019B                     	;# 
  1040  019C                     	;# 
  1041  019C                     	;# 
  1042  019D                     	;# 
  1043  019E                     	;# 
  1044  019F                     	;# 
  1045  020D                     	;# 
  1046  0210                     	;# 
  1047  0211                     	;# 
  1048  0212                     	;# 
  1049  0213                     	;# 
  1050  0214                     	;# 
  1051  0215                     	;# 
  1052  0215                     	;# 
  1053  0216                     	;# 
  1054  0217                     	;# 
  1055  0291                     	;# 
  1056  0291                     	;# 
  1057  0292                     	;# 
  1058  0293                     	;# 
  1059  0294                     	;# 
  1060  0295                     	;# 
  1061  0295                     	;# 
  1062  0296                     	;# 
  1063  0298                     	;# 
  1064  0298                     	;# 
  1065  0299                     	;# 
  1066  029A                     	;# 
  1067  029B                     	;# 
  1068  029C                     	;# 
  1069  029C                     	;# 
  1070  029D                     	;# 
  1071  029E                     	;# 
  1072  029F                     	;# 
  1073  0311                     	;# 
  1074  0311                     	;# 
  1075  0312                     	;# 
  1076  0313                     	;# 
  1077  0314                     	;# 
  1078  0315                     	;# 
  1079  0315                     	;# 
  1080  0316                     	;# 
  1081  0318                     	;# 
  1082  0318                     	;# 
  1083  0319                     	;# 
  1084  031A                     	;# 
  1085  031C                     	;# 
  1086  031C                     	;# 
  1087  031D                     	;# 
  1088  031E                     	;# 
  1089  0394                     	;# 
  1090  0395                     	;# 
  1091  0396                     	;# 
  1092  0415                     	;# 
  1093  0416                     	;# 
  1094  0417                     	;# 
  1095  041C                     	;# 
  1096  041D                     	;# 
  1097  041E                     	;# 
  1098  0791                     	;# 
  1099  0792                     	;# 
  1100  0793                     	;# 
  1101  0794                     	;# 
  1102  0795                     	;# 
  1103  0798                     	;# 
  1104  0799                     	;# 
  1105  07A0                     	;# 
  1106  07A1                     	;# 
  1107  07A3                     	;# 
  1108  07A4                     	;# 
  1109  07A6                     	;# 
  1110  07A7                     	;# 
  1111  07A9                     	;# 
  1112  07AA                     	;# 
  1113  0FE4                     	;# 
  1114  0FE5                     	;# 
  1115  0FE6                     	;# 
  1116  0FE7                     	;# 
  1117  0FE8                     	;# 
  1118  0FE9                     	;# 
  1119  0FEA                     	;# 
  1120  0FEB                     	;# 
  1121  0FED                     	;# 
  1122  0FEE                     	;# 
  1123  0FEF                     	;# 
  1124  0000                     	;# 
  1125  0001                     	;# 
  1126  0002                     	;# 
  1127  0003                     	;# 
  1128  0004                     	;# 
  1129  0005                     	;# 
  1130  0006                     	;# 
  1131  0007                     	;# 
  1132  0008                     	;# 
  1133  0009                     	;# 
  1134  000A                     	;# 
  1135  000B                     	;# 
  1136  000C                     	;# 
  1137  000D                     	;# 
  1138  000E                     	;# 
  1139  0010                     	;# 
  1140  0011                     	;# 
  1141  0012                     	;# 
  1142  0013                     	;# 
  1143  0015                     	;# 
  1144  0016                     	;# 
  1145  0016                     	;# 
  1146  0017                     	;# 
  1147  0018                     	;# 
  1148  0019                     	;# 
  1149  001A                     	;# 
  1150  001B                     	;# 
  1151  001C                     	;# 
  1152  001E                     	;# 
  1153  001F                     	;# 
  1154  008C                     	;# 
  1155  008D                     	;# 
  1156  008E                     	;# 
  1157  0090                     	;# 
  1158  0091                     	;# 
  1159  0092                     	;# 
  1160  0093                     	;# 
  1161  0095                     	;# 
  1162  0096                     	;# 
  1163  0097                     	;# 
  1164  0098                     	;# 
  1165  0099                     	;# 
  1166  009A                     	;# 
  1167  009B                     	;# 
  1168  009B                     	;# 
  1169  009C                     	;# 
  1170  009D                     	;# 
  1171  009E                     	;# 
  1172  010C                     	;# 
  1173  010D                     	;# 
  1174  010E                     	;# 
  1175  0110                     	;# 
  1176  0111                     	;# 
  1177  0112                     	;# 
  1178  0113                     	;# 
  1179  0114                     	;# 
  1180  0115                     	;# 
  1181  0116                     	;# 
  1182  0117                     	;# 
  1183  0118                     	;# 
  1184  0119                     	;# 
  1185  011A                     	;# 
  1186  011B                     	;# 
  1187  011D                     	;# 
  1188  018C                     	;# 
  1189  018D                     	;# 
  1190  0191                     	;# 
  1191  0191                     	;# 
  1192  0192                     	;# 
  1193  0193                     	;# 
  1194  0193                     	;# 
  1195  0193                     	;# 
  1196  0194                     	;# 
  1197  0195                     	;# 
  1198  0196                     	;# 
  1199  0199                     	;# 
  1200  019A                     	;# 
  1201  019B                     	;# 
  1202  019B                     	;# 
  1203  019B                     	;# 
  1204  019B                     	;# 
  1205  019C                     	;# 
  1206  019C                     	;# 
  1207  019D                     	;# 
  1208  019E                     	;# 
  1209  019F                     	;# 
  1210  020D                     	;# 
  1211  0210                     	;# 
  1212  0211                     	;# 
  1213  0212                     	;# 
  1214  0213                     	;# 
  1215  0214                     	;# 
  1216  0215                     	;# 
  1217  0215                     	;# 
  1218  0216                     	;# 
  1219  0217                     	;# 
  1220  0291                     	;# 
  1221  0291                     	;# 
  1222  0292                     	;# 
  1223  0293                     	;# 
  1224  0294                     	;# 
  1225  0295                     	;# 
  1226  0295                     	;# 
  1227  0296                     	;# 
  1228  0298                     	;# 
  1229  0298                     	;# 
  1230  0299                     	;# 
  1231  029A                     	;# 
  1232  029B                     	;# 
  1233  029C                     	;# 
  1234  029C                     	;# 
  1235  029D                     	;# 
  1236  029E                     	;# 
  1237  029F                     	;# 
  1238  0311                     	;# 
  1239  0311                     	;# 
  1240  0312                     	;# 
  1241  0313                     	;# 
  1242  0314                     	;# 
  1243  0315                     	;# 
  1244  0315                     	;# 
  1245  0316                     	;# 
  1246  0318                     	;# 
  1247  0318                     	;# 
  1248  0319                     	;# 
  1249  031A                     	;# 
  1250  031C                     	;# 
  1251  031C                     	;# 
  1252  031D                     	;# 
  1253  031E                     	;# 
  1254  0394                     	;# 
  1255  0395                     	;# 
  1256  0396                     	;# 
  1257  0415                     	;# 
  1258  0416                     	;# 
  1259  0417                     	;# 
  1260  041C                     	;# 
  1261  041D                     	;# 
  1262  041E                     	;# 
  1263  0791                     	;# 
  1264  0792                     	;# 
  1265  0793                     	;# 
  1266  0794                     	;# 
  1267  0795                     	;# 
  1268  0798                     	;# 
  1269  0799                     	;# 
  1270  07A0                     	;# 
  1271  07A1                     	;# 
  1272  07A3                     	;# 
  1273  07A4                     	;# 
  1274  07A6                     	;# 
  1275  07A7                     	;# 
  1276  07A9                     	;# 
  1277  07AA                     	;# 
  1278  0FE4                     	;# 
  1279  0FE5                     	;# 
  1280  0FE6                     	;# 
  1281  0FE7                     	;# 
  1282  0FE8                     	;# 
  1283  0FE9                     	;# 
  1284  0FEA                     	;# 
  1285  0FEB                     	;# 
  1286  0FED                     	;# 
  1287  0FEE                     	;# 
  1288  0FEF                     	;# 
  1289  0000                     	;# 
  1290  0001                     	;# 
  1291  0002                     	;# 
  1292  0003                     	;# 
  1293  0004                     	;# 
  1294  0005                     	;# 
  1295  0006                     	;# 
  1296  0007                     	;# 
  1297  0008                     	;# 
  1298  0009                     	;# 
  1299  000A                     	;# 
  1300  000B                     	;# 
  1301  000C                     	;# 
  1302  000D                     	;# 
  1303  000E                     	;# 
  1304  0010                     	;# 
  1305  0011                     	;# 
  1306  0012                     	;# 
  1307  0013                     	;# 
  1308  0015                     	;# 
  1309  0016                     	;# 
  1310  0016                     	;# 
  1311  0017                     	;# 
  1312  0018                     	;# 
  1313  0019                     	;# 
  1314  001A                     	;# 
  1315  001B                     	;# 
  1316  001C                     	;# 
  1317  001E                     	;# 
  1318  001F                     	;# 
  1319  008C                     	;# 
  1320  008D                     	;# 
  1321  008E                     	;# 
  1322  0090                     	;# 
  1323  0091                     	;# 
  1324  0092                     	;# 
  1325  0093                     	;# 
  1326  0095                     	;# 
  1327  0096                     	;# 
  1328  0097                     	;# 
  1329  0098                     	;# 
  1330  0099                     	;# 
  1331  009A                     	;# 
  1332  009B                     	;# 
  1333  009B                     	;# 
  1334  009C                     	;# 
  1335  009D                     	;# 
  1336  009E                     	;# 
  1337  010C                     	;# 
  1338  010D                     	;# 
  1339  010E                     	;# 
  1340  0110                     	;# 
  1341  0111                     	;# 
  1342  0112                     	;# 
  1343  0113                     	;# 
  1344  0114                     	;# 
  1345  0115                     	;# 
  1346  0116                     	;# 
  1347  0117                     	;# 
  1348  0118                     	;# 
  1349  0119                     	;# 
  1350  011A                     	;# 
  1351  011B                     	;# 
  1352  011D                     	;# 
  1353  018C                     	;# 
  1354  018D                     	;# 
  1355  0191                     	;# 
  1356  0191                     	;# 
  1357  0192                     	;# 
  1358  0193                     	;# 
  1359  0193                     	;# 
  1360  0193                     	;# 
  1361  0194                     	;# 
  1362  0195                     	;# 
  1363  0196                     	;# 
  1364  0199                     	;# 
  1365  019A                     	;# 
  1366  019B                     	;# 
  1367  019B                     	;# 
  1368  019B                     	;# 
  1369  019B                     	;# 
  1370  019C                     	;# 
  1371  019C                     	;# 
  1372  019D                     	;# 
  1373  019E                     	;# 
  1374  019F                     	;# 
  1375  020D                     	;# 
  1376  0210                     	;# 
  1377  0211                     	;# 
  1378  0212                     	;# 
  1379  0213                     	;# 
  1380  0214                     	;# 
  1381  0215                     	;# 
  1382  0215                     	;# 
  1383  0216                     	;# 
  1384  0217                     	;# 
  1385  0291                     	;# 
  1386  0291                     	;# 
  1387  0292                     	;# 
  1388  0293                     	;# 
  1389  0294                     	;# 
  1390  0295                     	;# 
  1391  0295                     	;# 
  1392  0296                     	;# 
  1393  0298                     	;# 
  1394  0298                     	;# 
  1395  0299                     	;# 
  1396  029A                     	;# 
  1397  029B                     	;# 
  1398  029C                     	;# 
  1399  029C                     	;# 
  1400  029D                     	;# 
  1401  029E                     	;# 
  1402  029F                     	;# 
  1403  0311                     	;# 
  1404  0311                     	;# 
  1405  0312                     	;# 
  1406  0313                     	;# 
  1407  0314                     	;# 
  1408  0315                     	;# 
  1409  0315                     	;# 
  1410  0316                     	;# 
  1411  0318                     	;# 
  1412  0318                     	;# 
  1413  0319                     	;# 
  1414  031A                     	;# 
  1415  031C                     	;# 
  1416  031C                     	;# 
  1417  031D                     	;# 
  1418  031E                     	;# 
  1419  0394                     	;# 
  1420  0395                     	;# 
  1421  0396                     	;# 
  1422  0415                     	;# 
  1423  0416                     	;# 
  1424  0417                     	;# 
  1425  041C                     	;# 
  1426  041D                     	;# 
  1427  041E                     	;# 
  1428  0791                     	;# 
  1429  0792                     	;# 
  1430  0793                     	;# 
  1431  0794                     	;# 
  1432  0795                     	;# 
  1433  0798                     	;# 
  1434  0799                     	;# 
  1435  07A0                     	;# 
  1436  07A1                     	;# 
  1437  07A3                     	;# 
  1438  07A4                     	;# 
  1439  07A6                     	;# 
  1440  07A7                     	;# 
  1441  07A9                     	;# 
  1442  07AA                     	;# 
  1443  0FE4                     	;# 
  1444  0FE5                     	;# 
  1445  0FE6                     	;# 
  1446  0FE7                     	;# 
  1447  0FE8                     	;# 
  1448  0FE9                     	;# 
  1449  0FEA                     	;# 
  1450  0FEB                     	;# 
  1451  0FED                     	;# 
  1452  0FEE                     	;# 
  1453  0FEF                     	;# 
  1454  0000                     	;# 
  1455  0001                     	;# 
  1456  0002                     	;# 
  1457  0003                     	;# 
  1458  0004                     	;# 
  1459  0005                     	;# 
  1460  0006                     	;# 
  1461  0007                     	;# 
  1462  0008                     	;# 
  1463  0009                     	;# 
  1464  000A                     	;# 
  1465  000B                     	;# 
  1466  000C                     	;# 
  1467  000D                     	;# 
  1468  000E                     	;# 
  1469  0010                     	;# 
  1470  0011                     	;# 
  1471  0012                     	;# 
  1472  0013                     	;# 
  1473  0015                     	;# 
  1474  0016                     	;# 
  1475  0016                     	;# 
  1476  0017                     	;# 
  1477  0018                     	;# 
  1478  0019                     	;# 
  1479  001A                     	;# 
  1480  001B                     	;# 
  1481  001C                     	;# 
  1482  001E                     	;# 
  1483  001F                     	;# 
  1484  008C                     	;# 
  1485  008D                     	;# 
  1486  008E                     	;# 
  1487  0090                     	;# 
  1488  0091                     	;# 
  1489  0092                     	;# 
  1490  0093                     	;# 
  1491  0095                     	;# 
  1492  0096                     	;# 
  1493  0097                     	;# 
  1494  0098                     	;# 
  1495  0099                     	;# 
  1496  009A                     	;# 
  1497  009B                     	;# 
  1498  009B                     	;# 
  1499  009C                     	;# 
  1500  009D                     	;# 
  1501  009E                     	;# 
  1502  010C                     	;# 
  1503  010D                     	;# 
  1504  010E                     	;# 
  1505  0110                     	;# 
  1506  0111                     	;# 
  1507  0112                     	;# 
  1508  0113                     	;# 
  1509  0114                     	;# 
  1510  0115                     	;# 
  1511  0116                     	;# 
  1512  0117                     	;# 
  1513  0118                     	;# 
  1514  0119                     	;# 
  1515  011A                     	;# 
  1516  011B                     	;# 
  1517  011D                     	;# 
  1518  018C                     	;# 
  1519  018D                     	;# 
  1520  0191                     	;# 
  1521  0191                     	;# 
  1522  0192                     	;# 
  1523  0193                     	;# 
  1524  0193                     	;# 
  1525  0193                     	;# 
  1526  0194                     	;# 
  1527  0195                     	;# 
  1528  0196                     	;# 
  1529  0199                     	;# 
  1530  019A                     	;# 
  1531  019B                     	;# 
  1532  019B                     	;# 
  1533  019B                     	;# 
  1534  019B                     	;# 
  1535  019C                     	;# 
  1536  019C                     	;# 
  1537  019D                     	;# 
  1538  019E                     	;# 
  1539  019F                     	;# 
  1540  020D                     	;# 
  1541  0210                     	;# 
  1542  0211                     	;# 
  1543  0212                     	;# 
  1544  0213                     	;# 
  1545  0214                     	;# 
  1546  0215                     	;# 
  1547  0215                     	;# 
  1548  0216                     	;# 
  1549  0217                     	;# 
  1550  0291                     	;# 
  1551  0291                     	;# 
  1552  0292                     	;# 
  1553  0293                     	;# 
  1554  0294                     	;# 
  1555  0295                     	;# 
  1556  0295                     	;# 
  1557  0296                     	;# 
  1558  0298                     	;# 
  1559  0298                     	;# 
  1560  0299                     	;# 
  1561  029A                     	;# 
  1562  029B                     	;# 
  1563  029C                     	;# 
  1564  029C                     	;# 
  1565  029D                     	;# 
  1566  029E                     	;# 
  1567  029F                     	;# 
  1568  0311                     	;# 
  1569  0311                     	;# 
  1570  0312                     	;# 
  1571  0313                     	;# 
  1572  0314                     	;# 
  1573  0315                     	;# 
  1574  0315                     	;# 
  1575  0316                     	;# 
  1576  0318                     	;# 
  1577  0318                     	;# 
  1578  0319                     	;# 
  1579  031A                     	;# 
  1580  031C                     	;# 
  1581  031C                     	;# 
  1582  031D                     	;# 
  1583  031E                     	;# 
  1584  0394                     	;# 
  1585  0395                     	;# 
  1586  0396                     	;# 
  1587  0415                     	;# 
  1588  0416                     	;# 
  1589  0417                     	;# 
  1590  041C                     	;# 
  1591  041D                     	;# 
  1592  041E                     	;# 
  1593  0791                     	;# 
  1594  0792                     	;# 
  1595  0793                     	;# 
  1596  0794                     	;# 
  1597  0795                     	;# 
  1598  0798                     	;# 
  1599  0799                     	;# 
  1600  07A0                     	;# 
  1601  07A1                     	;# 
  1602  07A3                     	;# 
  1603  07A4                     	;# 
  1604  07A6                     	;# 
  1605  07A7                     	;# 
  1606  07A9                     	;# 
  1607  07AA                     	;# 
  1608  0FE4                     	;# 
  1609  0FE5                     	;# 
  1610  0FE6                     	;# 
  1611  0FE7                     	;# 
  1612  0FE8                     	;# 
  1613  0FE9                     	;# 
  1614  0FEA                     	;# 
  1615  0FEB                     	;# 
  1616  0FED                     	;# 
  1617  0FEE                     	;# 
  1618  0FEF                     	;# 
  1619                           
  1620                           	psect	idataBANK1
  1621  1E36                     __pidataBANK1:
  1622                           
  1623                           ;initializer for lcd_set_cursor@F2781
  1624  1E36  3400               	retlw	0
  1625  1E37  3440               	retlw	64
  1626  1E38  3414               	retlw	20
  1627  1E39  3454               	retlw	84
  1628                           
  1629                           ;initializer for print_digit@F2820
  1630  1E3A  34FF               	retlw	255
  1631  1E3B  34FF               	retlw	255
  1632  1E3C  34FF               	retlw	255
  1633  1E3D  34FF               	retlw	255
  1634                           
  1635                           	psect	idataBANK2
  1636  1003                     __pidataBANK2:
  1637                           
  1638                           ;initializer for main@F2849
  1639  1003  3402               	retlw	2
  1640  1004  3404               	retlw	4
  1641  1005  3400               	retlw	0
  1642  1006  3400               	retlw	0
  1643  1007  3400               	retlw	0
  1644  1008  3400               	retlw	0
  1645  1009  3400               	retlw	0
  1646  100A  3400               	retlw	0
  1647  100B  3400               	retlw	0
  1648  100C  3400               	retlw	0
  1649  100D  3412               	retlw	18
  1650  100E  3402               	retlw	2
  1651                           
  1652                           ;initializer for _segdata
  1653  100F  343F               	retlw	63
  1654  1010  3406               	retlw	6
  1655  1011  345B               	retlw	91
  1656  1012  344F               	retlw	79
  1657  1013  3466               	retlw	102
  1658  1014  346D               	retlw	109
  1659  1015  347D               	retlw	125
  1660  1016  3407               	retlw	7
  1661  1017  347F               	retlw	127
  1662  1018  346F               	retlw	111
  1663                           
  1664                           ;initializer for main@F2851
  1665  1019  3427               	retlw	39
  1666  101A  3410               	retlw	16
  1667  101B  3402               	retlw	2
  1668  101C  3400               	retlw	0
  1669                           
  1670                           ;initializer for main@F2853
  1671  101D  3408               	retlw	8
  1672  101E  3410               	retlw	16
  1673  000D                     _PORTBbits	set	13
  1674  0075                     _RC5	set	117
  1675  0076                     _RC6	set	118
  1676  0077                     _RC7	set	119
  1677  0097                     _WDTCON	set	151
  1678  0098                     _OSCTUNE	set	152
  1679  0099                     _OSCCON	set	153
  1680  0095                     _OPTION_REGbits	set	149
  1681  008E                     _TRISC	set	142
  1682  008D                     _TRISB	set	141
  1683  008C                     _TRISA	set	140
  1684  0090                     _TRISE	set	144
  1685  0116                     _BORCON	set	278
  1686  011D                     _APFCON	set	285
  1687  010E                     _LATC	set	270
  1688  010D                     _LATB	set	269
  1689  010C                     _LATA	set	268
  1690  0110                     _LATE	set	272
  1691  018C                     _ANSELA	set	396
  1692  018D                     _ANSELB	set	397
  1693  0215                     _SSPCON1	set	533
  1694  0212                     _SSPADD	set	530
  1695  0215                     _SSPCON1bits	set	533
  1696  0214                     _SSPSTATbits	set	532
  1697  0211                     _SSPBUF	set	529
  1698  0216                     _SSPCON2bits	set	534
  1699  0214                     _SSPSTAT	set	532
  1700  0216                     _SSPCON2	set	534
  1701  020D                     _WPUB	set	525
  1702  0210                     _WPUE	set	528
  1703                           
  1704                           	psect	stringtext1
  1705  2000                     __pstringtext1:
  1706  2000                     STR_3:
  1707  2000  344C               	retlw	76	;'L'
  1708  2001  346F               	retlw	111	;'o'
  1709  2002  3461               	retlw	97	;'a'
  1710  2003  3464               	retlw	100	;'d'
  1711  2004  3420               	retlw	32	;' '
  1712  2005  3463               	retlw	99	;'c'
  1713  2006  3465               	retlw	101	;'e'
  1714  2007  346C               	retlw	108	;'l'
  1715  2008  346C               	retlw	108	;'l'
  1716  2009  3420               	retlw	32	;' '
  1717  200A  3455               	retlw	85	;'U'
  1718  200B  346E               	retlw	110	;'n'
  1719  200C  3469               	retlw	105	;'i'
  1720  200D  3474               	retlw	116	;'t'
  1721  200E  3400               	retlw	0
  1722                           
  1723                           	psect	stringtext2
  1724  200F                     __pstringtext2:
  1725  200F                     STR_7:
  1726  200F  3473               	retlw	115	;'s'
  1727  2010  3465               	retlw	101	;'e'
  1728  2011  3474               	retlw	116	;'t'
  1729  2012  3420               	retlw	32	;' '
  1730  2013  346D               	retlw	109	;'m'
  1731  2014  3461               	retlw	97	;'a'
  1732  2015  3478               	retlw	120	;'x'
  1733  2016  3420               	retlw	32	;' '
  1734  2017  346D               	retlw	109	;'m'
  1735  2018  346C               	retlw	108	;'l'
  1736  2019  3420               	retlw	32	;' '
  1737  201A  3425               	retlw	37	;'%'
  1738  201B  3464               	retlw	100	;'d'
  1739  201C  3400               	retlw	0
  1740                           
  1741                           	psect	stringtext3
  1742  201D                     __pstringtext3:
  1743  201D                     STR_2:
  1744  201D  3449               	retlw	73	;'I'
  1745  201E  346E               	retlw	110	;'n'
  1746  201F  3469               	retlw	105	;'i'
  1747  2020  3474               	retlw	116	;'t'
  1748  2021  3469               	retlw	105	;'i'
  1749  2022  3461               	retlw	97	;'a'
  1750  2023  346C               	retlw	108	;'l'
  1751  2024  3469               	retlw	105	;'i'
  1752  2025  347A               	retlw	122	;'z'
  1753  2026  3465               	retlw	101	;'e'
  1754  2027  3400               	retlw	0
  1755                           
  1756                           	psect	stringtext4
  1757  2028                     __pstringtext4:
  1758  2028                     STR_5:
  1759  2028  3425               	retlw	37	;'%'
  1760  2029  3464               	retlw	100	;'d'
  1761  202A  3467               	retlw	103	;'g'
  1762  202B  3420               	retlw	32	;' '
  1763  202C  342F               	retlw	47	;'/'
  1764  202D  3420               	retlw	32	;' '
  1765  202E  3425               	retlw	37	;'%'
  1766  202F  3464               	retlw	100	;'d'
  1767  2030  346D               	retlw	109	;'m'
  1768  2031  346C               	retlw	108	;'l'
  1769  2032  3400               	retlw	0
  1770                           
  1771                           	psect	stringtext5
  1772  2033                     __pstringtext5:
  1773  2033                     STR_4:
  1774  2033  3425               	retlw	37	;'%'
  1775  2034  346C               	retlw	108	;'l'
  1776  2035  3475               	retlw	117	;'u'
  1777  2036  3420               	retlw	32	;' '
  1778  2037  3476               	retlw	118	;'v'
  1779  2038  3461               	retlw	97	;'a'
  1780  2039  346C               	retlw	108	;'l'
  1781  203A  3400               	retlw	0
  1782                           
  1783                           	psect	stringtext6
  1784  203B                     __pstringtext6:
  1785  203B                     STR_6:
  1786  203B  3425               	retlw	37	;'%'
  1787  203C  3464               	retlw	100	;'d'
  1788  203D  3420               	retlw	32	;' '
  1789  203E  3425               	retlw	37	;'%'
  1790  203F  3425               	retlw	37	;'%'
  1791  2040  3400               	retlw	0
  1792                           
  1793                           	psect	stringtext7
  1794  2041                     __pstringtext7:
  1795  2041                     STR_8:
  1796  2041  346C               	retlw	108	;'l'
  1797  2042  3464               	retlw	100	;'d'
  1798  2043  3400               	retlw	0
  1799                           
  1800                           	psect	stringtext8
  1801  2044                     __pstringtext8:
  1802  2044                     STR_12:
  1803  2044  346C               	retlw	108	;'l'
  1804  2045  3469               	retlw	105	;'i'
  1805  2046  3400               	retlw	0
  1806                           
  1807                           	psect	stringtext9
  1808  2047                     __pstringtext9:
  1809  2047                     STR_17:
  1810  2047  346C               	retlw	108	;'l'
  1811  2048  3475               	retlw	117	;'u'
  1812  2049  3400               	retlw	0
  1813                           
  1814                           	psect	stringtext10
  1815  204A                     __pstringtext10:
  1816  204A                     STR_1:
  1817  204A  3420               	retlw	32	;' '
  1818  204B  3400               	retlw	0
  1819                           
  1820                           	psect	stringtext11
  1821  0000                     __pstringtext11:
  1822  2041                     
  1823                           	psect	cinit
  1824  07CD                     start_initialization:	
  1825                           ; #config settings
  1826                           
  1827  07CD                     __initialization:
  1828                           
  1829                           ; Initialize objects allocated to BANK1
  1830  07CD  3036               	movlw	low __pidataBANK1
  1831  07CE  0084               	movwf	4
  1832  07CF  309E               	movlw	(high __pidataBANK1)| (0+128)
  1833  07D0  0085               	movwf	5
  1834  07D1  30E5               	movlw	low __pdataBANK1
  1835  07D2  0086               	movwf	6
  1836  07D3  3000               	movlw	high __pdataBANK1
  1837  07D4  0087               	movwf	7
  1838  07D5  3008               	movlw	8
  1839  07D6  319E  261A  3187   	fcall	init_ram
  1840                           
  1841                           ; Initialize objects allocated to BANK2
  1842  07D9  3003               	movlw	low __pidataBANK2
  1843  07DA  0084               	movwf	4
  1844  07DB  3090               	movlw	(high __pidataBANK2)| (0+128)
  1845  07DC  0085               	movwf	5
  1846  07DD  3020               	movlw	low __pdataBANK2
  1847  07DE  0086               	movwf	6
  1848  07DF  3001               	movlw	high __pdataBANK2
  1849  07E0  0087               	movwf	7
  1850  07E1  301C               	movlw	28
  1851  07E2  319E  261A  3187   	fcall	init_ram
  1852                           
  1853                           ; Clear objects allocated to BANK1
  1854  07E5  30D8               	movlw	low __pbssBANK1
  1855  07E6  0084               	movwf	4
  1856  07E7  3000               	movlw	high __pbssBANK1
  1857  07E8  0085               	movwf	5
  1858  07E9  300D               	movlw	13
  1859  07EA  319E  2614  3187   	fcall	clear_ram0
  1860                           
  1861                           ; Clear objects allocated to BANK2
  1862  07ED  3056               	movlw	low __pbssBANK2
  1863  07EE  0084               	movwf	4
  1864  07EF  3001               	movlw	high __pbssBANK2
  1865  07F0  0085               	movwf	5
  1866  07F1  3008               	movlw	8
  1867  07F2  319E  2614  3187   	fcall	clear_ram0
  1868                           
  1869                           ; Clear objects allocated to BANK3
  1870  07F5  30A0               	movlw	low __pbssBANK3
  1871  07F6  0084               	movwf	4
  1872  07F7  3001               	movlw	high __pbssBANK3
  1873  07F8  0085               	movwf	5
  1874  07F9  3020               	movlw	32
  1875  07FA  319E  2614  3187   	fcall	clear_ram0
  1876  07FD                     end_of_initialization:	
  1877                           ;End of C runtime variable initialization code
  1878                           
  1879  07FD                     __end_of__initialization:
  1880  07FD  0020               	movlb	0
  1881  07FE  318A  2A9A         	ljmp	_main	;jump to C main() function
  1882                           
  1883                           	psect	bssBANK1
  1884  00D8                     __pbssBANK1:
  1885  00D8                     clear_segment@F2810:
  1886  00D8                     	ds	4
  1887  00DC                     _nout:
  1888  00DC                     	ds	2
  1889  00DE                     _width:
  1890  00DE                     	ds	2
  1891  00E0                     _prec:
  1892  00E0                     	ds	2
  1893  00E2                     _flags:
  1894  00E2                     	ds	2
  1895  00E4                     _m_brightness:
  1896  00E4                     	ds	1
  1897                           
  1898                           	psect	dataBANK1
  1899  00E5                     __pdataBANK1:
  1900  00E5                     lcd_set_cursor@F2781:
  1901  00E5                     	ds	4
  1902  00E9                     print_digit@F2820:
  1903  00E9                     	ds	4
  1904                           
  1905                           	psect	bssBANK2
  1906  0156                     __pbssBANK2:
  1907  0156                     main@F2855:
  1908  0156                     	ds	8
  1909                           
  1910                           	psect	dataBANK2
  1911  0120                     __pdataBANK2:
  1912  0120                     main@F2849:
  1913  0120                     	ds	12
  1914  012C                     _segdata:
  1915  012C                     	ds	10
  1916  0136                     main@F2851:
  1917  0136                     	ds	4
  1918  013A                     main@F2853:
  1919  013A                     	ds	2
  1920                           
  1921                           	psect	bssBANK3
  1922  01A0                     __pbssBANK3:
  1923  01A0                     _dbuf:
  1924  01A0                     	ds	32
  1925                           
  1926                           	psect	inittext
  1927  1E1A                     init_ram:
  1928  1E1A  00FE               	movwf	btemp
  1929  1E1B                     initloop:
  1930  1E1B  0012               	moviw fsr0++
  1931  1E1C  001E               	movwi fsr1++
  1932  1E1D  0BFE               	decfsz	btemp,f
  1933  1E1E  2E1B               	goto	initloop
  1934  1E1F  3400               	retlw	0
  1935                           
  1936                           	psect	clrtext
  1937  1E14                     clear_ram0:	
  1938                           ;	Called with FSR0 containing the base address, and
  1939                           ;	WREG with the size to clear
  1940                           
  1941  1E14  0064               	clrwdt	;clear the watchdog before getting into this loop
  1942  1E15                     clrloop0:
  1943  1E15  0180               	clrf	0	;clear RAM location pointed to by FSR
  1944  1E16  3101               	addfsr 0,1
  1945  1E17  0B89               	decfsz	9,f	;Have we reached the end of clearing yet?
  1946  1E18  2E15               	goto	clrloop0	;have we reached the end yet?
  1947  1E19  3400               	retlw	0	;all done for this memory range, return
  1948                           
  1949                           	psect	cstackBANK2
  1950  013C                     __pcstackBANK2:
  1951  013C                     main@lcd:
  1952                           
  1953                           ; 4 bytes @ 0x0
  1954  013C                     	ds	4
  1955  0140                     main@tm1637:
  1956                           
  1957                           ; 2 bytes @ 0x4
  1958  0140                     	ds	2
  1959  0142                     main@loadcell:
  1960                           
  1961                           ; 12 bytes @ 0x6
  1962  0142                     	ds	12
  1963  014E                     main@drink:
  1964                           
  1965                           ; 8 bytes @ 0x12
  1966  014E                     	ds	8
  1967                           
  1968                           	psect	cstackBANK1
  1969  00A0                     __pcstackBANK1:
  1970  00A0                     ??_vfprintf:
  1971                           
  1972                           ; 1 bytes @ 0x0
  1973  00A0                     	ds	2
  1974  00A2                     vfprintf@fp:
  1975                           
  1976                           ; 1 bytes @ 0x2
  1977  00A2                     	ds	1
  1978  00A3                     vfprintf@cfmt:
  1979                           
  1980                           ; 2 bytes @ 0x3
  1981  00A3                     	ds	2
  1982  00A5                     ?_sprintf:
  1983  00A5                     sprintf@fmt:	
  1984                           ; 2 bytes @ 0x5
  1985                           
  1986                           
  1987                           ; 2 bytes @ 0x5
  1988  00A5                     	ds	6
  1989  00AB                     ??_sprintf:
  1990                           
  1991                           ; 1 bytes @ 0xB
  1992  00AB                     	ds	1
  1993  00AC                     sprintf@ap:
  1994                           
  1995                           ; 1 bytes @ 0xC
  1996  00AC                     	ds	1
  1997  00AD                     sprintf@s:
  1998                           
  1999                           ; 1 bytes @ 0xD
  2000  00AD                     	ds	1
  2001  00AE                     sprintf@f:
  2002                           
  2003                           ; 5 bytes @ 0xE
  2004  00AE                     	ds	5
  2005  00B3                     ??_initialize:
  2006  00B3                     ??_print_gram:	
  2007                           ; 1 bytes @ 0x13
  2008                           
  2009  00B3                     ?_set_max_gram:	
  2010                           ; 1 bytes @ 0x13
  2011                           
  2012  00B3                     set_max_gram@max_gram:	
  2013                           ; 1 bytes @ 0x13
  2014                           
  2015                           
  2016                           ; 2 bytes @ 0x13
  2017  00B3                     	ds	1
  2018  00B4                     initialize@valstr:
  2019                           
  2020                           ; 16 bytes @ 0x14
  2021  00B4                     	ds	1
  2022  00B5                     set_max_gram@empty_gram:
  2023  00B5                     print_gram@row1:	
  2024                           ; 2 bytes @ 0x15
  2025                           
  2026                           
  2027                           ; 16 bytes @ 0x15
  2028  00B5                     	ds	2
  2029  00B7                     set_max_gram@valstr:
  2030                           
  2031                           ; 16 bytes @ 0x17
  2032  00B7                     	ds	13
  2033  00C4                     initialize@p:
  2034                           
  2035                           ; 1 bytes @ 0x24
  2036  00C4                     	ds	1
  2037  00C5                     print_gram@row2:
  2038                           
  2039                           ; 16 bytes @ 0x25
  2040  00C5                     	ds	2
  2041  00C7                     set_max_gram@p:
  2042                           
  2043                           ; 1 bytes @ 0x27
  2044  00C7                     	ds	14
  2045  00D5                     print_gram@p:
  2046                           
  2047                           ; 1 bytes @ 0x35
  2048  00D5                     	ds	1
  2049  00D6                     ??_main:
  2050                           
  2051                           ; 1 bytes @ 0x36
  2052  00D6                     	ds	2
  2053                           
  2054                           	psect	cstackCOMMON
  2055  0070                     __pcstackCOMMON:
  2056  0070                     ?_OSCILLATOR_Initialize:
  2057  0070                     ??_OSCILLATOR_Initialize:	
  2058                           ; 1 bytes @ 0x0
  2059                           
  2060  0070                     ?_WDT_Initialize:	
  2061                           ; 1 bytes @ 0x0
  2062                           
  2063  0070                     ??_WDT_Initialize:	
  2064                           ; 1 bytes @ 0x0
  2065                           
  2066  0070                     ?_initialize:	
  2067                           ; 1 bytes @ 0x0
  2068                           
  2069  0070                     ?_calc_percentage:	
  2070                           ; 1 bytes @ 0x0
  2071                           
  2072  0070                     ?_print_gram:	
  2073                           ; 1 bytes @ 0x0
  2074                           
  2075  0070                     ?_putch:	
  2076                           ; 1 bytes @ 0x0
  2077                           
  2078  0070                     ??_putch:	
  2079                           ; 1 bytes @ 0x0
  2080                           
  2081  0070                     ?_PIN_MANAGER_Initialize:	
  2082                           ; 1 bytes @ 0x0
  2083                           
  2084  0070                     ??_PIN_MANAGER_Initialize:	
  2085                           ; 1 bytes @ 0x0
  2086                           
  2087  0070                     ?_SYSTEM_Initialize:	
  2088                           ; 1 bytes @ 0x0
  2089                           
  2090  0070                     ??_SYSTEM_Initialize:	
  2091                           ; 1 bytes @ 0x0
  2092                           
  2093  0070                     ?_i2c_wait:	
  2094                           ; 1 bytes @ 0x0
  2095                           
  2096  0070                     ??_i2c_wait:	
  2097                           ; 1 bytes @ 0x0
  2098                           
  2099  0070                     ?_i2c_start:	
  2100                           ; 1 bytes @ 0x0
  2101                           
  2102  0070                     ??_i2c_start:	
  2103                           ; 1 bytes @ 0x0
  2104                           
  2105  0070                     ?_i2c_stop:	
  2106                           ; 1 bytes @ 0x0
  2107                           
  2108  0070                     ??_i2c_stop:	
  2109                           ; 1 bytes @ 0x0
  2110                           
  2111  0070                     ?_i2c_write:	
  2112                           ; 1 bytes @ 0x0
  2113                           
  2114  0070                     ??_i2c_write:	
  2115                           ; 1 bytes @ 0x0
  2116                           
  2117  0070                     ?_main:	
  2118                           ; 1 bytes @ 0x0
  2119                           
  2120  0070                     ?_CLK_SET_OUTPUT:	
  2121                           ; 1 bytes @ 0x0
  2122                           
  2123  0070                     ??_CLK_SET_OUTPUT:	
  2124                           ; 1 bytes @ 0x0
  2125                           
  2126  0070                     ?_CLK_SET_HIGH:	
  2127                           ; 1 bytes @ 0x0
  2128                           
  2129  0070                     ??_CLK_SET_HIGH:	
  2130                           ; 1 bytes @ 0x0
  2131                           
  2132  0070                     ?_CLK_SET_LOW:	
  2133                           ; 1 bytes @ 0x0
  2134                           
  2135  0070                     ??_CLK_SET_LOW:	
  2136                           ; 1 bytes @ 0x0
  2137                           
  2138  0070                     ?_DIO_SET_OUTPUT:	
  2139                           ; 1 bytes @ 0x0
  2140                           
  2141  0070                     ??_DIO_SET_OUTPUT:	
  2142                           ; 1 bytes @ 0x0
  2143                           
  2144  0070                     ?_DIO_SET_INPUT:	
  2145                           ; 1 bytes @ 0x0
  2146                           
  2147  0070                     ??_DIO_SET_INPUT:	
  2148                           ; 1 bytes @ 0x0
  2149                           
  2150  0070                     ?_DIO_SET_HIGH:	
  2151                           ; 1 bytes @ 0x0
  2152                           
  2153  0070                     ??_DIO_SET_HIGH:	
  2154                           ; 1 bytes @ 0x0
  2155                           
  2156  0070                     ?_DIO_SET_LOW:	
  2157                           ; 1 bytes @ 0x0
  2158                           
  2159  0070                     ??_DIO_SET_LOW:	
  2160                           ; 1 bytes @ 0x0
  2161                           
  2162  0070                     ?_start_segment:	
  2163                           ; 1 bytes @ 0x0
  2164                           
  2165  0070                     ?_stop_segment:	
  2166                           ; 1 bytes @ 0x0
  2167                           
  2168  0070                     ?_get_DIO_PIN_value:	
  2169                           ; 1 bytes @ 0x0
  2170                           
  2171  0070                     ??_get_DIO_PIN_value:	
  2172                           ; 1 bytes @ 0x0
  2173                           
  2174  0070                     ?_set_brigthness:	
  2175                           ; 1 bytes @ 0x0
  2176                           
  2177  0070                     ?_initialize_digit:	
  2178                           ; 1 bytes @ 0x0
  2179                           
  2180  0070                     ?_set_CELL_CLK_LOW:	
  2181                           ; 1 bytes @ 0x0
  2182                           
  2183  0070                     ??_set_CELL_CLK_LOW:	
  2184                           ; 1 bytes @ 0x0
  2185                           
  2186  0070                     ?_set_CELL_CLK_HIGH:	
  2187                           ; 1 bytes @ 0x0
  2188                           
  2189  0070                     ??_set_CELL_CLK_HIGH:	
  2190                           ; 1 bytes @ 0x0
  2191                           
  2192  0070                     ?_scale_convert_gram:	
  2193                           ; 1 bytes @ 0x0
  2194                           
  2195  0070                     ?_lcd_init:	
  2196                           ; 1 bytes @ 0x0
  2197                           
  2198  0070                     ?_lcd_backlight:	
  2199                           ; 1 bytes @ 0x0
  2200                           
  2201  0070                     ?_lcd_clear:	
  2202                           ; 1 bytes @ 0x0
  2203                           
  2204  0070                     ??___aodiv:	
  2205                           ; 1 bytes @ 0x0
  2206                           
  2207  0070                     ??___aomod:	
  2208                           ; 1 bytes @ 0x0
  2209                           
  2210  0070                     ??___lodiv:	
  2211                           ; 1 bytes @ 0x0
  2212                           
  2213  0070                     ??___lomod:	
  2214                           ; 1 bytes @ 0x0
  2215                           
  2216  0070                     ?__Umul8_16:	
  2217                           ; 1 bytes @ 0x0
  2218                           
  2219  0070                     ?_fputc:	
  2220                           ; 2 bytes @ 0x0
  2221                           
  2222  0070                     ?_strlen:	
  2223                           ; 2 bytes @ 0x0
  2224                           
  2225  0070                     ?_strncmp:	
  2226                           ; 2 bytes @ 0x0
  2227                           
  2228  0070                     ?_get_CELL_DAT_VAL:	
  2229                           ; 2 bytes @ 0x0
  2230                           
  2231  0070                     ?___awdiv:	
  2232                           ; 2 bytes @ 0x0
  2233                           
  2234  0070                     ?___awmod:	
  2235                           ; 2 bytes @ 0x0
  2236                           
  2237  0070                     ?___lldiv:	
  2238                           ; 2 bytes @ 0x0
  2239                           
  2240  0070                     ?___fldiv:	
  2241                           ; 4 bytes @ 0x0
  2242                           
  2243  0070                     ?___xxtofl:	
  2244                           ; 4 bytes @ 0x0
  2245                           
  2246  0070                     i2c_write@data:	
  2247                           ; 4 bytes @ 0x0
  2248                           
  2249  0070                     set_brigthness@brightness:	
  2250                           ; 1 bytes @ 0x0
  2251                           
  2252  0070                     __Umul8_16@multiplicand:	
  2253                           ; 1 bytes @ 0x0
  2254                           
  2255  0070                     putch@c:	
  2256                           ; 1 bytes @ 0x0
  2257                           
  2258  0070                     ___awdiv@divisor:	
  2259                           ; 1 bytes @ 0x0
  2260                           
  2261  0070                     ___awmod@divisor:	
  2262                           ; 2 bytes @ 0x0
  2263                           
  2264  0070                     fputc@c:	
  2265                           ; 2 bytes @ 0x0
  2266                           
  2267  0070                     strncmp@_l:	
  2268                           ; 2 bytes @ 0x0
  2269                           
  2270  0070                     ___lldiv@divisor:	
  2271                           ; 2 bytes @ 0x0
  2272                           
  2273  0070                     ___fldiv@a:	
  2274                           ; 4 bytes @ 0x0
  2275                           
  2276  0070                     ___xxtofl@val:	
  2277                           ; 4 bytes @ 0x0
  2278                           
  2279                           
  2280                           ; 4 bytes @ 0x0
  2281  0070                     	ds	1
  2282  0071                     ?_lcd_cmd:
  2283  0071                     CLK_SET_OUTPUT@p:	
  2284                           ; 1 bytes @ 0x1
  2285                           
  2286  0071                     CLK_SET_HIGH@p:	
  2287                           ; 1 bytes @ 0x1
  2288                           
  2289  0071                     CLK_SET_LOW@p:	
  2290                           ; 1 bytes @ 0x1
  2291                           
  2292  0071                     DIO_SET_OUTPUT@p:	
  2293                           ; 1 bytes @ 0x1
  2294                           
  2295  0071                     DIO_SET_INPUT@p:	
  2296                           ; 1 bytes @ 0x1
  2297                           
  2298  0071                     DIO_SET_HIGH@p:	
  2299                           ; 1 bytes @ 0x1
  2300                           
  2301  0071                     DIO_SET_LOW@p:	
  2302                           ; 1 bytes @ 0x1
  2303                           
  2304  0071                     get_DIO_PIN_value@p:	
  2305                           ; 1 bytes @ 0x1
  2306                           
  2307  0071                     set_brigthness@on:	
  2308                           ; 1 bytes @ 0x1
  2309                           
  2310  0071                     set_CELL_CLK_LOW@p:	
  2311                           ; 1 bytes @ 0x1
  2312                           
  2313  0071                     set_CELL_CLK_HIGH@p:	
  2314                           ; 1 bytes @ 0x1
  2315                           
  2316  0071                     lcd_cmd@cmd:	
  2317                           ; 1 bytes @ 0x1
  2318                           
  2319  0071                     ___aodiv@counter:	
  2320                           ; 1 bytes @ 0x1
  2321                           
  2322  0071                     ___aomod@counter:	
  2323                           ; 1 bytes @ 0x1
  2324                           
  2325  0071                     ___lomod@counter:	
  2326                           ; 1 bytes @ 0x1
  2327                           
  2328  0071                     ___lodiv@quotient:	
  2329                           ; 1 bytes @ 0x1
  2330                           
  2331                           
  2332                           ; 8 bytes @ 0x1
  2333  0071                     	ds	1
  2334  0072                     ??__Umul8_16:
  2335  0072                     ??_strlen:	
  2336                           ; 1 bytes @ 0x2
  2337                           
  2338  0072                     ??_start_segment:	
  2339                           ; 1 bytes @ 0x2
  2340                           
  2341  0072                     ??_stop_segment:	
  2342                           ; 1 bytes @ 0x2
  2343                           
  2344  0072                     ?_write_byte:	
  2345                           ; 1 bytes @ 0x2
  2346                           
  2347  0072                     ??_set_brigthness:	
  2348                           ; 1 bytes @ 0x2
  2349                           
  2350  0072                     ??_get_CELL_DAT_VAL:	
  2351                           ; 1 bytes @ 0x2
  2352                           
  2353  0072                     ??_lcd_cmd:	
  2354                           ; 1 bytes @ 0x2
  2355                           
  2356  0072                     start_segment@p:	
  2357                           ; 1 bytes @ 0x2
  2358                           
  2359  0072                     stop_segment@p:	
  2360                           ; 1 bytes @ 0x2
  2361                           
  2362  0072                     write_byte@b:	
  2363                           ; 1 bytes @ 0x2
  2364                           
  2365  0072                     lcd_cmd@p:	
  2366                           ; 1 bytes @ 0x2
  2367                           
  2368  0072                     ___aodiv@sign:	
  2369                           ; 1 bytes @ 0x2
  2370                           
  2371  0072                     ___aomod@sign:	
  2372                           ; 1 bytes @ 0x2
  2373                           
  2374  0072                     fputc@fp:	
  2375                           ; 1 bytes @ 0x2
  2376                           
  2377  0072                     ___awdiv@dividend:	
  2378                           ; 1 bytes @ 0x2
  2379                           
  2380  0072                     ___awmod@dividend:	
  2381                           ; 2 bytes @ 0x2
  2382                           
  2383  0072                     strncmp@_r:	
  2384                           ; 2 bytes @ 0x2
  2385                           
  2386                           
  2387                           ; 2 bytes @ 0x2
  2388  0072                     	ds	1
  2389  0073                     ?_write4bits:
  2390  0073                     ?_command:	
  2391                           ; 1 bytes @ 0x3
  2392                           
  2393  0073                     ??_fputc:	
  2394                           ; 1 bytes @ 0x3
  2395                           
  2396  0073                     ??_write_byte:	
  2397                           ; 1 bytes @ 0x3
  2398                           
  2399  0073                     ??_lcd_backlight:	
  2400                           ; 1 bytes @ 0x3
  2401                           
  2402  0073                     ?_abs:	
  2403                           ; 1 bytes @ 0x3
  2404                           
  2405  0073                     set_brigthness@p:	
  2406                           ; 2 bytes @ 0x3
  2407                           
  2408  0073                     command@val:	
  2409                           ; 1 bytes @ 0x3
  2410                           
  2411  0073                     write4bits@val:	
  2412                           ; 1 bytes @ 0x3
  2413                           
  2414  0073                     strlen@a:	
  2415                           ; 1 bytes @ 0x3
  2416                           
  2417  0073                     abs@a:	
  2418                           ; 1 bytes @ 0x3
  2419                           
  2420  0073                     ___aodiv@quotient:	
  2421                           ; 2 bytes @ 0x3
  2422                           
  2423                           
  2424                           ; 8 bytes @ 0x3
  2425  0073                     	ds	1
  2426  0074                     ??_write4bits:
  2427  0074                     ??___awdiv:	
  2428                           ; 1 bytes @ 0x4
  2429                           
  2430  0074                     ??___awmod:	
  2431                           ; 1 bytes @ 0x4
  2432                           
  2433  0074                     ??___xxtofl:	
  2434                           ; 1 bytes @ 0x4
  2435                           
  2436  0074                     write_byte@ack:	
  2437                           ; 1 bytes @ 0x4
  2438                           
  2439  0074                     lcd_backlight@p:	
  2440                           ; 1 bytes @ 0x4
  2441                           
  2442  0074                     command@mode:	
  2443                           ; 1 bytes @ 0x4
  2444                           
  2445  0074                     strlen@s:	
  2446                           ; 1 bytes @ 0x4
  2447                           
  2448  0074                     __Umul8_16@product:	
  2449                           ; 1 bytes @ 0x4
  2450                           
  2451  0074                     strncmp@n:	
  2452                           ; 2 bytes @ 0x4
  2453                           
  2454  0074                     ___lldiv@dividend:	
  2455                           ; 2 bytes @ 0x4
  2456                           
  2457  0074                     ___fldiv@b:	
  2458                           ; 4 bytes @ 0x4
  2459                           
  2460                           
  2461                           ; 4 bytes @ 0x4
  2462  0074                     	ds	1
  2463  0075                     ??_command:
  2464  0075                     ??_abs:	
  2465                           ; 1 bytes @ 0x5
  2466                           
  2467  0075                     write_byte@data:	
  2468                           ; 1 bytes @ 0x5
  2469                           
  2470  0075                     get_CELL_DAT_VAL@p:	
  2471                           ; 1 bytes @ 0x5
  2472                           
  2473  0075                     write4bits@p:	
  2474                           ; 1 bytes @ 0x5
  2475                           
  2476  0075                     ___awdiv@counter:	
  2477                           ; 1 bytes @ 0x5
  2478                           
  2479  0075                     ___awmod@counter:	
  2480                           ; 1 bytes @ 0x5
  2481                           
  2482                           
  2483                           ; 1 bytes @ 0x5
  2484  0075                     	ds	1
  2485  0076                     ??_strncmp:
  2486  0076                     ??_lcd_init:	
  2487                           ; 1 bytes @ 0x6
  2488                           
  2489  0076                     write_byte@i:	
  2490                           ; 1 bytes @ 0x6
  2491                           
  2492  0076                     ___awdiv@sign:	
  2493                           ; 1 bytes @ 0x6
  2494                           
  2495  0076                     ___awmod@sign:	
  2496                           ; 1 bytes @ 0x6
  2497                           
  2498  0076                     __Umul8_16@word_mpld:	
  2499                           ; 1 bytes @ 0x6
  2500                           
  2501                           
  2502                           ; 2 bytes @ 0x6
  2503  0076                     	ds	1
  2504  0077                     write_byte@p:
  2505  0077                     command@highnib:	
  2506                           ; 1 bytes @ 0x7
  2507                           
  2508  0077                     ___awdiv@quotient:	
  2509                           ; 1 bytes @ 0x7
  2510                           
  2511  0077                     strncmp@l:	
  2512                           ; 2 bytes @ 0x7
  2513                           
  2514                           
  2515                           ; 2 bytes @ 0x7
  2516  0077                     	ds	1
  2517  0078                     ?_set_segments:
  2518  0078                     ??___lldiv:	
  2519                           ; 1 bytes @ 0x8
  2520                           
  2521  0078                     ??___fldiv:	
  2522                           ; 1 bytes @ 0x8
  2523                           
  2524  0078                     ?_fputs:	
  2525                           ; 1 bytes @ 0x8
  2526                           
  2527  0078                     set_segments@segments:	
  2528                           ; 2 bytes @ 0x8
  2529                           
  2530  0078                     lcd_init@p:	
  2531                           ; 1 bytes @ 0x8
  2532                           
  2533  0078                     command@lownib:	
  2534                           ; 1 bytes @ 0x8
  2535                           
  2536  0078                     __Umul8_16@multiplier:	
  2537                           ; 1 bytes @ 0x8
  2538                           
  2539  0078                     ___xxtofl@sign:	
  2540                           ; 1 bytes @ 0x8
  2541                           
  2542  0078                     fputs@fp:	
  2543                           ; 1 bytes @ 0x8
  2544                           
  2545                           
  2546                           ; 1 bytes @ 0x8
  2547  0078                     	ds	1
  2548  0079                     ??_fputs:
  2549  0079                     ?_encode_digit:	
  2550                           ; 1 bytes @ 0x9
  2551                           
  2552  0079                     set_segments@length:	
  2553                           ; 1 bytes @ 0x9
  2554                           
  2555  0079                     encode_digit@digit:	
  2556                           ; 1 bytes @ 0x9
  2557                           
  2558  0079                     command@p:	
  2559                           ; 1 bytes @ 0x9
  2560                           
  2561  0079                     ___lodiv@counter:	
  2562                           ; 1 bytes @ 0x9
  2563                           
  2564  0079                     ___xxtofl@exp:	
  2565                           ; 1 bytes @ 0x9
  2566                           
  2567  0079                     strncmp@r:	
  2568                           ; 1 bytes @ 0x9
  2569                           
  2570  0079                     ___lldiv@quotient:	
  2571                           ; 2 bytes @ 0x9
  2572                           
  2573                           
  2574                           ; 4 bytes @ 0x9
  2575  0079                     	ds	1
  2576  007A                     ?_lcd_set_cursor:
  2577  007A                     ?_lcd_print:	
  2578                           ; 1 bytes @ 0xA
  2579                           
  2580  007A                     ??_encode_digit:	
  2581                           ; 1 bytes @ 0xA
  2582                           
  2583  007A                     set_segments@pos:	
  2584                           ; 1 bytes @ 0xA
  2585                           
  2586  007A                     encode_digit@p:	
  2587                           ; 1 bytes @ 0xA
  2588                           
  2589  007A                     lcd_set_cursor@col:	
  2590                           ; 1 bytes @ 0xA
  2591                           
  2592  007A                     lcd_print@str:	
  2593                           ; 1 bytes @ 0xA
  2594                           
  2595  007A                     ___xxtofl@arg:	
  2596                           ; 2 bytes @ 0xA
  2597                           
  2598                           
  2599                           ; 4 bytes @ 0xA
  2600  007A                     	ds	1
  2601  007B                     ??_set_segments:
  2602  007B                     lcd_set_cursor@row:	
  2603                           ; 1 bytes @ 0xB
  2604                           
  2605                           
  2606                           ; 1 bytes @ 0xB
  2607  007B                     	ds	1
  2608  007C                     ??_lcd_set_cursor:
  2609  007C                     ??_lcd_print:	
  2610                           ; 1 bytes @ 0xC
  2611                           
  2612  007C                     ??_pad:	
  2613                           ; 1 bytes @ 0xC
  2614                           
  2615                           
  2616                           ; 1 bytes @ 0xC
  2617  007C                     	ds	1
  2618  007D                     ?_print_digit:
  2619  007D                     ??_utoa:	
  2620                           ; 1 bytes @ 0xD
  2621                           
  2622  007D                     print_digit@number:	
  2623                           ; 1 bytes @ 0xD
  2624                           
  2625  007D                     lcd_print_with@p:	
  2626                           ; 1 bytes @ 0xD
  2627                           
  2628  007D                     ___lldiv@counter:	
  2629                           ; 1 bytes @ 0xD
  2630                           
  2631                           
  2632                           ; 1 bytes @ 0xD
  2633  007D                     	ds	1
  2634  007E                     ??_set_max_gram:
  2635                           
  2636                           	psect	cstackBANK0
  2637  0020                     __pcstackBANK0:	
  2638                           ; 1 bytes @ 0xE
  2639                           
  2640  0020                     ?_get_scale_val:
  2641  0020                     ?___aodiv:	
  2642                           ; 4 bytes @ 0x0
  2643                           
  2644  0020                     ?___aomod:	
  2645                           ; 8 bytes @ 0x0
  2646                           
  2647  0020                     ?___lodiv:	
  2648                           ; 8 bytes @ 0x0
  2649                           
  2650  0020                     ?___lomod:	
  2651                           ; 8 bytes @ 0x0
  2652                           
  2653  0020                     set_segments@k:	
  2654                           ; 8 bytes @ 0x0
  2655                           
  2656  0020                     get_scale_val@scale_avg_count:	
  2657                           ; 1 bytes @ 0x0
  2658                           
  2659  0020                     lcd_print@cmd:	
  2660                           ; 1 bytes @ 0x0
  2661                           
  2662  0020                     fputs@c:	
  2663                           ; 1 bytes @ 0x0
  2664                           
  2665  0020                     lcd_set_cursor@row_offsets:	
  2666                           ; 1 bytes @ 0x0
  2667                           
  2668  0020                     ___fldiv@rem:	
  2669                           ; 4 bytes @ 0x0
  2670                           
  2671  0020                     ___aodiv@divisor:	
  2672                           ; 4 bytes @ 0x0
  2673                           
  2674  0020                     ___aomod@divisor:	
  2675                           ; 8 bytes @ 0x0
  2676                           
  2677  0020                     ___lodiv@divisor:	
  2678                           ; 8 bytes @ 0x0
  2679                           
  2680  0020                     ___lomod@divisor:	
  2681                           ; 8 bytes @ 0x0
  2682                           
  2683                           
  2684                           ; 8 bytes @ 0x0
  2685  0020                     	ds	1
  2686  0021                     set_segments@p:
  2687  0021                     lcd_print@p:	
  2688                           ; 1 bytes @ 0x1
  2689                           
  2690  0021                     fputs@i:	
  2691                           ; 1 bytes @ 0x1
  2692                           
  2693                           
  2694                           ; 2 bytes @ 0x1
  2695  0021                     	ds	1
  2696  0022                     ??_print_digit:
  2697                           
  2698                           ; 1 bytes @ 0x2
  2699  0022                     	ds	1
  2700  0023                     fputs@s:
  2701                           
  2702                           ; 1 bytes @ 0x3
  2703  0023                     	ds	1
  2704  0024                     ??_get_scale_val:
  2705  0024                     ?_pad:	
  2706                           ; 1 bytes @ 0x4
  2707                           
  2708  0024                     lcd_set_cursor@cmd:	
  2709                           ; 2 bytes @ 0x4
  2710                           
  2711  0024                     ___fldiv@sign:	
  2712                           ; 1 bytes @ 0x4
  2713                           
  2714  0024                     pad@buf:	
  2715                           ; 1 bytes @ 0x4
  2716                           
  2717                           
  2718                           ; 1 bytes @ 0x4
  2719  0024                     	ds	1
  2720  0025                     lcd_set_cursor@p:
  2721  0025                     ___fldiv@new_exp:	
  2722                           ; 1 bytes @ 0x5
  2723                           
  2724  0025                     pad@p:	
  2725                           ; 2 bytes @ 0x5
  2726                           
  2727                           
  2728                           ; 2 bytes @ 0x5
  2729  0025                     	ds	1
  2730  0026                     ??_lcd_clear:
  2731  0026                     ?_lcd_print_with:	
  2732                           ; 1 bytes @ 0x6
  2733                           
  2734  0026                     lcd_print_with@str:	
  2735                           ; 1 bytes @ 0x6
  2736                           
  2737  0026                     print_digit@data:	
  2738                           ; 2 bytes @ 0x6
  2739                           
  2740                           
  2741                           ; 4 bytes @ 0x6
  2742  0026                     	ds	1
  2743  0027                     pad@i:
  2744  0027                     ___fldiv@grs:	
  2745                           ; 2 bytes @ 0x7
  2746                           
  2747                           
  2748                           ; 4 bytes @ 0x7
  2749  0027                     	ds	1
  2750  0028                     lcd_clear@row:
  2751  0028                     lcd_print_with@col:	
  2752                           ; 1 bytes @ 0x8
  2753                           
  2754  0028                     get_scale_val@weight_add:	
  2755                           ; 1 bytes @ 0x8
  2756                           
  2757  0028                     ___aodiv@dividend:	
  2758                           ; 4 bytes @ 0x8
  2759                           
  2760  0028                     ___aomod@dividend:	
  2761                           ; 8 bytes @ 0x8
  2762                           
  2763  0028                     ___lodiv@dividend:	
  2764                           ; 8 bytes @ 0x8
  2765                           
  2766  0028                     ___lomod@dividend:	
  2767                           ; 8 bytes @ 0x8
  2768                           
  2769                           
  2770                           ; 8 bytes @ 0x8
  2771  0028                     	ds	1
  2772  0029                     lcd_clear@col:
  2773  0029                     lcd_print_with@row:	
  2774                           ; 1 bytes @ 0x9
  2775                           
  2776  0029                     pad@w:	
  2777                           ; 1 bytes @ 0x9
  2778                           
  2779                           
  2780                           ; 2 bytes @ 0x9
  2781  0029                     	ds	1
  2782  002A                     ??_lcd_print_with:
  2783  002A                     print_digit@p:	
  2784                           ; 1 bytes @ 0xA
  2785                           
  2786  002A                     lcd_clear@p:	
  2787                           ; 1 bytes @ 0xA
  2788                           
  2789                           
  2790                           ; 1 bytes @ 0xA
  2791  002A                     	ds	1
  2792  002B                     print_digit@tmp:
  2793  002B                     ___fldiv@bexp:	
  2794                           ; 1 bytes @ 0xB
  2795                           
  2796  002B                     pad@fp:	
  2797                           ; 1 bytes @ 0xB
  2798                           
  2799                           
  2800                           ; 1 bytes @ 0xB
  2801  002B                     	ds	1
  2802  002C                     ??_initialize_digit:
  2803  002C                     get_scale_val@j:	
  2804                           ; 1 bytes @ 0xC
  2805                           
  2806  002C                     ___fldiv@aexp:	
  2807                           ; 1 bytes @ 0xC
  2808                           
  2809                           
  2810                           ; 1 bytes @ 0xC
  2811  002C                     	ds	1
  2812  002D                     ?___flmul:
  2813  002D                     initialize_digit@p:	
  2814                           ; 4 bytes @ 0xD
  2815                           
  2816  002D                     get_scale_val@weight_count:	
  2817                           ; 1 bytes @ 0xD
  2818                           
  2819  002D                     ___flmul@b:	
  2820                           ; 4 bytes @ 0xD
  2821                           
  2822                           
  2823                           ; 4 bytes @ 0xD
  2824  002D                     	ds	3
  2825  0030                     ?_dtoa:
  2826  0030                     ?_utoa:	
  2827                           ; 2 bytes @ 0x10
  2828                           
  2829  0030                     dtoa@d:	
  2830                           ; 2 bytes @ 0x10
  2831                           
  2832  0030                     utoa@d:	
  2833                           ; 8 bytes @ 0x10
  2834                           
  2835                           
  2836                           ; 8 bytes @ 0x10
  2837  0030                     	ds	1
  2838  0031                     get_scale_val@i:
  2839  0031                     ___flmul@a:	
  2840                           ; 1 bytes @ 0x11
  2841                           
  2842                           
  2843                           ; 4 bytes @ 0x11
  2844  0031                     	ds	1
  2845  0032                     get_scale_val@p:
  2846                           
  2847                           ; 1 bytes @ 0x12
  2848  0032                     	ds	3
  2849  0035                     ??___flmul:
  2850                           
  2851                           ; 1 bytes @ 0x15
  2852  0035                     	ds	3
  2853  0038                     ??_dtoa:
  2854  0038                     utoa@p:	
  2855                           ; 1 bytes @ 0x18
  2856                           
  2857                           
  2858                           ; 2 bytes @ 0x18
  2859  0038                     	ds	2
  2860  003A                     ___flmul@sign:
  2861  003A                     utoa@fp:	
  2862                           ; 1 bytes @ 0x1A
  2863                           
  2864                           
  2865                           ; 1 bytes @ 0x1A
  2866  003A                     	ds	1
  2867  003B                     _dtoa$1264:
  2868  003B                     utoa@w:	
  2869                           ; 2 bytes @ 0x1B
  2870                           
  2871  003B                     ___flmul@grs:	
  2872                           ; 2 bytes @ 0x1B
  2873                           
  2874                           
  2875                           ; 4 bytes @ 0x1B
  2876  003B                     	ds	2
  2877  003D                     dtoa@p:
  2878  003D                     utoa@n:	
  2879                           ; 2 bytes @ 0x1D
  2880                           
  2881                           
  2882                           ; 8 bytes @ 0x1D
  2883  003D                     	ds	2
  2884  003F                     ___flmul@aexp:
  2885  003F                     dtoa@fp:	
  2886                           ; 1 bytes @ 0x1F
  2887                           
  2888                           
  2889                           ; 1 bytes @ 0x1F
  2890  003F                     	ds	1
  2891  0040                     ___flmul@bexp:
  2892  0040                     dtoa@w:	
  2893                           ; 1 bytes @ 0x20
  2894                           
  2895                           
  2896                           ; 2 bytes @ 0x20
  2897  0040                     	ds	1
  2898  0041                     ___flmul@prod:
  2899                           
  2900                           ; 4 bytes @ 0x21
  2901  0041                     	ds	1
  2902  0042                     dtoa@s:
  2903                           
  2904                           ; 2 bytes @ 0x22
  2905  0042                     	ds	2
  2906  0044                     dtoa@n:
  2907                           
  2908                           ; 8 bytes @ 0x24
  2909  0044                     	ds	1
  2910  0045                     ___flmul@temp:
  2911  0045                     utoa@i:	
  2912                           ; 2 bytes @ 0x25
  2913                           
  2914                           
  2915                           ; 2 bytes @ 0x25
  2916  0045                     	ds	2
  2917  0047                     ?___fltol:
  2918  0047                     ___fltol@f1:	
  2919                           ; 4 bytes @ 0x27
  2920                           
  2921                           
  2922                           ; 4 bytes @ 0x27
  2923  0047                     	ds	4
  2924  004B                     ??___fltol:
  2925                           
  2926                           ; 1 bytes @ 0x2B
  2927  004B                     	ds	1
  2928  004C                     dtoa@i:
  2929                           
  2930                           ; 2 bytes @ 0x2C
  2931  004C                     	ds	2
  2932  004E                     ?_vfpfcnvrt:
  2933  004E                     vfpfcnvrt@fmt:	
  2934                           ; 2 bytes @ 0x2E
  2935                           
  2936                           
  2937                           ; 1 bytes @ 0x2E
  2938  004E                     	ds	1
  2939  004F                     vfpfcnvrt@ap:
  2940                           
  2941                           ; 1 bytes @ 0x2F
  2942  004F                     	ds	1
  2943  0050                     ??_vfpfcnvrt:
  2944  0050                     ___fltol@sign1:	
  2945                           ; 1 bytes @ 0x30
  2946                           
  2947                           
  2948                           ; 1 bytes @ 0x30
  2949  0050                     	ds	1
  2950  0051                     ___fltol@exp1:
  2951                           
  2952                           ; 1 bytes @ 0x31
  2953  0051                     	ds	1
  2954  0052                     ??_scale_convert_gram:
  2955                           
  2956                           ; 1 bytes @ 0x32
  2957  0052                     	ds	8
  2958  005A                     scale_convert_gram@temp:
  2959                           
  2960                           ; 4 bytes @ 0x3A
  2961  005A                     	ds	2
  2962  005C                     vfpfcnvrt@ll:
  2963                           
  2964                           ; 8 bytes @ 0x3C
  2965  005C                     	ds	2
  2966  005E                     scale_convert_gram@p:
  2967                           
  2968                           ; 1 bytes @ 0x3E
  2969  005E                     	ds	1
  2970  005F                     ??_calc_percentage:
  2971                           
  2972                           ; 1 bytes @ 0x3F
  2973  005F                     	ds	4
  2974  0063                     calc_percentage@gram:
  2975                           
  2976                           ; 4 bytes @ 0x43
  2977  0063                     	ds	1
  2978  0064                     vfpfcnvrt@llu:
  2979                           
  2980                           ; 8 bytes @ 0x44
  2981  0064                     	ds	3
  2982  0067                     calc_percentage@max_gram:
  2983                           
  2984                           ; 4 bytes @ 0x47
  2985  0067                     	ds	4
  2986  006B                     calc_percentage@p:
  2987                           
  2988                           ; 1 bytes @ 0x4B
  2989  006B                     	ds	1
  2990  006C                     vfpfcnvrt@fp:
  2991                           
  2992                           ; 1 bytes @ 0x4C
  2993  006C                     	ds	1
  2994  006D                     ?_vfprintf:
  2995  006D                     vfprintf@fmt:	
  2996                           ; 2 bytes @ 0x4D
  2997                           
  2998                           
  2999                           ; 2 bytes @ 0x4D
  3000  006D                     	ds	2
  3001  006F                     vfprintf@ap:
  3002                           
  3003                           ; 1 bytes @ 0x4F
  3004  006F                     	ds	1
  3005                           
  3006                           	psect	maintext
  3007  0A9A                     __pmaintext:	
  3008 ;;
  3009 ;;Main: autosize = 0, tempsize = 2, incstack = 0, save=0
  3010 ;;
  3011 ;; *************** function _main *****************
  3012 ;; Defined at:
  3013 ;;		line 8 in file "main.c"
  3014 ;; Parameters:    Size  Location     Type
  3015 ;;		None
  3016 ;; Auto vars:     Size  Location     Type
  3017 ;;  loadcell       12    6[BANK2 ] struct .
  3018 ;;  drink           8   18[BANK2 ] struct .
  3019 ;;  lcd             4    0[BANK2 ] struct .
  3020 ;;  tm1637          2    4[BANK2 ] struct .
  3021 ;; Return value:  Size  Location     Type
  3022 ;;                  1    wreg      void 
  3023 ;; Registers used:
  3024 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  3025 ;; Tracked objects:
  3026 ;;		On entry : B1F/0
  3027 ;;		On exit  : 0/0
  3028 ;;		Unchanged: 0/0
  3029 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  3030 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3031 ;;      Locals:         0       0       0      26       0       0       0       0       0       0       0       0       
      +0       0
  3032 ;;      Temps:          0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0
  3033 ;;      Totals:         0       0       2      26       0       0       0       0       0       0       0       0       
      +0       0
  3034 ;;Total ram usage:       28 bytes
  3035 ;; Hardware stack levels required when called: 9
  3036 ;; This function calls:
  3037 ;;		_SYSTEM_Initialize
  3038 ;;		_calc_percentage
  3039 ;;		_initialize
  3040 ;;		_print_gram
  3041 ;;		_set_max_gram
  3042 ;; This function is called by:
  3043 ;;		Startup code after reset
  3044 ;; This function uses a non-reentrant model
  3045 ;;
  3046                           
  3047                           
  3048                           ;psect for function _main
  3049  0A9A                     _main:
  3050  0A9A                     l3910:	
  3051                           ;incstack = 0
  3052                           ; Regs used in _main: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  3053                           
  3054                           
  3055                           ;main.c: 10:     SYSTEM_Initialize();
  3056  0A9A  319E  263E  318A   	fcall	_SYSTEM_Initialize
  3057  0A9D                     l3912:
  3058                           
  3059                           ;main.c: 13:     ANSELA = 0x00;
  3060  0A9D  0023               	movlb	3	; select bank3
  3061  0A9E  018C               	clrf	12	;volatile
  3062  0A9F                     l3914:
  3063                           
  3064                           ;main.c: 14:     ANSELB = 0x00;
  3065  0A9F  018D               	clrf	13	;volatile
  3066  0AA0                     l3916:
  3067                           
  3068                           ;main.c: 18:     TRISB = 0x04;
  3069  0AA0  3004               	movlw	4
  3070  0AA1  0021               	movlb	1	; select bank1
  3071  0AA2  008D               	movwf	13	;volatile
  3072  0AA3                     l3918:
  3073                           
  3074                           ;main.c: 21:     TRISC = 0xF8;
  3075  0AA3  30F8               	movlw	248
  3076  0AA4  008E               	movwf	14	;volatile
  3077  0AA5                     l3920:
  3078                           
  3079                           ;main.c: 24:     LATA = 0x00;
  3080  0AA5  0022               	movlb	2	; select bank2
  3081  0AA6  018C               	clrf	12	;volatile
  3082  0AA7                     l3922:
  3083                           
  3084                           ;main.c: 25:     LATB = 0x00;
  3085  0AA7  018D               	clrf	13	;volatile
  3086  0AA8                     l3924:
  3087                           
  3088                           ;main.c: 26:     LATC = 0x00;
  3089  0AA8  018E               	clrf	14	;volatile
  3090  0AA9                     l3926:
  3091                           
  3092                           ;main.c: 29:     SSPADD = 0x13;
  3093  0AA9  3013               	movlw	19
  3094  0AAA  0024               	movlb	4	; select bank4
  3095  0AAB  0092               	movwf	18	;volatile
  3096  0AAC                     l3928:
  3097                           
  3098                           ;main.c: 30:     SSPCON1 = 0x28;
  3099  0AAC  3028               	movlw	40
  3100  0AAD  0095               	movwf	21	;volatile
  3101  0AAE                     l3930:
  3102                           
  3103                           ;main.c: 31:     SSPCON2 = 0x0;
  3104  0AAE  0196               	clrf	22	;volatile
  3105  0AAF                     l3932:
  3106                           
  3107                           ;main.c: 32:     SSPSTAT = 0;
  3108  0AAF  0194               	clrf	20	;volatile
  3109  0AB0                     l3934:
  3110                           
  3111                           ;main.c: 35:     LoadCell loadcell = {0x02, 0x04, 0, 0, 530};
  3112  0AB0  3020               	movlw	low main@F2849
  3113  0AB1  0086               	movwf	6
  3114  0AB2  3001               	movlw	high main@F2849
  3115  0AB3  0087               	movwf	7
  3116  0AB4  3042               	movlw	low main@loadcell
  3117  0AB5  0084               	movwf	4
  3118  0AB6  3001               	movlw	high main@loadcell
  3119  0AB7  0085               	movwf	5
  3120  0AB8  300C               	movlw	12
  3121  0AB9  0021               	movlb	1	; select bank1
  3122  0ABA  00D6               	movwf	??_main^(0+128)
  3123  0ABB                     u4640:
  3124  0ABB  0016               	moviw fsr1++
  3125  0ABC  001A               	movwi fsr0++
  3126  0ABD  0BD6               	decfsz	??_main^(0+128),f
  3127  0ABE  2ABB               	goto	u4640
  3128  0ABF                     l3936:
  3129                           
  3130                           ;main.c: 37:     Lcd lcd = {0x27, 16, 2, 0};
  3131  0ABF  0022               	movlb	2	; select bank2
  3132  0AC0  0839               	movf	(main@F2851+3)^(0+256),w
  3133  0AC1  00BF               	movwf	(main@lcd+3)^(0+256)
  3134  0AC2  0838               	movf	(main@F2851+2)^(0+256),w
  3135  0AC3  00BE               	movwf	(main@lcd+2)^(0+256)
  3136  0AC4  0837               	movf	(main@F2851+1)^(0+256),w
  3137  0AC5  00BD               	movwf	(main@lcd+1)^(0+256)
  3138  0AC6  0836               	movf	main@F2851^(0+256),w
  3139  0AC7  00BC               	movwf	main@lcd^(0+256)
  3140  0AC8                     l3938:
  3141                           
  3142                           ;main.c: 39:     TM1637 tm1637 = {0x08, 0x10};
  3143  0AC8  083B               	movf	(main@F2853+1)^(0+256),w
  3144  0AC9  00C1               	movwf	(main@tm1637+1)^(0+256)
  3145  0ACA  083A               	movf	main@F2853^(0+256),w
  3146  0ACB  00C0               	movwf	main@tm1637^(0+256)
  3147  0ACC                     l3940:
  3148                           
  3149                           ;main.c: 41:     DrinkMeter drink = {&loadcell, &lcd, &tm1637, 500, 30, 0};
  3150  0ACC  3056               	movlw	low main@F2855
  3151  0ACD  0086               	movwf	6
  3152  0ACE  3001               	movlw	high main@F2855
  3153  0ACF  0087               	movwf	7
  3154  0AD0  304E               	movlw	low main@drink
  3155  0AD1  0084               	movwf	4
  3156  0AD2  3001               	movlw	high main@drink
  3157  0AD3  0085               	movwf	5
  3158  0AD4  3008               	movlw	8
  3159  0AD5  0021               	movlb	1	; select bank1
  3160  0AD6  00D6               	movwf	??_main^(0+128)
  3161  0AD7                     u4650:
  3162  0AD7  0016               	moviw fsr1++
  3163  0AD8  001A               	movwi fsr0++
  3164  0AD9  0BD6               	decfsz	??_main^(0+128),f
  3165  0ADA  2AD7               	goto	u4650
  3166  0ADB                     l3942:
  3167  0ADB  3042               	movlw	(low (main@loadcell| (0+256)))& (0+255)
  3168  0ADC  00D6               	movwf	??_main^(0+128)
  3169  0ADD  0856               	movf	??_main^(0+128),w
  3170  0ADE  0022               	movlb	2	; select bank2
  3171  0ADF  00CE               	movwf	main@drink^(0+256)
  3172  0AE0                     l3944:
  3173  0AE0  303C               	movlw	(low (main@lcd| (0+256)))& (0+255)
  3174  0AE1  0021               	movlb	1	; select bank1
  3175  0AE2  00D6               	movwf	??_main^(0+128)
  3176  0AE3  0856               	movf	??_main^(0+128),w
  3177  0AE4  0022               	movlb	2	; select bank2
  3178  0AE5  00CF               	movwf	(low ((main@drink| (0+256)+1)))^0
  3179  0AE6                     l3946:
  3180  0AE6  3040               	movlw	(low (main@tm1637| (0+256)))& (0+255)
  3181  0AE7  0021               	movlb	1	; select bank1
  3182  0AE8  00D6               	movwf	??_main^(0+128)
  3183  0AE9  0856               	movf	??_main^(0+128),w
  3184  0AEA  0022               	movlb	2	; select bank2
  3185  0AEB  00D0               	movwf	(low ((main@drink| (0+256)+2)))^0
  3186  0AEC                     l3948:
  3187  0AEC  30F4               	movlw	244
  3188  0AED  00D1               	movwf	(main@drink^(0+256)+3)
  3189  0AEE  3001               	movlw	1
  3190  0AEF  00D2               	movwf	(main@drink^(0+256)+4)
  3191  0AF0                     l3950:
  3192  0AF0  301E               	movlw	30
  3193  0AF1  00D3               	movwf	(main@drink^(0+256)+5)
  3194  0AF2  3000               	movlw	0
  3195  0AF3  00D4               	movwf	(main@drink^(0+256)+6)
  3196  0AF4                     l3952:
  3197  0AF4  01D5               	clrf	(main@drink^(0+256)+7)
  3198  0AF5                     l3954:
  3199                           
  3200                           ;main.c: 43:     initialize(&drink);
  3201  0AF5  304E               	movlw	(low (main@drink| (0+256)))& (0+255)
  3202  0AF6  3196  261B  318A   	fcall	_initialize
  3203  0AF9                     l3956:
  3204                           
  3205                           ;main.c: 46:         calc_percentage(&drink);
  3206  0AF9  304E               	movlw	(low (main@drink| (0+256)))& (0+255)
  3207  0AFA  318C  2444  318A   	fcall	_calc_percentage
  3208  0AFD                     l3958:
  3209                           
  3210                           ;main.c: 47:         print_gram(&drink);
  3211  0AFD  304E               	movlw	(low (main@drink| (0+256)))& (0+255)
  3212  0AFE  3194  24BD  318A   	fcall	_print_gram
  3213  0B01                     l3960:
  3214                           
  3215                           ;main.c: 49:         if(RC7 == 0){
  3216  0B01  0020               	movlb	0	; select bank0
  3217  0B02  1B8E               	btfsc	14,7	;volatile
  3218  0B03  2B05               	goto	u4661
  3219  0B04  2B06               	goto	u4660
  3220  0B05                     u4661:
  3221  0B05  2B20               	goto	l3966
  3222  0B06                     u4660:
  3223  0B06                     l3962:
  3224                           
  3225                           ;main.c: 50:             set_max_gram(&drink, 500, 30);
  3226  0B06  30F4               	movlw	244
  3227  0B07  0021               	movlb	1	; select bank1
  3228  0B08  00B3               	movwf	set_max_gram@max_gram^(0+128)
  3229  0B09  3001               	movlw	1
  3230  0B0A  00B4               	movwf	(set_max_gram@max_gram^(0+128)+1)
  3231  0B0B  301E               	movlw	30
  3232  0B0C  00B5               	movwf	set_max_gram@empty_gram^(0+128)
  3233  0B0D  3000               	movlw	0
  3234  0B0E  00B6               	movwf	(set_max_gram@empty_gram^(0+128)+1)
  3235  0B0F  304E               	movlw	(low (main@drink| (0+256)))& (0+255)
  3236  0B10  3191  2105  318A   	fcall	_set_max_gram
  3237  0B13                     l3964:
  3238                           
  3239                           ;main.c: 51:             _delay((unsigned long)((1000)*(8000000/4000.0)));
  3240  0B13  300B               	movlw	11
  3241  0B14  0021               	movlb	1	; select bank1
  3242  0B15  00D7               	movwf	(??_main^(0+128)+1)
  3243  0B16  3026               	movlw	38
  3244  0B17  00D6               	movwf	??_main^(0+128)
  3245  0B18  305D               	movlw	93
  3246  0B19                     u4697:
  3247  0B19  0B89               	decfsz	9,f
  3248  0B1A  2B19               	goto	u4697
  3249  0B1B  0BD6               	decfsz	??_main^(0+128),f
  3250  0B1C  2B19               	goto	u4697
  3251  0B1D  0BD7               	decfsz	(??_main^(0+128)+1),f
  3252  0B1E  2B19               	goto	u4697
  3253  0B1F  3200               	nop2
  3254  0B20                     l3966:
  3255                           
  3256                           ;main.c: 54:         if(RC6 == 0){
  3257  0B20  0020               	movlb	0	; select bank0
  3258  0B21  1B0E               	btfsc	14,6	;volatile
  3259  0B22  2B24               	goto	u4671
  3260  0B23  2B25               	goto	u4670
  3261  0B24                     u4671:
  3262  0B24  2B3F               	goto	l3972
  3263  0B25                     u4670:
  3264  0B25                     l3968:
  3265                           
  3266                           ;main.c: 55:             set_max_gram(&drink, 350, 15);
  3267  0B25  305E               	movlw	94
  3268  0B26  0021               	movlb	1	; select bank1
  3269  0B27  00B3               	movwf	set_max_gram@max_gram^(0+128)
  3270  0B28  3001               	movlw	1
  3271  0B29  00B4               	movwf	(set_max_gram@max_gram^(0+128)+1)
  3272  0B2A  300F               	movlw	15
  3273  0B2B  00B5               	movwf	set_max_gram@empty_gram^(0+128)
  3274  0B2C  3000               	movlw	0
  3275  0B2D  00B6               	movwf	(set_max_gram@empty_gram^(0+128)+1)
  3276  0B2E  304E               	movlw	(low (main@drink| (0+256)))& (0+255)
  3277  0B2F  3191  2105  318A   	fcall	_set_max_gram
  3278  0B32                     l3970:
  3279                           
  3280                           ;main.c: 56:             _delay((unsigned long)((1000)*(8000000/4000.0)));
  3281  0B32  300B               	movlw	11
  3282  0B33  0021               	movlb	1	; select bank1
  3283  0B34  00D7               	movwf	(??_main^(0+128)+1)
  3284  0B35  3026               	movlw	38
  3285  0B36  00D6               	movwf	??_main^(0+128)
  3286  0B37  305D               	movlw	93
  3287  0B38                     u4707:
  3288  0B38  0B89               	decfsz	9,f
  3289  0B39  2B38               	goto	u4707
  3290  0B3A  0BD6               	decfsz	??_main^(0+128),f
  3291  0B3B  2B38               	goto	u4707
  3292  0B3C  0BD7               	decfsz	(??_main^(0+128)+1),f
  3293  0B3D  2B38               	goto	u4707
  3294  0B3E  3200               	nop2
  3295  0B3F                     l3972:
  3296                           
  3297                           ;main.c: 59:         if(RC5 == 0){
  3298  0B3F  0020               	movlb	0	; select bank0
  3299  0B40  1A8E               	btfsc	14,5	;volatile
  3300  0B41  2B43               	goto	u4681
  3301  0B42  2B44               	goto	u4680
  3302  0B43                     u4681:
  3303  0B43  2AF9               	goto	l3956
  3304  0B44                     u4680:
  3305  0B44                     l3974:
  3306                           
  3307                           ;main.c: 60:             set_max_gram(&drink, 355, 35);
  3308  0B44  3063               	movlw	99
  3309  0B45  0021               	movlb	1	; select bank1
  3310  0B46  00B3               	movwf	set_max_gram@max_gram^(0+128)
  3311  0B47  3001               	movlw	1
  3312  0B48  00B4               	movwf	(set_max_gram@max_gram^(0+128)+1)
  3313  0B49  3023               	movlw	35
  3314  0B4A  00B5               	movwf	set_max_gram@empty_gram^(0+128)
  3315  0B4B  3000               	movlw	0
  3316  0B4C  00B6               	movwf	(set_max_gram@empty_gram^(0+128)+1)
  3317  0B4D  304E               	movlw	(low (main@drink| (0+256)))& (0+255)
  3318  0B4E  3191  2105  318A   	fcall	_set_max_gram
  3319  0B51                     l3976:
  3320                           
  3321                           ;main.c: 61:             _delay((unsigned long)((1000)*(8000000/4000.0)));
  3322  0B51  300B               	movlw	11
  3323  0B52  0021               	movlb	1	; select bank1
  3324  0B53  00D7               	movwf	(??_main^(0+128)+1)
  3325  0B54  3026               	movlw	38
  3326  0B55  00D6               	movwf	??_main^(0+128)
  3327  0B56  305D               	movlw	93
  3328  0B57                     u4717:
  3329  0B57  0B89               	decfsz	9,f
  3330  0B58  2B57               	goto	u4717
  3331  0B59  0BD6               	decfsz	??_main^(0+128),f
  3332  0B5A  2B57               	goto	u4717
  3333  0B5B  0BD7               	decfsz	(??_main^(0+128)+1),f
  3334  0B5C  2B57               	goto	u4717
  3335  0B5D  3200               	nop2
  3336  0B5E  2AF9               	goto	l3956
  3337  0B5F  3180  2802         	ljmp	start
  3338  0B61                     __end_of_main:
  3339                           
  3340                           	psect	text1
  3341  1105                     __ptext1:	
  3342 ;; *************** function _set_max_gram *****************
  3343 ;; Defined at:
  3344 ;;		line 62 in file "drink_meter.c"
  3345 ;; Parameters:    Size  Location     Type
  3346 ;;  p               1    wreg     PTR struct .
  3347 ;;		 -> main@drink(8), 
  3348 ;;  max_gram        2   19[BANK1 ] unsigned short 
  3349 ;;  empty_gram      2   21[BANK1 ] unsigned short 
  3350 ;; Auto vars:     Size  Location     Type
  3351 ;;  p               1   39[BANK1 ] PTR struct .
  3352 ;;		 -> main@drink(8), 
  3353 ;;  valstr         16   23[BANK1 ] unsigned char [16]
  3354 ;; Return value:  Size  Location     Type
  3355 ;;                  1    wreg      void 
  3356 ;; Registers used:
  3357 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  3358 ;; Tracked objects:
  3359 ;;		On entry : 0/0
  3360 ;;		On exit  : 0/0
  3361 ;;		Unchanged: 0/0
  3362 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  3363 ;;      Params:         0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0
  3364 ;;      Locals:         0       0      17       0       0       0       0       0       0       0       0       0       
      +0       0
  3365 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3366 ;;      Totals:         0       0      21       0       0       0       0       0       0       0       0       0       
      +0       0
  3367 ;;Total ram usage:       21 bytes
  3368 ;; Hardware stack levels used: 1
  3369 ;; Hardware stack levels required when called: 8
  3370 ;; This function calls:
  3371 ;;		_calc_percentage
  3372 ;;		_lcd_clear
  3373 ;;		_lcd_print
  3374 ;;		_sprintf
  3375 ;; This function is called by:
  3376 ;;		_main
  3377 ;; This function uses a non-reentrant model
  3378 ;;
  3379                           
  3380                           
  3381                           ;psect for function _set_max_gram
  3382  1105                     _set_max_gram:
  3383                           
  3384                           ;incstack = 0
  3385                           ; Regs used in _set_max_gram: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  3386                           ;set_max_gram@p stored from wreg
  3387  1105  0021               	movlb	1	; select bank1
  3388  1106  00C7               	movwf	set_max_gram@p^(0+128)
  3389  1107                     l3884:
  3390                           
  3391                           ;drink_meter.c: 63:     p->max_gram = max_gram;
  3392  1107  0847               	movf	set_max_gram@p^(0+128),w
  3393  1108  3E03               	addlw	3
  3394  1109  0086               	movwf	6
  3395  110A  3001               	movlw	1	; select bank2/3
  3396  110B  0087               	movwf	7
  3397  110C  0833               	movf	set_max_gram@max_gram^(0+128),w
  3398  110D  3FC0               	movwi [0]fsr1
  3399  110E  0834               	movf	(set_max_gram@max_gram+1)^(0+128),w
  3400  110F  3FC1               	movwi [1]fsr1
  3401                           
  3402                           ;drink_meter.c: 64:     p->empty_gram = empty_gram;
  3403  1110  0847               	movf	set_max_gram@p^(0+128),w
  3404  1111  3E05               	addlw	5
  3405  1112  0086               	movwf	6
  3406  1113  3001               	movlw	1	; select bank2/3
  3407  1114  0087               	movwf	7
  3408  1115  0835               	movf	set_max_gram@empty_gram^(0+128),w
  3409  1116  3FC0               	movwi [0]fsr1
  3410  1117  0836               	movf	(set_max_gram@empty_gram+1)^(0+128),w
  3411  1118  3FC1               	movwi [1]fsr1
  3412  1119                     l3886:
  3413                           
  3414                           ;drink_meter.c: 66:     char valstr[16];;drink_meter.c: 67:     sprintf(valstr, "set max
      +                           ml %d", max_gram);
  3415  1119  300F               	movlw	low (STR_7| (0+32768))
  3416  111A  00A5               	movwf	sprintf@fmt^(0+128)
  3417  111B  30A0               	movlw	high (STR_7| (0+32768))
  3418  111C  00A6               	movwf	(sprintf@fmt^(0+128)+1)
  3419  111D  0834               	movf	(set_max_gram@max_gram+1)^(0+128),w
  3420  111E  00A8               	movwf	((?_sprintf+1)^(0+128)+2)
  3421  111F  0833               	movf	set_max_gram@max_gram^(0+128),w
  3422  1120  00A7               	movwf	(?_sprintf^(0+128)+2)
  3423  1121  30B7               	movlw	(low (set_max_gram@valstr| 0))& (0+255)
  3424  1122  3190  2043  3191   	fcall	_sprintf
  3425  1125                     l3888:
  3426                           
  3427                           ;drink_meter.c: 69:     lcd_clear(p->lcd);
  3428  1125  0021               	movlb	1	; select bank1
  3429  1126  0A47               	incf	set_max_gram@p^(0+128),w
  3430  1127  0086               	movwf	6
  3431  1128  3001               	movlw	1	; select bank2/3
  3432  1129  0087               	movwf	7
  3433  112A  0801               	movf	1,w
  3434  112B  3191  2141  3191   	fcall	_lcd_clear
  3435  112E                     l3890:
  3436                           
  3437                           ;drink_meter.c: 70:     lcd_print(p->lcd, valstr);
  3438  112E  30B7               	movlw	low set_max_gram@valstr
  3439  112F  00FA               	movwf	lcd_print@str
  3440  1130  3000               	movlw	high set_max_gram@valstr
  3441  1131  00FB               	movwf	lcd_print@str+1
  3442  1132  0021               	movlb	1	; select bank1
  3443  1133  0A47               	incf	set_max_gram@p^(0+128),w
  3444  1134  0086               	movwf	6
  3445  1135  3001               	movlw	1	; select bank2/3
  3446  1136  0087               	movwf	7
  3447  1137  0801               	movf	1,w
  3448  1138  3190  201F  3191   	fcall	_lcd_print
  3449  113B                     l3892:
  3450                           
  3451                           ;drink_meter.c: 72:     calc_percentage(p);
  3452  113B  0021               	movlb	1	; select bank1
  3453  113C  0847               	movf	set_max_gram@p^(0+128),w
  3454  113D  318C  2444  3191   	fcall	_calc_percentage
  3455  1140                     l384:
  3456  1140  0008               	return
  3457  1141                     __end_of_set_max_gram:
  3458                           
  3459                           	psect	text2
  3460  0C44                     __ptext2:	
  3461 ;; *************** function _calc_percentage *****************
  3462 ;; Defined at:
  3463 ;;		line 25 in file "drink_meter.c"
  3464 ;; Parameters:    Size  Location     Type
  3465 ;;  p               1    wreg     PTR struct .
  3466 ;;		 -> main@drink(8), 
  3467 ;; Auto vars:     Size  Location     Type
  3468 ;;  p               1   75[BANK0 ] PTR struct .
  3469 ;;		 -> main@drink(8), 
  3470 ;;  max_gram        4   71[BANK0 ] float 
  3471 ;;  gram            4   67[BANK0 ] float 
  3472 ;; Return value:  Size  Location     Type
  3473 ;;                  1    wreg      void 
  3474 ;; Registers used:
  3475 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  3476 ;; Tracked objects:
  3477 ;;		On entry : 0/0
  3478 ;;		On exit  : 0/0
  3479 ;;		Unchanged: 0/0
  3480 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  3481 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3482 ;;      Locals:         0       9       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3483 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3484 ;;      Totals:         0      13       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3485 ;;Total ram usage:       13 bytes
  3486 ;; Hardware stack levels used: 1
  3487 ;; Hardware stack levels required when called: 2
  3488 ;; This function calls:
  3489 ;;		___fldiv
  3490 ;;		___flmul
  3491 ;;		___fltol
  3492 ;;		___xxtofl
  3493 ;;		_get_scale_val
  3494 ;;		_scale_convert_gram
  3495 ;; This function is called by:
  3496 ;;		_main
  3497 ;;		_set_max_gram
  3498 ;; This function uses a non-reentrant model
  3499 ;;
  3500                           
  3501                           
  3502                           ;psect for function _calc_percentage
  3503  0C44                     _calc_percentage:
  3504                           
  3505                           ;incstack = 0
  3506                           ; Regs used in _calc_percentage: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  3507                           ;calc_percentage@p stored from wreg
  3508  0C44  0020               	movlb	0	; select bank0
  3509  0C45  00EB               	movwf	calc_percentage@p
  3510  0C46                     l3768:
  3511                           
  3512                           ;drink_meter.c: 27:     p->loadcell->weight_dat = get_scale_val(p->loadcell, 16);
  3513  0C46  3010               	movlw	16
  3514  0C47  00DF               	movwf	??_calc_percentage
  3515  0C48  085F               	movf	??_calc_percentage,w
  3516  0C49  00A0               	movwf	get_scale_val@scale_avg_count
  3517  0C4A  086B               	movf	calc_percentage@p,w
  3518  0C4B  0086               	movwf	6
  3519  0C4C  3001               	movlw	1	; select bank2/3
  3520  0C4D  0087               	movwf	7
  3521  0C4E  0801               	movf	1,w
  3522  0C4F  318B  2361  318C   	fcall	_get_scale_val
  3523  0C52  0020               	movlb	0	; select bank0
  3524  0C53  086B               	movf	calc_percentage@p,w
  3525  0C54  0086               	movwf	6
  3526  0C55  3001               	movlw	1	; select bank2/3
  3527  0C56  0087               	movwf	7
  3528  0C57  0801               	movf	1,w
  3529  0C58  3E06               	addlw	6
  3530  0C59  0086               	movwf	6
  3531  0C5A  3001               	movlw	1	; select bank2/3
  3532  0C5B  0087               	movwf	7
  3533  0C5C  0820               	movf	?_get_scale_val,w
  3534  0C5D  3FC0               	movwi [0]fsr1
  3535  0C5E  0821               	movf	?_get_scale_val+1,w
  3536  0C5F  3FC1               	movwi [1]fsr1
  3537  0C60  0822               	movf	?_get_scale_val+2,w
  3538  0C61  3FC2               	movwi [2]fsr1
  3539  0C62  0823               	movf	?_get_scale_val+3,w
  3540  0C63  3FC3               	movwi [3]fsr1
  3541                           
  3542                           ;drink_meter.c: 28:     scale_convert_gram(p->loadcell);
  3543  0C64  086B               	movf	calc_percentage@p,w
  3544  0C65  0086               	movwf	6
  3545  0C66  3001               	movlw	1	; select bank2/3
  3546  0C67  0087               	movwf	7
  3547  0C68  0801               	movf	1,w
  3548  0C69  3196  26B7  318C   	fcall	_scale_convert_gram
  3549  0C6C                     l3770:
  3550                           
  3551                           ;drink_meter.c: 31:     if(p->loadcell->gram == 0){
  3552  0C6C  0020               	movlb	0	; select bank0
  3553  0C6D  086B               	movf	calc_percentage@p,w
  3554  0C6E  0086               	movwf	6
  3555  0C6F  3001               	movlw	1	; select bank2/3
  3556  0C70  0087               	movwf	7
  3557  0C71  0801               	movf	1,w
  3558  0C72  3E0A               	addlw	10
  3559  0C73  0086               	movwf	6
  3560  0C74  3001               	movlw	1	; select bank2/3
  3561  0C75  0087               	movwf	7
  3562  0C76  0016               	moviw fsr1++
  3563  0C77  0401               	iorwf	1,w
  3564  0C78  1D03               	btfss	3,2
  3565  0C79  2C7B               	goto	u4581
  3566  0C7A  2C7C               	goto	u4580
  3567  0C7B                     u4581:
  3568  0C7B  2C83               	goto	l3776
  3569  0C7C                     u4580:
  3570  0C7C                     l3772:
  3571                           
  3572                           ;drink_meter.c: 32:         p->percentage = 0;
  3573  0C7C  086B               	movf	calc_percentage@p,w
  3574  0C7D  3E07               	addlw	7
  3575  0C7E  0086               	movwf	6
  3576  0C7F  3001               	movlw	1	; select bank2/3
  3577  0C80  0087               	movwf	7
  3578  0C81  0181               	clrf	1
  3579  0C82  2D27               	goto	l377
  3580  0C83                     l3776:
  3581                           
  3582                           ;drink_meter.c: 36:     if(p->loadcell->gram < p->empty_gram){
  3583  0C83  086B               	movf	calc_percentage@p,w
  3584  0C84  3E05               	addlw	5
  3585  0C85  0086               	movwf	6
  3586  0C86  3001               	movlw	1	; select bank2/3
  3587  0C87  0087               	movwf	7
  3588  0C88  3F40               	moviw [0]fsr1
  3589  0C89  00DF               	movwf	??_calc_percentage
  3590  0C8A  3F41               	moviw [1]fsr1
  3591  0C8B  00E0               	movwf	??_calc_percentage+1
  3592  0C8C  086B               	movf	calc_percentage@p,w
  3593  0C8D  0086               	movwf	6
  3594  0C8E  3001               	movlw	1	; select bank2/3
  3595  0C8F  0087               	movwf	7
  3596  0C90  0801               	movf	1,w
  3597  0C91  3E0A               	addlw	10
  3598  0C92  0086               	movwf	6
  3599  0C93  3001               	movlw	1	; select bank2/3
  3600  0C94  0087               	movwf	7
  3601  0C95  3F40               	moviw [0]fsr1
  3602  0C96  00E1               	movwf	??_calc_percentage+2
  3603  0C97  3F41               	moviw [1]fsr1
  3604  0C98  00E2               	movwf	??_calc_percentage+3
  3605  0C99  0860               	movf	??_calc_percentage+1,w
  3606  0C9A  0262               	subwf	??_calc_percentage+3,w
  3607  0C9B  1D03               	skipz
  3608  0C9C  2C9F               	goto	u4595
  3609  0C9D  085F               	movf	??_calc_percentage,w
  3610  0C9E  0261               	subwf	??_calc_percentage+2,w
  3611  0C9F                     u4595:
  3612  0C9F  1803               	skipnc
  3613  0CA0  2CA2               	goto	u4591
  3614  0CA1  2CA3               	goto	u4590
  3615  0CA2                     u4591:
  3616  0CA2  2CAA               	goto	l3782
  3617  0CA3                     u4590:
  3618  0CA3                     l3778:
  3619                           
  3620                           ;drink_meter.c: 37:         p->percentage = 0;
  3621  0CA3  086B               	movf	calc_percentage@p,w
  3622  0CA4  3E07               	addlw	7
  3623  0CA5  0086               	movwf	6
  3624  0CA6  3001               	movlw	1	; select bank2/3
  3625  0CA7  0087               	movwf	7
  3626  0CA8  0181               	clrf	1
  3627  0CA9  2D27               	goto	l377
  3628  0CAA                     l3782:
  3629                           
  3630                           ;drink_meter.c: 42:     float gram = (float)(p->loadcell->gram - p->empty_gram);
  3631  0CAA  086B               	movf	calc_percentage@p,w
  3632  0CAB  3E05               	addlw	5
  3633  0CAC  0086               	movwf	6
  3634  0CAD  3001               	movlw	1	; select bank2/3
  3635  0CAE  0087               	movwf	7
  3636  0CAF  086B               	movf	calc_percentage@p,w
  3637  0CB0  0084               	movwf	4
  3638  0CB1  3001               	movlw	1	; select bank2/3
  3639  0CB2  0085               	movwf	5
  3640  0CB3  0800               	movf	0,w
  3641  0CB4  3E0A               	addlw	10
  3642  0CB5  0084               	movwf	4
  3643  0CB6  3001               	movlw	1	; select bank2/3
  3644  0CB7  0085               	movwf	5
  3645  0CB8  3F40               	moviw [0]fsr1
  3646  0CB9  0200               	subwf	0,w
  3647  0CBA  00F0               	movwf	___xxtofl@val
  3648  0CBB  3101               	addfsr 0,1
  3649  0CBC  3F41               	moviw [1]fsr1
  3650  0CBD  3B00               	subwfb	0,w
  3651  0CBE  00F1               	movwf	___xxtofl@val+1
  3652  0CBF  01F2               	clrf	___xxtofl@val+2
  3653  0CC0  01F3               	clrf	___xxtofl@val+3
  3654  0CC1  3000               	movlw	0
  3655  0CC2  3189  2134  318C   	fcall	___xxtofl
  3656  0CC5  0873               	movf	?___xxtofl+3,w
  3657  0CC6  0020               	movlb	0	; select bank0
  3658  0CC7  00E6               	movwf	calc_percentage@gram+3
  3659  0CC8  0872               	movf	?___xxtofl+2,w
  3660  0CC9  00E5               	movwf	calc_percentage@gram+2
  3661  0CCA  0871               	movf	?___xxtofl+1,w
  3662  0CCB  00E4               	movwf	calc_percentage@gram+1
  3663  0CCC  0870               	movf	?___xxtofl,w
  3664  0CCD  00E3               	movwf	calc_percentage@gram
  3665  0CCE                     l3784:
  3666                           
  3667                           ;drink_meter.c: 43:     float max_gram = (float)p->max_gram;
  3668  0CCE  086B               	movf	calc_percentage@p,w
  3669  0CCF  3E03               	addlw	3
  3670  0CD0  0086               	movwf	6
  3671  0CD1  3001               	movlw	1	; select bank2/3
  3672  0CD2  0087               	movwf	7
  3673  0CD3  3F40               	moviw [0]fsr1
  3674  0CD4  00DF               	movwf	??_calc_percentage
  3675  0CD5  3F41               	moviw [1]fsr1
  3676  0CD6  00E0               	movwf	??_calc_percentage+1
  3677  0CD7  085F               	movf	??_calc_percentage,w
  3678  0CD8  00F0               	movwf	___xxtofl@val
  3679  0CD9  0860               	movf	??_calc_percentage+1,w
  3680  0CDA  00F1               	movwf	___xxtofl@val+1
  3681  0CDB  01F2               	clrf	___xxtofl@val+2
  3682  0CDC  01F3               	clrf	___xxtofl@val+3
  3683  0CDD  3000               	movlw	0
  3684  0CDE  3189  2134  318C   	fcall	___xxtofl
  3685  0CE1  0873               	movf	?___xxtofl+3,w
  3686  0CE2  0020               	movlb	0	; select bank0
  3687  0CE3  00EA               	movwf	calc_percentage@max_gram+3
  3688  0CE4  0872               	movf	?___xxtofl+2,w
  3689  0CE5  00E9               	movwf	calc_percentage@max_gram+2
  3690  0CE6  0871               	movf	?___xxtofl+1,w
  3691  0CE7  00E8               	movwf	calc_percentage@max_gram+1
  3692  0CE8  0870               	movf	?___xxtofl,w
  3693  0CE9  00E7               	movwf	calc_percentage@max_gram
  3694  0CEA                     l3786:
  3695                           
  3696                           ;drink_meter.c: 44:     p->percentage = (gram / max_gram) * 100;
  3697  0CEA  0866               	movf	calc_percentage@gram+3,w
  3698  0CEB  00F7               	movwf	___fldiv@b+3
  3699  0CEC  0865               	movf	calc_percentage@gram+2,w
  3700  0CED  00F6               	movwf	___fldiv@b+2
  3701  0CEE  0864               	movf	calc_percentage@gram+1,w
  3702  0CEF  00F5               	movwf	___fldiv@b+1
  3703  0CF0  0863               	movf	calc_percentage@gram,w
  3704  0CF1  00F4               	movwf	___fldiv@b
  3705  0CF2  086A               	movf	calc_percentage@max_gram+3,w
  3706  0CF3  00F3               	movwf	___fldiv@a+3
  3707  0CF4  0869               	movf	calc_percentage@max_gram+2,w
  3708  0CF5  00F2               	movwf	___fldiv@a+2
  3709  0CF6  0868               	movf	calc_percentage@max_gram+1,w
  3710  0CF7  00F1               	movwf	___fldiv@a+1
  3711  0CF8  0867               	movf	calc_percentage@max_gram,w
  3712  0CF9  00F0               	movwf	___fldiv@a
  3713  0CFA  3181  21C6  318C   	fcall	___fldiv
  3714  0CFD  0873               	movf	?___fldiv+3,w
  3715  0CFE  0020               	movlb	0	; select bank0
  3716  0CFF  00B4               	movwf	___flmul@a+3
  3717  0D00  0872               	movf	?___fldiv+2,w
  3718  0D01  00B3               	movwf	___flmul@a+2
  3719  0D02  0871               	movf	?___fldiv+1,w
  3720  0D03  00B2               	movwf	___flmul@a+1
  3721  0D04  0870               	movf	?___fldiv,w
  3722  0D05  00B1               	movwf	___flmul@a
  3723  0D06  3042               	movlw	66
  3724  0D07  00B0               	movwf	___flmul@b+3
  3725  0D08  30C8               	movlw	200
  3726  0D09  00AF               	movwf	___flmul@b+2
  3727  0D0A  3000               	movlw	0
  3728  0D0B  00AE               	movwf	___flmul@b+1
  3729  0D0C  3000               	movlw	0
  3730  0D0D  00AD               	movwf	___flmul@b
  3731  0D0E  3185  2576  318C   	fcall	___flmul
  3732  0D11  0020               	movlb	0	; select bank0
  3733  0D12  0830               	movf	?___flmul+3,w
  3734  0D13  00CA               	movwf	___fltol@f1+3
  3735  0D14  082F               	movf	?___flmul+2,w
  3736  0D15  00C9               	movwf	___fltol@f1+2
  3737  0D16  082E               	movf	?___flmul+1,w
  3738  0D17  00C8               	movwf	___fltol@f1+1
  3739  0D18  082D               	movf	?___flmul,w
  3740  0D19  00C7               	movwf	___fltol@f1
  3741  0D1A  3195  252E  318C   	fcall	___fltol
  3742  0D1D  0020               	movlb	0	; select bank0
  3743  0D1E  0847               	movf	?___fltol,w
  3744  0D1F  00DF               	movwf	??_calc_percentage
  3745  0D20  086B               	movf	calc_percentage@p,w
  3746  0D21  3E07               	addlw	7
  3747  0D22  0086               	movwf	6
  3748  0D23  3001               	movlw	1	; select bank2/3
  3749  0D24  0087               	movwf	7
  3750  0D25  085F               	movf	??_calc_percentage,w
  3751  0D26  0081               	movwf	1
  3752  0D27                     l377:
  3753  0D27  0008               	return
  3754  0D28                     __end_of_calc_percentage:
  3755                           
  3756                           	psect	text3
  3757  16B7                     __ptext3:	
  3758 ;; *************** function _scale_convert_gram *****************
  3759 ;; Defined at:
  3760 ;;		line 75 in file "loadcell.c"
  3761 ;; Parameters:    Size  Location     Type
  3762 ;;  p               1    wreg     PTR struct .
  3763 ;;		 -> NULL(0), main@loadcell(12), 
  3764 ;; Auto vars:     Size  Location     Type
  3765 ;;  p               1   62[BANK0 ] PTR struct .
  3766 ;;		 -> NULL(0), main@loadcell(12), 
  3767 ;;  temp            4   58[BANK0 ] float 
  3768 ;; Return value:  Size  Location     Type
  3769 ;;                  1    wreg      void 
  3770 ;; Registers used:
  3771 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  3772 ;; Tracked objects:
  3773 ;;		On entry : 0/0
  3774 ;;		On exit  : 0/0
  3775 ;;		Unchanged: 0/0
  3776 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  3777 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3778 ;;      Locals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3779 ;;      Temps:          0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3780 ;;      Totals:         0      13       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3781 ;;Total ram usage:       13 bytes
  3782 ;; Hardware stack levels used: 1
  3783 ;; Hardware stack levels required when called: 1
  3784 ;; This function calls:
  3785 ;;		___fldiv
  3786 ;;		___fltol
  3787 ;;		___xxtofl
  3788 ;; This function is called by:
  3789 ;;		_calc_percentage
  3790 ;; This function uses a non-reentrant model
  3791 ;;
  3792                           
  3793                           
  3794                           ;psect for function _scale_convert_gram
  3795  16B7                     _scale_convert_gram:
  3796                           
  3797                           ;incstack = 0
  3798                           ; Regs used in _scale_convert_gram: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
  3799                           ;scale_convert_gram@p stored from wreg
  3800  16B7  0020               	movlb	0	; select bank0
  3801  16B8  00DE               	movwf	scale_convert_gram@p
  3802  16B9                     l3560:
  3803                           
  3804                           ;loadcell.c: 77:     if(p->weight_dat < p->weight_zero){
  3805  16B9  085E               	movf	scale_convert_gram@p,w
  3806  16BA  3E02               	addlw	2
  3807  16BB  0086               	movwf	6
  3808  16BC  3001               	movlw	1	; select bank2/3
  3809  16BD  0087               	movwf	7
  3810  16BE  3F40               	moviw [0]fsr1
  3811  16BF  00D2               	movwf	??_scale_convert_gram
  3812  16C0  3F41               	moviw [1]fsr1
  3813  16C1  00D3               	movwf	??_scale_convert_gram+1
  3814  16C2  3F42               	moviw [2]fsr1
  3815  16C3  00D4               	movwf	??_scale_convert_gram+2
  3816  16C4  3F43               	moviw [3]fsr1
  3817  16C5  00D5               	movwf	??_scale_convert_gram+3
  3818  16C6  085E               	movf	scale_convert_gram@p,w
  3819  16C7  3E06               	addlw	6
  3820  16C8  0086               	movwf	6
  3821  16C9  3001               	movlw	1	; select bank2/3
  3822  16CA  0087               	movwf	7
  3823  16CB  3F40               	moviw [0]fsr1
  3824  16CC  00D6               	movwf	??_scale_convert_gram+4
  3825  16CD  3F41               	moviw [1]fsr1
  3826  16CE  00D7               	movwf	??_scale_convert_gram+5
  3827  16CF  3F42               	moviw [2]fsr1
  3828  16D0  00D8               	movwf	??_scale_convert_gram+6
  3829  16D1  3F43               	moviw [3]fsr1
  3830  16D2  00D9               	movwf	??_scale_convert_gram+7
  3831  16D3  0855               	movf	??_scale_convert_gram+3,w
  3832  16D4  0259               	subwf	??_scale_convert_gram+7,w
  3833  16D5  1D03               	skipz
  3834  16D6  2EE1               	goto	u4285
  3835  16D7  0854               	movf	??_scale_convert_gram+2,w
  3836  16D8  0258               	subwf	??_scale_convert_gram+6,w
  3837  16D9  1D03               	skipz
  3838  16DA  2EE1               	goto	u4285
  3839  16DB  0853               	movf	??_scale_convert_gram+1,w
  3840  16DC  0257               	subwf	??_scale_convert_gram+5,w
  3841  16DD  1D03               	skipz
  3842  16DE  2EE1               	goto	u4285
  3843  16DF  0852               	movf	??_scale_convert_gram,w
  3844  16E0  0256               	subwf	??_scale_convert_gram+4,w
  3845  16E1                     u4285:
  3846  16E1  1803               	skipnc
  3847  16E2  2EE4               	goto	u4281
  3848  16E3  2EE5               	goto	u4280
  3849  16E4                     u4281:
  3850  16E4  2EEE               	goto	l3566
  3851  16E5                     u4280:
  3852  16E5                     l3562:
  3853                           
  3854                           ;loadcell.c: 78:         p->gram = 0;
  3855  16E5  085E               	movf	scale_convert_gram@p,w
  3856  16E6  3E0A               	addlw	10
  3857  16E7  0086               	movwf	6
  3858  16E8  3001               	movlw	1	; select bank2/3
  3859  16E9  0087               	movwf	7
  3860  16EA  3000               	movlw	0
  3861  16EB  3FC0               	movwi [0]fsr1
  3862  16EC  3FC1               	movwi [1]fsr1
  3863  16ED  2F56               	goto	l295
  3864  16EE                     l3566:
  3865                           
  3866                           ;loadcell.c: 82:     float temp = p->weight_dat - p->weight_zero;
  3867  16EE  085E               	movf	scale_convert_gram@p,w
  3868  16EF  3E02               	addlw	2
  3869  16F0  0086               	movwf	6
  3870  16F1  3001               	movlw	1	; select bank2/3
  3871  16F2  0087               	movwf	7
  3872  16F3  3F40               	moviw [0]fsr1
  3873  16F4  00D2               	movwf	??_scale_convert_gram
  3874  16F5  3F41               	moviw [1]fsr1
  3875  16F6  00D3               	movwf	??_scale_convert_gram+1
  3876  16F7  3F42               	moviw [2]fsr1
  3877  16F8  00D4               	movwf	??_scale_convert_gram+2
  3878  16F9  3F43               	moviw [3]fsr1
  3879  16FA  00D5               	movwf	??_scale_convert_gram+3
  3880  16FB  085E               	movf	scale_convert_gram@p,w
  3881  16FC  3E06               	addlw	6
  3882  16FD  0086               	movwf	6
  3883  16FE  3001               	movlw	1	; select bank2/3
  3884  16FF  0087               	movwf	7
  3885  1700  3F40               	moviw [0]fsr1
  3886  1701  00D6               	movwf	??_scale_convert_gram+4
  3887  1702  3F41               	moviw [1]fsr1
  3888  1703  00D7               	movwf	??_scale_convert_gram+5
  3889  1704  3F42               	moviw [2]fsr1
  3890  1705  00D8               	movwf	??_scale_convert_gram+6
  3891  1706  3F43               	moviw [3]fsr1
  3892  1707  00D9               	movwf	??_scale_convert_gram+7
  3893  1708  0852               	movf	??_scale_convert_gram,w
  3894  1709  02D6               	subwf	??_scale_convert_gram+4,f
  3895  170A  0853               	movf	??_scale_convert_gram+1,w
  3896  170B  3BD7               	subwfb	??_scale_convert_gram+5,f
  3897  170C  0854               	movf	??_scale_convert_gram+2,w
  3898  170D  3BD8               	subwfb	??_scale_convert_gram+6,f
  3899  170E  0855               	movf	??_scale_convert_gram+3,w
  3900  170F  3BD9               	subwfb	??_scale_convert_gram+7,f
  3901  1710  0859               	movf	??_scale_convert_gram+7,w
  3902  1711  00F3               	movwf	___xxtofl@val+3
  3903  1712  0858               	movf	??_scale_convert_gram+6,w
  3904  1713  00F2               	movwf	___xxtofl@val+2
  3905  1714  0857               	movf	??_scale_convert_gram+5,w
  3906  1715  00F1               	movwf	___xxtofl@val+1
  3907  1716  0856               	movf	??_scale_convert_gram+4,w
  3908  1717  00F0               	movwf	___xxtofl@val
  3909  1718  3000               	movlw	0
  3910  1719  3189  2134  3196   	fcall	___xxtofl
  3911  171C  0873               	movf	?___xxtofl+3,w
  3912  171D  0020               	movlb	0	; select bank0
  3913  171E  00DD               	movwf	scale_convert_gram@temp+3
  3914  171F  0872               	movf	?___xxtofl+2,w
  3915  1720  00DC               	movwf	scale_convert_gram@temp+2
  3916  1721  0871               	movf	?___xxtofl+1,w
  3917  1722  00DB               	movwf	scale_convert_gram@temp+1
  3918  1723  0870               	movf	?___xxtofl,w
  3919  1724  00DA               	movwf	scale_convert_gram@temp
  3920  1725                     l3568:
  3921                           
  3922                           ;loadcell.c: 83:     temp = temp / 493;
  3923  1725  3043               	movlw	67
  3924  1726  00F3               	movwf	___fldiv@a+3
  3925  1727  30F6               	movlw	246
  3926  1728  00F2               	movwf	___fldiv@a+2
  3927  1729  3080               	movlw	128
  3928  172A  00F1               	movwf	___fldiv@a+1
  3929  172B  3000               	movlw	0
  3930  172C  00F0               	movwf	___fldiv@a
  3931  172D  085D               	movf	scale_convert_gram@temp+3,w
  3932  172E  00F7               	movwf	___fldiv@b+3
  3933  172F  085C               	movf	scale_convert_gram@temp+2,w
  3934  1730  00F6               	movwf	___fldiv@b+2
  3935  1731  085B               	movf	scale_convert_gram@temp+1,w
  3936  1732  00F5               	movwf	___fldiv@b+1
  3937  1733  085A               	movf	scale_convert_gram@temp,w
  3938  1734  00F4               	movwf	___fldiv@b
  3939  1735  3181  21C6  3196   	fcall	___fldiv
  3940  1738  0873               	movf	?___fldiv+3,w
  3941  1739  0020               	movlb	0	; select bank0
  3942  173A  00DD               	movwf	scale_convert_gram@temp+3
  3943  173B  0872               	movf	?___fldiv+2,w
  3944  173C  00DC               	movwf	scale_convert_gram@temp+2
  3945  173D  0871               	movf	?___fldiv+1,w
  3946  173E  00DB               	movwf	scale_convert_gram@temp+1
  3947  173F  0870               	movf	?___fldiv,w
  3948  1740  00DA               	movwf	scale_convert_gram@temp
  3949  1741                     l3570:
  3950                           
  3951                           ;loadcell.c: 84:     p->gram = (uint16_t)temp;
  3952  1741  085D               	movf	scale_convert_gram@temp+3,w
  3953  1742  00CA               	movwf	___fltol@f1+3
  3954  1743  085C               	movf	scale_convert_gram@temp+2,w
  3955  1744  00C9               	movwf	___fltol@f1+2
  3956  1745  085B               	movf	scale_convert_gram@temp+1,w
  3957  1746  00C8               	movwf	___fltol@f1+1
  3958  1747  085A               	movf	scale_convert_gram@temp,w
  3959  1748  00C7               	movwf	___fltol@f1
  3960  1749  3195  252E  3196   	fcall	___fltol
  3961  174C  0020               	movlb	0	; select bank0
  3962  174D  085E               	movf	scale_convert_gram@p,w
  3963  174E  3E0A               	addlw	10
  3964  174F  0086               	movwf	6
  3965  1750  3001               	movlw	1	; select bank2/3
  3966  1751  0087               	movwf	7
  3967  1752  0847               	movf	?___fltol,w
  3968  1753  3FC0               	movwi [0]fsr1
  3969  1754  0848               	movf	?___fltol+1,w
  3970  1755  3FC1               	movwi [1]fsr1
  3971  1756                     l295:
  3972  1756  0008               	return
  3973  1757                     __end_of_scale_convert_gram:
  3974                           
  3975                           	psect	text4
  3976  0934                     __ptext4:	
  3977 ;; *************** function ___xxtofl *****************
  3978 ;; Defined at:
  3979 ;;		line 10 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\xxtofl.c"
  3980 ;; Parameters:    Size  Location     Type
  3981 ;;  sign            1    wreg     unsigned char 
  3982 ;;  val             4    0[COMMON] long 
  3983 ;; Auto vars:     Size  Location     Type
  3984 ;;  sign            1    8[COMMON] unsigned char 
  3985 ;;  arg             4   10[COMMON] unsigned long 
  3986 ;;  exp             1    9[COMMON] unsigned char 
  3987 ;; Return value:  Size  Location     Type
  3988 ;;                  4    0[COMMON] unsigned char 
  3989 ;; Registers used:
  3990 ;;		wreg, status,2, status,0
  3991 ;; Tracked objects:
  3992 ;;		On entry : 0/0
  3993 ;;		On exit  : 0/0
  3994 ;;		Unchanged: 0/0
  3995 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  3996 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3997 ;;      Locals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3998 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3999 ;;      Totals:        14       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4000 ;;Total ram usage:       14 bytes
  4001 ;; Hardware stack levels used: 1
  4002 ;; This function calls:
  4003 ;;		Nothing
  4004 ;; This function is called by:
  4005 ;;		_scale_convert_gram
  4006 ;;		_calc_percentage
  4007 ;; This function uses a non-reentrant model
  4008 ;;
  4009                           
  4010                           
  4011                           ;psect for function ___xxtofl
  4012  0934                     ___xxtofl:
  4013                           
  4014                           ;incstack = 0
  4015                           ; Regs used in ___xxtofl: [wreg+status,2+status,0]
  4016                           ;___xxtofl@sign stored from wreg
  4017  0934  00F8               	movwf	___xxtofl@sign
  4018  0935                     l3350:
  4019  0935  0878               	movf	___xxtofl@sign,w
  4020  0936  1903               	btfsc	3,2
  4021  0937  2939               	goto	u3991
  4022  0938  293A               	goto	u3990
  4023  0939                     u3991:
  4024  0939  294E               	goto	l3356
  4025  093A                     u3990:
  4026  093A                     l3352:
  4027  093A  1FF3               	btfss	___xxtofl@val+3,7
  4028  093B  293D               	goto	u4001
  4029  093C  293E               	goto	u4000
  4030  093D                     u4001:
  4031  093D  294E               	goto	l3356
  4032  093E                     u4000:
  4033  093E                     l3354:
  4034  093E  0970               	comf	___xxtofl@val,w
  4035  093F  00FA               	movwf	___xxtofl@arg
  4036  0940  0971               	comf	___xxtofl@val+1,w
  4037  0941  00FB               	movwf	___xxtofl@arg+1
  4038  0942  0972               	comf	___xxtofl@val+2,w
  4039  0943  00FC               	movwf	___xxtofl@arg+2
  4040  0944  0973               	comf	___xxtofl@val+3,w
  4041  0945  00FD               	movwf	___xxtofl@arg+3
  4042  0946  0AFA               	incf	___xxtofl@arg,f
  4043  0947  1903               	skipnz
  4044  0948  0AFB               	incf	___xxtofl@arg+1,f
  4045  0949  1903               	skipnz
  4046  094A  0AFC               	incf	___xxtofl@arg+2,f
  4047  094B  1903               	skipnz
  4048  094C  0AFD               	incf	___xxtofl@arg+3,f
  4049  094D  2956               	goto	l975
  4050  094E                     l3356:
  4051  094E  0873               	movf	___xxtofl@val+3,w
  4052  094F  00FD               	movwf	___xxtofl@arg+3
  4053  0950  0872               	movf	___xxtofl@val+2,w
  4054  0951  00FC               	movwf	___xxtofl@arg+2
  4055  0952  0871               	movf	___xxtofl@val+1,w
  4056  0953  00FB               	movwf	___xxtofl@arg+1
  4057  0954  0870               	movf	___xxtofl@val,w
  4058  0955  00FA               	movwf	___xxtofl@arg
  4059  0956                     l975:
  4060  0956  0873               	movf	___xxtofl@val+3,w
  4061  0957  0472               	iorwf	___xxtofl@val+2,w
  4062  0958  0471               	iorwf	___xxtofl@val+1,w
  4063  0959  0470               	iorwf	___xxtofl@val,w
  4064  095A  1D03               	skipz
  4065  095B  295D               	goto	u4011
  4066  095C  295E               	goto	u4010
  4067  095D                     u4011:
  4068  095D  2967               	goto	l3362
  4069  095E                     u4010:
  4070  095E                     l3358:
  4071  095E  3000               	movlw	0
  4072  095F  00F3               	movwf	?___xxtofl+3
  4073  0960  3000               	movlw	0
  4074  0961  00F2               	movwf	?___xxtofl+2
  4075  0962  3000               	movlw	0
  4076  0963  00F1               	movwf	?___xxtofl+1
  4077  0964  3000               	movlw	0
  4078  0965  00F0               	movwf	?___xxtofl
  4079  0966  29DF               	goto	l977
  4080  0967                     l3362:
  4081  0967  3096               	movlw	150
  4082  0968  00F4               	movwf	??___xxtofl
  4083  0969  0874               	movf	??___xxtofl,w
  4084  096A  00F9               	movwf	___xxtofl@exp
  4085  096B  2977               	goto	l3366
  4086  096C                     l3364:
  4087  096C  3001               	movlw	1
  4088  096D  00F4               	movwf	??___xxtofl
  4089  096E  0874               	movf	??___xxtofl,w
  4090  096F  07F9               	addwf	___xxtofl@exp,f
  4091  0970  3001               	movlw	1
  4092  0971                     u4025:
  4093  0971  36FD               	lsrf	___xxtofl@arg+3,f
  4094  0972  0CFC               	rrf	___xxtofl@arg+2,f
  4095  0973  0CFB               	rrf	___xxtofl@arg+1,f
  4096  0974  0CFA               	rrf	___xxtofl@arg,f
  4097  0975  0B89               	decfsz	9,f
  4098  0976  2971               	goto	u4025
  4099  0977                     l3366:
  4100  0977  30FE               	movlw	254
  4101  0978  057D               	andwf	___xxtofl@arg+3,w
  4102  0979  1D03               	btfss	3,2
  4103  097A  297C               	goto	u4031
  4104  097B  297D               	goto	u4030
  4105  097C                     u4031:
  4106  097C  296C               	goto	l3364
  4107  097D                     u4030:
  4108  097D  2991               	goto	l981
  4109  097E                     l3368:
  4110  097E  3001               	movlw	1
  4111  097F  00F4               	movwf	??___xxtofl
  4112  0980  0874               	movf	??___xxtofl,w
  4113  0981  07F9               	addwf	___xxtofl@exp,f
  4114  0982                     l3370:
  4115  0982  3001               	movlw	1
  4116  0983  07FA               	addwf	___xxtofl@arg,f
  4117  0984  3000               	movlw	0
  4118  0985  3DFB               	addwfc	___xxtofl@arg+1,f
  4119  0986  3000               	movlw	0
  4120  0987  3DFC               	addwfc	___xxtofl@arg+2,f
  4121  0988  3000               	movlw	0
  4122  0989  3DFD               	addwfc	___xxtofl@arg+3,f
  4123  098A                     l3372:
  4124  098A  3001               	movlw	1
  4125  098B                     u4045:
  4126  098B  36FD               	lsrf	___xxtofl@arg+3,f
  4127  098C  0CFC               	rrf	___xxtofl@arg+2,f
  4128  098D  0CFB               	rrf	___xxtofl@arg+1,f
  4129  098E  0CFA               	rrf	___xxtofl@arg,f
  4130  098F  0B89               	decfsz	9,f
  4131  0990  298B               	goto	u4045
  4132  0991                     l981:
  4133  0991  30FF               	movlw	255
  4134  0992  057D               	andwf	___xxtofl@arg+3,w
  4135  0993  1D03               	btfss	3,2
  4136  0994  2996               	goto	u4051
  4137  0995  2997               	goto	u4050
  4138  0996                     u4051:
  4139  0996  297E               	goto	l3368
  4140  0997                     u4050:
  4141  0997  29A1               	goto	l3376
  4142  0998                     l3374:
  4143  0998  3001               	movlw	1
  4144  0999  02F9               	subwf	___xxtofl@exp,f
  4145  099A  3001               	movlw	1
  4146  099B                     u4065:
  4147  099B  35FA               	lslf	___xxtofl@arg,f
  4148  099C  0DFB               	rlf	___xxtofl@arg+1,f
  4149  099D  0DFC               	rlf	___xxtofl@arg+2,f
  4150  099E  0DFD               	rlf	___xxtofl@arg+3,f
  4151  099F  0B89               	decfsz	9,f
  4152  09A0  299B               	goto	u4065
  4153  09A1                     l3376:
  4154  09A1  1BFC               	btfsc	___xxtofl@arg+2,7
  4155  09A2  29A4               	goto	u4071
  4156  09A3  29A5               	goto	u4070
  4157  09A4                     u4071:
  4158  09A4  29AB               	goto	l988
  4159  09A5                     u4070:
  4160  09A5                     l3378:
  4161  09A5  3002               	movlw	2
  4162  09A6  0279               	subwf	___xxtofl@exp,w
  4163  09A7  1803               	skipnc
  4164  09A8  29AA               	goto	u4081
  4165  09A9  29AB               	goto	u4080
  4166  09AA                     u4081:
  4167  09AA  2998               	goto	l3374
  4168  09AB                     u4080:
  4169  09AB                     l988:
  4170  09AB  1879               	btfsc	___xxtofl@exp,0
  4171  09AC  29AE               	goto	u4091
  4172  09AD  29AF               	goto	u4090
  4173  09AE                     u4091:
  4174  09AE  29B7               	goto	l989
  4175  09AF                     u4090:
  4176  09AF                     l3380:
  4177  09AF  30FF               	movlw	255
  4178  09B0  05FA               	andwf	___xxtofl@arg,f
  4179  09B1  30FF               	movlw	255
  4180  09B2  05FB               	andwf	___xxtofl@arg+1,f
  4181  09B3  307F               	movlw	127
  4182  09B4  05FC               	andwf	___xxtofl@arg+2,f
  4183  09B5  30FF               	movlw	255
  4184  09B6  05FD               	andwf	___xxtofl@arg+3,f
  4185  09B7                     l989:
  4186  09B7  1003               	clrc
  4187  09B8  0CF9               	rrf	___xxtofl@exp,f
  4188  09B9                     l3382:
  4189  09B9  0879               	movf	___xxtofl@exp,w
  4190  09BA  00F4               	movwf	??___xxtofl
  4191  09BB  01F5               	clrf	??___xxtofl+1
  4192  09BC  01F6               	clrf	??___xxtofl+2
  4193  09BD  01F7               	clrf	??___xxtofl+3
  4194  09BE  3018               	movlw	24
  4195  09BF                     u4105:
  4196  09BF  35F4               	lslf	??___xxtofl,f
  4197  09C0  0DF5               	rlf	??___xxtofl+1,f
  4198  09C1  0DF6               	rlf	??___xxtofl+2,f
  4199  09C2  0DF7               	rlf	??___xxtofl+3,f
  4200  09C3                     u4100:
  4201  09C3  0B89               	decfsz	9,f
  4202  09C4  29BF               	goto	u4105
  4203  09C5  0874               	movf	??___xxtofl,w
  4204  09C6  04FA               	iorwf	___xxtofl@arg,f
  4205  09C7  0875               	movf	??___xxtofl+1,w
  4206  09C8  04FB               	iorwf	___xxtofl@arg+1,f
  4207  09C9  0876               	movf	??___xxtofl+2,w
  4208  09CA  04FC               	iorwf	___xxtofl@arg+2,f
  4209  09CB  0877               	movf	??___xxtofl+3,w
  4210  09CC  04FD               	iorwf	___xxtofl@arg+3,f
  4211  09CD                     l3384:
  4212  09CD  0878               	movf	___xxtofl@sign,w
  4213  09CE  1903               	btfsc	3,2
  4214  09CF  29D1               	goto	u4111
  4215  09D0  29D2               	goto	u4110
  4216  09D1                     u4111:
  4217  09D1  29D7               	goto	l3390
  4218  09D2                     u4110:
  4219  09D2                     l3386:
  4220  09D2  1FF3               	btfss	___xxtofl@val+3,7
  4221  09D3  29D5               	goto	u4121
  4222  09D4  29D6               	goto	u4120
  4223  09D5                     u4121:
  4224  09D5  29D7               	goto	l3390
  4225  09D6                     u4120:
  4226  09D6                     l3388:
  4227  09D6  17FD               	bsf	___xxtofl@arg+3,7
  4228  09D7                     l3390:
  4229  09D7  087D               	movf	___xxtofl@arg+3,w
  4230  09D8  00F3               	movwf	?___xxtofl+3
  4231  09D9  087C               	movf	___xxtofl@arg+2,w
  4232  09DA  00F2               	movwf	?___xxtofl+2
  4233  09DB  087B               	movf	___xxtofl@arg+1,w
  4234  09DC  00F1               	movwf	?___xxtofl+1
  4235  09DD  087A               	movf	___xxtofl@arg,w
  4236  09DE  00F0               	movwf	?___xxtofl
  4237  09DF                     l977:
  4238  09DF  0008               	return
  4239  09E0                     __end_of___xxtofl:
  4240                           
  4241                           	psect	text5
  4242  152E                     __ptext5:	
  4243 ;; *************** function ___fltol *****************
  4244 ;; Defined at:
  4245 ;;		line 43 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\fltol.c"
  4246 ;; Parameters:    Size  Location     Type
  4247 ;;  f1              4   39[BANK0 ] unsigned char 
  4248 ;; Auto vars:     Size  Location     Type
  4249 ;;  exp1            1   49[BANK0 ] unsigned char 
  4250 ;;  sign1           1   48[BANK0 ] unsigned char 
  4251 ;; Return value:  Size  Location     Type
  4252 ;;                  4   39[BANK0 ] long 
  4253 ;; Registers used:
  4254 ;;		wreg, status,2, status,0
  4255 ;; Tracked objects:
  4256 ;;		On entry : 0/0
  4257 ;;		On exit  : 0/0
  4258 ;;		Unchanged: 0/0
  4259 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  4260 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4261 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4262 ;;      Temps:          0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4263 ;;      Totals:         0      11       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4264 ;;Total ram usage:       11 bytes
  4265 ;; Hardware stack levels used: 1
  4266 ;; This function calls:
  4267 ;;		Nothing
  4268 ;; This function is called by:
  4269 ;;		_scale_convert_gram
  4270 ;;		_calc_percentage
  4271 ;; This function uses a non-reentrant model
  4272 ;;
  4273                           
  4274                           
  4275                           ;psect for function ___fltol
  4276  152E                     ___fltol:
  4277  152E                     l3160:	
  4278                           ;incstack = 0
  4279                           ; Regs used in ___fltol: [wreg+status,2+status,0]
  4280                           
  4281  152E  1003               	clrc
  4282  152F  0020               	movlb	0	; select bank0
  4283  1530  0D49               	rlf	___fltol@f1+2,w
  4284  1531  0D4A               	rlf	___fltol@f1+3,w
  4285  1532  00CB               	movwf	??___fltol
  4286  1533  084B               	movf	??___fltol,w
  4287  1534  00D1               	movwf	___fltol@exp1
  4288  1535  0851               	movf	___fltol@exp1,w
  4289  1536  1D03               	btfss	3,2
  4290  1537  2D39               	goto	u3571
  4291  1538  2D3A               	goto	u3570
  4292  1539                     u3571:
  4293  1539  2D43               	goto	l3166
  4294  153A                     u3570:
  4295  153A                     l3162:
  4296  153A  3000               	movlw	0
  4297  153B  00CA               	movwf	?___fltol+3
  4298  153C  3000               	movlw	0
  4299  153D  00C9               	movwf	?___fltol+2
  4300  153E  3000               	movlw	0
  4301  153F  00C8               	movwf	?___fltol+1
  4302  1540  3000               	movlw	0
  4303  1541  00C7               	movwf	?___fltol
  4304  1542  2DA2               	goto	l728
  4305  1543                     l3166:
  4306  1543  0847               	movf	___fltol@f1,w
  4307  1544  00CB               	movwf	??___fltol
  4308  1545  0848               	movf	___fltol@f1+1,w
  4309  1546  00CC               	movwf	??___fltol+1
  4310  1547  0849               	movf	___fltol@f1+2,w
  4311  1548  00CD               	movwf	??___fltol+2
  4312  1549  084A               	movf	___fltol@f1+3,w
  4313  154A  00CE               	movwf	??___fltol+3
  4314  154B  301F               	movlw	31
  4315  154C                     u3585:
  4316  154C  36CE               	lsrf	??___fltol+3,f
  4317  154D  0CCD               	rrf	??___fltol+2,f
  4318  154E  0CCC               	rrf	??___fltol+1,f
  4319  154F  0CCB               	rrf	??___fltol,f
  4320  1550                     u3580:
  4321  1550  0B89               	decfsz	9,f
  4322  1551  2D4C               	goto	u3585
  4323  1552  084B               	movf	??___fltol,w
  4324  1553  00CF               	movwf	??___fltol+4
  4325  1554  084F               	movf	??___fltol+4,w
  4326  1555  00D0               	movwf	___fltol@sign1
  4327  1556                     l3168:
  4328  1556  17C9               	bsf	___fltol@f1+2,7
  4329  1557                     l3170:
  4330  1557  30FF               	movlw	255
  4331  1558  05C7               	andwf	___fltol@f1,f
  4332  1559  30FF               	movlw	255
  4333  155A  05C8               	andwf	___fltol@f1+1,f
  4334  155B  30FF               	movlw	255
  4335  155C  05C9               	andwf	___fltol@f1+2,f
  4336  155D  3000               	movlw	0
  4337  155E  05CA               	andwf	___fltol@f1+3,f
  4338  155F                     l3172:
  4339  155F  3096               	movlw	150
  4340  1560  02D1               	subwf	___fltol@exp1,f
  4341  1561                     l3174:
  4342  1561  1FD1               	btfss	___fltol@exp1,7
  4343  1562  2D64               	goto	u3591
  4344  1563  2D65               	goto	u3590
  4345  1564                     u3591:
  4346  1564  2D7D               	goto	l3184
  4347  1565                     u3590:
  4348  1565                     l3176:
  4349  1565  0851               	movf	___fltol@exp1,w
  4350  1566  3A80               	xorlw	128
  4351  1567  3E97               	addlw	151
  4352  1568  1803               	skipnc
  4353  1569  2D6B               	goto	u3601
  4354  156A  2D6C               	goto	u3600
  4355  156B                     u3601:
  4356  156B  2D6D               	goto	l3182
  4357  156C                     u3600:
  4358  156C  2D3A               	goto	l3162
  4359  156D                     l3182:
  4360  156D  3001               	movlw	1
  4361  156E                     u3615:
  4362  156E  36CA               	lsrf	___fltol@f1+3,f
  4363  156F  0CC9               	rrf	___fltol@f1+2,f
  4364  1570  0CC8               	rrf	___fltol@f1+1,f
  4365  1571  0CC7               	rrf	___fltol@f1,f
  4366  1572  0B89               	decfsz	9,f
  4367  1573  2D6E               	goto	u3615
  4368  1574  3001               	movlw	1
  4369  1575  00CB               	movwf	??___fltol
  4370  1576  084B               	movf	??___fltol,w
  4371  1577  07D1               	addwf	___fltol@exp1,f
  4372  1578  1D03               	btfss	3,2
  4373  1579  2D7B               	goto	u3621
  4374  157A  2D7C               	goto	u3620
  4375  157B                     u3621:
  4376  157B  2D6D               	goto	l3182
  4377  157C                     u3620:
  4378  157C  2D92               	goto	l3192
  4379  157D                     l3184:
  4380  157D  3020               	movlw	32
  4381  157E  0251               	subwf	___fltol@exp1,w
  4382  157F  1C03               	skipc
  4383  1580  2D82               	goto	u3631
  4384  1581  2D83               	goto	u3630
  4385  1582                     u3631:
  4386  1582  2D8D               	goto	l735
  4387  1583                     u3630:
  4388  1583  2D3A               	goto	l3162
  4389  1584                     l3190:
  4390  1584  3001               	movlw	1
  4391  1585                     u3645:
  4392  1585  35C7               	lslf	___fltol@f1,f
  4393  1586  0DC8               	rlf	___fltol@f1+1,f
  4394  1587  0DC9               	rlf	___fltol@f1+2,f
  4395  1588  0DCA               	rlf	___fltol@f1+3,f
  4396  1589  0B89               	decfsz	9,f
  4397  158A  2D85               	goto	u3645
  4398  158B  3001               	movlw	1
  4399  158C  02D1               	subwf	___fltol@exp1,f
  4400  158D                     l735:
  4401  158D  0851               	movf	___fltol@exp1,w
  4402  158E  1D03               	btfss	3,2
  4403  158F  2D91               	goto	u3651
  4404  1590  2D92               	goto	u3650
  4405  1591                     u3651:
  4406  1591  2D84               	goto	l3190
  4407  1592                     u3650:
  4408  1592                     l3192:
  4409  1592  0850               	movf	___fltol@sign1,w
  4410  1593  1903               	btfsc	3,2
  4411  1594  2D96               	goto	u3661
  4412  1595  2D97               	goto	u3660
  4413  1596                     u3661:
  4414  1596  2DA2               	goto	l738
  4415  1597                     u3660:
  4416  1597                     l3194:
  4417  1597  09C7               	comf	___fltol@f1,f
  4418  1598  09C8               	comf	___fltol@f1+1,f
  4419  1599  09C9               	comf	___fltol@f1+2,f
  4420  159A  09CA               	comf	___fltol@f1+3,f
  4421  159B  0AC7               	incf	___fltol@f1,f
  4422  159C  1903               	skipnz
  4423  159D  0AC8               	incf	___fltol@f1+1,f
  4424  159E  1903               	skipnz
  4425  159F  0AC9               	incf	___fltol@f1+2,f
  4426  15A0  1903               	skipnz
  4427  15A1  0ACA               	incf	___fltol@f1+3,f
  4428  15A2                     l738:
  4429  15A2                     l728:
  4430  15A2  0008               	return
  4431  15A3                     __end_of___fltol:
  4432                           
  4433                           	psect	text6
  4434  01C6                     __ptext6:	
  4435 ;; *************** function ___fldiv *****************
  4436 ;; Defined at:
  4437 ;;		line 8 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\sprcdiv.c"
  4438 ;; Parameters:    Size  Location     Type
  4439 ;;  a               4    0[COMMON] long 
  4440 ;;  b               4    4[COMMON] long 
  4441 ;; Auto vars:     Size  Location     Type
  4442 ;;  grs             4    7[BANK0 ] unsigned long 
  4443 ;;  rem             4    0[BANK0 ] unsigned long 
  4444 ;;  new_exp         2    5[BANK0 ] int 
  4445 ;;  aexp            1   12[BANK0 ] unsigned char 
  4446 ;;  bexp            1   11[BANK0 ] unsigned char 
  4447 ;;  sign            1    4[BANK0 ] unsigned char 
  4448 ;; Return value:  Size  Location     Type
  4449 ;;                  4    0[COMMON] unsigned char 
  4450 ;; Registers used:
  4451 ;;		wreg, status,2, status,0
  4452 ;; Tracked objects:
  4453 ;;		On entry : 0/0
  4454 ;;		On exit  : 0/0
  4455 ;;		Unchanged: 0/0
  4456 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  4457 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4458 ;;      Locals:         0      13       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4459 ;;      Temps:          5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4460 ;;      Totals:        13      13       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4461 ;;Total ram usage:       26 bytes
  4462 ;; Hardware stack levels used: 1
  4463 ;; This function calls:
  4464 ;;		Nothing
  4465 ;; This function is called by:
  4466 ;;		_scale_convert_gram
  4467 ;;		_calc_percentage
  4468 ;; This function uses a non-reentrant model
  4469 ;;
  4470                           
  4471                           
  4472                           ;psect for function ___fldiv
  4473  01C6                     ___fldiv:
  4474  01C6                     l3196:	
  4475                           ;incstack = 0
  4476                           ; Regs used in ___fldiv: [wreg+status,2+status,0]
  4477                           
  4478  01C6  0877               	movf	___fldiv@b+3,w
  4479  01C7  3980               	andlw	128
  4480  01C8  00F8               	movwf	??___fldiv
  4481  01C9  0878               	movf	??___fldiv,w
  4482  01CA  0020               	movlb	0	; select bank0
  4483  01CB  00A4               	movwf	___fldiv@sign
  4484  01CC                     l3198:
  4485  01CC  3577               	lslf	___fldiv@b+3,w
  4486  01CD  00F8               	movwf	??___fldiv
  4487  01CE  0878               	movf	??___fldiv,w
  4488  01CF  00AB               	movwf	___fldiv@bexp
  4489  01D0                     l3200:
  4490  01D0  1FF6               	btfss	___fldiv@b+2,7
  4491  01D1  29D3               	goto	u3671
  4492  01D2  29D4               	goto	u3670
  4493  01D3                     u3671:
  4494  01D3  29D5               	goto	l3204
  4495  01D4                     u3670:
  4496  01D4                     l3202:
  4497  01D4  142B               	bsf	___fldiv@bexp,0
  4498  01D5                     l3204:
  4499  01D5  082B               	movf	___fldiv@bexp,w
  4500  01D6  1903               	btfsc	3,2
  4501  01D7  29D9               	goto	u3681
  4502  01D8  29DA               	goto	u3680
  4503  01D9                     u3681:
  4504  01D9  29EA               	goto	l3214
  4505  01DA                     u3680:
  4506  01DA                     l3206:
  4507  01DA  0A2B               	incf	___fldiv@bexp,w
  4508  01DB  1D03               	btfss	3,2
  4509  01DC  29DE               	goto	u3691
  4510  01DD  29DF               	goto	u3690
  4511  01DE                     u3691:
  4512  01DE  29E7               	goto	l3210
  4513  01DF                     u3690:
  4514  01DF                     l3208:
  4515  01DF  3000               	movlw	0
  4516  01E0  00F7               	movwf	___fldiv@b+3
  4517  01E1  3000               	movlw	0
  4518  01E2  00F6               	movwf	___fldiv@b+2
  4519  01E3  3000               	movlw	0
  4520  01E4  00F5               	movwf	___fldiv@b+1
  4521  01E5  3000               	movlw	0
  4522  01E6  00F4               	movwf	___fldiv@b
  4523  01E7                     l3210:
  4524  01E7  17F6               	bsf	___fldiv@b+2,7
  4525  01E8                     l3212:
  4526  01E8  01F7               	clrf	___fldiv@b+3
  4527  01E9  29F2               	goto	l3216
  4528  01EA                     l3214:
  4529  01EA  3000               	movlw	0
  4530  01EB  00F7               	movwf	___fldiv@b+3
  4531  01EC  3000               	movlw	0
  4532  01ED  00F6               	movwf	___fldiv@b+2
  4533  01EE  3000               	movlw	0
  4534  01EF  00F5               	movwf	___fldiv@b+1
  4535  01F0  3000               	movlw	0
  4536  01F1  00F4               	movwf	___fldiv@b
  4537  01F2                     l3216:
  4538  01F2  0873               	movf	___fldiv@a+3,w
  4539  01F3  3980               	andlw	128
  4540  01F4  00F8               	movwf	??___fldiv
  4541  01F5  0878               	movf	??___fldiv,w
  4542  01F6  06A4               	xorwf	___fldiv@sign,f
  4543  01F7                     l3218:
  4544  01F7  3573               	lslf	___fldiv@a+3,w
  4545  01F8  00F8               	movwf	??___fldiv
  4546  01F9  0878               	movf	??___fldiv,w
  4547  01FA  00AC               	movwf	___fldiv@aexp
  4548  01FB                     l3220:
  4549  01FB  1FF2               	btfss	___fldiv@a+2,7
  4550  01FC  29FE               	goto	u3701
  4551  01FD  29FF               	goto	u3700
  4552  01FE                     u3701:
  4553  01FE  2A00               	goto	l3224
  4554  01FF                     u3700:
  4555  01FF                     l3222:
  4556  01FF  142C               	bsf	___fldiv@aexp,0
  4557  0200                     l3224:
  4558  0200  082C               	movf	___fldiv@aexp,w
  4559  0201  1903               	btfsc	3,2
  4560  0202  2A04               	goto	u3711
  4561  0203  2A05               	goto	u3710
  4562  0204                     u3711:
  4563  0204  2A15               	goto	l3234
  4564  0205                     u3710:
  4565  0205                     l3226:
  4566  0205  0A2C               	incf	___fldiv@aexp,w
  4567  0206  1D03               	btfss	3,2
  4568  0207  2A09               	goto	u3721
  4569  0208  2A0A               	goto	u3720
  4570  0209                     u3721:
  4571  0209  2A12               	goto	l3230
  4572  020A                     u3720:
  4573  020A                     l3228:
  4574  020A  3000               	movlw	0
  4575  020B  00F3               	movwf	___fldiv@a+3
  4576  020C  3000               	movlw	0
  4577  020D  00F2               	movwf	___fldiv@a+2
  4578  020E  3000               	movlw	0
  4579  020F  00F1               	movwf	___fldiv@a+1
  4580  0210  3000               	movlw	0
  4581  0211  00F0               	movwf	___fldiv@a
  4582  0212                     l3230:
  4583  0212  17F2               	bsf	___fldiv@a+2,7
  4584  0213                     l3232:
  4585  0213  01F3               	clrf	___fldiv@a+3
  4586  0214  2A1D               	goto	l891
  4587  0215                     l3234:
  4588  0215  3000               	movlw	0
  4589  0216  00F3               	movwf	___fldiv@a+3
  4590  0217  3000               	movlw	0
  4591  0218  00F2               	movwf	___fldiv@a+2
  4592  0219  3000               	movlw	0
  4593  021A  00F1               	movwf	___fldiv@a+1
  4594  021B  3000               	movlw	0
  4595  021C  00F0               	movwf	___fldiv@a
  4596  021D                     l891:
  4597  021D  0873               	movf	___fldiv@a+3,w
  4598  021E  0472               	iorwf	___fldiv@a+2,w
  4599  021F  0471               	iorwf	___fldiv@a+1,w
  4600  0220  0470               	iorwf	___fldiv@a,w
  4601  0221  1D03               	skipz
  4602  0222  2A24               	goto	u3731
  4603  0223  2A25               	goto	u3730
  4604  0224                     u3731:
  4605  0224  2A3E               	goto	l3244
  4606  0225                     u3730:
  4607  0225                     l3236:
  4608  0225  3000               	movlw	0
  4609  0226  00F7               	movwf	___fldiv@b+3
  4610  0227  3000               	movlw	0
  4611  0228  00F6               	movwf	___fldiv@b+2
  4612  0229  3000               	movlw	0
  4613  022A  00F5               	movwf	___fldiv@b+1
  4614  022B  3000               	movlw	0
  4615  022C  00F4               	movwf	___fldiv@b
  4616  022D  3080               	movlw	128
  4617  022E  04F6               	iorwf	___fldiv@b+2,f
  4618  022F  307F               	movlw	127
  4619  0230  04F7               	iorwf	___fldiv@b+3,f
  4620  0231                     l3238:
  4621  0231  0824               	movf	___fldiv@sign,w
  4622  0232  00F8               	movwf	??___fldiv
  4623  0233  0878               	movf	??___fldiv,w
  4624  0234  04F7               	iorwf	___fldiv@b+3,f
  4625  0235                     l3240:
  4626  0235  0877               	movf	___fldiv@b+3,w
  4627  0236  00F3               	movwf	?___fldiv+3
  4628  0237  0876               	movf	___fldiv@b+2,w
  4629  0238  00F2               	movwf	?___fldiv+2
  4630  0239  0875               	movf	___fldiv@b+1,w
  4631  023A  00F1               	movwf	?___fldiv+1
  4632  023B  0874               	movf	___fldiv@b,w
  4633  023C  00F0               	movwf	?___fldiv
  4634  023D  2B79               	goto	l893
  4635  023E                     l3244:
  4636  023E  082B               	movf	___fldiv@bexp,w
  4637  023F  1D03               	btfss	3,2
  4638  0240  2A42               	goto	u3741
  4639  0241  2A43               	goto	u3740
  4640  0242                     u3741:
  4641  0242  2A4C               	goto	l3250
  4642  0243                     u3740:
  4643  0243                     l3246:
  4644  0243  3000               	movlw	0
  4645  0244  00F3               	movwf	?___fldiv+3
  4646  0245  3000               	movlw	0
  4647  0246  00F2               	movwf	?___fldiv+2
  4648  0247  3000               	movlw	0
  4649  0248  00F1               	movwf	?___fldiv+1
  4650  0249  3000               	movlw	0
  4651  024A  00F0               	movwf	?___fldiv
  4652  024B  2B79               	goto	l893
  4653  024C                     l3250:
  4654  024C  082B               	movf	___fldiv@bexp,w
  4655  024D  00F8               	movwf	??___fldiv
  4656  024E  01F9               	clrf	??___fldiv+1
  4657  024F  0879               	movf	??___fldiv+1,w
  4658  0250  00FB               	movwf	??___fldiv+3
  4659  0251  082C               	movf	___fldiv@aexp,w
  4660  0252  0278               	subwf	??___fldiv,w
  4661  0253  00FA               	movwf	??___fldiv+2
  4662  0254  1C03               	skipc
  4663  0255  03FB               	decf	??___fldiv+3,f
  4664  0256  087A               	movf	??___fldiv+2,w
  4665  0257  3E7F               	addlw	127
  4666  0258  00A5               	movwf	___fldiv@new_exp
  4667  0259  3000               	movlw	0
  4668  025A  3D7B               	addwfc	??___fldiv+3,w
  4669  025B  00A6               	movwf	___fldiv@new_exp+1
  4670  025C                     l3252:
  4671  025C  0877               	movf	___fldiv@b+3,w
  4672  025D  00A3               	movwf	___fldiv@rem+3
  4673  025E  0876               	movf	___fldiv@b+2,w
  4674  025F  00A2               	movwf	___fldiv@rem+2
  4675  0260  0875               	movf	___fldiv@b+1,w
  4676  0261  00A1               	movwf	___fldiv@rem+1
  4677  0262  0874               	movf	___fldiv@b,w
  4678  0263  00A0               	movwf	___fldiv@rem
  4679  0264                     l3254:
  4680  0264  3000               	movlw	0
  4681  0265  00F7               	movwf	___fldiv@b+3
  4682  0266  3000               	movlw	0
  4683  0267  00F6               	movwf	___fldiv@b+2
  4684  0268  3000               	movlw	0
  4685  0269  00F5               	movwf	___fldiv@b+1
  4686  026A  3000               	movlw	0
  4687  026B  00F4               	movwf	___fldiv@b
  4688  026C                     l3256:
  4689  026C  3000               	movlw	0
  4690  026D  00AA               	movwf	___fldiv@grs+3
  4691  026E  3000               	movlw	0
  4692  026F  00A9               	movwf	___fldiv@grs+2
  4693  0270  3000               	movlw	0
  4694  0271  00A8               	movwf	___fldiv@grs+1
  4695  0272  3000               	movlw	0
  4696  0273  00A7               	movwf	___fldiv@grs
  4697  0274                     l3258:
  4698  0274  01AC               	clrf	___fldiv@aexp
  4699  0275  2AB4               	goto	l3278
  4700  0276                     l3260:
  4701  0276  082C               	movf	___fldiv@aexp,w
  4702  0277  1903               	btfsc	3,2
  4703  0278  2A7A               	goto	u3751
  4704  0279  2A7B               	goto	u3750
  4705  027A                     u3751:
  4706  027A  2A95               	goto	l3270
  4707  027B                     u3750:
  4708  027B                     l3262:
  4709  027B  3001               	movlw	1
  4710  027C                     u3765:
  4711  027C  35A0               	lslf	___fldiv@rem,f
  4712  027D  0DA1               	rlf	___fldiv@rem+1,f
  4713  027E  0DA2               	rlf	___fldiv@rem+2,f
  4714  027F  0DA3               	rlf	___fldiv@rem+3,f
  4715  0280  0B89               	decfsz	9,f
  4716  0281  2A7C               	goto	u3765
  4717  0282  3001               	movlw	1
  4718  0283                     u3775:
  4719  0283  35F4               	lslf	___fldiv@b,f
  4720  0284  0DF5               	rlf	___fldiv@b+1,f
  4721  0285  0DF6               	rlf	___fldiv@b+2,f
  4722  0286  0DF7               	rlf	___fldiv@b+3,f
  4723  0287  0B89               	decfsz	9,f
  4724  0288  2A83               	goto	u3775
  4725  0289                     l3264:
  4726  0289  1FAA               	btfss	___fldiv@grs+3,7
  4727  028A  2A8C               	goto	u3781
  4728  028B  2A8D               	goto	u3780
  4729  028C                     u3781:
  4730  028C  2A8E               	goto	l3268
  4731  028D                     u3780:
  4732  028D                     l3266:
  4733  028D  1474               	bsf	___fldiv@b,0
  4734  028E                     l3268:
  4735  028E  3001               	movlw	1
  4736  028F                     u3795:
  4737  028F  35A7               	lslf	___fldiv@grs,f
  4738  0290  0DA8               	rlf	___fldiv@grs+1,f
  4739  0291  0DA9               	rlf	___fldiv@grs+2,f
  4740  0292  0DAA               	rlf	___fldiv@grs+3,f
  4741  0293  0B89               	decfsz	9,f
  4742  0294  2A8F               	goto	u3795
  4743  0295                     l3270:
  4744  0295  0873               	movf	___fldiv@a+3,w
  4745  0296  0223               	subwf	___fldiv@rem+3,w
  4746  0297  1D03               	skipz
  4747  0298  2AA3               	goto	u3805
  4748  0299  0872               	movf	___fldiv@a+2,w
  4749  029A  0222               	subwf	___fldiv@rem+2,w
  4750  029B  1D03               	skipz
  4751  029C  2AA3               	goto	u3805
  4752  029D  0871               	movf	___fldiv@a+1,w
  4753  029E  0221               	subwf	___fldiv@rem+1,w
  4754  029F  1D03               	skipz
  4755  02A0  2AA3               	goto	u3805
  4756  02A1  0870               	movf	___fldiv@a,w
  4757  02A2  0220               	subwf	___fldiv@rem,w
  4758  02A3                     u3805:
  4759  02A3  1C03               	skipc
  4760  02A4  2AA6               	goto	u3801
  4761  02A5  2AA7               	goto	u3800
  4762  02A6                     u3801:
  4763  02A6  2AB0               	goto	l3276
  4764  02A7                     u3800:
  4765  02A7                     l3272:
  4766  02A7  172A               	bsf	___fldiv@grs+3,6
  4767  02A8                     l3274:
  4768  02A8  0870               	movf	___fldiv@a,w
  4769  02A9  02A0               	subwf	___fldiv@rem,f
  4770  02AA  0871               	movf	___fldiv@a+1,w
  4771  02AB  3BA1               	subwfb	___fldiv@rem+1,f
  4772  02AC  0872               	movf	___fldiv@a+2,w
  4773  02AD  3BA2               	subwfb	___fldiv@rem+2,f
  4774  02AE  0873               	movf	___fldiv@a+3,w
  4775  02AF  3BA3               	subwfb	___fldiv@rem+3,f
  4776  02B0                     l3276:
  4777  02B0  3001               	movlw	1
  4778  02B1  00F8               	movwf	??___fldiv
  4779  02B2  0878               	movf	??___fldiv,w
  4780  02B3  07AC               	addwf	___fldiv@aexp,f
  4781  02B4                     l3278:
  4782  02B4  301A               	movlw	26
  4783  02B5  022C               	subwf	___fldiv@aexp,w
  4784  02B6  1C03               	skipc
  4785  02B7  2AB9               	goto	u3811
  4786  02B8  2ABA               	goto	u3810
  4787  02B9                     u3811:
  4788  02B9  2A76               	goto	l3260
  4789  02BA                     u3810:
  4790  02BA                     l3280:
  4791  02BA  0823               	movf	___fldiv@rem+3,w
  4792  02BB  0422               	iorwf	___fldiv@rem+2,w
  4793  02BC  0421               	iorwf	___fldiv@rem+1,w
  4794  02BD  0420               	iorwf	___fldiv@rem,w
  4795  02BE  1903               	skipnz
  4796  02BF  2AC1               	goto	u3821
  4797  02C0  2AC2               	goto	u3820
  4798  02C1                     u3821:
  4799  02C1  2ADB               	goto	l3294
  4800  02C2                     u3820:
  4801  02C2                     l3282:
  4802  02C2  1427               	bsf	___fldiv@grs,0
  4803  02C3  2ADB               	goto	l3294
  4804  02C4                     l3284:
  4805  02C4  3001               	movlw	1
  4806  02C5                     u3835:
  4807  02C5  35F4               	lslf	___fldiv@b,f
  4808  02C6  0DF5               	rlf	___fldiv@b+1,f
  4809  02C7  0DF6               	rlf	___fldiv@b+2,f
  4810  02C8  0DF7               	rlf	___fldiv@b+3,f
  4811  02C9  0B89               	decfsz	9,f
  4812  02CA  2AC5               	goto	u3835
  4813  02CB                     l3286:
  4814  02CB  1FAA               	btfss	___fldiv@grs+3,7
  4815  02CC  2ACE               	goto	u3841
  4816  02CD  2ACF               	goto	u3840
  4817  02CE                     u3841:
  4818  02CE  2AD0               	goto	l3290
  4819  02CF                     u3840:
  4820  02CF                     l3288:
  4821  02CF  1474               	bsf	___fldiv@b,0
  4822  02D0                     l3290:
  4823  02D0  3001               	movlw	1
  4824  02D1                     u3855:
  4825  02D1  35A7               	lslf	___fldiv@grs,f
  4826  02D2  0DA8               	rlf	___fldiv@grs+1,f
  4827  02D3  0DA9               	rlf	___fldiv@grs+2,f
  4828  02D4  0DAA               	rlf	___fldiv@grs+3,f
  4829  02D5  0B89               	decfsz	9,f
  4830  02D6  2AD1               	goto	u3855
  4831  02D7                     l3292:
  4832  02D7  30FF               	movlw	255
  4833  02D8  07A5               	addwf	___fldiv@new_exp,f
  4834  02D9  30FF               	movlw	255
  4835  02DA  3DA6               	addwfc	___fldiv@new_exp+1,f
  4836  02DB                     l3294:
  4837  02DB  1FF6               	btfss	___fldiv@b+2,7
  4838  02DC  2ADE               	goto	u3861
  4839  02DD  2ADF               	goto	u3860
  4840  02DE                     u3861:
  4841  02DE  2AC4               	goto	l3284
  4842  02DF                     u3860:
  4843  02DF                     l3296:
  4844  02DF  01AC               	clrf	___fldiv@aexp
  4845  02E0                     l3298:
  4846  02E0  1FAA               	btfss	___fldiv@grs+3,7
  4847  02E1  2AE3               	goto	u3871
  4848  02E2  2AE4               	goto	u3870
  4849  02E3                     u3871:
  4850  02E3  2B00               	goto	l3306
  4851  02E4                     u3870:
  4852  02E4                     l3300:
  4853  02E4  30FF               	movlw	255
  4854  02E5  0527               	andwf	___fldiv@grs,w
  4855  02E6  00F8               	movwf	??___fldiv
  4856  02E7  30FF               	movlw	255
  4857  02E8  0528               	andwf	___fldiv@grs+1,w
  4858  02E9  00F9               	movwf	??___fldiv+1
  4859  02EA  30FF               	movlw	255
  4860  02EB  0529               	andwf	___fldiv@grs+2,w
  4861  02EC  00FA               	movwf	??___fldiv+2
  4862  02ED  307F               	movlw	127
  4863  02EE  052A               	andwf	___fldiv@grs+3,w
  4864  02EF  00FB               	movwf	??___fldiv+3
  4865  02F0  087B               	movf	??___fldiv+3,w
  4866  02F1  047A               	iorwf	??___fldiv+2,w
  4867  02F2  0479               	iorwf	??___fldiv+1,w
  4868  02F3  0478               	iorwf	??___fldiv,w
  4869  02F4  1903               	skipnz
  4870  02F5  2AF7               	goto	u3881
  4871  02F6  2AF8               	goto	u3880
  4872  02F7                     u3881:
  4873  02F7  2AFB               	goto	l907
  4874  02F8                     u3880:
  4875  02F8                     l3302:
  4876  02F8  01AC               	clrf	___fldiv@aexp
  4877  02F9  0AAC               	incf	___fldiv@aexp,f
  4878  02FA  2B00               	goto	l3306
  4879  02FB                     l907:
  4880  02FB  1C74               	btfss	___fldiv@b,0
  4881  02FC  2AFE               	goto	u3891
  4882  02FD  2AFF               	goto	u3890
  4883  02FE                     u3891:
  4884  02FE  2B00               	goto	l3306
  4885  02FF                     u3890:
  4886  02FF  2AF8               	goto	l3302
  4887  0300                     l3306:
  4888  0300  082C               	movf	___fldiv@aexp,w
  4889  0301  1903               	btfsc	3,2
  4890  0302  2B04               	goto	u3901
  4891  0303  2B05               	goto	u3900
  4892  0304                     u3901:
  4893  0304  2B2D               	goto	l3316
  4894  0305                     u3900:
  4895  0305                     l3308:
  4896  0305  3001               	movlw	1
  4897  0306  07F4               	addwf	___fldiv@b,f
  4898  0307  3000               	movlw	0
  4899  0308  3DF5               	addwfc	___fldiv@b+1,f
  4900  0309  3000               	movlw	0
  4901  030A  3DF6               	addwfc	___fldiv@b+2,f
  4902  030B  3000               	movlw	0
  4903  030C  3DF7               	addwfc	___fldiv@b+3,f
  4904  030D                     l3310:
  4905  030D  1C77               	btfss	___fldiv@b+3,0
  4906  030E  2B10               	goto	u3911
  4907  030F  2B11               	goto	u3910
  4908  0310                     u3911:
  4909  0310  2B2D               	goto	l3316
  4910  0311                     u3910:
  4911  0311                     l3312:
  4912  0311  0874               	movf	___fldiv@b,w
  4913  0312  00F8               	movwf	??___fldiv
  4914  0313  0875               	movf	___fldiv@b+1,w
  4915  0314  00F9               	movwf	??___fldiv+1
  4916  0315  0876               	movf	___fldiv@b+2,w
  4917  0316  00FA               	movwf	??___fldiv+2
  4918  0317  0877               	movf	___fldiv@b+3,w
  4919  0318  00FB               	movwf	??___fldiv+3
  4920  0319  3001               	movlw	1
  4921  031A  00FC               	movwf	??___fldiv+4
  4922  031B                     u3925:
  4923  031B  37FB               	asrf	??___fldiv+3,f
  4924  031C  0CFA               	rrf	??___fldiv+2,f
  4925  031D  0CF9               	rrf	??___fldiv+1,f
  4926  031E  0CF8               	rrf	??___fldiv,f
  4927  031F                     u3920:
  4928  031F  0BFC               	decfsz	??___fldiv+4,f
  4929  0320  2B1B               	goto	u3925
  4930  0321  087B               	movf	??___fldiv+3,w
  4931  0322  00F7               	movwf	___fldiv@b+3
  4932  0323  087A               	movf	??___fldiv+2,w
  4933  0324  00F6               	movwf	___fldiv@b+2
  4934  0325  0879               	movf	??___fldiv+1,w
  4935  0326  00F5               	movwf	___fldiv@b+1
  4936  0327  0878               	movf	??___fldiv,w
  4937  0328  00F4               	movwf	___fldiv@b
  4938  0329                     l3314:
  4939  0329  3001               	movlw	1
  4940  032A  07A5               	addwf	___fldiv@new_exp,f
  4941  032B  3000               	movlw	0
  4942  032C  3DA6               	addwfc	___fldiv@new_exp+1,f
  4943  032D                     l3316:
  4944  032D  0826               	movf	___fldiv@new_exp+1,w
  4945  032E  3A80               	xorlw	128
  4946  032F  00F8               	movwf	??___fldiv
  4947  0330  3080               	movlw	128
  4948  0331  0278               	subwf	??___fldiv,w
  4949  0332  1D03               	skipz
  4950  0333  2B36               	goto	u3935
  4951  0334  30FF               	movlw	255
  4952  0335  0225               	subwf	___fldiv@new_exp,w
  4953  0336                     u3935:
  4954  0336  1C03               	skipc
  4955  0337  2B39               	goto	u3931
  4956  0338  2B3A               	goto	u3930
  4957  0339                     u3931:
  4958  0339  2B47               	goto	l912
  4959  033A                     u3930:
  4960  033A                     l3318:
  4961  033A  30FF               	movlw	255
  4962  033B  0020               	movlb	0	; select bank0
  4963  033C  00A5               	movwf	___fldiv@new_exp
  4964  033D  3000               	movlw	0
  4965  033E  00A6               	movwf	___fldiv@new_exp+1
  4966  033F  3000               	movlw	0
  4967  0340  00F7               	movwf	___fldiv@b+3
  4968  0341  3000               	movlw	0
  4969  0342  00F6               	movwf	___fldiv@b+2
  4970  0343  3000               	movlw	0
  4971  0344  00F5               	movwf	___fldiv@b+1
  4972  0345  3000               	movlw	0
  4973  0346  00F4               	movwf	___fldiv@b
  4974  0347                     l912:
  4975  0347  0020               	movlb	0	; select bank0
  4976  0348  0826               	movf	___fldiv@new_exp+1,w
  4977  0349  3A80               	xorlw	128
  4978  034A  00F8               	movwf	??___fldiv
  4979  034B  3080               	movlw	128
  4980  034C  0278               	subwf	??___fldiv,w
  4981  034D  1D03               	skipz
  4982  034E  2B51               	goto	u3945
  4983  034F  3001               	movlw	1
  4984  0350  0225               	subwf	___fldiv@new_exp,w
  4985  0351                     u3945:
  4986  0351  1803               	skipnc
  4987  0352  2B54               	goto	u3941
  4988  0353  2B55               	goto	u3940
  4989  0354                     u3941:
  4990  0354  2B61               	goto	l913
  4991  0355                     u3940:
  4992  0355                     l3320:
  4993  0355  0020               	movlb	0	; select bank0
  4994  0356  01A5               	clrf	___fldiv@new_exp
  4995  0357  01A6               	clrf	___fldiv@new_exp+1
  4996  0358                     l3322:
  4997  0358  3000               	movlw	0
  4998  0359  00F7               	movwf	___fldiv@b+3
  4999  035A  3000               	movlw	0
  5000  035B  00F6               	movwf	___fldiv@b+2
  5001  035C  3000               	movlw	0
  5002  035D  00F5               	movwf	___fldiv@b+1
  5003  035E  3000               	movlw	0
  5004  035F  00F4               	movwf	___fldiv@b
  5005  0360                     l3324:
  5006  0360  01A4               	clrf	___fldiv@sign
  5007  0361                     l913:
  5008  0361  0020               	movlb	0	; select bank0
  5009  0362  0825               	movf	___fldiv@new_exp,w
  5010  0363  00F8               	movwf	??___fldiv
  5011  0364  0878               	movf	??___fldiv,w
  5012  0365  00AB               	movwf	___fldiv@bexp
  5013  0366                     l3326:
  5014  0366  1C2B               	btfss	___fldiv@bexp,0
  5015  0367  2B69               	goto	u3951
  5016  0368  2B6A               	goto	u3950
  5017  0369                     u3951:
  5018  0369  2B6C               	goto	l3330
  5019  036A                     u3950:
  5020  036A                     l3328:
  5021  036A  17F6               	bsf	___fldiv@b+2,7
  5022  036B  2B70               	goto	l915
  5023  036C                     l3330:
  5024  036C  307F               	movlw	127
  5025  036D  00F8               	movwf	??___fldiv
  5026  036E  0878               	movf	??___fldiv,w
  5027  036F  05F6               	andwf	___fldiv@b+2,f
  5028  0370                     l915:
  5029  0370  362B               	lsrf	___fldiv@bexp,w
  5030  0371  00F8               	movwf	??___fldiv
  5031  0372  0878               	movf	??___fldiv,w
  5032  0373  00F7               	movwf	___fldiv@b+3
  5033  0374  0824               	movf	___fldiv@sign,w
  5034  0375  00F8               	movwf	??___fldiv
  5035  0376  0878               	movf	??___fldiv,w
  5036  0377  04F7               	iorwf	___fldiv@b+3,f
  5037  0378  2A35               	goto	l3240
  5038  0379                     l893:
  5039  0379  0008               	return
  5040  037A                     __end_of___fldiv:
  5041                           
  5042                           	psect	text7
  5043  0576                     __ptext7:	
  5044 ;; *************** function ___flmul *****************
  5045 ;; Defined at:
  5046 ;;		line 8 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\sprcmul.c"
  5047 ;; Parameters:    Size  Location     Type
  5048 ;;  b               4   13[BANK0 ] unsigned char 
  5049 ;;  a               4   17[BANK0 ] unsigned char 
  5050 ;; Auto vars:     Size  Location     Type
  5051 ;;  prod            4   33[BANK0 ] struct .
  5052 ;;  grs             4   27[BANK0 ] unsigned long 
  5053 ;;  temp            2   37[BANK0 ] struct .
  5054 ;;  bexp            1   32[BANK0 ] unsigned char 
  5055 ;;  aexp            1   31[BANK0 ] unsigned char 
  5056 ;;  sign            1   26[BANK0 ] unsigned char 
  5057 ;; Return value:  Size  Location     Type
  5058 ;;                  4   13[BANK0 ] unsigned char 
  5059 ;; Registers used:
  5060 ;;		wreg, status,2, status,0, pclath, cstack
  5061 ;; Tracked objects:
  5062 ;;		On entry : 0/0
  5063 ;;		On exit  : 0/0
  5064 ;;		Unchanged: 0/0
  5065 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  5066 ;;      Params:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5067 ;;      Locals:         0      13       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5068 ;;      Temps:          0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5069 ;;      Totals:         0      26       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5070 ;;Total ram usage:       26 bytes
  5071 ;; Hardware stack levels used: 1
  5072 ;; Hardware stack levels required when called: 1
  5073 ;; This function calls:
  5074 ;;		__Umul8_16
  5075 ;; This function is called by:
  5076 ;;		_calc_percentage
  5077 ;; This function uses a non-reentrant model
  5078 ;;
  5079                           
  5080                           
  5081                           ;psect for function ___flmul
  5082  0576                     ___flmul:
  5083  0576                     l3592:	
  5084                           ;incstack = 0
  5085                           ; Regs used in ___flmul: [wreg+status,2+status,0+pclath+cstack]
  5086                           
  5087  0576  0020               	movlb	0	; select bank0
  5088  0577  0830               	movf	___flmul@b+3,w
  5089  0578  3980               	andlw	128
  5090  0579  00B5               	movwf	??___flmul
  5091  057A  0835               	movf	??___flmul,w
  5092  057B  00BA               	movwf	___flmul@sign
  5093  057C                     l3594:
  5094  057C  3530               	lslf	___flmul@b+3,w
  5095  057D  00B5               	movwf	??___flmul
  5096  057E  0835               	movf	??___flmul,w
  5097  057F  00C0               	movwf	___flmul@bexp
  5098  0580                     l3596:
  5099  0580  1FAF               	btfss	___flmul@b+2,7
  5100  0581  2D83               	goto	u4311
  5101  0582  2D84               	goto	u4310
  5102  0583                     u4311:
  5103  0583  2D85               	goto	l3600
  5104  0584                     u4310:
  5105  0584                     l3598:
  5106  0584  1440               	bsf	___flmul@bexp,0
  5107  0585                     l3600:
  5108  0585  0840               	movf	___flmul@bexp,w
  5109  0586  1903               	btfsc	3,2
  5110  0587  2D89               	goto	u4321
  5111  0588  2D8A               	goto	u4320
  5112  0589                     u4321:
  5113  0589  2D99               	goto	l3608
  5114  058A                     u4320:
  5115  058A                     l3602:
  5116  058A  0A40               	incf	___flmul@bexp,w
  5117  058B  1D03               	btfss	3,2
  5118  058C  2D8E               	goto	u4331
  5119  058D  2D8F               	goto	u4330
  5120  058E                     u4331:
  5121  058E  2D97               	goto	l3606
  5122  058F                     u4330:
  5123  058F                     l3604:
  5124  058F  3000               	movlw	0
  5125  0590  00B0               	movwf	___flmul@b+3
  5126  0591  3000               	movlw	0
  5127  0592  00AF               	movwf	___flmul@b+2
  5128  0593  3000               	movlw	0
  5129  0594  00AE               	movwf	___flmul@b+1
  5130  0595  3000               	movlw	0
  5131  0596  00AD               	movwf	___flmul@b
  5132  0597                     l3606:
  5133  0597  17AF               	bsf	___flmul@b+2,7
  5134  0598  2DA1               	goto	l3610
  5135  0599                     l3608:
  5136  0599  3000               	movlw	0
  5137  059A  00B0               	movwf	___flmul@b+3
  5138  059B  3000               	movlw	0
  5139  059C  00AF               	movwf	___flmul@b+2
  5140  059D  3000               	movlw	0
  5141  059E  00AE               	movwf	___flmul@b+1
  5142  059F  3000               	movlw	0
  5143  05A0  00AD               	movwf	___flmul@b
  5144  05A1                     l3610:
  5145  05A1  0834               	movf	___flmul@a+3,w
  5146  05A2  3980               	andlw	128
  5147  05A3  00B5               	movwf	??___flmul
  5148  05A4  0835               	movf	??___flmul,w
  5149  05A5  06BA               	xorwf	___flmul@sign,f
  5150  05A6                     l3612:
  5151  05A6  3534               	lslf	___flmul@a+3,w
  5152  05A7  00B5               	movwf	??___flmul
  5153  05A8  0835               	movf	??___flmul,w
  5154  05A9  00BF               	movwf	___flmul@aexp
  5155  05AA                     l3614:
  5156  05AA  1FB3               	btfss	___flmul@a+2,7
  5157  05AB  2DAD               	goto	u4341
  5158  05AC  2DAE               	goto	u4340
  5159  05AD                     u4341:
  5160  05AD  2DAF               	goto	l3618
  5161  05AE                     u4340:
  5162  05AE                     l3616:
  5163  05AE  143F               	bsf	___flmul@aexp,0
  5164  05AF                     l3618:
  5165  05AF  083F               	movf	___flmul@aexp,w
  5166  05B0  1903               	btfsc	3,2
  5167  05B1  2DB3               	goto	u4351
  5168  05B2  2DB4               	goto	u4350
  5169  05B3                     u4351:
  5170  05B3  2DC3               	goto	l3626
  5171  05B4                     u4350:
  5172  05B4                     l3620:
  5173  05B4  0A3F               	incf	___flmul@aexp,w
  5174  05B5  1D03               	btfss	3,2
  5175  05B6  2DB8               	goto	u4361
  5176  05B7  2DB9               	goto	u4360
  5177  05B8                     u4361:
  5178  05B8  2DC1               	goto	l3624
  5179  05B9                     u4360:
  5180  05B9                     l3622:
  5181  05B9  3000               	movlw	0
  5182  05BA  00B4               	movwf	___flmul@a+3
  5183  05BB  3000               	movlw	0
  5184  05BC  00B3               	movwf	___flmul@a+2
  5185  05BD  3000               	movlw	0
  5186  05BE  00B2               	movwf	___flmul@a+1
  5187  05BF  3000               	movlw	0
  5188  05C0  00B1               	movwf	___flmul@a
  5189  05C1                     l3624:
  5190  05C1  17B3               	bsf	___flmul@a+2,7
  5191  05C2  2DCB               	goto	l3628
  5192  05C3                     l3626:
  5193  05C3  3000               	movlw	0
  5194  05C4  00B4               	movwf	___flmul@a+3
  5195  05C5  3000               	movlw	0
  5196  05C6  00B3               	movwf	___flmul@a+2
  5197  05C7  3000               	movlw	0
  5198  05C8  00B2               	movwf	___flmul@a+1
  5199  05C9  3000               	movlw	0
  5200  05CA  00B1               	movwf	___flmul@a
  5201  05CB                     l3628:
  5202  05CB  083F               	movf	___flmul@aexp,w
  5203  05CC  1903               	btfsc	3,2
  5204  05CD  2DCF               	goto	u4371
  5205  05CE  2DD0               	goto	u4370
  5206  05CF                     u4371:
  5207  05CF  2DD5               	goto	l3632
  5208  05D0                     u4370:
  5209  05D0                     l3630:
  5210  05D0  0840               	movf	___flmul@bexp,w
  5211  05D1  1D03               	btfss	3,2
  5212  05D2  2DD4               	goto	u4381
  5213  05D3  2DD5               	goto	u4380
  5214  05D4                     u4381:
  5215  05D4  2DDE               	goto	l3636
  5216  05D5                     u4380:
  5217  05D5                     l3632:
  5218  05D5  3000               	movlw	0
  5219  05D6  00B0               	movwf	?___flmul+3
  5220  05D7  3000               	movlw	0
  5221  05D8  00AF               	movwf	?___flmul+2
  5222  05D9  3000               	movlw	0
  5223  05DA  00AE               	movwf	?___flmul+1
  5224  05DB  3000               	movlw	0
  5225  05DC  00AD               	movwf	?___flmul
  5226  05DD  2FCC               	goto	l931
  5227  05DE                     l3636:
  5228  05DE  082D               	movf	___flmul@b,w
  5229  05DF  00B5               	movwf	??___flmul
  5230  05E0  0835               	movf	??___flmul,w
  5231  05E1  00F0               	movwf	__Umul8_16@multiplicand
  5232  05E2  0833               	movf	___flmul@a+2,w
  5233  05E3  319F  27DD  3185   	fcall	__Umul8_16
  5234  05E6  0871               	movf	?__Umul8_16+1,w
  5235  05E7  0020               	movlb	0	; select bank0
  5236  05E8  00C6               	movwf	___flmul@temp+1
  5237  05E9  0870               	movf	?__Umul8_16,w
  5238  05EA  00C5               	movwf	___flmul@temp
  5239  05EB                     l3638:
  5240  05EB  0845               	movf	___flmul@temp,w
  5241  05EC  00B5               	movwf	??___flmul
  5242  05ED  01B6               	clrf	??___flmul+1
  5243  05EE  01B7               	clrf	??___flmul+2
  5244  05EF  01B8               	clrf	??___flmul+3
  5245  05F0  0838               	movf	??___flmul+3,w
  5246  05F1  00BE               	movwf	___flmul@grs+3
  5247  05F2  0837               	movf	??___flmul+2,w
  5248  05F3  00BD               	movwf	___flmul@grs+2
  5249  05F4  0836               	movf	??___flmul+1,w
  5250  05F5  00BC               	movwf	___flmul@grs+1
  5251  05F6  0835               	movf	??___flmul,w
  5252  05F7  00BB               	movwf	___flmul@grs
  5253  05F8                     l3640:
  5254  05F8  0846               	movf	___flmul@temp+1,w
  5255  05F9  00B5               	movwf	??___flmul
  5256  05FA  01B6               	clrf	??___flmul+1
  5257  05FB  01B7               	clrf	??___flmul+2
  5258  05FC  01B8               	clrf	??___flmul+3
  5259  05FD  0838               	movf	??___flmul+3,w
  5260  05FE  00C4               	movwf	___flmul@prod+3
  5261  05FF  0837               	movf	??___flmul+2,w
  5262  0600  00C3               	movwf	___flmul@prod+2
  5263  0601  0836               	movf	??___flmul+1,w
  5264  0602  00C2               	movwf	___flmul@prod+1
  5265  0603  0835               	movf	??___flmul,w
  5266  0604  00C1               	movwf	___flmul@prod
  5267  0605  082E               	movf	___flmul@b+1,w
  5268  0606  00B5               	movwf	??___flmul
  5269  0607  0835               	movf	??___flmul,w
  5270  0608  00F0               	movwf	__Umul8_16@multiplicand
  5271  0609  0832               	movf	___flmul@a+1,w
  5272  060A  319F  27DD  3185   	fcall	__Umul8_16
  5273  060D  0871               	movf	?__Umul8_16+1,w
  5274  060E  0020               	movlb	0	; select bank0
  5275  060F  00C6               	movwf	___flmul@temp+1
  5276  0610  0870               	movf	?__Umul8_16,w
  5277  0611  00C5               	movwf	___flmul@temp
  5278  0612                     l3642:
  5279  0612  0845               	movf	___flmul@temp,w
  5280  0613  00B5               	movwf	??___flmul
  5281  0614  01B6               	clrf	??___flmul+1
  5282  0615  01B7               	clrf	??___flmul+2
  5283  0616  01B8               	clrf	??___flmul+3
  5284  0617  0835               	movf	??___flmul,w
  5285  0618  07BB               	addwf	___flmul@grs,f
  5286  0619  0836               	movf	??___flmul+1,w
  5287  061A  3DBC               	addwfc	___flmul@grs+1,f
  5288  061B  0837               	movf	??___flmul+2,w
  5289  061C  3DBD               	addwfc	___flmul@grs+2,f
  5290  061D  0838               	movf	??___flmul+3,w
  5291  061E  3DBE               	addwfc	___flmul@grs+3,f
  5292  061F                     l3644:
  5293  061F  0846               	movf	___flmul@temp+1,w
  5294  0620  00B5               	movwf	??___flmul
  5295  0621  01B6               	clrf	??___flmul+1
  5296  0622  01B7               	clrf	??___flmul+2
  5297  0623  01B8               	clrf	??___flmul+3
  5298  0624  0835               	movf	??___flmul,w
  5299  0625  07C1               	addwf	___flmul@prod,f
  5300  0626  0836               	movf	??___flmul+1,w
  5301  0627  3DC2               	addwfc	___flmul@prod+1,f
  5302  0628  0837               	movf	??___flmul+2,w
  5303  0629  3DC3               	addwfc	___flmul@prod+2,f
  5304  062A  0838               	movf	??___flmul+3,w
  5305  062B  3DC4               	addwfc	___flmul@prod+3,f
  5306  062C  082F               	movf	___flmul@b+2,w
  5307  062D  00B5               	movwf	??___flmul
  5308  062E  0835               	movf	??___flmul,w
  5309  062F  00F0               	movwf	__Umul8_16@multiplicand
  5310  0630  0831               	movf	___flmul@a,w
  5311  0631  319F  27DD  3185   	fcall	__Umul8_16
  5312  0634  0871               	movf	?__Umul8_16+1,w
  5313  0635  0020               	movlb	0	; select bank0
  5314  0636  00C6               	movwf	___flmul@temp+1
  5315  0637  0870               	movf	?__Umul8_16,w
  5316  0638  00C5               	movwf	___flmul@temp
  5317  0639                     l3646:
  5318  0639  0845               	movf	___flmul@temp,w
  5319  063A  00B5               	movwf	??___flmul
  5320  063B  01B6               	clrf	??___flmul+1
  5321  063C  01B7               	clrf	??___flmul+2
  5322  063D  01B8               	clrf	??___flmul+3
  5323  063E  0835               	movf	??___flmul,w
  5324  063F  07BB               	addwf	___flmul@grs,f
  5325  0640  0836               	movf	??___flmul+1,w
  5326  0641  3DBC               	addwfc	___flmul@grs+1,f
  5327  0642  0837               	movf	??___flmul+2,w
  5328  0643  3DBD               	addwfc	___flmul@grs+2,f
  5329  0644  0838               	movf	??___flmul+3,w
  5330  0645  3DBE               	addwfc	___flmul@grs+3,f
  5331  0646                     l3648:
  5332  0646  0846               	movf	___flmul@temp+1,w
  5333  0647  00B5               	movwf	??___flmul
  5334  0648  01B6               	clrf	??___flmul+1
  5335  0649  01B7               	clrf	??___flmul+2
  5336  064A  01B8               	clrf	??___flmul+3
  5337  064B  0835               	movf	??___flmul,w
  5338  064C  07C1               	addwf	___flmul@prod,f
  5339  064D  0836               	movf	??___flmul+1,w
  5340  064E  3DC2               	addwfc	___flmul@prod+1,f
  5341  064F  0837               	movf	??___flmul+2,w
  5342  0650  3DC3               	addwfc	___flmul@prod+2,f
  5343  0651  0838               	movf	??___flmul+3,w
  5344  0652  3DC4               	addwfc	___flmul@prod+3,f
  5345  0653                     l3650:
  5346  0653  3008               	movlw	8
  5347  0654                     u4395:
  5348  0654  35BB               	lslf	___flmul@grs,f
  5349  0655  0DBC               	rlf	___flmul@grs+1,f
  5350  0656  0DBD               	rlf	___flmul@grs+2,f
  5351  0657  0DBE               	rlf	___flmul@grs+3,f
  5352  0658  0B89               	decfsz	9,f
  5353  0659  2E54               	goto	u4395
  5354  065A                     l3652:
  5355  065A  082E               	movf	___flmul@b+1,w
  5356  065B  00B5               	movwf	??___flmul
  5357  065C  0835               	movf	??___flmul,w
  5358  065D  00F0               	movwf	__Umul8_16@multiplicand
  5359  065E  0831               	movf	___flmul@a,w
  5360  065F  319F  27DD  3185   	fcall	__Umul8_16
  5361  0662  0871               	movf	?__Umul8_16+1,w
  5362  0663  0020               	movlb	0	; select bank0
  5363  0664  00C6               	movwf	___flmul@temp+1
  5364  0665  0870               	movf	?__Umul8_16,w
  5365  0666  00C5               	movwf	___flmul@temp
  5366  0667                     l3654:
  5367  0667  0845               	movf	___flmul@temp,w
  5368  0668  07BB               	addwf	___flmul@grs,f
  5369  0669  0846               	movf	___flmul@temp+1,w
  5370  066A  3DBC               	addwfc	___flmul@grs+1,f
  5371  066B  3000               	movlw	0
  5372  066C  3DBD               	addwfc	___flmul@grs+2,f
  5373  066D  3DBE               	addwfc	___flmul@grs+3,f
  5374  066E                     l3656:
  5375  066E  082D               	movf	___flmul@b,w
  5376  066F  00B5               	movwf	??___flmul
  5377  0670  0835               	movf	??___flmul,w
  5378  0671  00F0               	movwf	__Umul8_16@multiplicand
  5379  0672  0832               	movf	___flmul@a+1,w
  5380  0673  319F  27DD  3185   	fcall	__Umul8_16
  5381  0676  0871               	movf	?__Umul8_16+1,w
  5382  0677  0020               	movlb	0	; select bank0
  5383  0678  00C6               	movwf	___flmul@temp+1
  5384  0679  0870               	movf	?__Umul8_16,w
  5385  067A  00C5               	movwf	___flmul@temp
  5386  067B                     l3658:
  5387  067B  0845               	movf	___flmul@temp,w
  5388  067C  07BB               	addwf	___flmul@grs,f
  5389  067D  0846               	movf	___flmul@temp+1,w
  5390  067E  3DBC               	addwfc	___flmul@grs+1,f
  5391  067F  3000               	movlw	0
  5392  0680  3DBD               	addwfc	___flmul@grs+2,f
  5393  0681  3DBE               	addwfc	___flmul@grs+3,f
  5394  0682                     l3660:
  5395  0682  3008               	movlw	8
  5396  0683                     u4405:
  5397  0683  35BB               	lslf	___flmul@grs,f
  5398  0684  0DBC               	rlf	___flmul@grs+1,f
  5399  0685  0DBD               	rlf	___flmul@grs+2,f
  5400  0686  0DBE               	rlf	___flmul@grs+3,f
  5401  0687  0B89               	decfsz	9,f
  5402  0688  2E83               	goto	u4405
  5403  0689  082D               	movf	___flmul@b,w
  5404  068A  00B5               	movwf	??___flmul
  5405  068B  0835               	movf	??___flmul,w
  5406  068C  00F0               	movwf	__Umul8_16@multiplicand
  5407  068D  0831               	movf	___flmul@a,w
  5408  068E  319F  27DD  3185   	fcall	__Umul8_16
  5409  0691  0871               	movf	?__Umul8_16+1,w
  5410  0692  0020               	movlb	0	; select bank0
  5411  0693  00C6               	movwf	___flmul@temp+1
  5412  0694  0870               	movf	?__Umul8_16,w
  5413  0695  00C5               	movwf	___flmul@temp
  5414  0696                     l3662:
  5415  0696  0845               	movf	___flmul@temp,w
  5416  0697  07BB               	addwf	___flmul@grs,f
  5417  0698  0846               	movf	___flmul@temp+1,w
  5418  0699  3DBC               	addwfc	___flmul@grs+1,f
  5419  069A  3000               	movlw	0
  5420  069B  3DBD               	addwfc	___flmul@grs+2,f
  5421  069C  3DBE               	addwfc	___flmul@grs+3,f
  5422  069D                     l3664:
  5423  069D  082E               	movf	___flmul@b+1,w
  5424  069E  00B5               	movwf	??___flmul
  5425  069F  0835               	movf	??___flmul,w
  5426  06A0  00F0               	movwf	__Umul8_16@multiplicand
  5427  06A1  0833               	movf	___flmul@a+2,w
  5428  06A2  319F  27DD  3185   	fcall	__Umul8_16
  5429  06A5  0871               	movf	?__Umul8_16+1,w
  5430  06A6  0020               	movlb	0	; select bank0
  5431  06A7  00C6               	movwf	___flmul@temp+1
  5432  06A8  0870               	movf	?__Umul8_16,w
  5433  06A9  00C5               	movwf	___flmul@temp
  5434  06AA  0845               	movf	___flmul@temp,w
  5435  06AB  07C1               	addwf	___flmul@prod,f
  5436  06AC  0846               	movf	___flmul@temp+1,w
  5437  06AD  3DC2               	addwfc	___flmul@prod+1,f
  5438  06AE  3000               	movlw	0
  5439  06AF  3DC3               	addwfc	___flmul@prod+2,f
  5440  06B0  3DC4               	addwfc	___flmul@prod+3,f
  5441  06B1                     l3666:
  5442  06B1  082F               	movf	___flmul@b+2,w
  5443  06B2  00B5               	movwf	??___flmul
  5444  06B3  0835               	movf	??___flmul,w
  5445  06B4  00F0               	movwf	__Umul8_16@multiplicand
  5446  06B5  0832               	movf	___flmul@a+1,w
  5447  06B6  319F  27DD  3185   	fcall	__Umul8_16
  5448  06B9  0871               	movf	?__Umul8_16+1,w
  5449  06BA  0020               	movlb	0	; select bank0
  5450  06BB  00C6               	movwf	___flmul@temp+1
  5451  06BC  0870               	movf	?__Umul8_16,w
  5452  06BD  00C5               	movwf	___flmul@temp
  5453  06BE                     l3668:
  5454  06BE  0845               	movf	___flmul@temp,w
  5455  06BF  07C1               	addwf	___flmul@prod,f
  5456  06C0  0846               	movf	___flmul@temp+1,w
  5457  06C1  3DC2               	addwfc	___flmul@prod+1,f
  5458  06C2  3000               	movlw	0
  5459  06C3  3DC3               	addwfc	___flmul@prod+2,f
  5460  06C4  3DC4               	addwfc	___flmul@prod+3,f
  5461  06C5  082F               	movf	___flmul@b+2,w
  5462  06C6  00B5               	movwf	??___flmul
  5463  06C7  0835               	movf	??___flmul,w
  5464  06C8  00F0               	movwf	__Umul8_16@multiplicand
  5465  06C9  0833               	movf	___flmul@a+2,w
  5466  06CA  319F  27DD  3185   	fcall	__Umul8_16
  5467  06CD  0871               	movf	?__Umul8_16+1,w
  5468  06CE  0020               	movlb	0	; select bank0
  5469  06CF  00C6               	movwf	___flmul@temp+1
  5470  06D0  0870               	movf	?__Umul8_16,w
  5471  06D1  00C5               	movwf	___flmul@temp
  5472  06D2                     l3670:
  5473  06D2  0845               	movf	___flmul@temp,w
  5474  06D3  00B5               	movwf	??___flmul
  5475  06D4  0846               	movf	___flmul@temp+1,w
  5476  06D5  00B6               	movwf	??___flmul+1
  5477  06D6  01B7               	clrf	??___flmul+2
  5478  06D7  01B8               	clrf	??___flmul+3
  5479  06D8  3008               	movlw	8
  5480  06D9                     u4415:
  5481  06D9  35B5               	lslf	??___flmul,f
  5482  06DA  0DB6               	rlf	??___flmul+1,f
  5483  06DB  0DB7               	rlf	??___flmul+2,f
  5484  06DC  0DB8               	rlf	??___flmul+3,f
  5485  06DD                     u4410:
  5486  06DD  0B89               	decfsz	9,f
  5487  06DE  2ED9               	goto	u4415
  5488  06DF  0835               	movf	??___flmul,w
  5489  06E0  07C1               	addwf	___flmul@prod,f
  5490  06E1  0836               	movf	??___flmul+1,w
  5491  06E2  3DC2               	addwfc	___flmul@prod+1,f
  5492  06E3  0837               	movf	??___flmul+2,w
  5493  06E4  3DC3               	addwfc	___flmul@prod+2,f
  5494  06E5  0838               	movf	??___flmul+3,w
  5495  06E6  3DC4               	addwfc	___flmul@prod+3,f
  5496  06E7                     l3672:
  5497  06E7  083B               	movf	___flmul@grs,w
  5498  06E8  00B5               	movwf	??___flmul
  5499  06E9  083C               	movf	___flmul@grs+1,w
  5500  06EA  00B6               	movwf	??___flmul+1
  5501  06EB  083D               	movf	___flmul@grs+2,w
  5502  06EC  00B7               	movwf	??___flmul+2
  5503  06ED  083E               	movf	___flmul@grs+3,w
  5504  06EE  00B8               	movwf	??___flmul+3
  5505  06EF  3018               	movlw	24
  5506  06F0                     u4425:
  5507  06F0  36B8               	lsrf	??___flmul+3,f
  5508  06F1  0CB7               	rrf	??___flmul+2,f
  5509  06F2  0CB6               	rrf	??___flmul+1,f
  5510  06F3  0CB5               	rrf	??___flmul,f
  5511  06F4                     u4420:
  5512  06F4  0B89               	decfsz	9,f
  5513  06F5  2EF0               	goto	u4425
  5514  06F6  0835               	movf	??___flmul,w
  5515  06F7  07C1               	addwf	___flmul@prod,f
  5516  06F8  0836               	movf	??___flmul+1,w
  5517  06F9  3DC2               	addwfc	___flmul@prod+1,f
  5518  06FA  0837               	movf	??___flmul+2,w
  5519  06FB  3DC3               	addwfc	___flmul@prod+2,f
  5520  06FC  0838               	movf	??___flmul+3,w
  5521  06FD  3DC4               	addwfc	___flmul@prod+3,f
  5522  06FE                     l3674:
  5523  06FE  3008               	movlw	8
  5524  06FF                     u4435:
  5525  06FF  35BB               	lslf	___flmul@grs,f
  5526  0700  0DBC               	rlf	___flmul@grs+1,f
  5527  0701  0DBD               	rlf	___flmul@grs+2,f
  5528  0702  0DBE               	rlf	___flmul@grs+3,f
  5529  0703  0B89               	decfsz	9,f
  5530  0704  2EFF               	goto	u4435
  5531  0705                     l3676:
  5532  0705  0840               	movf	___flmul@bexp,w
  5533  0706  073F               	addwf	___flmul@aexp,w
  5534  0707  00B5               	movwf	??___flmul
  5535  0708  01B6               	clrf	??___flmul+1
  5536  0709  0DB6               	rlf	??___flmul+1,f
  5537  070A  0835               	movf	??___flmul,w
  5538  070B  3E82               	addlw	130
  5539  070C  00C5               	movwf	___flmul@temp
  5540  070D  30FF               	movlw	255
  5541  070E  3D36               	addwfc	??___flmul+1,w
  5542  070F  00C6               	movwf	___flmul@temp+1
  5543  0710  2F28               	goto	l3688
  5544  0711                     l3678:
  5545  0711  3001               	movlw	1
  5546  0712                     u4445:
  5547  0712  35C1               	lslf	___flmul@prod,f
  5548  0713  0DC2               	rlf	___flmul@prod+1,f
  5549  0714  0DC3               	rlf	___flmul@prod+2,f
  5550  0715  0DC4               	rlf	___flmul@prod+3,f
  5551  0716  0B89               	decfsz	9,f
  5552  0717  2F12               	goto	u4445
  5553  0718                     l3680:
  5554  0718  1FBE               	btfss	___flmul@grs+3,7
  5555  0719  2F1B               	goto	u4451
  5556  071A  2F1C               	goto	u4450
  5557  071B                     u4451:
  5558  071B  2F1D               	goto	l3684
  5559  071C                     u4450:
  5560  071C                     l3682:
  5561  071C  1441               	bsf	___flmul@prod,0
  5562  071D                     l3684:
  5563  071D  3001               	movlw	1
  5564  071E                     u4465:
  5565  071E  35BB               	lslf	___flmul@grs,f
  5566  071F  0DBC               	rlf	___flmul@grs+1,f
  5567  0720  0DBD               	rlf	___flmul@grs+2,f
  5568  0721  0DBE               	rlf	___flmul@grs+3,f
  5569  0722  0B89               	decfsz	9,f
  5570  0723  2F1E               	goto	u4465
  5571  0724                     l3686:
  5572  0724  30FF               	movlw	255
  5573  0725  07C5               	addwf	___flmul@temp,f
  5574  0726  30FF               	movlw	255
  5575  0727  3DC6               	addwfc	___flmul@temp+1,f
  5576  0728                     l3688:
  5577  0728  1FC3               	btfss	___flmul@prod+2,7
  5578  0729  2F2B               	goto	u4471
  5579  072A  2F2C               	goto	u4470
  5580  072B                     u4471:
  5581  072B  2F11               	goto	l3678
  5582  072C                     u4470:
  5583  072C                     l3690:
  5584  072C  01BF               	clrf	___flmul@aexp
  5585  072D                     l3692:
  5586  072D  1FBE               	btfss	___flmul@grs+3,7
  5587  072E  2F30               	goto	u4481
  5588  072F  2F31               	goto	u4480
  5589  0730                     u4481:
  5590  0730  2F4D               	goto	l3700
  5591  0731                     u4480:
  5592  0731                     l3694:
  5593  0731  30FF               	movlw	255
  5594  0732  053B               	andwf	___flmul@grs,w
  5595  0733  00B5               	movwf	??___flmul
  5596  0734  30FF               	movlw	255
  5597  0735  053C               	andwf	___flmul@grs+1,w
  5598  0736  00B6               	movwf	??___flmul+1
  5599  0737  30FF               	movlw	255
  5600  0738  053D               	andwf	___flmul@grs+2,w
  5601  0739  00B7               	movwf	??___flmul+2
  5602  073A  307F               	movlw	127
  5603  073B  053E               	andwf	___flmul@grs+3,w
  5604  073C  00B8               	movwf	??___flmul+3
  5605  073D  0838               	movf	??___flmul+3,w
  5606  073E  0437               	iorwf	??___flmul+2,w
  5607  073F  0436               	iorwf	??___flmul+1,w
  5608  0740  0435               	iorwf	??___flmul,w
  5609  0741  1903               	skipnz
  5610  0742  2F44               	goto	u4491
  5611  0743  2F45               	goto	u4490
  5612  0744                     u4491:
  5613  0744  2F48               	goto	l937
  5614  0745                     u4490:
  5615  0745                     l3696:
  5616  0745  01BF               	clrf	___flmul@aexp
  5617  0746  0ABF               	incf	___flmul@aexp,f
  5618  0747  2F4D               	goto	l3700
  5619  0748                     l937:
  5620  0748  1C41               	btfss	___flmul@prod,0
  5621  0749  2F4B               	goto	u4501
  5622  074A  2F4C               	goto	u4500
  5623  074B                     u4501:
  5624  074B  2F4D               	goto	l3700
  5625  074C                     u4500:
  5626  074C  2F45               	goto	l3696
  5627  074D                     l3700:
  5628  074D  083F               	movf	___flmul@aexp,w
  5629  074E  1903               	btfsc	3,2
  5630  074F  2F51               	goto	u4511
  5631  0750  2F52               	goto	u4510
  5632  0751                     u4511:
  5633  0751  2F7A               	goto	l3710
  5634  0752                     u4510:
  5635  0752                     l3702:
  5636  0752  3001               	movlw	1
  5637  0753  07C1               	addwf	___flmul@prod,f
  5638  0754  3000               	movlw	0
  5639  0755  3DC2               	addwfc	___flmul@prod+1,f
  5640  0756  3000               	movlw	0
  5641  0757  3DC3               	addwfc	___flmul@prod+2,f
  5642  0758  3000               	movlw	0
  5643  0759  3DC4               	addwfc	___flmul@prod+3,f
  5644  075A                     l3704:
  5645  075A  1C44               	btfss	___flmul@prod+3,0
  5646  075B  2F5D               	goto	u4521
  5647  075C  2F5E               	goto	u4520
  5648  075D                     u4521:
  5649  075D  2F7A               	goto	l3710
  5650  075E                     u4520:
  5651  075E                     l3706:
  5652  075E  0841               	movf	___flmul@prod,w
  5653  075F  00B5               	movwf	??___flmul
  5654  0760  0842               	movf	___flmul@prod+1,w
  5655  0761  00B6               	movwf	??___flmul+1
  5656  0762  0843               	movf	___flmul@prod+2,w
  5657  0763  00B7               	movwf	??___flmul+2
  5658  0764  0844               	movf	___flmul@prod+3,w
  5659  0765  00B8               	movwf	??___flmul+3
  5660  0766  3001               	movlw	1
  5661  0767  00B9               	movwf	??___flmul+4
  5662  0768                     u4535:
  5663  0768  37B8               	asrf	??___flmul+3,f
  5664  0769  0CB7               	rrf	??___flmul+2,f
  5665  076A  0CB6               	rrf	??___flmul+1,f
  5666  076B  0CB5               	rrf	??___flmul,f
  5667  076C                     u4530:
  5668  076C  0BB9               	decfsz	??___flmul+4,f
  5669  076D  2F68               	goto	u4535
  5670  076E  0838               	movf	??___flmul+3,w
  5671  076F  00C4               	movwf	___flmul@prod+3
  5672  0770  0837               	movf	??___flmul+2,w
  5673  0771  00C3               	movwf	___flmul@prod+2
  5674  0772  0836               	movf	??___flmul+1,w
  5675  0773  00C2               	movwf	___flmul@prod+1
  5676  0774  0835               	movf	??___flmul,w
  5677  0775  00C1               	movwf	___flmul@prod
  5678  0776                     l3708:
  5679  0776  3001               	movlw	1
  5680  0777  07C5               	addwf	___flmul@temp,f
  5681  0778  3000               	movlw	0
  5682  0779  3DC6               	addwfc	___flmul@temp+1,f
  5683  077A                     l3710:
  5684  077A  0846               	movf	___flmul@temp+1,w
  5685  077B  3A80               	xorlw	128
  5686  077C  00B5               	movwf	??___flmul
  5687  077D  3080               	movlw	128
  5688  077E  0235               	subwf	??___flmul,w
  5689  077F  1D03               	skipz
  5690  0780  2F83               	goto	u4545
  5691  0781  30FF               	movlw	255
  5692  0782  0245               	subwf	___flmul@temp,w
  5693  0783                     u4545:
  5694  0783  1C03               	skipc
  5695  0784  2F86               	goto	u4541
  5696  0785  2F87               	goto	u4540
  5697  0786                     u4541:
  5698  0786  2F91               	goto	l3714
  5699  0787                     u4540:
  5700  0787                     l3712:
  5701  0787  307F               	movlw	127
  5702  0788  0020               	movlb	0	; select bank0
  5703  0789  00C4               	movwf	___flmul@prod+3
  5704  078A  3080               	movlw	128
  5705  078B  00C3               	movwf	___flmul@prod+2
  5706  078C  3000               	movlw	0
  5707  078D  00C2               	movwf	___flmul@prod+1
  5708  078E  3000               	movlw	0
  5709  078F  00C1               	movwf	___flmul@prod
  5710  0790  2FC0               	goto	l943
  5711  0791                     l3714:
  5712  0791  0020               	movlb	0	; select bank0
  5713  0792  0846               	movf	___flmul@temp+1,w
  5714  0793  3A80               	xorlw	128
  5715  0794  00B5               	movwf	??___flmul
  5716  0795  3080               	movlw	128
  5717  0796  0235               	subwf	??___flmul,w
  5718  0797  1D03               	skipz
  5719  0798  2F9B               	goto	u4555
  5720  0799  3001               	movlw	1
  5721  079A  0245               	subwf	___flmul@temp,w
  5722  079B                     u4555:
  5723  079B  1803               	skipnc
  5724  079C  2F9E               	goto	u4551
  5725  079D  2F9F               	goto	u4550
  5726  079E                     u4551:
  5727  079E  2FAA               	goto	l3720
  5728  079F                     u4550:
  5729  079F                     l3716:
  5730  079F  3000               	movlw	0
  5731  07A0  0020               	movlb	0	; select bank0
  5732  07A1  00C4               	movwf	___flmul@prod+3
  5733  07A2  3000               	movlw	0
  5734  07A3  00C3               	movwf	___flmul@prod+2
  5735  07A4  3000               	movlw	0
  5736  07A5  00C2               	movwf	___flmul@prod+1
  5737  07A6  3000               	movlw	0
  5738  07A7  00C1               	movwf	___flmul@prod
  5739  07A8                     l3718:
  5740  07A8  01BA               	clrf	___flmul@sign
  5741  07A9  2FC0               	goto	l943
  5742  07AA                     l3720:
  5743  07AA  0020               	movlb	0	; select bank0
  5744  07AB  0845               	movf	___flmul@temp,w
  5745  07AC  00B5               	movwf	??___flmul
  5746  07AD  0835               	movf	??___flmul,w
  5747  07AE  00C0               	movwf	___flmul@bexp
  5748  07AF  30FF               	movlw	255
  5749  07B0  05C1               	andwf	___flmul@prod,f
  5750  07B1  30FF               	movlw	255
  5751  07B2  05C2               	andwf	___flmul@prod+1,f
  5752  07B3  307F               	movlw	127
  5753  07B4  05C3               	andwf	___flmul@prod+2,f
  5754  07B5  3000               	movlw	0
  5755  07B6  05C4               	andwf	___flmul@prod+3,f
  5756  07B7                     l3722:
  5757  07B7  1C40               	btfss	___flmul@bexp,0
  5758  07B8  2FBA               	goto	u4561
  5759  07B9  2FBB               	goto	u4560
  5760  07BA                     u4561:
  5761  07BA  2FBC               	goto	l3726
  5762  07BB                     u4560:
  5763  07BB                     l3724:
  5764  07BB  17C3               	bsf	___flmul@prod+2,7
  5765  07BC                     l3726:
  5766  07BC  3640               	lsrf	___flmul@bexp,w
  5767  07BD  00B5               	movwf	??___flmul
  5768  07BE  0835               	movf	??___flmul,w
  5769  07BF  00C4               	movwf	___flmul@prod+3
  5770  07C0                     l943:
  5771  07C0  083A               	movf	___flmul@sign,w
  5772  07C1  00B5               	movwf	??___flmul
  5773  07C2  0835               	movf	??___flmul,w
  5774  07C3  04C4               	iorwf	___flmul@prod+3,f
  5775  07C4                     l3728:
  5776  07C4  0844               	movf	___flmul@prod+3,w
  5777  07C5  00B0               	movwf	?___flmul+3
  5778  07C6  0843               	movf	___flmul@prod+2,w
  5779  07C7  00AF               	movwf	?___flmul+2
  5780  07C8  0842               	movf	___flmul@prod+1,w
  5781  07C9  00AE               	movwf	?___flmul+1
  5782  07CA  0841               	movf	___flmul@prod,w
  5783  07CB  00AD               	movwf	?___flmul
  5784  07CC                     l931:
  5785  07CC  0008               	return
  5786  07CD                     __end_of___flmul:
  5787                           
  5788                           	psect	text8
  5789  1FDD                     __ptext8:	
  5790 ;; *************** function __Umul8_16 *****************
  5791 ;; Defined at:
  5792 ;;		line 4 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\Umul8_16.c"
  5793 ;; Parameters:    Size  Location     Type
  5794 ;;  multiplier      1    wreg     unsigned char 
  5795 ;;  multiplicand    1    0[COMMON] unsigned char 
  5796 ;; Auto vars:     Size  Location     Type
  5797 ;;  multiplier      1    8[COMMON] unsigned char 
  5798 ;;  word_mpld       2    6[COMMON] unsigned int 
  5799 ;;  product         2    4[COMMON] unsigned int 
  5800 ;; Return value:  Size  Location     Type
  5801 ;;                  2    0[COMMON] unsigned int 
  5802 ;; Registers used:
  5803 ;;		wreg, status,2, status,0
  5804 ;; Tracked objects:
  5805 ;;		On entry : 0/0
  5806 ;;		On exit  : 0/0
  5807 ;;		Unchanged: 0/0
  5808 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  5809 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5810 ;;      Locals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5811 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5812 ;;      Totals:         9       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5813 ;;Total ram usage:        9 bytes
  5814 ;; Hardware stack levels used: 1
  5815 ;; This function calls:
  5816 ;;		Nothing
  5817 ;; This function is called by:
  5818 ;;		___flmul
  5819 ;; This function uses a non-reentrant model
  5820 ;;
  5821                           
  5822                           
  5823                           ;psect for function __Umul8_16
  5824  1FDD                     __Umul8_16:
  5825                           
  5826                           ;incstack = 0
  5827                           ; Regs used in __Umul8_16: [wreg+status,2+status,0]
  5828                           ;__Umul8_16@multiplier stored from wreg
  5829  1FDD  00F8               	movwf	__Umul8_16@multiplier
  5830  1FDE                     l3336:
  5831  1FDE  01F4               	clrf	__Umul8_16@product
  5832  1FDF  01F5               	clrf	__Umul8_16@product+1
  5833  1FE0                     l3338:
  5834  1FE0  0870               	movf	__Umul8_16@multiplicand,w
  5835  1FE1  00F2               	movwf	??__Umul8_16
  5836  1FE2  01F3               	clrf	??__Umul8_16+1
  5837  1FE3  0872               	movf	??__Umul8_16,w
  5838  1FE4  00F6               	movwf	__Umul8_16@word_mpld
  5839  1FE5  0873               	movf	??__Umul8_16+1,w
  5840  1FE6  00F7               	movwf	__Umul8_16@word_mpld+1
  5841  1FE7                     l3340:
  5842  1FE7  1C78               	btfss	__Umul8_16@multiplier,0
  5843  1FE8  2FEA               	goto	u3961
  5844  1FE9  2FEB               	goto	u3960
  5845  1FEA                     u3961:
  5846  1FEA  2FEF               	goto	l950
  5847  1FEB                     u3960:
  5848  1FEB                     l3342:
  5849  1FEB  0876               	movf	__Umul8_16@word_mpld,w
  5850  1FEC  07F4               	addwf	__Umul8_16@product,f
  5851  1FED  0877               	movf	__Umul8_16@word_mpld+1,w
  5852  1FEE  3DF5               	addwfc	__Umul8_16@product+1,f
  5853  1FEF                     l950:
  5854  1FEF  3001               	movlw	1
  5855  1FF0                     u3975:
  5856  1FF0  35F6               	lslf	__Umul8_16@word_mpld,f
  5857  1FF1  0DF7               	rlf	__Umul8_16@word_mpld+1,f
  5858  1FF2  0B89               	decfsz	9,f
  5859  1FF3  2FF0               	goto	u3975
  5860  1FF4  1003               	clrc
  5861  1FF5  0CF8               	rrf	__Umul8_16@multiplier,f
  5862  1FF6                     l3344:
  5863  1FF6  0878               	movf	__Umul8_16@multiplier,w
  5864  1FF7  1D03               	btfss	3,2
  5865  1FF8  2FFA               	goto	u3981
  5866  1FF9  2FFB               	goto	u3980
  5867  1FFA                     u3981:
  5868  1FFA  2FE7               	goto	l3340
  5869  1FFB                     u3980:
  5870  1FFB                     l3346:
  5871  1FFB  0875               	movf	__Umul8_16@product+1,w
  5872  1FFC  00F1               	movwf	?__Umul8_16+1
  5873  1FFD  0874               	movf	__Umul8_16@product,w
  5874  1FFE  00F0               	movwf	?__Umul8_16
  5875  1FFF                     l952:
  5876  1FFF  0008               	return
  5877  2000                     __end_of__Umul8_16:
  5878                           
  5879                           	psect	text9
  5880  14BD                     __ptext9:	
  5881 ;; *************** function _print_gram *****************
  5882 ;; Defined at:
  5883 ;;		line 47 in file "drink_meter.c"
  5884 ;; Parameters:    Size  Location     Type
  5885 ;;  p               1    wreg     PTR struct .
  5886 ;;		 -> main@drink(8), 
  5887 ;; Auto vars:     Size  Location     Type
  5888 ;;  p               1   53[BANK1 ] PTR struct .
  5889 ;;		 -> main@drink(8), 
  5890 ;;  row2           16   37[BANK1 ] unsigned char [16]
  5891 ;;  row1           16   21[BANK1 ] unsigned char [16]
  5892 ;; Return value:  Size  Location     Type
  5893 ;;                  1    wreg      void 
  5894 ;; Registers used:
  5895 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  5896 ;; Tracked objects:
  5897 ;;		On entry : 0/0
  5898 ;;		On exit  : 0/0
  5899 ;;		Unchanged: 0/0
  5900 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  5901 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5902 ;;      Locals:         0       0      33       0       0       0       0       0       0       0       0       0       
      +0       0
  5903 ;;      Temps:          0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0
  5904 ;;      Totals:         0       0      35       0       0       0       0       0       0       0       0       0       
      +0       0
  5905 ;;Total ram usage:       35 bytes
  5906 ;; Hardware stack levels used: 1
  5907 ;; Hardware stack levels required when called: 8
  5908 ;; This function calls:
  5909 ;;		_lcd_clear
  5910 ;;		_lcd_print_with
  5911 ;;		_print_digit
  5912 ;;		_sprintf
  5913 ;; This function is called by:
  5914 ;;		_main
  5915 ;; This function uses a non-reentrant model
  5916 ;;
  5917                           
  5918                           
  5919                           ;psect for function _print_gram
  5920  14BD                     _print_gram:
  5921                           
  5922                           ;incstack = 0
  5923                           ; Regs used in _print_gram: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  5924                           ;print_gram@p stored from wreg
  5925  14BD  0021               	movlb	1	; select bank1
  5926  14BE  00D5               	movwf	print_gram@p^(0+128)
  5927  14BF                     l3880:
  5928                           
  5929                           ;drink_meter.c: 48:     char row1[16];;drink_meter.c: 49:     char row2[16];;drink_meter
      +                          .c: 51:     sprintf(row1, "%dg / %dml", p->loadcell->gram, p->max_gram);
  5930  14BF  3028               	movlw	low (STR_5| (0+32768))
  5931  14C0  00A5               	movwf	sprintf@fmt^(0+128)
  5932  14C1  30A0               	movlw	high (STR_5| (0+32768))
  5933  14C2  00A6               	movwf	(sprintf@fmt^(0+128)+1)
  5934  14C3  0855               	movf	print_gram@p^(0+128),w
  5935  14C4  0086               	movwf	6
  5936  14C5  3001               	movlw	1	; select bank2/3
  5937  14C6  0087               	movwf	7
  5938  14C7  0801               	movf	1,w
  5939  14C8  3E0A               	addlw	10
  5940  14C9  0086               	movwf	6
  5941  14CA  3001               	movlw	1	; select bank2/3
  5942  14CB  0087               	movwf	7
  5943  14CC  3F40               	moviw [0]fsr1
  5944  14CD  00A7               	movwf	(?_sprintf^(0+128)+2)
  5945  14CE  3F41               	moviw [1]fsr1
  5946  14CF  00A8               	movwf	((?_sprintf+1)^(0+128)+2)
  5947  14D0  0855               	movf	print_gram@p^(0+128),w
  5948  14D1  3E03               	addlw	3
  5949  14D2  0086               	movwf	6
  5950  14D3  3001               	movlw	1	; select bank2/3
  5951  14D4  0087               	movwf	7
  5952  14D5  3F40               	moviw [0]fsr1
  5953  14D6  00A9               	movwf	(?_sprintf^(0+128)+4)
  5954  14D7  3F41               	moviw [1]fsr1
  5955  14D8  00AA               	movwf	((?_sprintf+1)^(0+128)+4)
  5956  14D9  30B5               	movlw	(low (print_gram@row1| 0))& (0+255)
  5957  14DA  3190  2043  3194   	fcall	_sprintf
  5958                           
  5959                           ;drink_meter.c: 52:     sprintf(row2, "%d %%", p->percentage);
  5960  14DD  303B               	movlw	low (STR_6| (0+32768))
  5961  14DE  0021               	movlb	1	; select bank1
  5962  14DF  00A5               	movwf	sprintf@fmt^(0+128)
  5963  14E0  30A0               	movlw	high (STR_6| (0+32768))
  5964  14E1  00A6               	movwf	(sprintf@fmt^(0+128)+1)
  5965  14E2  0855               	movf	print_gram@p^(0+128),w
  5966  14E3  3E07               	addlw	7
  5967  14E4  0086               	movwf	6
  5968  14E5  3001               	movlw	1	; select bank2/3
  5969  14E6  0087               	movwf	7
  5970  14E7  0801               	movf	1,w
  5971  14E8  00B3               	movwf	??_print_gram^(0+128)
  5972  14E9  01B4               	clrf	(??_print_gram^(0+128)+1)
  5973  14EA  0833               	movf	??_print_gram^(0+128),w
  5974  14EB  00A7               	movwf	(?_sprintf^(0+128)+2)
  5975  14EC  0834               	movf	(??_print_gram+1)^(0+128),w
  5976  14ED  00A8               	movwf	((?_sprintf+1)^(0+128)+2)
  5977  14EE  30C5               	movlw	(low (print_gram@row2| 0))& (0+255)
  5978  14EF  3190  2043  3194   	fcall	_sprintf
  5979                           
  5980                           ;drink_meter.c: 54:     lcd_clear(p->lcd);
  5981  14F2  0021               	movlb	1	; select bank1
  5982  14F3  0A55               	incf	print_gram@p^(0+128),w
  5983  14F4  0086               	movwf	6
  5984  14F5  3001               	movlw	1	; select bank2/3
  5985  14F6  0087               	movwf	7
  5986  14F7  0801               	movf	1,w
  5987  14F8  3191  2141  3194   	fcall	_lcd_clear
  5988                           
  5989                           ;drink_meter.c: 56:     lcd_print_with(p->lcd, row1, 0, 0);
  5990  14FB  30B5               	movlw	low print_gram@row1
  5991  14FC  0020               	movlb	0	; select bank0
  5992  14FD  00A6               	movwf	lcd_print_with@str
  5993  14FE  3000               	movlw	high print_gram@row1
  5994  14FF  00A7               	movwf	lcd_print_with@str+1
  5995  1500  01A8               	clrf	lcd_print_with@col
  5996  1501  01A9               	clrf	lcd_print_with@row
  5997  1502  0021               	movlb	1	; select bank1
  5998  1503  0A55               	incf	print_gram@p^(0+128),w
  5999  1504  0086               	movwf	6
  6000  1505  3001               	movlw	1	; select bank2/3
  6001  1506  0087               	movwf	7
  6002  1507  0801               	movf	1,w
  6003  1508  319F  2727  3194   	fcall	_lcd_print_with
  6004                           
  6005                           ;drink_meter.c: 57:     lcd_print_with(p->lcd, row2, 0, 1);
  6006  150B  30C5               	movlw	low print_gram@row2
  6007  150C  0020               	movlb	0	; select bank0
  6008  150D  00A6               	movwf	lcd_print_with@str
  6009  150E  3000               	movlw	high print_gram@row2
  6010  150F  00A7               	movwf	lcd_print_with@str+1
  6011  1510  01A8               	clrf	lcd_print_with@col
  6012  1511  01A9               	clrf	lcd_print_with@row
  6013  1512  0AA9               	incf	lcd_print_with@row,f
  6014  1513  0021               	movlb	1	; select bank1
  6015  1514  0A55               	incf	print_gram@p^(0+128),w
  6016  1515  0086               	movwf	6
  6017  1516  3001               	movlw	1	; select bank2/3
  6018  1517  0087               	movwf	7
  6019  1518  0801               	movf	1,w
  6020  1519  319F  2727  3194   	fcall	_lcd_print_with
  6021  151C                     l3882:
  6022                           
  6023                           ;drink_meter.c: 59:     print_digit(p->tm1637, p->percentage);
  6024  151C  0021               	movlb	1	; select bank1
  6025  151D  0855               	movf	print_gram@p^(0+128),w
  6026  151E  0086               	movwf	6
  6027  151F  3001               	movlw	1	; select bank2/3
  6028  1520  0087               	movwf	7
  6029  1521  3001               	movlw	1	; select bank2/3
  6030  1522  3F47               	moviw [7]fsr1
  6031  1523  00FD               	movwf	print_digit@number
  6032  1524  0855               	movf	print_gram@p^(0+128),w
  6033  1525  3E02               	addlw	2
  6034  1526  0086               	movwf	6
  6035  1527  3001               	movlw	1	; select bank2/3
  6036  1528  0087               	movwf	7
  6037  1529  0801               	movf	1,w
  6038  152A  3189  21E0  3194   	fcall	_print_digit
  6039  152D                     l381:
  6040  152D  0008               	return
  6041  152E                     __end_of_print_gram:
  6042                           
  6043                           	psect	text10
  6044  161B                     __ptext10:	
  6045 ;; *************** function _initialize *****************
  6046 ;; Defined at:
  6047 ;;		line 5 in file "drink_meter.c"
  6048 ;; Parameters:    Size  Location     Type
  6049 ;;  p               1    wreg     PTR struct .
  6050 ;;		 -> main@drink(8), 
  6051 ;; Auto vars:     Size  Location     Type
  6052 ;;  p               1   36[BANK1 ] PTR struct .
  6053 ;;		 -> main@drink(8), 
  6054 ;;  valstr         16   20[BANK1 ] unsigned char [16]
  6055 ;; Return value:  Size  Location     Type
  6056 ;;                  1    wreg      void 
  6057 ;; Registers used:
  6058 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  6059 ;; Tracked objects:
  6060 ;;		On entry : 0/0
  6061 ;;		On exit  : 0/0
  6062 ;;		Unchanged: 0/0
  6063 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  6064 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6065 ;;      Locals:         0       0      17       0       0       0       0       0       0       0       0       0       
      +0       0
  6066 ;;      Temps:          0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0
  6067 ;;      Totals:         0       0      18       0       0       0       0       0       0       0       0       0       
      +0       0
  6068 ;;Total ram usage:       18 bytes
  6069 ;; Hardware stack levels used: 1
  6070 ;; Hardware stack levels required when called: 8
  6071 ;; This function calls:
  6072 ;;		_get_scale_val
  6073 ;;		_initialize_digit
  6074 ;;		_lcd_backlight
  6075 ;;		_lcd_clear
  6076 ;;		_lcd_init
  6077 ;;		_lcd_print
  6078 ;;		_lcd_print_with
  6079 ;;		_print_digit
  6080 ;;		_sprintf
  6081 ;; This function is called by:
  6082 ;;		_main
  6083 ;; This function uses a non-reentrant model
  6084 ;;
  6085                           
  6086                           
  6087                           ;psect for function _initialize
  6088  161B                     _initialize:
  6089                           
  6090                           ;incstack = 0
  6091                           ; Regs used in _initialize: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  6092                           ;initialize@p stored from wreg
  6093  161B  0021               	movlb	1	; select bank1
  6094  161C  00C4               	movwf	initialize@p^(0+128)
  6095  161D                     l3868:
  6096                           
  6097                           ;drink_meter.c: 6:     lcd_init(p->lcd);
  6098  161D  0A44               	incf	initialize@p^(0+128),w
  6099  161E  0086               	movwf	6
  6100  161F  3001               	movlw	1	; select bank2/3
  6101  1620  0087               	movwf	7
  6102  1621  0801               	movf	1,w
  6103  1622  3197  2757  3196   	fcall	_lcd_init
  6104                           
  6105                           ;drink_meter.c: 7:     lcd_backlight(p->lcd);
  6106  1625  0021               	movlb	1	; select bank1
  6107  1626  0A44               	incf	initialize@p^(0+128),w
  6108  1627  0086               	movwf	6
  6109  1628  3001               	movlw	1	; select bank2/3
  6110  1629  0087               	movwf	7
  6111  162A  0801               	movf	1,w
  6112  162B  319E  26F8  3196   	fcall	_lcd_backlight
  6113  162E                     l3870:
  6114                           
  6115                           ;drink_meter.c: 9:     lcd_print_with(p->lcd, "Initialize", 0, 0);
  6116  162E  301D               	movlw	low (STR_2| (0+32768))
  6117  162F  0020               	movlb	0	; select bank0
  6118  1630  00A6               	movwf	lcd_print_with@str
  6119  1631  30A0               	movlw	high (STR_2| (0+32768))
  6120  1632  00A7               	movwf	lcd_print_with@str+1
  6121  1633  01A8               	clrf	lcd_print_with@col
  6122  1634  01A9               	clrf	lcd_print_with@row
  6123  1635  0021               	movlb	1	; select bank1
  6124  1636  0A44               	incf	initialize@p^(0+128),w
  6125  1637  0086               	movwf	6
  6126  1638  3001               	movlw	1	; select bank2/3
  6127  1639  0087               	movwf	7
  6128  163A  0801               	movf	1,w
  6129  163B  319F  2727  3196   	fcall	_lcd_print_with
  6130  163E                     l3872:
  6131                           
  6132                           ;drink_meter.c: 10:     lcd_print_with(p->lcd, "Load cell Unit", 0, 1);
  6133  163E  3000               	movlw	low (STR_3| (0+32768))
  6134  163F  0020               	movlb	0	; select bank0
  6135  1640  00A6               	movwf	lcd_print_with@str
  6136  1641  30A0               	movlw	high (STR_3| (0+32768))
  6137  1642  00A7               	movwf	lcd_print_with@str+1
  6138  1643  01A8               	clrf	lcd_print_with@col
  6139  1644  01A9               	clrf	lcd_print_with@row
  6140  1645  0AA9               	incf	lcd_print_with@row,f
  6141  1646  0021               	movlb	1	; select bank1
  6142  1647  0A44               	incf	initialize@p^(0+128),w
  6143  1648  0086               	movwf	6
  6144  1649  3001               	movlw	1	; select bank2/3
  6145  164A  0087               	movwf	7
  6146  164B  0801               	movf	1,w
  6147  164C  319F  2727  3196   	fcall	_lcd_print_with
  6148                           
  6149                           ;drink_meter.c: 12:     initialize_digit(p->tm1637);
  6150  164F  0021               	movlb	1	; select bank1
  6151  1650  0844               	movf	initialize@p^(0+128),w
  6152  1651  3E02               	addlw	2
  6153  1652  0086               	movwf	6
  6154  1653  3001               	movlw	1	; select bank2/3
  6155  1654  0087               	movwf	7
  6156  1655  0801               	movf	1,w
  6157  1656  319E  26D1  3196   	fcall	_initialize_digit
  6158                           
  6159                           ;drink_meter.c: 13:     print_digit(p->tm1637, 0);
  6160  1659  01FD               	clrf	print_digit@number
  6161  165A  0021               	movlb	1	; select bank1
  6162  165B  0844               	movf	initialize@p^(0+128),w
  6163  165C  3E02               	addlw	2
  6164  165D  0086               	movwf	6
  6165  165E  3001               	movlw	1	; select bank2/3
  6166  165F  0087               	movwf	7
  6167  1660  0801               	movf	1,w
  6168  1661  3189  21E0  3196   	fcall	_print_digit
  6169                           
  6170                           ;drink_meter.c: 16:     p->loadcell->weight_zero = get_scale_val(p->loadcell, 50);
  6171  1664  3032               	movlw	50
  6172  1665  0021               	movlb	1	; select bank1
  6173  1666  00B3               	movwf	??_initialize^(0+128)
  6174  1667  0833               	movf	??_initialize^(0+128),w
  6175  1668  0020               	movlb	0	; select bank0
  6176  1669  00A0               	movwf	get_scale_val@scale_avg_count
  6177  166A  0021               	movlb	1	; select bank1
  6178  166B  0844               	movf	initialize@p^(0+128),w
  6179  166C  0086               	movwf	6
  6180  166D  3001               	movlw	1	; select bank2/3
  6181  166E  0087               	movwf	7
  6182  166F  0801               	movf	1,w
  6183  1670  318B  2361  3196   	fcall	_get_scale_val
  6184  1673  0021               	movlb	1	; select bank1
  6185  1674  0844               	movf	initialize@p^(0+128),w
  6186  1675  0086               	movwf	6
  6187  1676  3001               	movlw	1	; select bank2/3
  6188  1677  0087               	movwf	7
  6189  1678  0801               	movf	1,w
  6190  1679  3E02               	addlw	2
  6191  167A  0086               	movwf	6
  6192  167B  3001               	movlw	1	; select bank2/3
  6193  167C  0087               	movwf	7
  6194  167D  0020               	movlb	0	; select bank0
  6195  167E  0820               	movf	?_get_scale_val,w
  6196  167F  3FC0               	movwi [0]fsr1
  6197  1680  0821               	movf	?_get_scale_val+1,w
  6198  1681  3FC1               	movwi [1]fsr1
  6199  1682  0822               	movf	?_get_scale_val+2,w
  6200  1683  3FC2               	movwi [2]fsr1
  6201  1684  0823               	movf	?_get_scale_val+3,w
  6202  1685  3FC3               	movwi [3]fsr1
  6203  1686                     l3874:
  6204                           
  6205                           ;drink_meter.c: 18:     char valstr[16];;drink_meter.c: 19:     sprintf(valstr, "%lu val
      +                          ", p->loadcell->weight_dat);
  6206  1686  3033               	movlw	low (STR_4| (0+32768))
  6207  1687  0021               	movlb	1	; select bank1
  6208  1688  00A5               	movwf	sprintf@fmt^(0+128)
  6209  1689  30A0               	movlw	high (STR_4| (0+32768))
  6210  168A  00A6               	movwf	(sprintf@fmt^(0+128)+1)
  6211  168B  0844               	movf	initialize@p^(0+128),w
  6212  168C  0086               	movwf	6
  6213  168D  3001               	movlw	1	; select bank2/3
  6214  168E  0087               	movwf	7
  6215  168F  0801               	movf	1,w
  6216  1690  3E06               	addlw	6
  6217  1691  0086               	movwf	6
  6218  1692  3001               	movlw	1	; select bank2/3
  6219  1693  0087               	movwf	7
  6220  1694  3F40               	moviw [0]fsr1
  6221  1695  00A7               	movwf	(?_sprintf^(0+128)+2)
  6222  1696  3F41               	moviw [1]fsr1
  6223  1697  00A8               	movwf	((?_sprintf+1)^(0+128)+2)
  6224  1698  3F42               	moviw [2]fsr1
  6225  1699  00A9               	movwf	((?_sprintf+2)^(0+128)+2)
  6226  169A  3F43               	moviw [3]fsr1
  6227  169B  00AA               	movwf	((?_sprintf+3)^(0+128)+2)
  6228  169C  30B4               	movlw	(low (initialize@valstr| 0))& (0+255)
  6229  169D  3190  2043  3196   	fcall	_sprintf
  6230  16A0                     l3876:
  6231                           
  6232                           ;drink_meter.c: 21:     lcd_clear(p->lcd);
  6233  16A0  0021               	movlb	1	; select bank1
  6234  16A1  0A44               	incf	initialize@p^(0+128),w
  6235  16A2  0086               	movwf	6
  6236  16A3  3001               	movlw	1	; select bank2/3
  6237  16A4  0087               	movwf	7
  6238  16A5  0801               	movf	1,w
  6239  16A6  3191  2141  3196   	fcall	_lcd_clear
  6240  16A9                     l3878:
  6241                           
  6242                           ;drink_meter.c: 22:     lcd_print(p->lcd, valstr);
  6243  16A9  30B4               	movlw	low initialize@valstr
  6244  16AA  00FA               	movwf	lcd_print@str
  6245  16AB  3000               	movlw	high initialize@valstr
  6246  16AC  00FB               	movwf	lcd_print@str+1
  6247  16AD  0021               	movlb	1	; select bank1
  6248  16AE  0A44               	incf	initialize@p^(0+128),w
  6249  16AF  0086               	movwf	6
  6250  16B0  3001               	movlw	1	; select bank2/3
  6251  16B1  0087               	movwf	7
  6252  16B2  0801               	movf	1,w
  6253  16B3  3190  201F  3196   	fcall	_lcd_print
  6254  16B6                     l373:
  6255  16B6  0008               	return
  6256  16B7                     __end_of_initialize:
  6257                           
  6258                           	psect	text11
  6259  1043                     __ptext11:	
  6260 ;; *************** function _sprintf *****************
  6261 ;; Defined at:
  6262 ;;		line 9 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\nf_sprintf.c"
  6263 ;; Parameters:    Size  Location     Type
  6264 ;;  s               1    wreg     PTR unsigned char 
  6265 ;;		 -> set_max_gram@valstr(16), print_gram@row2(16), print_gram@row1(16), initialize@valstr(16), 
  6266 ;;  fmt             2    5[BANK1 ] PTR const unsigned char 
  6267 ;;		 -> STR_7(14), STR_6(6), STR_5(11), STR_4(8), 
  6268 ;; Auto vars:     Size  Location     Type
  6269 ;;  s               1   13[BANK1 ] PTR unsigned char 
  6270 ;;		 -> set_max_gram@valstr(16), print_gram@row2(16), print_gram@row1(16), initialize@valstr(16), 
  6271 ;;  f               5   14[BANK1 ] struct _IO_FILE
  6272 ;;  ret             2    0        int 
  6273 ;;  ap              1   12[BANK1 ] PTR void [1]
  6274 ;;		 -> ?_sprintf(2), 
  6275 ;; Return value:  Size  Location     Type
  6276 ;;                  2    5[BANK1 ] int 
  6277 ;; Registers used:
  6278 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  6279 ;; Tracked objects:
  6280 ;;		On entry : 0/0
  6281 ;;		On exit  : 0/0
  6282 ;;		Unchanged: 0/0
  6283 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  6284 ;;      Params:         0       0       6       0       0       0       0       0       0       0       0       0       
      +0       0
  6285 ;;      Locals:         0       0       7       0       0       0       0       0       0       0       0       0       
      +0       0
  6286 ;;      Temps:          0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0
  6287 ;;      Totals:         0       0      14       0       0       0       0       0       0       0       0       0       
      +0       0
  6288 ;;Total ram usage:       14 bytes
  6289 ;; Hardware stack levels used: 1
  6290 ;; Hardware stack levels required when called: 7
  6291 ;; This function calls:
  6292 ;;		_vfprintf
  6293 ;; This function is called by:
  6294 ;;		_initialize
  6295 ;;		_print_gram
  6296 ;;		_set_max_gram
  6297 ;; This function uses a non-reentrant model
  6298 ;;
  6299                           
  6300                           
  6301                           ;psect for function _sprintf
  6302  1043                     _sprintf:
  6303                           
  6304                           ;incstack = 0
  6305                           ; Regs used in _sprintf: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  6306                           ;sprintf@s stored from wreg
  6307  1043  0021               	movlb	1	; select bank1
  6308  1044  00AD               	movwf	sprintf@s^(0+128)
  6309  1045                     l3854:
  6310  1045  30A7               	movlw	(low ((?_sprintf| 0+2)))& (0+255)
  6311  1046  00AB               	movwf	??_sprintf^(0+128)
  6312  1047  082B               	movf	??_sprintf^(0+128),w
  6313  1048  00AC               	movwf	sprintf@ap^(0+128)
  6314  1049  082D               	movf	sprintf@s^(0+128),w
  6315  104A  00AB               	movwf	??_sprintf^(0+128)
  6316  104B  082B               	movf	??_sprintf^(0+128),w
  6317  104C  00AE               	movwf	sprintf@f^(0+128)
  6318  104D                     l3856:
  6319  104D  01AF               	clrf	(sprintf@f^(0+128)+1)
  6320  104E  01B0               	clrf	((sprintf@f+1)^(0+128)+1)
  6321  104F                     l3858:
  6322  104F  01B1               	clrf	(sprintf@f^(0+128)+3)
  6323  1050  01B2               	clrf	((sprintf@f+1)^(0+128)+3)
  6324  1051                     l3860:
  6325  1051  0826               	movf	(sprintf@fmt+1)^(0+128),w
  6326  1052  0020               	movlb	0	; select bank0
  6327  1053  00EE               	movwf	vfprintf@fmt+1
  6328  1054  0021               	movlb	1	; select bank1
  6329  1055  0825               	movf	sprintf@fmt^(0+128),w
  6330  1056  0020               	movlb	0	; select bank0
  6331  1057  00ED               	movwf	vfprintf@fmt
  6332  1058  30AC               	movlw	(low (sprintf@ap| 0))& (0+255)
  6333  1059  0021               	movlb	1	; select bank1
  6334  105A  00AB               	movwf	??_sprintf^(0+128)
  6335  105B  082B               	movf	??_sprintf^(0+128),w
  6336  105C  0020               	movlb	0	; select bank0
  6337  105D  00EF               	movwf	vfprintf@ap
  6338  105E  30AE               	movlw	(low (sprintf@f| 0))& (0+255)
  6339  105F  3190  2094  3190   	fcall	_vfprintf
  6340  1062                     l3862:
  6341  1062  0021               	movlb	1	; select bank1
  6342  1063  082F               	movf	(sprintf@f^(0+128)+1),w
  6343  1064  072D               	addwf	sprintf@s^(0+128),w
  6344  1065  00AB               	movwf	??_sprintf^(0+128)
  6345  1066  082B               	movf	??_sprintf^(0+128),w
  6346  1067  0086               	movwf	6
  6347  1068  0187               	clrf	7
  6348  1069  0181               	clrf	1
  6349  106A                     l997:
  6350  106A  0008               	return
  6351  106B                     __end_of_sprintf:
  6352                           
  6353                           	psect	text12
  6354  1094                     __ptext12:	
  6355 ;; *************** function _vfprintf *****************
  6356 ;; Defined at:
  6357 ;;		line 1390 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c"
  6358 ;; Parameters:    Size  Location     Type
  6359 ;;  fp              1    wreg     PTR struct _IO_FILE
  6360 ;;		 -> sprintf@f(5), 
  6361 ;;  fmt             2   77[BANK0 ] PTR const unsigned char 
  6362 ;;		 -> STR_7(14), STR_6(6), STR_5(11), STR_4(8), 
  6363 ;;  ap              1   79[BANK0 ] PTR PTR void 
  6364 ;;		 -> sprintf@ap(1), 
  6365 ;; Auto vars:     Size  Location     Type
  6366 ;;  fp              1    2[BANK1 ] PTR struct _IO_FILE
  6367 ;;		 -> sprintf@f(5), 
  6368 ;;  cfmt            2    3[BANK1 ] PTR unsigned char 
  6369 ;;		 -> STR_7(14), STR_6(6), STR_5(11), STR_4(8), 
  6370 ;; Return value:  Size  Location     Type
  6371 ;;                  2   77[BANK0 ] int 
  6372 ;; Registers used:
  6373 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  6374 ;; Tracked objects:
  6375 ;;		On entry : 0/0
  6376 ;;		On exit  : 0/0
  6377 ;;		Unchanged: 0/0
  6378 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  6379 ;;      Params:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6380 ;;      Locals:         0       0       3       0       0       0       0       0       0       0       0       0       
      +0       0
  6381 ;;      Temps:          0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0
  6382 ;;      Totals:         0       3       5       0       0       0       0       0       0       0       0       0       
      +0       0
  6383 ;;Total ram usage:        8 bytes
  6384 ;; Hardware stack levels used: 1
  6385 ;; Hardware stack levels required when called: 6
  6386 ;; This function calls:
  6387 ;;		_vfpfcnvrt
  6388 ;; This function is called by:
  6389 ;;		_sprintf
  6390 ;; This function uses a non-reentrant model
  6391 ;;
  6392                           
  6393                           
  6394                           ;psect for function _vfprintf
  6395  1094                     _vfprintf:
  6396                           
  6397                           ;incstack = 0
  6398                           ; Regs used in _vfprintf: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  6399                           ;vfprintf@fp stored from wreg
  6400  1094  0021               	movlb	1	; select bank1
  6401  1095  00A2               	movwf	vfprintf@fp^(0+128)
  6402  1096                     l3732:
  6403                           
  6404                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 1390: int vfprint
      +                          f(FILE *fp, const char *fmt, va_list ap);C:\Program Files\Microchip\xc8\v2.32\pic\source
      +                          s\c99\common\doprnt.c: 1391: {;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\comm
      +                          on\doprnt.c: 1393:     char *cfmt;;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\
      +                          common\doprnt.c: 1395:     cfmt = (char *)fmt;
  6405  1096  0020               	movlb	0	; select bank0
  6406  1097  086E               	movf	vfprintf@fmt+1,w
  6407  1098  0021               	movlb	1	; select bank1
  6408  1099  00A4               	movwf	(vfprintf@cfmt+1)^(0+128)
  6409  109A  0020               	movlb	0	; select bank0
  6410  109B  086D               	movf	vfprintf@fmt,w
  6411  109C  0021               	movlb	1	; select bank1
  6412  109D  00A3               	movwf	vfprintf@cfmt^(0+128)
  6413  109E                     l3734:
  6414                           
  6415                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 1396:     nout = 
      +                          0;
  6416  109E  01DC               	clrf	_nout^(0+128)
  6417  109F  01DD               	clrf	(_nout+1)^(0+128)
  6418                           
  6419                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 1397:     while (
      +                          *cfmt) {
  6420  10A0  28B9               	goto	l3738
  6421  10A1                     l3736:
  6422                           
  6423                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 1398:         nou
      +                          t += vfpfcnvrt(fp, &cfmt, ap);
  6424  10A1  30A3               	movlw	(low (vfprintf@cfmt| 0))& (0+255)
  6425  10A2  00A0               	movwf	??_vfprintf^(0+128)
  6426  10A3  0820               	movf	??_vfprintf^(0+128),w
  6427  10A4  0020               	movlb	0	; select bank0
  6428  10A5  00CE               	movwf	vfpfcnvrt@fmt
  6429  10A6  086F               	movf	vfprintf@ap,w
  6430  10A7  0021               	movlb	1	; select bank1
  6431  10A8  00A1               	movwf	(??_vfprintf+1)^(0+128)
  6432  10A9  0821               	movf	(??_vfprintf+1)^(0+128),w
  6433  10AA  0020               	movlb	0	; select bank0
  6434  10AB  00CF               	movwf	vfpfcnvrt@ap
  6435  10AC  0021               	movlb	1	; select bank1
  6436  10AD  0822               	movf	vfprintf@fp^(0+128),w
  6437  10AE  3183  237A  3190   	fcall	_vfpfcnvrt
  6438  10B1  0020               	movlb	0	; select bank0
  6439  10B2  084E               	movf	?_vfpfcnvrt,w
  6440  10B3  0021               	movlb	1	; select bank1
  6441  10B4  07DC               	addwf	_nout^(0+128),f
  6442  10B5  0020               	movlb	0	; select bank0
  6443  10B6  084F               	movf	?_vfpfcnvrt+1,w
  6444  10B7  0021               	movlb	1	; select bank1
  6445  10B8  3DDD               	addwfc	(_nout+1)^(0+128),f
  6446  10B9                     l3738:
  6447                           
  6448                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 1397:     while (
      +                          *cfmt) {
  6449  10B9  0823               	movf	vfprintf@cfmt^(0+128),w
  6450  10BA  0084               	movwf	4
  6451  10BB  0824               	movf	(vfprintf@cfmt+1)^(0+128),w
  6452  10BC  0085               	movwf	5
  6453  10BD  0012               	moviw fsr0++
  6454  10BE  1D03               	btfss	3,2
  6455  10BF  28C1               	goto	u4571
  6456  10C0  28C2               	goto	u4570
  6457  10C1                     u4571:
  6458  10C1  28A1               	goto	l3736
  6459  10C2                     u4570:
  6460  10C2                     l3740:
  6461                           
  6462                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 1400:     return 
      +                          nout;
  6463  10C2  085D               	movf	(_nout+1)^(0+128),w
  6464  10C3  0020               	movlb	0	; select bank0
  6465  10C4  00EE               	movwf	?_vfprintf+1
  6466  10C5  0021               	movlb	1	; select bank1
  6467  10C6  085C               	movf	_nout^(0+128),w
  6468  10C7  0020               	movlb	0	; select bank0
  6469  10C8  00ED               	movwf	?_vfprintf
  6470  10C9                     l1091:
  6471  10C9  0008               	return
  6472  10CA                     __end_of_vfprintf:
  6473                           
  6474                           	psect	text13
  6475  037A                     __ptext13:	
  6476 ;; *************** function _vfpfcnvrt *****************
  6477 ;; Defined at:
  6478 ;;		line 692 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c"
  6479 ;; Parameters:    Size  Location     Type
  6480 ;;  fp              1    wreg     PTR struct _IO_FILE
  6481 ;;		 -> sprintf@f(5), 
  6482 ;;  fmt             1   46[BANK0 ] PTR PTR unsigned char 
  6483 ;;		 -> vfprintf@cfmt(2), 
  6484 ;;  ap              1   47[BANK0 ] PTR PTR void 
  6485 ;;		 -> sprintf@ap(1), 
  6486 ;; Auto vars:     Size  Location     Type
  6487 ;;  fp              1   76[BANK0 ] PTR struct _IO_FILE
  6488 ;;		 -> sprintf@f(5), 
  6489 ;;  llu             8   68[BANK0 ] unsigned long long 
  6490 ;;  ll              8   60[BANK0 ] long long 
  6491 ;;  f               4    0        long long 
  6492 ;;  ct              3    0        unsigned char [3]
  6493 ;;  vp              2    0        PTR void 
  6494 ;;  i               2    0        int 
  6495 ;;  done            2    0        int 
  6496 ;;  cp              2    0        PTR unsigned char 
  6497 ;;  c               1    0        unsigned char 
  6498 ;; Return value:  Size  Location     Type
  6499 ;;                  2   46[BANK0 ] int 
  6500 ;; Registers used:
  6501 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  6502 ;; Tracked objects:
  6503 ;;		On entry : 0/0
  6504 ;;		On exit  : 0/0
  6505 ;;		Unchanged: 0/0
  6506 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  6507 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6508 ;;      Locals:         0      17       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6509 ;;      Temps:          0      12       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6510 ;;      Totals:         0      31       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6511 ;;Total ram usage:       31 bytes
  6512 ;; Hardware stack levels used: 1
  6513 ;; Hardware stack levels required when called: 5
  6514 ;; This function calls:
  6515 ;;		_dtoa
  6516 ;;		_fputc
  6517 ;;		_strncmp
  6518 ;;		_utoa
  6519 ;; This function is called by:
  6520 ;;		_vfprintf
  6521 ;; This function uses a non-reentrant model
  6522 ;;
  6523                           
  6524                           
  6525                           ;psect for function _vfpfcnvrt
  6526  037A                     _vfpfcnvrt:
  6527                           
  6528                           ;incstack = 0
  6529                           ; Regs used in _vfpfcnvrt: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  6530                           ;vfpfcnvrt@fp stored from wreg
  6531  037A  0020               	movlb	0	; select bank0
  6532  037B  00EC               	movwf	vfpfcnvrt@fp
  6533  037C                     l3394:
  6534                           
  6535                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 692: static int v
      +                          fpfcnvrt(FILE *fp, char *fmt[], va_list ap);C:\Program Files\Microchip\xc8\v2.32\pic\sou
      +                          rces\c99\common\doprnt.c: 693: {;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\co
      +                          mmon\doprnt.c: 694:     char c, *cp, ct[3];;C:\Program Files\Microchip\xc8\v2.32\pic\sou
      +                          rces\c99\common\doprnt.c: 695:     int done, i;;C:\Program Files\Microchip\xc8\v2.32\pic
      +                          \sources\c99\common\doprnt.c: 696:     long long ll;;C:\Program Files\Microchip\xc8\v2.3
      +                          2\pic\sources\c99\common\doprnt.c: 697:     unsigned long long llu;
  6536  037C  084E               	movf	vfpfcnvrt@fmt,w
  6537  037D  0086               	movwf	6
  6538  037E  0187               	clrf	7
  6539  037F  3F40               	moviw [0]fsr1
  6540  0380  00D0               	movwf	??_vfpfcnvrt
  6541  0381  3F41               	moviw [1]fsr1
  6542  0382  00D1               	movwf	??_vfpfcnvrt+1
  6543  0383  0850               	movf	??_vfpfcnvrt,w
  6544  0384  0084               	movwf	4
  6545  0385  0851               	movf	??_vfpfcnvrt+1,w
  6546  0386  0085               	movwf	5
  6547  0387  0012               	moviw fsr0++
  6548  0388  3A25               	xorlw	37
  6549  0389  1D03               	btfss	3,2
  6550  038A  2B8C               	goto	u4131
  6551  038B  2B8D               	goto	u4130
  6552  038C                     u4131:
  6553  038C  2D52               	goto	l3462
  6554  038D                     u4130:
  6555  038D                     l3396:
  6556                           
  6557                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 703:         ++*f
      +                          mt;
  6558  038D  084E               	movf	vfpfcnvrt@fmt,w
  6559  038E  0086               	movwf	6
  6560  038F  0187               	clrf	7
  6561  0390  3001               	movlw	1
  6562  0391  0781               	addwf	1,f
  6563  0392  3141               	addfsr 1,1
  6564  0393  1803               	skipnc
  6565  0394  0A81               	incf	1,f
  6566  0395                     l3398:
  6567                           
  6568                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 705:         flag
      +                          s = width = 0;
  6569  0395  0021               	movlb	1	; select bank1
  6570  0396  01DE               	clrf	_width^(0+128)
  6571  0397  01DF               	clrf	(_width+1)^(0+128)
  6572  0398  01E2               	clrf	_flags^(0+128)
  6573  0399  01E3               	clrf	(_flags+1)^(0+128)
  6574  039A                     l3400:
  6575                           
  6576                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 706:         prec
      +                           = -1;
  6577  039A  30FF               	movlw	255
  6578  039B  00E0               	movwf	_prec^(0+128)
  6579  039C  30FF               	movlw	255
  6580  039D  00E1               	movwf	(_prec^(0+128)+1)
  6581  039E                     l3402:
  6582                           
  6583                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 847:         if (
      +                          (*fmt[0] == 'd') || (*fmt[0] == 'i')) {
  6584  039E  0020               	movlb	0	; select bank0
  6585  039F  084E               	movf	vfpfcnvrt@fmt,w
  6586  03A0  0086               	movwf	6
  6587  03A1  0187               	clrf	7
  6588  03A2  3F40               	moviw [0]fsr1
  6589  03A3  00D0               	movwf	??_vfpfcnvrt
  6590  03A4  3F41               	moviw [1]fsr1
  6591  03A5  00D1               	movwf	??_vfpfcnvrt+1
  6592  03A6  0850               	movf	??_vfpfcnvrt,w
  6593  03A7  0084               	movwf	4
  6594  03A8  0851               	movf	??_vfpfcnvrt+1,w
  6595  03A9  0085               	movwf	5
  6596  03AA  0012               	moviw fsr0++
  6597  03AB  3A64               	xorlw	100
  6598  03AC  1903               	btfsc	3,2
  6599  03AD  2BAF               	goto	u4141
  6600  03AE  2BB0               	goto	u4140
  6601  03AF                     u4141:
  6602  03AF  2BC1               	goto	l3406
  6603  03B0                     u4140:
  6604  03B0                     l3404:
  6605  03B0  084E               	movf	vfpfcnvrt@fmt,w
  6606  03B1  0086               	movwf	6
  6607  03B2  0187               	clrf	7
  6608  03B3  3F40               	moviw [0]fsr1
  6609  03B4  00D0               	movwf	??_vfpfcnvrt
  6610  03B5  3F41               	moviw [1]fsr1
  6611  03B6  00D1               	movwf	??_vfpfcnvrt+1
  6612  03B7  0850               	movf	??_vfpfcnvrt,w
  6613  03B8  0084               	movwf	4
  6614  03B9  0851               	movf	??_vfpfcnvrt+1,w
  6615  03BA  0085               	movwf	5
  6616  03BB  0012               	moviw fsr0++
  6617  03BC  3A69               	xorlw	105
  6618  03BD  1D03               	btfss	3,2
  6619  03BE  2BC0               	goto	u4151
  6620  03BF  2BC1               	goto	u4150
  6621  03C0                     u4151:
  6622  03C0  2BFC               	goto	l3414
  6623  03C1                     u4150:
  6624  03C1                     l3406:
  6625                           
  6626                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 849:             
      +                          ++*fmt;
  6627  03C1  084E               	movf	vfpfcnvrt@fmt,w
  6628  03C2  0086               	movwf	6
  6629  03C3  0187               	clrf	7
  6630  03C4  3001               	movlw	1
  6631  03C5  0781               	addwf	1,f
  6632  03C6  3141               	addfsr 1,1
  6633  03C7  1803               	skipnc
  6634  03C8  0A81               	incf	1,f
  6635  03C9                     l3408:
  6636                           
  6637                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 850:             
      +                          ll = (long long)(*(int *)__va_arg(*(int **)ap, (int)0));
  6638  03C9  084F               	movf	vfpfcnvrt@ap,w
  6639  03CA  0086               	movwf	6
  6640  03CB  0187               	clrf	7
  6641  03CC  0801               	movf	1,w
  6642  03CD  0084               	movwf	4
  6643  03CE  0185               	clrf	5
  6644  03CF  3002               	movlw	2
  6645  03D0  0781               	addwf	1,f
  6646  03D1  3F00               	moviw [0]fsr0
  6647  03D2  00D0               	movwf	??_vfpfcnvrt
  6648  03D3  3F01               	moviw [1]fsr0
  6649  03D4  00D1               	movwf	??_vfpfcnvrt+1
  6650  03D5  0850               	movf	??_vfpfcnvrt,w
  6651  03D6  00DC               	movwf	vfpfcnvrt@ll
  6652  03D7  0851               	movf	??_vfpfcnvrt+1,w
  6653  03D8  00DD               	movwf	vfpfcnvrt@ll+1
  6654  03D9  0D89               	rlf	9,f
  6655  03DA  3B89               	subwfb	9,f
  6656  03DB  0989               	comf	9,f
  6657  03DC  00DE               	movwf	vfpfcnvrt@ll+2
  6658  03DD  00DF               	movwf	vfpfcnvrt@ll+3
  6659  03DE  00E0               	movwf	vfpfcnvrt@ll+4
  6660  03DF  00E1               	movwf	vfpfcnvrt@ll+5
  6661  03E0  00E2               	movwf	vfpfcnvrt@ll+6
  6662  03E1  00E3               	movwf	vfpfcnvrt@ll+7
  6663  03E2                     l3410:
  6664                           
  6665                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 852:             
      +                          return dtoa(fp, ll);
  6666  03E2  085C               	movf	vfpfcnvrt@ll,w
  6667  03E3  00B0               	movwf	dtoa@d
  6668  03E4  085D               	movf	vfpfcnvrt@ll+1,w
  6669  03E5  00B1               	movwf	dtoa@d+1
  6670  03E6  085E               	movf	vfpfcnvrt@ll+2,w
  6671  03E7  00B2               	movwf	dtoa@d+2
  6672  03E8  085F               	movf	vfpfcnvrt@ll+3,w
  6673  03E9  00B3               	movwf	dtoa@d+3
  6674  03EA  0860               	movf	vfpfcnvrt@ll+4,w
  6675  03EB  00B4               	movwf	dtoa@d+4
  6676  03EC  0861               	movf	vfpfcnvrt@ll+5,w
  6677  03ED  00B5               	movwf	dtoa@d+5
  6678  03EE  0862               	movf	vfpfcnvrt@ll+6,w
  6679  03EF  00B6               	movwf	dtoa@d+6
  6680  03F0  0863               	movf	vfpfcnvrt@ll+7,w
  6681  03F1  00B7               	movwf	dtoa@d+7
  6682  03F2  086C               	movf	vfpfcnvrt@fp,w
  6683  03F3  3180  2056  3183   	fcall	_dtoa
  6684  03F6  0020               	movlb	0	; select bank0
  6685  03F7  0831               	movf	?_dtoa+1,w
  6686  03F8  00CF               	movwf	?_vfpfcnvrt+1
  6687  03F9  0830               	movf	?_dtoa,w
  6688  03FA  00CE               	movwf	?_vfpfcnvrt
  6689  03FB  2D75               	goto	l1079
  6690  03FC                     l3414:
  6691                           
  6692                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 857:         if (
      +                          !strncmp(*fmt, "ld", ((sizeof("ld")/sizeof("ld"[0]))-1)) || !strncmp(*fmt, "li", ((sizeo
      +                          f("li")/sizeof("li"[0]))-1))) {
  6693  03FC  084E               	movf	vfpfcnvrt@fmt,w
  6694  03FD  0086               	movwf	6
  6695  03FE  0187               	clrf	7
  6696  03FF  3F40               	moviw [0]fsr1
  6697  0400  00F0               	movwf	strncmp@_l
  6698  0401  3F41               	moviw [1]fsr1
  6699  0402  00F1               	movwf	strncmp@_l+1
  6700  0403  3041               	movlw	low (STR_8| (0+32768))
  6701  0404  00F2               	movwf	strncmp@_r
  6702  0405  30A0               	movlw	high (STR_8| (0+32768))
  6703  0406  00F3               	movwf	strncmp@_r+1
  6704  0407  3002               	movlw	2
  6705  0408  00F4               	movwf	strncmp@n
  6706  0409  3000               	movlw	0
  6707  040A  00F5               	movwf	strncmp@n+1
  6708  040B  3193  2391  3183   	fcall	_strncmp
  6709  040E  0870               	movf	?_strncmp,w
  6710  040F  0471               	iorwf	?_strncmp+1,w
  6711  0410  1903               	btfsc	3,2
  6712  0411  2C13               	goto	u4161
  6713  0412  2C14               	goto	u4160
  6714  0413                     u4161:
  6715  0413  2C2D               	goto	l3418
  6716  0414                     u4160:
  6717  0414                     l3416:
  6718  0414  0020               	movlb	0	; select bank0
  6719  0415  084E               	movf	vfpfcnvrt@fmt,w
  6720  0416  0086               	movwf	6
  6721  0417  0187               	clrf	7
  6722  0418  3F40               	moviw [0]fsr1
  6723  0419  00F0               	movwf	strncmp@_l
  6724  041A  3F41               	moviw [1]fsr1
  6725  041B  00F1               	movwf	strncmp@_l+1
  6726  041C  3044               	movlw	low (STR_12| (0+32768))
  6727  041D  00F2               	movwf	strncmp@_r
  6728  041E  30A0               	movlw	high (STR_12| (0+32768))
  6729  041F  00F3               	movwf	strncmp@_r+1
  6730  0420  3002               	movlw	2
  6731  0421  00F4               	movwf	strncmp@n
  6732  0422  3000               	movlw	0
  6733  0423  00F5               	movwf	strncmp@n+1
  6734  0424  3193  2391  3183   	fcall	_strncmp
  6735  0427  0870               	movf	?_strncmp,w
  6736  0428  0471               	iorwf	?_strncmp+1,w
  6737  0429  1D03               	btfss	3,2
  6738  042A  2C2C               	goto	u4171
  6739  042B  2C2D               	goto	u4170
  6740  042C                     u4171:
  6741  042C  2C6F               	goto	l3426
  6742  042D                     u4170:
  6743  042D                     l3418:
  6744                           
  6745                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 858: ;C:\Program 
      +                          Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 860:             *fmt += ((si
      +                          zeof("ld")/sizeof("ld"[0]))-1);
  6746  042D  0020               	movlb	0	; select bank0
  6747  042E  084E               	movf	vfpfcnvrt@fmt,w
  6748  042F  0086               	movwf	6
  6749  0430  0187               	clrf	7
  6750  0431  3002               	movlw	2
  6751  0432  0781               	addwf	1,f
  6752  0433  3141               	addfsr 1,1
  6753  0434  1803               	skipnc
  6754  0435  0A81               	incf	1,f
  6755  0436                     l3420:
  6756                           
  6757                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 861:             
      +                          ll = (long long)(*(long *)__va_arg(*(long **)ap, (long)0));
  6758  0436  084F               	movf	vfpfcnvrt@ap,w
  6759  0437  0086               	movwf	6
  6760  0438  0187               	clrf	7
  6761  0439  0801               	movf	1,w
  6762  043A  0084               	movwf	4
  6763  043B  0185               	clrf	5
  6764  043C  3004               	movlw	4
  6765  043D  0781               	addwf	1,f
  6766  043E  3F00               	moviw [0]fsr0
  6767  043F  00D0               	movwf	??_vfpfcnvrt
  6768  0440  3F01               	moviw [1]fsr0
  6769  0441  00D1               	movwf	??_vfpfcnvrt+1
  6770  0442  3F02               	moviw [2]fsr0
  6771  0443  00D2               	movwf	??_vfpfcnvrt+2
  6772  0444  3F03               	moviw [3]fsr0
  6773  0445  00D3               	movwf	??_vfpfcnvrt+3
  6774  0446  0850               	movf	??_vfpfcnvrt,w
  6775  0447  00DC               	movwf	vfpfcnvrt@ll
  6776  0448  0851               	movf	??_vfpfcnvrt+1,w
  6777  0449  00DD               	movwf	vfpfcnvrt@ll+1
  6778  044A  0852               	movf	??_vfpfcnvrt+2,w
  6779  044B  00DE               	movwf	vfpfcnvrt@ll+2
  6780  044C  0853               	movf	??_vfpfcnvrt+3,w
  6781  044D  00DF               	movwf	vfpfcnvrt@ll+3
  6782  044E  3000               	movlw	0
  6783  044F  1BDF               	btfsc	vfpfcnvrt@ll+3,7
  6784  0450  30FF               	movlw	255
  6785  0451  00E0               	movwf	vfpfcnvrt@ll+4
  6786  0452  00E1               	movwf	vfpfcnvrt@ll+5
  6787  0453  00E2               	movwf	vfpfcnvrt@ll+6
  6788  0454  00E3               	movwf	vfpfcnvrt@ll+7
  6789  0455                     l3422:
  6790                           
  6791                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 863:             
      +                          return dtoa(fp, ll);
  6792  0455  085C               	movf	vfpfcnvrt@ll,w
  6793  0456  00B0               	movwf	dtoa@d
  6794  0457  085D               	movf	vfpfcnvrt@ll+1,w
  6795  0458  00B1               	movwf	dtoa@d+1
  6796  0459  085E               	movf	vfpfcnvrt@ll+2,w
  6797  045A  00B2               	movwf	dtoa@d+2
  6798  045B  085F               	movf	vfpfcnvrt@ll+3,w
  6799  045C  00B3               	movwf	dtoa@d+3
  6800  045D  0860               	movf	vfpfcnvrt@ll+4,w
  6801  045E  00B4               	movwf	dtoa@d+4
  6802  045F  0861               	movf	vfpfcnvrt@ll+5,w
  6803  0460  00B5               	movwf	dtoa@d+5
  6804  0461  0862               	movf	vfpfcnvrt@ll+6,w
  6805  0462  00B6               	movwf	dtoa@d+6
  6806  0463  0863               	movf	vfpfcnvrt@ll+7,w
  6807  0464  00B7               	movwf	dtoa@d+7
  6808  0465  086C               	movf	vfpfcnvrt@fp,w
  6809  0466  3180  2056  3183   	fcall	_dtoa
  6810  0469  0020               	movlb	0	; select bank0
  6811  046A  0831               	movf	?_dtoa+1,w
  6812  046B  00CF               	movwf	?_vfpfcnvrt+1
  6813  046C  0830               	movf	?_dtoa,w
  6814  046D  00CE               	movwf	?_vfpfcnvrt
  6815  046E  2D75               	goto	l1079
  6816  046F                     l3426:
  6817                           
  6818                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 1204:         if 
      +                          (*fmt[0] == 'u') {
  6819  046F  0020               	movlb	0	; select bank0
  6820  0470  084E               	movf	vfpfcnvrt@fmt,w
  6821  0471  0086               	movwf	6
  6822  0472  0187               	clrf	7
  6823  0473  3F40               	moviw [0]fsr1
  6824  0474  00D0               	movwf	??_vfpfcnvrt
  6825  0475  3F41               	moviw [1]fsr1
  6826  0476  00D1               	movwf	??_vfpfcnvrt+1
  6827  0477  0850               	movf	??_vfpfcnvrt,w
  6828  0478  0084               	movwf	4
  6829  0479  0851               	movf	??_vfpfcnvrt+1,w
  6830  047A  0085               	movwf	5
  6831  047B  0012               	moviw fsr0++
  6832  047C  3A75               	xorlw	117
  6833  047D  1D03               	btfss	3,2
  6834  047E  2C80               	goto	u4181
  6835  047F  2C81               	goto	u4180
  6836  0480                     u4181:
  6837  0480  2CB5               	goto	l3436
  6838  0481                     u4180:
  6839  0481                     l3428:
  6840                           
  6841                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 1206:            
      +                           ++*fmt;
  6842  0481  084E               	movf	vfpfcnvrt@fmt,w
  6843  0482  0086               	movwf	6
  6844  0483  0187               	clrf	7
  6845  0484  3001               	movlw	1
  6846  0485  0781               	addwf	1,f
  6847  0486  3141               	addfsr 1,1
  6848  0487  1803               	skipnc
  6849  0488  0A81               	incf	1,f
  6850  0489                     l3430:
  6851                           
  6852                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 1207:            
      +                           llu = (unsigned long long)(*(unsigned int *)__va_arg(*(unsigned int **)ap, (unsigned in
      +                          t)0));
  6853  0489  084F               	movf	vfpfcnvrt@ap,w
  6854  048A  0086               	movwf	6
  6855  048B  0187               	clrf	7
  6856  048C  0801               	movf	1,w
  6857  048D  0084               	movwf	4
  6858  048E  0185               	clrf	5
  6859  048F  3002               	movlw	2
  6860  0490  0781               	addwf	1,f
  6861  0491  3F00               	moviw [0]fsr0
  6862  0492  00E4               	movwf	vfpfcnvrt@llu
  6863  0493  3F01               	moviw [1]fsr0
  6864  0494  00E5               	movwf	vfpfcnvrt@llu+1
  6865  0495  01E6               	clrf	vfpfcnvrt@llu+2
  6866  0496  01E7               	clrf	vfpfcnvrt@llu+3
  6867  0497  01E8               	clrf	vfpfcnvrt@llu+4
  6868  0498  01E9               	clrf	vfpfcnvrt@llu+5
  6869  0499  01EA               	clrf	vfpfcnvrt@llu+6
  6870  049A  01EB               	clrf	vfpfcnvrt@llu+7
  6871  049B                     l3432:
  6872                           
  6873                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 1209:            
      +                           return utoa(fp, llu);
  6874  049B  0864               	movf	vfpfcnvrt@llu,w
  6875  049C  00B0               	movwf	utoa@d
  6876  049D  0865               	movf	vfpfcnvrt@llu+1,w
  6877  049E  00B1               	movwf	utoa@d+1
  6878  049F  0866               	movf	vfpfcnvrt@llu+2,w
  6879  04A0  00B2               	movwf	utoa@d+2
  6880  04A1  0867               	movf	vfpfcnvrt@llu+3,w
  6881  04A2  00B3               	movwf	utoa@d+3
  6882  04A3  0868               	movf	vfpfcnvrt@llu+4,w
  6883  04A4  00B4               	movwf	utoa@d+4
  6884  04A5  0869               	movf	vfpfcnvrt@llu+5,w
  6885  04A6  00B5               	movwf	utoa@d+5
  6886  04A7  086A               	movf	vfpfcnvrt@llu+6,w
  6887  04A8  00B6               	movwf	utoa@d+6
  6888  04A9  086B               	movf	vfpfcnvrt@llu+7,w
  6889  04AA  00B7               	movwf	utoa@d+7
  6890  04AB  086C               	movf	vfpfcnvrt@fp,w
  6891  04AC  318E  2612  3183   	fcall	_utoa
  6892  04AF  0020               	movlb	0	; select bank0
  6893  04B0  0831               	movf	?_utoa+1,w
  6894  04B1  00CF               	movwf	?_vfpfcnvrt+1
  6895  04B2  0830               	movf	?_utoa,w
  6896  04B3  00CE               	movwf	?_vfpfcnvrt
  6897  04B4  2D75               	goto	l1079
  6898  04B5                     l3436:
  6899                           
  6900                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 1214:         if 
      +                          (!strncmp(*fmt, "lu", ((sizeof("lu")/sizeof("lu"[0]))-1))) {
  6901  04B5  084E               	movf	vfpfcnvrt@fmt,w
  6902  04B6  0086               	movwf	6
  6903  04B7  0187               	clrf	7
  6904  04B8  3F40               	moviw [0]fsr1
  6905  04B9  00F0               	movwf	strncmp@_l
  6906  04BA  3F41               	moviw [1]fsr1
  6907  04BB  00F1               	movwf	strncmp@_l+1
  6908  04BC  3047               	movlw	low (STR_17| (0+32768))
  6909  04BD  00F2               	movwf	strncmp@_r
  6910  04BE  30A0               	movlw	high (STR_17| (0+32768))
  6911  04BF  00F3               	movwf	strncmp@_r+1
  6912  04C0  3002               	movlw	2
  6913  04C1  00F4               	movwf	strncmp@n
  6914  04C2  3000               	movlw	0
  6915  04C3  00F5               	movwf	strncmp@n+1
  6916  04C4  3193  2391  3183   	fcall	_strncmp
  6917  04C7  0870               	movf	?_strncmp,w
  6918  04C8  0471               	iorwf	?_strncmp+1,w
  6919  04C9  1D03               	btfss	3,2
  6920  04CA  2CCC               	goto	u4191
  6921  04CB  2CCD               	goto	u4190
  6922  04CC                     u4191:
  6923  04CC  2D1C               	goto	l3446
  6924  04CD                     u4190:
  6925  04CD                     l3438:
  6926                           
  6927                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 1216:            
      +                           *fmt += ((sizeof("lu")/sizeof("lu"[0]))-1);
  6928  04CD  0020               	movlb	0	; select bank0
  6929  04CE  084E               	movf	vfpfcnvrt@fmt,w
  6930  04CF  0086               	movwf	6
  6931  04D0  0187               	clrf	7
  6932  04D1  3002               	movlw	2
  6933  04D2  0781               	addwf	1,f
  6934  04D3  3141               	addfsr 1,1
  6935  04D4  1803               	skipnc
  6936  04D5  0A81               	incf	1,f
  6937  04D6                     l3440:
  6938                           
  6939                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 1217:            
      +                           llu = (unsigned long long)(*(unsigned long *)__va_arg(*(unsigned long **)ap, (unsigned 
      +                          long)0));
  6940  04D6  084F               	movf	vfpfcnvrt@ap,w
  6941  04D7  0086               	movwf	6
  6942  04D8  0187               	clrf	7
  6943  04D9  0801               	movf	1,w
  6944  04DA  0084               	movwf	4
  6945  04DB  0185               	clrf	5
  6946  04DC  3004               	movlw	4
  6947  04DD  0781               	addwf	1,f
  6948  04DE  3F00               	moviw [0]fsr0
  6949  04DF  00D0               	movwf	??_vfpfcnvrt
  6950  04E0  3F01               	moviw [1]fsr0
  6951  04E1  00D1               	movwf	??_vfpfcnvrt+1
  6952  04E2  3F02               	moviw [2]fsr0
  6953  04E3  00D2               	movwf	??_vfpfcnvrt+2
  6954  04E4  3F03               	moviw [3]fsr0
  6955  04E5  00D3               	movwf	??_vfpfcnvrt+3
  6956  04E6  0850               	movf	??_vfpfcnvrt,w
  6957  04E7  00D4               	movwf	??_vfpfcnvrt+4
  6958  04E8  0851               	movf	??_vfpfcnvrt+1,w
  6959  04E9  00D5               	movwf	??_vfpfcnvrt+5
  6960  04EA  0852               	movf	??_vfpfcnvrt+2,w
  6961  04EB  00D6               	movwf	??_vfpfcnvrt+6
  6962  04EC  0853               	movf	??_vfpfcnvrt+3,w
  6963  04ED  00D7               	movwf	??_vfpfcnvrt+7
  6964  04EE  01D8               	clrf	??_vfpfcnvrt+8
  6965  04EF  01D9               	clrf	??_vfpfcnvrt+9
  6966  04F0  01DA               	clrf	??_vfpfcnvrt+10
  6967  04F1  01DB               	clrf	??_vfpfcnvrt+11
  6968  04F2  085B               	movf	??_vfpfcnvrt+11,w
  6969  04F3  00EB               	movwf	vfpfcnvrt@llu+7
  6970  04F4  085A               	movf	??_vfpfcnvrt+10,w
  6971  04F5  00EA               	movwf	vfpfcnvrt@llu+6
  6972  04F6  0859               	movf	??_vfpfcnvrt+9,w
  6973  04F7  00E9               	movwf	vfpfcnvrt@llu+5
  6974  04F8  0858               	movf	??_vfpfcnvrt+8,w
  6975  04F9  00E8               	movwf	vfpfcnvrt@llu+4
  6976  04FA  0857               	movf	??_vfpfcnvrt+7,w
  6977  04FB  00E7               	movwf	vfpfcnvrt@llu+3
  6978  04FC  0856               	movf	??_vfpfcnvrt+6,w
  6979  04FD  00E6               	movwf	vfpfcnvrt@llu+2
  6980  04FE  0855               	movf	??_vfpfcnvrt+5,w
  6981  04FF  00E5               	movwf	vfpfcnvrt@llu+1
  6982  0500  0854               	movf	??_vfpfcnvrt+4,w
  6983  0501  00E4               	movwf	vfpfcnvrt@llu
  6984  0502                     l3442:
  6985                           
  6986                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 1219:            
      +                           return utoa(fp, llu);
  6987  0502  0864               	movf	vfpfcnvrt@llu,w
  6988  0503  00B0               	movwf	utoa@d
  6989  0504  0865               	movf	vfpfcnvrt@llu+1,w
  6990  0505  00B1               	movwf	utoa@d+1
  6991  0506  0866               	movf	vfpfcnvrt@llu+2,w
  6992  0507  00B2               	movwf	utoa@d+2
  6993  0508  0867               	movf	vfpfcnvrt@llu+3,w
  6994  0509  00B3               	movwf	utoa@d+3
  6995  050A  0868               	movf	vfpfcnvrt@llu+4,w
  6996  050B  00B4               	movwf	utoa@d+4
  6997  050C  0869               	movf	vfpfcnvrt@llu+5,w
  6998  050D  00B5               	movwf	utoa@d+5
  6999  050E  086A               	movf	vfpfcnvrt@llu+6,w
  7000  050F  00B6               	movwf	utoa@d+6
  7001  0510  086B               	movf	vfpfcnvrt@llu+7,w
  7002  0511  00B7               	movwf	utoa@d+7
  7003  0512  086C               	movf	vfpfcnvrt@fp,w
  7004  0513  318E  2612  3183   	fcall	_utoa
  7005  0516  0020               	movlb	0	; select bank0
  7006  0517  0831               	movf	?_utoa+1,w
  7007  0518  00CF               	movwf	?_vfpfcnvrt+1
  7008  0519  0830               	movf	?_utoa,w
  7009  051A  00CE               	movwf	?_vfpfcnvrt
  7010  051B  2D75               	goto	l1079
  7011  051C                     l3446:
  7012                           
  7013                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 1372:         if 
      +                          ((*fmt)[0] == '%') {
  7014  051C  0020               	movlb	0	; select bank0
  7015  051D  084E               	movf	vfpfcnvrt@fmt,w
  7016  051E  0086               	movwf	6
  7017  051F  0187               	clrf	7
  7018  0520  3F40               	moviw [0]fsr1
  7019  0521  00D0               	movwf	??_vfpfcnvrt
  7020  0522  3F41               	moviw [1]fsr1
  7021  0523  00D1               	movwf	??_vfpfcnvrt+1
  7022  0524  0850               	movf	??_vfpfcnvrt,w
  7023  0525  0084               	movwf	4
  7024  0526  0851               	movf	??_vfpfcnvrt+1,w
  7025  0527  0085               	movwf	5
  7026  0528  0012               	moviw fsr0++
  7027  0529  3A25               	xorlw	37
  7028  052A  1D03               	btfss	3,2
  7029  052B  2D2D               	goto	u4201
  7030  052C  2D2E               	goto	u4200
  7031  052D                     u4201:
  7032  052D  2D47               	goto	l3456
  7033  052E                     u4200:
  7034  052E                     l3448:
  7035                           
  7036                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 1373:            
      +                           ++*fmt;
  7037  052E  084E               	movf	vfpfcnvrt@fmt,w
  7038  052F  0086               	movwf	6
  7039  0530  0187               	clrf	7
  7040  0531  3001               	movlw	1
  7041  0532  0781               	addwf	1,f
  7042  0533  3141               	addfsr 1,1
  7043  0534  1803               	skipnc
  7044  0535  0A81               	incf	1,f
  7045  0536                     l3450:
  7046                           
  7047                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 1374:            
      +                           fputc((int)'%', fp);
  7048  0536  3025               	movlw	37
  7049  0537  00F0               	movwf	fputc@c
  7050  0538  3000               	movlw	0
  7051  0539  00F1               	movwf	fputc@c+1
  7052  053A  086C               	movf	vfpfcnvrt@fp,w
  7053  053B  00D0               	movwf	??_vfpfcnvrt
  7054  053C  0850               	movf	??_vfpfcnvrt,w
  7055  053D  00F2               	movwf	fputc@fp
  7056  053E  3180  2007  3183   	fcall	_fputc
  7057  0541                     l3452:
  7058                           
  7059                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 1375:            
      +                           return 1;
  7060  0541  3001               	movlw	1
  7061  0542  0020               	movlb	0	; select bank0
  7062  0543  00CE               	movwf	?_vfpfcnvrt
  7063  0544  3000               	movlw	0
  7064  0545  00CF               	movwf	?_vfpfcnvrt+1
  7065  0546  2D75               	goto	l1079
  7066  0547                     l3456:
  7067                           
  7068                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 1379:         ++*
      +                          fmt;
  7069  0547  084E               	movf	vfpfcnvrt@fmt,w
  7070  0548  0086               	movwf	6
  7071  0549  0187               	clrf	7
  7072  054A  3001               	movlw	1
  7073  054B  0781               	addwf	1,f
  7074  054C  3141               	addfsr 1,1
  7075  054D  1803               	skipnc
  7076  054E  0A81               	incf	1,f
  7077  054F                     l3458:
  7078                           
  7079                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 1380:         ret
      +                          urn 0;
  7080  054F  01CE               	clrf	?_vfpfcnvrt
  7081  0550  01CF               	clrf	?_vfpfcnvrt+1
  7082  0551  2D75               	goto	l1079
  7083  0552                     l3462:
  7084                           
  7085                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 1384:     fputc((
      +                          int)(*fmt)[0], fp);
  7086  0552  084E               	movf	vfpfcnvrt@fmt,w
  7087  0553  0086               	movwf	6
  7088  0554  0187               	clrf	7
  7089  0555  3F40               	moviw [0]fsr1
  7090  0556  00D0               	movwf	??_vfpfcnvrt
  7091  0557  3F41               	moviw [1]fsr1
  7092  0558  00D1               	movwf	??_vfpfcnvrt+1
  7093  0559  0850               	movf	??_vfpfcnvrt,w
  7094  055A  0084               	movwf	4
  7095  055B  0851               	movf	??_vfpfcnvrt+1,w
  7096  055C  0085               	movwf	5
  7097  055D  0800               	movf	0,w	;code access
  7098  055E  00D2               	movwf	??_vfpfcnvrt+2
  7099  055F  01D3               	clrf	??_vfpfcnvrt+3
  7100  0560  0852               	movf	??_vfpfcnvrt+2,w
  7101  0561  00F0               	movwf	fputc@c
  7102  0562  0853               	movf	??_vfpfcnvrt+3,w
  7103  0563  00F1               	movwf	fputc@c+1
  7104  0564  086C               	movf	vfpfcnvrt@fp,w
  7105  0565  00D4               	movwf	??_vfpfcnvrt+4
  7106  0566  0854               	movf	??_vfpfcnvrt+4,w
  7107  0567  00F2               	movwf	fputc@fp
  7108  0568  3180  2007  3183   	fcall	_fputc
  7109  056B                     l3464:
  7110                           
  7111                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 1385:     ++*fmt;
  7112  056B  0020               	movlb	0	; select bank0
  7113  056C  084E               	movf	vfpfcnvrt@fmt,w
  7114  056D  0086               	movwf	6
  7115  056E  0187               	clrf	7
  7116  056F  3001               	movlw	1
  7117  0570  0781               	addwf	1,f
  7118  0571  3141               	addfsr 1,1
  7119  0572  1803               	skipnc
  7120  0573  0A81               	incf	1,f
  7121  0574  2D41               	goto	l3452
  7122  0575                     l1079:
  7123  0575  0008               	return
  7124  0576                     __end_of_vfpfcnvrt:
  7125                           
  7126                           	psect	text14
  7127  0E12                     __ptext14:	
  7128 ;; *************** function _utoa *****************
  7129 ;; Defined at:
  7130 ;;		line 615 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c"
  7131 ;; Parameters:    Size  Location     Type
  7132 ;;  fp              1    wreg     PTR struct _IO_FILE
  7133 ;;		 -> sprintf@f(5), 
  7134 ;;  d               8   16[BANK0 ] unsigned long long 
  7135 ;; Auto vars:     Size  Location     Type
  7136 ;;  fp              1   26[BANK0 ] PTR struct _IO_FILE
  7137 ;;		 -> sprintf@f(5), 
  7138 ;;  n               8   29[BANK0 ] unsigned long long 
  7139 ;;  i               2   37[BANK0 ] int 
  7140 ;;  w               2   27[BANK0 ] int 
  7141 ;;  p               2   24[BANK0 ] int 
  7142 ;; Return value:  Size  Location     Type
  7143 ;;                  2   16[BANK0 ] int 
  7144 ;; Registers used:
  7145 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  7146 ;; Tracked objects:
  7147 ;;		On entry : 0/0
  7148 ;;		On exit  : 0/0
  7149 ;;		Unchanged: 0/0
  7150 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  7151 ;;      Params:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7152 ;;      Locals:         0      15       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7153 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7154 ;;      Totals:         1      23       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7155 ;;Total ram usage:       24 bytes
  7156 ;; Hardware stack levels used: 1
  7157 ;; Hardware stack levels required when called: 4
  7158 ;; This function calls:
  7159 ;;		___lodiv
  7160 ;;		___lomod
  7161 ;;		_pad
  7162 ;; This function is called by:
  7163 ;;		_vfpfcnvrt
  7164 ;; This function uses a non-reentrant model
  7165 ;;
  7166                           
  7167                           
  7168                           ;psect for function _utoa
  7169  0E12                     _utoa:
  7170                           
  7171                           ;incstack = 0
  7172                           ; Regs used in _utoa: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  7173                           ;utoa@fp stored from wreg
  7174  0E12  0020               	movlb	0	; select bank0
  7175  0E13  00BA               	movwf	utoa@fp
  7176  0E14                     l2908:
  7177                           
  7178                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 615: static int u
      +                          toa(FILE *fp, unsigned long long d);C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99
      +                          \common\doprnt.c: 616: {;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\dop
      +                          rnt.c: 617:     int i, p, w;;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common
      +                          \doprnt.c: 618:     unsigned long long n;;C:\Program Files\Microchip\xc8\v2.32\pic\sourc
      +                          es\c99\common\doprnt.c: 621:     if (!(prec < 0)) {
  7179  0E14  0021               	movlb	1	; select bank1
  7180  0E15  1BE1               	btfsc	(_prec+1)^(0+128),7
  7181  0E16  2E18               	goto	u3091
  7182  0E17  2E19               	goto	u3090
  7183  0E18                     u3091:
  7184  0E18  2E1D               	goto	l1060
  7185  0E19                     u3090:
  7186  0E19                     l2910:
  7187                           
  7188                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 622:         flag
      +                          s &= ~(1 << 1);
  7189  0E19  30FD               	movlw	253
  7190  0E1A  05E2               	andwf	_flags^(0+128),f
  7191  0E1B  30FF               	movlw	255
  7192  0E1C  05E3               	andwf	(_flags+1)^(0+128),f
  7193  0E1D                     l1060:	
  7194                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 623:     }
  7195                           
  7196                           
  7197                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 624:     p = (0 <
      +                           prec) ? prec : 1;
  7198  0E1D  0861               	movf	(_prec+1)^(0+128),w
  7199  0E1E  3A80               	xorlw	128
  7200  0E1F  00FD               	movwf	??_utoa
  7201  0E20  3080               	movlw	128
  7202  0E21  027D               	subwf	??_utoa,w
  7203  0E22  1D03               	skipz
  7204  0E23  2E26               	goto	u3105
  7205  0E24  3001               	movlw	1
  7206  0E25  0260               	subwf	_prec^(0+128),w
  7207  0E26                     u3105:
  7208  0E26  1803               	skipnc
  7209  0E27  2E29               	goto	u3101
  7210  0E28  2E2A               	goto	u3100
  7211  0E29                     u3101:
  7212  0E29  2E30               	goto	l2914
  7213  0E2A                     u3100:
  7214  0E2A                     l2912:
  7215  0E2A  3001               	movlw	1
  7216  0E2B  0020               	movlb	0	; select bank0
  7217  0E2C  00B8               	movwf	utoa@p
  7218  0E2D  3000               	movlw	0
  7219  0E2E  00B9               	movwf	utoa@p+1
  7220  0E2F  2E38               	goto	l1064
  7221  0E30                     l2914:
  7222  0E30  0021               	movlb	1	; select bank1
  7223  0E31  0861               	movf	(_prec+1)^(0+128),w
  7224  0E32  0020               	movlb	0	; select bank0
  7225  0E33  00B9               	movwf	utoa@p+1
  7226  0E34  0021               	movlb	1	; select bank1
  7227  0E35  0860               	movf	_prec^(0+128),w
  7228  0E36  0020               	movlb	0	; select bank0
  7229  0E37  00B8               	movwf	utoa@p
  7230  0E38                     l1064:
  7231                           
  7232                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 625:     w = widt
      +                          h;
  7233  0E38  0021               	movlb	1	; select bank1
  7234  0E39  085F               	movf	(_width+1)^(0+128),w
  7235  0E3A  0020               	movlb	0	; select bank0
  7236  0E3B  00BC               	movwf	utoa@w+1
  7237  0E3C  0021               	movlb	1	; select bank1
  7238  0E3D  085E               	movf	_width^(0+128),w
  7239  0E3E  0020               	movlb	0	; select bank0
  7240  0E3F  00BB               	movwf	utoa@w
  7241  0E40                     l2916:
  7242                           
  7243                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 628:     n = d;
  7244  0E40  0830               	movf	utoa@d,w
  7245  0E41  00BD               	movwf	utoa@n
  7246  0E42  0831               	movf	utoa@d+1,w
  7247  0E43  00BE               	movwf	utoa@n+1
  7248  0E44  0832               	movf	utoa@d+2,w
  7249  0E45  00BF               	movwf	utoa@n+2
  7250  0E46  0833               	movf	utoa@d+3,w
  7251  0E47  00C0               	movwf	utoa@n+3
  7252  0E48  0834               	movf	utoa@d+4,w
  7253  0E49  00C1               	movwf	utoa@n+4
  7254  0E4A  0835               	movf	utoa@d+5,w
  7255  0E4B  00C2               	movwf	utoa@n+5
  7256  0E4C  0836               	movf	utoa@d+6,w
  7257  0E4D  00C3               	movwf	utoa@n+6
  7258  0E4E  0837               	movf	utoa@d+7,w
  7259  0E4F  00C4               	movwf	utoa@n+7
  7260                           
  7261                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 629:     i = size
      +                          of(dbuf) - 1;
  7262  0E50  301F               	movlw	31
  7263  0E51  00C5               	movwf	utoa@i
  7264  0E52  3000               	movlw	0
  7265  0E53  00C6               	movwf	utoa@i+1
  7266  0E54                     l2918:
  7267                           
  7268                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 630:     dbuf[i] 
      +                          = '\0';
  7269  0E54  0023               	movlb	3	; select bank3
  7270  0E55  01BF               	clrf	(_dbuf^(0+384)+31)
  7271                           
  7272                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 631:     while (i
      +                           && (n || (0 < p) || ((0 < w) && (flags & (1 << 1))))) {
  7273  0E56  2EB8               	goto	l2930
  7274  0E57                     l2920:
  7275                           
  7276                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 632:         --i;
  7277  0E57  30FF               	movlw	255
  7278  0E58  0020               	movlb	0	; select bank0
  7279  0E59  07C5               	addwf	utoa@i,f
  7280  0E5A  30FF               	movlw	255
  7281  0E5B  3DC6               	addwfc	utoa@i+1,f
  7282  0E5C                     l2922:
  7283                           
  7284                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 633:         dbuf
      +                          [i] = '0' + (n % 10);
  7285  0E5C  300A               	movlw	10
  7286  0E5D  00A0               	movwf	___lomod@divisor
  7287  0E5E  01A1               	clrf	___lomod@divisor+1
  7288  0E5F  01A2               	clrf	___lomod@divisor+2
  7289  0E60  01A3               	clrf	___lomod@divisor+3
  7290  0E61  01A4               	clrf	___lomod@divisor+4
  7291  0E62  01A5               	clrf	___lomod@divisor+5
  7292  0E63  01A6               	clrf	___lomod@divisor+6
  7293  0E64  01A7               	clrf	___lomod@divisor+7
  7294  0E65  083D               	movf	utoa@n,w
  7295  0E66  00A8               	movwf	___lomod@dividend
  7296  0E67  083E               	movf	utoa@n+1,w
  7297  0E68  00A9               	movwf	___lomod@dividend+1
  7298  0E69  083F               	movf	utoa@n+2,w
  7299  0E6A  00AA               	movwf	___lomod@dividend+2
  7300  0E6B  0840               	movf	utoa@n+3,w
  7301  0E6C  00AB               	movwf	___lomod@dividend+3
  7302  0E6D  0841               	movf	utoa@n+4,w
  7303  0E6E  00AC               	movwf	___lomod@dividend+4
  7304  0E6F  0842               	movf	utoa@n+5,w
  7305  0E70  00AD               	movwf	___lomod@dividend+5
  7306  0E71  0843               	movf	utoa@n+6,w
  7307  0E72  00AE               	movwf	___lomod@dividend+6
  7308  0E73  0844               	movf	utoa@n+7,w
  7309  0E74  00AF               	movwf	___lomod@dividend+7
  7310  0E75  3194  244C  318E   	fcall	___lomod
  7311  0E78  0020               	movlb	0	; select bank0
  7312  0E79  0820               	movf	?___lomod,w
  7313  0E7A  3E30               	addlw	48
  7314  0E7B  00FD               	movwf	??_utoa
  7315  0E7C  0845               	movf	utoa@i,w
  7316  0E7D  3EA0               	addlw	(low (_dbuf| (0+256)))& (0+255)
  7317  0E7E  0086               	movwf	6
  7318  0E7F  3001               	movlw	1	; select bank3/4
  7319  0E80  0087               	movwf	7
  7320  0E81  087D               	movf	??_utoa,w
  7321  0E82  0081               	movwf	1
  7322  0E83                     l2924:
  7323                           
  7324                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 634:         --p;
  7325  0E83  30FF               	movlw	255
  7326  0E84  07B8               	addwf	utoa@p,f
  7327  0E85  30FF               	movlw	255
  7328  0E86  3DB9               	addwfc	utoa@p+1,f
  7329  0E87                     l2926:
  7330                           
  7331                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 635:         --w;
  7332  0E87  30FF               	movlw	255
  7333  0E88  07BB               	addwf	utoa@w,f
  7334  0E89  30FF               	movlw	255
  7335  0E8A  3DBC               	addwfc	utoa@w+1,f
  7336  0E8B                     l2928:
  7337                           
  7338                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 636:         n = 
      +                          n / 10;
  7339  0E8B  300A               	movlw	10
  7340  0E8C  00A0               	movwf	___lodiv@divisor
  7341  0E8D  01A1               	clrf	___lodiv@divisor+1
  7342  0E8E  01A2               	clrf	___lodiv@divisor+2
  7343  0E8F  01A3               	clrf	___lodiv@divisor+3
  7344  0E90  01A4               	clrf	___lodiv@divisor+4
  7345  0E91  01A5               	clrf	___lodiv@divisor+5
  7346  0E92  01A6               	clrf	___lodiv@divisor+6
  7347  0E93  01A7               	clrf	___lodiv@divisor+7
  7348  0E94  083D               	movf	utoa@n,w
  7349  0E95  00A8               	movwf	___lodiv@dividend
  7350  0E96  083E               	movf	utoa@n+1,w
  7351  0E97  00A9               	movwf	___lodiv@dividend+1
  7352  0E98  083F               	movf	utoa@n+2,w
  7353  0E99  00AA               	movwf	___lodiv@dividend+2
  7354  0E9A  0840               	movf	utoa@n+3,w
  7355  0E9B  00AB               	movwf	___lodiv@dividend+3
  7356  0E9C  0841               	movf	utoa@n+4,w
  7357  0E9D  00AC               	movwf	___lodiv@dividend+4
  7358  0E9E  0842               	movf	utoa@n+5,w
  7359  0E9F  00AD               	movwf	___lodiv@dividend+5
  7360  0EA0  0843               	movf	utoa@n+6,w
  7361  0EA1  00AE               	movwf	___lodiv@dividend+6
  7362  0EA2  0844               	movf	utoa@n+7,w
  7363  0EA3  00AF               	movwf	___lodiv@dividend+7
  7364  0EA4  3188  2005  318E   	fcall	___lodiv
  7365  0EA7  0020               	movlb	0	; select bank0
  7366  0EA8  0820               	movf	?___lodiv,w
  7367  0EA9  00BD               	movwf	utoa@n
  7368  0EAA  0821               	movf	?___lodiv+1,w
  7369  0EAB  00BE               	movwf	utoa@n+1
  7370  0EAC  0822               	movf	?___lodiv+2,w
  7371  0EAD  00BF               	movwf	utoa@n+2
  7372  0EAE  0823               	movf	?___lodiv+3,w
  7373  0EAF  00C0               	movwf	utoa@n+3
  7374  0EB0  0824               	movf	?___lodiv+4,w
  7375  0EB1  00C1               	movwf	utoa@n+4
  7376  0EB2  0825               	movf	?___lodiv+5,w
  7377  0EB3  00C2               	movwf	utoa@n+5
  7378  0EB4  0826               	movf	?___lodiv+6,w
  7379  0EB5  00C3               	movwf	utoa@n+6
  7380  0EB6  0827               	movf	?___lodiv+7,w
  7381  0EB7  00C4               	movwf	utoa@n+7
  7382  0EB8                     l2930:
  7383                           
  7384                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 631:     while (i
      +                           && (n || (0 < p) || ((0 < w) && (flags & (1 << 1))))) {
  7385  0EB8  0020               	movlb	0	; select bank0
  7386  0EB9  0845               	movf	utoa@i,w
  7387  0EBA  0446               	iorwf	utoa@i+1,w
  7388  0EBB  1903               	btfsc	3,2
  7389  0EBC  2EBE               	goto	u3111
  7390  0EBD  2EBF               	goto	u3110
  7391  0EBE                     u3111:
  7392  0EBE  2EEB               	goto	l2940
  7393  0EBF                     u3110:
  7394  0EBF                     l2932:
  7395  0EBF  083D               	movf	utoa@n,w
  7396  0EC0  043E               	iorwf	utoa@n+1,w
  7397  0EC1  043F               	iorwf	utoa@n+2,w
  7398  0EC2  0440               	iorwf	utoa@n+3,w
  7399  0EC3  0441               	iorwf	utoa@n+4,w
  7400  0EC4  0442               	iorwf	utoa@n+5,w
  7401  0EC5  0443               	iorwf	utoa@n+6,w
  7402  0EC6  0444               	iorwf	utoa@n+7,w
  7403  0EC7  1D03               	skipz
  7404  0EC8  2ECA               	goto	u3121
  7405  0EC9  2ECB               	goto	u3120
  7406  0ECA                     u3121:
  7407  0ECA  2E57               	goto	l2920
  7408  0ECB                     u3120:
  7409  0ECB                     l2934:
  7410  0ECB  0839               	movf	utoa@p+1,w
  7411  0ECC  3A80               	xorlw	128
  7412  0ECD  00FD               	movwf	??_utoa
  7413  0ECE  3080               	movlw	128
  7414  0ECF  027D               	subwf	??_utoa,w
  7415  0ED0  1D03               	skipz
  7416  0ED1  2ED4               	goto	u3135
  7417  0ED2  3001               	movlw	1
  7418  0ED3  0238               	subwf	utoa@p,w
  7419  0ED4                     u3135:
  7420  0ED4  1803               	skipnc
  7421  0ED5  2ED7               	goto	u3131
  7422  0ED6  2ED8               	goto	u3130
  7423  0ED7                     u3131:
  7424  0ED7  2E57               	goto	l2920
  7425  0ED8                     u3130:
  7426  0ED8                     l2936:
  7427  0ED8  0020               	movlb	0	; select bank0
  7428  0ED9  083C               	movf	utoa@w+1,w
  7429  0EDA  3A80               	xorlw	128
  7430  0EDB  00FD               	movwf	??_utoa
  7431  0EDC  3080               	movlw	128
  7432  0EDD  027D               	subwf	??_utoa,w
  7433  0EDE  1D03               	skipz
  7434  0EDF  2EE2               	goto	u3145
  7435  0EE0  3001               	movlw	1
  7436  0EE1  023B               	subwf	utoa@w,w
  7437  0EE2                     u3145:
  7438  0EE2  1C03               	skipc
  7439  0EE3  2EE5               	goto	u3141
  7440  0EE4  2EE6               	goto	u3140
  7441  0EE5                     u3141:
  7442  0EE5  2EEB               	goto	l2940
  7443  0EE6                     u3140:
  7444  0EE6                     l2938:
  7445  0EE6  0021               	movlb	1	; select bank1
  7446  0EE7  18E2               	btfsc	_flags^(0+128),1
  7447  0EE8  2EEA               	goto	u3151
  7448  0EE9  2EEB               	goto	u3150
  7449  0EEA                     u3151:
  7450  0EEA  2E57               	goto	l2920
  7451  0EEB                     u3150:
  7452  0EEB                     l2940:
  7453                           
  7454                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 640:     return p
      +                          ad(fp, &dbuf[i], w);
  7455  0EEB  0020               	movlb	0	; select bank0
  7456  0EEC  0845               	movf	utoa@i,w
  7457  0EED  3EA0               	addlw	(low (_dbuf| (0+256)))& (0+255)
  7458  0EEE  00FD               	movwf	??_utoa
  7459  0EEF  087D               	movf	??_utoa,w
  7460  0EF0  00A4               	movwf	pad@buf
  7461  0EF1  083C               	movf	utoa@w+1,w
  7462  0EF2  00A6               	movwf	pad@p+1
  7463  0EF3  083B               	movf	utoa@w,w
  7464  0EF4  00A5               	movwf	pad@p
  7465  0EF5  083A               	movf	utoa@fp,w
  7466  0EF6  3192  2283  318E   	fcall	_pad
  7467  0EF9  0020               	movlb	0	; select bank0
  7468  0EFA  0825               	movf	?_pad+1,w
  7469  0EFB  00B1               	movwf	?_utoa+1
  7470  0EFC  0824               	movf	?_pad,w
  7471  0EFD  00B0               	movwf	?_utoa
  7472  0EFE                     l1072:
  7473  0EFE  0008               	return
  7474  0EFF                     __end_of_utoa:
  7475                           
  7476                           	psect	text15
  7477  144C                     __ptext15:	
  7478 ;; *************** function ___lomod *****************
  7479 ;; Defined at:
  7480 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\lomod.c"
  7481 ;; Parameters:    Size  Location     Type
  7482 ;;  divisor         8    0[BANK0 ] unsigned long long 
  7483 ;;  dividend        8    8[BANK0 ] unsigned long long 
  7484 ;; Auto vars:     Size  Location     Type
  7485 ;;  counter         1    1[COMMON] unsigned char 
  7486 ;; Return value:  Size  Location     Type
  7487 ;;                  8    0[BANK0 ] unsigned long long 
  7488 ;; Registers used:
  7489 ;;		wreg, status,2, status,0
  7490 ;; Tracked objects:
  7491 ;;		On entry : 0/0
  7492 ;;		On exit  : 0/0
  7493 ;;		Unchanged: 0/0
  7494 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  7495 ;;      Params:         0      16       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7496 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7497 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7498 ;;      Totals:         2      16       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7499 ;;Total ram usage:       18 bytes
  7500 ;; Hardware stack levels used: 1
  7501 ;; This function calls:
  7502 ;;		Nothing
  7503 ;; This function is called by:
  7504 ;;		_utoa
  7505 ;; This function uses a non-reentrant model
  7506 ;;
  7507                           
  7508                           
  7509                           ;psect for function ___lomod
  7510  144C                     ___lomod:
  7511  144C                     l2762:	
  7512                           ;incstack = 0
  7513                           ; Regs used in ___lomod: [wreg+status,2+status,0]
  7514                           
  7515  144C  0020               	movlb	0	; select bank0
  7516  144D  0820               	movf	___lomod@divisor,w
  7517  144E  0421               	iorwf	___lomod@divisor+1,w
  7518  144F  0422               	iorwf	___lomod@divisor+2,w
  7519  1450  0423               	iorwf	___lomod@divisor+3,w
  7520  1451  0424               	iorwf	___lomod@divisor+4,w
  7521  1452  0425               	iorwf	___lomod@divisor+5,w
  7522  1453  0426               	iorwf	___lomod@divisor+6,w
  7523  1454  0427               	iorwf	___lomod@divisor+7,w
  7524  1455  1903               	skipnz
  7525  1456  2C58               	goto	u2811
  7526  1457  2C59               	goto	u2810
  7527  1458                     u2811:
  7528  1458  2CAC               	goto	l777
  7529  1459                     u2810:
  7530  1459                     l2764:
  7531  1459  01F1               	clrf	___lomod@counter
  7532  145A  0AF1               	incf	___lomod@counter,f
  7533  145B  2C68               	goto	l2770
  7534  145C                     l2766:
  7535  145C  35A0               	lslf	___lomod@divisor,f
  7536  145D  0DA1               	rlf	___lomod@divisor+1,f
  7537  145E  0DA2               	rlf	___lomod@divisor+2,f
  7538  145F  0DA3               	rlf	___lomod@divisor+3,f
  7539  1460  0DA4               	rlf	___lomod@divisor+4,f
  7540  1461  0DA5               	rlf	___lomod@divisor+5,f
  7541  1462  0DA6               	rlf	___lomod@divisor+6,f
  7542  1463  0DA7               	rlf	___lomod@divisor+7,f
  7543  1464                     l2768:
  7544  1464  3001               	movlw	1
  7545  1465  00F0               	movwf	??___lomod
  7546  1466  0870               	movf	??___lomod,w
  7547  1467  07F1               	addwf	___lomod@counter,f
  7548  1468                     l2770:
  7549  1468  1FA7               	btfss	___lomod@divisor+7,7
  7550  1469  2C6B               	goto	u2821
  7551  146A  2C6C               	goto	u2820
  7552  146B                     u2821:
  7553  146B  2C5C               	goto	l2766
  7554  146C                     u2820:
  7555  146C                     l2772:
  7556  146C  0827               	movf	___lomod@divisor+7,w
  7557  146D  022F               	subwf	___lomod@dividend+7,w
  7558  146E  1D03               	skipz
  7559  146F  2C8A               	goto	u2835
  7560  1470  0826               	movf	___lomod@divisor+6,w
  7561  1471  022E               	subwf	___lomod@dividend+6,w
  7562  1472  1D03               	skipz
  7563  1473  2C8A               	goto	u2835
  7564  1474  0825               	movf	___lomod@divisor+5,w
  7565  1475  022D               	subwf	___lomod@dividend+5,w
  7566  1476  1D03               	skipz
  7567  1477  2C8A               	goto	u2835
  7568  1478  0824               	movf	___lomod@divisor+4,w
  7569  1479  022C               	subwf	___lomod@dividend+4,w
  7570  147A  1D03               	skipz
  7571  147B  2C8A               	goto	u2835
  7572  147C  0823               	movf	___lomod@divisor+3,w
  7573  147D  022B               	subwf	___lomod@dividend+3,w
  7574  147E  1D03               	skipz
  7575  147F  2C8A               	goto	u2835
  7576  1480  0822               	movf	___lomod@divisor+2,w
  7577  1481  022A               	subwf	___lomod@dividend+2,w
  7578  1482  1D03               	skipz
  7579  1483  2C8A               	goto	u2835
  7580  1484  0821               	movf	___lomod@divisor+1,w
  7581  1485  0229               	subwf	___lomod@dividend+1,w
  7582  1486  1D03               	skipz
  7583  1487  2C8A               	goto	u2835
  7584  1488  0820               	movf	___lomod@divisor,w
  7585  1489  0228               	subwf	___lomod@dividend,w
  7586  148A                     u2835:
  7587  148A  1C03               	skipc
  7588  148B  2C8D               	goto	u2831
  7589  148C  2C8E               	goto	u2830
  7590  148D                     u2831:
  7591  148D  2C9E               	goto	l2776
  7592  148E                     u2830:
  7593  148E                     l2774:
  7594  148E  0820               	movf	___lomod@divisor,w
  7595  148F  02A8               	subwf	___lomod@dividend,f
  7596  1490  0821               	movf	___lomod@divisor+1,w
  7597  1491  3BA9               	subwfb	___lomod@dividend+1,f
  7598  1492  0822               	movf	___lomod@divisor+2,w
  7599  1493  3BAA               	subwfb	___lomod@dividend+2,f
  7600  1494  0823               	movf	___lomod@divisor+3,w
  7601  1495  3BAB               	subwfb	___lomod@dividend+3,f
  7602  1496  0824               	movf	___lomod@divisor+4,w
  7603  1497  3BAC               	subwfb	___lomod@dividend+4,f
  7604  1498  0825               	movf	___lomod@divisor+5,w
  7605  1499  3BAD               	subwfb	___lomod@dividend+5,f
  7606  149A  0826               	movf	___lomod@divisor+6,w
  7607  149B  3BAE               	subwfb	___lomod@dividend+6,f
  7608  149C  0827               	movf	___lomod@divisor+7,w
  7609  149D  3BAF               	subwfb	___lomod@dividend+7,f
  7610  149E                     l2776:
  7611  149E  36A7               	lsrf	___lomod@divisor+7,f
  7612  149F  0CA6               	rrf	___lomod@divisor+6,f
  7613  14A0  0CA5               	rrf	___lomod@divisor+5,f
  7614  14A1  0CA4               	rrf	___lomod@divisor+4,f
  7615  14A2  0CA3               	rrf	___lomod@divisor+3,f
  7616  14A3  0CA2               	rrf	___lomod@divisor+2,f
  7617  14A4  0CA1               	rrf	___lomod@divisor+1,f
  7618  14A5  0CA0               	rrf	___lomod@divisor,f
  7619  14A6  3001               	movlw	1
  7620  14A7  02F1               	subwf	___lomod@counter,f
  7621  14A8  1D03               	btfss	3,2
  7622  14A9  2CAB               	goto	u2841
  7623  14AA  2CAC               	goto	u2840
  7624  14AB                     u2841:
  7625  14AB  2C6C               	goto	l2772
  7626  14AC                     u2840:
  7627  14AC                     l777:
  7628  14AC  0828               	movf	___lomod@dividend,w
  7629  14AD  00A0               	movwf	?___lomod
  7630  14AE  0829               	movf	___lomod@dividend+1,w
  7631  14AF  00A1               	movwf	?___lomod+1
  7632  14B0  082A               	movf	___lomod@dividend+2,w
  7633  14B1  00A2               	movwf	?___lomod+2
  7634  14B2  082B               	movf	___lomod@dividend+3,w
  7635  14B3  00A3               	movwf	?___lomod+3
  7636  14B4  082C               	movf	___lomod@dividend+4,w
  7637  14B5  00A4               	movwf	?___lomod+4
  7638  14B6  082D               	movf	___lomod@dividend+5,w
  7639  14B7  00A5               	movwf	?___lomod+5
  7640  14B8  082E               	movf	___lomod@dividend+6,w
  7641  14B9  00A6               	movwf	?___lomod+6
  7642  14BA  082F               	movf	___lomod@dividend+7,w
  7643  14BB  00A7               	movwf	?___lomod+7
  7644  14BC                     l784:
  7645  14BC  0008               	return
  7646  14BD                     __end_of___lomod:
  7647                           
  7648                           	psect	text16
  7649  0805                     __ptext16:	
  7650 ;; *************** function ___lodiv *****************
  7651 ;; Defined at:
  7652 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\lodiv.c"
  7653 ;; Parameters:    Size  Location     Type
  7654 ;;  divisor         8    0[BANK0 ] unsigned long long 
  7655 ;;  dividend        8    8[BANK0 ] unsigned long long 
  7656 ;; Auto vars:     Size  Location     Type
  7657 ;;  quotient        8    1[COMMON] unsigned long long 
  7658 ;;  counter         1    9[COMMON] unsigned char 
  7659 ;; Return value:  Size  Location     Type
  7660 ;;                  8    0[BANK0 ] unsigned long long 
  7661 ;; Registers used:
  7662 ;;		wreg, fsr1l, fsr1h, status,2, status,0
  7663 ;; Tracked objects:
  7664 ;;		On entry : 0/0
  7665 ;;		On exit  : 0/0
  7666 ;;		Unchanged: 0/0
  7667 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  7668 ;;      Params:         0      16       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7669 ;;      Locals:         9       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7670 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7671 ;;      Totals:        10      16       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7672 ;;Total ram usage:       26 bytes
  7673 ;; Hardware stack levels used: 1
  7674 ;; This function calls:
  7675 ;;		Nothing
  7676 ;; This function is called by:
  7677 ;;		_utoa
  7678 ;; This function uses a non-reentrant model
  7679 ;;
  7680                           
  7681                           
  7682                           ;psect for function ___lodiv
  7683  0805                     ___lodiv:
  7684  0805                     l2740:	
  7685                           ;incstack = 0
  7686                           ; Regs used in ___lodiv: [wreg+fsr1l+fsr1h+status,2+status,0]
  7687                           
  7688  0805  3071               	movlw	low ___lodiv@quotient
  7689  0806  0086               	movwf	6
  7690  0807  3000               	movlw	high ___lodiv@quotient
  7691  0808  0087               	movwf	7
  7692  0809  3008               	movlw	8
  7693  080A  00F0               	movwf	??___lodiv
  7694  080B  3000               	movlw	0
  7695  080C                     u2760:
  7696  080C  001E               	movwi fsr1++
  7697  080D  0BF0               	decfsz	??___lodiv,f
  7698  080E  280C               	goto	u2760
  7699  080F                     l2742:
  7700  080F  0020               	movlb	0	; select bank0
  7701  0810  0820               	movf	___lodiv@divisor,w
  7702  0811  0421               	iorwf	___lodiv@divisor+1,w
  7703  0812  0422               	iorwf	___lodiv@divisor+2,w
  7704  0813  0423               	iorwf	___lodiv@divisor+3,w
  7705  0814  0424               	iorwf	___lodiv@divisor+4,w
  7706  0815  0425               	iorwf	___lodiv@divisor+5,w
  7707  0816  0426               	iorwf	___lodiv@divisor+6,w
  7708  0817  0427               	iorwf	___lodiv@divisor+7,w
  7709  0818  1903               	skipnz
  7710  0819  281B               	goto	u2771
  7711  081A  281C               	goto	u2770
  7712  081B                     u2771:
  7713  081B  2878               	goto	l767
  7714  081C                     u2770:
  7715  081C                     l2744:
  7716  081C  01F9               	clrf	___lodiv@counter
  7717  081D  0AF9               	incf	___lodiv@counter,f
  7718  081E  282B               	goto	l2750
  7719  081F                     l2746:
  7720  081F  35A0               	lslf	___lodiv@divisor,f
  7721  0820  0DA1               	rlf	___lodiv@divisor+1,f
  7722  0821  0DA2               	rlf	___lodiv@divisor+2,f
  7723  0822  0DA3               	rlf	___lodiv@divisor+3,f
  7724  0823  0DA4               	rlf	___lodiv@divisor+4,f
  7725  0824  0DA5               	rlf	___lodiv@divisor+5,f
  7726  0825  0DA6               	rlf	___lodiv@divisor+6,f
  7727  0826  0DA7               	rlf	___lodiv@divisor+7,f
  7728  0827                     l2748:
  7729  0827  3001               	movlw	1
  7730  0828  00F0               	movwf	??___lodiv
  7731  0829  0870               	movf	??___lodiv,w
  7732  082A  07F9               	addwf	___lodiv@counter,f
  7733  082B                     l2750:
  7734  082B  1FA7               	btfss	___lodiv@divisor+7,7
  7735  082C  282E               	goto	u2781
  7736  082D  282F               	goto	u2780
  7737  082E                     u2781:
  7738  082E  281F               	goto	l2746
  7739  082F                     u2780:
  7740  082F                     l2752:
  7741  082F  35F1               	lslf	___lodiv@quotient,f
  7742  0830  0DF2               	rlf	___lodiv@quotient+1,f
  7743  0831  0DF3               	rlf	___lodiv@quotient+2,f
  7744  0832  0DF4               	rlf	___lodiv@quotient+3,f
  7745  0833  0DF5               	rlf	___lodiv@quotient+4,f
  7746  0834  0DF6               	rlf	___lodiv@quotient+5,f
  7747  0835  0DF7               	rlf	___lodiv@quotient+6,f
  7748  0836  0DF8               	rlf	___lodiv@quotient+7,f
  7749  0837                     l2754:
  7750  0837  0827               	movf	___lodiv@divisor+7,w
  7751  0838  022F               	subwf	___lodiv@dividend+7,w
  7752  0839  1D03               	skipz
  7753  083A  2855               	goto	u2795
  7754  083B  0826               	movf	___lodiv@divisor+6,w
  7755  083C  022E               	subwf	___lodiv@dividend+6,w
  7756  083D  1D03               	skipz
  7757  083E  2855               	goto	u2795
  7758  083F  0825               	movf	___lodiv@divisor+5,w
  7759  0840  022D               	subwf	___lodiv@dividend+5,w
  7760  0841  1D03               	skipz
  7761  0842  2855               	goto	u2795
  7762  0843  0824               	movf	___lodiv@divisor+4,w
  7763  0844  022C               	subwf	___lodiv@dividend+4,w
  7764  0845  1D03               	skipz
  7765  0846  2855               	goto	u2795
  7766  0847  0823               	movf	___lodiv@divisor+3,w
  7767  0848  022B               	subwf	___lodiv@dividend+3,w
  7768  0849  1D03               	skipz
  7769  084A  2855               	goto	u2795
  7770  084B  0822               	movf	___lodiv@divisor+2,w
  7771  084C  022A               	subwf	___lodiv@dividend+2,w
  7772  084D  1D03               	skipz
  7773  084E  2855               	goto	u2795
  7774  084F  0821               	movf	___lodiv@divisor+1,w
  7775  0850  0229               	subwf	___lodiv@dividend+1,w
  7776  0851  1D03               	skipz
  7777  0852  2855               	goto	u2795
  7778  0853  0820               	movf	___lodiv@divisor,w
  7779  0854  0228               	subwf	___lodiv@dividend,w
  7780  0855                     u2795:
  7781  0855  1C03               	skipc
  7782  0856  2858               	goto	u2791
  7783  0857  2859               	goto	u2790
  7784  0858                     u2791:
  7785  0858  286A               	goto	l2760
  7786  0859                     u2790:
  7787  0859                     l2756:
  7788  0859  0820               	movf	___lodiv@divisor,w
  7789  085A  02A8               	subwf	___lodiv@dividend,f
  7790  085B  0821               	movf	___lodiv@divisor+1,w
  7791  085C  3BA9               	subwfb	___lodiv@dividend+1,f
  7792  085D  0822               	movf	___lodiv@divisor+2,w
  7793  085E  3BAA               	subwfb	___lodiv@dividend+2,f
  7794  085F  0823               	movf	___lodiv@divisor+3,w
  7795  0860  3BAB               	subwfb	___lodiv@dividend+3,f
  7796  0861  0824               	movf	___lodiv@divisor+4,w
  7797  0862  3BAC               	subwfb	___lodiv@dividend+4,f
  7798  0863  0825               	movf	___lodiv@divisor+5,w
  7799  0864  3BAD               	subwfb	___lodiv@dividend+5,f
  7800  0865  0826               	movf	___lodiv@divisor+6,w
  7801  0866  3BAE               	subwfb	___lodiv@dividend+6,f
  7802  0867  0827               	movf	___lodiv@divisor+7,w
  7803  0868  3BAF               	subwfb	___lodiv@dividend+7,f
  7804  0869                     l2758:
  7805  0869  1471               	bsf	___lodiv@quotient,0
  7806  086A                     l2760:
  7807  086A  36A7               	lsrf	___lodiv@divisor+7,f
  7808  086B  0CA6               	rrf	___lodiv@divisor+6,f
  7809  086C  0CA5               	rrf	___lodiv@divisor+5,f
  7810  086D  0CA4               	rrf	___lodiv@divisor+4,f
  7811  086E  0CA3               	rrf	___lodiv@divisor+3,f
  7812  086F  0CA2               	rrf	___lodiv@divisor+2,f
  7813  0870  0CA1               	rrf	___lodiv@divisor+1,f
  7814  0871  0CA0               	rrf	___lodiv@divisor,f
  7815  0872  3001               	movlw	1
  7816  0873  02F9               	subwf	___lodiv@counter,f
  7817  0874  1D03               	btfss	3,2
  7818  0875  2877               	goto	u2801
  7819  0876  2878               	goto	u2800
  7820  0877                     u2801:
  7821  0877  282F               	goto	l2752
  7822  0878                     u2800:
  7823  0878                     l767:
  7824  0878  0871               	movf	___lodiv@quotient,w
  7825  0879  00A0               	movwf	?___lodiv
  7826  087A  0872               	movf	___lodiv@quotient+1,w
  7827  087B  00A1               	movwf	?___lodiv+1
  7828  087C  0873               	movf	___lodiv@quotient+2,w
  7829  087D  00A2               	movwf	?___lodiv+2
  7830  087E  0874               	movf	___lodiv@quotient+3,w
  7831  087F  00A3               	movwf	?___lodiv+3
  7832  0880  0875               	movf	___lodiv@quotient+4,w
  7833  0881  00A4               	movwf	?___lodiv+4
  7834  0882  0876               	movf	___lodiv@quotient+5,w
  7835  0883  00A5               	movwf	?___lodiv+5
  7836  0884  0877               	movf	___lodiv@quotient+6,w
  7837  0885  00A6               	movwf	?___lodiv+6
  7838  0886  0878               	movf	___lodiv@quotient+7,w
  7839  0887  00A7               	movwf	?___lodiv+7
  7840  0888                     l774:
  7841  0888  0008               	return
  7842  0889                     __end_of___lodiv:
  7843                           
  7844                           	psect	text17
  7845  1391                     __ptext17:	
  7846 ;; *************** function _strncmp *****************
  7847 ;; Defined at:
  7848 ;;		line 3 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\strncmp.c"
  7849 ;; Parameters:    Size  Location     Type
  7850 ;;  _l              2    0[COMMON] PTR const unsigned char 
  7851 ;;		 -> STR_7(14), STR_6(6), STR_5(11), STR_4(8), 
  7852 ;;  _r              2    2[COMMON] PTR const unsigned char 
  7853 ;;		 -> STR_19(3), STR_14(3), STR_10(3), 
  7854 ;;  n               2    4[COMMON] unsigned int 
  7855 ;; Auto vars:     Size  Location     Type
  7856 ;;  r               2    9[COMMON] PTR const unsigned char 
  7857 ;;		 -> STR_19(3), STR_14(3), STR_10(3), 
  7858 ;;  l               2    7[COMMON] PTR const unsigned char 
  7859 ;;		 -> STR_7(14), STR_6(6), STR_5(11), STR_4(8), 
  7860 ;; Return value:  Size  Location     Type
  7861 ;;                  2    0[COMMON] int 
  7862 ;; Registers used:
  7863 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath
  7864 ;; Tracked objects:
  7865 ;;		On entry : 0/0
  7866 ;;		On exit  : 0/0
  7867 ;;		Unchanged: 0/0
  7868 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  7869 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7870 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7871 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7872 ;;      Totals:        11       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7873 ;;Total ram usage:       11 bytes
  7874 ;; Hardware stack levels used: 1
  7875 ;; This function calls:
  7876 ;;		Nothing
  7877 ;; This function is called by:
  7878 ;;		_vfpfcnvrt
  7879 ;; This function uses a non-reentrant model
  7880 ;;
  7881                           
  7882                           
  7883                           ;psect for function _strncmp
  7884  1391                     _strncmp:
  7885  1391                     l2944:	
  7886                           ;incstack = 0
  7887                           ; Regs used in _strncmp: [wreg-fsr0h+status,2+status,0+pclath]
  7888                           
  7889  1391  0871               	movf	strncmp@_l+1,w
  7890  1392  00F8               	movwf	strncmp@l+1
  7891  1393  0870               	movf	strncmp@_l,w
  7892  1394  00F7               	movwf	strncmp@l
  7893  1395  0873               	movf	strncmp@_r+1,w
  7894  1396  00FA               	movwf	strncmp@r+1
  7895  1397  0872               	movf	strncmp@_r,w
  7896  1398  00F9               	movwf	strncmp@r
  7897  1399                     l2946:
  7898  1399  3001               	movlw	1
  7899  139A  02F4               	subwf	strncmp@n,f
  7900  139B  3000               	movlw	0
  7901  139C  3BF5               	subwfb	strncmp@n+1,f
  7902  139D  0A74               	incf	strncmp@n,w
  7903  139E  1D03               	skipz
  7904  139F  2BA4               	goto	u3161
  7905  13A0  0A75               	incf	strncmp@n+1,w
  7906  13A1  1D03               	btfss	3,2
  7907  13A2  2BA4               	goto	u3161
  7908  13A3  2BA5               	goto	u3160
  7909  13A4                     u3161:
  7910  13A4  2BB4               	goto	l2954
  7911  13A5                     u3160:
  7912  13A5                     l2948:
  7913  13A5  01F0               	clrf	?_strncmp
  7914  13A6  01F1               	clrf	?_strncmp+1
  7915  13A7  2BEC               	goto	l1131
  7916  13A8                     l2952:
  7917  13A8  3001               	movlw	1
  7918  13A9  07F7               	addwf	strncmp@l,f
  7919  13AA  3000               	movlw	0
  7920  13AB  3DF8               	addwfc	strncmp@l+1,f
  7921  13AC  3001               	movlw	1
  7922  13AD  07F9               	addwf	strncmp@r,f
  7923  13AE  3000               	movlw	0
  7924  13AF  3DFA               	addwfc	strncmp@r+1,f
  7925  13B0  3001               	movlw	1
  7926  13B1  02F4               	subwf	strncmp@n,f
  7927  13B2  3000               	movlw	0
  7928  13B3  3BF5               	subwfb	strncmp@n+1,f
  7929  13B4                     l2954:
  7930  13B4  0877               	movf	strncmp@l,w
  7931  13B5  0084               	movwf	4
  7932  13B6  0878               	movf	strncmp@l+1,w
  7933  13B7  0085               	movwf	5
  7934  13B8  0012               	moviw fsr0++
  7935  13B9  1903               	btfsc	3,2
  7936  13BA  2BBC               	goto	u3171
  7937  13BB  2BBD               	goto	u3170
  7938  13BC                     u3171:
  7939  13BC  2BDC               	goto	l2962
  7940  13BD                     u3170:
  7941  13BD                     l2956:
  7942  13BD  0879               	movf	strncmp@r,w
  7943  13BE  0084               	movwf	4
  7944  13BF  087A               	movf	strncmp@r+1,w
  7945  13C0  0085               	movwf	5
  7946  13C1  0012               	moviw fsr0++
  7947  13C2  1903               	btfsc	3,2
  7948  13C3  2BC5               	goto	u3181
  7949  13C4  2BC6               	goto	u3180
  7950  13C5                     u3181:
  7951  13C5  2BDC               	goto	l2962
  7952  13C6                     u3180:
  7953  13C6                     l2958:
  7954  13C6  0874               	movf	strncmp@n,w
  7955  13C7  0475               	iorwf	strncmp@n+1,w
  7956  13C8  1903               	btfsc	3,2
  7957  13C9  2BCB               	goto	u3191
  7958  13CA  2BCC               	goto	u3190
  7959  13CB                     u3191:
  7960  13CB  2BDC               	goto	l2962
  7961  13CC                     u3190:
  7962  13CC                     l2960:
  7963  13CC  0879               	movf	strncmp@r,w
  7964  13CD  0084               	movwf	4
  7965  13CE  087A               	movf	strncmp@r+1,w
  7966  13CF  0085               	movwf	5
  7967  13D0  0800               	movf	0,w	;code access
  7968  13D1  00F6               	movwf	??_strncmp
  7969  13D2  0877               	movf	strncmp@l,w
  7970  13D3  0084               	movwf	4
  7971  13D4  0878               	movf	strncmp@l+1,w
  7972  13D5  0085               	movwf	5
  7973  13D6  0800               	movf	0,w	;code access
  7974  13D7  0676               	xorwf	??_strncmp,w
  7975  13D8  1903               	skipnz
  7976  13D9  2BDB               	goto	u3201
  7977  13DA  2BDC               	goto	u3200
  7978  13DB                     u3201:
  7979  13DB  2BA8               	goto	l2952
  7980  13DC                     u3200:
  7981  13DC                     l2962:
  7982  13DC  0877               	movf	strncmp@l,w
  7983  13DD  0084               	movwf	4
  7984  13DE  0878               	movf	strncmp@l+1,w
  7985  13DF  0085               	movwf	5
  7986  13E0  0800               	movf	0,w	;code access
  7987  13E1  00F6               	movwf	??_strncmp
  7988  13E2  0879               	movf	strncmp@r,w
  7989  13E3  0084               	movwf	4
  7990  13E4  087A               	movf	strncmp@r+1,w
  7991  13E5  0085               	movwf	5
  7992  13E6  0800               	movf	0,w	;code access
  7993  13E7  0276               	subwf	??_strncmp,w
  7994  13E8  00F0               	movwf	?_strncmp
  7995  13E9  01F1               	clrf	?_strncmp+1
  7996  13EA  1C03               	skipc
  7997  13EB  03F1               	decf	?_strncmp+1,f
  7998  13EC                     l1131:
  7999  13EC  0008               	return
  8000  13ED                     __end_of_strncmp:
  8001                           
  8002                           	psect	text18
  8003  0056                     __ptext18:	
  8004 ;; *************** function _dtoa *****************
  8005 ;; Defined at:
  8006 ;;		line 287 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c"
  8007 ;; Parameters:    Size  Location     Type
  8008 ;;  fp              1    wreg     PTR struct _IO_FILE
  8009 ;;		 -> sprintf@f(5), 
  8010 ;;  d               8   16[BANK0 ] long long 
  8011 ;; Auto vars:     Size  Location     Type
  8012 ;;  fp              1   31[BANK0 ] PTR struct _IO_FILE
  8013 ;;		 -> sprintf@f(5), 
  8014 ;;  n               8   36[BANK0 ] long long 
  8015 ;;  i               2   44[BANK0 ] int 
  8016 ;;  s               2   34[BANK0 ] int 
  8017 ;;  w               2   32[BANK0 ] int 
  8018 ;;  p               2   29[BANK0 ] int 
  8019 ;; Return value:  Size  Location     Type
  8020 ;;                  2   16[BANK0 ] int 
  8021 ;; Registers used:
  8022 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  8023 ;; Tracked objects:
  8024 ;;		On entry : 0/0
  8025 ;;		On exit  : 0/0
  8026 ;;		Unchanged: 0/0
  8027 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  8028 ;;      Params:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8029 ;;      Locals:         0      19       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8030 ;;      Temps:          0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8031 ;;      Totals:         0      30       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8032 ;;Total ram usage:       30 bytes
  8033 ;; Hardware stack levels used: 1
  8034 ;; Hardware stack levels required when called: 4
  8035 ;; This function calls:
  8036 ;;		___aodiv
  8037 ;;		___aomod
  8038 ;;		_abs
  8039 ;;		_pad
  8040 ;; This function is called by:
  8041 ;;		_vfpfcnvrt
  8042 ;; This function uses a non-reentrant model
  8043 ;;
  8044                           
  8045                           
  8046                           ;psect for function _dtoa
  8047  0056                     _dtoa:
  8048                           
  8049                           ;incstack = 0
  8050                           ; Regs used in _dtoa: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  8051                           ;dtoa@fp stored from wreg
  8052  0056  0020               	movlb	0	; select bank0
  8053  0057  00BF               	movwf	dtoa@fp
  8054  0058                     l2850:
  8055                           
  8056                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 287: static int d
      +                          toa(FILE *fp, long long d);C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\d
      +                          oprnt.c: 288: {;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 28
      +                          9:     int i, p, s, w;;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprn
      +                          t.c: 290:     long long n;;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\d
      +                          oprnt.c: 293:     n = d;
  8057  0058  0830               	movf	dtoa@d,w
  8058  0059  00C4               	movwf	dtoa@n
  8059  005A  0831               	movf	dtoa@d+1,w
  8060  005B  00C5               	movwf	dtoa@n+1
  8061  005C  0832               	movf	dtoa@d+2,w
  8062  005D  00C6               	movwf	dtoa@n+2
  8063  005E  0833               	movf	dtoa@d+3,w
  8064  005F  00C7               	movwf	dtoa@n+3
  8065  0060  0834               	movf	dtoa@d+4,w
  8066  0061  00C8               	movwf	dtoa@n+4
  8067  0062  0835               	movf	dtoa@d+5,w
  8068  0063  00C9               	movwf	dtoa@n+5
  8069  0064  0836               	movf	dtoa@d+6,w
  8070  0065  00CA               	movwf	dtoa@n+6
  8071  0066  0837               	movf	dtoa@d+7,w
  8072  0067  00CB               	movwf	dtoa@n+7
  8073  0068                     l2852:
  8074                           
  8075                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 294:     s = n < 
      +                          0 ? 1 : 0;
  8076  0068  3044               	movlw	low dtoa@n
  8077  0069  0086               	movwf	6
  8078  006A  3000               	movlw	high dtoa@n
  8079  006B  0087               	movwf	7
  8080  006C  3F47               	moviw [7]fsr1
  8081  006D  00B8               	movwf	??_dtoa
  8082  006E  1BB8               	btfsc	??_dtoa,7
  8083  006F  2871               	goto	u2931
  8084  0070  2873               	goto	u2930
  8085  0071                     u2931:
  8086  0071  3001               	movlw	1
  8087  0072  2874               	goto	u2940
  8088  0073                     u2930:
  8089  0073  3000               	movlw	0
  8090  0074                     u2940:
  8091  0074  0020               	movlb	0	; select bank0
  8092  0075  00B9               	movwf	??_dtoa+1
  8093  0076  01BA               	clrf	??_dtoa+2
  8094  0077  0839               	movf	??_dtoa+1,w
  8095  0078  00C2               	movwf	dtoa@s
  8096  0079  083A               	movf	??_dtoa+2,w
  8097  007A  00C3               	movwf	dtoa@s+1
  8098  007B                     l2854:
  8099                           
  8100                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 295:     if (s) {
  8101  007B  0842               	movf	dtoa@s,w
  8102  007C  0443               	iorwf	dtoa@s+1,w
  8103  007D  1903               	btfsc	3,2
  8104  007E  2880               	goto	u2951
  8105  007F  2881               	goto	u2950
  8106  0080                     u2951:
  8107  0080  289F               	goto	l1034
  8108  0081                     u2950:
  8109  0081                     l2856:
  8110                           
  8111                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 296:         n = 
      +                          -n;
  8112  0081  09C4               	comf	dtoa@n,f
  8113  0082  09C5               	comf	dtoa@n+1,f
  8114  0083  09C6               	comf	dtoa@n+2,f
  8115  0084  09C7               	comf	dtoa@n+3,f
  8116  0085  09C8               	comf	dtoa@n+4,f
  8117  0086  09C9               	comf	dtoa@n+5,f
  8118  0087  09CA               	comf	dtoa@n+6,f
  8119  0088  09CB               	comf	dtoa@n+7,f
  8120  0089  0AC4               	incf	dtoa@n,f
  8121  008A  1D03               	skipz
  8122  008B  289F               	goto	u296lld
  8123  008C  0AC5               	incf	dtoa@n+1,f
  8124  008D  1D03               	skipz
  8125  008E  289F               	goto	u296lld
  8126  008F  0AC6               	incf	dtoa@n+2,f
  8127  0090  1D03               	skipz
  8128  0091  289F               	goto	u296lld
  8129  0092  0AC7               	incf	dtoa@n+3,f
  8130  0093  1D03               	skipz
  8131  0094  289F               	goto	u296lld
  8132  0095  0AC8               	incf	dtoa@n+4,f
  8133  0096  1D03               	skipz
  8134  0097  289F               	goto	u296lld
  8135  0098  0AC9               	incf	dtoa@n+5,f
  8136  0099  1D03               	skipz
  8137  009A  289F               	goto	u296lld
  8138  009B  0ACA               	incf	dtoa@n+6,f
  8139  009C  1D03               	skipz
  8140  009D  289F               	goto	u296lld
  8141  009E  0ACB               	incf	dtoa@n+7,f
  8142  009F                     u296lld:
  8143  009F                     l1034:	
  8144                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 297:     }
  8145                           
  8146                           
  8147                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 300:     if (!(pr
      +                          ec < 0)) {
  8148  009F  0021               	movlb	1	; select bank1
  8149  00A0  1BE1               	btfsc	(_prec+1)^(0+128),7
  8150  00A1  28A3               	goto	u2971
  8151  00A2  28A4               	goto	u2970
  8152  00A3                     u2971:
  8153  00A3  28A8               	goto	l1035
  8154  00A4                     u2970:
  8155  00A4                     l2858:
  8156                           
  8157                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 301:         flag
      +                          s &= ~(1 << 1);
  8158  00A4  30FD               	movlw	253
  8159  00A5  05E2               	andwf	_flags^(0+128),f
  8160  00A6  30FF               	movlw	255
  8161  00A7  05E3               	andwf	(_flags+1)^(0+128),f
  8162  00A8                     l1035:	
  8163                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 302:     }
  8164                           
  8165                           
  8166                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 303:     p = (0 <
      +                           prec) ? prec : 1;
  8167  00A8  0861               	movf	(_prec+1)^(0+128),w
  8168  00A9  3A80               	xorlw	128
  8169  00AA  0020               	movlb	0	; select bank0
  8170  00AB  00B8               	movwf	??_dtoa
  8171  00AC  3080               	movlw	128
  8172  00AD  0238               	subwf	??_dtoa,w
  8173  00AE  1D03               	skipz
  8174  00AF  28B3               	goto	u2985
  8175  00B0  3001               	movlw	1
  8176  00B1  0021               	movlb	1	; select bank1
  8177  00B2  0260               	subwf	_prec^(0+128),w
  8178  00B3                     u2985:
  8179  00B3  1803               	skipnc
  8180  00B4  28B6               	goto	u2981
  8181  00B5  28B7               	goto	u2980
  8182  00B6                     u2981:
  8183  00B6  28BD               	goto	l2862
  8184  00B7                     u2980:
  8185  00B7                     l2860:
  8186  00B7  3001               	movlw	1
  8187  00B8  0020               	movlb	0	; select bank0
  8188  00B9  00BD               	movwf	dtoa@p
  8189  00BA  3000               	movlw	0
  8190  00BB  00BE               	movwf	dtoa@p+1
  8191  00BC  28C5               	goto	l1039
  8192  00BD                     l2862:
  8193  00BD  0021               	movlb	1	; select bank1
  8194  00BE  0861               	movf	(_prec+1)^(0+128),w
  8195  00BF  0020               	movlb	0	; select bank0
  8196  00C0  00BE               	movwf	dtoa@p+1
  8197  00C1  0021               	movlb	1	; select bank1
  8198  00C2  0860               	movf	_prec^(0+128),w
  8199  00C3  0020               	movlb	0	; select bank0
  8200  00C4  00BD               	movwf	dtoa@p
  8201  00C5                     l1039:
  8202                           
  8203                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 304:     w = widt
      +                          h;
  8204  00C5  0021               	movlb	1	; select bank1
  8205  00C6  085F               	movf	(_width+1)^(0+128),w
  8206  00C7  0020               	movlb	0	; select bank0
  8207  00C8  00C1               	movwf	dtoa@w+1
  8208  00C9  0021               	movlb	1	; select bank1
  8209  00CA  085E               	movf	_width^(0+128),w
  8210  00CB  0020               	movlb	0	; select bank0
  8211  00CC  00C0               	movwf	dtoa@w
  8212  00CD                     l2864:
  8213                           
  8214                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 305:     if (s ||
      +                           (flags & (1 << 2))) {
  8215  00CD  0842               	movf	dtoa@s,w
  8216  00CE  0443               	iorwf	dtoa@s+1,w
  8217  00CF  1D03               	btfss	3,2
  8218  00D0  28D2               	goto	u2991
  8219  00D1  28D3               	goto	u2990
  8220  00D2                     u2991:
  8221  00D2  28D8               	goto	l2868
  8222  00D3                     u2990:
  8223  00D3                     l2866:
  8224  00D3  0021               	movlb	1	; select bank1
  8225  00D4  1D62               	btfss	_flags^(0+128),2
  8226  00D5  28D7               	goto	u3001
  8227  00D6  28D8               	goto	u3000
  8228  00D7                     u3001:
  8229  00D7  28DD               	goto	l1040
  8230  00D8                     u3000:
  8231  00D8                     l2868:
  8232                           
  8233                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 306:         --w;
  8234  00D8  30FF               	movlw	255
  8235  00D9  0020               	movlb	0	; select bank0
  8236  00DA  07C0               	addwf	dtoa@w,f
  8237  00DB  30FF               	movlw	255
  8238  00DC  3DC1               	addwfc	dtoa@w+1,f
  8239  00DD                     l1040:	
  8240                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 307:     }
  8241                           
  8242                           
  8243                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 310:     i = size
      +                          of(dbuf) - 1;
  8244  00DD  301F               	movlw	31
  8245  00DE  0020               	movlb	0	; select bank0
  8246  00DF  00CC               	movwf	dtoa@i
  8247  00E0  3000               	movlw	0
  8248  00E1  00CD               	movwf	dtoa@i+1
  8249  00E2                     l2870:
  8250                           
  8251                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 311:     dbuf[i] 
      +                          = '\0';
  8252  00E2  0023               	movlb	3	; select bank3
  8253  00E3  01BF               	clrf	(_dbuf^(0+384)+31)
  8254                           
  8255                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 312:     while (!
      +                          (i < 1) && (n || (0 < p) || ((0 < w) && (flags & (1 << 1))))) {
  8256  00E4  294E               	goto	l1043
  8257  00E5                     l2872:
  8258                           
  8259                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 313:         --i;
  8260  00E5  30FF               	movlw	255
  8261  00E6  0020               	movlb	0	; select bank0
  8262  00E7  07CC               	addwf	dtoa@i,f
  8263  00E8  30FF               	movlw	255
  8264  00E9  3DCD               	addwfc	dtoa@i+1,f
  8265  00EA                     l2874:
  8266                           
  8267                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 314:         dbuf
      +                          [i] = (char)((int)'0' + abs(n % 10));
  8268  00EA  300A               	movlw	10
  8269  00EB  00A0               	movwf	___aomod@divisor
  8270  00EC  01A1               	clrf	___aomod@divisor+1
  8271  00ED  01A2               	clrf	___aomod@divisor+2
  8272  00EE  01A3               	clrf	___aomod@divisor+3
  8273  00EF  01A4               	clrf	___aomod@divisor+4
  8274  00F0  01A5               	clrf	___aomod@divisor+5
  8275  00F1  01A6               	clrf	___aomod@divisor+6
  8276  00F2  01A7               	clrf	___aomod@divisor+7
  8277  00F3  0844               	movf	dtoa@n,w
  8278  00F4  00A8               	movwf	___aomod@dividend
  8279  00F5  0845               	movf	dtoa@n+1,w
  8280  00F6  00A9               	movwf	___aomod@dividend+1
  8281  00F7  0846               	movf	dtoa@n+2,w
  8282  00F8  00AA               	movwf	___aomod@dividend+2
  8283  00F9  0847               	movf	dtoa@n+3,w
  8284  00FA  00AB               	movwf	___aomod@dividend+3
  8285  00FB  0848               	movf	dtoa@n+4,w
  8286  00FC  00AC               	movwf	___aomod@dividend+4
  8287  00FD  0849               	movf	dtoa@n+5,w
  8288  00FE  00AD               	movwf	___aomod@dividend+5
  8289  00FF  084A               	movf	dtoa@n+6,w
  8290  0100  00AE               	movwf	___aomod@dividend+6
  8291  0101  084B               	movf	dtoa@n+7,w
  8292  0102  00AF               	movwf	___aomod@dividend+7
  8293  0103  318D  2528  3180   	fcall	___aomod
  8294  0106  0020               	movlb	0	; select bank0
  8295  0107  0821               	movf	?___aomod+1,w
  8296  0108  00F4               	movwf	abs@a+1
  8297  0109  0820               	movf	?___aomod,w
  8298  010A  00F3               	movwf	abs@a
  8299  010B  319F  2773  3180   	fcall	_abs
  8300  010E  0873               	movf	?_abs,w
  8301  010F  3E30               	addlw	48
  8302  0110  0020               	movlb	0	; select bank0
  8303  0111  00B8               	movwf	??_dtoa
  8304  0112  084C               	movf	dtoa@i,w
  8305  0113  3EA0               	addlw	(low (_dbuf| (0+256)))& (0+255)
  8306  0114  0086               	movwf	6
  8307  0115  3001               	movlw	1	; select bank3/4
  8308  0116  0087               	movwf	7
  8309  0117  0838               	movf	??_dtoa,w
  8310  0118  0081               	movwf	1
  8311  0119                     l2876:
  8312                           
  8313                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 315:         --p;
  8314  0119  30FF               	movlw	255
  8315  011A  07BD               	addwf	dtoa@p,f
  8316  011B  30FF               	movlw	255
  8317  011C  3DBE               	addwfc	dtoa@p+1,f
  8318  011D                     l2878:
  8319                           
  8320                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 316:         --w;
  8321  011D  30FF               	movlw	255
  8322  011E  07C0               	addwf	dtoa@w,f
  8323  011F  30FF               	movlw	255
  8324  0120  3DC1               	addwfc	dtoa@w+1,f
  8325  0121                     l2880:
  8326                           
  8327                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 317:         n = 
      +                          n / 10;
  8328  0121  300A               	movlw	10
  8329  0122  00A0               	movwf	___aodiv@divisor
  8330  0123  01A1               	clrf	___aodiv@divisor+1
  8331  0124  01A2               	clrf	___aodiv@divisor+2
  8332  0125  01A3               	clrf	___aodiv@divisor+3
  8333  0126  01A4               	clrf	___aodiv@divisor+4
  8334  0127  01A5               	clrf	___aodiv@divisor+5
  8335  0128  01A6               	clrf	___aodiv@divisor+6
  8336  0129  01A7               	clrf	___aodiv@divisor+7
  8337  012A  0844               	movf	dtoa@n,w
  8338  012B  00A8               	movwf	___aodiv@dividend
  8339  012C  0845               	movf	dtoa@n+1,w
  8340  012D  00A9               	movwf	___aodiv@dividend+1
  8341  012E  0846               	movf	dtoa@n+2,w
  8342  012F  00AA               	movwf	___aodiv@dividend+2
  8343  0130  0847               	movf	dtoa@n+3,w
  8344  0131  00AB               	movwf	___aodiv@dividend+3
  8345  0132  0848               	movf	dtoa@n+4,w
  8346  0133  00AC               	movwf	___aodiv@dividend+4
  8347  0134  0849               	movf	dtoa@n+5,w
  8348  0135  00AD               	movwf	___aodiv@dividend+5
  8349  0136  084A               	movf	dtoa@n+6,w
  8350  0137  00AE               	movwf	___aodiv@dividend+6
  8351  0138  084B               	movf	dtoa@n+7,w
  8352  0139  00AF               	movwf	___aodiv@dividend+7
  8353  013A  318E  26FF  3180   	fcall	___aodiv
  8354  013D  0020               	movlb	0	; select bank0
  8355  013E  0820               	movf	?___aodiv,w
  8356  013F  00C4               	movwf	dtoa@n
  8357  0140  0821               	movf	?___aodiv+1,w
  8358  0141  00C5               	movwf	dtoa@n+1
  8359  0142  0822               	movf	?___aodiv+2,w
  8360  0143  00C6               	movwf	dtoa@n+2
  8361  0144  0823               	movf	?___aodiv+3,w
  8362  0145  00C7               	movwf	dtoa@n+3
  8363  0146  0824               	movf	?___aodiv+4,w
  8364  0147  00C8               	movwf	dtoa@n+4
  8365  0148  0825               	movf	?___aodiv+5,w
  8366  0149  00C9               	movwf	dtoa@n+5
  8367  014A  0826               	movf	?___aodiv+6,w
  8368  014B  00CA               	movwf	dtoa@n+6
  8369  014C  0827               	movf	?___aodiv+7,w
  8370  014D  00CB               	movwf	dtoa@n+7
  8371  014E                     l1043:	
  8372                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 318:     }
  8373                           
  8374                           
  8375                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 312:     while (!
      +                          (i < 1) && (n || (0 < p) || ((0 < w) && (flags & (1 << 1))))) {
  8376  014E  0020               	movlb	0	; select bank0
  8377  014F  084D               	movf	dtoa@i+1,w
  8378  0150  3A80               	xorlw	128
  8379  0151  00B8               	movwf	??_dtoa
  8380  0152  3080               	movlw	128
  8381  0153  0238               	subwf	??_dtoa,w
  8382  0154  1D03               	skipz
  8383  0155  2958               	goto	u3015
  8384  0156  3001               	movlw	1
  8385  0157  024C               	subwf	dtoa@i,w
  8386  0158                     u3015:
  8387  0158  1C03               	skipc
  8388  0159  295B               	goto	u3011
  8389  015A  295C               	goto	u3010
  8390  015B                     u3011:
  8391  015B  2989               	goto	l2890
  8392  015C                     u3010:
  8393  015C                     l2882:
  8394  015C  0020               	movlb	0	; select bank0
  8395  015D  0844               	movf	dtoa@n,w
  8396  015E  0445               	iorwf	dtoa@n+1,w
  8397  015F  0446               	iorwf	dtoa@n+2,w
  8398  0160  0447               	iorwf	dtoa@n+3,w
  8399  0161  0448               	iorwf	dtoa@n+4,w
  8400  0162  0449               	iorwf	dtoa@n+5,w
  8401  0163  044A               	iorwf	dtoa@n+6,w
  8402  0164  044B               	iorwf	dtoa@n+7,w
  8403  0165  1D03               	skipz
  8404  0166  2968               	goto	u3021
  8405  0167  2969               	goto	u3020
  8406  0168                     u3021:
  8407  0168  28E5               	goto	l2872
  8408  0169                     u3020:
  8409  0169                     l2884:
  8410  0169  083E               	movf	dtoa@p+1,w
  8411  016A  3A80               	xorlw	128
  8412  016B  00B8               	movwf	??_dtoa
  8413  016C  3080               	movlw	128
  8414  016D  0238               	subwf	??_dtoa,w
  8415  016E  1D03               	skipz
  8416  016F  2972               	goto	u3035
  8417  0170  3001               	movlw	1
  8418  0171  023D               	subwf	dtoa@p,w
  8419  0172                     u3035:
  8420  0172  1803               	skipnc
  8421  0173  2975               	goto	u3031
  8422  0174  2976               	goto	u3030
  8423  0175                     u3031:
  8424  0175  28E5               	goto	l2872
  8425  0176                     u3030:
  8426  0176                     l2886:
  8427  0176  0020               	movlb	0	; select bank0
  8428  0177  0841               	movf	dtoa@w+1,w
  8429  0178  3A80               	xorlw	128
  8430  0179  00B8               	movwf	??_dtoa
  8431  017A  3080               	movlw	128
  8432  017B  0238               	subwf	??_dtoa,w
  8433  017C  1D03               	skipz
  8434  017D  2980               	goto	u3045
  8435  017E  3001               	movlw	1
  8436  017F  0240               	subwf	dtoa@w,w
  8437  0180                     u3045:
  8438  0180  1C03               	skipc
  8439  0181  2983               	goto	u3041
  8440  0182  2984               	goto	u3040
  8441  0183                     u3041:
  8442  0183  2989               	goto	l2890
  8443  0184                     u3040:
  8444  0184                     l2888:
  8445  0184  0021               	movlb	1	; select bank1
  8446  0185  18E2               	btfsc	_flags^(0+128),1
  8447  0186  2988               	goto	u3051
  8448  0187  2989               	goto	u3050
  8449  0188                     u3051:
  8450  0188  28E5               	goto	l2872
  8451  0189                     u3050:
  8452  0189                     l2890:
  8453                           
  8454                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 321:     if (s ||
      +                           (flags & (1 << 2))) {
  8455  0189  0020               	movlb	0	; select bank0
  8456  018A  0842               	movf	dtoa@s,w
  8457  018B  0443               	iorwf	dtoa@s+1,w
  8458  018C  1D03               	btfss	3,2
  8459  018D  298F               	goto	u3061
  8460  018E  2990               	goto	u3060
  8461  018F                     u3061:
  8462  018F  2995               	goto	l2894
  8463  0190                     u3060:
  8464  0190                     l2892:
  8465  0190  0021               	movlb	1	; select bank1
  8466  0191  1D62               	btfss	_flags^(0+128),2
  8467  0192  2994               	goto	u3071
  8468  0193  2995               	goto	u3070
  8469  0194                     u3071:
  8470  0194  29B2               	goto	l2904
  8471  0195                     u3070:
  8472  0195                     l2894:
  8473                           
  8474                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 322:         --i;
  8475  0195  30FF               	movlw	255
  8476  0196  0020               	movlb	0	; select bank0
  8477  0197  07CC               	addwf	dtoa@i,f
  8478  0198  30FF               	movlw	255
  8479  0199  3DCD               	addwfc	dtoa@i+1,f
  8480  019A                     l2896:
  8481                           
  8482                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 323:         dbuf
      +                          [i] = s ? '-' : '+';
  8483  019A  0842               	movf	dtoa@s,w
  8484  019B  0443               	iorwf	dtoa@s+1,w
  8485  019C  1D03               	btfss	3,2
  8486  019D  299F               	goto	u3081
  8487  019E  29A0               	goto	u3080
  8488  019F                     u3081:
  8489  019F  29A5               	goto	l2900
  8490  01A0                     u3080:
  8491  01A0                     l2898:
  8492  01A0  302B               	movlw	43
  8493  01A1  00BB               	movwf	_dtoa$1264
  8494  01A2  3000               	movlw	0
  8495  01A3  00BC               	movwf	_dtoa$1264+1
  8496  01A4  29A9               	goto	l2902
  8497  01A5                     l2900:
  8498  01A5  302D               	movlw	45
  8499  01A6  00BB               	movwf	_dtoa$1264
  8500  01A7  3000               	movlw	0
  8501  01A8  00BC               	movwf	_dtoa$1264+1
  8502  01A9                     l2902:
  8503  01A9  083B               	movf	_dtoa$1264,w
  8504  01AA  00B8               	movwf	??_dtoa
  8505  01AB  084C               	movf	dtoa@i,w
  8506  01AC  3EA0               	addlw	(low (_dbuf| (0+256)))& (0+255)
  8507  01AD  0086               	movwf	6
  8508  01AE  3001               	movlw	1	; select bank3/4
  8509  01AF  0087               	movwf	7
  8510  01B0  0838               	movf	??_dtoa,w
  8511  01B1  0081               	movwf	1
  8512  01B2                     l2904:
  8513                           
  8514                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 327:     return p
      +                          ad(fp, &dbuf[i], w);
  8515  01B2  0020               	movlb	0	; select bank0
  8516  01B3  084C               	movf	dtoa@i,w
  8517  01B4  3EA0               	addlw	(low (_dbuf| (0+256)))& (0+255)
  8518  01B5  00B8               	movwf	??_dtoa
  8519  01B6  0838               	movf	??_dtoa,w
  8520  01B7  00A4               	movwf	pad@buf
  8521  01B8  0841               	movf	dtoa@w+1,w
  8522  01B9  00A6               	movwf	pad@p+1
  8523  01BA  0840               	movf	dtoa@w,w
  8524  01BB  00A5               	movwf	pad@p
  8525  01BC  083F               	movf	dtoa@fp,w
  8526  01BD  3192  2283  3180   	fcall	_pad
  8527  01C0  0020               	movlb	0	; select bank0
  8528  01C1  0825               	movf	?_pad+1,w
  8529  01C2  00B1               	movwf	?_dtoa+1
  8530  01C3  0824               	movf	?_pad,w
  8531  01C4  00B0               	movwf	?_dtoa
  8532  01C5                     l1057:
  8533  01C5  0008               	return
  8534  01C6                     __end_of_dtoa:
  8535                           
  8536                           	psect	text19
  8537  1283                     __ptext19:	
  8538 ;; *************** function _pad *****************
  8539 ;; Defined at:
  8540 ;;		line 72 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c"
  8541 ;; Parameters:    Size  Location     Type
  8542 ;;  fp              1    wreg     PTR struct _IO_FILE
  8543 ;;		 -> sprintf@f(5), 
  8544 ;;  buf             1    4[BANK0 ] PTR unsigned char 
  8545 ;;		 -> dbuf(32), 
  8546 ;;  p               2    5[BANK0 ] int 
  8547 ;; Auto vars:     Size  Location     Type
  8548 ;;  fp              1   11[BANK0 ] PTR struct _IO_FILE
  8549 ;;		 -> sprintf@f(5), 
  8550 ;;  w               2    9[BANK0 ] int 
  8551 ;;  i               2    7[BANK0 ] int 
  8552 ;; Return value:  Size  Location     Type
  8553 ;;                  2    4[BANK0 ] int 
  8554 ;; Registers used:
  8555 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  8556 ;; Tracked objects:
  8557 ;;		On entry : 0/0
  8558 ;;		On exit  : 0/0
  8559 ;;		Unchanged: 0/0
  8560 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  8561 ;;      Params:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8562 ;;      Locals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8563 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8564 ;;      Totals:         1       8       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8565 ;;Total ram usage:        9 bytes
  8566 ;; Hardware stack levels used: 1
  8567 ;; Hardware stack levels required when called: 3
  8568 ;; This function calls:
  8569 ;;		_fputc
  8570 ;;		_fputs
  8571 ;;		_strlen
  8572 ;; This function is called by:
  8573 ;;		_dtoa
  8574 ;;		_utoa
  8575 ;; This function uses a non-reentrant model
  8576 ;;
  8577                           
  8578                           
  8579                           ;psect for function _pad
  8580  1283                     _pad:
  8581                           
  8582                           ;incstack = 0
  8583                           ; Regs used in _pad: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  8584                           ;pad@fp stored from wreg
  8585  1283  0020               	movlb	0	; select bank0
  8586  1284  00AB               	movwf	pad@fp
  8587  1285                     l2778:
  8588                           
  8589                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 72: static int pa
      +                          d(FILE *fp, char *buf, int p);C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\commo
      +                          n\doprnt.c: 73: {;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 
      +                          74:     int i, w;;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 
      +                          77:     if (flags & (1 << 0)) {
  8590  1285  0021               	movlb	1	; select bank1
  8591  1286  1C62               	btfss	_flags^(0+128),0
  8592  1287  2A89               	goto	u2851
  8593  1288  2A8A               	goto	u2850
  8594  1289                     u2851:
  8595  1289  2A93               	goto	l2782
  8596  128A                     u2850:
  8597  128A                     l2780:
  8598                           
  8599                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 78:         fputs
      +                          ((const char *)buf, fp);
  8600  128A  0020               	movlb	0	; select bank0
  8601  128B  082B               	movf	pad@fp,w
  8602  128C  00FC               	movwf	??_pad
  8603  128D  087C               	movf	??_pad,w
  8604  128E  00F8               	movwf	fputs@fp
  8605  128F  0824               	movf	pad@buf,w
  8606  1290  3190  206B  3192   	fcall	_fputs
  8607  1293                     l2782:
  8608                           
  8609                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 82:     w = (p < 
      +                          0) ? 0 : p;
  8610  1293  0020               	movlb	0	; select bank0
  8611  1294  1BA6               	btfsc	pad@p+1,7
  8612  1295  2A97               	goto	u2861
  8613  1296  2A98               	goto	u2860
  8614  1297                     u2861:
  8615  1297  2A9D               	goto	l2786
  8616  1298                     u2860:
  8617  1298                     l2784:
  8618  1298  0826               	movf	pad@p+1,w
  8619  1299  00AA               	movwf	pad@w+1
  8620  129A  0825               	movf	pad@p,w
  8621  129B  00A9               	movwf	pad@w
  8622  129C  2A9F               	goto	l1026
  8623  129D                     l2786:
  8624  129D  01A9               	clrf	pad@w
  8625  129E  01AA               	clrf	pad@w+1
  8626  129F                     l1026:
  8627                           
  8628                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 83:     i = 0;
  8629  129F  01A7               	clrf	pad@i
  8630  12A0  01A8               	clrf	pad@i+1
  8631                           
  8632                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 84:     while (i 
      +                          < w) {
  8633  12A1  2AB3               	goto	l2792
  8634  12A2                     l2788:
  8635                           
  8636                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 85:         fputc
      +                          (' ', fp);
  8637  12A2  3020               	movlw	32
  8638  12A3  00F0               	movwf	fputc@c
  8639  12A4  3000               	movlw	0
  8640  12A5  00F1               	movwf	fputc@c+1
  8641  12A6  0020               	movlb	0	; select bank0
  8642  12A7  082B               	movf	pad@fp,w
  8643  12A8  00FC               	movwf	??_pad
  8644  12A9  087C               	movf	??_pad,w
  8645  12AA  00F2               	movwf	fputc@fp
  8646  12AB  3180  2007  3192   	fcall	_fputc
  8647  12AE                     l2790:
  8648                           
  8649                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 86:         ++i;
  8650  12AE  3001               	movlw	1
  8651  12AF  0020               	movlb	0	; select bank0
  8652  12B0  07A7               	addwf	pad@i,f
  8653  12B1  3000               	movlw	0
  8654  12B2  3DA8               	addwfc	pad@i+1,f
  8655  12B3                     l2792:
  8656                           
  8657                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 84:     while (i 
      +                          < w) {
  8658  12B3  0828               	movf	pad@i+1,w
  8659  12B4  3A80               	xorlw	128
  8660  12B5  00FC               	movwf	??_pad
  8661  12B6  082A               	movf	pad@w+1,w
  8662  12B7  3A80               	xorlw	128
  8663  12B8  027C               	subwf	??_pad,w
  8664  12B9  1D03               	skipz
  8665  12BA  2ABD               	goto	u2875
  8666  12BB  0829               	movf	pad@w,w
  8667  12BC  0227               	subwf	pad@i,w
  8668  12BD                     u2875:
  8669  12BD  1C03               	skipc
  8670  12BE  2AC0               	goto	u2871
  8671  12BF  2AC1               	goto	u2870
  8672  12C0                     u2871:
  8673  12C0  2AA2               	goto	l2788
  8674  12C1                     u2870:
  8675  12C1                     l1029:
  8676                           
  8677                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 90:     if (!(fla
      +                          gs & (1 << 0))) {
  8678  12C1  0021               	movlb	1	; select bank1
  8679  12C2  1862               	btfsc	_flags^(0+128),0
  8680  12C3  2AC5               	goto	u2881
  8681  12C4  2AC6               	goto	u2880
  8682  12C5                     u2881:
  8683  12C5  2ACF               	goto	l2796
  8684  12C6                     u2880:
  8685  12C6                     l2794:
  8686                           
  8687                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 91:         fputs
      +                          ((const char *)buf, fp);
  8688  12C6  0020               	movlb	0	; select bank0
  8689  12C7  082B               	movf	pad@fp,w
  8690  12C8  00FC               	movwf	??_pad
  8691  12C9  087C               	movf	??_pad,w
  8692  12CA  00F8               	movwf	fputs@fp
  8693  12CB  0824               	movf	pad@buf,w
  8694  12CC  3190  206B  3192   	fcall	_fputs
  8695  12CF                     l2796:
  8696                           
  8697                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 94:     return (i
      +                          nt)(strlen(buf) + (size_t)w);
  8698  12CF  0020               	movlb	0	; select bank0
  8699  12D0  0824               	movf	pad@buf,w
  8700  12D1  319F  278D  3192   	fcall	_strlen
  8701  12D4  0020               	movlb	0	; select bank0
  8702  12D5  0829               	movf	pad@w,w
  8703  12D6  0770               	addwf	?_strlen,w
  8704  12D7  00A4               	movwf	?_pad
  8705  12D8  082A               	movf	pad@w+1,w
  8706  12D9  3D71               	addwfc	?_strlen+1,w
  8707  12DA  00A5               	movwf	?_pad+1
  8708  12DB                     l1031:
  8709  12DB  0008               	return
  8710  12DC                     __end_of_pad:
  8711                           
  8712                           	psect	text20
  8713  1F8D                     __ptext20:	
  8714 ;; *************** function _strlen *****************
  8715 ;; Defined at:
  8716 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\strlen.c"
  8717 ;; Parameters:    Size  Location     Type
  8718 ;;  s               1    wreg     PTR const unsigned char 
  8719 ;;		 -> dbuf(32), 
  8720 ;; Auto vars:     Size  Location     Type
  8721 ;;  s               1    4[COMMON] PTR const unsigned char 
  8722 ;;		 -> dbuf(32), 
  8723 ;;  a               1    3[COMMON] PTR const unsigned char 
  8724 ;;		 -> dbuf(32), 
  8725 ;; Return value:  Size  Location     Type
  8726 ;;                  2    0[COMMON] unsigned int 
  8727 ;; Registers used:
  8728 ;;		wreg, fsr1l, fsr1h, status,2, status,0
  8729 ;; Tracked objects:
  8730 ;;		On entry : 0/0
  8731 ;;		On exit  : 0/0
  8732 ;;		Unchanged: 0/0
  8733 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  8734 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8735 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8736 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8737 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8738 ;;Total ram usage:        5 bytes
  8739 ;; Hardware stack levels used: 1
  8740 ;; This function calls:
  8741 ;;		Nothing
  8742 ;; This function is called by:
  8743 ;;		_pad
  8744 ;; This function uses a non-reentrant model
  8745 ;;
  8746                           
  8747                           
  8748                           ;psect for function _strlen
  8749  1F8D                     _strlen:
  8750                           
  8751                           ;incstack = 0
  8752                           ; Regs used in _strlen: [wreg+fsr1l+fsr1h+status,2+status,0]
  8753                           ;strlen@s stored from wreg
  8754  1F8D  00F4               	movwf	strlen@s
  8755  1F8E                     l2590:
  8756  1F8E  0874               	movf	strlen@s,w
  8757  1F8F  00F2               	movwf	??_strlen
  8758  1F90  0872               	movf	??_strlen,w
  8759  1F91  00F3               	movwf	strlen@a
  8760  1F92  2F97               	goto	l2594
  8761  1F93                     l2592:
  8762  1F93  3001               	movlw	1
  8763  1F94  00F2               	movwf	??_strlen
  8764  1F95  0872               	movf	??_strlen,w
  8765  1F96  07F4               	addwf	strlen@s,f
  8766  1F97                     l2594:
  8767  1F97  0874               	movf	strlen@s,w
  8768  1F98  0086               	movwf	6
  8769  1F99  3001               	movlw	1	; select bank2/3
  8770  1F9A  0087               	movwf	7
  8771  1F9B  0801               	movf	1,w
  8772  1F9C  1D03               	btfss	3,2
  8773  1F9D  2F9F               	goto	u2421
  8774  1F9E  2FA0               	goto	u2420
  8775  1F9F                     u2421:
  8776  1F9F  2F93               	goto	l2592
  8777  1FA0                     u2420:
  8778  1FA0                     l2596:
  8779  1FA0  0873               	movf	strlen@a,w
  8780  1FA1  0274               	subwf	strlen@s,w
  8781  1FA2  00F0               	movwf	?_strlen
  8782  1FA3  01F1               	clrf	?_strlen+1
  8783  1FA4  1BF0               	btfsc	?_strlen,7
  8784  1FA5  03F1               	decf	?_strlen+1,f
  8785  1FA6                     l1127:
  8786  1FA6  0008               	return
  8787  1FA7                     __end_of_strlen:
  8788                           
  8789                           	psect	text21
  8790  106B                     __ptext21:	
  8791 ;; *************** function _fputs *****************
  8792 ;; Defined at:
  8793 ;;		line 8 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\nf_fputs.c"
  8794 ;; Parameters:    Size  Location     Type
  8795 ;;  s               1    wreg     PTR const unsigned char 
  8796 ;;		 -> dbuf(32), 
  8797 ;;  fp              1    8[COMMON] PTR struct _IO_FILE
  8798 ;;		 -> sprintf@f(5), 
  8799 ;; Auto vars:     Size  Location     Type
  8800 ;;  s               1    3[BANK0 ] PTR const unsigned char 
  8801 ;;		 -> dbuf(32), 
  8802 ;;  i               2    1[BANK0 ] int 
  8803 ;;  c               1    0[BANK0 ] unsigned char 
  8804 ;; Return value:  Size  Location     Type
  8805 ;;                  2    8[COMMON] int 
  8806 ;; Registers used:
  8807 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  8808 ;; Tracked objects:
  8809 ;;		On entry : 0/0
  8810 ;;		On exit  : 0/0
  8811 ;;		Unchanged: 0/0
  8812 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  8813 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8814 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8815 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8816 ;;      Totals:         4       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8817 ;;Total ram usage:        8 bytes
  8818 ;; Hardware stack levels used: 1
  8819 ;; Hardware stack levels required when called: 2
  8820 ;; This function calls:
  8821 ;;		_fputc
  8822 ;; This function is called by:
  8823 ;;		_pad
  8824 ;; This function uses a non-reentrant model
  8825 ;;
  8826                           
  8827                           
  8828                           ;psect for function _fputs
  8829  106B                     _fputs:
  8830                           
  8831                           ;incstack = 0
  8832                           ; Regs used in _fputs: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  8833                           ;fputs@s stored from wreg
  8834  106B  0020               	movlb	0	; select bank0
  8835  106C  00A3               	movwf	fputs@s
  8836  106D                     l2582:
  8837  106D  01A1               	clrf	fputs@i
  8838  106E  01A2               	clrf	fputs@i+1
  8839  106F  2883               	goto	l2588
  8840  1070                     l2584:
  8841  1070  0820               	movf	fputs@c,w
  8842  1071  00F9               	movwf	??_fputs
  8843  1072  01FA               	clrf	??_fputs+1
  8844  1073  0879               	movf	??_fputs,w
  8845  1074  00F0               	movwf	fputc@c
  8846  1075  087A               	movf	??_fputs+1,w
  8847  1076  00F1               	movwf	fputc@c+1
  8848  1077  0878               	movf	fputs@fp,w
  8849  1078  00FB               	movwf	??_fputs+2
  8850  1079  087B               	movf	??_fputs+2,w
  8851  107A  00F2               	movwf	fputc@fp
  8852  107B  3180  2007  3190   	fcall	_fputc
  8853  107E                     l2586:
  8854  107E  3001               	movlw	1
  8855  107F  0020               	movlb	0	; select bank0
  8856  1080  07A1               	addwf	fputs@i,f
  8857  1081  3000               	movlw	0
  8858  1082  3DA2               	addwfc	fputs@i+1,f
  8859  1083                     l2588:
  8860  1083  0821               	movf	fputs@i,w
  8861  1084  0723               	addwf	fputs@s,w
  8862  1085  00F9               	movwf	??_fputs
  8863  1086  0879               	movf	??_fputs,w
  8864  1087  0086               	movwf	6
  8865  1088  3001               	movlw	1	; select bank2/3
  8866  1089  0087               	movwf	7
  8867  108A  0801               	movf	1,w
  8868  108B  00FA               	movwf	??_fputs+1
  8869  108C  087A               	movf	??_fputs+1,w
  8870  108D  00A0               	movwf	fputs@c
  8871  108E  0820               	movf	fputs@c,w
  8872  108F  1D03               	btfss	3,2
  8873  1090  2892               	goto	u2411
  8874  1091  2893               	goto	u2410
  8875  1092                     u2411:
  8876  1092  2870               	goto	l2584
  8877  1093                     u2410:
  8878  1093                     l1118:
  8879  1093  0008               	return
  8880  1094                     __end_of_fputs:
  8881                           
  8882                           	psect	text22
  8883  0007                     __ptext22:	
  8884 ;; *************** function _fputc *****************
  8885 ;; Defined at:
  8886 ;;		line 8 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\nf_fputc.c"
  8887 ;; Parameters:    Size  Location     Type
  8888 ;;  c               2    0[COMMON] int 
  8889 ;;  fp              1    2[COMMON] PTR struct _IO_FILE
  8890 ;;		 -> sprintf@f(5), 
  8891 ;; Auto vars:     Size  Location     Type
  8892 ;;		None
  8893 ;; Return value:  Size  Location     Type
  8894 ;;                  2    0[COMMON] int 
  8895 ;; Registers used:
  8896 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  8897 ;; Tracked objects:
  8898 ;;		On entry : 0/0
  8899 ;;		On exit  : 0/0
  8900 ;;		Unchanged: 0/0
  8901 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  8902 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8903 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8904 ;;      Temps:          5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8905 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8906 ;;Total ram usage:        8 bytes
  8907 ;; Hardware stack levels used: 1
  8908 ;; Hardware stack levels required when called: 1
  8909 ;; This function calls:
  8910 ;;		_putch
  8911 ;; This function is called by:
  8912 ;;		_pad
  8913 ;;		_vfpfcnvrt
  8914 ;;		_fputs
  8915 ;; This function uses a non-reentrant model
  8916 ;;
  8917                           
  8918                           
  8919                           ;psect for function _fputc
  8920  0007                     _fputc:
  8921  0007                     l2560:	
  8922                           ;incstack = 0
  8923                           ; Regs used in _fputc: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  8924                           
  8925  0007  0872               	movf	fputc@fp,w
  8926  0008  1903               	btfsc	3,2
  8927  0009  280B               	goto	u2351
  8928  000A  280C               	goto	u2350
  8929  000B                     u2351:
  8930  000B  2811               	goto	l2564
  8931  000C                     u2350:
  8932  000C                     l2562:
  8933  000C  0872               	movf	fputc@fp,w
  8934  000D  1D03               	btfss	3,2
  8935  000E  2810               	goto	u2361
  8936  000F  2811               	goto	u2360
  8937  0010                     u2361:
  8938  0010  2816               	goto	l2566
  8939  0011                     u2360:
  8940  0011                     l2564:
  8941  0011  0870               	movf	fputc@c,w
  8942  0012  3180  2006  3180   	fcall	_putch
  8943  0015  2855               	goto	l1110
  8944  0016                     l2566:
  8945  0016  0872               	movf	fputc@fp,w
  8946  0017  3E03               	addlw	3
  8947  0018  0086               	movwf	6
  8948  0019  0187               	clrf	7
  8949  001A  0016               	moviw fsr1++
  8950  001B  0401               	iorwf	1,w
  8951  001C  1903               	btfsc	3,2
  8952  001D  281F               	goto	u2371
  8953  001E  2820               	goto	u2370
  8954  001F                     u2371:
  8955  001F  283D               	goto	l2570
  8956  0020                     u2370:
  8957  0020                     l2568:
  8958  0020  0872               	movf	fputc@fp,w
  8959  0021  3E03               	addlw	3
  8960  0022  0086               	movwf	6
  8961  0023  0187               	clrf	7
  8962  0024  3F40               	moviw [0]fsr1
  8963  0025  00F3               	movwf	??_fputc
  8964  0026  3F41               	moviw [1]fsr1
  8965  0027  00F4               	movwf	??_fputc+1
  8966  0028  0A72               	incf	fputc@fp,w
  8967  0029  0086               	movwf	6
  8968  002A  0187               	clrf	7
  8969  002B  3F40               	moviw [0]fsr1
  8970  002C  00F5               	movwf	??_fputc+2
  8971  002D  3F41               	moviw [1]fsr1
  8972  002E  00F6               	movwf	??_fputc+3
  8973  002F  0876               	movf	??_fputc+3,w
  8974  0030  3A80               	xorlw	128
  8975  0031  00F7               	movwf	??_fputc+4
  8976  0032  0874               	movf	??_fputc+1,w
  8977  0033  3A80               	xorlw	128
  8978  0034  0277               	subwf	??_fputc+4,w
  8979  0035  1D03               	skipz
  8980  0036  2839               	goto	u2385
  8981  0037  0873               	movf	??_fputc,w
  8982  0038  0275               	subwf	??_fputc+2,w
  8983  0039                     u2385:
  8984  0039  1803               	skipnc
  8985  003A  283C               	goto	u2381
  8986  003B  283D               	goto	u2380
  8987  003C                     u2381:
  8988  003C  2855               	goto	l1110
  8989  003D                     u2380:
  8990  003D                     l2570:
  8991  003D  0870               	movf	fputc@c,w
  8992  003E  00F3               	movwf	??_fputc
  8993  003F  0872               	movf	fputc@fp,w
  8994  0040  0086               	movwf	6
  8995  0041  0187               	clrf	7
  8996  0042  0A72               	incf	fputc@fp,w
  8997  0043  0084               	movwf	4
  8998  0044  0185               	clrf	5
  8999  0045  0800               	movf	0,w
  9000  0046  0701               	addwf	1,w
  9001  0047  00F4               	movwf	??_fputc+1
  9002  0048  0874               	movf	??_fputc+1,w
  9003  0049  0086               	movwf	6
  9004  004A  0187               	clrf	7
  9005  004B  0873               	movf	??_fputc,w
  9006  004C  0081               	movwf	1
  9007  004D                     l2572:
  9008  004D  0A72               	incf	fputc@fp,w
  9009  004E  0086               	movwf	6
  9010  004F  0187               	clrf	7
  9011  0050  3001               	movlw	1
  9012  0051  0781               	addwf	1,f
  9013  0052  3141               	addfsr 1,1
  9014  0053  1803               	skipnc
  9015  0054  0A81               	incf	1,f
  9016  0055                     l1110:
  9017  0055  0008               	return
  9018  0056                     __end_of_fputc:
  9019                           
  9020                           	psect	text23
  9021  0006                     __ptext23:	
  9022 ;; *************** function _putch *****************
  9023 ;; Defined at:
  9024 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\putch.c"
  9025 ;; Parameters:    Size  Location     Type
  9026 ;;  c               1    wreg     unsigned char 
  9027 ;; Auto vars:     Size  Location     Type
  9028 ;;  c               1    0[COMMON] unsigned char 
  9029 ;; Return value:  Size  Location     Type
  9030 ;;                  1    wreg      void 
  9031 ;; Registers used:
  9032 ;;		wreg
  9033 ;; Tracked objects:
  9034 ;;		On entry : 0/0
  9035 ;;		On exit  : 0/0
  9036 ;;		Unchanged: 0/0
  9037 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  9038 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9039 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9040 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9041 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9042 ;;Total ram usage:        0 bytes
  9043 ;; Hardware stack levels used: 1
  9044 ;; This function calls:
  9045 ;;		Nothing
  9046 ;; This function is called by:
  9047 ;;		_fputc
  9048 ;; This function uses a non-reentrant model
  9049 ;;
  9050                           
  9051                           
  9052                           ;psect for function _putch
  9053  0006                     _putch:
  9054  0006                     l1121:	
  9055                           ;incstack = 0
  9056                           ; Regs used in _putch: [wreg]
  9057                           
  9058  0006  0008               	return
  9059  0007                     __end_of_putch:
  9060                           
  9061                           	psect	text24
  9062  1F73                     __ptext24:	
  9063 ;; *************** function _abs *****************
  9064 ;; Defined at:
  9065 ;;		line 1 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\abs.c"
  9066 ;; Parameters:    Size  Location     Type
  9067 ;;  a               2    3[COMMON] int 
  9068 ;; Auto vars:     Size  Location     Type
  9069 ;;		None
  9070 ;; Return value:  Size  Location     Type
  9071 ;;                  2    3[COMMON] int 
  9072 ;; Registers used:
  9073 ;;		wreg, status,2, status,0
  9074 ;; Tracked objects:
  9075 ;;		On entry : 0/0
  9076 ;;		On exit  : 0/0
  9077 ;;		Unchanged: 0/0
  9078 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  9079 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9080 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9081 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9082 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9083 ;;Total ram usage:        4 bytes
  9084 ;; Hardware stack levels used: 1
  9085 ;; This function calls:
  9086 ;;		Nothing
  9087 ;; This function is called by:
  9088 ;;		_dtoa
  9089 ;; This function uses a non-reentrant model
  9090 ;;
  9091                           
  9092                           
  9093                           ;psect for function _abs
  9094  1F73                     _abs:
  9095  1F73                     l2800:	
  9096                           ;incstack = 0
  9097                           ; Regs used in _abs: [wreg+status,2+status,0]
  9098                           
  9099  1F73  0874               	movf	abs@a+1,w
  9100  1F74  3A80               	xorlw	128
  9101  1F75  00F5               	movwf	??_abs
  9102  1F76  3080               	movlw	128
  9103  1F77  0275               	subwf	??_abs,w
  9104  1F78  1D03               	skipz
  9105  1F79  2F7C               	goto	u2895
  9106  1F7A  3001               	movlw	1
  9107  1F7B  0273               	subwf	abs@a,w
  9108  1F7C                     u2895:
  9109  1F7C  1803               	skipnc
  9110  1F7D  2F7F               	goto	u2891
  9111  1F7E  2F80               	goto	u2890
  9112  1F7F                     u2891:
  9113  1F7F  2F8C               	goto	l1095
  9114  1F80                     u2890:
  9115  1F80                     l2802:
  9116  1F80  0973               	comf	abs@a,w
  9117  1F81  00F5               	movwf	??_abs
  9118  1F82  0974               	comf	abs@a+1,w
  9119  1F83  00F6               	movwf	??_abs+1
  9120  1F84  0AF5               	incf	??_abs,f
  9121  1F85  1903               	skipnz
  9122  1F86  0AF6               	incf	??_abs+1,f
  9123  1F87  0875               	movf	??_abs,w
  9124  1F88  00F3               	movwf	?_abs
  9125  1F89  0876               	movf	??_abs+1,w
  9126  1F8A  00F4               	movwf	?_abs+1
  9127  1F8B  2F8C               	goto	l1098
  9128  1F8C                     l1095:
  9129  1F8C                     l1098:
  9130  1F8C  0008               	return
  9131  1F8D                     __end_of_abs:
  9132                           
  9133                           	psect	text25
  9134  0D28                     __ptext25:	
  9135 ;; *************** function ___aomod *****************
  9136 ;; Defined at:
  9137 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\aomod.c"
  9138 ;; Parameters:    Size  Location     Type
  9139 ;;  divisor         8    0[BANK0 ] long long 
  9140 ;;  dividend        8    8[BANK0 ] long long 
  9141 ;; Auto vars:     Size  Location     Type
  9142 ;;  sign            1    2[COMMON] unsigned char 
  9143 ;;  counter         1    1[COMMON] unsigned char 
  9144 ;; Return value:  Size  Location     Type
  9145 ;;                  8    0[BANK0 ] long long 
  9146 ;; Registers used:
  9147 ;;		wreg, fsr1l, fsr1h, status,2, status,0
  9148 ;; Tracked objects:
  9149 ;;		On entry : 0/0
  9150 ;;		On exit  : 0/0
  9151 ;;		Unchanged: 0/0
  9152 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  9153 ;;      Params:         0      16       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9154 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9155 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9156 ;;      Totals:         3      16       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9157 ;;Total ram usage:       19 bytes
  9158 ;; Hardware stack levels used: 1
  9159 ;; This function calls:
  9160 ;;		Nothing
  9161 ;; This function is called by:
  9162 ;;		_dtoa
  9163 ;; This function uses a non-reentrant model
  9164 ;;
  9165                           
  9166                           
  9167                           ;psect for function ___aomod
  9168  0D28                     ___aomod:
  9169  0D28                     l2710:	
  9170                           ;incstack = 0
  9171                           ; Regs used in ___aomod: [wreg+fsr1l+fsr1h+status,2+status,0]
  9172                           
  9173  0D28  01F2               	clrf	___aomod@sign
  9174  0D29                     l2712:
  9175  0D29  3028               	movlw	low ___aomod@dividend
  9176  0D2A  0086               	movwf	6
  9177  0D2B  3000               	movlw	high ___aomod@dividend
  9178  0D2C  0087               	movwf	7
  9179  0D2D  3F47               	moviw [7]fsr1
  9180  0D2E  00F0               	movwf	??___aomod
  9181  0D2F  1FF0               	btfss	??___aomod,7
  9182  0D30  2D32               	goto	u2661
  9183  0D31  2D33               	goto	u2660
  9184  0D32                     u2661:
  9185  0D32  2D54               	goto	l2716
  9186  0D33                     u2660:
  9187  0D33                     l2714:
  9188  0D33  0020               	movlb	0	; select bank0
  9189  0D34  09A8               	comf	___aomod@dividend,f
  9190  0D35  09A9               	comf	___aomod@dividend+1,f
  9191  0D36  09AA               	comf	___aomod@dividend+2,f
  9192  0D37  09AB               	comf	___aomod@dividend+3,f
  9193  0D38  09AC               	comf	___aomod@dividend+4,f
  9194  0D39  09AD               	comf	___aomod@dividend+5,f
  9195  0D3A  09AE               	comf	___aomod@dividend+6,f
  9196  0D3B  09AF               	comf	___aomod@dividend+7,f
  9197  0D3C  0AA8               	incf	___aomod@dividend,f
  9198  0D3D  1D03               	skipz
  9199  0D3E  2D52               	goto	u267lld
  9200  0D3F  0AA9               	incf	___aomod@dividend+1,f
  9201  0D40  1D03               	skipz
  9202  0D41  2D52               	goto	u267lld
  9203  0D42  0AAA               	incf	___aomod@dividend+2,f
  9204  0D43  1D03               	skipz
  9205  0D44  2D52               	goto	u267lld
  9206  0D45  0AAB               	incf	___aomod@dividend+3,f
  9207  0D46  1D03               	skipz
  9208  0D47  2D52               	goto	u267lld
  9209  0D48  0AAC               	incf	___aomod@dividend+4,f
  9210  0D49  1D03               	skipz
  9211  0D4A  2D52               	goto	u267lld
  9212  0D4B  0AAD               	incf	___aomod@dividend+5,f
  9213  0D4C  1D03               	skipz
  9214  0D4D  2D52               	goto	u267lld
  9215  0D4E  0AAE               	incf	___aomod@dividend+6,f
  9216  0D4F  1D03               	skipz
  9217  0D50  2D52               	goto	u267lld
  9218  0D51  0AAF               	incf	___aomod@dividend+7,f
  9219  0D52                     u267lld:
  9220  0D52  01F2               	clrf	___aomod@sign
  9221  0D53  0AF2               	incf	___aomod@sign,f
  9222  0D54                     l2716:
  9223  0D54  3020               	movlw	low ___aomod@divisor
  9224  0D55  0086               	movwf	6
  9225  0D56  3000               	movlw	high ___aomod@divisor
  9226  0D57  0087               	movwf	7
  9227  0D58  3F47               	moviw [7]fsr1
  9228  0D59  00F0               	movwf	??___aomod
  9229  0D5A  1FF0               	btfss	??___aomod,7
  9230  0D5B  2D5D               	goto	u2681
  9231  0D5C  2D5E               	goto	u2680
  9232  0D5D                     u2681:
  9233  0D5D  2D7D               	goto	l2720
  9234  0D5E                     u2680:
  9235  0D5E                     l2718:
  9236  0D5E  0020               	movlb	0	; select bank0
  9237  0D5F  09A0               	comf	___aomod@divisor,f
  9238  0D60  09A1               	comf	___aomod@divisor+1,f
  9239  0D61  09A2               	comf	___aomod@divisor+2,f
  9240  0D62  09A3               	comf	___aomod@divisor+3,f
  9241  0D63  09A4               	comf	___aomod@divisor+4,f
  9242  0D64  09A5               	comf	___aomod@divisor+5,f
  9243  0D65  09A6               	comf	___aomod@divisor+6,f
  9244  0D66  09A7               	comf	___aomod@divisor+7,f
  9245  0D67  0AA0               	incf	___aomod@divisor,f
  9246  0D68  1D03               	skipz
  9247  0D69  2D7D               	goto	u269lld
  9248  0D6A  0AA1               	incf	___aomod@divisor+1,f
  9249  0D6B  1D03               	skipz
  9250  0D6C  2D7D               	goto	u269lld
  9251  0D6D  0AA2               	incf	___aomod@divisor+2,f
  9252  0D6E  1D03               	skipz
  9253  0D6F  2D7D               	goto	u269lld
  9254  0D70  0AA3               	incf	___aomod@divisor+3,f
  9255  0D71  1D03               	skipz
  9256  0D72  2D7D               	goto	u269lld
  9257  0D73  0AA4               	incf	___aomod@divisor+4,f
  9258  0D74  1D03               	skipz
  9259  0D75  2D7D               	goto	u269lld
  9260  0D76  0AA5               	incf	___aomod@divisor+5,f
  9261  0D77  1D03               	skipz
  9262  0D78  2D7D               	goto	u269lld
  9263  0D79  0AA6               	incf	___aomod@divisor+6,f
  9264  0D7A  1D03               	skipz
  9265  0D7B  2D7D               	goto	u269lld
  9266  0D7C  0AA7               	incf	___aomod@divisor+7,f
  9267  0D7D                     u269lld:
  9268  0D7D                     l2720:
  9269  0D7D  0020               	movlb	0	; select bank0
  9270  0D7E  0820               	movf	___aomod@divisor,w
  9271  0D7F  0421               	iorwf	___aomod@divisor+1,w
  9272  0D80  0422               	iorwf	___aomod@divisor+2,w
  9273  0D81  0423               	iorwf	___aomod@divisor+3,w
  9274  0D82  0424               	iorwf	___aomod@divisor+4,w
  9275  0D83  0425               	iorwf	___aomod@divisor+5,w
  9276  0D84  0426               	iorwf	___aomod@divisor+6,w
  9277  0D85  0427               	iorwf	___aomod@divisor+7,w
  9278  0D86  1903               	skipnz
  9279  0D87  2D89               	goto	u2701
  9280  0D88  2D8A               	goto	u2700
  9281  0D89                     u2701:
  9282  0D89  2DDD               	goto	l2736
  9283  0D8A                     u2700:
  9284  0D8A                     l2722:
  9285  0D8A  01F1               	clrf	___aomod@counter
  9286  0D8B  0AF1               	incf	___aomod@counter,f
  9287  0D8C  2D99               	goto	l2728
  9288  0D8D                     l2724:
  9289  0D8D  35A0               	lslf	___aomod@divisor,f
  9290  0D8E  0DA1               	rlf	___aomod@divisor+1,f
  9291  0D8F  0DA2               	rlf	___aomod@divisor+2,f
  9292  0D90  0DA3               	rlf	___aomod@divisor+3,f
  9293  0D91  0DA4               	rlf	___aomod@divisor+4,f
  9294  0D92  0DA5               	rlf	___aomod@divisor+5,f
  9295  0D93  0DA6               	rlf	___aomod@divisor+6,f
  9296  0D94  0DA7               	rlf	___aomod@divisor+7,f
  9297  0D95                     l2726:
  9298  0D95  3001               	movlw	1
  9299  0D96  00F0               	movwf	??___aomod
  9300  0D97  0870               	movf	??___aomod,w
  9301  0D98  07F1               	addwf	___aomod@counter,f
  9302  0D99                     l2728:
  9303  0D99  1FA7               	btfss	___aomod@divisor+7,7
  9304  0D9A  2D9C               	goto	u2711
  9305  0D9B  2D9D               	goto	u2710
  9306  0D9C                     u2711:
  9307  0D9C  2D8D               	goto	l2724
  9308  0D9D                     u2710:
  9309  0D9D                     l2730:
  9310  0D9D  0827               	movf	___aomod@divisor+7,w
  9311  0D9E  022F               	subwf	___aomod@dividend+7,w
  9312  0D9F  1D03               	skipz
  9313  0DA0  2DBB               	goto	u2725
  9314  0DA1  0826               	movf	___aomod@divisor+6,w
  9315  0DA2  022E               	subwf	___aomod@dividend+6,w
  9316  0DA3  1D03               	skipz
  9317  0DA4  2DBB               	goto	u2725
  9318  0DA5  0825               	movf	___aomod@divisor+5,w
  9319  0DA6  022D               	subwf	___aomod@dividend+5,w
  9320  0DA7  1D03               	skipz
  9321  0DA8  2DBB               	goto	u2725
  9322  0DA9  0824               	movf	___aomod@divisor+4,w
  9323  0DAA  022C               	subwf	___aomod@dividend+4,w
  9324  0DAB  1D03               	skipz
  9325  0DAC  2DBB               	goto	u2725
  9326  0DAD  0823               	movf	___aomod@divisor+3,w
  9327  0DAE  022B               	subwf	___aomod@dividend+3,w
  9328  0DAF  1D03               	skipz
  9329  0DB0  2DBB               	goto	u2725
  9330  0DB1  0822               	movf	___aomod@divisor+2,w
  9331  0DB2  022A               	subwf	___aomod@dividend+2,w
  9332  0DB3  1D03               	skipz
  9333  0DB4  2DBB               	goto	u2725
  9334  0DB5  0821               	movf	___aomod@divisor+1,w
  9335  0DB6  0229               	subwf	___aomod@dividend+1,w
  9336  0DB7  1D03               	skipz
  9337  0DB8  2DBB               	goto	u2725
  9338  0DB9  0820               	movf	___aomod@divisor,w
  9339  0DBA  0228               	subwf	___aomod@dividend,w
  9340  0DBB                     u2725:
  9341  0DBB  1C03               	skipc
  9342  0DBC  2DBE               	goto	u2721
  9343  0DBD  2DBF               	goto	u2720
  9344  0DBE                     u2721:
  9345  0DBE  2DCF               	goto	l2734
  9346  0DBF                     u2720:
  9347  0DBF                     l2732:
  9348  0DBF  0820               	movf	___aomod@divisor,w
  9349  0DC0  02A8               	subwf	___aomod@dividend,f
  9350  0DC1  0821               	movf	___aomod@divisor+1,w
  9351  0DC2  3BA9               	subwfb	___aomod@dividend+1,f
  9352  0DC3  0822               	movf	___aomod@divisor+2,w
  9353  0DC4  3BAA               	subwfb	___aomod@dividend+2,f
  9354  0DC5  0823               	movf	___aomod@divisor+3,w
  9355  0DC6  3BAB               	subwfb	___aomod@dividend+3,f
  9356  0DC7  0824               	movf	___aomod@divisor+4,w
  9357  0DC8  3BAC               	subwfb	___aomod@dividend+4,f
  9358  0DC9  0825               	movf	___aomod@divisor+5,w
  9359  0DCA  3BAD               	subwfb	___aomod@dividend+5,f
  9360  0DCB  0826               	movf	___aomod@divisor+6,w
  9361  0DCC  3BAE               	subwfb	___aomod@dividend+6,f
  9362  0DCD  0827               	movf	___aomod@divisor+7,w
  9363  0DCE  3BAF               	subwfb	___aomod@dividend+7,f
  9364  0DCF                     l2734:
  9365  0DCF  36A7               	lsrf	___aomod@divisor+7,f
  9366  0DD0  0CA6               	rrf	___aomod@divisor+6,f
  9367  0DD1  0CA5               	rrf	___aomod@divisor+5,f
  9368  0DD2  0CA4               	rrf	___aomod@divisor+4,f
  9369  0DD3  0CA3               	rrf	___aomod@divisor+3,f
  9370  0DD4  0CA2               	rrf	___aomod@divisor+2,f
  9371  0DD5  0CA1               	rrf	___aomod@divisor+1,f
  9372  0DD6  0CA0               	rrf	___aomod@divisor,f
  9373  0DD7  3001               	movlw	1
  9374  0DD8  02F1               	subwf	___aomod@counter,f
  9375  0DD9  1D03               	btfss	3,2
  9376  0DDA  2DDC               	goto	u2731
  9377  0DDB  2DDD               	goto	u2730
  9378  0DDC                     u2731:
  9379  0DDC  2D9D               	goto	l2730
  9380  0DDD                     u2730:
  9381  0DDD                     l2736:
  9382  0DDD  0872               	movf	___aomod@sign,w
  9383  0DDE  1903               	btfsc	3,2
  9384  0DDF  2DE1               	goto	u2741
  9385  0DE0  2DE2               	goto	u2740
  9386  0DE1                     u2741:
  9387  0DE1  2E00               	goto	l647
  9388  0DE2                     u2740:
  9389  0DE2                     l2738:
  9390  0DE2  09A8               	comf	___aomod@dividend,f
  9391  0DE3  09A9               	comf	___aomod@dividend+1,f
  9392  0DE4  09AA               	comf	___aomod@dividend+2,f
  9393  0DE5  09AB               	comf	___aomod@dividend+3,f
  9394  0DE6  09AC               	comf	___aomod@dividend+4,f
  9395  0DE7  09AD               	comf	___aomod@dividend+5,f
  9396  0DE8  09AE               	comf	___aomod@dividend+6,f
  9397  0DE9  09AF               	comf	___aomod@dividend+7,f
  9398  0DEA  0AA8               	incf	___aomod@dividend,f
  9399  0DEB  1D03               	skipz
  9400  0DEC  2E00               	goto	u275lld
  9401  0DED  0AA9               	incf	___aomod@dividend+1,f
  9402  0DEE  1D03               	skipz
  9403  0DEF  2E00               	goto	u275lld
  9404  0DF0  0AAA               	incf	___aomod@dividend+2,f
  9405  0DF1  1D03               	skipz
  9406  0DF2  2E00               	goto	u275lld
  9407  0DF3  0AAB               	incf	___aomod@dividend+3,f
  9408  0DF4  1D03               	skipz
  9409  0DF5  2E00               	goto	u275lld
  9410  0DF6  0AAC               	incf	___aomod@dividend+4,f
  9411  0DF7  1D03               	skipz
  9412  0DF8  2E00               	goto	u275lld
  9413  0DF9  0AAD               	incf	___aomod@dividend+5,f
  9414  0DFA  1D03               	skipz
  9415  0DFB  2E00               	goto	u275lld
  9416  0DFC  0AAE               	incf	___aomod@dividend+6,f
  9417  0DFD  1D03               	skipz
  9418  0DFE  2E00               	goto	u275lld
  9419  0DFF  0AAF               	incf	___aomod@dividend+7,f
  9420  0E00                     u275lld:
  9421  0E00                     l647:
  9422  0E00  0020               	movlb	0	; select bank0
  9423  0E01  0828               	movf	___aomod@dividend,w
  9424  0E02  00A0               	movwf	?___aomod
  9425  0E03  0829               	movf	___aomod@dividend+1,w
  9426  0E04  00A1               	movwf	?___aomod+1
  9427  0E05  082A               	movf	___aomod@dividend+2,w
  9428  0E06  00A2               	movwf	?___aomod+2
  9429  0E07  082B               	movf	___aomod@dividend+3,w
  9430  0E08  00A3               	movwf	?___aomod+3
  9431  0E09  082C               	movf	___aomod@dividend+4,w
  9432  0E0A  00A4               	movwf	?___aomod+4
  9433  0E0B  082D               	movf	___aomod@dividend+5,w
  9434  0E0C  00A5               	movwf	?___aomod+5
  9435  0E0D  082E               	movf	___aomod@dividend+6,w
  9436  0E0E  00A6               	movwf	?___aomod+6
  9437  0E0F  082F               	movf	___aomod@dividend+7,w
  9438  0E10  00A7               	movwf	?___aomod+7
  9439  0E11                     l648:
  9440  0E11  0008               	return
  9441  0E12                     __end_of___aomod:
  9442                           
  9443                           	psect	text26
  9444  0EFF                     __ptext26:	
  9445 ;; *************** function ___aodiv *****************
  9446 ;; Defined at:
  9447 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\aodiv.c"
  9448 ;; Parameters:    Size  Location     Type
  9449 ;;  divisor         8    0[BANK0 ] long long 
  9450 ;;  dividend        8    8[BANK0 ] long long 
  9451 ;; Auto vars:     Size  Location     Type
  9452 ;;  quotient        8    3[COMMON] long long 
  9453 ;;  sign            1    2[COMMON] unsigned char 
  9454 ;;  counter         1    1[COMMON] unsigned char 
  9455 ;; Return value:  Size  Location     Type
  9456 ;;                  8    0[BANK0 ] long long 
  9457 ;; Registers used:
  9458 ;;		wreg, fsr1l, fsr1h, status,2, status,0
  9459 ;; Tracked objects:
  9460 ;;		On entry : 0/0
  9461 ;;		On exit  : 0/0
  9462 ;;		Unchanged: 0/0
  9463 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  9464 ;;      Params:         0      16       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9465 ;;      Locals:        10       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9466 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9467 ;;      Totals:        11      16       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9468 ;;Total ram usage:       27 bytes
  9469 ;; Hardware stack levels used: 1
  9470 ;; This function calls:
  9471 ;;		Nothing
  9472 ;; This function is called by:
  9473 ;;		_dtoa
  9474 ;; This function uses a non-reentrant model
  9475 ;;
  9476                           
  9477                           
  9478                           ;psect for function ___aodiv
  9479  0EFF                     ___aodiv:
  9480  0EFF                     l2672:	
  9481                           ;incstack = 0
  9482                           ; Regs used in ___aodiv: [wreg+fsr1l+fsr1h+status,2+status,0]
  9483                           
  9484  0EFF  01F2               	clrf	___aodiv@sign
  9485  0F00                     l2674:
  9486  0F00  3020               	movlw	low ___aodiv@divisor
  9487  0F01  0086               	movwf	6
  9488  0F02  3000               	movlw	high ___aodiv@divisor
  9489  0F03  0087               	movwf	7
  9490  0F04  3F47               	moviw [7]fsr1
  9491  0F05  00F0               	movwf	??___aodiv
  9492  0F06  1FF0               	btfss	??___aodiv,7
  9493  0F07  2F09               	goto	u2551
  9494  0F08  2F0A               	goto	u2550
  9495  0F09                     u2551:
  9496  0F09  2F2B               	goto	l2678
  9497  0F0A                     u2550:
  9498  0F0A                     l2676:
  9499  0F0A  0020               	movlb	0	; select bank0
  9500  0F0B  09A0               	comf	___aodiv@divisor,f
  9501  0F0C  09A1               	comf	___aodiv@divisor+1,f
  9502  0F0D  09A2               	comf	___aodiv@divisor+2,f
  9503  0F0E  09A3               	comf	___aodiv@divisor+3,f
  9504  0F0F  09A4               	comf	___aodiv@divisor+4,f
  9505  0F10  09A5               	comf	___aodiv@divisor+5,f
  9506  0F11  09A6               	comf	___aodiv@divisor+6,f
  9507  0F12  09A7               	comf	___aodiv@divisor+7,f
  9508  0F13  0AA0               	incf	___aodiv@divisor,f
  9509  0F14  1D03               	skipz
  9510  0F15  2F29               	goto	u256lld
  9511  0F16  0AA1               	incf	___aodiv@divisor+1,f
  9512  0F17  1D03               	skipz
  9513  0F18  2F29               	goto	u256lld
  9514  0F19  0AA2               	incf	___aodiv@divisor+2,f
  9515  0F1A  1D03               	skipz
  9516  0F1B  2F29               	goto	u256lld
  9517  0F1C  0AA3               	incf	___aodiv@divisor+3,f
  9518  0F1D  1D03               	skipz
  9519  0F1E  2F29               	goto	u256lld
  9520  0F1F  0AA4               	incf	___aodiv@divisor+4,f
  9521  0F20  1D03               	skipz
  9522  0F21  2F29               	goto	u256lld
  9523  0F22  0AA5               	incf	___aodiv@divisor+5,f
  9524  0F23  1D03               	skipz
  9525  0F24  2F29               	goto	u256lld
  9526  0F25  0AA6               	incf	___aodiv@divisor+6,f
  9527  0F26  1D03               	skipz
  9528  0F27  2F29               	goto	u256lld
  9529  0F28  0AA7               	incf	___aodiv@divisor+7,f
  9530  0F29                     u256lld:
  9531  0F29  01F2               	clrf	___aodiv@sign
  9532  0F2A  0AF2               	incf	___aodiv@sign,f
  9533  0F2B                     l2678:
  9534  0F2B  3028               	movlw	low ___aodiv@dividend
  9535  0F2C  0086               	movwf	6
  9536  0F2D  3000               	movlw	high ___aodiv@dividend
  9537  0F2E  0087               	movwf	7
  9538  0F2F  3F47               	moviw [7]fsr1
  9539  0F30  00F0               	movwf	??___aodiv
  9540  0F31  1FF0               	btfss	??___aodiv,7
  9541  0F32  2F34               	goto	u2571
  9542  0F33  2F35               	goto	u2570
  9543  0F34                     u2571:
  9544  0F34  2F58               	goto	l2684
  9545  0F35                     u2570:
  9546  0F35                     l2680:
  9547  0F35  0020               	movlb	0	; select bank0
  9548  0F36  09A8               	comf	___aodiv@dividend,f
  9549  0F37  09A9               	comf	___aodiv@dividend+1,f
  9550  0F38  09AA               	comf	___aodiv@dividend+2,f
  9551  0F39  09AB               	comf	___aodiv@dividend+3,f
  9552  0F3A  09AC               	comf	___aodiv@dividend+4,f
  9553  0F3B  09AD               	comf	___aodiv@dividend+5,f
  9554  0F3C  09AE               	comf	___aodiv@dividend+6,f
  9555  0F3D  09AF               	comf	___aodiv@dividend+7,f
  9556  0F3E  0AA8               	incf	___aodiv@dividend,f
  9557  0F3F  1D03               	skipz
  9558  0F40  2F54               	goto	u258lld
  9559  0F41  0AA9               	incf	___aodiv@dividend+1,f
  9560  0F42  1D03               	skipz
  9561  0F43  2F54               	goto	u258lld
  9562  0F44  0AAA               	incf	___aodiv@dividend+2,f
  9563  0F45  1D03               	skipz
  9564  0F46  2F54               	goto	u258lld
  9565  0F47  0AAB               	incf	___aodiv@dividend+3,f
  9566  0F48  1D03               	skipz
  9567  0F49  2F54               	goto	u258lld
  9568  0F4A  0AAC               	incf	___aodiv@dividend+4,f
  9569  0F4B  1D03               	skipz
  9570  0F4C  2F54               	goto	u258lld
  9571  0F4D  0AAD               	incf	___aodiv@dividend+5,f
  9572  0F4E  1D03               	skipz
  9573  0F4F  2F54               	goto	u258lld
  9574  0F50  0AAE               	incf	___aodiv@dividend+6,f
  9575  0F51  1D03               	skipz
  9576  0F52  2F54               	goto	u258lld
  9577  0F53  0AAF               	incf	___aodiv@dividend+7,f
  9578  0F54                     u258lld:
  9579  0F54                     l2682:
  9580  0F54  3001               	movlw	1
  9581  0F55  00F0               	movwf	??___aodiv
  9582  0F56  0870               	movf	??___aodiv,w
  9583  0F57  06F2               	xorwf	___aodiv@sign,f
  9584  0F58                     l2684:
  9585  0F58  3073               	movlw	low ___aodiv@quotient
  9586  0F59  0086               	movwf	6
  9587  0F5A  3000               	movlw	high ___aodiv@quotient
  9588  0F5B  0087               	movwf	7
  9589  0F5C  3008               	movlw	8
  9590  0F5D  00F0               	movwf	??___aodiv
  9591  0F5E  3000               	movlw	0
  9592  0F5F                     u2590:
  9593  0F5F  001E               	movwi fsr1++
  9594  0F60  0BF0               	decfsz	??___aodiv,f
  9595  0F61  2F5F               	goto	u2590
  9596  0F62                     l2686:
  9597  0F62  0020               	movlb	0	; select bank0
  9598  0F63  0820               	movf	___aodiv@divisor,w
  9599  0F64  0421               	iorwf	___aodiv@divisor+1,w
  9600  0F65  0422               	iorwf	___aodiv@divisor+2,w
  9601  0F66  0423               	iorwf	___aodiv@divisor+3,w
  9602  0F67  0424               	iorwf	___aodiv@divisor+4,w
  9603  0F68  0425               	iorwf	___aodiv@divisor+5,w
  9604  0F69  0426               	iorwf	___aodiv@divisor+6,w
  9605  0F6A  0427               	iorwf	___aodiv@divisor+7,w
  9606  0F6B  1903               	skipnz
  9607  0F6C  2F6E               	goto	u2601
  9608  0F6D  2F6F               	goto	u2600
  9609  0F6E                     u2601:
  9610  0F6E  2FCB               	goto	l2706
  9611  0F6F                     u2600:
  9612  0F6F                     l2688:
  9613  0F6F  01F1               	clrf	___aodiv@counter
  9614  0F70  0AF1               	incf	___aodiv@counter,f
  9615  0F71  2F7E               	goto	l2694
  9616  0F72                     l2690:
  9617  0F72  35A0               	lslf	___aodiv@divisor,f
  9618  0F73  0DA1               	rlf	___aodiv@divisor+1,f
  9619  0F74  0DA2               	rlf	___aodiv@divisor+2,f
  9620  0F75  0DA3               	rlf	___aodiv@divisor+3,f
  9621  0F76  0DA4               	rlf	___aodiv@divisor+4,f
  9622  0F77  0DA5               	rlf	___aodiv@divisor+5,f
  9623  0F78  0DA6               	rlf	___aodiv@divisor+6,f
  9624  0F79  0DA7               	rlf	___aodiv@divisor+7,f
  9625  0F7A                     l2692:
  9626  0F7A  3001               	movlw	1
  9627  0F7B  00F0               	movwf	??___aodiv
  9628  0F7C  0870               	movf	??___aodiv,w
  9629  0F7D  07F1               	addwf	___aodiv@counter,f
  9630  0F7E                     l2694:
  9631  0F7E  1FA7               	btfss	___aodiv@divisor+7,7
  9632  0F7F  2F81               	goto	u2611
  9633  0F80  2F82               	goto	u2610
  9634  0F81                     u2611:
  9635  0F81  2F72               	goto	l2690
  9636  0F82                     u2610:
  9637  0F82                     l2696:
  9638  0F82  35F3               	lslf	___aodiv@quotient,f
  9639  0F83  0DF4               	rlf	___aodiv@quotient+1,f
  9640  0F84  0DF5               	rlf	___aodiv@quotient+2,f
  9641  0F85  0DF6               	rlf	___aodiv@quotient+3,f
  9642  0F86  0DF7               	rlf	___aodiv@quotient+4,f
  9643  0F87  0DF8               	rlf	___aodiv@quotient+5,f
  9644  0F88  0DF9               	rlf	___aodiv@quotient+6,f
  9645  0F89  0DFA               	rlf	___aodiv@quotient+7,f
  9646  0F8A                     l2698:
  9647  0F8A  0827               	movf	___aodiv@divisor+7,w
  9648  0F8B  022F               	subwf	___aodiv@dividend+7,w
  9649  0F8C  1D03               	skipz
  9650  0F8D  2FA8               	goto	u2625
  9651  0F8E  0826               	movf	___aodiv@divisor+6,w
  9652  0F8F  022E               	subwf	___aodiv@dividend+6,w
  9653  0F90  1D03               	skipz
  9654  0F91  2FA8               	goto	u2625
  9655  0F92  0825               	movf	___aodiv@divisor+5,w
  9656  0F93  022D               	subwf	___aodiv@dividend+5,w
  9657  0F94  1D03               	skipz
  9658  0F95  2FA8               	goto	u2625
  9659  0F96  0824               	movf	___aodiv@divisor+4,w
  9660  0F97  022C               	subwf	___aodiv@dividend+4,w
  9661  0F98  1D03               	skipz
  9662  0F99  2FA8               	goto	u2625
  9663  0F9A  0823               	movf	___aodiv@divisor+3,w
  9664  0F9B  022B               	subwf	___aodiv@dividend+3,w
  9665  0F9C  1D03               	skipz
  9666  0F9D  2FA8               	goto	u2625
  9667  0F9E  0822               	movf	___aodiv@divisor+2,w
  9668  0F9F  022A               	subwf	___aodiv@dividend+2,w
  9669  0FA0  1D03               	skipz
  9670  0FA1  2FA8               	goto	u2625
  9671  0FA2  0821               	movf	___aodiv@divisor+1,w
  9672  0FA3  0229               	subwf	___aodiv@dividend+1,w
  9673  0FA4  1D03               	skipz
  9674  0FA5  2FA8               	goto	u2625
  9675  0FA6  0820               	movf	___aodiv@divisor,w
  9676  0FA7  0228               	subwf	___aodiv@dividend,w
  9677  0FA8                     u2625:
  9678  0FA8  1C03               	skipc
  9679  0FA9  2FAB               	goto	u2621
  9680  0FAA  2FAC               	goto	u2620
  9681  0FAB                     u2621:
  9682  0FAB  2FBD               	goto	l2704
  9683  0FAC                     u2620:
  9684  0FAC                     l2700:
  9685  0FAC  0820               	movf	___aodiv@divisor,w
  9686  0FAD  02A8               	subwf	___aodiv@dividend,f
  9687  0FAE  0821               	movf	___aodiv@divisor+1,w
  9688  0FAF  3BA9               	subwfb	___aodiv@dividend+1,f
  9689  0FB0  0822               	movf	___aodiv@divisor+2,w
  9690  0FB1  3BAA               	subwfb	___aodiv@dividend+2,f
  9691  0FB2  0823               	movf	___aodiv@divisor+3,w
  9692  0FB3  3BAB               	subwfb	___aodiv@dividend+3,f
  9693  0FB4  0824               	movf	___aodiv@divisor+4,w
  9694  0FB5  3BAC               	subwfb	___aodiv@dividend+4,f
  9695  0FB6  0825               	movf	___aodiv@divisor+5,w
  9696  0FB7  3BAD               	subwfb	___aodiv@dividend+5,f
  9697  0FB8  0826               	movf	___aodiv@divisor+6,w
  9698  0FB9  3BAE               	subwfb	___aodiv@dividend+6,f
  9699  0FBA  0827               	movf	___aodiv@divisor+7,w
  9700  0FBB  3BAF               	subwfb	___aodiv@dividend+7,f
  9701  0FBC                     l2702:
  9702  0FBC  1473               	bsf	___aodiv@quotient,0
  9703  0FBD                     l2704:
  9704  0FBD  36A7               	lsrf	___aodiv@divisor+7,f
  9705  0FBE  0CA6               	rrf	___aodiv@divisor+6,f
  9706  0FBF  0CA5               	rrf	___aodiv@divisor+5,f
  9707  0FC0  0CA4               	rrf	___aodiv@divisor+4,f
  9708  0FC1  0CA3               	rrf	___aodiv@divisor+3,f
  9709  0FC2  0CA2               	rrf	___aodiv@divisor+2,f
  9710  0FC3  0CA1               	rrf	___aodiv@divisor+1,f
  9711  0FC4  0CA0               	rrf	___aodiv@divisor,f
  9712  0FC5  3001               	movlw	1
  9713  0FC6  02F1               	subwf	___aodiv@counter,f
  9714  0FC7  1D03               	btfss	3,2
  9715  0FC8  2FCA               	goto	u2631
  9716  0FC9  2FCB               	goto	u2630
  9717  0FCA                     u2631:
  9718  0FCA  2F82               	goto	l2696
  9719  0FCB                     u2630:
  9720  0FCB                     l2706:
  9721  0FCB  0872               	movf	___aodiv@sign,w
  9722  0FCC  1903               	btfsc	3,2
  9723  0FCD  2FCF               	goto	u2641
  9724  0FCE  2FD0               	goto	u2640
  9725  0FCF                     u2641:
  9726  0FCF  2FEE               	goto	l634
  9727  0FD0                     u2640:
  9728  0FD0                     l2708:
  9729  0FD0  09F3               	comf	___aodiv@quotient,f
  9730  0FD1  09F4               	comf	___aodiv@quotient+1,f
  9731  0FD2  09F5               	comf	___aodiv@quotient+2,f
  9732  0FD3  09F6               	comf	___aodiv@quotient+3,f
  9733  0FD4  09F7               	comf	___aodiv@quotient+4,f
  9734  0FD5  09F8               	comf	___aodiv@quotient+5,f
  9735  0FD6  09F9               	comf	___aodiv@quotient+6,f
  9736  0FD7  09FA               	comf	___aodiv@quotient+7,f
  9737  0FD8  0AF3               	incf	___aodiv@quotient,f
  9738  0FD9  1D03               	skipz
  9739  0FDA  2FEE               	goto	u265lld
  9740  0FDB  0AF4               	incf	___aodiv@quotient+1,f
  9741  0FDC  1D03               	skipz
  9742  0FDD  2FEE               	goto	u265lld
  9743  0FDE  0AF5               	incf	___aodiv@quotient+2,f
  9744  0FDF  1D03               	skipz
  9745  0FE0  2FEE               	goto	u265lld
  9746  0FE1  0AF6               	incf	___aodiv@quotient+3,f
  9747  0FE2  1D03               	skipz
  9748  0FE3  2FEE               	goto	u265lld
  9749  0FE4  0AF7               	incf	___aodiv@quotient+4,f
  9750  0FE5  1D03               	skipz
  9751  0FE6  2FEE               	goto	u265lld
  9752  0FE7  0AF8               	incf	___aodiv@quotient+5,f
  9753  0FE8  1D03               	skipz
  9754  0FE9  2FEE               	goto	u265lld
  9755  0FEA  0AF9               	incf	___aodiv@quotient+6,f
  9756  0FEB  1D03               	skipz
  9757  0FEC  2FEE               	goto	u265lld
  9758  0FED  0AFA               	incf	___aodiv@quotient+7,f
  9759  0FEE                     u265lld:
  9760  0FEE                     l634:
  9761  0FEE  0873               	movf	___aodiv@quotient,w
  9762  0FEF  0020               	movlb	0	; select bank0
  9763  0FF0  00A0               	movwf	?___aodiv
  9764  0FF1  0874               	movf	___aodiv@quotient+1,w
  9765  0FF2  00A1               	movwf	?___aodiv+1
  9766  0FF3  0875               	movf	___aodiv@quotient+2,w
  9767  0FF4  00A2               	movwf	?___aodiv+2
  9768  0FF5  0876               	movf	___aodiv@quotient+3,w
  9769  0FF6  00A3               	movwf	?___aodiv+3
  9770  0FF7  0877               	movf	___aodiv@quotient+4,w
  9771  0FF8  00A4               	movwf	?___aodiv+4
  9772  0FF9  0878               	movf	___aodiv@quotient+5,w
  9773  0FFA  00A5               	movwf	?___aodiv+5
  9774  0FFB  0879               	movf	___aodiv@quotient+6,w
  9775  0FFC  00A6               	movwf	?___aodiv+6
  9776  0FFD  087A               	movf	___aodiv@quotient+7,w
  9777  0FFE  00A7               	movwf	?___aodiv+7
  9778  0FFF                     l635:
  9779  0FFF  0008               	return
  9780  1000                     __end_of___aodiv:
  9781                           
  9782                           	psect	text27
  9783  1F27                     __ptext27:	
  9784 ;; *************** function _lcd_print_with *****************
  9785 ;; Defined at:
  9786 ;;		line 135 in file "lcd_lib.c"
  9787 ;; Parameters:    Size  Location     Type
  9788 ;;  p               1    wreg     PTR struct .
  9789 ;;		 -> NULL(0), main@lcd(4), 
  9790 ;;  str             2    6[BANK0 ] PTR unsigned char 
  9791 ;;		 -> print_gram@row2(16), print_gram@row1(16), STR_3(15), STR_2(11), 
  9792 ;;  col             1    8[BANK0 ] unsigned char 
  9793 ;;  row             1    9[BANK0 ] unsigned char 
  9794 ;; Auto vars:     Size  Location     Type
  9795 ;;  p               1   13[COMMON] PTR struct .
  9796 ;;		 -> NULL(0), main@lcd(4), 
  9797 ;; Return value:  Size  Location     Type
  9798 ;;                  1    wreg      void 
  9799 ;; Registers used:
  9800 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  9801 ;; Tracked objects:
  9802 ;;		On entry : 0/0
  9803 ;;		On exit  : 0/0
  9804 ;;		Unchanged: 0/0
  9805 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  9806 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9807 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9808 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9809 ;;      Totals:         1       6       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9810 ;;Total ram usage:        7 bytes
  9811 ;; Hardware stack levels used: 1
  9812 ;; Hardware stack levels required when called: 5
  9813 ;; This function calls:
  9814 ;;		_lcd_print
  9815 ;;		_lcd_set_cursor
  9816 ;; This function is called by:
  9817 ;;		_initialize
  9818 ;;		_print_gram
  9819 ;; This function uses a non-reentrant model
  9820 ;;
  9821                           
  9822                           
  9823                           ;psect for function _lcd_print_with
  9824  1F27                     _lcd_print_with:
  9825                           
  9826                           ;incstack = 0
  9827                           ; Regs used in _lcd_print_with: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  9828                           ;lcd_print_with@p stored from wreg
  9829  1F27  00FD               	movwf	lcd_print_with@p
  9830  1F28                     l3850:
  9831                           
  9832                           ;lcd_lib.c: 136:     lcd_set_cursor(p, col, row);
  9833  1F28  0020               	movlb	0	; select bank0
  9834  1F29  0828               	movf	lcd_print_with@col,w
  9835  1F2A  00AA               	movwf	??_lcd_print_with
  9836  1F2B  082A               	movf	??_lcd_print_with,w
  9837  1F2C  00FA               	movwf	lcd_set_cursor@col
  9838  1F2D  0829               	movf	lcd_print_with@row,w
  9839  1F2E  00AB               	movwf	??_lcd_print_with+1
  9840  1F2F  082B               	movf	??_lcd_print_with+1,w
  9841  1F30  00FB               	movwf	lcd_set_cursor@row
  9842  1F31  087D               	movf	lcd_print_with@p,w
  9843  1F32  3190  20CA  319F   	fcall	_lcd_set_cursor
  9844  1F35                     l3852:
  9845                           
  9846                           ;lcd_lib.c: 137:     lcd_print(p, str);
  9847  1F35  0020               	movlb	0	; select bank0
  9848  1F36  0827               	movf	lcd_print_with@str+1,w
  9849  1F37  00FB               	movwf	lcd_print@str+1
  9850  1F38  0826               	movf	lcd_print_with@str,w
  9851  1F39  00FA               	movwf	lcd_print@str
  9852  1F3A  087D               	movf	lcd_print_with@p,w
  9853  1F3B  3190  201F  319F   	fcall	_lcd_print
  9854  1F3E                     l344:
  9855  1F3E  0008               	return
  9856  1F3F                     __end_of_lcd_print_with:
  9857                           
  9858                           	psect	text28
  9859  1757                     __ptext28:	
  9860 ;; *************** function _lcd_init *****************
  9861 ;; Defined at:
  9862 ;;		line 18 in file "lcd_lib.c"
  9863 ;; Parameters:    Size  Location     Type
  9864 ;;  p               1    wreg     PTR struct .
  9865 ;;		 -> NULL(0), main@lcd(4), 
  9866 ;; Auto vars:     Size  Location     Type
  9867 ;;  p               1    8[COMMON] PTR struct .
  9868 ;;		 -> NULL(0), main@lcd(4), 
  9869 ;; Return value:  Size  Location     Type
  9870 ;;                  1    wreg      void 
  9871 ;; Registers used:
  9872 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  9873 ;; Tracked objects:
  9874 ;;		On entry : 0/0
  9875 ;;		On exit  : 0/0
  9876 ;;		Unchanged: 0/0
  9877 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  9878 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9879 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9880 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9881 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9882 ;;Total ram usage:        3 bytes
  9883 ;; Hardware stack levels used: 1
  9884 ;; Hardware stack levels required when called: 4
  9885 ;; This function calls:
  9886 ;;		_write4bits
  9887 ;; This function is called by:
  9888 ;;		_initialize
  9889 ;; This function uses a non-reentrant model
  9890 ;;
  9891                           
  9892                           
  9893                           ;psect for function _lcd_init
  9894  1757                     _lcd_init:
  9895                           
  9896                           ;incstack = 0
  9897                           ; Regs used in _lcd_init: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
  9898                           ;lcd_init@p stored from wreg
  9899  1757  00F8               	movwf	lcd_init@p
  9900  1758                     l3792:
  9901                           
  9902                           ;lcd_lib.c: 19:     _delay((unsigned long)((400)*(8000000/4000.0)));
  9903  1758  3005               	movlw	5
  9904  1759  00F7               	movwf	??_lcd_init+1
  9905  175A  300F               	movlw	15
  9906  175B  00F6               	movwf	??_lcd_init
  9907  175C  30F1               	movlw	241
  9908  175D                     u4727:
  9909  175D  0B89               	decfsz	9,f
  9910  175E  2F5D               	goto	u4727
  9911  175F  0BF6               	decfsz	??_lcd_init,f
  9912  1760  2F5D               	goto	u4727
  9913  1761  0BF7               	decfsz	??_lcd_init+1,f
  9914  1762  2F5D               	goto	u4727
  9915  1763  0000               	nop
  9916  1764                     l3794:
  9917                           
  9918                           ;lcd_lib.c: 21:     write4bits(p, 0x30);
  9919  1764  3030               	movlw	48
  9920  1765  00F6               	movwf	??_lcd_init
  9921  1766  0876               	movf	??_lcd_init,w
  9922  1767  00F3               	movwf	write4bits@val
  9923  1768  0878               	movf	lcd_init@p,w
  9924  1769  319F  27C2  3197   	fcall	_write4bits
  9925  176C                     l3796:
  9926                           
  9927                           ;lcd_lib.c: 22:     _delay((unsigned long)((5)*(8000000/4000.0)));
  9928  176C  300D               	movlw	13
  9929  176D  00F6               	movwf	??_lcd_init
  9930  176E  30FC               	movlw	252
  9931  176F                     u4737:
  9932  176F  0B89               	decfsz	9,f
  9933  1770  2F6F               	goto	u4737
  9934  1771  0BF6               	decfsz	??_lcd_init,f
  9935  1772  2F6F               	goto	u4737
  9936                           
  9937                           ;lcd_lib.c: 24:     write4bits(p, 0x30);
  9938  1773  3030               	movlw	48
  9939  1774  00F6               	movwf	??_lcd_init
  9940  1775  0876               	movf	??_lcd_init,w
  9941  1776  00F3               	movwf	write4bits@val
  9942  1777  0878               	movf	lcd_init@p,w
  9943  1778  319F  27C2  3197   	fcall	_write4bits
  9944  177B                     l3798:
  9945                           
  9946                           ;lcd_lib.c: 25:     _delay((unsigned long)((5)*(8000000/4000.0)));
  9947  177B  300D               	movlw	13
  9948  177C  00F6               	movwf	??_lcd_init
  9949  177D  30FC               	movlw	252
  9950  177E                     u4747:
  9951  177E  0B89               	decfsz	9,f
  9952  177F  2F7E               	goto	u4747
  9953  1780  0BF6               	decfsz	??_lcd_init,f
  9954  1781  2F7E               	goto	u4747
  9955  1782                     l3800:
  9956                           
  9957                           ;lcd_lib.c: 27:     write4bits(p, 0x30);
  9958  1782  3030               	movlw	48
  9959  1783  00F6               	movwf	??_lcd_init
  9960  1784  0876               	movf	??_lcd_init,w
  9961  1785  00F3               	movwf	write4bits@val
  9962  1786  0878               	movf	lcd_init@p,w
  9963  1787  319F  27C2  3197   	fcall	_write4bits
  9964                           
  9965                           ;lcd_lib.c: 28:     _delay((unsigned long)((300)*(8000000/4000000.0)));
  9966  178A  30C8               	movlw	200
  9967  178B                     u4757:
  9968  178B  0B89               	decfsz	9,f
  9969  178C  2F8B               	goto	u4757
  9970  178D                     l3802:
  9971                           
  9972                           ;lcd_lib.c: 30:     write4bits(p, 0x20);
  9973  178D  3020               	movlw	32
  9974  178E  00F6               	movwf	??_lcd_init
  9975  178F  0876               	movf	??_lcd_init,w
  9976  1790  00F3               	movwf	write4bits@val
  9977  1791  0878               	movf	lcd_init@p,w
  9978  1792  319F  27C2  3197   	fcall	_write4bits
  9979  1795                     l3804:
  9980                           
  9981                           ;lcd_lib.c: 31:     _delay((unsigned long)((10)*(8000000/4000000.0)));
  9982  1795  3006               	movlw	6
  9983  1796                     u4767:
  9984  1796  0B89               	decfsz	9,f
  9985  1797  2F96               	goto	u4767
  9986  1798  3200               	nop2
  9987                           
  9988                           ;lcd_lib.c: 34:     write4bits(p, 0x20);
  9989  1799  3020               	movlw	32
  9990  179A  00F6               	movwf	??_lcd_init
  9991  179B  0876               	movf	??_lcd_init,w
  9992  179C  00F3               	movwf	write4bits@val
  9993  179D  0878               	movf	lcd_init@p,w
  9994  179E  319F  27C2  3197   	fcall	_write4bits
  9995  17A1                     l3806:
  9996                           
  9997                           ;lcd_lib.c: 36:     _delay((unsigned long)((100)*(8000000/4000000.0)));
  9998  17A1  3042               	movlw	66
  9999  17A2                     u4777:
 10000  17A2  0B89               	decfsz	9,f
 10001  17A3  2FA2               	goto	u4777
 10002  17A4  3200               	nop2
 10003  17A5                     l3808:
 10004                           
 10005                           ;lcd_lib.c: 38:     write4bits(p, 0x80);
 10006  17A5  3080               	movlw	128
 10007  17A6  00F6               	movwf	??_lcd_init
 10008  17A7  0876               	movf	??_lcd_init,w
 10009  17A8  00F3               	movwf	write4bits@val
 10010  17A9  0878               	movf	lcd_init@p,w
 10011  17AA  319F  27C2  3197   	fcall	_write4bits
 10012  17AD                     l3810:
 10013                           
 10014                           ;lcd_lib.c: 43:     write4bits(p, 0x00);
 10015  17AD  01F3               	clrf	write4bits@val
 10016  17AE  0878               	movf	lcd_init@p,w
 10017  17AF  319F  27C2  3197   	fcall	_write4bits
 10018  17B2                     l3812:
 10019                           
 10020                           ;lcd_lib.c: 45:     _delay((unsigned long)((100)*(8000000/4000000.0)));
 10021  17B2  3042               	movlw	66
 10022  17B3                     u4787:
 10023  17B3  0B89               	decfsz	9,f
 10024  17B4  2FB3               	goto	u4787
 10025  17B5  3200               	nop2
 10026                           
 10027                           ;lcd_lib.c: 47:     write4bits(p, 0xC0);
 10028  17B6  30C0               	movlw	192
 10029  17B7  00F6               	movwf	??_lcd_init
 10030  17B8  0876               	movf	??_lcd_init,w
 10031  17B9  00F3               	movwf	write4bits@val
 10032  17BA  0878               	movf	lcd_init@p,w
 10033  17BB  319F  27C2  3197   	fcall	_write4bits
 10034                           
 10035                           ;lcd_lib.c: 51:     write4bits(p, 0x00);
 10036  17BE  01F3               	clrf	write4bits@val
 10037  17BF  0878               	movf	lcd_init@p,w
 10038  17C0  319F  27C2  3197   	fcall	_write4bits
 10039  17C3                     l3814:
 10040                           
 10041                           ;lcd_lib.c: 53:     _delay((unsigned long)((100)*(8000000/4000000.0)));
 10042  17C3  3042               	movlw	66
 10043  17C4                     u4797:
 10044  17C4  0B89               	decfsz	9,f
 10045  17C5  2FC4               	goto	u4797
 10046  17C6  3200               	nop2
 10047  17C7                     l3816:
 10048                           
 10049                           ;lcd_lib.c: 55:     write4bits(p, 0x10);
 10050  17C7  3010               	movlw	16
 10051  17C8  00F6               	movwf	??_lcd_init
 10052  17C9  0876               	movf	??_lcd_init,w
 10053  17CA  00F3               	movwf	write4bits@val
 10054  17CB  0878               	movf	lcd_init@p,w
 10055  17CC  319F  27C2  3197   	fcall	_write4bits
 10056                           
 10057                           ;lcd_lib.c: 57:     _delay((unsigned long)((5)*(8000000/4000.0)));
 10058  17CF  300D               	movlw	13
 10059  17D0  00F6               	movwf	??_lcd_init
 10060  17D1  30FC               	movlw	252
 10061  17D2                     u4807:
 10062  17D2  0B89               	decfsz	9,f
 10063  17D3  2FD2               	goto	u4807
 10064  17D4  0BF6               	decfsz	??_lcd_init,f
 10065  17D5  2FD2               	goto	u4807
 10066  17D6                     l3818:
 10067                           
 10068                           ;lcd_lib.c: 60:     write4bits(p, 0x00);
 10069  17D6  01F3               	clrf	write4bits@val
 10070  17D7  0878               	movf	lcd_init@p,w
 10071  17D8  319F  27C2  3197   	fcall	_write4bits
 10072  17DB                     l3820:
 10073                           
 10074                           ;lcd_lib.c: 62:     _delay((unsigned long)((100)*(8000000/4000000.0)));
 10075  17DB  3042               	movlw	66
 10076  17DC                     u4817:
 10077  17DC  0B89               	decfsz	9,f
 10078  17DD  2FDC               	goto	u4817
 10079  17DE  3200               	nop2
 10080                           
 10081                           ;lcd_lib.c: 64:     write4bits(p, 0x60);
 10082  17DF  3060               	movlw	96
 10083  17E0  00F6               	movwf	??_lcd_init
 10084  17E1  0876               	movf	??_lcd_init,w
 10085  17E2  00F3               	movwf	write4bits@val
 10086  17E3  0878               	movf	lcd_init@p,w
 10087  17E4  319F  27C2  3197   	fcall	_write4bits
 10088                           
 10089                           ;lcd_lib.c: 68:     write4bits(p, 0x00);
 10090  17E7  01F3               	clrf	write4bits@val
 10091  17E8  0878               	movf	lcd_init@p,w
 10092  17E9  319F  27C2  3197   	fcall	_write4bits
 10093  17EC                     l3822:
 10094                           
 10095                           ;lcd_lib.c: 70:     _delay((unsigned long)((100)*(8000000/4000000.0)));
 10096  17EC  3042               	movlw	66
 10097  17ED                     u4827:
 10098  17ED  0B89               	decfsz	9,f
 10099  17EE  2FED               	goto	u4827
 10100  17EF  3200               	nop2
 10101  17F0                     l3824:
 10102                           
 10103                           ;lcd_lib.c: 72:     write4bits(p, 0x20);
 10104  17F0  3020               	movlw	32
 10105  17F1  00F6               	movwf	??_lcd_init
 10106  17F2  0876               	movf	??_lcd_init,w
 10107  17F3  00F3               	movwf	write4bits@val
 10108  17F4  0878               	movf	lcd_init@p,w
 10109  17F5  319F  27C2  3197   	fcall	_write4bits
 10110                           
 10111                           ;lcd_lib.c: 74:     _delay((unsigned long)((3)*(8000000/4000.0)));
 10112  17F8  3008               	movlw	8
 10113  17F9  00F6               	movwf	??_lcd_init
 10114  17FA  30CA               	movlw	202
 10115  17FB                     u4837:
 10116  17FB  0B89               	decfsz	9,f
 10117  17FC  2FFB               	goto	u4837
 10118  17FD  0BF6               	decfsz	??_lcd_init,f
 10119  17FE  2FFB               	goto	u4837
 10120  17FF                     l317:
 10121  17FF  0008               	return
 10122  1800                     __end_of_lcd_init:
 10123                           
 10124                           	psect	text29
 10125  1FC2                     __ptext29:	
 10126 ;; *************** function _write4bits *****************
 10127 ;; Defined at:
 10128 ;;		line 155 in file "lcd_lib.c"
 10129 ;; Parameters:    Size  Location     Type
 10130 ;;  p               1    wreg     PTR struct .
 10131 ;;		 -> NULL(0), main@lcd(4), 
 10132 ;;  val             1    3[COMMON] unsigned char 
 10133 ;; Auto vars:     Size  Location     Type
 10134 ;;  p               1    5[COMMON] PTR struct .
 10135 ;;		 -> NULL(0), main@lcd(4), 
 10136 ;; Return value:  Size  Location     Type
 10137 ;;                  1    wreg      void 
 10138 ;; Registers used:
 10139 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 10140 ;; Tracked objects:
 10141 ;;		On entry : 0/0
 10142 ;;		On exit  : 0/0
 10143 ;;		Unchanged: 0/0
 10144 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 10145 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10146 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10147 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10148 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10149 ;;Total ram usage:        3 bytes
 10150 ;; Hardware stack levels used: 1
 10151 ;; Hardware stack levels required when called: 3
 10152 ;; This function calls:
 10153 ;;		_lcd_cmd
 10154 ;; This function is called by:
 10155 ;;		_lcd_init
 10156 ;; This function uses a non-reentrant model
 10157 ;;
 10158                           
 10159                           
 10160                           ;psect for function _write4bits
 10161  1FC2                     _write4bits:
 10162                           
 10163                           ;incstack = 0
 10164                           ; Regs used in _write4bits: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
 10165                           ;write4bits@p stored from wreg
 10166  1FC2  00F5               	movwf	write4bits@p
 10167  1FC3                     l3572:
 10168                           
 10169                           ;lcd_lib.c: 156:     lcd_cmd(p, val);
 10170  1FC3  0873               	movf	write4bits@val,w
 10171  1FC4  00F4               	movwf	??_write4bits
 10172  1FC5  0874               	movf	??_write4bits,w
 10173  1FC6  00F1               	movwf	lcd_cmd@cmd
 10174  1FC7  0875               	movf	write4bits@p,w
 10175  1FC8  319F  270F  319F   	fcall	_lcd_cmd
 10176                           
 10177                           ;lcd_lib.c: 157:     lcd_cmd(p, val | 0b00000100);
 10178  1FCB  0873               	movf	write4bits@val,w
 10179  1FCC  3804               	iorlw	4
 10180  1FCD  00F4               	movwf	??_write4bits
 10181  1FCE  0874               	movf	??_write4bits,w
 10182  1FCF  00F1               	movwf	lcd_cmd@cmd
 10183  1FD0  0875               	movf	write4bits@p,w
 10184  1FD1  319F  270F  319F   	fcall	_lcd_cmd
 10185                           
 10186                           ;lcd_lib.c: 158:     lcd_cmd(p, val);
 10187  1FD4  0873               	movf	write4bits@val,w
 10188  1FD5  00F4               	movwf	??_write4bits
 10189  1FD6  0874               	movf	??_write4bits,w
 10190  1FD7  00F1               	movwf	lcd_cmd@cmd
 10191  1FD8  0875               	movf	write4bits@p,w
 10192  1FD9  319F  270F  319F   	fcall	_lcd_cmd
 10193  1FDC                     l350:
 10194  1FDC  0008               	return
 10195  1FDD                     __end_of_write4bits:
 10196                           
 10197                           	psect	text30
 10198  1141                     __ptext30:	
 10199 ;; *************** function _lcd_clear *****************
 10200 ;; Defined at:
 10201 ;;		line 91 in file "lcd_lib.c"
 10202 ;; Parameters:    Size  Location     Type
 10203 ;;  p               1    wreg     PTR struct .
 10204 ;;		 -> NULL(0), main@lcd(4), 
 10205 ;; Auto vars:     Size  Location     Type
 10206 ;;  p               1   10[BANK0 ] PTR struct .
 10207 ;;		 -> NULL(0), main@lcd(4), 
 10208 ;;  col             1    9[BANK0 ] unsigned char 
 10209 ;;  row             1    8[BANK0 ] unsigned char 
 10210 ;; Return value:  Size  Location     Type
 10211 ;;                  1    wreg      void 
 10212 ;; Registers used:
 10213 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 10214 ;; Tracked objects:
 10215 ;;		On entry : 0/0
 10216 ;;		On exit  : 0/0
 10217 ;;		Unchanged: 0/0
 10218 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 10219 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10220 ;;      Locals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10221 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10222 ;;      Totals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10223 ;;Total ram usage:        5 bytes
 10224 ;; Hardware stack levels used: 1
 10225 ;; Hardware stack levels required when called: 5
 10226 ;; This function calls:
 10227 ;;		_lcd_print
 10228 ;;		_lcd_set_cursor
 10229 ;; This function is called by:
 10230 ;;		_initialize
 10231 ;;		_print_gram
 10232 ;;		_set_max_gram
 10233 ;; This function uses a non-reentrant model
 10234 ;;
 10235                           
 10236                           
 10237                           ;psect for function _lcd_clear
 10238  1141                     _lcd_clear:
 10239                           
 10240                           ;incstack = 0
 10241                           ; Regs used in _lcd_clear: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 10242                           ;lcd_clear@p stored from wreg
 10243  1141  0020               	movlb	0	; select bank0
 10244  1142  00AA               	movwf	lcd_clear@p
 10245  1143                     l3832:
 10246                           
 10247                           ;lcd_lib.c: 92:     for(uint8_t row = 0; row < (p->ROW); row++){
 10248  1143  01A8               	clrf	lcd_clear@row
 10249  1144  296F               	goto	l3846
 10250  1145                     l3834:
 10251                           
 10252                           ;lcd_lib.c: 93:         for(uint8_t col = 0; col < (p->COL); col++){
 10253  1145  01A9               	clrf	lcd_clear@col
 10254  1146  2961               	goto	l3842
 10255  1147                     l3836:
 10256                           
 10257                           ;lcd_lib.c: 94:             lcd_set_cursor(p, col, row);
 10258  1147  0829               	movf	lcd_clear@col,w
 10259  1148  00A6               	movwf	??_lcd_clear
 10260  1149  0826               	movf	??_lcd_clear,w
 10261  114A  00FA               	movwf	lcd_set_cursor@col
 10262  114B  0828               	movf	lcd_clear@row,w
 10263  114C  00A7               	movwf	??_lcd_clear+1
 10264  114D  0827               	movf	??_lcd_clear+1,w
 10265  114E  00FB               	movwf	lcd_set_cursor@row
 10266  114F  082A               	movf	lcd_clear@p,w
 10267  1150  3190  20CA  3191   	fcall	_lcd_set_cursor
 10268  1153                     l3838:
 10269                           
 10270                           ;lcd_lib.c: 95:             lcd_print(p, " ");
 10271  1153  304A               	movlw	low (STR_1| (0+32768))
 10272  1154  00FA               	movwf	lcd_print@str
 10273  1155  30A0               	movlw	high (STR_1| (0+32768))
 10274  1156  00FB               	movwf	lcd_print@str+1
 10275  1157  0020               	movlb	0	; select bank0
 10276  1158  082A               	movf	lcd_clear@p,w
 10277  1159  3190  201F  3191   	fcall	_lcd_print
 10278  115C                     l3840:
 10279                           
 10280                           ;lcd_lib.c: 96:         }
 10281  115C  3001               	movlw	1
 10282  115D  0020               	movlb	0	; select bank0
 10283  115E  00A6               	movwf	??_lcd_clear
 10284  115F  0826               	movf	??_lcd_clear,w
 10285  1160  07A9               	addwf	lcd_clear@col,f
 10286  1161                     l3842:
 10287  1161  0A2A               	incf	lcd_clear@p,w
 10288  1162  0086               	movwf	6
 10289  1163  3001               	movlw	1	; select bank2/3
 10290  1164  0087               	movwf	7
 10291  1165  0801               	movf	1,w
 10292  1166  0229               	subwf	lcd_clear@col,w
 10293  1167  1C03               	skipc
 10294  1168  296A               	goto	u4601
 10295  1169  296B               	goto	u4600
 10296  116A                     u4601:
 10297  116A  2947               	goto	l3836
 10298  116B                     u4600:
 10299  116B                     l3844:
 10300                           
 10301                           ;lcd_lib.c: 97:     }
 10302  116B  3001               	movlw	1
 10303  116C  00A6               	movwf	??_lcd_clear
 10304  116D  0826               	movf	??_lcd_clear,w
 10305  116E  07A8               	addwf	lcd_clear@row,f
 10306  116F                     l3846:
 10307  116F  082A               	movf	lcd_clear@p,w
 10308  1170  3E02               	addlw	2
 10309  1171  0086               	movwf	6
 10310  1172  3001               	movlw	1	; select bank2/3
 10311  1173  0087               	movwf	7
 10312  1174  0801               	movf	1,w
 10313  1175  0228               	subwf	lcd_clear@row,w
 10314  1176  1C03               	skipc
 10315  1177  2979               	goto	u4611
 10316  1178  297A               	goto	u4610
 10317  1179                     u4611:
 10318  1179  2945               	goto	l3834
 10319  117A                     u4610:
 10320  117A                     l3848:
 10321                           
 10322                           ;lcd_lib.c: 99:     lcd_set_cursor(p, 0, 0);
 10323  117A  01FA               	clrf	lcd_set_cursor@col
 10324  117B  01FB               	clrf	lcd_set_cursor@row
 10325  117C  082A               	movf	lcd_clear@p,w
 10326  117D  3190  20CA  3191   	fcall	_lcd_set_cursor
 10327  1180                     l329:
 10328  1180  0008               	return
 10329  1181                     __end_of_lcd_clear:
 10330                           
 10331                           	psect	text31
 10332  10CA                     __ptext31:	
 10333 ;; *************** function _lcd_set_cursor *****************
 10334 ;; Defined at:
 10335 ;;		line 107 in file "lcd_lib.c"
 10336 ;; Parameters:    Size  Location     Type
 10337 ;;  p               1    wreg     PTR struct .
 10338 ;;		 -> NULL(0), main@lcd(4), 
 10339 ;;  col             1   10[COMMON] unsigned char 
 10340 ;;  row             1   11[COMMON] unsigned char 
 10341 ;; Auto vars:     Size  Location     Type
 10342 ;;  p               1    5[BANK0 ] PTR struct .
 10343 ;;		 -> NULL(0), main@lcd(4), 
 10344 ;;  row_offsets     4    0[BANK0 ] unsigned char [4]
 10345 ;;  cmd             1    4[BANK0 ] unsigned char 
 10346 ;; Return value:  Size  Location     Type
 10347 ;;                  1    wreg      void 
 10348 ;; Registers used:
 10349 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 10350 ;; Tracked objects:
 10351 ;;		On entry : 0/0
 10352 ;;		On exit  : 0/0
 10353 ;;		Unchanged: 0/0
 10354 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 10355 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10356 ;;      Locals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10357 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10358 ;;      Totals:         3       6       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10359 ;;Total ram usage:        9 bytes
 10360 ;; Hardware stack levels used: 1
 10361 ;; Hardware stack levels required when called: 4
 10362 ;; This function calls:
 10363 ;;		_command
 10364 ;; This function is called by:
 10365 ;;		_lcd_clear
 10366 ;;		_lcd_print_with
 10367 ;; This function uses a non-reentrant model
 10368 ;;
 10369                           
 10370                           
 10371                           ;psect for function _lcd_set_cursor
 10372  10CA                     _lcd_set_cursor:
 10373                           
 10374                           ;incstack = 0
 10375                           ; Regs used in _lcd_set_cursor: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
 10376                           ;lcd_set_cursor@p stored from wreg
 10377  10CA  0020               	movlb	0	; select bank0
 10378  10CB  00A5               	movwf	lcd_set_cursor@p
 10379  10CC                     l3574:
 10380                           
 10381                           ;lcd_lib.c: 108:     uint8_t row_offsets[] = {0x00, 0x40, 0x14, 0x54};
 10382  10CC  0021               	movlb	1	; select bank1
 10383  10CD  0868               	movf	(lcd_set_cursor@F2781+3)^(0+128),w
 10384  10CE  0020               	movlb	0	; select bank0
 10385  10CF  00A3               	movwf	lcd_set_cursor@row_offsets+3
 10386  10D0  0021               	movlb	1	; select bank1
 10387  10D1  0867               	movf	(lcd_set_cursor@F2781+2)^(0+128),w
 10388  10D2  0020               	movlb	0	; select bank0
 10389  10D3  00A2               	movwf	lcd_set_cursor@row_offsets+2
 10390  10D4  0021               	movlb	1	; select bank1
 10391  10D5  0866               	movf	(lcd_set_cursor@F2781+1)^(0+128),w
 10392  10D6  0020               	movlb	0	; select bank0
 10393  10D7  00A1               	movwf	lcd_set_cursor@row_offsets+1
 10394  10D8  0021               	movlb	1	; select bank1
 10395  10D9  0865               	movf	lcd_set_cursor@F2781^(0+128),w
 10396  10DA  0020               	movlb	0	; select bank0
 10397  10DB  00A0               	movwf	lcd_set_cursor@row_offsets
 10398  10DC                     l3576:
 10399                           
 10400                           ;lcd_lib.c: 109:     if(row > p->ROW){
 10401  10DC  0825               	movf	lcd_set_cursor@p,w
 10402  10DD  3E02               	addlw	2
 10403  10DE  0086               	movwf	6
 10404  10DF  3001               	movlw	1	; select bank2/3
 10405  10E0  0087               	movwf	7
 10406  10E1  087B               	movf	lcd_set_cursor@row,w
 10407  10E2  0201               	subwf	1,w
 10408  10E3  1803               	skipnc
 10409  10E4  28E6               	goto	u4291
 10410  10E5  28E7               	goto	u4290
 10411  10E6                     u4291:
 10412  10E6  28F1               	goto	l334
 10413  10E7                     u4290:
 10414  10E7                     l3578:
 10415                           
 10416                           ;lcd_lib.c: 110:         row = p->ROW - 1;
 10417  10E7  0825               	movf	lcd_set_cursor@p,w
 10418  10E8  3E02               	addlw	2
 10419  10E9  0086               	movwf	6
 10420  10EA  3001               	movlw	1	; select bank2/3
 10421  10EB  0087               	movwf	7
 10422  10EC  0801               	movf	1,w
 10423  10ED  3EFF               	addlw	255
 10424  10EE  00FC               	movwf	??_lcd_set_cursor
 10425  10EF  087C               	movf	??_lcd_set_cursor,w
 10426  10F0  00FB               	movwf	lcd_set_cursor@row
 10427  10F1                     l334:	
 10428                           ;lcd_lib.c: 111:     }
 10429                           
 10430                           
 10431                           ;lcd_lib.c: 112:     uint8_t cmd = 0x80 | (col + row_offsets[row]);
 10432  10F1  087B               	movf	lcd_set_cursor@row,w
 10433  10F2  3E20               	addlw	(low (lcd_set_cursor@row_offsets| 0))& (0+255)
 10434  10F3  0086               	movwf	6
 10435  10F4  0187               	clrf	7
 10436  10F5  0801               	movf	1,w
 10437  10F6  077A               	addwf	lcd_set_cursor@col,w
 10438  10F7  3880               	iorlw	128
 10439  10F8  00FC               	movwf	??_lcd_set_cursor
 10440  10F9  087C               	movf	??_lcd_set_cursor,w
 10441  10FA  00A4               	movwf	lcd_set_cursor@cmd
 10442  10FB                     l3580:
 10443                           
 10444                           ;lcd_lib.c: 113:     command(p, cmd, 0);
 10445  10FB  0824               	movf	lcd_set_cursor@cmd,w
 10446  10FC  00FC               	movwf	??_lcd_set_cursor
 10447  10FD  087C               	movf	??_lcd_set_cursor,w
 10448  10FE  00F3               	movwf	command@val
 10449  10FF  01F4               	clrf	command@mode
 10450  1100  0825               	movf	lcd_set_cursor@p,w
 10451  1101  3192  222A  3190   	fcall	_command
 10452  1104                     l335:
 10453  1104  0008               	return
 10454  1105                     __end_of_lcd_set_cursor:
 10455                           
 10456                           	psect	text32
 10457  101F                     __ptext32:	
 10458 ;; *************** function _lcd_print *****************
 10459 ;; Defined at:
 10460 ;;		line 121 in file "lcd_lib.c"
 10461 ;; Parameters:    Size  Location     Type
 10462 ;;  p               1    wreg     PTR struct .
 10463 ;;		 -> NULL(0), main@lcd(4), 
 10464 ;;  str             2   10[COMMON] PTR unsigned char 
 10465 ;;		 -> set_max_gram@valstr(16), print_gram@row2(16), print_gram@row1(16), initialize@valstr(16), 
 10466 ;;		 -> STR_3(15), STR_2(11), STR_1(2), 
 10467 ;; Auto vars:     Size  Location     Type
 10468 ;;  p               1    1[BANK0 ] PTR struct .
 10469 ;;		 -> NULL(0), main@lcd(4), 
 10470 ;;  cmd             1    0[BANK0 ] unsigned char 
 10471 ;; Return value:  Size  Location     Type
 10472 ;;                  1    wreg      void 
 10473 ;; Registers used:
 10474 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 10475 ;; Tracked objects:
 10476 ;;		On entry : 0/0
 10477 ;;		On exit  : 0/0
 10478 ;;		Unchanged: 0/0
 10479 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 10480 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10481 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10482 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10483 ;;      Totals:         3       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10484 ;;Total ram usage:        5 bytes
 10485 ;; Hardware stack levels used: 1
 10486 ;; Hardware stack levels required when called: 4
 10487 ;; This function calls:
 10488 ;;		_command
 10489 ;; This function is called by:
 10490 ;;		_lcd_clear
 10491 ;;		_lcd_print_with
 10492 ;;		_initialize
 10493 ;;		_set_max_gram
 10494 ;; This function uses a non-reentrant model
 10495 ;;
 10496                           
 10497                           
 10498                           ;psect for function _lcd_print
 10499  101F                     _lcd_print:
 10500                           
 10501                           ;incstack = 0
 10502                           ; Regs used in _lcd_print: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 10503                           ;lcd_print@p stored from wreg
 10504  101F  0020               	movlb	0	; select bank0
 10505  1020  00A1               	movwf	lcd_print@p
 10506  1021                     l3582:
 10507                           
 10508                           ;lcd_lib.c: 122:     while (*str) {
 10509  1021  2839               	goto	l3590
 10510  1022                     l3584:
 10511                           
 10512                           ;lcd_lib.c: 123:         uint8_t cmd = *str++;
 10513  1022  087A               	movf	lcd_print@str,w
 10514  1023  0084               	movwf	4
 10515  1024  087B               	movf	lcd_print@str+1,w
 10516  1025  0085               	movwf	5
 10517  1026  0800               	movf	0,w	;code access
 10518  1027  00FC               	movwf	??_lcd_print
 10519  1028  087C               	movf	??_lcd_print,w
 10520  1029  0020               	movlb	0	; select bank0
 10521  102A  00A0               	movwf	lcd_print@cmd
 10522  102B                     l3586:
 10523  102B  3001               	movlw	1
 10524  102C  07FA               	addwf	lcd_print@str,f
 10525  102D  3000               	movlw	0
 10526  102E  3DFB               	addwfc	lcd_print@str+1,f
 10527  102F                     l3588:
 10528                           
 10529                           ;lcd_lib.c: 124:         command(p, cmd, 0b00000001);
 10530  102F  0820               	movf	lcd_print@cmd,w
 10531  1030  00FC               	movwf	??_lcd_print
 10532  1031  087C               	movf	??_lcd_print,w
 10533  1032  00F3               	movwf	command@val
 10534  1033  01F4               	clrf	command@mode
 10535  1034  0AF4               	incf	command@mode,f
 10536  1035  0821               	movf	lcd_print@p,w
 10537  1036  3192  222A  3190   	fcall	_command
 10538  1039                     l3590:
 10539                           
 10540                           ;lcd_lib.c: 122:     while (*str) {
 10541  1039  087A               	movf	lcd_print@str,w
 10542  103A  0084               	movwf	4
 10543  103B  087B               	movf	lcd_print@str+1,w
 10544  103C  0085               	movwf	5
 10545  103D  0012               	moviw fsr0++
 10546  103E  1D03               	btfss	3,2
 10547  103F  2841               	goto	u4301
 10548  1040  2842               	goto	u4300
 10549  1041                     u4301:
 10550  1041  2822               	goto	l3584
 10551  1042                     u4300:
 10552  1042                     l341:
 10553  1042  0008               	return
 10554  1043                     __end_of_lcd_print:
 10555                           
 10556                           	psect	text33
 10557  122A                     __ptext33:	
 10558 ;; *************** function _command *****************
 10559 ;; Defined at:
 10560 ;;		line 140 in file "lcd_lib.c"
 10561 ;; Parameters:    Size  Location     Type
 10562 ;;  p               1    wreg     PTR struct .
 10563 ;;		 -> NULL(0), main@lcd(4), 
 10564 ;;  val             1    3[COMMON] unsigned char 
 10565 ;;  mode            1    4[COMMON] unsigned char 
 10566 ;; Auto vars:     Size  Location     Type
 10567 ;;  p               1    9[COMMON] PTR struct .
 10568 ;;		 -> NULL(0), main@lcd(4), 
 10569 ;;  lownib          1    8[COMMON] unsigned char 
 10570 ;;  highnib         1    7[COMMON] unsigned char 
 10571 ;; Return value:  Size  Location     Type
 10572 ;;                  1    wreg      void 
 10573 ;; Registers used:
 10574 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 10575 ;; Tracked objects:
 10576 ;;		On entry : 0/0
 10577 ;;		On exit  : 0/0
 10578 ;;		Unchanged: 0/0
 10579 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 10580 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10581 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10582 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10583 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10584 ;;Total ram usage:        7 bytes
 10585 ;; Hardware stack levels used: 1
 10586 ;; Hardware stack levels required when called: 3
 10587 ;; This function calls:
 10588 ;;		_lcd_cmd
 10589 ;; This function is called by:
 10590 ;;		_lcd_set_cursor
 10591 ;;		_lcd_print
 10592 ;; This function uses a non-reentrant model
 10593 ;;
 10594                           
 10595                           
 10596                           ;psect for function _command
 10597  122A                     _command:
 10598                           
 10599                           ;incstack = 0
 10600                           ; Regs used in _command: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
 10601                           ;command@p stored from wreg
 10602  122A  00F9               	movwf	command@p
 10603  122B                     l3038:
 10604                           
 10605                           ;lcd_lib.c: 141:     uint8_t highnib = (val & 0xf0) | p->_backlightval | mode;
 10606  122B  0879               	movf	command@p,w
 10607  122C  3E03               	addlw	3
 10608  122D  0086               	movwf	6
 10609  122E  3001               	movlw	1	; select bank2/3
 10610  122F  0087               	movwf	7
 10611  1230  0873               	movf	command@val,w
 10612  1231  39F0               	andlw	240
 10613  1232  0401               	iorwf	1,w
 10614  1233  0474               	iorwf	command@mode,w
 10615  1234  00F5               	movwf	??_command
 10616  1235  0875               	movf	??_command,w
 10617  1236  00F7               	movwf	command@highnib
 10618                           
 10619                           ;lcd_lib.c: 142:  uint8_t lownib = ((val << 4) & 0xf0) | p->_backlightval | mode;
 10620  1237  0879               	movf	command@p,w
 10621  1238  3E03               	addlw	3
 10622  1239  0086               	movwf	6
 10623  123A  3001               	movlw	1	; select bank2/3
 10624  123B  0087               	movwf	7
 10625  123C  0873               	movf	command@val,w
 10626  123D  00F5               	movwf	??_command
 10627  123E  3003               	movlw	3
 10628  123F                     u3305:
 10629  123F  35F5               	lslf	??_command,f
 10630  1240  3EFF               	addlw	-1
 10631  1241  1D03               	skipz
 10632  1242  2A3F               	goto	u3305
 10633  1243  3575               	lslf	??_command,w
 10634  1244  39F0               	andlw	240
 10635  1245  0401               	iorwf	1,w
 10636  1246  0474               	iorwf	command@mode,w
 10637  1247  00F6               	movwf	??_command+1
 10638  1248  0876               	movf	??_command+1,w
 10639  1249  00F8               	movwf	command@lownib
 10640  124A                     l3040:
 10641                           
 10642                           ;lcd_lib.c: 144:  lcd_cmd(p, highnib);
 10643  124A  0877               	movf	command@highnib,w
 10644  124B  00F5               	movwf	??_command
 10645  124C  0875               	movf	??_command,w
 10646  124D  00F1               	movwf	lcd_cmd@cmd
 10647  124E  0879               	movf	command@p,w
 10648  124F  319F  270F  3192   	fcall	_lcd_cmd
 10649  1252                     l3042:
 10650                           
 10651                           ;lcd_lib.c: 145:     lcd_cmd(p, highnib | 0b00000100);
 10652  1252  0877               	movf	command@highnib,w
 10653  1253  3804               	iorlw	4
 10654  1254  00F5               	movwf	??_command
 10655  1255  0875               	movf	??_command,w
 10656  1256  00F1               	movwf	lcd_cmd@cmd
 10657  1257  0879               	movf	command@p,w
 10658  1258  319F  270F  3192   	fcall	_lcd_cmd
 10659  125B                     l3044:
 10660                           
 10661                           ;lcd_lib.c: 146:     lcd_cmd(p, highnib & ~0b00000100);
 10662  125B  0877               	movf	command@highnib,w
 10663  125C  39FB               	andlw	251
 10664  125D  00F5               	movwf	??_command
 10665  125E  0875               	movf	??_command,w
 10666  125F  00F1               	movwf	lcd_cmd@cmd
 10667  1260  0879               	movf	command@p,w
 10668  1261  319F  270F  3192   	fcall	_lcd_cmd
 10669  1264                     l3046:
 10670                           
 10671                           ;lcd_lib.c: 148:     _delay((unsigned long)((100)*(8000000/4000000.0)));
 10672  1264  3042               	movlw	66
 10673  1265                     u4847:
 10674  1265  0B89               	decfsz	9,f
 10675  1266  2A65               	goto	u4847
 10676  1267  3200               	nop2
 10677  1268                     l3048:
 10678                           
 10679                           ;lcd_lib.c: 150:  lcd_cmd(p, lownib);
 10680  1268  0878               	movf	command@lownib,w
 10681  1269  00F5               	movwf	??_command
 10682  126A  0875               	movf	??_command,w
 10683  126B  00F1               	movwf	lcd_cmd@cmd
 10684  126C  0879               	movf	command@p,w
 10685  126D  319F  270F  3192   	fcall	_lcd_cmd
 10686  1270                     l3050:
 10687                           
 10688                           ;lcd_lib.c: 151:     lcd_cmd(p, lownib | 0b00000100);
 10689  1270  0878               	movf	command@lownib,w
 10690  1271  3804               	iorlw	4
 10691  1272  00F5               	movwf	??_command
 10692  1273  0875               	movf	??_command,w
 10693  1274  00F1               	movwf	lcd_cmd@cmd
 10694  1275  0879               	movf	command@p,w
 10695  1276  319F  270F  3192   	fcall	_lcd_cmd
 10696  1279                     l3052:
 10697                           
 10698                           ;lcd_lib.c: 152:     lcd_cmd(p, lownib & ~0b00000100);
 10699  1279  0878               	movf	command@lownib,w
 10700  127A  39FB               	andlw	251
 10701  127B  00F5               	movwf	??_command
 10702  127C  0875               	movf	??_command,w
 10703  127D  00F1               	movwf	lcd_cmd@cmd
 10704  127E  0879               	movf	command@p,w
 10705  127F  319F  270F  3192   	fcall	_lcd_cmd
 10706  1282                     l347:
 10707  1282  0008               	return
 10708  1283                     __end_of_command:
 10709                           
 10710                           	psect	text34
 10711  1EF8                     __ptext34:	
 10712 ;; *************** function _lcd_backlight *****************
 10713 ;; Defined at:
 10714 ;;		line 81 in file "lcd_lib.c"
 10715 ;; Parameters:    Size  Location     Type
 10716 ;;  p               1    wreg     PTR struct .
 10717 ;;		 -> NULL(0), main@lcd(4), 
 10718 ;; Auto vars:     Size  Location     Type
 10719 ;;  p               1    4[COMMON] PTR struct .
 10720 ;;		 -> NULL(0), main@lcd(4), 
 10721 ;; Return value:  Size  Location     Type
 10722 ;;                  1    wreg      void 
 10723 ;; Registers used:
 10724 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 10725 ;; Tracked objects:
 10726 ;;		On entry : 0/0
 10727 ;;		On exit  : 0/0
 10728 ;;		Unchanged: 0/0
 10729 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 10730 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10731 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10732 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10733 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10734 ;;Total ram usage:        2 bytes
 10735 ;; Hardware stack levels used: 1
 10736 ;; Hardware stack levels required when called: 3
 10737 ;; This function calls:
 10738 ;;		_lcd_cmd
 10739 ;; This function is called by:
 10740 ;;		_initialize
 10741 ;; This function uses a non-reentrant model
 10742 ;;
 10743                           
 10744                           
 10745                           ;psect for function _lcd_backlight
 10746  1EF8                     _lcd_backlight:
 10747                           
 10748                           ;incstack = 0
 10749                           ; Regs used in _lcd_backlight: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
 10750                           ;lcd_backlight@p stored from wreg
 10751  1EF8  00F4               	movwf	lcd_backlight@p
 10752  1EF9                     l3826:
 10753                           
 10754                           ;lcd_lib.c: 82:     lcd_cmd(p, 0x08);
 10755  1EF9  3008               	movlw	8
 10756  1EFA  00F3               	movwf	??_lcd_backlight
 10757  1EFB  0873               	movf	??_lcd_backlight,w
 10758  1EFC  00F1               	movwf	lcd_cmd@cmd
 10759  1EFD  0874               	movf	lcd_backlight@p,w
 10760  1EFE  319F  270F  319E   	fcall	_lcd_cmd
 10761  1F01                     l3828:
 10762                           
 10763                           ;lcd_lib.c: 83:     p->_backlightval = 0x08;
 10764  1F01  3008               	movlw	8
 10765  1F02  00F3               	movwf	??_lcd_backlight
 10766  1F03  0874               	movf	lcd_backlight@p,w
 10767  1F04  3E03               	addlw	3
 10768  1F05  0086               	movwf	6
 10769  1F06  3001               	movlw	1	; select bank2/3
 10770  1F07  0087               	movwf	7
 10771  1F08  0873               	movf	??_lcd_backlight,w
 10772  1F09  0081               	movwf	1
 10773  1F0A                     l3830:
 10774                           
 10775                           ;lcd_lib.c: 84:     _delay((unsigned long)((10)*(8000000/4000000.0)));
 10776  1F0A  3006               	movlw	6
 10777  1F0B                     u4857:
 10778  1F0B  0B89               	decfsz	9,f
 10779  1F0C  2F0B               	goto	u4857
 10780  1F0D  3200               	nop2
 10781  1F0E                     l320:
 10782  1F0E  0008               	return
 10783  1F0F                     __end_of_lcd_backlight:
 10784                           
 10785                           	psect	text35
 10786  1F0F                     __ptext35:	
 10787 ;; *************** function _lcd_cmd *****************
 10788 ;; Defined at:
 10789 ;;		line 6 in file "lcd_lib.c"
 10790 ;; Parameters:    Size  Location     Type
 10791 ;;  p               1    wreg     PTR struct .
 10792 ;;		 -> NULL(0), main@lcd(4), 
 10793 ;;  cmd             1    1[COMMON] unsigned char 
 10794 ;; Auto vars:     Size  Location     Type
 10795 ;;  p               1    2[COMMON] PTR struct .
 10796 ;;		 -> NULL(0), main@lcd(4), 
 10797 ;; Return value:  Size  Location     Type
 10798 ;;                  1    wreg      void 
 10799 ;; Registers used:
 10800 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 10801 ;; Tracked objects:
 10802 ;;		On entry : 0/0
 10803 ;;		On exit  : 0/0
 10804 ;;		Unchanged: 0/0
 10805 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 10806 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10807 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10808 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10809 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10810 ;;Total ram usage:        2 bytes
 10811 ;; Hardware stack levels used: 1
 10812 ;; Hardware stack levels required when called: 2
 10813 ;; This function calls:
 10814 ;;		_i2c_start
 10815 ;;		_i2c_stop
 10816 ;;		_i2c_write
 10817 ;; This function is called by:
 10818 ;;		_lcd_backlight
 10819 ;;		_command
 10820 ;;		_write4bits
 10821 ;; This function uses a non-reentrant model
 10822 ;;
 10823                           
 10824                           
 10825                           ;psect for function _lcd_cmd
 10826  1F0F                     _lcd_cmd:
 10827                           
 10828                           ;incstack = 0
 10829                           ; Regs used in _lcd_cmd: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
 10830                           ;lcd_cmd@p stored from wreg
 10831  1F0F  00F2               	movwf	lcd_cmd@p
 10832  1F10                     l2840:
 10833                           
 10834                           ;lcd_lib.c: 7:     i2c_start();
 10835  1F10  319E  2648  319F   	fcall	_i2c_start
 10836  1F13                     l2842:
 10837                           
 10838                           ;lcd_lib.c: 8:     i2c_write(p->lcd_address << 1);
 10839  1F13  0872               	movf	lcd_cmd@p,w
 10840  1F14  0086               	movwf	6
 10841  1F15  3001               	movlw	1	; select bank2/3
 10842  1F16  0087               	movwf	7
 10843  1F17  3501               	lslf	1,w
 10844  1F18  319E  26C1  319F   	fcall	_i2c_write
 10845  1F1B                     l2844:
 10846                           
 10847                           ;lcd_lib.c: 9:     i2c_write(cmd);
 10848  1F1B  0871               	movf	lcd_cmd@cmd,w
 10849  1F1C  319E  26C1  319F   	fcall	_i2c_write
 10850  1F1F                     l2846:
 10851                           
 10852                           ;lcd_lib.c: 10:     i2c_stop();
 10853  1F1F  319E  2627  319F   	fcall	_i2c_stop
 10854  1F22                     l2848:
 10855                           
 10856                           ;lcd_lib.c: 11:     _delay((unsigned long)((10)*(8000000/4000000.0)));
 10857  1F22  3006               	movlw	6
 10858  1F23                     u4867:
 10859  1F23  0B89               	decfsz	9,f
 10860  1F24  2F23               	goto	u4867
 10861  1F25  3200               	nop2
 10862  1F26                     l314:
 10863  1F26  0008               	return
 10864  1F27                     __end_of_lcd_cmd:
 10865                           
 10866                           	psect	text36
 10867  1EC1                     __ptext36:	
 10868 ;; *************** function _i2c_write *****************
 10869 ;; Defined at:
 10870 ;;		line 25 in file "i2c.c"
 10871 ;; Parameters:    Size  Location     Type
 10872 ;;  data            1    wreg     unsigned char 
 10873 ;; Auto vars:     Size  Location     Type
 10874 ;;  data            1    0[COMMON] unsigned char 
 10875 ;; Return value:  Size  Location     Type
 10876 ;;                  1    wreg      void 
 10877 ;; Registers used:
 10878 ;;		wreg, status,2, status,0, pclath, cstack
 10879 ;; Tracked objects:
 10880 ;;		On entry : 0/0
 10881 ;;		On exit  : 0/0
 10882 ;;		Unchanged: 0/0
 10883 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 10884 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10885 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10886 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10887 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10888 ;;Total ram usage:        1 bytes
 10889 ;; Hardware stack levels used: 1
 10890 ;; Hardware stack levels required when called: 1
 10891 ;; This function calls:
 10892 ;;		_i2c_wait
 10893 ;; This function is called by:
 10894 ;;		_lcd_cmd
 10895 ;; This function uses a non-reentrant model
 10896 ;;
 10897                           
 10898                           
 10899                           ;psect for function _i2c_write
 10900  1EC1                     _i2c_write:
 10901                           
 10902                           ;incstack = 0
 10903                           ; Regs used in _i2c_write: [wreg+status,2+status,0+pclath+cstack]
 10904                           ;i2c_write@data stored from wreg
 10905  1EC1  00F0               	movwf	i2c_write@data
 10906  1EC2                     l2606:
 10907                           
 10908                           ;i2c.c: 26:     SSPBUF = data;
 10909  1EC2  0870               	movf	i2c_write@data,w
 10910  1EC3  0024               	movlb	4	; select bank4
 10911  1EC4  0091               	movwf	17	;volatile
 10912  1EC5                     l96:	
 10913                           ;i2c.c: 27:     while(SSPSTATbits.BF);
 10914                           
 10915  1EC5  1814               	btfsc	20,0	;volatile
 10916  1EC6  2EC8               	goto	u2451
 10917  1EC7  2EC9               	goto	u2450
 10918  1EC8                     u2451:
 10919  1EC8  2EC5               	goto	l96
 10920  1EC9                     u2450:
 10921  1EC9                     l99:
 10922  1EC9  1B16               	btfsc	22,6	;volatile
 10923  1ECA  2ECC               	goto	u2461
 10924  1ECB  2ECD               	goto	u2460
 10925  1ECC                     u2461:
 10926  1ECC  2EC9               	goto	l99
 10927  1ECD                     u2460:
 10928  1ECD                     l2608:
 10929                           
 10930                           ;i2c.c: 29:     i2c_wait();
 10931  1ECD  319E  26B5  319E   	fcall	_i2c_wait
 10932  1ED0                     l102:
 10933  1ED0  0008               	return
 10934  1ED1                     __end_of_i2c_write:
 10935                           
 10936                           	psect	text37
 10937  1E27                     __ptext37:	
 10938 ;; *************** function _i2c_stop *****************
 10939 ;; Defined at:
 10940 ;;		line 14 in file "i2c.c"
 10941 ;; Parameters:    Size  Location     Type
 10942 ;;		None
 10943 ;; Auto vars:     Size  Location     Type
 10944 ;;		None
 10945 ;; Return value:  Size  Location     Type
 10946 ;;                  1    wreg      void 
 10947 ;; Registers used:
 10948 ;;		None
 10949 ;; Tracked objects:
 10950 ;;		On entry : 0/0
 10951 ;;		On exit  : 0/0
 10952 ;;		Unchanged: 0/0
 10953 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 10954 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10955 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10956 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10957 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10958 ;;Total ram usage:        0 bytes
 10959 ;; Hardware stack levels used: 1
 10960 ;; This function calls:
 10961 ;;		Nothing
 10962 ;; This function is called by:
 10963 ;;		_lcd_cmd
 10964 ;; This function uses a non-reentrant model
 10965 ;;
 10966                           
 10967                           
 10968                           ;psect for function _i2c_stop
 10969  1E27                     _i2c_stop:
 10970  1E27                     l2604:	
 10971                           ;incstack = 0
 10972                           ; Regs used in _i2c_stop: []
 10973                           
 10974                           
 10975                           ;i2c.c: 15:     SSPCON2bits.PEN = 1;
 10976  1E27  0024               	movlb	4	; select bank4
 10977  1E28  1516               	bsf	22,2	;volatile
 10978  1E29                     l84:	
 10979                           ;i2c.c: 16:     while(SSPCON2bits.PEN);
 10980                           
 10981  1E29  1916               	btfsc	22,2	;volatile
 10982  1E2A  2E2C               	goto	u2441
 10983  1E2B  2E2D               	goto	u2440
 10984  1E2C                     u2441:
 10985  1E2C  2E29               	goto	l84
 10986  1E2D                     u2440:
 10987  1E2D                     l87:
 10988  1E2D  0008               	return
 10989  1E2E                     __end_of_i2c_stop:
 10990                           
 10991                           	psect	text38
 10992  1E48                     __ptext38:	
 10993 ;; *************** function _i2c_start *****************
 10994 ;; Defined at:
 10995 ;;		line 8 in file "i2c.c"
 10996 ;; Parameters:    Size  Location     Type
 10997 ;;		None
 10998 ;; Auto vars:     Size  Location     Type
 10999 ;;		None
 11000 ;; Return value:  Size  Location     Type
 11001 ;;                  1    wreg      void 
 11002 ;; Registers used:
 11003 ;;		wreg, status,2, status,0, pclath, cstack
 11004 ;; Tracked objects:
 11005 ;;		On entry : 0/0
 11006 ;;		On exit  : 0/0
 11007 ;;		Unchanged: 0/0
 11008 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 11009 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11010 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11011 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11012 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11013 ;;Total ram usage:        0 bytes
 11014 ;; Hardware stack levels used: 1
 11015 ;; Hardware stack levels required when called: 1
 11016 ;; This function calls:
 11017 ;;		_i2c_wait
 11018 ;; This function is called by:
 11019 ;;		_lcd_cmd
 11020 ;; This function uses a non-reentrant model
 11021 ;;
 11022                           
 11023                           
 11024                           ;psect for function _i2c_start
 11025  1E48                     _i2c_start:
 11026  1E48                     l2600:	
 11027                           ;incstack = 0
 11028                           ; Regs used in _i2c_start: [wreg+status,2+status,0+pclath+cstack]
 11029                           
 11030                           
 11031                           ;i2c.c: 9:     i2c_wait();
 11032  1E48  319E  26B5  319E   	fcall	_i2c_wait
 11033  1E4B                     l2602:
 11034                           
 11035                           ;i2c.c: 10:     SSPCON2bits.SEN = 1;
 11036  1E4B  0024               	movlb	4	; select bank4
 11037  1E4C  1416               	bsf	22,0	;volatile
 11038  1E4D                     l78:	
 11039                           ;i2c.c: 11:     while(SSPCON2bits.SEN);
 11040                           
 11041  1E4D  1816               	btfsc	22,0	;volatile
 11042  1E4E  2E50               	goto	u2431
 11043  1E4F  2E51               	goto	u2430
 11044  1E50                     u2431:
 11045  1E50  2E4D               	goto	l78
 11046  1E51                     u2430:
 11047  1E51                     l81:
 11048  1E51  0008               	return
 11049  1E52                     __end_of_i2c_start:
 11050                           
 11051                           	psect	text39
 11052  1EB5                     __ptext39:	
 11053 ;; *************** function _i2c_wait *****************
 11054 ;; Defined at:
 11055 ;;		line 4 in file "i2c.c"
 11056 ;; Parameters:    Size  Location     Type
 11057 ;;		None
 11058 ;; Auto vars:     Size  Location     Type
 11059 ;;		None
 11060 ;; Return value:  Size  Location     Type
 11061 ;;                  1    wreg      void 
 11062 ;; Registers used:
 11063 ;;		wreg, status,2
 11064 ;; Tracked objects:
 11065 ;;		On entry : 0/0
 11066 ;;		On exit  : 0/0
 11067 ;;		Unchanged: 0/0
 11068 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 11069 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11070 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11071 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11072 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11073 ;;Total ram usage:        0 bytes
 11074 ;; Hardware stack levels used: 1
 11075 ;; This function calls:
 11076 ;;		Nothing
 11077 ;; This function is called by:
 11078 ;;		_i2c_start
 11079 ;;		_i2c_write
 11080 ;;		_i2c_repeated_start
 11081 ;;		_i2c_read
 11082 ;; This function uses a non-reentrant model
 11083 ;;
 11084                           
 11085                           
 11086                           ;psect for function _i2c_wait
 11087  1EB5                     _i2c_wait:
 11088  1EB5                     l2576:	
 11089                           ;incstack = 0
 11090                           ; Regs used in _i2c_wait: [wreg+status,2]
 11091                           
 11092  1EB5                     l2578:	
 11093                           ;i2c.c: 5:     while((SSPCON2 & 0x1F) || (SSPSTAT & 0x04));
 11094                           
 11095  1EB5  0024               	movlb	4	; select bank4
 11096  1EB6  0816               	movf	22,w	;volatile
 11097  1EB7  391F               	andlw	31
 11098  1EB8  1D03               	btfss	3,2
 11099  1EB9  2EBB               	goto	u2391
 11100  1EBA  2EBC               	goto	u2390
 11101  1EBB                     u2391:
 11102  1EBB  2EB5               	goto	l2578
 11103  1EBC                     u2390:
 11104  1EBC                     l2580:
 11105  1EBC  1914               	btfsc	20,2	;volatile
 11106  1EBD  2EBF               	goto	u2401
 11107  1EBE  2EC0               	goto	u2400
 11108  1EBF                     u2401:
 11109  1EBF  2EB5               	goto	l2578
 11110  1EC0                     u2400:
 11111  1EC0                     l75:
 11112  1EC0  0008               	return
 11113  1EC1                     __end_of_i2c_wait:
 11114                           
 11115                           	psect	text40
 11116  1ED1                     __ptext40:	
 11117 ;; *************** function _initialize_digit *****************
 11118 ;; Defined at:
 11119 ;;		line 187 in file "tm1637.c"
 11120 ;; Parameters:    Size  Location     Type
 11121 ;;  p               1    wreg     PTR struct .
 11122 ;;		 -> NULL(0), main@tm1637(2), 
 11123 ;; Auto vars:     Size  Location     Type
 11124 ;;  p               1   13[BANK0 ] PTR struct .
 11125 ;;		 -> NULL(0), main@tm1637(2), 
 11126 ;; Return value:  Size  Location     Type
 11127 ;;                  1    wreg      void 
 11128 ;; Registers used:
 11129 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 11130 ;; Tracked objects:
 11131 ;;		On entry : 0/0
 11132 ;;		On exit  : 0/0
 11133 ;;		Unchanged: 0/0
 11134 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 11135 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11136 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11137 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11138 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11139 ;;Total ram usage:        2 bytes
 11140 ;; Hardware stack levels used: 1
 11141 ;; Hardware stack levels required when called: 4
 11142 ;; This function calls:
 11143 ;;		_print_digit
 11144 ;;		_set_brigthness
 11145 ;; This function is called by:
 11146 ;;		_initialize
 11147 ;; This function uses a non-reentrant model
 11148 ;;
 11149                           
 11150                           
 11151                           ;psect for function _initialize_digit
 11152  1ED1                     _initialize_digit:
 11153                           
 11154                           ;incstack = 0
 11155                           ; Regs used in _initialize_digit: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
 11156                           ;initialize_digit@p stored from wreg
 11157  1ED1  0020               	movlb	0	; select bank0
 11158  1ED2  00AD               	movwf	initialize_digit@p
 11159  1ED3                     l3788:
 11160                           
 11161                           ;tm1637.c: 188:     set_brigthness(p, 0x0f, 1);
 11162  1ED3  300F               	movlw	15
 11163  1ED4  00AC               	movwf	??_initialize_digit
 11164  1ED5  082C               	movf	??_initialize_digit,w
 11165  1ED6  00F0               	movwf	set_brigthness@brightness
 11166  1ED7  01F1               	clrf	set_brigthness@on
 11167  1ED8  0AF1               	incf	set_brigthness@on,f
 11168  1ED9  082D               	movf	initialize_digit@p,w
 11169  1EDA  319E  26E4  319E   	fcall	_set_brigthness
 11170  1EDD                     l3790:
 11171                           
 11172                           ;tm1637.c: 189:     print_digit(p, 0);
 11173  1EDD  01FD               	clrf	print_digit@number
 11174  1EDE  0020               	movlb	0	; select bank0
 11175  1EDF  082D               	movf	initialize_digit@p,w
 11176  1EE0  3189  21E0  319E   	fcall	_print_digit
 11177  1EE3                     l247:
 11178  1EE3  0008               	return
 11179  1EE4                     __end_of_initialize_digit:
 11180                           
 11181                           	psect	text41
 11182  1EE4                     __ptext41:	
 11183 ;; *************** function _set_brigthness *****************
 11184 ;; Defined at:
 11185 ;;		line 133 in file "tm1637.c"
 11186 ;; Parameters:    Size  Location     Type
 11187 ;;  p               1    wreg     PTR struct .
 11188 ;;		 -> NULL(0), main@tm1637(2), 
 11189 ;;  brightness      1    0[COMMON] unsigned char 
 11190 ;;  on              1    1[COMMON] unsigned char 
 11191 ;; Auto vars:     Size  Location     Type
 11192 ;;  p               1    3[COMMON] PTR struct .
 11193 ;;		 -> NULL(0), main@tm1637(2), 
 11194 ;; Return value:  Size  Location     Type
 11195 ;;                  1    wreg      void 
 11196 ;; Registers used:
 11197 ;;		wreg, status,2, status,0
 11198 ;; Tracked objects:
 11199 ;;		On entry : 0/0
 11200 ;;		On exit  : 0/0
 11201 ;;		Unchanged: 0/0
 11202 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 11203 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11204 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11205 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11206 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11207 ;;Total ram usage:        4 bytes
 11208 ;; Hardware stack levels used: 1
 11209 ;; This function calls:
 11210 ;;		Nothing
 11211 ;; This function is called by:
 11212 ;;		_initialize_digit
 11213 ;; This function uses a non-reentrant model
 11214 ;;
 11215                           
 11216                           
 11217                           ;psect for function _set_brigthness
 11218  1EE4                     _set_brigthness:
 11219  1EE4                     l3470:	
 11220                           ;incstack = 0
 11221                           ; Regs used in _set_brigthness: [wreg+status,2+status,0]
 11222                           
 11223                           
 11224                           ;tm1637.c: 134:     if(on == 1){
 11225  1EE4  0371               	decf	set_brigthness@on,w
 11226  1EE5  1D03               	btfss	3,2
 11227  1EE6  2EE8               	goto	u4211
 11228  1EE7  2EE9               	goto	u4210
 11229  1EE8                     u4211:
 11230  1EE8  2EF1               	goto	l3474
 11231  1EE9                     u4210:
 11232  1EE9                     l3472:
 11233                           
 11234                           ;tm1637.c: 135:         m_brightness = (brightness & 0x7 | 0x08);
 11235  1EE9  0870               	movf	set_brigthness@brightness,w
 11236  1EEA  3907               	andlw	7
 11237  1EEB  3808               	iorlw	8
 11238  1EEC  00F2               	movwf	??_set_brigthness
 11239  1EED  0872               	movf	??_set_brigthness,w
 11240  1EEE  0021               	movlb	1	; select bank1
 11241  1EEF  00E4               	movwf	_m_brightness^(0+128)
 11242                           
 11243                           ;tm1637.c: 136:     }else{
 11244  1EF0  2EF7               	goto	l230
 11245  1EF1                     l3474:
 11246                           
 11247                           ;tm1637.c: 137:         m_brightness = (brightness & 0x7 | 0x00);
 11248  1EF1  0870               	movf	set_brigthness@brightness,w
 11249  1EF2  3907               	andlw	7
 11250  1EF3  00F2               	movwf	??_set_brigthness
 11251  1EF4  0872               	movf	??_set_brigthness,w
 11252  1EF5  0021               	movlb	1	; select bank1
 11253  1EF6  00E4               	movwf	_m_brightness^(0+128)
 11254  1EF7                     l230:
 11255  1EF7  0008               	return
 11256  1EF8                     __end_of_set_brigthness:
 11257                           
 11258                           	psect	text42
 11259  09E0                     __ptext42:	
 11260 ;; *************** function _print_digit *****************
 11261 ;; Defined at:
 11262 ;;		line 192 in file "tm1637.c"
 11263 ;; Parameters:    Size  Location     Type
 11264 ;;  p               1    wreg     PTR struct .
 11265 ;;		 -> NULL(0), main@tm1637(2), 
 11266 ;;  number          1   13[COMMON] unsigned char 
 11267 ;; Auto vars:     Size  Location     Type
 11268 ;;  p               1   10[BANK0 ] PTR struct .
 11269 ;;		 -> NULL(0), main@tm1637(2), 
 11270 ;;  data            4    6[BANK0 ] unsigned char [4]
 11271 ;;  tmp             1   11[BANK0 ] unsigned char 
 11272 ;; Return value:  Size  Location     Type
 11273 ;;                  1    wreg      void 
 11274 ;; Registers used:
 11275 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 11276 ;; Tracked objects:
 11277 ;;		On entry : 0/0
 11278 ;;		On exit  : 0/0
 11279 ;;		Unchanged: 0/0
 11280 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 11281 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11282 ;;      Locals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11283 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11284 ;;      Totals:         1      10       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11285 ;;Total ram usage:       11 bytes
 11286 ;; Hardware stack levels used: 1
 11287 ;; Hardware stack levels required when called: 3
 11288 ;; This function calls:
 11289 ;;		___awdiv
 11290 ;;		___awmod
 11291 ;;		_encode_digit
 11292 ;;		_set_segments
 11293 ;; This function is called by:
 11294 ;;		_initialize_digit
 11295 ;;		_initialize
 11296 ;;		_print_gram
 11297 ;; This function uses a non-reentrant model
 11298 ;;
 11299                           
 11300                           
 11301                           ;psect for function _print_digit
 11302  09E0                     _print_digit:
 11303                           
 11304                           ;incstack = 0
 11305                           ; Regs used in _print_digit: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
 11306                           ;print_digit@p stored from wreg
 11307  09E0  0020               	movlb	0	; select bank0
 11308  09E1  00AA               	movwf	print_digit@p
 11309  09E2                     l3476:
 11310                           
 11311                           ;tm1637.c: 193:     uint8_t data[] = {0xff, 0xff, 0xff, 0xff};
 11312  09E2  0021               	movlb	1	; select bank1
 11313  09E3  086C               	movf	(print_digit@F2820+3)^(0+128),w
 11314  09E4  0020               	movlb	0	; select bank0
 11315  09E5  00A9               	movwf	print_digit@data+3
 11316  09E6  0021               	movlb	1	; select bank1
 11317  09E7  086B               	movf	(print_digit@F2820+2)^(0+128),w
 11318  09E8  0020               	movlb	0	; select bank0
 11319  09E9  00A8               	movwf	print_digit@data+2
 11320  09EA  0021               	movlb	1	; select bank1
 11321  09EB  086A               	movf	(print_digit@F2820+1)^(0+128),w
 11322  09EC  0020               	movlb	0	; select bank0
 11323  09ED  00A7               	movwf	print_digit@data+1
 11324  09EE  0021               	movlb	1	; select bank1
 11325  09EF  0869               	movf	print_digit@F2820^(0+128),w
 11326  09F0  0020               	movlb	0	; select bank0
 11327  09F1  00A6               	movwf	print_digit@data
 11328                           
 11329                           ;tm1637.c: 196:     uint8_t tmp = number;
 11330  09F2  087D               	movf	print_digit@number,w
 11331  09F3  00A2               	movwf	??_print_digit
 11332  09F4  0822               	movf	??_print_digit,w
 11333  09F5  00AB               	movwf	print_digit@tmp
 11334  09F6                     l3478:
 11335                           
 11336                           ;tm1637.c: 197:     data[0] = encode_digit(p, tmp / 1000);
 11337  09F6  30E8               	movlw	232
 11338  09F7  00F0               	movwf	___awdiv@divisor
 11339  09F8  3003               	movlw	3
 11340  09F9  00F1               	movwf	___awdiv@divisor+1
 11341  09FA  082B               	movf	print_digit@tmp,w
 11342  09FB  00A2               	movwf	??_print_digit
 11343  09FC  01A3               	clrf	??_print_digit+1
 11344  09FD  0822               	movf	??_print_digit,w
 11345  09FE  00F2               	movwf	___awdiv@dividend
 11346  09FF  0823               	movf	??_print_digit+1,w
 11347  0A00  00F3               	movwf	___awdiv@dividend+1
 11348  0A01  3193  23ED  3189   	fcall	___awdiv
 11349  0A04  0870               	movf	?___awdiv,w
 11350  0A05  0020               	movlb	0	; select bank0
 11351  0A06  00A4               	movwf	??_print_digit+2
 11352  0A07  0824               	movf	??_print_digit+2,w
 11353  0A08  00F9               	movwf	encode_digit@digit
 11354  0A09  082A               	movf	print_digit@p,w
 11355  0A0A  319E  262E  3189   	fcall	_encode_digit
 11356  0A0D  0020               	movlb	0	; select bank0
 11357  0A0E  00A5               	movwf	??_print_digit+3
 11358  0A0F  0825               	movf	??_print_digit+3,w
 11359  0A10  00A6               	movwf	print_digit@data
 11360  0A11                     l3480:
 11361                           
 11362                           ;tm1637.c: 198:     tmp %= 1000;
 11363  0A11  30E8               	movlw	232
 11364  0A12  00F0               	movwf	___awmod@divisor
 11365  0A13  3003               	movlw	3
 11366  0A14  00F1               	movwf	___awmod@divisor+1
 11367  0A15  082B               	movf	print_digit@tmp,w
 11368  0A16  00A2               	movwf	??_print_digit
 11369  0A17  01A3               	clrf	??_print_digit+1
 11370  0A18  0822               	movf	??_print_digit,w
 11371  0A19  00F2               	movwf	___awmod@dividend
 11372  0A1A  0823               	movf	??_print_digit+1,w
 11373  0A1B  00F3               	movwf	___awmod@dividend+1
 11374  0A1C  3191  2181  3189   	fcall	___awmod
 11375  0A1F  0870               	movf	?___awmod,w
 11376  0A20  0020               	movlb	0	; select bank0
 11377  0A21  00A4               	movwf	??_print_digit+2
 11378  0A22  0824               	movf	??_print_digit+2,w
 11379  0A23  00AB               	movwf	print_digit@tmp
 11380  0A24                     l3482:
 11381                           
 11382                           ;tm1637.c: 199:     data[1] = encode_digit(p, tmp / 100);
 11383  0A24  3064               	movlw	100
 11384  0A25  00F0               	movwf	___awdiv@divisor
 11385  0A26  3000               	movlw	0
 11386  0A27  00F1               	movwf	___awdiv@divisor+1
 11387  0A28  082B               	movf	print_digit@tmp,w
 11388  0A29  00A2               	movwf	??_print_digit
 11389  0A2A  01A3               	clrf	??_print_digit+1
 11390  0A2B  0822               	movf	??_print_digit,w
 11391  0A2C  00F2               	movwf	___awdiv@dividend
 11392  0A2D  0823               	movf	??_print_digit+1,w
 11393  0A2E  00F3               	movwf	___awdiv@dividend+1
 11394  0A2F  3193  23ED  3189   	fcall	___awdiv
 11395  0A32  0870               	movf	?___awdiv,w
 11396  0A33  0020               	movlb	0	; select bank0
 11397  0A34  00A4               	movwf	??_print_digit+2
 11398  0A35  0824               	movf	??_print_digit+2,w
 11399  0A36  00F9               	movwf	encode_digit@digit
 11400  0A37  082A               	movf	print_digit@p,w
 11401  0A38  319E  262E  3189   	fcall	_encode_digit
 11402  0A3B  0020               	movlb	0	; select bank0
 11403  0A3C  00A5               	movwf	??_print_digit+3
 11404  0A3D  0825               	movf	??_print_digit+3,w
 11405  0A3E  00A7               	movwf	print_digit@data+1
 11406  0A3F                     l3484:
 11407                           
 11408                           ;tm1637.c: 200:     tmp %= 100;
 11409  0A3F  3064               	movlw	100
 11410  0A40  00F0               	movwf	___awmod@divisor
 11411  0A41  3000               	movlw	0
 11412  0A42  00F1               	movwf	___awmod@divisor+1
 11413  0A43  082B               	movf	print_digit@tmp,w
 11414  0A44  00A2               	movwf	??_print_digit
 11415  0A45  01A3               	clrf	??_print_digit+1
 11416  0A46  0822               	movf	??_print_digit,w
 11417  0A47  00F2               	movwf	___awmod@dividend
 11418  0A48  0823               	movf	??_print_digit+1,w
 11419  0A49  00F3               	movwf	___awmod@dividend+1
 11420  0A4A  3191  2181  3189   	fcall	___awmod
 11421  0A4D  0870               	movf	?___awmod,w
 11422  0A4E  0020               	movlb	0	; select bank0
 11423  0A4F  00A4               	movwf	??_print_digit+2
 11424  0A50  0824               	movf	??_print_digit+2,w
 11425  0A51  00AB               	movwf	print_digit@tmp
 11426  0A52                     l3486:
 11427                           
 11428                           ;tm1637.c: 201:     data[2] = encode_digit(p, tmp / 10);
 11429  0A52  300A               	movlw	10
 11430  0A53  00F0               	movwf	___awdiv@divisor
 11431  0A54  3000               	movlw	0
 11432  0A55  00F1               	movwf	___awdiv@divisor+1
 11433  0A56  082B               	movf	print_digit@tmp,w
 11434  0A57  00A2               	movwf	??_print_digit
 11435  0A58  01A3               	clrf	??_print_digit+1
 11436  0A59  0822               	movf	??_print_digit,w
 11437  0A5A  00F2               	movwf	___awdiv@dividend
 11438  0A5B  0823               	movf	??_print_digit+1,w
 11439  0A5C  00F3               	movwf	___awdiv@dividend+1
 11440  0A5D  3193  23ED  3189   	fcall	___awdiv
 11441  0A60  0870               	movf	?___awdiv,w
 11442  0A61  0020               	movlb	0	; select bank0
 11443  0A62  00A4               	movwf	??_print_digit+2
 11444  0A63  0824               	movf	??_print_digit+2,w
 11445  0A64  00F9               	movwf	encode_digit@digit
 11446  0A65  082A               	movf	print_digit@p,w
 11447  0A66  319E  262E  3189   	fcall	_encode_digit
 11448  0A69  0020               	movlb	0	; select bank0
 11449  0A6A  00A5               	movwf	??_print_digit+3
 11450  0A6B  0825               	movf	??_print_digit+3,w
 11451  0A6C  00A8               	movwf	print_digit@data+2
 11452  0A6D                     l3488:
 11453                           
 11454                           ;tm1637.c: 202:     tmp %= 10;
 11455  0A6D  300A               	movlw	10
 11456  0A6E  00F0               	movwf	___awmod@divisor
 11457  0A6F  3000               	movlw	0
 11458  0A70  00F1               	movwf	___awmod@divisor+1
 11459  0A71  082B               	movf	print_digit@tmp,w
 11460  0A72  00A2               	movwf	??_print_digit
 11461  0A73  01A3               	clrf	??_print_digit+1
 11462  0A74  0822               	movf	??_print_digit,w
 11463  0A75  00F2               	movwf	___awmod@dividend
 11464  0A76  0823               	movf	??_print_digit+1,w
 11465  0A77  00F3               	movwf	___awmod@dividend+1
 11466  0A78  3191  2181  3189   	fcall	___awmod
 11467  0A7B  0870               	movf	?___awmod,w
 11468  0A7C  0020               	movlb	0	; select bank0
 11469  0A7D  00A4               	movwf	??_print_digit+2
 11470  0A7E  0824               	movf	??_print_digit+2,w
 11471  0A7F  00AB               	movwf	print_digit@tmp
 11472  0A80                     l3490:
 11473                           
 11474                           ;tm1637.c: 203:     data[3] = encode_digit(p, tmp);
 11475  0A80  082B               	movf	print_digit@tmp,w
 11476  0A81  00A2               	movwf	??_print_digit
 11477  0A82  0822               	movf	??_print_digit,w
 11478  0A83  00F9               	movwf	encode_digit@digit
 11479  0A84  082A               	movf	print_digit@p,w
 11480  0A85  319E  262E  3189   	fcall	_encode_digit
 11481  0A88  0020               	movlb	0	; select bank0
 11482  0A89  00A3               	movwf	??_print_digit+1
 11483  0A8A  0823               	movf	??_print_digit+1,w
 11484  0A8B  00A9               	movwf	print_digit@data+3
 11485  0A8C                     l3492:
 11486                           
 11487                           ;tm1637.c: 205:     set_segments(p, data, 4, 0);
 11488  0A8C  3026               	movlw	(low (print_digit@data| 0))& (0+255)
 11489  0A8D  00A2               	movwf	??_print_digit
 11490  0A8E  0822               	movf	??_print_digit,w
 11491  0A8F  00F8               	movwf	set_segments@segments
 11492  0A90  3004               	movlw	4
 11493  0A91  00A3               	movwf	??_print_digit+1
 11494  0A92  0823               	movf	??_print_digit+1,w
 11495  0A93  00F9               	movwf	set_segments@length
 11496  0A94  01FA               	clrf	set_segments@pos
 11497  0A95  082A               	movf	print_digit@p,w
 11498  0A96  3193  2336  3189   	fcall	_set_segments
 11499  0A99                     l252:
 11500  0A99  0008               	return
 11501  0A9A                     __end_of_print_digit:
 11502                           
 11503                           	psect	text43
 11504  1336                     __ptext43:	
 11505 ;; *************** function _set_segments *****************
 11506 ;; Defined at:
 11507 ;;		line 147 in file "tm1637.c"
 11508 ;; Parameters:    Size  Location     Type
 11509 ;;  p               1    wreg     PTR struct .
 11510 ;;		 -> NULL(0), main@tm1637(2), 
 11511 ;;  segments        1    8[COMMON] PTR const unsigned char 
 11512 ;;		 -> print_digit@data(4), clear_segment@data(4), 
 11513 ;;  length          1    9[COMMON] unsigned char 
 11514 ;;  pos             1   10[COMMON] unsigned char 
 11515 ;; Auto vars:     Size  Location     Type
 11516 ;;  p               1    1[BANK0 ] PTR struct .
 11517 ;;		 -> NULL(0), main@tm1637(2), 
 11518 ;;  k               1    0[BANK0 ] unsigned char 
 11519 ;; Return value:  Size  Location     Type
 11520 ;;                  1    wreg      void 
 11521 ;; Registers used:
 11522 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 11523 ;; Tracked objects:
 11524 ;;		On entry : 0/0
 11525 ;;		On exit  : 0/0
 11526 ;;		Unchanged: 0/0
 11527 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 11528 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11529 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11530 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11531 ;;      Totals:         5       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11532 ;;Total ram usage:        7 bytes
 11533 ;; Hardware stack levels used: 1
 11534 ;; Hardware stack levels required when called: 2
 11535 ;; This function calls:
 11536 ;;		_start_segment
 11537 ;;		_stop_segment
 11538 ;;		_write_byte
 11539 ;; This function is called by:
 11540 ;;		_print_digit
 11541 ;;		_clear_segment
 11542 ;; This function uses a non-reentrant model
 11543 ;;
 11544                           
 11545                           
 11546                           ;psect for function _set_segments
 11547  1336                     _set_segments:
 11548                           
 11549                           ;incstack = 0
 11550                           ; Regs used in _set_segments: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
 11551                           ;set_segments@p stored from wreg
 11552  1336  0020               	movlb	0	; select bank0
 11553  1337  00A1               	movwf	set_segments@p
 11554  1338                     l2966:
 11555                           
 11556                           ;tm1637.c: 149:     start_segment(p);
 11557  1338  0821               	movf	set_segments@p,w
 11558  1339  319F  273F  3193   	fcall	_start_segment
 11559                           
 11560                           ;tm1637.c: 150:     write_byte(p, 0x40);
 11561  133C  3040               	movlw	64
 11562  133D  00FB               	movwf	??_set_segments
 11563  133E  087B               	movf	??_set_segments,w
 11564  133F  00F2               	movwf	write_byte@b
 11565  1340  0020               	movlb	0	; select bank0
 11566  1341  0821               	movf	set_segments@p,w
 11567  1342  3191  21D4  3193   	fcall	_write_byte
 11568                           
 11569                           ;tm1637.c: 151:     stop_segment(p);
 11570  1345  0020               	movlb	0	; select bank0
 11571  1346  0821               	movf	set_segments@p,w
 11572  1347  319F  2759  3193   	fcall	_stop_segment
 11573                           
 11574                           ;tm1637.c: 154:     start_segment(p);
 11575  134A  0020               	movlb	0	; select bank0
 11576  134B  0821               	movf	set_segments@p,w
 11577  134C  319F  273F  3193   	fcall	_start_segment
 11578                           
 11579                           ;tm1637.c: 155:     write_byte(p, 0xC0 + (pos & 0x03));
 11580  134F  087A               	movf	set_segments@pos,w
 11581  1350  3903               	andlw	3
 11582  1351  3EC0               	addlw	192
 11583  1352  00FB               	movwf	??_set_segments
 11584  1353  087B               	movf	??_set_segments,w
 11585  1354  00F2               	movwf	write_byte@b
 11586  1355  0020               	movlb	0	; select bank0
 11587  1356  0821               	movf	set_segments@p,w
 11588  1357  3191  21D4  3193   	fcall	_write_byte
 11589  135A                     l2968:
 11590                           
 11591                           ;tm1637.c: 158:     for(uint8_t k = 0; k < length; k++){
 11592  135A  0020               	movlb	0	; select bank0
 11593  135B  01A0               	clrf	set_segments@k
 11594  135C  2B70               	goto	l2974
 11595  135D                     l2970:
 11596                           
 11597                           ;tm1637.c: 159:         write_byte(p, segments[k]);
 11598  135D  0820               	movf	set_segments@k,w
 11599  135E  0778               	addwf	set_segments@segments,w
 11600  135F  00FB               	movwf	??_set_segments
 11601  1360  087B               	movf	??_set_segments,w
 11602  1361  0086               	movwf	6
 11603  1362  0187               	clrf	7
 11604  1363  0801               	movf	1,w
 11605  1364  00FC               	movwf	??_set_segments+1
 11606  1365  087C               	movf	??_set_segments+1,w
 11607  1366  00F2               	movwf	write_byte@b
 11608  1367  0821               	movf	set_segments@p,w
 11609  1368  3191  21D4  3193   	fcall	_write_byte
 11610  136B                     l2972:
 11611                           
 11612                           ;tm1637.c: 160:     }
 11613  136B  3001               	movlw	1
 11614  136C  00FB               	movwf	??_set_segments
 11615  136D  087B               	movf	??_set_segments,w
 11616  136E  0020               	movlb	0	; select bank0
 11617  136F  07A0               	addwf	set_segments@k,f
 11618  1370                     l2974:
 11619  1370  0879               	movf	set_segments@length,w
 11620  1371  0220               	subwf	set_segments@k,w
 11621  1372  1C03               	skipc
 11622  1373  2B75               	goto	u3211
 11623  1374  2B76               	goto	u3210
 11624  1375                     u3211:
 11625  1375  2B5D               	goto	l2970
 11626  1376                     u3210:
 11627  1376                     l2976:
 11628                           
 11629                           ;tm1637.c: 162:     stop_segment(p);
 11630  1376  0821               	movf	set_segments@p,w
 11631  1377  319F  2759  3193   	fcall	_stop_segment
 11632                           
 11633                           ;tm1637.c: 165:     start_segment(p);
 11634  137A  0020               	movlb	0	; select bank0
 11635  137B  0821               	movf	set_segments@p,w
 11636  137C  319F  273F  3193   	fcall	_start_segment
 11637                           
 11638                           ;tm1637.c: 166:     write_byte(p, 0x80 + (m_brightness & 0x0f));
 11639  137F  0021               	movlb	1	; select bank1
 11640  1380  0864               	movf	_m_brightness^(0+128),w
 11641  1381  390F               	andlw	15
 11642  1382  3E80               	addlw	128
 11643  1383  00FB               	movwf	??_set_segments
 11644  1384  087B               	movf	??_set_segments,w
 11645  1385  00F2               	movwf	write_byte@b
 11646  1386  0020               	movlb	0	; select bank0
 11647  1387  0821               	movf	set_segments@p,w
 11648  1388  3191  21D4  3193   	fcall	_write_byte
 11649                           
 11650                           ;tm1637.c: 167:     stop_segment(p);
 11651  138B  0020               	movlb	0	; select bank0
 11652  138C  0821               	movf	set_segments@p,w
 11653  138D  319F  2759  3193   	fcall	_stop_segment
 11654  1390                     l236:
 11655  1390  0008               	return
 11656  1391                     __end_of_set_segments:
 11657                           
 11658                           	psect	text44
 11659  11D4                     __ptext44:	
 11660 ;; *************** function _write_byte *****************
 11661 ;; Defined at:
 11662 ;;		line 78 in file "tm1637.c"
 11663 ;; Parameters:    Size  Location     Type
 11664 ;;  p               1    wreg     PTR struct .
 11665 ;;		 -> NULL(0), main@tm1637(2), 
 11666 ;;  b               1    2[COMMON] unsigned char 
 11667 ;; Auto vars:     Size  Location     Type
 11668 ;;  p               1    7[COMMON] PTR struct .
 11669 ;;		 -> NULL(0), main@tm1637(2), 
 11670 ;;  i               1    6[COMMON] unsigned char 
 11671 ;;  data            1    5[COMMON] unsigned char 
 11672 ;;  ack             1    4[COMMON] unsigned char 
 11673 ;; Return value:  Size  Location     Type
 11674 ;;                  1    wreg      unsigned char 
 11675 ;; Registers used:
 11676 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 11677 ;; Tracked objects:
 11678 ;;		On entry : 0/0
 11679 ;;		On exit  : 0/0
 11680 ;;		Unchanged: 0/0
 11681 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 11682 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11683 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11684 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11685 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11686 ;;Total ram usage:        6 bytes
 11687 ;; Hardware stack levels used: 1
 11688 ;; Hardware stack levels required when called: 1
 11689 ;; This function calls:
 11690 ;;		_CLK_SET_HIGH
 11691 ;;		_CLK_SET_LOW
 11692 ;;		_CLK_SET_OUTPUT
 11693 ;;		_DIO_SET_HIGH
 11694 ;;		_DIO_SET_INPUT
 11695 ;;		_DIO_SET_LOW
 11696 ;;		_DIO_SET_OUTPUT
 11697 ;;		_get_DIO_PIN_value
 11698 ;; This function is called by:
 11699 ;;		_set_segments
 11700 ;; This function uses a non-reentrant model
 11701 ;;
 11702                           
 11703                           
 11704                           ;psect for function _write_byte
 11705  11D4                     _write_byte:
 11706                           
 11707                           ;incstack = 0
 11708                           ; Regs used in _write_byte: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
 11709                           ;write_byte@p stored from wreg
 11710  11D4  00F7               	movwf	write_byte@p
 11711  11D5                     l2808:
 11712                           
 11713                           ;tm1637.c: 79:     uint8_t data = b;
 11714  11D5  0872               	movf	write_byte@b,w
 11715  11D6  00F3               	movwf	??_write_byte
 11716  11D7  0873               	movf	??_write_byte,w
 11717  11D8  00F5               	movwf	write_byte@data
 11718  11D9                     l2810:
 11719                           
 11720                           ;tm1637.c: 82:     CLK_SET_OUTPUT(p);
 11721  11D9  0877               	movf	write_byte@p,w
 11722  11DA  319E  267E  3191   	fcall	_CLK_SET_OUTPUT
 11723  11DD                     l2812:
 11724                           
 11725                           ;tm1637.c: 83:     for(uint8_t i = 0; i < 8; i++){
 11726  11DD  01F6               	clrf	write_byte@i
 11727  11DE                     l2818:
 11728                           
 11729                           ;tm1637.c: 85:         CLK_SET_LOW(p);
 11730  11DE  0877               	movf	write_byte@p,w
 11731  11DF  319E  2673  3191   	fcall	_CLK_SET_LOW
 11732  11E2                     l2820:
 11733                           
 11734                           ;tm1637.c: 87:         if(data & 0x01){
 11735  11E2  1C75               	btfss	write_byte@data,0
 11736  11E3  29E5               	goto	u2901
 11737  11E4  29E6               	goto	u2900
 11738  11E5                     u2901:
 11739  11E5  29EB               	goto	l2824
 11740  11E6                     u2900:
 11741  11E6                     l2822:
 11742                           
 11743                           ;tm1637.c: 89:             DIO_SET_HIGH(p);
 11744  11E6  0877               	movf	write_byte@p,w
 11745  11E7  319E  2689  3191   	fcall	_DIO_SET_HIGH
 11746                           
 11747                           ;tm1637.c: 90:         }else{
 11748  11EA  29EF               	goto	l223
 11749  11EB                     l2824:
 11750                           
 11751                           ;tm1637.c: 92:             DIO_SET_LOW(p);
 11752  11EB  0877               	movf	write_byte@p,w
 11753  11EC  319E  2694  3191   	fcall	_DIO_SET_LOW
 11754  11EF                     l223:	
 11755                           ;tm1637.c: 93:         }
 11756                           
 11757                           
 11758                           ;tm1637.c: 96:         CLK_SET_HIGH(p);
 11759  11EF  0877               	movf	write_byte@p,w
 11760  11F0  319E  2668  3191   	fcall	_CLK_SET_HIGH
 11761  11F3                     l2826:
 11762                           
 11763                           ;tm1637.c: 98:         data = data >> 1;
 11764  11F3  3675               	lsrf	write_byte@data,w
 11765  11F4  00F3               	movwf	??_write_byte
 11766  11F5  0873               	movf	??_write_byte,w
 11767  11F6  00F5               	movwf	write_byte@data
 11768  11F7                     l2828:
 11769                           
 11770                           ;tm1637.c: 99:     }
 11771  11F7  3001               	movlw	1
 11772  11F8  00F3               	movwf	??_write_byte
 11773  11F9  0873               	movf	??_write_byte,w
 11774  11FA  07F6               	addwf	write_byte@i,f
 11775  11FB                     l2830:
 11776  11FB  3008               	movlw	8
 11777  11FC  0276               	subwf	write_byte@i,w
 11778  11FD  1C03               	skipc
 11779  11FE  2A00               	goto	u2911
 11780  11FF  2A01               	goto	u2910
 11781  1200                     u2911:
 11782  1200  29DE               	goto	l2818
 11783  1201                     u2910:
 11784  1201                     l2832:
 11785                           
 11786                           ;tm1637.c: 104:     CLK_SET_LOW(p);
 11787  1201  0877               	movf	write_byte@p,w
 11788  1202  319E  2673  3191   	fcall	_CLK_SET_LOW
 11789                           
 11790                           ;tm1637.c: 105:     DIO_SET_HIGH(p);
 11791  1205  0877               	movf	write_byte@p,w
 11792  1206  319E  2689  3191   	fcall	_DIO_SET_HIGH
 11793                           
 11794                           ;tm1637.c: 108:     CLK_SET_HIGH(p);
 11795  1209  0877               	movf	write_byte@p,w
 11796  120A  319E  2668  3191   	fcall	_CLK_SET_HIGH
 11797                           
 11798                           ;tm1637.c: 111:     DIO_SET_INPUT(p);
 11799  120D  0877               	movf	write_byte@p,w
 11800  120E  319E  26AA  3191   	fcall	_DIO_SET_INPUT
 11801                           
 11802                           ;tm1637.c: 113:     uint8_t ack = get_DIO_PIN_value(p);
 11803  1211  0877               	movf	write_byte@p,w
 11804  1212  3195  25A3  3191   	fcall	_get_DIO_PIN_value
 11805  1215  00F3               	movwf	??_write_byte
 11806  1216  0873               	movf	??_write_byte,w
 11807  1217  00F4               	movwf	write_byte@ack
 11808  1218                     l2834:
 11809                           
 11810                           ;tm1637.c: 114:     if(ack == 0){
 11811  1218  0874               	movf	write_byte@ack,w
 11812  1219  1D03               	btfss	3,2
 11813  121A  2A1C               	goto	u2921
 11814  121B  2A1D               	goto	u2920
 11815  121C                     u2921:
 11816  121C  2A25               	goto	l224
 11817  121D                     u2920:
 11818  121D                     l2836:
 11819                           
 11820                           ;tm1637.c: 116:         DIO_SET_OUTPUT(p);
 11821  121D  0877               	movf	write_byte@p,w
 11822  121E  319E  269F  3191   	fcall	_DIO_SET_OUTPUT
 11823                           
 11824                           ;tm1637.c: 119:         DIO_SET_LOW(p);
 11825  1221  0877               	movf	write_byte@p,w
 11826  1222  319E  2694  3191   	fcall	_DIO_SET_LOW
 11827  1225                     l224:	
 11828                           ;tm1637.c: 120:     }
 11829                           
 11830                           
 11831                           ;tm1637.c: 123:     DIO_SET_OUTPUT(p);
 11832  1225  0877               	movf	write_byte@p,w
 11833  1226  319E  269F  3191   	fcall	_DIO_SET_OUTPUT
 11834  1229                     l225:
 11835  1229  0008               	return
 11836  122A                     __end_of_write_byte:
 11837                           
 11838                           	psect	text45
 11839  15A3                     __ptext45:	
 11840 ;; *************** function _get_DIO_PIN_value *****************
 11841 ;; Defined at:
 11842 ;;		line 67 in file "tm1637.c"
 11843 ;; Parameters:    Size  Location     Type
 11844 ;;  p               1    wreg     PTR struct .
 11845 ;;		 -> NULL(0), main@tm1637(2), 
 11846 ;; Auto vars:     Size  Location     Type
 11847 ;;  p               1    1[COMMON] PTR struct .
 11848 ;;		 -> NULL(0), main@tm1637(2), 
 11849 ;; Return value:  Size  Location     Type
 11850 ;;                  1    wreg      unsigned char 
 11851 ;; Registers used:
 11852 ;;		wreg, fsr1l, fsr1h, status,2, status,0
 11853 ;; Tracked objects:
 11854 ;;		On entry : 0/0
 11855 ;;		On exit  : 0/0
 11856 ;;		Unchanged: 0/0
 11857 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 11858 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11859 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11860 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11861 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11862 ;;Total ram usage:        2 bytes
 11863 ;; Hardware stack levels used: 1
 11864 ;; This function calls:
 11865 ;;		Nothing
 11866 ;; This function is called by:
 11867 ;;		_write_byte
 11868 ;; This function uses a non-reentrant model
 11869 ;;
 11870                           
 11871                           
 11872                           ;psect for function _get_DIO_PIN_value
 11873  15A3                     _get_DIO_PIN_value:
 11874                           
 11875                           ;incstack = 0
 11876                           ; Regs used in _get_DIO_PIN_value: [wreg+fsr1l+fsr1h+status,2+status,0]
 11877                           ;get_DIO_PIN_value@p stored from wreg
 11878  15A3  00F1               	movwf	get_DIO_PIN_value@p
 11879  15A4                     l2624:
 11880                           
 11881                           ;tm1637.c: 68:     if(p->dat_pin == 0x01){ return PORTBbits.RB0; }
 11882  15A4  0A71               	incf	get_DIO_PIN_value@p,w
 11883  15A5  0086               	movwf	6
 11884  15A6  3001               	movlw	1	; select bank2/3
 11885  15A7  0087               	movwf	7
 11886  15A8  0301               	decf	1,w
 11887  15A9  1D03               	btfss	3,2
 11888  15AA  2DAC               	goto	u2471
 11889  15AB  2DAD               	goto	u2470
 11890  15AC                     u2471:
 11891  15AC  2DB1               	goto	l2630
 11892  15AD                     u2470:
 11893  15AD                     l2626:
 11894  15AD  0020               	movlb	0	; select bank0
 11895  15AE  080D               	movf	13,w	;volatile
 11896  15AF  3901               	andlw	1
 11897  15B0  2E1A               	goto	l210
 11898  15B1                     l2630:
 11899                           
 11900                           ;tm1637.c: 69:     if(p->dat_pin == 0x02){ return PORTBbits.RB1; }
 11901  15B1  0A71               	incf	get_DIO_PIN_value@p,w
 11902  15B2  0086               	movwf	6
 11903  15B3  3001               	movlw	1	; select bank2/3
 11904  15B4  0087               	movwf	7
 11905  15B5  3002               	movlw	2
 11906  15B6  0601               	xorwf	1,w
 11907  15B7  1D03               	btfss	3,2
 11908  15B8  2DBA               	goto	u2481
 11909  15B9  2DBB               	goto	u2480
 11910  15BA                     u2481:
 11911  15BA  2DBF               	goto	l2636
 11912  15BB                     u2480:
 11913  15BB                     l2632:
 11914  15BB  0020               	movlb	0	; select bank0
 11915  15BC  0C0D               	rrf	13,w	;volatile
 11916  15BD  3901               	andlw	1
 11917  15BE  2E1A               	goto	l210
 11918  15BF                     l2636:
 11919                           
 11920                           ;tm1637.c: 70:     if(p->dat_pin == 0x04){ return PORTBbits.RB2; }
 11921  15BF  0A71               	incf	get_DIO_PIN_value@p,w
 11922  15C0  0086               	movwf	6
 11923  15C1  3001               	movlw	1	; select bank2/3
 11924  15C2  0087               	movwf	7
 11925  15C3  3004               	movlw	4
 11926  15C4  0601               	xorwf	1,w
 11927  15C5  1D03               	btfss	3,2
 11928  15C6  2DC8               	goto	u2491
 11929  15C7  2DC9               	goto	u2490
 11930  15C8                     u2491:
 11931  15C8  2DCE               	goto	l2642
 11932  15C9                     u2490:
 11933  15C9                     l2638:
 11934  15C9  0020               	movlb	0	; select bank0
 11935  15CA  0C0D               	rrf	13,w	;volatile
 11936  15CB  0C89               	rrf	9,f
 11937  15CC  3901               	andlw	1
 11938  15CD  2E1A               	goto	l210
 11939  15CE                     l2642:
 11940                           
 11941                           ;tm1637.c: 71:     if(p->dat_pin == 0x08){ return PORTBbits.RB3; }
 11942  15CE  0A71               	incf	get_DIO_PIN_value@p,w
 11943  15CF  0086               	movwf	6
 11944  15D0  3001               	movlw	1	; select bank2/3
 11945  15D1  0087               	movwf	7
 11946  15D2  3008               	movlw	8
 11947  15D3  0601               	xorwf	1,w
 11948  15D4  1D03               	btfss	3,2
 11949  15D5  2DD7               	goto	u2501
 11950  15D6  2DD8               	goto	u2500
 11951  15D7                     u2501:
 11952  15D7  2DDF               	goto	l2648
 11953  15D8                     u2500:
 11954  15D8                     l2644:
 11955  15D8  0020               	movlb	0	; select bank0
 11956  15D9  0C0D               	rrf	13,w	;volatile
 11957  15DA  00F0               	movwf	??_get_DIO_PIN_value
 11958  15DB  0CF0               	rrf	??_get_DIO_PIN_value,f
 11959  15DC  0C70               	rrf	??_get_DIO_PIN_value,w
 11960  15DD  3901               	andlw	1
 11961  15DE  2E1A               	goto	l210
 11962  15DF                     l2648:
 11963                           
 11964                           ;tm1637.c: 72:     if(p->dat_pin == 0x10){ return PORTBbits.RB4; }
 11965  15DF  0A71               	incf	get_DIO_PIN_value@p,w
 11966  15E0  0086               	movwf	6
 11967  15E1  3001               	movlw	1	; select bank2/3
 11968  15E2  0087               	movwf	7
 11969  15E3  3010               	movlw	16
 11970  15E4  0601               	xorwf	1,w
 11971  15E5  1D03               	btfss	3,2
 11972  15E6  2DE8               	goto	u2511
 11973  15E7  2DE9               	goto	u2510
 11974  15E8                     u2511:
 11975  15E8  2DED               	goto	l2654
 11976  15E9                     u2510:
 11977  15E9                     l2650:
 11978  15E9  0020               	movlb	0	; select bank0
 11979  15EA  0E0D               	swapf	13,w	;volatile
 11980  15EB  3901               	andlw	1
 11981  15EC  2E1A               	goto	l210
 11982  15ED                     l2654:
 11983                           
 11984                           ;tm1637.c: 73:     if(p->dat_pin == 0x20){ return PORTBbits.RB5; }
 11985  15ED  0A71               	incf	get_DIO_PIN_value@p,w
 11986  15EE  0086               	movwf	6
 11987  15EF  3001               	movlw	1	; select bank2/3
 11988  15F0  0087               	movwf	7
 11989  15F1  3020               	movlw	32
 11990  15F2  0601               	xorwf	1,w
 11991  15F3  1D03               	btfss	3,2
 11992  15F4  2DF6               	goto	u2521
 11993  15F5  2DF7               	goto	u2520
 11994  15F6                     u2521:
 11995  15F6  2DFC               	goto	l2660
 11996  15F7                     u2520:
 11997  15F7                     l2656:
 11998  15F7  0020               	movlb	0	; select bank0
 11999  15F8  0E0D               	swapf	13,w	;volatile
 12000  15F9  0C89               	rrf	9,f
 12001  15FA  3901               	andlw	1
 12002  15FB  2E1A               	goto	l210
 12003  15FC                     l2660:
 12004                           
 12005                           ;tm1637.c: 74:     if(p->dat_pin == 0x40){ return PORTBbits.RB6; }
 12006  15FC  0A71               	incf	get_DIO_PIN_value@p,w
 12007  15FD  0086               	movwf	6
 12008  15FE  3001               	movlw	1	; select bank2/3
 12009  15FF  0087               	movwf	7
 12010  1600  3040               	movlw	64
 12011  1601  0601               	xorwf	1,w
 12012  1602  1D03               	btfss	3,2
 12013  1603  2E05               	goto	u2531
 12014  1604  2E06               	goto	u2530
 12015  1605                     u2531:
 12016  1605  2E0C               	goto	l2666
 12017  1606                     u2530:
 12018  1606                     l2662:
 12019  1606  0020               	movlb	0	; select bank0
 12020  1607  0E0D               	swapf	13,w	;volatile
 12021  1608  0C89               	rrf	9,f
 12022  1609  0C89               	rrf	9,f
 12023  160A  3901               	andlw	1
 12024  160B  2E1A               	goto	l210
 12025  160C                     l2666:
 12026                           
 12027                           ;tm1637.c: 75:     if(p->dat_pin == 0x80){ return PORTBbits.RB7; }
 12028  160C  0A71               	incf	get_DIO_PIN_value@p,w
 12029  160D  0086               	movwf	6
 12030  160E  3001               	movlw	1	; select bank2/3
 12031  160F  0087               	movwf	7
 12032  1610  3080               	movlw	128
 12033  1611  0601               	xorwf	1,w
 12034  1612  1D03               	btfss	3,2
 12035  1613  2E15               	goto	u2541
 12036  1614  2E16               	goto	u2540
 12037  1615                     u2541:
 12038  1615  2E1A               	goto	l210
 12039  1616                     u2540:
 12040  1616                     l2668:
 12041  1616  0020               	movlb	0	; select bank0
 12042  1617  0D0D               	rlf	13,w	;volatile
 12043  1618  0D0D               	rlf	13,w	;volatile
 12044  1619  3901               	andlw	1
 12045  161A                     l210:
 12046  161A  0008               	return
 12047  161B                     __end_of_get_DIO_PIN_value:
 12048                           
 12049                           	psect	text46
 12050  1EAA                     __ptext46:	
 12051 ;; *************** function _DIO_SET_INPUT *****************
 12052 ;; Defined at:
 12053 ;;		line 32 in file "tm1637.c"
 12054 ;; Parameters:    Size  Location     Type
 12055 ;;  p               1    wreg     PTR struct .
 12056 ;;		 -> NULL(0), main@tm1637(2), 
 12057 ;; Auto vars:     Size  Location     Type
 12058 ;;  p               1    1[COMMON] PTR struct .
 12059 ;;		 -> NULL(0), main@tm1637(2), 
 12060 ;; Return value:  Size  Location     Type
 12061 ;;                  1    wreg      void 
 12062 ;; Registers used:
 12063 ;;		wreg, fsr1l, fsr1h, status,2, status,0
 12064 ;; Tracked objects:
 12065 ;;		On entry : 0/0
 12066 ;;		On exit  : 0/0
 12067 ;;		Unchanged: 0/0
 12068 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 12069 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12070 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12071 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12072 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12073 ;;Total ram usage:        2 bytes
 12074 ;; Hardware stack levels used: 1
 12075 ;; This function calls:
 12076 ;;		Nothing
 12077 ;; This function is called by:
 12078 ;;		_write_byte
 12079 ;; This function uses a non-reentrant model
 12080 ;;
 12081                           
 12082                           
 12083                           ;psect for function _DIO_SET_INPUT
 12084  1EAA                     _DIO_SET_INPUT:
 12085                           
 12086                           ;incstack = 0
 12087                           ; Regs used in _DIO_SET_INPUT: [wreg+fsr1l+fsr1h+status,2+status,0]
 12088                           ;DIO_SET_INPUT@p stored from wreg
 12089  1EAA  00F1               	movwf	DIO_SET_INPUT@p
 12090  1EAB                     l2618:
 12091  1EAB  0A71               	incf	DIO_SET_INPUT@p,w
 12092  1EAC  0086               	movwf	6
 12093  1EAD  3001               	movlw	1	; select bank2/3
 12094  1EAE  0087               	movwf	7
 12095  1EAF  0801               	movf	1,w
 12096  1EB0  00F0               	movwf	??_DIO_SET_INPUT
 12097  1EB1  0870               	movf	??_DIO_SET_INPUT,w
 12098  1EB2  0021               	movlb	1	; select bank1
 12099  1EB3  048D               	iorwf	13,f	;volatile
 12100  1EB4                     l194:
 12101  1EB4  0008               	return
 12102  1EB5                     __end_of_DIO_SET_INPUT:
 12103                           
 12104                           	psect	text47
 12105  1F59                     __ptext47:	
 12106 ;; *************** function _stop_segment *****************
 12107 ;; Defined at:
 12108 ;;		line 53 in file "tm1637.c"
 12109 ;; Parameters:    Size  Location     Type
 12110 ;;  p               1    wreg     PTR struct .
 12111 ;;		 -> NULL(0), main@tm1637(2), 
 12112 ;; Auto vars:     Size  Location     Type
 12113 ;;  p               1    2[COMMON] PTR struct .
 12114 ;;		 -> NULL(0), main@tm1637(2), 
 12115 ;; Return value:  Size  Location     Type
 12116 ;;                  1    wreg      void 
 12117 ;; Registers used:
 12118 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 12119 ;; Tracked objects:
 12120 ;;		On entry : 0/0
 12121 ;;		On exit  : 0/0
 12122 ;;		Unchanged: 0/0
 12123 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 12124 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12125 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12126 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12127 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12128 ;;Total ram usage:        1 bytes
 12129 ;; Hardware stack levels used: 1
 12130 ;; Hardware stack levels required when called: 1
 12131 ;; This function calls:
 12132 ;;		_CLK_SET_HIGH
 12133 ;;		_CLK_SET_LOW
 12134 ;;		_CLK_SET_OUTPUT
 12135 ;;		_DIO_SET_HIGH
 12136 ;;		_DIO_SET_LOW
 12137 ;;		_DIO_SET_OUTPUT
 12138 ;; This function is called by:
 12139 ;;		_set_segments
 12140 ;; This function uses a non-reentrant model
 12141 ;;
 12142                           
 12143                           
 12144                           ;psect for function _stop_segment
 12145  1F59                     _stop_segment:
 12146                           
 12147                           ;incstack = 0
 12148                           ; Regs used in _stop_segment: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
 12149                           ;stop_segment@p stored from wreg
 12150  1F59  00F2               	movwf	stop_segment@p
 12151  1F5A                     l2806:
 12152                           
 12153                           ;tm1637.c: 55:     DIO_SET_OUTPUT(p);
 12154  1F5A  0872               	movf	stop_segment@p,w
 12155  1F5B  319E  269F  319F   	fcall	_DIO_SET_OUTPUT
 12156                           
 12157                           ;tm1637.c: 56:     CLK_SET_OUTPUT(p);
 12158  1F5E  0872               	movf	stop_segment@p,w
 12159  1F5F  319E  267E  319F   	fcall	_CLK_SET_OUTPUT
 12160                           
 12161                           ;tm1637.c: 59:     CLK_SET_LOW(p);
 12162  1F62  0872               	movf	stop_segment@p,w
 12163  1F63  319E  2673  319F   	fcall	_CLK_SET_LOW
 12164                           
 12165                           ;tm1637.c: 60:     DIO_SET_LOW(p);
 12166  1F66  0872               	movf	stop_segment@p,w
 12167  1F67  319E  2694  319F   	fcall	_DIO_SET_LOW
 12168                           
 12169                           ;tm1637.c: 63:     CLK_SET_HIGH(p);
 12170  1F6A  0872               	movf	stop_segment@p,w
 12171  1F6B  319E  2668  319F   	fcall	_CLK_SET_HIGH
 12172                           
 12173                           ;tm1637.c: 64:     DIO_SET_HIGH(p);
 12174  1F6E  0872               	movf	stop_segment@p,w
 12175  1F6F  319E  2689  319F   	fcall	_DIO_SET_HIGH
 12176  1F72                     l206:
 12177  1F72  0008               	return
 12178  1F73                     __end_of_stop_segment:
 12179                           
 12180                           	psect	text48
 12181  1F3F                     __ptext48:	
 12182 ;; *************** function _start_segment *****************
 12183 ;; Defined at:
 12184 ;;		line 39 in file "tm1637.c"
 12185 ;; Parameters:    Size  Location     Type
 12186 ;;  p               1    wreg     PTR struct .
 12187 ;;		 -> NULL(0), main@tm1637(2), 
 12188 ;; Auto vars:     Size  Location     Type
 12189 ;;  p               1    2[COMMON] PTR struct .
 12190 ;;		 -> NULL(0), main@tm1637(2), 
 12191 ;; Return value:  Size  Location     Type
 12192 ;;                  1    wreg      void 
 12193 ;; Registers used:
 12194 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 12195 ;; Tracked objects:
 12196 ;;		On entry : 0/0
 12197 ;;		On exit  : 0/0
 12198 ;;		Unchanged: 0/0
 12199 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 12200 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12201 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12202 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12203 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12204 ;;Total ram usage:        1 bytes
 12205 ;; Hardware stack levels used: 1
 12206 ;; Hardware stack levels required when called: 1
 12207 ;; This function calls:
 12208 ;;		_CLK_SET_HIGH
 12209 ;;		_CLK_SET_LOW
 12210 ;;		_CLK_SET_OUTPUT
 12211 ;;		_DIO_SET_HIGH
 12212 ;;		_DIO_SET_LOW
 12213 ;;		_DIO_SET_OUTPUT
 12214 ;; This function is called by:
 12215 ;;		_set_segments
 12216 ;; This function uses a non-reentrant model
 12217 ;;
 12218                           
 12219                           
 12220                           ;psect for function _start_segment
 12221  1F3F                     _start_segment:
 12222                           
 12223                           ;incstack = 0
 12224                           ; Regs used in _start_segment: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
 12225                           ;start_segment@p stored from wreg
 12226  1F3F  00F2               	movwf	start_segment@p
 12227  1F40                     l2804:
 12228                           
 12229                           ;tm1637.c: 41:     DIO_SET_OUTPUT(p);
 12230  1F40  0872               	movf	start_segment@p,w
 12231  1F41  319E  269F  319F   	fcall	_DIO_SET_OUTPUT
 12232                           
 12233                           ;tm1637.c: 42:     CLK_SET_OUTPUT(p);
 12234  1F44  0872               	movf	start_segment@p,w
 12235  1F45  319E  267E  319F   	fcall	_CLK_SET_OUTPUT
 12236                           
 12237                           ;tm1637.c: 45:     DIO_SET_HIGH(p);
 12238  1F48  0872               	movf	start_segment@p,w
 12239  1F49  319E  2689  319F   	fcall	_DIO_SET_HIGH
 12240                           
 12241                           ;tm1637.c: 46:     CLK_SET_HIGH(p);
 12242  1F4C  0872               	movf	start_segment@p,w
 12243  1F4D  319E  2668  319F   	fcall	_CLK_SET_HIGH
 12244                           
 12245                           ;tm1637.c: 49:     DIO_SET_LOW(p);
 12246  1F50  0872               	movf	start_segment@p,w
 12247  1F51  319E  2694  319F   	fcall	_DIO_SET_LOW
 12248                           
 12249                           ;tm1637.c: 50:     CLK_SET_LOW(p);
 12250  1F54  0872               	movf	start_segment@p,w
 12251  1F55  319E  2673  319F   	fcall	_CLK_SET_LOW
 12252  1F58                     l203:
 12253  1F58  0008               	return
 12254  1F59                     __end_of_start_segment:
 12255                           
 12256                           	psect	text49
 12257  1E9F                     __ptext49:	
 12258 ;; *************** function _DIO_SET_OUTPUT *****************
 12259 ;; Defined at:
 12260 ;;		line 30 in file "tm1637.c"
 12261 ;; Parameters:    Size  Location     Type
 12262 ;;  p               1    wreg     PTR struct .
 12263 ;;		 -> NULL(0), main@tm1637(2), 
 12264 ;; Auto vars:     Size  Location     Type
 12265 ;;  p               1    1[COMMON] PTR struct .
 12266 ;;		 -> NULL(0), main@tm1637(2), 
 12267 ;; Return value:  Size  Location     Type
 12268 ;;                  1    wreg      void 
 12269 ;; Registers used:
 12270 ;;		wreg, fsr1l, fsr1h, status,2, status,0
 12271 ;; Tracked objects:
 12272 ;;		On entry : 0/0
 12273 ;;		On exit  : 0/0
 12274 ;;		Unchanged: 0/0
 12275 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 12276 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12277 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12278 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12279 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12280 ;;Total ram usage:        2 bytes
 12281 ;; Hardware stack levels used: 1
 12282 ;; This function calls:
 12283 ;;		Nothing
 12284 ;; This function is called by:
 12285 ;;		_start_segment
 12286 ;;		_stop_segment
 12287 ;;		_write_byte
 12288 ;; This function uses a non-reentrant model
 12289 ;;
 12290                           
 12291                           
 12292                           ;psect for function _DIO_SET_OUTPUT
 12293  1E9F                     _DIO_SET_OUTPUT:
 12294                           
 12295                           ;incstack = 0
 12296                           ; Regs used in _DIO_SET_OUTPUT: [wreg+fsr1l+fsr1h+status,2+status,0]
 12297                           ;DIO_SET_OUTPUT@p stored from wreg
 12298  1E9F  00F1               	movwf	DIO_SET_OUTPUT@p
 12299  1EA0                     l2616:
 12300  1EA0  0A71               	incf	DIO_SET_OUTPUT@p,w
 12301  1EA1  0086               	movwf	6
 12302  1EA2  3001               	movlw	1	; select bank2/3
 12303  1EA3  0087               	movwf	7
 12304  1EA4  0901               	comf	1,w
 12305  1EA5  00F0               	movwf	??_DIO_SET_OUTPUT
 12306  1EA6  0870               	movf	??_DIO_SET_OUTPUT,w
 12307  1EA7  0021               	movlb	1	; select bank1
 12308  1EA8  058D               	andwf	13,f	;volatile
 12309  1EA9                     l191:
 12310  1EA9  0008               	return
 12311  1EAA                     __end_of_DIO_SET_OUTPUT:
 12312                           
 12313                           	psect	text50
 12314  1E94                     __ptext50:	
 12315 ;; *************** function _DIO_SET_LOW *****************
 12316 ;; Defined at:
 12317 ;;		line 36 in file "tm1637.c"
 12318 ;; Parameters:    Size  Location     Type
 12319 ;;  p               1    wreg     PTR struct .
 12320 ;;		 -> NULL(0), main@tm1637(2), 
 12321 ;; Auto vars:     Size  Location     Type
 12322 ;;  p               1    1[COMMON] PTR struct .
 12323 ;;		 -> NULL(0), main@tm1637(2), 
 12324 ;; Return value:  Size  Location     Type
 12325 ;;                  1    wreg      void 
 12326 ;; Registers used:
 12327 ;;		wreg, fsr1l, fsr1h, status,2, status,0
 12328 ;; Tracked objects:
 12329 ;;		On entry : 0/0
 12330 ;;		On exit  : 0/0
 12331 ;;		Unchanged: 0/0
 12332 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 12333 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12334 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12335 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12336 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12337 ;;Total ram usage:        2 bytes
 12338 ;; Hardware stack levels used: 1
 12339 ;; This function calls:
 12340 ;;		Nothing
 12341 ;; This function is called by:
 12342 ;;		_start_segment
 12343 ;;		_stop_segment
 12344 ;;		_write_byte
 12345 ;; This function uses a non-reentrant model
 12346 ;;
 12347                           
 12348                           
 12349                           ;psect for function _DIO_SET_LOW
 12350  1E94                     _DIO_SET_LOW:
 12351                           
 12352                           ;incstack = 0
 12353                           ; Regs used in _DIO_SET_LOW: [wreg+fsr1l+fsr1h+status,2+status,0]
 12354                           ;DIO_SET_LOW@p stored from wreg
 12355  1E94  00F1               	movwf	DIO_SET_LOW@p
 12356  1E95                     l2622:
 12357  1E95  0A71               	incf	DIO_SET_LOW@p,w
 12358  1E96  0086               	movwf	6
 12359  1E97  3001               	movlw	1	; select bank2/3
 12360  1E98  0087               	movwf	7
 12361  1E99  0901               	comf	1,w
 12362  1E9A  00F0               	movwf	??_DIO_SET_LOW
 12363  1E9B  0870               	movf	??_DIO_SET_LOW,w
 12364  1E9C  0022               	movlb	2	; select bank2
 12365  1E9D  058D               	andwf	13,f	;volatile
 12366  1E9E                     l200:
 12367  1E9E  0008               	return
 12368  1E9F                     __end_of_DIO_SET_LOW:
 12369                           
 12370                           	psect	text51
 12371  1E89                     __ptext51:	
 12372 ;; *************** function _DIO_SET_HIGH *****************
 12373 ;; Defined at:
 12374 ;;		line 34 in file "tm1637.c"
 12375 ;; Parameters:    Size  Location     Type
 12376 ;;  p               1    wreg     PTR struct .
 12377 ;;		 -> NULL(0), main@tm1637(2), 
 12378 ;; Auto vars:     Size  Location     Type
 12379 ;;  p               1    1[COMMON] PTR struct .
 12380 ;;		 -> NULL(0), main@tm1637(2), 
 12381 ;; Return value:  Size  Location     Type
 12382 ;;                  1    wreg      void 
 12383 ;; Registers used:
 12384 ;;		wreg, fsr1l, fsr1h, status,2, status,0
 12385 ;; Tracked objects:
 12386 ;;		On entry : 0/0
 12387 ;;		On exit  : 0/0
 12388 ;;		Unchanged: 0/0
 12389 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 12390 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12391 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12392 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12393 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12394 ;;Total ram usage:        2 bytes
 12395 ;; Hardware stack levels used: 1
 12396 ;; This function calls:
 12397 ;;		Nothing
 12398 ;; This function is called by:
 12399 ;;		_start_segment
 12400 ;;		_stop_segment
 12401 ;;		_write_byte
 12402 ;; This function uses a non-reentrant model
 12403 ;;
 12404                           
 12405                           
 12406                           ;psect for function _DIO_SET_HIGH
 12407  1E89                     _DIO_SET_HIGH:
 12408                           
 12409                           ;incstack = 0
 12410                           ; Regs used in _DIO_SET_HIGH: [wreg+fsr1l+fsr1h+status,2+status,0]
 12411                           ;DIO_SET_HIGH@p stored from wreg
 12412  1E89  00F1               	movwf	DIO_SET_HIGH@p
 12413  1E8A                     l2620:
 12414  1E8A  0A71               	incf	DIO_SET_HIGH@p,w
 12415  1E8B  0086               	movwf	6
 12416  1E8C  3001               	movlw	1	; select bank2/3
 12417  1E8D  0087               	movwf	7
 12418  1E8E  0801               	movf	1,w
 12419  1E8F  00F0               	movwf	??_DIO_SET_HIGH
 12420  1E90  0870               	movf	??_DIO_SET_HIGH,w
 12421  1E91  0022               	movlb	2	; select bank2
 12422  1E92  048D               	iorwf	13,f	;volatile
 12423  1E93                     l197:
 12424  1E93  0008               	return
 12425  1E94                     __end_of_DIO_SET_HIGH:
 12426                           
 12427                           	psect	text52
 12428  1E7E                     __ptext52:	
 12429 ;; *************** function _CLK_SET_OUTPUT *****************
 12430 ;; Defined at:
 12431 ;;		line 22 in file "tm1637.c"
 12432 ;; Parameters:    Size  Location     Type
 12433 ;;  p               1    wreg     PTR struct .
 12434 ;;		 -> NULL(0), main@tm1637(2), 
 12435 ;; Auto vars:     Size  Location     Type
 12436 ;;  p               1    1[COMMON] PTR struct .
 12437 ;;		 -> NULL(0), main@tm1637(2), 
 12438 ;; Return value:  Size  Location     Type
 12439 ;;                  1    wreg      void 
 12440 ;; Registers used:
 12441 ;;		wreg, fsr1l, fsr1h, status,2, status,0
 12442 ;; Tracked objects:
 12443 ;;		On entry : 0/0
 12444 ;;		On exit  : 0/0
 12445 ;;		Unchanged: 0/0
 12446 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 12447 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12448 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12449 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12450 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12451 ;;Total ram usage:        2 bytes
 12452 ;; Hardware stack levels used: 1
 12453 ;; This function calls:
 12454 ;;		Nothing
 12455 ;; This function is called by:
 12456 ;;		_start_segment
 12457 ;;		_stop_segment
 12458 ;;		_write_byte
 12459 ;; This function uses a non-reentrant model
 12460 ;;
 12461                           
 12462                           
 12463                           ;psect for function _CLK_SET_OUTPUT
 12464  1E7E                     _CLK_SET_OUTPUT:
 12465                           
 12466                           ;incstack = 0
 12467                           ; Regs used in _CLK_SET_OUTPUT: [wreg+fsr1l+fsr1h+status,2+status,0]
 12468                           ;CLK_SET_OUTPUT@p stored from wreg
 12469  1E7E  00F1               	movwf	CLK_SET_OUTPUT@p
 12470  1E7F                     l2610:
 12471  1E7F  0871               	movf	CLK_SET_OUTPUT@p,w
 12472  1E80  0086               	movwf	6
 12473  1E81  3001               	movlw	1	; select bank2/3
 12474  1E82  0087               	movwf	7
 12475  1E83  0901               	comf	1,w
 12476  1E84  00F0               	movwf	??_CLK_SET_OUTPUT
 12477  1E85  0870               	movf	??_CLK_SET_OUTPUT,w
 12478  1E86  0021               	movlb	1	; select bank1
 12479  1E87  058D               	andwf	13,f	;volatile
 12480  1E88                     l182:
 12481  1E88  0008               	return
 12482  1E89                     __end_of_CLK_SET_OUTPUT:
 12483                           
 12484                           	psect	text53
 12485  1E73                     __ptext53:	
 12486 ;; *************** function _CLK_SET_LOW *****************
 12487 ;; Defined at:
 12488 ;;		line 27 in file "tm1637.c"
 12489 ;; Parameters:    Size  Location     Type
 12490 ;;  p               1    wreg     PTR struct .
 12491 ;;		 -> NULL(0), main@tm1637(2), 
 12492 ;; Auto vars:     Size  Location     Type
 12493 ;;  p               1    1[COMMON] PTR struct .
 12494 ;;		 -> NULL(0), main@tm1637(2), 
 12495 ;; Return value:  Size  Location     Type
 12496 ;;                  1    wreg      void 
 12497 ;; Registers used:
 12498 ;;		wreg, fsr1l, fsr1h, status,2, status,0
 12499 ;; Tracked objects:
 12500 ;;		On entry : 0/0
 12501 ;;		On exit  : 0/0
 12502 ;;		Unchanged: 0/0
 12503 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 12504 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12505 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12506 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12507 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12508 ;;Total ram usage:        2 bytes
 12509 ;; Hardware stack levels used: 1
 12510 ;; This function calls:
 12511 ;;		Nothing
 12512 ;; This function is called by:
 12513 ;;		_start_segment
 12514 ;;		_stop_segment
 12515 ;;		_write_byte
 12516 ;; This function uses a non-reentrant model
 12517 ;;
 12518                           
 12519                           
 12520                           ;psect for function _CLK_SET_LOW
 12521  1E73                     _CLK_SET_LOW:
 12522                           
 12523                           ;incstack = 0
 12524                           ; Regs used in _CLK_SET_LOW: [wreg+fsr1l+fsr1h+status,2+status,0]
 12525                           ;CLK_SET_LOW@p stored from wreg
 12526  1E73  00F1               	movwf	CLK_SET_LOW@p
 12527  1E74                     l2614:
 12528  1E74  0871               	movf	CLK_SET_LOW@p,w
 12529  1E75  0086               	movwf	6
 12530  1E76  3001               	movlw	1	; select bank2/3
 12531  1E77  0087               	movwf	7
 12532  1E78  0901               	comf	1,w
 12533  1E79  00F0               	movwf	??_CLK_SET_LOW
 12534  1E7A  0870               	movf	??_CLK_SET_LOW,w
 12535  1E7B  0022               	movlb	2	; select bank2
 12536  1E7C  058D               	andwf	13,f	;volatile
 12537  1E7D                     l188:
 12538  1E7D  0008               	return
 12539  1E7E                     __end_of_CLK_SET_LOW:
 12540                           
 12541                           	psect	text54
 12542  1E68                     __ptext54:	
 12543 ;; *************** function _CLK_SET_HIGH *****************
 12544 ;; Defined at:
 12545 ;;		line 25 in file "tm1637.c"
 12546 ;; Parameters:    Size  Location     Type
 12547 ;;  p               1    wreg     PTR struct .
 12548 ;;		 -> NULL(0), main@tm1637(2), 
 12549 ;; Auto vars:     Size  Location     Type
 12550 ;;  p               1    1[COMMON] PTR struct .
 12551 ;;		 -> NULL(0), main@tm1637(2), 
 12552 ;; Return value:  Size  Location     Type
 12553 ;;                  1    wreg      void 
 12554 ;; Registers used:
 12555 ;;		wreg, fsr1l, fsr1h, status,2, status,0
 12556 ;; Tracked objects:
 12557 ;;		On entry : 0/0
 12558 ;;		On exit  : 0/0
 12559 ;;		Unchanged: 0/0
 12560 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 12561 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12562 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12563 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12564 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12565 ;;Total ram usage:        2 bytes
 12566 ;; Hardware stack levels used: 1
 12567 ;; This function calls:
 12568 ;;		Nothing
 12569 ;; This function is called by:
 12570 ;;		_start_segment
 12571 ;;		_stop_segment
 12572 ;;		_write_byte
 12573 ;; This function uses a non-reentrant model
 12574 ;;
 12575                           
 12576                           
 12577                           ;psect for function _CLK_SET_HIGH
 12578  1E68                     _CLK_SET_HIGH:
 12579                           
 12580                           ;incstack = 0
 12581                           ; Regs used in _CLK_SET_HIGH: [wreg+fsr1l+fsr1h+status,2+status,0]
 12582                           ;CLK_SET_HIGH@p stored from wreg
 12583  1E68  00F1               	movwf	CLK_SET_HIGH@p
 12584  1E69                     l2612:
 12585  1E69  0871               	movf	CLK_SET_HIGH@p,w
 12586  1E6A  0086               	movwf	6
 12587  1E6B  3001               	movlw	1	; select bank2/3
 12588  1E6C  0087               	movwf	7
 12589  1E6D  0801               	movf	1,w
 12590  1E6E  00F0               	movwf	??_CLK_SET_HIGH
 12591  1E6F  0870               	movf	??_CLK_SET_HIGH,w
 12592  1E70  0022               	movlb	2	; select bank2
 12593  1E71  048D               	iorwf	13,f	;volatile
 12594  1E72                     l185:
 12595  1E72  0008               	return
 12596  1E73                     __end_of_CLK_SET_HIGH:
 12597                           
 12598                           	psect	text55
 12599  1E2E                     __ptext55:	
 12600 ;; *************** function _encode_digit *****************
 12601 ;; Defined at:
 12602 ;;		line 183 in file "tm1637.c"
 12603 ;; Parameters:    Size  Location     Type
 12604 ;;  p               1    wreg     PTR struct .
 12605 ;;		 -> NULL(0), main@tm1637(2), 
 12606 ;;  digit           1    9[COMMON] unsigned char 
 12607 ;; Auto vars:     Size  Location     Type
 12608 ;;  p               1   10[COMMON] PTR struct .
 12609 ;;		 -> NULL(0), main@tm1637(2), 
 12610 ;; Return value:  Size  Location     Type
 12611 ;;                  1    wreg      unsigned char 
 12612 ;; Registers used:
 12613 ;;		wreg, fsr1l, fsr1h, status,2, status,0
 12614 ;; Tracked objects:
 12615 ;;		On entry : 0/0
 12616 ;;		On exit  : 0/0
 12617 ;;		Unchanged: 0/0
 12618 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 12619 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12620 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12621 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12622 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12623 ;;Total ram usage:        2 bytes
 12624 ;; Hardware stack levels used: 1
 12625 ;; This function calls:
 12626 ;;		Nothing
 12627 ;; This function is called by:
 12628 ;;		_print_digit
 12629 ;; This function uses a non-reentrant model
 12630 ;;
 12631                           
 12632                           
 12633                           ;psect for function _encode_digit
 12634  1E2E                     _encode_digit:
 12635  1E2E                     l2978:	
 12636                           ;incstack = 0
 12637                           ; Regs used in _encode_digit: [wreg+fsr1l+fsr1h+status,2+status,0]
 12638                           
 12639                           
 12640                           ;tm1637.c: 184:     return segdata[digit & 0x0f];
 12641  1E2E  0879               	movf	encode_digit@digit,w
 12642  1E2F  390F               	andlw	15
 12643  1E30  3E2C               	addlw	(low (_segdata| (0+256)))& (0+255)
 12644  1E31  0086               	movwf	6
 12645  1E32  3001               	movlw	1	; select bank2/3
 12646  1E33  0087               	movwf	7
 12647  1E34  0801               	movf	1,w
 12648  1E35                     l244:
 12649  1E35  0008               	return
 12650  1E36                     __end_of_encode_digit:
 12651                           
 12652                           	psect	text56
 12653  1181                     __ptext56:	
 12654 ;; *************** function ___awmod *****************
 12655 ;; Defined at:
 12656 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\awmod.c"
 12657 ;; Parameters:    Size  Location     Type
 12658 ;;  divisor         2    0[COMMON] int 
 12659 ;;  dividend        2    2[COMMON] int 
 12660 ;; Auto vars:     Size  Location     Type
 12661 ;;  sign            1    6[COMMON] unsigned char 
 12662 ;;  counter         1    5[COMMON] unsigned char 
 12663 ;; Return value:  Size  Location     Type
 12664 ;;                  2    0[COMMON] int 
 12665 ;; Registers used:
 12666 ;;		wreg, status,2, status,0
 12667 ;; Tracked objects:
 12668 ;;		On entry : 0/0
 12669 ;;		On exit  : 0/0
 12670 ;;		Unchanged: 0/0
 12671 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 12672 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12673 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12674 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12675 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12676 ;;Total ram usage:        7 bytes
 12677 ;; Hardware stack levels used: 1
 12678 ;; This function calls:
 12679 ;;		Nothing
 12680 ;; This function is called by:
 12681 ;;		_print_digit
 12682 ;; This function uses a non-reentrant model
 12683 ;;
 12684                           
 12685                           
 12686                           ;psect for function ___awmod
 12687  1181                     ___awmod:
 12688  1181                     l3122:	
 12689                           ;incstack = 0
 12690                           ; Regs used in ___awmod: [wreg+status,2+status,0]
 12691                           
 12692  1181  01F6               	clrf	___awmod@sign
 12693  1182                     l3124:
 12694  1182  1FF3               	btfss	___awmod@dividend+1,7
 12695  1183  2985               	goto	u3481
 12696  1184  2986               	goto	u3480
 12697  1185                     u3481:
 12698  1185  298D               	goto	l3130
 12699  1186                     u3480:
 12700  1186                     l3126:
 12701  1186  09F2               	comf	___awmod@dividend,f
 12702  1187  09F3               	comf	___awmod@dividend+1,f
 12703  1188  0AF2               	incf	___awmod@dividend,f
 12704  1189  1903               	skipnz
 12705  118A  0AF3               	incf	___awmod@dividend+1,f
 12706  118B                     l3128:
 12707  118B  01F6               	clrf	___awmod@sign
 12708  118C  0AF6               	incf	___awmod@sign,f
 12709  118D                     l3130:
 12710  118D  1FF1               	btfss	___awmod@divisor+1,7
 12711  118E  2990               	goto	u3491
 12712  118F  2991               	goto	u3490
 12713  1190                     u3491:
 12714  1190  2996               	goto	l3134
 12715  1191                     u3490:
 12716  1191                     l3132:
 12717  1191  09F0               	comf	___awmod@divisor,f
 12718  1192  09F1               	comf	___awmod@divisor+1,f
 12719  1193  0AF0               	incf	___awmod@divisor,f
 12720  1194  1903               	skipnz
 12721  1195  0AF1               	incf	___awmod@divisor+1,f
 12722  1196                     l3134:
 12723  1196  0870               	movf	___awmod@divisor,w
 12724  1197  0471               	iorwf	___awmod@divisor+1,w
 12725  1198  1903               	btfsc	3,2
 12726  1199  299B               	goto	u3501
 12727  119A  299C               	goto	u3500
 12728  119B                     u3501:
 12729  119B  29C5               	goto	l3152
 12730  119C                     u3500:
 12731  119C                     l3136:
 12732  119C  01F5               	clrf	___awmod@counter
 12733  119D  0AF5               	incf	___awmod@counter,f
 12734  119E  29A8               	goto	l3142
 12735  119F                     l3138:
 12736  119F  3001               	movlw	1
 12737  11A0                     u3515:
 12738  11A0  35F0               	lslf	___awmod@divisor,f
 12739  11A1  0DF1               	rlf	___awmod@divisor+1,f
 12740  11A2  0B89               	decfsz	9,f
 12741  11A3  29A0               	goto	u3515
 12742  11A4                     l3140:
 12743  11A4  3001               	movlw	1
 12744  11A5  00F4               	movwf	??___awmod
 12745  11A6  0874               	movf	??___awmod,w
 12746  11A7  07F5               	addwf	___awmod@counter,f
 12747  11A8                     l3142:
 12748  11A8  1FF1               	btfss	___awmod@divisor+1,7
 12749  11A9  29AB               	goto	u3521
 12750  11AA  29AC               	goto	u3520
 12751  11AB                     u3521:
 12752  11AB  299F               	goto	l3138
 12753  11AC                     u3520:
 12754  11AC                     l3144:
 12755  11AC  0871               	movf	___awmod@divisor+1,w
 12756  11AD  0273               	subwf	___awmod@dividend+1,w
 12757  11AE  1D03               	skipz
 12758  11AF  29B2               	goto	u3535
 12759  11B0  0870               	movf	___awmod@divisor,w
 12760  11B1  0272               	subwf	___awmod@dividend,w
 12761  11B2                     u3535:
 12762  11B2  1C03               	skipc
 12763  11B3  29B5               	goto	u3531
 12764  11B4  29B6               	goto	u3530
 12765  11B5                     u3531:
 12766  11B5  29BA               	goto	l3148
 12767  11B6                     u3530:
 12768  11B6                     l3146:
 12769  11B6  0870               	movf	___awmod@divisor,w
 12770  11B7  02F2               	subwf	___awmod@dividend,f
 12771  11B8  0871               	movf	___awmod@divisor+1,w
 12772  11B9  3BF3               	subwfb	___awmod@dividend+1,f
 12773  11BA                     l3148:
 12774  11BA  3001               	movlw	1
 12775  11BB                     u3545:
 12776  11BB  36F1               	lsrf	___awmod@divisor+1,f
 12777  11BC  0CF0               	rrf	___awmod@divisor,f
 12778  11BD  0B89               	decfsz	9,f
 12779  11BE  29BB               	goto	u3545
 12780  11BF                     l3150:
 12781  11BF  3001               	movlw	1
 12782  11C0  02F5               	subwf	___awmod@counter,f
 12783  11C1  1D03               	btfss	3,2
 12784  11C2  29C4               	goto	u3551
 12785  11C3  29C5               	goto	u3550
 12786  11C4                     u3551:
 12787  11C4  29AC               	goto	l3144
 12788  11C5                     u3550:
 12789  11C5                     l3152:
 12790  11C5  0876               	movf	___awmod@sign,w
 12791  11C6  1903               	btfsc	3,2
 12792  11C7  29C9               	goto	u3561
 12793  11C8  29CA               	goto	u3560
 12794  11C9                     u3561:
 12795  11C9  29CF               	goto	l3156
 12796  11CA                     u3560:
 12797  11CA                     l3154:
 12798  11CA  09F2               	comf	___awmod@dividend,f
 12799  11CB  09F3               	comf	___awmod@dividend+1,f
 12800  11CC  0AF2               	incf	___awmod@dividend,f
 12801  11CD  1903               	skipnz
 12802  11CE  0AF3               	incf	___awmod@dividend+1,f
 12803  11CF                     l3156:
 12804  11CF  0873               	movf	___awmod@dividend+1,w
 12805  11D0  00F1               	movwf	?___awmod+1
 12806  11D1  0872               	movf	___awmod@dividend,w
 12807  11D2  00F0               	movwf	?___awmod
 12808  11D3                     l700:
 12809  11D3  0008               	return
 12810  11D4                     __end_of___awmod:
 12811                           
 12812                           	psect	text57
 12813  13ED                     __ptext57:	
 12814 ;; *************** function ___awdiv *****************
 12815 ;; Defined at:
 12816 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\awdiv.c"
 12817 ;; Parameters:    Size  Location     Type
 12818 ;;  divisor         2    0[COMMON] int 
 12819 ;;  dividend        2    2[COMMON] int 
 12820 ;; Auto vars:     Size  Location     Type
 12821 ;;  quotient        2    7[COMMON] int 
 12822 ;;  sign            1    6[COMMON] unsigned char 
 12823 ;;  counter         1    5[COMMON] unsigned char 
 12824 ;; Return value:  Size  Location     Type
 12825 ;;                  2    0[COMMON] int 
 12826 ;; Registers used:
 12827 ;;		wreg, status,2, status,0
 12828 ;; Tracked objects:
 12829 ;;		On entry : 0/0
 12830 ;;		On exit  : 0/0
 12831 ;;		Unchanged: 0/0
 12832 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 12833 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12834 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12835 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12836 ;;      Totals:         9       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12837 ;;Total ram usage:        9 bytes
 12838 ;; Hardware stack levels used: 1
 12839 ;; This function calls:
 12840 ;;		Nothing
 12841 ;; This function is called by:
 12842 ;;		_print_digit
 12843 ;; This function uses a non-reentrant model
 12844 ;;
 12845                           
 12846                           
 12847                           ;psect for function ___awdiv
 12848  13ED                     ___awdiv:
 12849  13ED                     l3078:	
 12850                           ;incstack = 0
 12851                           ; Regs used in ___awdiv: [wreg+status,2+status,0]
 12852                           
 12853  13ED  01F6               	clrf	___awdiv@sign
 12854  13EE                     l3080:
 12855  13EE  1FF1               	btfss	___awdiv@divisor+1,7
 12856  13EF  2BF1               	goto	u3381
 12857  13F0  2BF2               	goto	u3380
 12858  13F1                     u3381:
 12859  13F1  2BF9               	goto	l3086
 12860  13F2                     u3380:
 12861  13F2                     l3082:
 12862  13F2  09F0               	comf	___awdiv@divisor,f
 12863  13F3  09F1               	comf	___awdiv@divisor+1,f
 12864  13F4  0AF0               	incf	___awdiv@divisor,f
 12865  13F5  1903               	skipnz
 12866  13F6  0AF1               	incf	___awdiv@divisor+1,f
 12867  13F7                     l3084:
 12868  13F7  01F6               	clrf	___awdiv@sign
 12869  13F8  0AF6               	incf	___awdiv@sign,f
 12870  13F9                     l3086:
 12871  13F9  1FF3               	btfss	___awdiv@dividend+1,7
 12872  13FA  2BFC               	goto	u3391
 12873  13FB  2BFD               	goto	u3390
 12874  13FC                     u3391:
 12875  13FC  2C06               	goto	l3092
 12876  13FD                     u3390:
 12877  13FD                     l3088:
 12878  13FD  09F2               	comf	___awdiv@dividend,f
 12879  13FE  09F3               	comf	___awdiv@dividend+1,f
 12880  13FF  0AF2               	incf	___awdiv@dividend,f
 12881  1400  1903               	skipnz
 12882  1401  0AF3               	incf	___awdiv@dividend+1,f
 12883  1402                     l3090:
 12884  1402  3001               	movlw	1
 12885  1403  00F4               	movwf	??___awdiv
 12886  1404  0874               	movf	??___awdiv,w
 12887  1405  06F6               	xorwf	___awdiv@sign,f
 12888  1406                     l3092:
 12889  1406  01F7               	clrf	___awdiv@quotient
 12890  1407  01F8               	clrf	___awdiv@quotient+1
 12891  1408                     l3094:
 12892  1408  0870               	movf	___awdiv@divisor,w
 12893  1409  0471               	iorwf	___awdiv@divisor+1,w
 12894  140A  1903               	btfsc	3,2
 12895  140B  2C0D               	goto	u3401
 12896  140C  2C0E               	goto	u3400
 12897  140D                     u3401:
 12898  140D  2C3D               	goto	l3114
 12899  140E                     u3400:
 12900  140E                     l3096:
 12901  140E  01F5               	clrf	___awdiv@counter
 12902  140F  0AF5               	incf	___awdiv@counter,f
 12903  1410  2C1A               	goto	l3102
 12904  1411                     l3098:
 12905  1411  3001               	movlw	1
 12906  1412                     u3415:
 12907  1412  35F0               	lslf	___awdiv@divisor,f
 12908  1413  0DF1               	rlf	___awdiv@divisor+1,f
 12909  1414  0B89               	decfsz	9,f
 12910  1415  2C12               	goto	u3415
 12911  1416                     l3100:
 12912  1416  3001               	movlw	1
 12913  1417  00F4               	movwf	??___awdiv
 12914  1418  0874               	movf	??___awdiv,w
 12915  1419  07F5               	addwf	___awdiv@counter,f
 12916  141A                     l3102:
 12917  141A  1FF1               	btfss	___awdiv@divisor+1,7
 12918  141B  2C1D               	goto	u3421
 12919  141C  2C1E               	goto	u3420
 12920  141D                     u3421:
 12921  141D  2C11               	goto	l3098
 12922  141E                     u3420:
 12923  141E                     l3104:
 12924  141E  3001               	movlw	1
 12925  141F                     u3435:
 12926  141F  35F7               	lslf	___awdiv@quotient,f
 12927  1420  0DF8               	rlf	___awdiv@quotient+1,f
 12928  1421  0B89               	decfsz	9,f
 12929  1422  2C1F               	goto	u3435
 12930  1423  0871               	movf	___awdiv@divisor+1,w
 12931  1424  0273               	subwf	___awdiv@dividend+1,w
 12932  1425  1D03               	skipz
 12933  1426  2C29               	goto	u3445
 12934  1427  0870               	movf	___awdiv@divisor,w
 12935  1428  0272               	subwf	___awdiv@dividend,w
 12936  1429                     u3445:
 12937  1429  1C03               	skipc
 12938  142A  2C2C               	goto	u3441
 12939  142B  2C2D               	goto	u3440
 12940  142C                     u3441:
 12941  142C  2C32               	goto	l3110
 12942  142D                     u3440:
 12943  142D                     l3106:
 12944  142D  0870               	movf	___awdiv@divisor,w
 12945  142E  02F2               	subwf	___awdiv@dividend,f
 12946  142F  0871               	movf	___awdiv@divisor+1,w
 12947  1430  3BF3               	subwfb	___awdiv@dividend+1,f
 12948  1431                     l3108:
 12949  1431  1477               	bsf	___awdiv@quotient,0
 12950  1432                     l3110:
 12951  1432  3001               	movlw	1
 12952  1433                     u3455:
 12953  1433  36F1               	lsrf	___awdiv@divisor+1,f
 12954  1434  0CF0               	rrf	___awdiv@divisor,f
 12955  1435  0B89               	decfsz	9,f
 12956  1436  2C33               	goto	u3455
 12957  1437                     l3112:
 12958  1437  3001               	movlw	1
 12959  1438  02F5               	subwf	___awdiv@counter,f
 12960  1439  1D03               	btfss	3,2
 12961  143A  2C3C               	goto	u3461
 12962  143B  2C3D               	goto	u3460
 12963  143C                     u3461:
 12964  143C  2C1E               	goto	l3104
 12965  143D                     u3460:
 12966  143D                     l3114:
 12967  143D  0876               	movf	___awdiv@sign,w
 12968  143E  1903               	btfsc	3,2
 12969  143F  2C41               	goto	u3471
 12970  1440  2C42               	goto	u3470
 12971  1441                     u3471:
 12972  1441  2C47               	goto	l3118
 12973  1442                     u3470:
 12974  1442                     l3116:
 12975  1442  09F7               	comf	___awdiv@quotient,f
 12976  1443  09F8               	comf	___awdiv@quotient+1,f
 12977  1444  0AF7               	incf	___awdiv@quotient,f
 12978  1445  1903               	skipnz
 12979  1446  0AF8               	incf	___awdiv@quotient+1,f
 12980  1447                     l3118:
 12981  1447  0878               	movf	___awdiv@quotient+1,w
 12982  1448  00F1               	movwf	?___awdiv+1
 12983  1449  0877               	movf	___awdiv@quotient,w
 12984  144A  00F0               	movwf	?___awdiv
 12985  144B                     l687:
 12986  144B  0008               	return
 12987  144C                     __end_of___awdiv:
 12988                           
 12989                           	psect	text58
 12990  0B61                     __ptext58:	
 12991 ;; *************** function _get_scale_val *****************
 12992 ;; Defined at:
 12993 ;;		line 34 in file "loadcell.c"
 12994 ;; Parameters:    Size  Location     Type
 12995 ;;  p               1    wreg     PTR struct .
 12996 ;;		 -> NULL(0), main@loadcell(12), 
 12997 ;;  scale_avg_co    1    0[BANK0 ] unsigned char 
 12998 ;; Auto vars:     Size  Location     Type
 12999 ;;  p               1   18[BANK0 ] PTR struct .
 13000 ;;		 -> NULL(0), main@loadcell(12), 
 13001 ;;  i               1   17[BANK0 ] unsigned char 
 13002 ;;  j               1   12[BANK0 ] unsigned char 
 13003 ;;  weight_count    4   13[BANK0 ] unsigned long 
 13004 ;;  weight_add      4    8[BANK0 ] unsigned long 
 13005 ;; Return value:  Size  Location     Type
 13006 ;;                  4    0[BANK0 ] unsigned long 
 13007 ;; Registers used:
 13008 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 13009 ;; Tracked objects:
 13010 ;;		On entry : 0/0
 13011 ;;		On exit  : 0/0
 13012 ;;		Unchanged: 0/0
 13013 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 13014 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13015 ;;      Locals:         0      11       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13016 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13017 ;;      Totals:         0      19       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13018 ;;Total ram usage:       19 bytes
 13019 ;; Hardware stack levels used: 1
 13020 ;; Hardware stack levels required when called: 1
 13021 ;; This function calls:
 13022 ;;		___lldiv
 13023 ;;		_get_CELL_DAT_VAL
 13024 ;;		_set_CELL_CLK_HIGH
 13025 ;;		_set_CELL_CLK_LOW
 13026 ;; This function is called by:
 13027 ;;		_initialize
 13028 ;;		_calc_percentage
 13029 ;; This function uses a non-reentrant model
 13030 ;;
 13031                           
 13032                           
 13033                           ;psect for function _get_scale_val
 13034  0B61                     _get_scale_val:
 13035                           
 13036                           ;incstack = 0
 13037                           ; Regs used in _get_scale_val: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
 13038                           ;get_scale_val@p stored from wreg
 13039  0B61  0020               	movlb	0	; select bank0
 13040  0B62  00B2               	movwf	get_scale_val@p
 13041  0B63                     l3494:
 13042                           
 13043                           ;loadcell.c: 35:     set_CELL_CLK_LOW(p);
 13044  0B63  0832               	movf	get_scale_val@p,w
 13045  0B64  319E  265D  318B   	fcall	_set_CELL_CLK_LOW
 13046  0B67                     l3496:
 13047                           
 13048                           ;loadcell.c: 36:     unsigned long weight_count = 0;
 13049  0B67  3000               	movlw	0
 13050  0B68  0020               	movlb	0	; select bank0
 13051  0B69  00B0               	movwf	get_scale_val@weight_count+3
 13052  0B6A  3000               	movlw	0
 13053  0B6B  00AF               	movwf	get_scale_val@weight_count+2
 13054  0B6C  3000               	movlw	0
 13055  0B6D  00AE               	movwf	get_scale_val@weight_count+1
 13056  0B6E  3000               	movlw	0
 13057  0B6F  00AD               	movwf	get_scale_val@weight_count
 13058  0B70                     l3498:
 13059                           
 13060                           ;loadcell.c: 37:     unsigned long weight_add = 0;
 13061  0B70  3000               	movlw	0
 13062  0B71  00AB               	movwf	get_scale_val@weight_add+3
 13063  0B72  3000               	movlw	0
 13064  0B73  00AA               	movwf	get_scale_val@weight_add+2
 13065  0B74  3000               	movlw	0
 13066  0B75  00A9               	movwf	get_scale_val@weight_add+1
 13067  0B76  3000               	movlw	0
 13068  0B77  00A8               	movwf	get_scale_val@weight_add
 13069  0B78                     l3500:
 13070                           
 13071                           ;loadcell.c: 38:     for (uint8_t j = 0; j < scale_avg_count; j++)
 13072  0B78  01AC               	clrf	get_scale_val@j
 13073  0B79  2C00               	goto	l3550
 13074  0B7A                     l3502:
 13075  0B7A  0020               	movlb	0	; select bank0
 13076  0B7B  0832               	movf	get_scale_val@p,w
 13077  0B7C  3188  2089  318B   	fcall	_get_CELL_DAT_VAL
 13078  0B7F  0870               	movf	?_get_CELL_DAT_VAL,w
 13079  0B80  0471               	iorwf	?_get_CELL_DAT_VAL+1,w
 13080  0B81  1903               	btfsc	3,2
 13081  0B82  2B84               	goto	u4221
 13082  0B83  2B85               	goto	u4220
 13083  0B84                     u4221:
 13084  0B84  2B7A               	goto	l3502
 13085  0B85                     u4220:
 13086  0B85                     l3504:
 13087  0B85  0020               	movlb	0	; select bank0
 13088  0B86  0832               	movf	get_scale_val@p,w
 13089  0B87  3188  2089  318B   	fcall	_get_CELL_DAT_VAL
 13090  0B8A  0370               	decf	?_get_CELL_DAT_VAL,w
 13091  0B8B  0471               	iorwf	?_get_CELL_DAT_VAL+1,w
 13092  0B8C  1903               	btfsc	3,2
 13093  0B8D  2B8F               	goto	u4231
 13094  0B8E  2B90               	goto	u4230
 13095  0B8F                     u4231:
 13096  0B8F  2B85               	goto	l3504
 13097  0B90                     u4230:
 13098  0B90                     l3506:
 13099                           
 13100                           ;loadcell.c: 42:         _delay((unsigned long)((10)*(8000000/4000000.0)));
 13101  0B90  3006               	movlw	6
 13102  0B91                     u4877:
 13103  0B91  0B89               	decfsz	9,f
 13104  0B92  2B91               	goto	u4877
 13105  0B93  3200               	nop2
 13106  0B94                     l3508:
 13107                           
 13108                           ;loadcell.c: 44:         uint8_t i;;loadcell.c: 45:         for (i = 0; i < 24; i++){
 13109  0B94  0020               	movlb	0	; select bank0
 13110  0B95  01B1               	clrf	get_scale_val@i
 13111  0B96                     l3514:
 13112                           
 13113                           ;loadcell.c: 46:             weight_count <<= 1;
 13114  0B96  3001               	movlw	1
 13115  0B97                     u4245:
 13116  0B97  35AD               	lslf	get_scale_val@weight_count,f
 13117  0B98  0DAE               	rlf	get_scale_val@weight_count+1,f
 13118  0B99  0DAF               	rlf	get_scale_val@weight_count+2,f
 13119  0B9A  0DB0               	rlf	get_scale_val@weight_count+3,f
 13120  0B9B  0B89               	decfsz	9,f
 13121  0B9C  2B97               	goto	u4245
 13122  0B9D                     l3516:
 13123                           
 13124                           ;loadcell.c: 47:             set_CELL_CLK_HIGH(p);
 13125  0B9D  0832               	movf	get_scale_val@p,w
 13126  0B9E  319E  2652  318B   	fcall	_set_CELL_CLK_HIGH
 13127  0BA1                     l3518:
 13128                           
 13129                           ;loadcell.c: 48:             _delay((unsigned long)((10)*(8000000/4000000.0)));
 13130  0BA1  3006               	movlw	6
 13131  0BA2                     u4887:
 13132  0BA2  0B89               	decfsz	9,f
 13133  0BA3  2BA2               	goto	u4887
 13134  0BA4  3200               	nop2
 13135  0BA5                     l3520:
 13136                           
 13137                           ;loadcell.c: 49:             set_CELL_CLK_LOW(p);
 13138  0BA5  0020               	movlb	0	; select bank0
 13139  0BA6  0832               	movf	get_scale_val@p,w
 13140  0BA7  319E  265D  318B   	fcall	_set_CELL_CLK_LOW
 13141  0BAA                     l3522:
 13142                           
 13143                           ;loadcell.c: 50:             weight_count += get_CELL_DAT_VAL(p);
 13144  0BAA  0020               	movlb	0	; select bank0
 13145  0BAB  0832               	movf	get_scale_val@p,w
 13146  0BAC  3188  2089  318B   	fcall	_get_CELL_DAT_VAL
 13147  0BAF  0870               	movf	?_get_CELL_DAT_VAL,w
 13148  0BB0  0020               	movlb	0	; select bank0
 13149  0BB1  00A4               	movwf	??_get_scale_val
 13150  0BB2  0871               	movf	?_get_CELL_DAT_VAL+1,w
 13151  0BB3  00A5               	movwf	??_get_scale_val+1
 13152  0BB4  3000               	movlw	0
 13153  0BB5  1BA5               	btfsc	??_get_scale_val+1,7
 13154  0BB6  30FF               	movlw	255
 13155  0BB7  00A6               	movwf	??_get_scale_val+2
 13156  0BB8  00A7               	movwf	??_get_scale_val+3
 13157  0BB9  0824               	movf	??_get_scale_val,w
 13158  0BBA  07AD               	addwf	get_scale_val@weight_count,f
 13159  0BBB  0825               	movf	??_get_scale_val+1,w
 13160  0BBC  3DAE               	addwfc	get_scale_val@weight_count+1,f
 13161  0BBD  0826               	movf	??_get_scale_val+2,w
 13162  0BBE  3DAF               	addwfc	get_scale_val@weight_count+2,f
 13163  0BBF  0827               	movf	??_get_scale_val+3,w
 13164  0BC0  3DB0               	addwfc	get_scale_val@weight_count+3,f
 13165  0BC1                     l3524:
 13166                           
 13167                           ;loadcell.c: 51:             _delay((unsigned long)((10)*(8000000/4000000.0)));
 13168  0BC1  3006               	movlw	6
 13169  0BC2                     u4897:
 13170  0BC2  0B89               	decfsz	9,f
 13171  0BC3  2BC2               	goto	u4897
 13172  0BC4  3200               	nop2
 13173  0BC5                     l3526:
 13174                           
 13175                           ;loadcell.c: 52:         }
 13176  0BC5  3001               	movlw	1
 13177  0BC6  0020               	movlb	0	; select bank0
 13178  0BC7  00A4               	movwf	??_get_scale_val
 13179  0BC8  0824               	movf	??_get_scale_val,w
 13180  0BC9  07B1               	addwf	get_scale_val@i,f
 13181  0BCA                     l3528:
 13182  0BCA  3018               	movlw	24
 13183  0BCB  0231               	subwf	get_scale_val@i,w
 13184  0BCC  1C03               	skipc
 13185  0BCD  2BCF               	goto	u4251
 13186  0BCE  2BD0               	goto	u4250
 13187  0BCF                     u4251:
 13188  0BCF  2B96               	goto	l3514
 13189  0BD0                     u4250:
 13190  0BD0                     l3530:
 13191                           
 13192                           ;loadcell.c: 54:         for (i = 0; i < 1; i++){
 13193  0BD0  01B1               	clrf	get_scale_val@i
 13194  0BD1                     l3536:
 13195                           
 13196                           ;loadcell.c: 55:             set_CELL_CLK_HIGH(p);
 13197  0BD1  0832               	movf	get_scale_val@p,w
 13198  0BD2  319E  2652  318B   	fcall	_set_CELL_CLK_HIGH
 13199  0BD5                     l3538:
 13200                           
 13201                           ;loadcell.c: 56:             _delay((unsigned long)((10)*(8000000/4000000.0)));
 13202  0BD5  3006               	movlw	6
 13203  0BD6                     u4907:
 13204  0BD6  0B89               	decfsz	9,f
 13205  0BD7  2BD6               	goto	u4907
 13206  0BD8  3200               	nop2
 13207  0BD9                     l3540:
 13208                           
 13209                           ;loadcell.c: 57:             set_CELL_CLK_LOW(p);
 13210  0BD9  0020               	movlb	0	; select bank0
 13211  0BDA  0832               	movf	get_scale_val@p,w
 13212  0BDB  319E  265D  318B   	fcall	_set_CELL_CLK_LOW
 13213                           
 13214                           ;loadcell.c: 58:             _delay((unsigned long)((10)*(8000000/4000000.0)));
 13215  0BDE  3006               	movlw	6
 13216  0BDF                     u4917:
 13217  0BDF  0B89               	decfsz	9,f
 13218  0BE0  2BDF               	goto	u4917
 13219  0BE1  3200               	nop2
 13220  0BE2                     l3542:
 13221                           
 13222                           ;loadcell.c: 59:         };
 13223  0BE2  3001               	movlw	1
 13224  0BE3  0020               	movlb	0	; select bank0
 13225  0BE4  00A4               	movwf	??_get_scale_val
 13226  0BE5  0824               	movf	??_get_scale_val,w
 13227  0BE6  07B1               	addwf	get_scale_val@i,f
 13228  0BE7                     l3544:
 13229  0BE7  0831               	movf	get_scale_val@i,w
 13230  0BE8  1903               	btfsc	3,2
 13231  0BE9  2BEB               	goto	u4261
 13232  0BEA  2BEC               	goto	u4260
 13233  0BEB                     u4261:
 13234  0BEB  2BD1               	goto	l3536
 13235  0BEC                     u4260:
 13236  0BEC                     l3546:
 13237                           
 13238                           ;loadcell.c: 60:         weight_add += weight_count;
 13239  0BEC  082D               	movf	get_scale_val@weight_count,w
 13240  0BED  07A8               	addwf	get_scale_val@weight_add,f
 13241  0BEE  082E               	movf	get_scale_val@weight_count+1,w
 13242  0BEF  3DA9               	addwfc	get_scale_val@weight_add+1,f
 13243  0BF0  082F               	movf	get_scale_val@weight_count+2,w
 13244  0BF1  3DAA               	addwfc	get_scale_val@weight_add+2,f
 13245  0BF2  0830               	movf	get_scale_val@weight_count+3,w
 13246  0BF3  3DAB               	addwfc	get_scale_val@weight_add+3,f
 13247                           
 13248                           ;loadcell.c: 61:         weight_count = 0;
 13249  0BF4  3000               	movlw	0
 13250  0BF5  00B0               	movwf	get_scale_val@weight_count+3
 13251  0BF6  3000               	movlw	0
 13252  0BF7  00AF               	movwf	get_scale_val@weight_count+2
 13253  0BF8  3000               	movlw	0
 13254  0BF9  00AE               	movwf	get_scale_val@weight_count+1
 13255  0BFA  3000               	movlw	0
 13256  0BFB  00AD               	movwf	get_scale_val@weight_count
 13257  0BFC                     l3548:
 13258                           
 13259                           ;loadcell.c: 62:     }
 13260  0BFC  3001               	movlw	1
 13261  0BFD  00A4               	movwf	??_get_scale_val
 13262  0BFE  0824               	movf	??_get_scale_val,w
 13263  0BFF  07AC               	addwf	get_scale_val@j,f
 13264  0C00                     l3550:
 13265  0C00  0820               	movf	get_scale_val@scale_avg_count,w
 13266  0C01  022C               	subwf	get_scale_val@j,w
 13267  0C02  1C03               	skipc
 13268  0C03  2C05               	goto	u4271
 13269  0C04  2C06               	goto	u4270
 13270  0C05                     u4271:
 13271  0C05  2B7A               	goto	l3502
 13272  0C06                     u4270:
 13273  0C06                     l3552:
 13274                           
 13275                           ;loadcell.c: 63:     weight_count = weight_add / scale_avg_count;
 13276  0C06  0820               	movf	get_scale_val@scale_avg_count,w
 13277  0C07  00A4               	movwf	??_get_scale_val
 13278  0C08  01A5               	clrf	??_get_scale_val+1
 13279  0C09  01A6               	clrf	??_get_scale_val+2
 13280  0C0A  01A7               	clrf	??_get_scale_val+3
 13281  0C0B  0827               	movf	??_get_scale_val+3,w
 13282  0C0C  00F3               	movwf	___lldiv@divisor+3
 13283  0C0D  0826               	movf	??_get_scale_val+2,w
 13284  0C0E  00F2               	movwf	___lldiv@divisor+2
 13285  0C0F  0825               	movf	??_get_scale_val+1,w
 13286  0C10  00F1               	movwf	___lldiv@divisor+1
 13287  0C11  0824               	movf	??_get_scale_val,w
 13288  0C12  00F0               	movwf	___lldiv@divisor
 13289  0C13  082B               	movf	get_scale_val@weight_add+3,w
 13290  0C14  00F7               	movwf	___lldiv@dividend+3
 13291  0C15  082A               	movf	get_scale_val@weight_add+2,w
 13292  0C16  00F6               	movwf	___lldiv@dividend+2
 13293  0C17  0829               	movf	get_scale_val@weight_add+1,w
 13294  0C18  00F5               	movwf	___lldiv@dividend+1
 13295  0C19  0828               	movf	get_scale_val@weight_add,w
 13296  0C1A  00F4               	movwf	___lldiv@dividend
 13297  0C1B  3192  22DC  318B   	fcall	___lldiv
 13298  0C1E  0873               	movf	?___lldiv+3,w
 13299  0C1F  0020               	movlb	0	; select bank0
 13300  0C20  00B0               	movwf	get_scale_val@weight_count+3
 13301  0C21  0872               	movf	?___lldiv+2,w
 13302  0C22  00AF               	movwf	get_scale_val@weight_count+2
 13303  0C23  0871               	movf	?___lldiv+1,w
 13304  0C24  00AE               	movwf	get_scale_val@weight_count+1
 13305  0C25  0870               	movf	?___lldiv,w
 13306  0C26  00AD               	movwf	get_scale_val@weight_count
 13307  0C27                     l3554:
 13308                           
 13309                           ;loadcell.c: 66:     weight_count = weight_count ^ 0x800000;
 13310  0C27  3000               	movlw	0
 13311  0C28  062D               	xorwf	get_scale_val@weight_count,w
 13312  0C29  00A4               	movwf	??_get_scale_val
 13313  0C2A  3000               	movlw	0
 13314  0C2B  062E               	xorwf	get_scale_val@weight_count+1,w
 13315  0C2C  00A5               	movwf	??_get_scale_val+1
 13316  0C2D  3080               	movlw	128
 13317  0C2E  062F               	xorwf	get_scale_val@weight_count+2,w
 13318  0C2F  00A6               	movwf	??_get_scale_val+2
 13319  0C30  3000               	movlw	0
 13320  0C31  0630               	xorwf	get_scale_val@weight_count+3,w
 13321  0C32  00A7               	movwf	??_get_scale_val+3
 13322  0C33  0827               	movf	??_get_scale_val+3,w
 13323  0C34  00B0               	movwf	get_scale_val@weight_count+3
 13324  0C35  0826               	movf	??_get_scale_val+2,w
 13325  0C36  00AF               	movwf	get_scale_val@weight_count+2
 13326  0C37  0825               	movf	??_get_scale_val+1,w
 13327  0C38  00AE               	movwf	get_scale_val@weight_count+1
 13328  0C39  0824               	movf	??_get_scale_val,w
 13329  0C3A  00AD               	movwf	get_scale_val@weight_count
 13330  0C3B                     l3556:
 13331                           
 13332                           ;loadcell.c: 67:     return weight_count;
 13333  0C3B  0830               	movf	get_scale_val@weight_count+3,w
 13334  0C3C  00A3               	movwf	?_get_scale_val+3
 13335  0C3D  082F               	movf	get_scale_val@weight_count+2,w
 13336  0C3E  00A2               	movwf	?_get_scale_val+2
 13337  0C3F  082E               	movf	get_scale_val@weight_count+1,w
 13338  0C40  00A1               	movwf	?_get_scale_val+1
 13339  0C41  082D               	movf	get_scale_val@weight_count,w
 13340  0C42  00A0               	movwf	?_get_scale_val
 13341  0C43                     l291:
 13342  0C43  0008               	return
 13343  0C44                     __end_of_get_scale_val:
 13344                           
 13345                           	psect	text59
 13346  1E5D                     __ptext59:	
 13347 ;; *************** function _set_CELL_CLK_LOW *****************
 13348 ;; Defined at:
 13349 ;;		line 7 in file "loadcell.c"
 13350 ;; Parameters:    Size  Location     Type
 13351 ;;  p               1    wreg     PTR struct .
 13352 ;;		 -> NULL(0), main@loadcell(12), 
 13353 ;; Auto vars:     Size  Location     Type
 13354 ;;  p               1    1[COMMON] PTR struct .
 13355 ;;		 -> NULL(0), main@loadcell(12), 
 13356 ;; Return value:  Size  Location     Type
 13357 ;;                  1    wreg      void 
 13358 ;; Registers used:
 13359 ;;		wreg, fsr1l, fsr1h, status,2, status,0
 13360 ;; Tracked objects:
 13361 ;;		On entry : 0/0
 13362 ;;		On exit  : 0/0
 13363 ;;		Unchanged: 0/0
 13364 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 13365 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13366 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13367 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13368 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13369 ;;Total ram usage:        2 bytes
 13370 ;; Hardware stack levels used: 1
 13371 ;; This function calls:
 13372 ;;		Nothing
 13373 ;; This function is called by:
 13374 ;;		_get_scale_val
 13375 ;; This function uses a non-reentrant model
 13376 ;;
 13377                           
 13378                           
 13379                           ;psect for function _set_CELL_CLK_LOW
 13380  1E5D                     _set_CELL_CLK_LOW:
 13381                           
 13382                           ;incstack = 0
 13383                           ; Regs used in _set_CELL_CLK_LOW: [wreg+fsr1l+fsr1h+status,2+status,0]
 13384                           ;set_CELL_CLK_LOW@p stored from wreg
 13385  1E5D  00F1               	movwf	set_CELL_CLK_LOW@p
 13386  1E5E                     l2982:
 13387  1E5E  0871               	movf	set_CELL_CLK_LOW@p,w
 13388  1E5F  0086               	movwf	6
 13389  1E60  3001               	movlw	1	; select bank2/3
 13390  1E61  0087               	movwf	7
 13391  1E62  0901               	comf	1,w
 13392  1E63  00F0               	movwf	??_set_CELL_CLK_LOW
 13393  1E64  0870               	movf	??_set_CELL_CLK_LOW,w
 13394  1E65  0022               	movlb	2	; select bank2
 13395  1E66  058D               	andwf	13,f	;volatile
 13396  1E67                     l261:
 13397  1E67  0008               	return
 13398  1E68                     __end_of_set_CELL_CLK_LOW:
 13399                           
 13400                           	psect	text60
 13401  1E52                     __ptext60:	
 13402 ;; *************** function _set_CELL_CLK_HIGH *****************
 13403 ;; Defined at:
 13404 ;;		line 12 in file "loadcell.c"
 13405 ;; Parameters:    Size  Location     Type
 13406 ;;  p               1    wreg     PTR struct .
 13407 ;;		 -> NULL(0), main@loadcell(12), 
 13408 ;; Auto vars:     Size  Location     Type
 13409 ;;  p               1    1[COMMON] PTR struct .
 13410 ;;		 -> NULL(0), main@loadcell(12), 
 13411 ;; Return value:  Size  Location     Type
 13412 ;;                  1    wreg      void 
 13413 ;; Registers used:
 13414 ;;		wreg, fsr1l, fsr1h, status,2, status,0
 13415 ;; Tracked objects:
 13416 ;;		On entry : 0/0
 13417 ;;		On exit  : 0/0
 13418 ;;		Unchanged: 0/0
 13419 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 13420 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13421 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13422 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13423 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13424 ;;Total ram usage:        2 bytes
 13425 ;; Hardware stack levels used: 1
 13426 ;; This function calls:
 13427 ;;		Nothing
 13428 ;; This function is called by:
 13429 ;;		_get_scale_val
 13430 ;; This function uses a non-reentrant model
 13431 ;;
 13432                           
 13433                           
 13434                           ;psect for function _set_CELL_CLK_HIGH
 13435  1E52                     _set_CELL_CLK_HIGH:
 13436                           
 13437                           ;incstack = 0
 13438                           ; Regs used in _set_CELL_CLK_HIGH: [wreg+fsr1l+fsr1h+status,2+status,0]
 13439                           ;set_CELL_CLK_HIGH@p stored from wreg
 13440  1E52  00F1               	movwf	set_CELL_CLK_HIGH@p
 13441  1E53                     l2984:
 13442  1E53  0871               	movf	set_CELL_CLK_HIGH@p,w
 13443  1E54  0086               	movwf	6
 13444  1E55  3001               	movlw	1	; select bank2/3
 13445  1E56  0087               	movwf	7
 13446  1E57  0801               	movf	1,w
 13447  1E58  00F0               	movwf	??_set_CELL_CLK_HIGH
 13448  1E59  0870               	movf	??_set_CELL_CLK_HIGH,w
 13449  1E5A  0022               	movlb	2	; select bank2
 13450  1E5B  048D               	iorwf	13,f	;volatile
 13451  1E5C                     l264:
 13452  1E5C  0008               	return
 13453  1E5D                     __end_of_set_CELL_CLK_HIGH:
 13454                           
 13455                           	psect	text61
 13456  0889                     __ptext61:	
 13457 ;; *************** function _get_CELL_DAT_VAL *****************
 13458 ;; Defined at:
 13459 ;;		line 15 in file "loadcell.c"
 13460 ;; Parameters:    Size  Location     Type
 13461 ;;  p               1    wreg     PTR struct .
 13462 ;;		 -> NULL(0), main@loadcell(12), 
 13463 ;; Auto vars:     Size  Location     Type
 13464 ;;  p               1    5[COMMON] PTR struct .
 13465 ;;		 -> NULL(0), main@loadcell(12), 
 13466 ;; Return value:  Size  Location     Type
 13467 ;;                  2    0[COMMON] int 
 13468 ;; Registers used:
 13469 ;;		wreg, fsr1l, fsr1h, status,2, status,0
 13470 ;; Tracked objects:
 13471 ;;		On entry : 0/0
 13472 ;;		On exit  : 0/0
 13473 ;;		Unchanged: 0/0
 13474 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 13475 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13476 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13477 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13478 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13479 ;;Total ram usage:        6 bytes
 13480 ;; Hardware stack levels used: 1
 13481 ;; This function calls:
 13482 ;;		Nothing
 13483 ;; This function is called by:
 13484 ;;		_get_scale_val
 13485 ;; This function uses a non-reentrant model
 13486 ;;
 13487                           
 13488                           
 13489                           ;psect for function _get_CELL_DAT_VAL
 13490  0889                     _get_CELL_DAT_VAL:
 13491                           
 13492                           ;incstack = 0
 13493                           ; Regs used in _get_CELL_DAT_VAL: [wreg+fsr1l+fsr1h+status,2+status,0]
 13494                           ;get_CELL_DAT_VAL@p stored from wreg
 13495  0889  00F5               	movwf	get_CELL_DAT_VAL@p
 13496  088A                     l2986:
 13497                           
 13498                           ;loadcell.c: 16:     if(p->cell_dat == 0x01){ return PORTBbits.RB0; }
 13499  088A  0A75               	incf	get_CELL_DAT_VAL@p,w
 13500  088B  0086               	movwf	6
 13501  088C  3001               	movlw	1	; select bank2/3
 13502  088D  0087               	movwf	7
 13503  088E  0301               	decf	1,w
 13504  088F  1D03               	btfss	3,2
 13505  0890  2892               	goto	u3221
 13506  0891  2893               	goto	u3220
 13507  0892                     u3221:
 13508  0892  289D               	goto	l2992
 13509  0893                     u3220:
 13510  0893                     l2988:
 13511  0893  0020               	movlb	0	; select bank0
 13512  0894  080D               	movf	13,w	;volatile
 13513  0895  3901               	andlw	1
 13514  0896  00F2               	movwf	??_get_CELL_DAT_VAL
 13515  0897  01F3               	clrf	??_get_CELL_DAT_VAL+1
 13516  0898  0872               	movf	??_get_CELL_DAT_VAL,w
 13517  0899  00F0               	movwf	?_get_CELL_DAT_VAL
 13518  089A  0873               	movf	??_get_CELL_DAT_VAL+1,w
 13519  089B  00F1               	movwf	?_get_CELL_DAT_VAL+1
 13520  089C  2933               	goto	l268
 13521  089D                     l2992:
 13522                           
 13523                           ;loadcell.c: 17:     if(p->cell_dat == 0x02){ return PORTBbits.RB1; }
 13524  089D  0A75               	incf	get_CELL_DAT_VAL@p,w
 13525  089E  0086               	movwf	6
 13526  089F  3001               	movlw	1	; select bank2/3
 13527  08A0  0087               	movwf	7
 13528  08A1  3002               	movlw	2
 13529  08A2  0601               	xorwf	1,w
 13530  08A3  1D03               	btfss	3,2
 13531  08A4  28A6               	goto	u3231
 13532  08A5  28A7               	goto	u3230
 13533  08A6                     u3231:
 13534  08A6  28B1               	goto	l2998
 13535  08A7                     u3230:
 13536  08A7                     l2994:
 13537  08A7  0020               	movlb	0	; select bank0
 13538  08A8  0C0D               	rrf	13,w	;volatile
 13539  08A9  3901               	andlw	1
 13540  08AA  00F2               	movwf	??_get_CELL_DAT_VAL
 13541  08AB  01F3               	clrf	??_get_CELL_DAT_VAL+1
 13542  08AC  0872               	movf	??_get_CELL_DAT_VAL,w
 13543  08AD  00F0               	movwf	?_get_CELL_DAT_VAL
 13544  08AE  0873               	movf	??_get_CELL_DAT_VAL+1,w
 13545  08AF  00F1               	movwf	?_get_CELL_DAT_VAL+1
 13546  08B0  2933               	goto	l268
 13547  08B1                     l2998:
 13548                           
 13549                           ;loadcell.c: 18:     if(p->cell_dat == 0x04){ return PORTBbits.RB2; }
 13550  08B1  0A75               	incf	get_CELL_DAT_VAL@p,w
 13551  08B2  0086               	movwf	6
 13552  08B3  3001               	movlw	1	; select bank2/3
 13553  08B4  0087               	movwf	7
 13554  08B5  3004               	movlw	4
 13555  08B6  0601               	xorwf	1,w
 13556  08B7  1D03               	btfss	3,2
 13557  08B8  28BA               	goto	u3241
 13558  08B9  28BB               	goto	u3240
 13559  08BA                     u3241:
 13560  08BA  28C6               	goto	l3004
 13561  08BB                     u3240:
 13562  08BB                     l3000:
 13563  08BB  0020               	movlb	0	; select bank0
 13564  08BC  0C0D               	rrf	13,w	;volatile
 13565  08BD  0C89               	rrf	9,f
 13566  08BE  3901               	andlw	1
 13567  08BF  00F2               	movwf	??_get_CELL_DAT_VAL
 13568  08C0  01F3               	clrf	??_get_CELL_DAT_VAL+1
 13569  08C1  0872               	movf	??_get_CELL_DAT_VAL,w
 13570  08C2  00F0               	movwf	?_get_CELL_DAT_VAL
 13571  08C3  0873               	movf	??_get_CELL_DAT_VAL+1,w
 13572  08C4  00F1               	movwf	?_get_CELL_DAT_VAL+1
 13573  08C5  2933               	goto	l268
 13574  08C6                     l3004:
 13575                           
 13576                           ;loadcell.c: 19:     if(p->cell_dat == 0x08){ return PORTBbits.RB3; }
 13577  08C6  0A75               	incf	get_CELL_DAT_VAL@p,w
 13578  08C7  0086               	movwf	6
 13579  08C8  3001               	movlw	1	; select bank2/3
 13580  08C9  0087               	movwf	7
 13581  08CA  3008               	movlw	8
 13582  08CB  0601               	xorwf	1,w
 13583  08CC  1D03               	btfss	3,2
 13584  08CD  28CF               	goto	u3251
 13585  08CE  28D0               	goto	u3250
 13586  08CF                     u3251:
 13587  08CF  28DD               	goto	l3010
 13588  08D0                     u3250:
 13589  08D0                     l3006:
 13590  08D0  0020               	movlb	0	; select bank0
 13591  08D1  0C0D               	rrf	13,w	;volatile
 13592  08D2  00F2               	movwf	??_get_CELL_DAT_VAL
 13593  08D3  0CF2               	rrf	??_get_CELL_DAT_VAL,f
 13594  08D4  0C72               	rrf	??_get_CELL_DAT_VAL,w
 13595  08D5  3901               	andlw	1
 13596  08D6  00F3               	movwf	??_get_CELL_DAT_VAL+1
 13597  08D7  01F4               	clrf	??_get_CELL_DAT_VAL+2
 13598  08D8  0873               	movf	??_get_CELL_DAT_VAL+1,w
 13599  08D9  00F0               	movwf	?_get_CELL_DAT_VAL
 13600  08DA  0874               	movf	??_get_CELL_DAT_VAL+2,w
 13601  08DB  00F1               	movwf	?_get_CELL_DAT_VAL+1
 13602  08DC  2933               	goto	l268
 13603  08DD                     l3010:
 13604                           
 13605                           ;loadcell.c: 20:     if(p->cell_dat == 0x10){ return PORTBbits.RB4; }
 13606  08DD  0A75               	incf	get_CELL_DAT_VAL@p,w
 13607  08DE  0086               	movwf	6
 13608  08DF  3001               	movlw	1	; select bank2/3
 13609  08E0  0087               	movwf	7
 13610  08E1  3010               	movlw	16
 13611  08E2  0601               	xorwf	1,w
 13612  08E3  1D03               	btfss	3,2
 13613  08E4  28E6               	goto	u3261
 13614  08E5  28E7               	goto	u3260
 13615  08E6                     u3261:
 13616  08E6  28F1               	goto	l3016
 13617  08E7                     u3260:
 13618  08E7                     l3012:
 13619  08E7  0020               	movlb	0	; select bank0
 13620  08E8  0E0D               	swapf	13,w	;volatile
 13621  08E9  3901               	andlw	1
 13622  08EA  00F2               	movwf	??_get_CELL_DAT_VAL
 13623  08EB  01F3               	clrf	??_get_CELL_DAT_VAL+1
 13624  08EC  0872               	movf	??_get_CELL_DAT_VAL,w
 13625  08ED  00F0               	movwf	?_get_CELL_DAT_VAL
 13626  08EE  0873               	movf	??_get_CELL_DAT_VAL+1,w
 13627  08EF  00F1               	movwf	?_get_CELL_DAT_VAL+1
 13628  08F0  2933               	goto	l268
 13629  08F1                     l3016:
 13630                           
 13631                           ;loadcell.c: 21:     if(p->cell_dat == 0x20){ return PORTBbits.RB5; }
 13632  08F1  0A75               	incf	get_CELL_DAT_VAL@p,w
 13633  08F2  0086               	movwf	6
 13634  08F3  3001               	movlw	1	; select bank2/3
 13635  08F4  0087               	movwf	7
 13636  08F5  3020               	movlw	32
 13637  08F6  0601               	xorwf	1,w
 13638  08F7  1D03               	btfss	3,2
 13639  08F8  28FA               	goto	u3271
 13640  08F9  28FB               	goto	u3270
 13641  08FA                     u3271:
 13642  08FA  2906               	goto	l3022
 13643  08FB                     u3270:
 13644  08FB                     l3018:
 13645  08FB  0020               	movlb	0	; select bank0
 13646  08FC  0E0D               	swapf	13,w	;volatile
 13647  08FD  0C89               	rrf	9,f
 13648  08FE  3901               	andlw	1
 13649  08FF  00F2               	movwf	??_get_CELL_DAT_VAL
 13650  0900  01F3               	clrf	??_get_CELL_DAT_VAL+1
 13651  0901  0872               	movf	??_get_CELL_DAT_VAL,w
 13652  0902  00F0               	movwf	?_get_CELL_DAT_VAL
 13653  0903  0873               	movf	??_get_CELL_DAT_VAL+1,w
 13654  0904  00F1               	movwf	?_get_CELL_DAT_VAL+1
 13655  0905  2933               	goto	l268
 13656  0906                     l3022:
 13657                           
 13658                           ;loadcell.c: 22:     if(p->cell_dat == 0x40){ return PORTBbits.RB6; }
 13659  0906  0A75               	incf	get_CELL_DAT_VAL@p,w
 13660  0907  0086               	movwf	6
 13661  0908  3001               	movlw	1	; select bank2/3
 13662  0909  0087               	movwf	7
 13663  090A  3040               	movlw	64
 13664  090B  0601               	xorwf	1,w
 13665  090C  1D03               	btfss	3,2
 13666  090D  290F               	goto	u3281
 13667  090E  2910               	goto	u3280
 13668  090F                     u3281:
 13669  090F  291C               	goto	l3028
 13670  0910                     u3280:
 13671  0910                     l3024:
 13672  0910  0020               	movlb	0	; select bank0
 13673  0911  0E0D               	swapf	13,w	;volatile
 13674  0912  0C89               	rrf	9,f
 13675  0913  0C89               	rrf	9,f
 13676  0914  3901               	andlw	1
 13677  0915  00F2               	movwf	??_get_CELL_DAT_VAL
 13678  0916  01F3               	clrf	??_get_CELL_DAT_VAL+1
 13679  0917  0872               	movf	??_get_CELL_DAT_VAL,w
 13680  0918  00F0               	movwf	?_get_CELL_DAT_VAL
 13681  0919  0873               	movf	??_get_CELL_DAT_VAL+1,w
 13682  091A  00F1               	movwf	?_get_CELL_DAT_VAL+1
 13683  091B  2933               	goto	l268
 13684  091C                     l3028:
 13685                           
 13686                           ;loadcell.c: 23:     if(p->cell_dat == 0x80){ return PORTBbits.RB7; }
 13687  091C  0A75               	incf	get_CELL_DAT_VAL@p,w
 13688  091D  0086               	movwf	6
 13689  091E  3001               	movlw	1	; select bank2/3
 13690  091F  0087               	movwf	7
 13691  0920  3080               	movlw	128
 13692  0921  0601               	xorwf	1,w
 13693  0922  1D03               	btfss	3,2
 13694  0923  2925               	goto	u3291
 13695  0924  2926               	goto	u3290
 13696  0925                     u3291:
 13697  0925  2931               	goto	l3034
 13698  0926                     u3290:
 13699  0926                     l3030:
 13700  0926  0020               	movlb	0	; select bank0
 13701  0927  0D0D               	rlf	13,w	;volatile
 13702  0928  0D0D               	rlf	13,w	;volatile
 13703  0929  3901               	andlw	1
 13704  092A  00F2               	movwf	??_get_CELL_DAT_VAL
 13705  092B  01F3               	clrf	??_get_CELL_DAT_VAL+1
 13706  092C  0872               	movf	??_get_CELL_DAT_VAL,w
 13707  092D  00F0               	movwf	?_get_CELL_DAT_VAL
 13708  092E  0873               	movf	??_get_CELL_DAT_VAL+1,w
 13709  092F  00F1               	movwf	?_get_CELL_DAT_VAL+1
 13710  0930  2933               	goto	l268
 13711  0931                     l3034:
 13712                           
 13713                           ;loadcell.c: 25:     return 0;
 13714  0931  01F0               	clrf	?_get_CELL_DAT_VAL
 13715  0932  01F1               	clrf	?_get_CELL_DAT_VAL+1
 13716  0933                     l268:
 13717  0933  0008               	return
 13718  0934                     __end_of_get_CELL_DAT_VAL:
 13719                           
 13720                           	psect	text62
 13721  12DC                     __ptext62:	
 13722 ;; *************** function ___lldiv *****************
 13723 ;; Defined at:
 13724 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\__lldiv.c"
 13725 ;; Parameters:    Size  Location     Type
 13726 ;;  divisor         4    0[COMMON] unsigned long 
 13727 ;;  dividend        4    4[COMMON] unsigned long 
 13728 ;; Auto vars:     Size  Location     Type
 13729 ;;  quotient        4    9[COMMON] unsigned long 
 13730 ;;  counter         1   13[COMMON] unsigned char 
 13731 ;; Return value:  Size  Location     Type
 13732 ;;                  4    0[COMMON] unsigned long 
 13733 ;; Registers used:
 13734 ;;		wreg, status,2, status,0
 13735 ;; Tracked objects:
 13736 ;;		On entry : 0/0
 13737 ;;		On exit  : 0/0
 13738 ;;		Unchanged: 0/0
 13739 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 13740 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13741 ;;      Locals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13742 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13743 ;;      Totals:        14       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13744 ;;Total ram usage:       14 bytes
 13745 ;; Hardware stack levels used: 1
 13746 ;; This function calls:
 13747 ;;		Nothing
 13748 ;; This function is called by:
 13749 ;;		_get_scale_val
 13750 ;; This function uses a non-reentrant model
 13751 ;;
 13752                           
 13753                           
 13754                           ;psect for function ___lldiv
 13755  12DC                     ___lldiv:
 13756  12DC                     l3054:	
 13757                           ;incstack = 0
 13758                           ; Regs used in ___lldiv: [wreg+status,2+status,0]
 13759                           
 13760  12DC  3000               	movlw	0
 13761  12DD  00FC               	movwf	___lldiv@quotient+3
 13762  12DE  3000               	movlw	0
 13763  12DF  00FB               	movwf	___lldiv@quotient+2
 13764  12E0  3000               	movlw	0
 13765  12E1  00FA               	movwf	___lldiv@quotient+1
 13766  12E2  3000               	movlw	0
 13767  12E3  00F9               	movwf	___lldiv@quotient
 13768  12E4  0873               	movf	___lldiv@divisor+3,w
 13769  12E5  0472               	iorwf	___lldiv@divisor+2,w
 13770  12E6  0471               	iorwf	___lldiv@divisor+1,w
 13771  12E7  0470               	iorwf	___lldiv@divisor,w
 13772  12E8  1903               	skipnz
 13773  12E9  2AEB               	goto	u3311
 13774  12EA  2AEC               	goto	u3310
 13775  12EB                     u3311:
 13776  12EB  2B2D               	goto	l3074
 13777  12EC                     u3310:
 13778  12EC                     l3056:
 13779  12EC  01FD               	clrf	___lldiv@counter
 13780  12ED  0AFD               	incf	___lldiv@counter,f
 13781  12EE  2AFA               	goto	l3060
 13782  12EF                     l3058:
 13783  12EF  3001               	movlw	1
 13784  12F0                     u3325:
 13785  12F0  35F0               	lslf	___lldiv@divisor,f
 13786  12F1  0DF1               	rlf	___lldiv@divisor+1,f
 13787  12F2  0DF2               	rlf	___lldiv@divisor+2,f
 13788  12F3  0DF3               	rlf	___lldiv@divisor+3,f
 13789  12F4  0B89               	decfsz	9,f
 13790  12F5  2AF0               	goto	u3325
 13791  12F6  3001               	movlw	1
 13792  12F7  00F8               	movwf	??___lldiv
 13793  12F8  0878               	movf	??___lldiv,w
 13794  12F9  07FD               	addwf	___lldiv@counter,f
 13795  12FA                     l3060:
 13796  12FA  1FF3               	btfss	___lldiv@divisor+3,7
 13797  12FB  2AFD               	goto	u3331
 13798  12FC  2AFE               	goto	u3330
 13799  12FD                     u3331:
 13800  12FD  2AEF               	goto	l3058
 13801  12FE                     u3330:
 13802  12FE                     l3062:
 13803  12FE  3001               	movlw	1
 13804  12FF                     u3345:
 13805  12FF  35F9               	lslf	___lldiv@quotient,f
 13806  1300  0DFA               	rlf	___lldiv@quotient+1,f
 13807  1301  0DFB               	rlf	___lldiv@quotient+2,f
 13808  1302  0DFC               	rlf	___lldiv@quotient+3,f
 13809  1303  0B89               	decfsz	9,f
 13810  1304  2AFF               	goto	u3345
 13811  1305                     l3064:
 13812  1305  0873               	movf	___lldiv@divisor+3,w
 13813  1306  0277               	subwf	___lldiv@dividend+3,w
 13814  1307  1D03               	skipz
 13815  1308  2B13               	goto	u3355
 13816  1309  0872               	movf	___lldiv@divisor+2,w
 13817  130A  0276               	subwf	___lldiv@dividend+2,w
 13818  130B  1D03               	skipz
 13819  130C  2B13               	goto	u3355
 13820  130D  0871               	movf	___lldiv@divisor+1,w
 13821  130E  0275               	subwf	___lldiv@dividend+1,w
 13822  130F  1D03               	skipz
 13823  1310  2B13               	goto	u3355
 13824  1311  0870               	movf	___lldiv@divisor,w
 13825  1312  0274               	subwf	___lldiv@dividend,w
 13826  1313                     u3355:
 13827  1313  1C03               	skipc
 13828  1314  2B16               	goto	u3351
 13829  1315  2B17               	goto	u3350
 13830  1316                     u3351:
 13831  1316  2B20               	goto	l3070
 13832  1317                     u3350:
 13833  1317                     l3066:
 13834  1317  0870               	movf	___lldiv@divisor,w
 13835  1318  02F4               	subwf	___lldiv@dividend,f
 13836  1319  0871               	movf	___lldiv@divisor+1,w
 13837  131A  3BF5               	subwfb	___lldiv@dividend+1,f
 13838  131B  0872               	movf	___lldiv@divisor+2,w
 13839  131C  3BF6               	subwfb	___lldiv@dividend+2,f
 13840  131D  0873               	movf	___lldiv@divisor+3,w
 13841  131E  3BF7               	subwfb	___lldiv@dividend+3,f
 13842  131F                     l3068:
 13843  131F  1479               	bsf	___lldiv@quotient,0
 13844  1320                     l3070:
 13845  1320  3001               	movlw	1
 13846  1321                     u3365:
 13847  1321  36F3               	lsrf	___lldiv@divisor+3,f
 13848  1322  0CF2               	rrf	___lldiv@divisor+2,f
 13849  1323  0CF1               	rrf	___lldiv@divisor+1,f
 13850  1324  0CF0               	rrf	___lldiv@divisor,f
 13851  1325  0B89               	decfsz	9,f
 13852  1326  2B21               	goto	u3365
 13853  1327                     l3072:
 13854  1327  3001               	movlw	1
 13855  1328  02FD               	subwf	___lldiv@counter,f
 13856  1329  1D03               	btfss	3,2
 13857  132A  2B2C               	goto	u3371
 13858  132B  2B2D               	goto	u3370
 13859  132C                     u3371:
 13860  132C  2AFE               	goto	l3062
 13861  132D                     u3370:
 13862  132D                     l3074:
 13863  132D  087C               	movf	___lldiv@quotient+3,w
 13864  132E  00F3               	movwf	?___lldiv+3
 13865  132F  087B               	movf	___lldiv@quotient+2,w
 13866  1330  00F2               	movwf	?___lldiv+2
 13867  1331  087A               	movf	___lldiv@quotient+1,w
 13868  1332  00F1               	movwf	?___lldiv+1
 13869  1333  0879               	movf	___lldiv@quotient,w
 13870  1334  00F0               	movwf	?___lldiv
 13871  1335                     l570:
 13872  1335  0008               	return
 13873  1336                     __end_of___lldiv:
 13874                           
 13875                           	psect	text63
 13876  1E3E                     __ptext63:	
 13877 ;; *************** function _SYSTEM_Initialize *****************
 13878 ;; Defined at:
 13879 ;;		line 50 in file "mcc_generated_files/mcc.c"
 13880 ;; Parameters:    Size  Location     Type
 13881 ;;		None
 13882 ;; Auto vars:     Size  Location     Type
 13883 ;;		None
 13884 ;; Return value:  Size  Location     Type
 13885 ;;                  1    wreg      void 
 13886 ;; Registers used:
 13887 ;;		wreg, status,2, status,0, pclath, cstack
 13888 ;; Tracked objects:
 13889 ;;		On entry : 0/0
 13890 ;;		On exit  : 0/0
 13891 ;;		Unchanged: 0/0
 13892 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 13893 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13894 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13895 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13896 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13897 ;;Total ram usage:        0 bytes
 13898 ;; Hardware stack levels used: 1
 13899 ;; Hardware stack levels required when called: 1
 13900 ;; This function calls:
 13901 ;;		_OSCILLATOR_Initialize
 13902 ;;		_PIN_MANAGER_Initialize
 13903 ;;		_WDT_Initialize
 13904 ;; This function is called by:
 13905 ;;		_main
 13906 ;; This function uses a non-reentrant model
 13907 ;;
 13908                           
 13909                           
 13910                           ;psect for function _SYSTEM_Initialize
 13911  1E3E                     _SYSTEM_Initialize:
 13912  1E3E                     l3866:	
 13913                           ;incstack = 0
 13914                           ; Regs used in _SYSTEM_Initialize: [wreg+status,2+status,0+pclath+cstack]
 13915                           
 13916                           
 13917                           ;mcc_generated_files/mcc.c: 53:     PIN_MANAGER_Initialize();
 13918  1E3E  319F  27A7  319E   	fcall	_PIN_MANAGER_Initialize
 13919                           
 13920                           ;mcc_generated_files/mcc.c: 54:     OSCILLATOR_Initialize();
 13921  1E41  319E  2620  319E   	fcall	_OSCILLATOR_Initialize
 13922                           
 13923                           ;mcc_generated_files/mcc.c: 55:     WDT_Initialize();
 13924  1E44  3188  2001  319E   	fcall	_WDT_Initialize
 13925  1E47                     l51:
 13926  1E47  0008               	return
 13927  1E48                     __end_of_SYSTEM_Initialize:
 13928                           
 13929                           	psect	text64
 13930  0801                     __ptext64:	
 13931 ;; *************** function _WDT_Initialize *****************
 13932 ;; Defined at:
 13933 ;;		line 68 in file "mcc_generated_files/mcc.c"
 13934 ;; Parameters:    Size  Location     Type
 13935 ;;		None
 13936 ;; Auto vars:     Size  Location     Type
 13937 ;;		None
 13938 ;; Return value:  Size  Location     Type
 13939 ;;                  1    wreg      void 
 13940 ;; Registers used:
 13941 ;;		wreg
 13942 ;; Tracked objects:
 13943 ;;		On entry : 0/0
 13944 ;;		On exit  : 0/0
 13945 ;;		Unchanged: 0/0
 13946 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 13947 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13948 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13949 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13950 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13951 ;;Total ram usage:        0 bytes
 13952 ;; Hardware stack levels used: 1
 13953 ;; This function calls:
 13954 ;;		Nothing
 13955 ;; This function is called by:
 13956 ;;		_SYSTEM_Initialize
 13957 ;; This function uses a non-reentrant model
 13958 ;;
 13959                           
 13960                           
 13961                           ;psect for function _WDT_Initialize
 13962  0801                     _WDT_Initialize:
 13963  0801                     l3766:	
 13964                           ;incstack = 0
 13965                           ; Regs used in _WDT_Initialize: [wreg]
 13966                           
 13967                           
 13968                           ;mcc_generated_files/mcc.c: 71:     WDTCON = 0x16;
 13969  0801  3016               	movlw	22
 13970  0802  0021               	movlb	1	; select bank1
 13971  0803  0097               	movwf	23	;volatile
 13972  0804                     l57:
 13973  0804  0008               	return
 13974  0805                     __end_of_WDT_Initialize:
 13975                           
 13976                           	psect	text65
 13977  1FA7                     __ptext65:	
 13978 ;; *************** function _PIN_MANAGER_Initialize *****************
 13979 ;; Defined at:
 13980 ;;		line 55 in file "mcc_generated_files/pin_manager.c"
 13981 ;; Parameters:    Size  Location     Type
 13982 ;;		None
 13983 ;; Auto vars:     Size  Location     Type
 13984 ;;		None
 13985 ;; Return value:  Size  Location     Type
 13986 ;;                  1    wreg      void 
 13987 ;; Registers used:
 13988 ;;		wreg, status,2
 13989 ;; Tracked objects:
 13990 ;;		On entry : 0/0
 13991 ;;		On exit  : 0/0
 13992 ;;		Unchanged: 0/0
 13993 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 13994 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13995 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13996 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13997 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13998 ;;Total ram usage:        0 bytes
 13999 ;; Hardware stack levels used: 1
 14000 ;; This function calls:
 14001 ;;		Nothing
 14002 ;; This function is called by:
 14003 ;;		_SYSTEM_Initialize
 14004 ;; This function uses a non-reentrant model
 14005 ;;
 14006                           
 14007                           
 14008                           ;psect for function _PIN_MANAGER_Initialize
 14009  1FA7                     _PIN_MANAGER_Initialize:
 14010  1FA7                     l3744:	
 14011                           ;incstack = 0
 14012                           ; Regs used in _PIN_MANAGER_Initialize: [wreg+status,2]
 14013                           
 14014                           
 14015                           ;mcc_generated_files/pin_manager.c: 60:     LATE = 0x00;
 14016  1FA7  0022               	movlb	2	; select bank2
 14017  1FA8  0190               	clrf	16	;volatile
 14018                           
 14019                           ;mcc_generated_files/pin_manager.c: 61:     LATA = 0x00;
 14020  1FA9  018C               	clrf	12	;volatile
 14021                           
 14022                           ;mcc_generated_files/pin_manager.c: 62:     LATB = 0x00;
 14023  1FAA  018D               	clrf	13	;volatile
 14024                           
 14025                           ;mcc_generated_files/pin_manager.c: 63:     LATC = 0x00;
 14026  1FAB  018E               	clrf	14	;volatile
 14027  1FAC                     l3746:
 14028                           
 14029                           ;mcc_generated_files/pin_manager.c: 68:     TRISE = 0x08;
 14030  1FAC  3008               	movlw	8
 14031  1FAD  0021               	movlb	1	; select bank1
 14032  1FAE  0090               	movwf	16	;volatile
 14033  1FAF                     l3748:
 14034                           
 14035                           ;mcc_generated_files/pin_manager.c: 69:     TRISA = 0xFF;
 14036  1FAF  30FF               	movlw	255
 14037  1FB0  008C               	movwf	12	;volatile
 14038  1FB1                     l3750:
 14039                           
 14040                           ;mcc_generated_files/pin_manager.c: 70:     TRISB = 0xFF;
 14041  1FB1  30FF               	movlw	255
 14042  1FB2  008D               	movwf	13	;volatile
 14043  1FB3                     l3752:
 14044                           
 14045                           ;mcc_generated_files/pin_manager.c: 71:     TRISC = 0xFF;
 14046  1FB3  30FF               	movlw	255
 14047  1FB4  008E               	movwf	14	;volatile
 14048  1FB5                     l3754:
 14049                           
 14050                           ;mcc_generated_files/pin_manager.c: 76:     ANSELB = 0xFE;
 14051  1FB5  30FE               	movlw	254
 14052  1FB6  0023               	movlb	3	; select bank3
 14053  1FB7  008D               	movwf	13	;volatile
 14054  1FB8                     l3756:
 14055                           
 14056                           ;mcc_generated_files/pin_manager.c: 77:     ANSELA = 0x1F;
 14057  1FB8  301F               	movlw	31
 14058  1FB9  008C               	movwf	12	;volatile
 14059                           
 14060                           ;mcc_generated_files/pin_manager.c: 82:     WPUE = 0x00;
 14061  1FBA  0024               	movlb	4	; select bank4
 14062  1FBB  0190               	clrf	16	;volatile
 14063                           
 14064                           ;mcc_generated_files/pin_manager.c: 83:     WPUB = 0x00;
 14065  1FBC  018D               	clrf	13	;volatile
 14066  1FBD                     l3758:
 14067                           
 14068                           ;mcc_generated_files/pin_manager.c: 84:     OPTION_REGbits.nWPUEN = 1;
 14069  1FBD  0021               	movlb	1	; select bank1
 14070  1FBE  1795               	bsf	21,7	;volatile
 14071                           
 14072                           ;mcc_generated_files/pin_manager.c: 90:     APFCON = 0x00;
 14073  1FBF  0022               	movlb	2	; select bank2
 14074  1FC0  019D               	clrf	29	;volatile
 14075  1FC1                     l31:
 14076  1FC1  0008               	return
 14077  1FC2                     __end_of_PIN_MANAGER_Initialize:
 14078                           
 14079                           	psect	text66
 14080  1E20                     __ptext66:	
 14081 ;; *************** function _OSCILLATOR_Initialize *****************
 14082 ;; Defined at:
 14083 ;;		line 58 in file "mcc_generated_files/mcc.c"
 14084 ;; Parameters:    Size  Location     Type
 14085 ;;		None
 14086 ;; Auto vars:     Size  Location     Type
 14087 ;;		None
 14088 ;; Return value:  Size  Location     Type
 14089 ;;                  1    wreg      void 
 14090 ;; Registers used:
 14091 ;;		wreg, status,2
 14092 ;; Tracked objects:
 14093 ;;		On entry : 0/0
 14094 ;;		On exit  : 0/0
 14095 ;;		Unchanged: 0/0
 14096 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 14097 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14098 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14099 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14100 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14101 ;;Total ram usage:        0 bytes
 14102 ;; Hardware stack levels used: 1
 14103 ;; This function calls:
 14104 ;;		Nothing
 14105 ;; This function is called by:
 14106 ;;		_SYSTEM_Initialize
 14107 ;; This function uses a non-reentrant model
 14108 ;;
 14109                           
 14110                           
 14111                           ;psect for function _OSCILLATOR_Initialize
 14112  1E20                     _OSCILLATOR_Initialize:
 14113  1E20                     l3760:	
 14114                           ;incstack = 0
 14115                           ; Regs used in _OSCILLATOR_Initialize: [wreg+status,2]
 14116                           
 14117                           
 14118                           ;mcc_generated_files/mcc.c: 61:     OSCCON = 0x70;
 14119  1E20  3070               	movlw	112
 14120  1E21  0021               	movlb	1	; select bank1
 14121  1E22  0099               	movwf	25	;volatile
 14122  1E23                     l3762:
 14123                           
 14124                           ;mcc_generated_files/mcc.c: 63:     OSCTUNE = 0x00;
 14125  1E23  0198               	clrf	24	;volatile
 14126  1E24                     l3764:
 14127                           
 14128                           ;mcc_generated_files/mcc.c: 65:     BORCON = 0x00;
 14129  1E24  0022               	movlb	2	; select bank2
 14130  1E25  0196               	clrf	22	;volatile
 14131  1E26                     l54:
 14132  1E26  0008               	return
 14133  1E27                     __end_of_OSCILLATOR_Initialize:
 14134  007E                     btemp	set	126	;btemp
 14135  007E                     wtemp0	set	126
 14136                           
 14137                           	psect	config
 14138                           
 14139                           ;Config register CONFIG1 @ 0x8007
 14140                           ;	Oscillator Selection
 14141                           ;	FOSC = INTOSC, INTOSC oscillator: I/O function on CLKIN pin
 14142                           ;	Watchdog Timer Enable
 14143                           ;	WDTE = OFF, WDT disabled
 14144                           ;	Power-up Timer Enable
 14145                           ;	PWRTE = OFF, PWRT disabled
 14146                           ;	MCLR Pin Function Select
 14147                           ;	MCLRE = ON, MCLR/VPP pin function is MCLR
 14148                           ;	Flash Program Memory Code Protection
 14149                           ;	CP = OFF, Program memory code protection is disabled
 14150                           ;	Data Memory Code Protection
 14151                           ;	CPD = OFF, Data memory code protection is disabled
 14152                           ;	Brown-out Reset Enable
 14153                           ;	BOREN = ON, Brown-out Reset enabled
 14154                           ;	Clock Out Enable
 14155                           ;	CLKOUTEN = OFF, CLKOUT function is disabled. I/O or oscillator function on the CLKOUT 
      +                          pin
 14156                           ;	Internal/External Switchover
 14157                           ;	IESO = ON, Internal/External Switchover mode is enabled
 14158                           ;	Fail-Safe Clock Monitor Enable
 14159                           ;	FCMEN = ON, Fail-Safe Clock Monitor is enabled
 14160  8007                     	org	32775
 14161  8007  3FE4               	dw	16356
 14162                           
 14163                           ;Config register CONFIG2 @ 0x8008
 14164                           ;	Flash Memory Self-Write Protection
 14165                           ;	WRT = OFF, Write protection off
 14166                           ;	Voltage Regulator Capacitor Enable
 14167                           ;	VCAPEN = OFF, All VCAP pin functionality is disabled
 14168                           ;	PLL Enable
 14169                           ;	PLLEN = OFF, 4x PLL disabled
 14170                           ;	Stack Overflow/Underflow Reset Enable
 14171                           ;	STVREN = ON, Stack Overflow or Underflow will cause a Reset
 14172                           ;	Brown-out Reset Voltage Selection
 14173                           ;	BORV = LO, Brown-out Reset Voltage (Vbor), low trip point selected.
 14174                           ;	Low-Voltage Programming Enable
 14175                           ;	LVP = OFF, High-voltage on MCLR/VPP must be used for programming
 14176  8008                     	org	32776
 14177  8008  1EFF               	dw	7935

Data Sizes:
    Strings     76
    Constant    0
    Data        36
    BSS         53
    Persistent  32
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14     14      14
    BANK0            80     80      80
    BANK1            80     56      77
    BANK2            80     26      62
    BANK3            80      0      32
    BANK4            80      0       0
    BANK5            80      0       0
    BANK6            80      0       0
    BANK7            80      0       0
    BANK8            80      0       0
    BANK9            80      0       0
    BANK10           80      0       0
    BANK11           80      0       0
    BANK12           48      0       0

Pointer List with Targets:

    encode_digit@p	PTR struct . size(1) Largest target is 2
		 -> NULL(NULL[0]), main@tm1637(BANK2[2]), 

    set_brigthness@p	PTR struct . size(1) Largest target is 2
		 -> NULL(NULL[0]), main@tm1637(BANK2[2]), 

    strncmp@_r	PTR const unsigned char  size(2) Largest target is 3
		 -> STR_19(CODE[3]), STR_14(CODE[3]), STR_10(CODE[3]), 

    strncmp@r	PTR const unsigned char  size(2) Largest target is 3
		 -> STR_19(CODE[3]), STR_14(CODE[3]), STR_10(CODE[3]), 

    strncmp@_l	PTR const unsigned char  size(2) Largest target is 14
		 -> STR_7(CODE[14]), STR_6(CODE[6]), STR_5(CODE[11]), STR_4(CODE[8]), 

    strncmp@l	PTR const unsigned char  size(2) Largest target is 14
		 -> STR_7(CODE[14]), STR_6(CODE[6]), STR_5(CODE[11]), STR_4(CODE[8]), 

    strlen@s	PTR const unsigned char  size(1) Largest target is 32
		 -> dbuf(BANK3[32]), 

    strlen@a	PTR const unsigned char  size(1) Largest target is 32
		 -> dbuf(BANK3[32]), 

    fputs@s	PTR const unsigned char  size(1) Largest target is 32
		 -> dbuf(BANK3[32]), 

    fputs@fp	PTR struct _IO_FILE size(1) Largest target is 6
		 -> sprintf@f(BANK1[5]), 

    fputc@fp.buffer	PTR unsigned char  size(1) Largest target is 16
		 -> set_max_gram@valstr(BANK1[16]), print_gram@row2(BANK1[16]), print_gram@row1(BANK1[16]), initialize@valstr(BANK1[16]), 

    fputc@fp	PTR struct _IO_FILE size(1) Largest target is 6
		 -> sprintf@f(BANK1[5]), 

    vfprintf@ap	PTR PTR void  size(1) Largest target is 1
		 -> sprintf@ap(BANK1[1]), 

    vfprintf@fp	PTR struct _IO_FILE size(1) Largest target is 6
		 -> sprintf@f(BANK1[5]), 

    vfprintf@fmt	PTR const unsigned char  size(2) Largest target is 14
		 -> STR_7(CODE[14]), STR_6(CODE[6]), STR_5(CODE[11]), STR_4(CODE[8]), 

    vfprintf@cfmt	PTR unsigned char  size(2) Largest target is 14
		 -> STR_7(CODE[14]), STR_6(CODE[6]), STR_5(CODE[11]), STR_4(CODE[8]), 

    vfpfcnvrt@fp	PTR struct _IO_FILE size(1) Largest target is 6
		 -> sprintf@f(BANK1[5]), 

    vfpfcnvrt@ap	PTR PTR void  size(1) Largest target is 1
		 -> sprintf@ap(BANK1[1]), 

    vfpfcnvrt@fmt	PTR PTR unsigned char  size(1) Largest target is 2
		 -> vfprintf@cfmt(BANK1[2]), 

    utoa@fp	PTR struct _IO_FILE size(1) Largest target is 6
		 -> sprintf@f(BANK1[5]), 

    dtoa@fp	PTR struct _IO_FILE size(1) Largest target is 6
		 -> sprintf@f(BANK1[5]), 

    pad@fp	PTR struct _IO_FILE size(1) Largest target is 6
		 -> sprintf@f(BANK1[5]), 

    pad@buf	PTR unsigned char  size(1) Largest target is 32
		 -> dbuf(BANK3[32]), 

    sprintf@fmt	PTR const unsigned char  size(2) Largest target is 14
		 -> STR_7(CODE[14]), STR_6(CODE[6]), STR_5(CODE[11]), STR_4(CODE[8]), 

    sprintf@s	PTR unsigned char  size(1) Largest target is 16
		 -> set_max_gram@valstr(BANK1[16]), print_gram@row2(BANK1[16]), print_gram@row1(BANK1[16]), initialize@valstr(BANK1[16]), 

    sprintf@ap	PTR void [1] size(1) Largest target is 2
		 -> ?_sprintf(BANK1[2]), 

    S1184_IO_FILE$buffer	PTR unsigned char  size(1) Largest target is 16
		 -> set_max_gram@valstr(BANK1[16]), print_gram@row2(BANK1[16]), print_gram@row1(BANK1[16]), initialize@valstr(BANK1[16]), 

    f.buffer	PTR unsigned char  size(1) Largest target is 16
		 -> set_max_gram@valstr(BANK1[16]), print_gram@row2(BANK1[16]), print_gram@row1(BANK1[16]), initialize@valstr(BANK1[16]), 

    set_max_gram@p.tm1637	PTR struct . size(1) Largest target is 2
		 -> NULL(NULL[0]), main@tm1637(BANK2[2]), 

    set_max_gram@p.lcd	PTR struct . size(1) Largest target is 4
		 -> NULL(NULL[0]), main@lcd(BANK2[4]), 

    set_max_gram@p.loadcell	PTR struct . size(1) Largest target is 12
		 -> NULL(NULL[0]), main@loadcell(BANK2[12]), 

    set_max_gram@p	PTR struct . size(1) Largest target is 11
		 -> main@drink(BANK2[8]), 

    print_gram@p.tm1637	PTR struct . size(1) Largest target is 2
		 -> NULL(NULL[0]), main@tm1637(BANK2[2]), 

    print_gram@p.lcd	PTR struct . size(1) Largest target is 4
		 -> NULL(NULL[0]), main@lcd(BANK2[4]), 

    print_gram@p.loadcell	PTR struct . size(1) Largest target is 12
		 -> NULL(NULL[0]), main@loadcell(BANK2[12]), 

    print_gram@p	PTR struct . size(1) Largest target is 11
		 -> main@drink(BANK2[8]), 

    calc_percentage@p.tm1637	PTR struct . size(1) Largest target is 2
		 -> NULL(NULL[0]), main@tm1637(BANK2[2]), 

    calc_percentage@p.lcd	PTR struct . size(1) Largest target is 4
		 -> NULL(NULL[0]), main@lcd(BANK2[4]), 

    calc_percentage@p.loadcell	PTR struct . size(1) Largest target is 12
		 -> NULL(NULL[0]), main@loadcell(BANK2[12]), 

    calc_percentage@p	PTR struct . size(1) Largest target is 11
		 -> main@drink(BANK2[8]), 

    initialize@p.tm1637	PTR struct . size(1) Largest target is 2
		 -> NULL(NULL[0]), main@tm1637(BANK2[2]), 

    initialize@p.lcd	PTR struct . size(1) Largest target is 4
		 -> NULL(NULL[0]), main@lcd(BANK2[4]), 

    initialize@p.loadcell	PTR struct . size(1) Largest target is 12
		 -> NULL(NULL[0]), main@loadcell(BANK2[12]), 

    initialize@p	PTR struct . size(1) Largest target is 11
		 -> main@drink(BANK2[8]), 

    write4bits@p	PTR struct . size(1) Largest target is 4
		 -> NULL(NULL[0]), main@lcd(BANK2[4]), 

    command@p	PTR struct . size(1) Largest target is 4
		 -> NULL(NULL[0]), main@lcd(BANK2[4]), 

    lcd_print_with@str	PTR unsigned char  size(2) Largest target is 16
		 -> print_gram@row2(BANK1[16]), print_gram@row1(BANK1[16]), STR_3(CODE[15]), STR_2(CODE[11]), 

    lcd_print_with@p	PTR struct . size(1) Largest target is 4
		 -> NULL(NULL[0]), main@lcd(BANK2[4]), 

    lcd_print@p	PTR struct . size(1) Largest target is 4
		 -> NULL(NULL[0]), main@lcd(BANK2[4]), 

    lcd_print@str	PTR unsigned char  size(2) Largest target is 16
		 -> set_max_gram@valstr(BANK1[16]), print_gram@row2(BANK1[16]), print_gram@row1(BANK1[16]), initialize@valstr(BANK1[16]), 
		 -> STR_3(CODE[15]), STR_2(CODE[11]), STR_1(CODE[2]), 

    lcd_set_cursor@p	PTR struct . size(1) Largest target is 4
		 -> NULL(NULL[0]), main@lcd(BANK2[4]), 

    lcd_clear@p	PTR struct . size(1) Largest target is 4
		 -> NULL(NULL[0]), main@lcd(BANK2[4]), 

    lcd_backlight@p	PTR struct . size(1) Largest target is 4
		 -> NULL(NULL[0]), main@lcd(BANK2[4]), 

    lcd_init@p	PTR struct . size(1) Largest target is 4
		 -> NULL(NULL[0]), main@lcd(BANK2[4]), 

    lcd_cmd@p	PTR struct . size(1) Largest target is 4
		 -> NULL(NULL[0]), main@lcd(BANK2[4]), 

    scale_convert_gram@p	PTR struct . size(1) Largest target is 12
		 -> NULL(NULL[0]), main@loadcell(BANK2[12]), 

    get_scale_val@p	PTR struct . size(1) Largest target is 12
		 -> NULL(NULL[0]), main@loadcell(BANK2[12]), 

    get_CELL_DAT_VAL@p	PTR struct . size(1) Largest target is 12
		 -> NULL(NULL[0]), main@loadcell(BANK2[12]), 

    set_CELL_CLK_HIGH@p	PTR struct . size(1) Largest target is 12
		 -> NULL(NULL[0]), main@loadcell(BANK2[12]), 

    set_CELL_CLK_LOW@p	PTR struct . size(1) Largest target is 12
		 -> NULL(NULL[0]), main@loadcell(BANK2[12]), 

    print_digit@p	PTR struct . size(1) Largest target is 2
		 -> NULL(NULL[0]), main@tm1637(BANK2[2]), 

    initialize_digit@p	PTR struct . size(1) Largest target is 2
		 -> NULL(NULL[0]), main@tm1637(BANK2[2]), 

    set_segments@segments	PTR const unsigned char  size(1) Largest target is 4
		 -> print_digit@data(BANK0[4]), clear_segment@data(COMMON[4]), 

    set_segments@p	PTR struct . size(1) Largest target is 2
		 -> NULL(NULL[0]), main@tm1637(BANK2[2]), 

    write_byte@p	PTR struct . size(1) Largest target is 2
		 -> NULL(NULL[0]), main@tm1637(BANK2[2]), 

    get_DIO_PIN_value@p	PTR struct . size(1) Largest target is 2
		 -> NULL(NULL[0]), main@tm1637(BANK2[2]), 

    stop_segment@p	PTR struct . size(1) Largest target is 2
		 -> NULL(NULL[0]), main@tm1637(BANK2[2]), 

    start_segment@p	PTR struct . size(1) Largest target is 2
		 -> NULL(NULL[0]), main@tm1637(BANK2[2]), 

    DIO_SET_LOW@p	PTR struct . size(1) Largest target is 2
		 -> NULL(NULL[0]), main@tm1637(BANK2[2]), 

    DIO_SET_HIGH@p	PTR struct . size(1) Largest target is 2
		 -> NULL(NULL[0]), main@tm1637(BANK2[2]), 

    DIO_SET_INPUT@p	PTR struct . size(1) Largest target is 2
		 -> NULL(NULL[0]), main@tm1637(BANK2[2]), 

    DIO_SET_OUTPUT@p	PTR struct . size(1) Largest target is 2
		 -> NULL(NULL[0]), main@tm1637(BANK2[2]), 

    CLK_SET_LOW@p	PTR struct . size(1) Largest target is 2
		 -> NULL(NULL[0]), main@tm1637(BANK2[2]), 

    CLK_SET_HIGH@p	PTR struct . size(1) Largest target is 2
		 -> NULL(NULL[0]), main@tm1637(BANK2[2]), 

    CLK_SET_OUTPUT@p	PTR struct . size(1) Largest target is 2
		 -> NULL(NULL[0]), main@tm1637(BANK2[2]), 

    drink.tm1637	PTR struct . size(1) Largest target is 2
		 -> NULL(NULL[0]), main@tm1637(BANK2[2]), 

    drink.lcd	PTR struct . size(1) Largest target is 4
		 -> NULL(NULL[0]), main@lcd(BANK2[4]), 

    drink.loadcell	PTR struct . size(1) Largest target is 12
		 -> NULL(NULL[0]), main@loadcell(BANK2[12]), 

    S225$tm1637	PTR struct . size(1) Largest target is 2
		 -> NULL(NULL[0]), main@tm1637(BANK2[2]), 

    F2855.tm1637	PTR struct . size(1) Largest target is 2
		 -> NULL(NULL[0]), main@tm1637(BANK2[2]), 

    S225$lcd	PTR struct . size(1) Largest target is 4
		 -> NULL(NULL[0]), main@lcd(BANK2[4]), 

    F2855.lcd	PTR struct . size(1) Largest target is 4
		 -> NULL(NULL[0]), main@lcd(BANK2[4]), 

    S225$loadcell	PTR struct . size(1) Largest target is 12
		 -> NULL(NULL[0]), main@loadcell(BANK2[12]), 

    F2855.loadcell	PTR struct . size(1) Largest target is 12
		 -> NULL(NULL[0]), main@loadcell(BANK2[12]), 


Critical Paths under _main in COMMON

    _calc_percentage->___xxtofl
    _scale_convert_gram->___xxtofl
    ___fltol->___fldiv
    ___flmul->___fldiv
    _print_gram->_lcd_print_with
    _print_gram->_print_digit
    _initialize->_lcd_print_with
    _initialize->_print_digit
    _vfpfcnvrt->_utoa
    _utoa->_pad
    _dtoa->_pad
    _pad->_fputs
    _fputs->_fputc
    _abs->___aomod
    _lcd_print_with->_lcd_print
    _lcd_print_with->_lcd_set_cursor
    _lcd_init->_write4bits
    _write4bits->_lcd_cmd
    _lcd_clear->_lcd_print
    _lcd_clear->_lcd_set_cursor
    _lcd_set_cursor->_command
    _lcd_print->_command
    _command->_lcd_cmd
    _lcd_backlight->_lcd_cmd
    _lcd_cmd->_i2c_write
    _initialize_digit->_print_digit
    _print_digit->_set_segments
    _set_segments->_write_byte
    _write_byte->_CLK_SET_HIGH
    _write_byte->_CLK_SET_LOW
    _write_byte->_CLK_SET_OUTPUT
    _write_byte->_DIO_SET_HIGH
    _write_byte->_DIO_SET_INPUT
    _write_byte->_DIO_SET_LOW
    _write_byte->_DIO_SET_OUTPUT
    _write_byte->_get_DIO_PIN_value
    _stop_segment->_CLK_SET_HIGH
    _stop_segment->_CLK_SET_LOW
    _stop_segment->_CLK_SET_OUTPUT
    _stop_segment->_DIO_SET_HIGH
    _stop_segment->_DIO_SET_LOW
    _stop_segment->_DIO_SET_OUTPUT
    _start_segment->_CLK_SET_HIGH
    _start_segment->_CLK_SET_LOW
    _start_segment->_CLK_SET_OUTPUT
    _start_segment->_DIO_SET_HIGH
    _start_segment->_DIO_SET_LOW
    _start_segment->_DIO_SET_OUTPUT
    _encode_digit->___awdiv
    _get_scale_val->___lldiv

Critical Paths under _main in BANK0

    _calc_percentage->_scale_convert_gram
    _scale_convert_gram->___fltol
    ___fltol->___flmul
    ___flmul->___fldiv
    _sprintf->_vfprintf
    _vfprintf->_vfpfcnvrt
    _vfpfcnvrt->_dtoa
    _utoa->___lodiv
    _utoa->___lomod
    _dtoa->___aodiv
    _dtoa->___aomod
    _pad->_fputs
    _abs->___aomod
    _lcd_print_with->_lcd_set_cursor
    _lcd_clear->_lcd_set_cursor
    _initialize_digit->_print_digit
    _print_digit->_set_segments

Critical Paths under _main in BANK1

    _main->_print_gram
    _set_max_gram->_sprintf
    _print_gram->_sprintf
    _initialize->_sprintf
    _sprintf->_vfprintf

Critical Paths under _main in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _main in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                28    28      0  119145
                                             54 BANK1      2     2      0
                                              0 BANK2     26    26      0
                  _SYSTEM_Initialize
                    _calc_percentage
                         _initialize
                         _print_gram
                       _set_max_gram
 ---------------------------------------------------------------------------------
 (1) _set_max_gram                                        21    17      4   29656
                                             19 BANK1     21    17      4
                    _calc_percentage
                          _lcd_clear
                          _lcd_print
                            _sprintf
 ---------------------------------------------------------------------------------
 (2) _calc_percentage                                     13    13      0    9164
                                             63 BANK0     13    13      0
                            ___fldiv
                            ___flmul
                            ___fltol
                           ___xxtofl
                      _get_scale_val
                 _scale_convert_gram
 ---------------------------------------------------------------------------------
 (3) _scale_convert_gram                                  13    13      0    2567
                                             50 BANK0     13    13      0
                            ___fldiv
                            ___fltol
                           ___xxtofl
 ---------------------------------------------------------------------------------
 (4) ___xxtofl                                            14    10      4     550
                                              0 COMMON    14    10      4
 ---------------------------------------------------------------------------------
 (4) ___fltol                                             11     7      4     381
                                             39 BANK0     11     7      4
                            ___fldiv (ARG)
                            ___flmul (ARG)
 ---------------------------------------------------------------------------------
 (4) ___fldiv                                             26    18      8    1425
                                              0 COMMON    13     5      8
                                              0 BANK0     13    13      0
 ---------------------------------------------------------------------------------
 (3) ___flmul                                             26    18      8    2417
                                             13 BANK0     26    18      8
                          __Umul8_16
                            ___fldiv (ARG)
 ---------------------------------------------------------------------------------
 (4) __Umul8_16                                            9     7      2     799
                                              0 COMMON     9     7      2
 ---------------------------------------------------------------------------------
 (1) _print_gram                                          35    35      0   31699
                                             19 BANK1     35    35      0
                          _lcd_clear
                     _lcd_print_with
                        _print_digit
                            _sprintf
 ---------------------------------------------------------------------------------
 (1) _initialize                                          18    18      0   48212
                                             19 BANK1     18    18      0
                      _get_scale_val
                   _initialize_digit
                      _lcd_backlight
                          _lcd_clear
                           _lcd_init
                          _lcd_print
                     _lcd_print_with
                        _print_digit
                            _sprintf
 ---------------------------------------------------------------------------------
 (2) _sprintf                                             16    10      6   11851
                                              5 BANK1     14     8      6
                           _vfprintf
 ---------------------------------------------------------------------------------
 (3) _vfprintf                                             8     5      3   11210
                                             77 BANK0      3     0      3
                                              0 BANK1      5     5      0
                          _vfpfcnvrt
 ---------------------------------------------------------------------------------
 (4) _vfpfcnvrt                                           47    45      2   10889
                                             46 BANK0     31    29      2
                               _dtoa
                              _fputc
                            _strncmp
                               _utoa
 ---------------------------------------------------------------------------------
 (5) _utoa                                                24    16      8    3838
                                             13 COMMON     1     1      0
                                             16 BANK0     23    15      8
                            ___lodiv
                            ___lomod
                                _pad
 ---------------------------------------------------------------------------------
 (6) ___lomod                                             18     2     16     311
                                              0 COMMON     2     2      0
                                              0 BANK0     16     0     16
 ---------------------------------------------------------------------------------
 (6) ___lodiv                                             26    10     16     314
                                              0 COMMON    10    10      0
                                              0 BANK0     16     0     16
 ---------------------------------------------------------------------------------
 (5) _strncmp                                             11     5      6     909
                                              0 COMMON    11     5      6
 ---------------------------------------------------------------------------------
 (5) _dtoa                                                30    22      8    4437
                                             16 BANK0     30    22      8
                            ___aodiv
                            ___aomod
                                _abs
                                _pad
 ---------------------------------------------------------------------------------
 (6) _pad                                                  9     6      3    2722
                                             12 COMMON     1     1      0
                                              4 BANK0      8     5      3
                              _fputc
                              _fputs
                             _strlen
 ---------------------------------------------------------------------------------
 (7) _strlen                                               5     3      2     123
                                              0 COMMON     5     3      2
 ---------------------------------------------------------------------------------
 (7) _fputs                                                8     7      1    1149
                                              8 COMMON     4     3      1
                                              0 BANK0      4     4      0
                              _fputc
 ---------------------------------------------------------------------------------
 (8) _fputc                                                8     5      3     834
                                              0 COMMON     8     5      3
                              _putch
 ---------------------------------------------------------------------------------
 (9) _putch                                                1     1      0       0
 ---------------------------------------------------------------------------------
 (6) _abs                                                  4     2      2     142
                                              3 COMMON     4     2      2
                            ___aomod (ARG)
 ---------------------------------------------------------------------------------
 (6) ___aomod                                             19     3     16     448
                                              0 COMMON     3     3      0
                                              0 BANK0     16     0     16
 ---------------------------------------------------------------------------------
 (6) ___aodiv                                             27    11     16     452
                                              0 COMMON    11    11      0
                                              0 BANK0     16     0     16
 ---------------------------------------------------------------------------------
 (2) _lcd_print_with                                       7     3      4    6263
                                             13 COMMON     1     1      0
                                              6 BANK0      6     2      4
                          _lcd_print
                     _lcd_set_cursor
 ---------------------------------------------------------------------------------
 (2) _lcd_init                                             3     3      0    3155
                                              6 COMMON     3     3      0
                         _write4bits
 ---------------------------------------------------------------------------------
 (3) _write4bits                                           3     2      1    2814
                                              3 COMMON     3     2      1
                            _lcd_cmd
 ---------------------------------------------------------------------------------
 (2) _lcd_clear                                            5     5      0    5410
                                              6 BANK0      5     5      0
                          _lcd_print
                     _lcd_set_cursor
 ---------------------------------------------------------------------------------
 (3) _lcd_set_cursor                                       9     7      2    2659
                                             10 COMMON     3     1      2
                                              0 BANK0      6     6      0
                            _command
 ---------------------------------------------------------------------------------
 (2) _lcd_print                                            5     3      2    2450
                                             10 COMMON     3     1      2
                                              0 BANK0      2     2      0
                            _command
 ---------------------------------------------------------------------------------
 (3) _command                                              7     5      2    1924
                                              3 COMMON     7     5      2
                            _lcd_cmd
 ---------------------------------------------------------------------------------
 (2) _lcd_backlight                                        2     2      0    1233
                                              3 COMMON     2     2      0
                            _lcd_cmd
 ---------------------------------------------------------------------------------
 (4) _lcd_cmd                                              2     1      1    1156
                                              1 COMMON     2     1      1
                          _i2c_start
                           _i2c_stop
                          _i2c_write
 ---------------------------------------------------------------------------------
 (5) _i2c_write                                            1     1      0      22
                                              0 COMMON     1     1      0
                           _i2c_wait
 ---------------------------------------------------------------------------------
 (5) _i2c_stop                                             0     0      0       0
 ---------------------------------------------------------------------------------
 (5) _i2c_start                                            0     0      0       0
                           _i2c_wait
 ---------------------------------------------------------------------------------
 (6) _i2c_wait                                             0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _initialize_digit                                     2     2      0    8211
                                             12 BANK0      2     2      0
                        _print_digit
                     _set_brigthness
 ---------------------------------------------------------------------------------
 (3) _set_brigthness                                       4     2      2     268
                                              0 COMMON     4     2      2
 ---------------------------------------------------------------------------------
 (2) _print_digit                                         11    10      1    7866
                                             13 COMMON     1     0      1
                                              2 BANK0     10    10      0
                            ___awdiv
                            ___awmod
                       _encode_digit
                       _set_segments
 ---------------------------------------------------------------------------------
 (3) _set_segments                                         7     4      3    5118
                                              8 COMMON     5     2      3
                                              0 BANK0      2     2      0
                      _start_segment
                       _stop_segment
                         _write_byte
 ---------------------------------------------------------------------------------
 (4) _write_byte                                           6     5      1    2020
                                              2 COMMON     6     5      1
                       _CLK_SET_HIGH
                        _CLK_SET_LOW
                     _CLK_SET_OUTPUT
                       _DIO_SET_HIGH
                      _DIO_SET_INPUT
                        _DIO_SET_LOW
                     _DIO_SET_OUTPUT
                  _get_DIO_PIN_value
 ---------------------------------------------------------------------------------
 (5) _get_DIO_PIN_value                                    2     2      0     209
                                              0 COMMON     2     2      0
 ---------------------------------------------------------------------------------
 (5) _DIO_SET_INPUT                                        2     2      0      55
                                              0 COMMON     2     2      0
 ---------------------------------------------------------------------------------
 (4) _stop_segment                                         1     1      0    1122
                                              2 COMMON     1     1      0
                       _CLK_SET_HIGH
                        _CLK_SET_LOW
                     _CLK_SET_OUTPUT
                       _DIO_SET_HIGH
                        _DIO_SET_LOW
                     _DIO_SET_OUTPUT
 ---------------------------------------------------------------------------------
 (4) _start_segment                                        1     1      0    1122
                                              2 COMMON     1     1      0
                       _CLK_SET_HIGH
                        _CLK_SET_LOW
                     _CLK_SET_OUTPUT
                       _DIO_SET_HIGH
                        _DIO_SET_LOW
                     _DIO_SET_OUTPUT
 ---------------------------------------------------------------------------------
 (5) _DIO_SET_OUTPUT                                       2     2      0     154
                                              0 COMMON     2     2      0
 ---------------------------------------------------------------------------------
 (5) _DIO_SET_LOW                                          2     2      0     154
                                              0 COMMON     2     2      0
 ---------------------------------------------------------------------------------
 (5) _DIO_SET_HIGH                                         2     2      0     154
                                              0 COMMON     2     2      0
 ---------------------------------------------------------------------------------
 (5) _CLK_SET_OUTPUT                                       2     2      0     121
                                              0 COMMON     2     2      0
 ---------------------------------------------------------------------------------
 (5) _CLK_SET_LOW                                          2     2      0     154
                                              0 COMMON     2     2      0
 ---------------------------------------------------------------------------------
 (5) _CLK_SET_HIGH                                         2     2      0     154
                                              0 COMMON     2     2      0
 ---------------------------------------------------------------------------------
 (3) _encode_digit                                         2     1      1     526
                                              9 COMMON     2     1      1
                            ___awdiv (ARG)
 ---------------------------------------------------------------------------------
 (3) ___awmod                                              7     3      4     752
                                              0 COMMON     7     3      4
 ---------------------------------------------------------------------------------
 (3) ___awdiv                                              9     5      4     756
                                              0 COMMON     9     5      4
 ---------------------------------------------------------------------------------
 (3) _get_scale_val                                       19    15      4    1448
                                              0 BANK0     19    15      4
                            ___lldiv
                   _get_CELL_DAT_VAL
                  _set_CELL_CLK_HIGH
                   _set_CELL_CLK_LOW
 ---------------------------------------------------------------------------------
 (4) _set_CELL_CLK_LOW                                     2     2      0     121
                                              0 COMMON     2     2      0
 ---------------------------------------------------------------------------------
 (4) _set_CELL_CLK_HIGH                                    2     2      0      88
                                              0 COMMON     2     2      0
 ---------------------------------------------------------------------------------
 (4) _get_CELL_DAT_VAL                                     6     4      2     275
                                              0 COMMON     6     4      2
 ---------------------------------------------------------------------------------
 (4) ___lldiv                                             14     6      8     314
                                              0 COMMON    14     6      8
 ---------------------------------------------------------------------------------
 (1) _SYSTEM_Initialize                                    0     0      0       0
              _OSCILLATOR_Initialize
             _PIN_MANAGER_Initialize
                     _WDT_Initialize
 ---------------------------------------------------------------------------------
 (2) _WDT_Initialize                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _PIN_MANAGER_Initialize                               0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _OSCILLATOR_Initialize                                0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 9
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _SYSTEM_Initialize
     _OSCILLATOR_Initialize
     _PIN_MANAGER_Initialize
     _WDT_Initialize
   _calc_percentage
     ___fldiv
     ___flmul
       __Umul8_16
       ___fldiv (ARG)
     ___fltol
       ___fldiv (ARG)
       ___flmul (ARG)
     ___xxtofl
     _get_scale_val
       ___lldiv
       _get_CELL_DAT_VAL
       _set_CELL_CLK_HIGH
       _set_CELL_CLK_LOW
     _scale_convert_gram
       ___fldiv
       ___fltol
       ___xxtofl
   _initialize
     _get_scale_val
     _initialize_digit
       _print_digit
         ___awdiv
         ___awmod
         _encode_digit
           ___awdiv (ARG)
         _set_segments
           _start_segment
             _CLK_SET_HIGH
             _CLK_SET_LOW
             _CLK_SET_OUTPUT
             _DIO_SET_HIGH
             _DIO_SET_LOW
             _DIO_SET_OUTPUT
           _stop_segment
             _CLK_SET_HIGH
             _CLK_SET_LOW
             _CLK_SET_OUTPUT
             _DIO_SET_HIGH
             _DIO_SET_LOW
             _DIO_SET_OUTPUT
           _write_byte
             _CLK_SET_HIGH
             _CLK_SET_LOW
             _CLK_SET_OUTPUT
             _DIO_SET_HIGH
             _DIO_SET_INPUT
             _DIO_SET_LOW
             _DIO_SET_OUTPUT
             _get_DIO_PIN_value
       _set_brigthness
     _lcd_backlight
       _lcd_cmd
         _i2c_start
           _i2c_wait
         _i2c_stop
         _i2c_write
           _i2c_wait
     _lcd_clear
       _lcd_print
         _command
           _lcd_cmd
       _lcd_set_cursor
         _command
     _lcd_init
       _write4bits
         _lcd_cmd
     _lcd_print
     _lcd_print_with
       _lcd_print
       _lcd_set_cursor
     _print_digit
     _sprintf
       _vfprintf
         _vfpfcnvrt
           _dtoa
             ___aodiv
             ___aomod
             _abs
               ___aomod (ARG)
             _pad
               _fputc
                 _putch
               _fputs
                 _fputc
               _strlen
           _fputc
           _strncmp
           _utoa
             ___lodiv
             ___lomod
             _pad
   _print_gram
     _lcd_clear
     _lcd_print_with
     _print_digit
     _sprintf
   _set_max_gram
     _calc_percentage
     _lcd_clear
     _lcd_print
     _sprintf

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             3F0      0       0       0        0.0%
EEDATA             100      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
BITCOMMON            E      0       0       1        0.0%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
COMMON               E      E       E       2      100.0%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
BITSFR2              0      0       0       3        0.0%
SFR2                 0      0       0       3        0.0%
STACK                0      0       0       3        0.0%
BITBANK0            50      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
BANK0               50     50      50       5      100.0%
BITSFR4              0      0       0       5        0.0%
SFR4                 0      0       0       5        0.0%
BITBANK1            50      0       0       6        0.0%
BITSFR5              0      0       0       6        0.0%
SFR5                 0      0       0       6        0.0%
BANK1               50     38      4D       7       96.2%
BITSFR6              0      0       0       7        0.0%
SFR6                 0      0       0       7        0.0%
BITBANK2            50      0       0       8        0.0%
BITSFR7              0      0       0       8        0.0%
SFR7                 0      0       0       8        0.0%
BANK2               50     1A      3E       9       77.5%
BITSFR8              0      0       0       9        0.0%
SFR8                 0      0       0       9        0.0%
BITBANK3            50      0       0      10        0.0%
BITSFR9              0      0       0      10        0.0%
SFR9                 0      0       0      10        0.0%
BANK3               50      0      20      11       40.0%
BITSFR10             0      0       0      11        0.0%
SFR10                0      0       0      11        0.0%
BITBANK4            50      0       0      12        0.0%
BITSFR11             0      0       0      12        0.0%
SFR11                0      0       0      12        0.0%
BANK4               50      0       0      13        0.0%
BITSFR12             0      0       0      13        0.0%
SFR12                0      0       0      13        0.0%
BITBANK5            50      0       0      14        0.0%
BITSFR13             0      0       0      14        0.0%
SFR13                0      0       0      14        0.0%
BANK5               50      0       0      15        0.0%
BITSFR14             0      0       0      15        0.0%
SFR14                0      0       0      15        0.0%
BITBANK6            50      0       0      16        0.0%
BITSFR15             0      0       0      16        0.0%
SFR15                0      0       0      16        0.0%
BANK6               50      0       0      17        0.0%
BITSFR16             0      0       0      17        0.0%
SFR16                0      0       0      17        0.0%
BITBANK7            50      0       0      18        0.0%
BITSFR17             0      0       0      18        0.0%
SFR17                0      0       0      18        0.0%
BANK7               50      0       0      19        0.0%
BITSFR18             0      0       0      19        0.0%
SFR18                0      0       0      19        0.0%
BITSFR19             0      0       0      20        0.0%
SFR19                0      0       0      20        0.0%
ABS                  0      0     109      20        0.0%
BITBANK8            50      0       0      21        0.0%
BITSFR20             0      0       0      21        0.0%
SFR20                0      0       0      21        0.0%
BANK8               50      0       0      22        0.0%
BITSFR21             0      0       0      22        0.0%
SFR21                0      0       0      22        0.0%
BITBANK9            50      0       0      23        0.0%
BITSFR22             0      0       0      23        0.0%
SFR22                0      0       0      23        0.0%
BANK9               50      0       0      24        0.0%
BITSFR23             0      0       0      24        0.0%
SFR23                0      0       0      24        0.0%
BITBANK10           50      0       0      25        0.0%
BITSFR24             0      0       0      25        0.0%
SFR24                0      0       0      25        0.0%
BANK10              50      0       0      26        0.0%
BITSFR25             0      0       0      26        0.0%
SFR25                0      0       0      26        0.0%
BITBANK11           50      0       0      27        0.0%
BITSFR26             0      0       0      27        0.0%
SFR26                0      0       0      27        0.0%
BANK11              50      0       0      28        0.0%
BITSFR27             0      0       0      28        0.0%
SFR27                0      0       0      28        0.0%
BITBANK12           30      0       0      29        0.0%
BITSFR28             0      0       0      29        0.0%
SFR28                0      0       0      29        0.0%
BANK12              30      0       0      30        0.0%
BITSFR29             0      0       0      30        0.0%
SFR29                0      0       0      30        0.0%
BITSFR30             0      0       0      31        0.0%
SFR30                0      0       0      31        0.0%
DATA                 0      0     109      31        0.0%
BITSFR31             0      0       0      32        0.0%
SFR31                0      0       0      32        0.0%


Microchip Technology PIC Macro Assembler V2.32 build 20210201212658 
Symbol Table                                                                                   Sat Jan 01 18:49:01 2022

                   ___fldiv@aexp 002C                     ___fldiv@bexp 002B                     ___fldiv@sign 0024  
         __size_of_start_segment 001A                      _SSPSTATbits 0214                               l31 1FC1  
                             l51 1E47                               l54 1E26                               l57 0804  
                             l81 1E51                               l75 1EC0                               l84 1E29  
                             l78 1E4D                               l87 1E2D                               l96 1EC5  
                             l99 1EC9                     ___awdiv@sign 0076                     lcd_clear@col 0029  
            __Umul8_16@word_mpld 0076                     lcd_clear@row 0028                              l102 1ED0  
                            l200 1E9E                              l210 161A                              l203 1F58  
                            l206 1F72                              l230 1EF7                              l223 11EF  
                            l224 1225                              l320 1F0E                              l225 1229  
                            l314 1F26                              l244 1E35                              l236 1390  
                            l252 0A99                              l261 1E67                              l341 1042  
                            l317 17FF                              l182 1E88                              l334 10F1  
                            l350 1FDC                              l191 1EA9                              l247 1EE3  
                            l335 1104                              l264 1E5C                              l344 1F3E  
                            l185 1E72                              l329 1180                              l194 1EB4  
                            l291 0C43                              l347 1282                              l268 0933  
                            l700 11D3                              l188 1E7D                              l197 1E93  
                            l373 16B6                              l381 152D                              l295 1756  
                            l384 1140                              l377 0D27                              l570 1335  
                            l634 0FEE                              l635 0FFF                              l647 0E00  
                            l735 158D                              l648 0E11                              l912 0347  
                            l728 15A2                              l913 0361                              l738 15A2  
                            l931 07CC                              l915 0370                              l907 02FB  
                            l774 0888                              l950 1FEF                              l687 144B  
                            l767 0878                              l943 07C0                              l784 14BC  
                            l952 1FFF                              l777 14AC                              l937 0748  
                            l891 021D                              l893 0379                              l981 0991  
                            l975 0956                              l977 09DF                              l988 09AB  
                            l997 106A                              l989 09B7                              _RC5 0075  
                            _RC6 0076                              _RC7 0077                              _abs 1F73  
                            _pad 1283                     ___awmod@sign 0076                              wreg 0009  
                   ___flmul@aexp 003F                     ___flmul@bexp 0040                      command@mode 0074  
                   ___flmul@sign 003A                     ___flmul@temp 0045                     ___flmul@prod 0041  
      get_scale_val@weight_count 002D                  ?_lcd_set_cursor 007A                   ??_encode_digit 007A  
                   ___fltol@exp1 0051                             l1110 0055                             l1031 12DB  
                           l1040 00DD                             l1121 0006                             l1026 129F  
                           l1034 009F                             l1043 014E                             l1035 00A8  
                           l1131 13EC                             ?_abs 0073                             l1060 0E1D  
                           l1029 12C1                             l1118 1093                             l1127 1FA6  
                           l1039 00C5                             l3000 08BB                             l1072 0EFE  
                           l1064 0E38                             l1057 01C5                             l3010 08DD  
                           l1091 10C9                             l3012 08E7                             l3004 08C6  
                           l3100 1416                             l3030 0926                             l3022 0906  
                           l3006 08D0                             l3110 1432                             l3102 141A  
                           l1095 1F8C                             l1079 0575                             l3024 0910  
                           l3016 08F1                             l3112 1437                             l3104 141E  
                           l3040 124A                             l3200 01D0                             l3034 0931  
                           l3018 08FB                             l3106 142D                             l3114 143D  
                           l3130 118D                             l3122 1181                             l3050 1270  
                           l3042 1252                             l1098 1F8C                             l3210 01E7  
                           l3202 01D4                             l3060 12FA                             l3028 091C  
                           l3116 1442                             l3108 1431                             l3140 11A4  
                           l3132 1191                             l3124 1182                             l3052 1279  
                           l3044 125B                             l3300 02E4                             l3220 01FB  
                           l3212 01E8                             l3204 01D5                             l3070 1320  
                           l3062 12FE                             l3054 12DC                             l3118 1447  
                           l3150 11BF                             l3142 11A8                             l3134 1196  
                           l3126 1186                             l3046 1264                             l3038 122B  
                           l3310 030D                             l3302 02F8                             l3230 0212  
                           l3222 01FF                             l3206 01DA                             l3214 01EA  
                           l3072 1327                             l3064 1305                             l3056 12EC  
                           l3080 13EE                             l3144 11AC                             l3136 119C  
                           l3152 11C5                             l3128 118B                             l2600 1E48  
                           l3048 1268                             l3400 039A                             l3320 0355  
                           l3312 0311                             l3240 0235                             l3232 0213  
                           l3224 0200                             l3216 01F2                             l3208 01DF  
                           l3160 152E                             l3066 1317                             l3058 12EF  
                           l3074 132D                             l3090 1402                             l3082 13F2  
                           l3154 11CA                             l3146 11B6                             l3138 119F  
                           l2610 1E7F                             l2602 1E4B                             l3410 03E2  
                           l3402 039E                             l3330 036C                             l3322 0358  
                           l3314 0329                             l3306 0300                             l3250 024C  
                           l3226 0205                             l3234 0215                             l3218 01F7  
                           l3170 1557                             l3162 153A                             l3068 131F  
                           l3500 0B78                             l3092 1406                             l3084 13F7  
                           l3156 11CF                             l3148 11BA                             l2612 1E69  
                           l2620 1E8A                             l2604 1E27                             l2700 0FAC  
                           l3420 0436                             l3404 03B0                             l3340 1FE7  
                           l3324 0360                             l3308 0305                             l3316 032D  
                           l3260 0276                             l3252 025C                             l3236 0225  
                           l3244 023E                             l3228 020A                             l3172 155F  
                           l3502 0B7A                             l3094 1408                             l3086 13F9  
                           l3078 13ED                             l2614 1E74                             l2622 1E95  
                           l2630 15B1                             l2606 1EC2                             l2702 0FBC  
                           l2710 0D28                             l3430 0489                             l3422 0455  
                           l3414 03FC                             l3406 03C1                             l3342 1FEB  
                           l3326 0366                             l3318 033A                             l3262 027B  
                           l3270 0295                             l3254 0264                             l3246 0243  
                           l3238 0231                             l3190 1584                             l3182 156D  
                           l3174 1561                             l3166 1543                             l3350 0935  
                           l3520 0BA5                             l3504 0B85                             l3096 140E  
                           l3088 13FD                             l2616 1EA0                             l2632 15BB  
                           l2624 15A4                             l2608 1ECD                             l2704 0FBD  
                           l2720 0D7D                             l2712 0D29                             l2800 1F73  
                           l2560 0007                             l3440 04D6                             l3432 049B  
                           l3416 0414                             l3408 03C9                             l3344 1FF6  
                           l3336 1FDE                             l3600 0585                             l3328 036A  
                           l3280 02BA                             l3272 02A7                             l3264 0289  
                           l3256 026C                             l3192 1592                             l3176 1565  
                           l3184 157D                             l3168 1556                             l3352 093A  
                           l3530 0BD0                             l3522 0BAA                             l3514 0B96  
                           l3506 0B90                             l3098 1411                             l2618 1EAB  
                           l2650 15E9                             l2642 15CE                             l2626 15AD  
                           l2810 11D9                             l2706 0FCB                             l2730 0D9D  
                           l2722 0D8A                             l2714 0D33                             l2802 1F80  
                           l2570 003D                             l2562 000C                             l3450 0536  
                           l3442 0502                             l3426 046F                             l3418 042D  
                           l3346 1FFB                             l3338 1FE0                             l3610 05A1  
                           l3602 058A                             l3290 02D0                             l3282 02C2  
                           l3274 02A8                             l3266 028D                             l3258 0274  
                           l3194 1597                             l3370 0982                             l3362 0967  
                           l3354 093E                             l3540 0BD9                             l3524 0BC1  
                           l3516 0B9D                             l3508 0B94                             l2804 1F40  
                           l2660 15FC                             l2644 15D8                             l2636 15BF  
                           l2820 11E2                             l2812 11DD                             l2580 1EBC  
                           l2708 0FD0                             l2732 0DBF                             l2724 0D8D  
                           l2716 0D54                             l2572 004D                             l2564 0011  
                           l2900 01A5                             l2740 0805                             l3452 0541  
                           l3428 0481                             l3436 04B5                             l3700 074D  
                           l3620 05B4                             l3612 05A6                             l3604 058F  
                           l3292 02D7                             l3284 02C4                             l3276 02B0  
                           l3268 028E                             l3196 01C6                             l3380 09AF  
                           l3372 098A                             l3364 096C                             l3356 094E  
                           l3542 0BE2                             l3526 0BC5                             l3518 0BA1  
                           l3550 0C00                             l2806 1F5A                             l2662 1606  
                           l2654 15ED                             l2638 15C9                             l2830 11FB  
                           l2822 11E6                             l3470 1EE4                             l2734 0DCF  
                           l2726 0D95                             l2718 0D5E                             l2566 0016  
                           l2582 106D                             l2590 1F8E                             l2902 01A9  
                           l2750 082B                             l2742 080F                             l2910 0E19  
                           l3438 04CD                             l3446 051C                             l3462 0552  
                           l3702 0752                             l3710 077A                             l3630 05D0  
                           l3622 05B9                             l3614 05AA                             l3606 0597  
                           l3286 02CB                             l3294 02DB                             l3278 02B4  
                           l3198 01CC                             l3390 09D7                             l3382 09B9  
                           l3374 0998                             l3366 0977                             l3358 095E  
                           l3552 0C06                             l3544 0BE7                             l3536 0BD1  
                           l3528 0BCA                             l2656 15F7                             l2648 15DF  
                           l2832 1201                             l2824 11EB                             l2808 11D5  
                           l3480 0A11                             l3472 1EE9                             l2576 1EB5  
                           l2840 1F10                             l3800 1782                             l2680 0F35  
                           l2672 0EFF                             l2728 0D99                             l2736 0DDD  
                           l2568 0020                             l2584 1070                             l2592 1F93  
                           l2904 01B2                             l2760 086A                             l2752 082F  
                           l2744 081C                             l2920 0E57                             l2912 0E2A  
                           l3464 056B                             l3448 052E                             l3456 0547  
                           l3720 07AA                             l3712 0787                             l3704 075A  
                           l3640 05F8                             l3632 05D5                             l3624 05C1  
                           l3616 05AE                             l3608 0599                             l3296 02DF  
                           l3288 02CF                             l3384 09CD                             l3376 09A1  
                           l3368 097E                             l3560 16B9                             l3554 0C27  
                           l3546 0BEC                             l3538 0BD5                             l2666 160C  
                           l2834 1218                             l2826 11F3                             l2818 11DE  
                           l3490 0A80                             l3482 0A24                             l3474 1EF1  
                           l2578 1EB5                             l2842 1F13                             l3810 17AD  
                           l3802 178D                             l2690 0F72                             l2682 0F54  
                           l2674 0F00                             l2738 0DE2                             l2586 107E  
                           l2594 1F97                             l2850 0058                             l2754 0837  
                           l2746 081F                             l2770 1468                             l2762 144C  
                           l2922 0E5C                             l2930 0EB8                             l2914 0E30  
                           l3458 054F                             l3394 037C                             l3722 07B7  
                           l3714 0791                             l3706 075E                             l3650 0653  
                           l3642 0612                             l3626 05C3                             l3618 05AF  
                           l3298 02E0                             l3386 09D2                             l3378 09A5  
                           l3570 1741                             l3562 16E5                             l3556 0C3B  
                           l3548 0BFC                             l2668 1616                             l2836 121D  
                           l2828 11F7                             l3492 0A8C                             l3484 0A3F  
                           l3476 09E2                             l2844 1F1B                             l3580 10FB  
                           l3572 1FC3                             l3820 17DB                             l3812 17B2  
                           l3804 1795                             l2692 0F7A                             l2684 0F58  
                           l2676 0F0A                             l2588 1083                             l2596 1FA0  
                           l2780 128A                             l2860 00B7                             l2852 0068  
                           l2756 0859                             l2748 0827                             l2772 146C  
                           l2764 1459                             l2932 0EBF                             l2940 0EEB  
                           l2924 0E83                             l2916 0E40                             l2908 0E14  
                           l3396 038D                             l3740 10C2                             l3732 1096  
                           l3724 07BB                             l3716 079F                             l3708 0776  
                           l3660 0682                             l3652 065A                             l3644 061F  
                           l3636 05DE                             l3628 05CB                             l3388 09D6  
                           l3750 1FB1                             l3494 0B63                             l3486 0A52  
                           l3478 09F6                             l2846 1F1F                             l3830 1F0A  
                           l3590 1039                             l3582 1021                             l3574 10CC  
                           l3822 17EC                             l3814 17C3                             l3806 17A1  
                           l2694 0F7E                             l2686 0F62                             l2678 0F2B  
                           l2790 12AE                             l2782 1293                             l2870 00E2  
                           l2862 00BD                             l2854 007B                             l2758 0869  
                           l2774 148E                             l2766 145C                             l2934 0ECB  
                           l2926 0E87                             l2918 0E54                             l3398 0395  
                           l3734 109E                             l3726 07BC                             l3718 07A8  
                           l3670 06D2                             l3662 0696                             l3654 0667  
                           l3646 0639                             l3638 05EB                             l3566 16EE  
                           l3910 0A9A                             ?_pad 0024                             l3760 1E20  
                           l3752 1FB3                             l3744 1FA7                             l3496 0B67  
                           l3488 0A6D                             l2848 1F22                             l3584 1022  
                           l3576 10DC                             l3840 115C                             l3832 1143  
                           l3824 17F0                             l3816 17C7                             l3808 17A5  
                           l2696 0F82                             l2688 0F6F                             l2792 12B3  
                           l2784 1298                             l2880 0121                             l2872 00E5  
                           l2864 00CD                             l2856 0081                             l2960 13CC  
                           l2952 13A8                             l2944 1391                             l2776 149E  
                           l2768 1464                             l2936 0ED8                             l2928 0E8B  
                           l3736 10A1                             l3728 07C4                             l3680 0718  
                           l3672 06E7                             l3664 069D                             l3656 066E  
                           l3648 0646                             l3592 0576                             l3568 1725  
                           l3920 0AA5                             l3912 0A9D                             l3762 1E23  
                           l3754 1FB5                             l3746 1FAC                             l3498 0B70  
                           l2970 135D                             l3826 1EF9                             l3586 102B  
                           l3578 10E7                             l3842 1161                             l3834 1145  
                           l3818 17D6                             l3850 1F28                             l2698 0F8A  
                           l2794 12C6                             l2786 129D                             l2778 1285  
                           l2882 015C                             l2890 0189                             l2874 00EA  
                           l2866 00D3                             l2858 00A4                             l2962 13DC  
                           l2954 13B4                             l2946 1399                             l2938 0EE6  
                           l3738 10B9                             l3690 072C                             l3682 071C  
                           l3674 06FE                             l3666 06B1                             l3658 067B  
                           l3594 057C                             l3770 0C6C                             l3930 0AAE  
                           l3922 0AA7                             l3914 0A9F                             l3764 1E24  
                           l3756 1FB8                             l3748 1FAF                             l2972 136B  
                           l3828 1F01                             l3588 102F                             l3844 116B  
                           l3836 1147                             l3852 1F35                             l2796 12CF  
                           l2788 12A2                             l2892 0190                             l2884 0169  
                           l2876 0119                             l2868 00D8                             l2956 13BD  
                           l2948 13A5                             l3860 1051                             l3692 072D  
                           l3684 071D                             l3676 0705                             l3668 06BE  
                           l3596 0580                             l3772 0C7C                             l3940 0ACC  
                           l3932 0AAF                             l3924 0AA8                             l3916 0AA0  
                           l3758 1FBD                             l3766 0801                             l2982 1E5E  
                           l2974 1370                             l2966 1338                             l3790 1EDD  
                           l3838 1153                             l3846 116F                             l2894 0195  
                           l2886 0176                             l2878 011D                             l2958 13C6  
                           l3862 1062                             l3854 1045                             l3870 162E  
                           l3694 0731                             l3686 0724                             l3678 0711  
                           l3598 0584                             l3782 0CAA                             l3950 0AF0  
                           l3942 0ADB                             l3934 0AB0                             l3926 0AA9  
                           l3918 0AA3                             l2992 089D                             l2984 1E53  
                           l2976 1376                             l2968 135A                             l3848 117A  
                           l3792 1758                             l2896 019A                             l2888 0184  
                           l3856 104D                             l3872 163E                             l3880 14BF  
                           l3696 0745                             l3688 0728                             l3784 0CCE  
                           l3776 0C83                             l3768 0C46                             l3960 0B01  
                           l3952 0AF4                             l3944 0AE0                             l3936 0ABF  
                           l3928 0AAC                             l3866 1E3E                             l2994 08A7  
                           l2986 088A                             l2978 1E2E                             l3794 1764  
                           l2898 01A0                             l3858 104F                             l3874 1686  
                           l3882 151C                             l3786 0CEA                             l3778 0CA3  
                           l3890 112E                             l3970 0B32                             l3962 0B06  
                           l3954 0AF5                             l3946 0AE6                             l3938 0AC8  
                           l2988 0893                             l3788 1ED3                             l3796 176C  
                           l3876 16A0                             l3868 161D                             l3892 113B  
                           l3884 1107                             l3972 0B3F                             l3964 0B13  
                           l3956 0AF9                             l3948 0AEC                             l2998 08B1  
                           l3798 177B                             l3878 16A9                             l3886 1119  
                           l3974 0B44                             l3966 0B20                             l3958 0AFD  
                           l3888 1125                             l3976 0B51                             l3968 0B25  
                           STR_1 204A                             STR_2 201D                             STR_3 2000  
                           STR_4 2033                             STR_5 2028                             STR_6 203B  
                           STR_7 200F                             STR_8 2041                             u3000 00D8  
                           u3001 00D7                             u3010 015C                             u3011 015B  
                           u3020 0169                             u3100 0E2A                             u3021 0168  
                           u3101 0E29                             _LATA 010C                             u3030 0176  
                           u3110 0EBF                             _LATB 010D                             u3031 0175  
                           u3015 0158                             u3111 0EBE                             _LATC 010E  
                           u2400 1EC0                             u3040 0184                             u3200 13DC  
                           u3120 0ECB                             u4000 093E                             u2401 1EBF  
                           u3041 0183                             u3201 13DB                             u3121 0ECA  
                           u3105 0E26                             u4001 093D                             _LATE 0110  
                           u3210 1376                             u2410 1093                             u3050 0189  
                           u3130 0ED8                             u4010 095E                             u3211 1375  
                           u2411 1092                             u3051 0188                             u3035 0172  
                           u3131 0ED7                             u4011 095D                             u3220 0893  
                           u2500 15D8                             u2420 1FA0                             u3060 0190  
                           u3140 0EE6                             u4100 09C3                             u3221 0892  
                           u2501 15D7                             u2421 1F9F                             u3061 018F  
                           u3045 0180                             u3141 0EE5                             u3310 12EC  
                           u3230 08A7                             u2510 15E9                             u2430 1E51  
                           u2350 000C                             u3070 0195                             u3150 0EEB  
                           u4110 09D2                             u4030 097D                             u3311 12EB  
                           u3231 08A6                             u2511 15E8                             u2431 1E50  
                           u2351 000B                             u3071 0194                             u3151 0EEA  
                           u3135 0ED4                             u4111 09D1                             u4031 097C  
                           u3240 08BB                             u3400 140E                             u2520 15F7  
                           u2440 1E2D                             u2600 0F6F                             u2360 0011  
                           u3080 01A0                             u3160 13A5                             u4200 052E  
                           u4120 09D6                             u3241 08BA                             u3401 140D  
                           u2521 15F6                             u2441 1E2C                             u3305 123F  
                           u2601 0F6E                             u2361 0010                             u3081 019F  
                           u3161 13A4                             u3145 0EE2                             u4201 052D  
                           u4121 09D5                             u4105 09BF                             u4025 0971  
                           u3330 12FE                             u3250 08D0                             u2530 1606  
                           u4210 1EE9                             u2450 1EC9                             u2610 0F82  
                           u2370 0020                             u3170 13BD                             u3090 0E19  
                           u4130 038D                             u4050 0997                             u3331 12FD  
                           u3251 08CF                             u2531 1605                             u4211 1EE8  
                           u2451 1EC8                             u2611 0F81                             u2371 001F  
                           u3171 13BC                             u3091 0E18                             u4131 038C  
                           u4051 0996                             u3260 08E7                             u4220 0B85  
                           u3420 141E                             u3500 119C                             u2540 1616  
                           u2460 1ECD                             u4300 1042                             u2620 0FAC  
                           u2700 0D8A                             u2380 003D                             u3180 13C6  
                           u4140 03B0                             u3325 12F0                             u3261 08E6  
                           u4221 0B84                             u3421 141D                             u3501 119B  
                           u2541 1615                             u2461 1ECC                             u4301 1041  
                           u2621 0FAB                             u2701 0D89                             u2381 003C  
                           u3181 13C5                             u4141 03AF                             u4045 098B  
                           u3350 1317                             u3270 08FB                             u4230 0B90  
                           u2470 15AD                             u2390 1EBC                             u2630 0FCB  
                           u2550 0F0A                             u2710 0D9D                             u3190 13CC  
                           u4150 03C1                             u4310 0584                             u4070 09A5  
                           u3351 1316                             u3271 08FA                             u4231 0B8F  
                           u3415 1412                             u2471 15AC                             u2391 1EBB  
                           u2631 0FCA                             u2551 0F09                             u2711 0D9C  
                           u3191 13CB                             u4151 03C0                             u4311 0583  
                           u4071 09A4                             u3280 0910                             u3440 142D  
                           u3520 11AC                             u2480 15BB                             u2640 0FD0  
                           u2720 0DBF                             u2800 0878                             u4160 0414  
                           u4320 058A                             u3600 156C                             u4080 09AB  
                           u3345 12FF                             u3281 090F                             u3441 142C  
                           u3521 11AB                             u2481 15BA                             u2641 0FCF  
                           u2625 0FA8                             u2721 0DBE                             u2385 0039  
                           u2801 0877                             u4161 0413                             u4321 0589  
                           u3601 156B                             u4081 09AA                             u4065 099B  
                           u3370 132D                             u3290 0926                             u4250 0BD0  
                           u3530 11B6                             u2490 15C9                             u2570 0F35  
                           u2730 0DDD                             u2810 1459                             u4170 042D  
                           u4410 06DD                             u4330 058F                             u4090 09AF  
                           u3371 132C                             u3355 1313                             u3291 0925  
                           u4251 0BCF                             u3435 141F                             u3531 11B5  
                           u3515 11A0                             u2491 15C8                             u2571 0F34  
                           u2731 0DDC                             u2811 1458                             u4171 042C  
                           u4331 058E                             u4091 09AE                             u4260 0BEC  
                           u3460 143D                             u3380 13F2                             u2900 11E6  
                           u2740 0DE2                             u2660 0D33                             u2820 146C  
                           u4180 0481                             u4500 074C                             u4420 06F4  
                           u4340 05AE                             u3700 01FF                             u3620 157C  
                           u3365 1321                             u4261 0BEB                             u4245 0B97  
                           u3461 143C                             u3445 1429                             u3381 13F1  
                           u2901 11E5                             u2741 0DE1                             u2725 0DBB  
                           u2661 0D32                             u2821 146B                             u4181 0480  
                           u4501 074B                             u4405 0683                             u4341 05AD  
                           u3701 01FE                             u3621 157B                             u4270 0C06  
                           u3470 1442                             u3390 13FD                             u3550 11C5  
                           u2910 1201                             u2590 0F5F                             u2830 148E  
                           u4190 04CD                             u4510 0752                             u4350 05B4  
                           u3710 0205                             u3630 1583                             u4271 0C05  
                           u3471 1441                             u3455 1433                             u3391 13FC  
                           u3551 11C4                             u3535 11B2                             u2911 1200  
                           u2831 148D                             u4191 04CC                             u4511 0751  
                           u4415 06D9                             u4351 05B3                             u3711 0204  
                           u3631 1582                             u3615 156E                             u3560 11CA  
                           u3480 1186                             u2920 121D                             u4600 116B  
                           u2680 0D5E                             u2760 080C                             u2840 14AC  
                           u4520 075E                             u4360 05B9                             u3800 02A7  
                           u3720 020A                             u4280 16E5                             u3561 11C9  
                           u3545 11BB                             u3481 1185                             u2921 121C  
                           u4601 116A                             u2681 0D5D                             u2841 14AB  
                           u4521 075D                             u4425 06F0                             u4361 05B8  
                           u3801 02A6                             u3721 0209                             u4281 16E4  
                           u3490 1191                             u4290 10E7                             u4610 117A  
                           u2850 128A                             u2930 0073                             u2770 081C  
                           u4530 076C                             u4450 071C                             u4370 05D0  
                           u3810 02BA                             u3730 0225                             u3650 1592  
                           u3570 153A                             u3491 1190                             u4291 10E6  
                           u4611 1179                             u2851 1289                             u2931 0071  
                           u2771 081B                             u2835 148A                             u4451 071B  
                           u4435 06FF                             u4371 05CF                             u3811 02B9  
                           u3731 0224                             u3651 1591                             u3571 1539  
                           u2860 1298                             u2940 0074                             u2780 082F  
                           u4540 0787                             u4380 05D5                             u3900 0305  
                           u3820 02C2                             u3740 0243                             u3660 1597  
                           u3580 1550                             u2861 1297                             u2781 082E  
                           u4541 0786                             u4445 0712                             u4381 05D4  
                           u3901 0304                             u3821 02C1                             u3805 02A3  
                           u3741 0242                             u3661 1596                             u3645 1585  
                           u4285 16E1                             u2870 12C1                             u2950 0081  
                           u2790 0859                             u4550 079F                             u4470 072C  
                           u3910 0311                             u3750 027B                             u3670 01D4  
                           u3590 1565                             u2871 12C0                             u2951 0080  
                           u2791 0858                             u4551 079E                             u4535 0768  
                           u4471 072B                             u3911 0310                             u3751 027A  
                           u3671 01D3                             u3591 1564                             u2880 12C6  
                           u4560 07BB                             u4480 0731                             u3920 031F  
                           u3840 02CF                             u3680 01DA                             u4640 0ABB  
                           u2881 12C5                             u4561 07BA                             u4545 0783  
                           u4481 0730                             u4465 071E                             u3841 02CE  
                           u3681 01D9                             u3585 154C                             u2890 1F80  
                           u2970 00A4                             u4570 10C2                             u4490 0745  
                           u3930 033A                             u3690 01DF                             u4650 0AD7  
                           u2891 1F7F                             u2875 12BD                             u2971 00A3  
                           u2795 0855                             u4571 10C1                             u4555 079B  
                           u4491 0744                             u4395 0654                             u3931 0339  
                           u3835 02C5                             u3691 01DE                             u4707 0B38  
                           u2980 00B7                             u3940 0355                             u3860 02DF  
                           u3780 028D                             u4580 0C7C                             u4660 0B06  
                           u2981 00B6                             u3941 0354                             u3925 031B  
                           u3861 02DE                             u3781 028C                             u3765 027C  
                           u4581 0C7B                             u4717 0B57                             u4661 0B05  
                           u2990 00D3                             u3950 036A                             u3870 02E4  
                           u4590 0CA3                             u4670 0B25                             u4807 17D2  
                           u4727 175D                             u2895 1F7C                             u2991 00D2  
                           u3951 0369                             u3935 0336                             u3871 02E3  
                           u3855 02D1                             u3775 0283                             u4591 0CA2  
                           u4671 0B24                             u3960 1FEB                             u3880 02F8  
                           u4680 0B44                             u4817 17DC                             u4737 176F  
                           u2985 00B3                             u3961 1FEA                             u3945 0351  
                           u3881 02F7                             u4681 0B43                             u3890 02FF  
                           u4907 0BD6                             u4827 17ED                             u4747 177E  
                           u3891 02FE                             u3795 028F                             u4595 0C9F  
                           u3980 1FFB                             u4917 0BDF                             u4837 17FB  
                           u4757 178B                             u3981 1FFA                             u3990 093A  
                           u4847 1265                             u4767 1796                             u3975 1FF0  
                           u3991 0939                             u4857 1F0B                             u4777 17A2  
                           u4697 0B19                             u4867 1F23                             u4787 17B3  
                           u4877 0B91                             u4797 17C4                             u4887 0BA2  
                           u4897 0BC2                    encode_digit@p 007A                             _WPUB 020D  
                           _WPUE 0210                             abs@a 0073                             _dbuf 01A0  
                ??_lcd_backlight 0073                             _main 0A9A                             _dtoa 0056  
                           _prec 00E0                    write_byte@ack 0074                             _nout 00DC  
                           pad@i 0027                             pad@p 0025                             fsr0h 0005  
                           fsr1h 0007                             indf0 0000                             fsr0l 0004  
                           indf1 0001                             fsr1l 0006                             pad@w 0029  
                           btemp 007E                             _utoa 0E12                     print_digit@p 002A  
                           start 0002                  ___fldiv@new_exp 0025                  ?_lcd_print_with 0026  
              initialize_digit@p 002D                            ??_abs 0075                            ??_pad 007C  
 __size_of_OSCILLATOR_Initialize 0007    __end_of_OSCILLATOR_Initialize 1E27            __size_of_stop_segment 001A  
                  ___fltol@sign1 0050                  __end_of___aodiv 1000                            ?_main 0070  
                          ?_dtoa 0030                  __end_of___aomod 0E12                  __end_of___fldiv 037A  
                __end_of___awdiv 144C                            STR_10 2041                            STR_12 2044  
                          STR_14 2044                            STR_17 2047                            STR_19 2047  
                __end_of___awmod 11D4                  __end_of___flmul 07CD                  __end_of___fltol 15A3  
                __end_of___lldiv 1336                            ?_utoa 0030                  __end_of___lodiv 0889  
                ___awdiv@divisor 0070                  __end_of___lomod 14BD                  ___awdiv@counter 0075  
                   vfpfcnvrt@fmt 004E                     vfpfcnvrt@llu 0064                            _TRISA 008C  
                          _TRISB 008D                            _TRISC 008E                            _TRISE 0090  
                   main@loadcell 0142           scale_convert_gram@temp 005A                     lcd_print@cmd 0020  
                   lcd_print@str 007A                  __end_of_lcd_cmd 1F27                  __end_of_command 1283  
                          _flags 00E2                   _WDT_Initialize 0801                            _fputc 0007  
                          _fputs 106B                    _start_segment 1F3F                   write_byte@data 0075  
                          pad@fp 002B                            _width 00DE                            _putch 0006  
                          dtoa@d 0030                            dtoa@i 004C                            dtoa@n 0044  
                          dtoa@p 003D                            dtoa@s 0042                            dtoa@w 0040  
       __size_of_calc_percentage 00E4                            utoa@d 0030                            utoa@i 0045  
                          utoa@n 003D                            utoa@p 0038                            utoa@w 003B  
                          status 0003               _scale_convert_gram 16B7                            wtemp0 007E  
                __end_of_sprintf 106B       __size_of_set_CELL_CLK_HIGH 000B                  __end_of_strncmp 13ED  
               ___lodiv@dividend 0028                  ??_get_scale_val 0024             __end_of_CLK_SET_HIGH 1E73  
                __initialization 07CD                     _stop_segment 1F59              ?_scale_convert_gram 0070  
                   __end_of_main 0B61                     __end_of_dtoa 01C6                    command@lownib 0078  
                   __end_of_utoa 0EFF             __end_of_DIO_SET_HIGH 1E94                 __end_of_i2c_wait 1EC1  
               __end_of_i2c_stop 1E2E                           ??_main 00D6                           ??_dtoa 0038  
                         ??_utoa 007D             __size_of_CLK_SET_LOW 000B                 ___lodiv@quotient 0071  
         __end_of_WDT_Initialize 0805             __size_of_DIO_SET_LOW 000B             ??_scale_convert_gram 0052  
                set_segments@pos 007A                   ?_start_segment 0070                  DIO_SET_OUTPUT@p 0071  
              get_CELL_DAT_VAL@p 0075                           ?_fputc 0070                           ?_fputs 0078  
               ___awdiv@dividend 0072                           _APFCON 011D                           _ANSELA 018C  
                         ?_putch 0070                           _ANSELB 018D                           _BORCON 0116  
                         _OSCCON 0099                set_CELL_CLK_LOW@p 0071                           u256lld 0F29  
                         u265lld 0FEE                           _WDTCON 0097                           u258lld 0F54  
                         u275lld 0E00                           u267lld 0D52                           u269lld 0D7D  
                         _SSPADD 0212                           u296lld 009F                           _SSPBUF 0211  
             __size_of_i2c_start 000A                 __end_of___xxtofl 09E0               __size_of_i2c_write 0010  
              ?_initialize_digit 0070         __end_of_get_CELL_DAT_VAL 0934               ??_initialize_digit 002C  
                   vfprintf@cfmt 00A3                 __end_of_lcd_init 1800                        ??___aodiv 0070  
                      ??___aomod 0070                        ??___fldiv 0078                        ??___awdiv 0074  
                      ??___awmod 0074                        ??___flmul 0035                        ??___fltol 004B  
                      ??___lldiv 0078                        ??___lodiv 0070                        ??___lomod 0070  
           __end_of_encode_digit 1E36                 calc_percentage@p 006B                 ___awdiv@quotient 0077  
                ___awmod@divisor 0070                  ___awmod@counter 0075                           pad@buf 0024  
                      ??_lcd_cmd 0072                           dtoa@fp 003F                        ??_command 0075  
                         _strlen 1F8D                           fputc@c 0070                           fputs@c 0020  
                         fputs@i 0021                           fputs@s 0023               __size_of__Umul8_16 0023  
                ?_WDT_Initialize 0070                      initialize@p 00C4                           putch@c 0070  
                 print_digit@tmp 002B                 __end_of_vfprintf 10CA                           utoa@fp 003A  
                      ??_sprintf 00AB          __size_of_set_brigthness 0014                        ??_strncmp 0076  
                   ?_print_digit 007D                     ___xxtofl@arg 007A                     ___xxtofl@exp 0079  
              _SYSTEM_Initialize 1E3E                     ___xxtofl@val 0070          __end_of__initialization 07FD  
             ?_SYSTEM_Initialize 0070                   print_gram@row1 00B5                   print_gram@row2 00C5  
        __size_of_CLK_SET_OUTPUT 000B                       ___fltol@f1 0047        __size_of_set_CELL_CLK_LOW 000B  
                 command@highnib 0077         set_brigthness@brightness 0070                   __pcstackCOMMON 0070  
              ??_calc_percentage 005F                     __pidataBANK1 1E36                     __pidataBANK2 1003  
            ??_SYSTEM_Initialize 0070                    __end_of_fputc 0056                    __end_of_fputs 1094  
                  __end_of_putch 0007                   get_scale_val@i 0031                   get_scale_val@j 002C  
                 get_scale_val@p 0032            __end_of_DIO_SET_INPUT 1EB5                __end_of_i2c_start 1E52  
               ??_lcd_set_cursor 007C                __end_of_i2c_write 1ED1                   _OPTION_REGbits 0095  
                ??_start_segment 0072               __size_of_lcd_clear 0040               __size_of_lcd_print 0024  
                        ??_fputc 0073        __end_of_SYSTEM_Initialize 1E48                          ??_fputs 0079  
                        ??_putch 0070                       __pbssBANK1 00D8                       __pbssBANK2 0156  
                     __pbssBANK3 01A0            __size_of_CLK_SET_HIGH 000B                 ??_lcd_print_with 002A  
                      ?_i2c_wait 0070                        ?_i2c_stop 0070                lcd_print_with@col 0028  
              _get_DIO_PIN_value 15A3                lcd_print_with@row 0029                lcd_print_with@str 0026  
        __size_of_DIO_SET_OUTPUT 000B               ?_get_DIO_PIN_value 0070            __size_of_DIO_SET_HIGH 000B  
              __end_of__Umul8_16 2000                       __pmaintext 0A9A              ??_get_DIO_PIN_value 0070  
                        ?_strlen 0070               set_CELL_CLK_HIGH@p 0071               set_segments@length 0079  
                      ?___xxtofl 0070                     _CLK_SET_HIGH 1E68               __size_of_vfpfcnvrt 01FC  
                        _OSCTUNE 0098                          _SSPCON1 0215                          _SSPCON2 0216  
                      ?_lcd_init 0070                          _SSPSTAT 0214                 ___lomod@dividend 0028  
      __end_of_get_DIO_PIN_value 161B                     _DIO_SET_HIGH 1E89                       ??_i2c_wait 0070  
                     ??_i2c_stop 0070             set_max_gram@max_gram 00B3            __end_of_lcd_backlight 1F0F  
          __size_of_encode_digit 0008                    ?_set_max_gram 00B3                __end_of_lcd_clear 1181  
                        ___aodiv 0EFF                __end_of_lcd_print 1043                          ___aomod 0D28  
                        ___fldiv 01C6                          ___awdiv 13ED                          ___awmod 1181  
                        ___flmul 0576                          ___fltol 152E                          ___lldiv 12DC  
                        ___lodiv 0805                          ___lomod 144C                        ?_vfprintf 006D  
                  ?_set_segments 0078                       _initialize 161B                          __ptext1 1105  
                        __ptext2 0C44                          __ptext3 16B7                          __ptext4 0934  
                        __ptext5 152E                          __ptext6 01C6                          __ptext7 0576  
                        __ptext8 1FDD                          __ptext9 14BD                          _lcd_cmd 1F0F  
                        _command 122A                  __size_of_strlen 001A            _OSCILLATOR_Initialize 1E20  
                   __size_of_abs 001A                     __size_of_pad 0059                       ??___xxtofl 0074  
               ___awmod@dividend 0072                          _segdata 012C         ??_PIN_MANAGER_Initialize 0070  
                 _set_brigthness 1EE4                          main@lcd 013C       __size_of_SYSTEM_Initialize 000A  
                        _sprintf 1043                          clrloop0 1E15                       ??_lcd_init 0076  
                        _strncmp 1391             end_of_initialization 07FD                     _encode_digit 1E2E  
             clear_segment@F2810 00D8                          fputc@fp 0072                          init_ram 1E1A  
                        fputs@fp 0078                          initloop 1E1B                   _CLK_SET_OUTPUT 1E7E  
           __size_of_print_digit 00BA             set_segments@segments 0078                  ___lldiv@divisor 0070  
                 ??_set_max_gram 007E                  ___lldiv@counter 007D            __end_of_get_scale_val 0C44  
               _set_CELL_CLK_LOW 1E5D                ?_get_CELL_DAT_VAL 0070                __end_of_vfpfcnvrt 0576  
                print_digit@data 0026          calc_percentage@max_gram 0067               ??_get_CELL_DAT_VAL 0072  
                 ??_set_segments 007B                       ??_vfprintf 00A0                    ??_CLK_SET_LOW 0070  
                        strlen@a 0073                          strlen@s 0074                 ??_WDT_Initialize 0070  
                      _PORTBbits 000D                    ??_DIO_SET_LOW 0070        __size_of_initialize_digit 0013  
                   _m_brightness 00E4                       _print_gram 14BD                    i2c_write@data 0070  
         __end_of_set_brigthness 1EF8        lcd_set_cursor@row_offsets 0020                    ___xxtofl@sign 0078  
                     lcd_cmd@cmd 0071      __size_of_scale_convert_gram 00A0                      ___fldiv@grs 0027  
                    ___fldiv@rem 0020                       lcd_clear@p 002A                 initialize@valstr 00B4  
     __size_of_get_DIO_PIN_value 0078                  _calc_percentage 0C44           __end_of_CLK_SET_OUTPUT 1E89  
                     main@tm1637 0140                      ___flmul@grs 003B                       command@val 0073  
                 _DIO_SET_OUTPUT 1E9F                       lcd_print@p 0021                      print_gram@p 00D5  
                     _write4bits 1FC2           set_max_gram@empty_gram 00B5                      vfpfcnvrt@ap 004F  
                    vfpfcnvrt@fp 006C                      vfpfcnvrt@ll 005C                       _write_byte 11D4  
                    ?_initialize 0070           ?_OSCILLATOR_Initialize 0070                   __end_of_strlen 1FA7  
            start_initialization 07CD                  ___lodiv@divisor 0020                  ?_set_brigthness 0070  
            __end_of_CLK_SET_LOW 1E7E                  ___lodiv@counter 0079  __size_of_PIN_MANAGER_Initialize 001B  
                    __end_of_abs 1F8D                        _i2c_start 1E48                      __end_of_pad 12DC  
                      _i2c_write 1EC1              __end_of_DIO_SET_LOW 1E9F                   DIO_SET_INPUT@p 0071  
                ?_CLK_SET_OUTPUT 0070           __end_of_DIO_SET_OUTPUT 1EAA                __size_of_i2c_wait 000C  
              __size_of_i2c_stop 0007                      vfprintf@fmt 006D                        __Umul8_16 1FDD  
        get_scale_val@weight_add 0028                      __pdataBANK1 00E5                      __pdataBANK2 0120  
                       ??_strlen 0072                      ?_print_gram 0070                        ___fldiv@a 0070  
                      ___fldiv@b 0074              lcd_set_cursor@F2781 00E5                        ___flmul@a 0031  
                      ___flmul@b 002D                        ___latbits 0003          __end_of_calc_percentage 0D28  
                  __pcstackBANK0 0020                    __pcstackBANK1 00A0                    __pcstackBANK2 013C  
               ___aodiv@dividend 0028             __end_of_set_max_gram 1141                       ?_i2c_start 0070  
                     ?_i2c_write 0070            __end_of_start_segment 1F59                __size_of___xxtofl 00AC  
           __end_of_set_segments 1391                  ?_DIO_SET_OUTPUT 0070                __size_of_lcd_init 00A9  
            __size_of_initialize 009C           __size_of_DIO_SET_INPUT 000B                 set_brigthness@on 0071  
         _PIN_MANAGER_Initialize 1FA7                        _dtoa$1264 003B                    ?_stop_segment 0070  
                    ?_write4bits 0073                         ?___aodiv 0020                         ?___aomod 0020  
                       ?___fldiv 0070                         ?___awdiv 0070                 ___aodiv@quotient 0073  
                       ?___awmod 0070                         ?___flmul 002D                         ?___fltol 0047  
                       ?___lldiv 0070                         ?___lodiv 0020                         ?___lomod 0020  
                     ?__Umul8_16 0070                        _lcd_clear 1141                      _CLK_SET_LOW 1E73  
                    ?_write_byte 0072                        _lcd_print 101F                         ?_lcd_cmd 0071  
              __size_of_vfprintf 0036                 _initialize_digit 1ED1                         ?_command 0073  
                ___lomod@divisor 0020                      _DIO_SET_LOW 1E94                  ___lomod@counter 0071  
       __end_of_set_CELL_CLK_LOW 1E68                         ?_sprintf 00A5                   __size_of_fputc 004F  
                 __size_of_fputs 0029                         ?_strncmp 0070                   __size_of_putch 0001  
        __size_of_lcd_set_cursor 003B                      write4bits@p 0075     get_scale_val@scale_avg_count 0020  
                  CLK_SET_HIGH@p 0071              calc_percentage@gram 0063                        clear_ram0 1E14  
                lcd_set_cursor@p 0025              __size_of_print_gram 0071                   ??_stop_segment 0072  
                      main@F2851 0136                        main@F2853 013A                        main@F2855 0156  
                      main@F2849 0120          __size_of_lcd_print_with 0018                    set_max_gram@p 00C7  
                     ?_lcd_clear 0070                encode_digit@digit 0079                        _vfpfcnvrt 037A  
                     ?_lcd_print 007A                        lcd_init@p 0078                    _DIO_SET_INPUT 1EAA  
                      main@drink 014E              scale_convert_gram@p 005E                      write_byte@b 0072  
                    write_byte@i 0076                      write_byte@p 0077        __size_of_get_CELL_DAT_VAL 00AB  
         __size_of_lcd_backlight 0017                 ?_calc_percentage 0070                      ??_i2c_start 0070  
                    ??_i2c_write 0070              __size_of_write4bits 001B                    ??_print_digit 0022  
                       _i2c_wait 1EB5                    DIO_SET_HIGH@p 0071                         _i2c_stop 1E27  
            __size_of_write_byte 0056                    set_segments@k 0020                    set_segments@p 0021  
                     vfprintf@ap 006F                       vfprintf@fp 00A2                    stop_segment@p 0072  
        ??_OSCILLATOR_Initialize 0070                      ??__Umul8_16 0072                 __size_of___aodiv 0101  
               __size_of___aomod 00EA                 __size_of___fldiv 01B4                 __size_of___awdiv 005F  
               __size_of___awmod 0053                 __size_of___flmul 0257                 __size_of___fltol 0075  
               __size_of___lldiv 005A                 __size_of___lodiv 0084                 __size_of___lomod 0071  
                     ?_vfpfcnvrt 004E                     ??_initialize 00B3                 ??_set_brigthness 0072  
                ___aodiv@divisor 0020            __size_of_set_max_gram 003C                  ___aodiv@counter 0071  
                 ?_DIO_SET_INPUT 0070                 __size_of_lcd_cmd 0018                 __size_of_command 0059  
                     sprintf@fmt 00A5       __end_of_scale_convert_gram 1757                         ___xxtofl 0934  
                lcd_print_with@p 007D                  set_brigthness@p 0073            __size_of_set_segments 005B  
               ??_CLK_SET_OUTPUT 0070           __size_of_get_scale_val 00E3                         __ptext10 161B  
                       __ptext11 1043                         __ptext20 1F8D                         __ptext12 1094  
                       __ptext21 106B                         __ptext13 037A                         __ptext30 1141  
                       __ptext22 0007                         __ptext14 0E12                         __ptext31 10CA  
                       __ptext23 0006                         __ptext15 144C                         __ptext40 1ED1  
                       __ptext32 101F                         __ptext24 1F73                         __ptext16 0805  
                       __ptext41 1EE4                         __ptext33 122A                         __ptext25 0D28  
                       __ptext17 1391                         __ptext50 1E94                         __ptext42 09E0  
                       __ptext34 1EF8                         __ptext26 0EFF                         __ptext18 0056  
                       __ptext51 1E89                         __ptext43 1336                         __ptext35 1F0F  
                       __ptext27 1F27                         __ptext19 1283                         __ptext60 1E52  
                       __ptext52 1E7E                         __ptext44 11D4                         __ptext36 1EC1  
                       __ptext28 1757                         __ptext61 0889                         __ptext53 1E73  
                       __ptext45 15A3                         __ptext37 1E27                         __ptext29 1FC2  
                       __ptext62 12DC                         __ptext54 1E68                         __ptext46 1EAA  
                       __ptext38 1E48                         __ptext63 1E3E                         __ptext55 1E2E  
                       __ptext47 1F59                         __ptext39 1EB5                         __ptext64 0801  
                       __ptext56 1181                         __ptext48 1F3F                         __ptext65 1FA7  
                       __ptext57 13ED                         __ptext49 1E9F                         __ptext66 1E20  
                       __ptext58 0B61                         __ptext59 1E5D                         _lcd_init 1757  
               __size_of_sprintf 0028                 __size_of_strncmp 005C               set_max_gram@valstr 00B7  
                  __size_of_main 00C7                    __size_of_dtoa 0170                    __size_of_utoa 00ED  
             __end_of_initialize 16B7                    write4bits@val 0073                     CLK_SET_LOW@p 0071  
            __end_of_print_digit 0A9A                    _lcd_backlight 1EF8                     _set_max_gram 1105  
                       lcd_cmd@p 0072                         _vfprintf 1094                         command@p 0079  
                    ??_lcd_clear 0026                     _set_segments 1336                      ??_lcd_print 007C  
               ___aomod@dividend 0028                     ??_print_gram 00B3                    ?_CLK_SET_HIGH 0070  
                   DIO_SET_LOW@p 0071                print_digit@number 007D             __end_of_stop_segment 1F73  
               ??_DIO_SET_OUTPUT 0070                  CLK_SET_OUTPUT@p 0071                   __pstringtext10 204A  
                 __pstringtext11 0000          __size_of_WDT_Initialize 0004                    ?_DIO_SET_HIGH 0070  
                 _lcd_set_cursor 10CA                lcd_set_cursor@cmd 0024                lcd_set_cursor@col 007A  
                      sprintf@ap 00AC                lcd_set_cursor@row 007B                 ___lldiv@dividend 0074  
        ?_PIN_MANAGER_Initialize 0070               get_DIO_PIN_value@p 0071         __end_of_initialize_digit 1EE4  
               print_digit@F2820 00E9                   ?_lcd_backlight 0070                        strncmp@_l 0070  
                      strncmp@_r 0072                _set_CELL_CLK_HIGH 1E52               __end_of_print_gram 152E  
                   ??_write4bits 0074                    _get_scale_val 0B61                   _lcd_print_with 1F27  
             ?_set_CELL_CLK_HIGH 0070                  ___aomod@divisor 0020                      ??_vfpfcnvrt 0050  
                ___aomod@counter 0071                     ?_CLK_SET_LOW 0070                     ??_write_byte 0073  
                ??_DIO_SET_INPUT 0070                    __pstringtext1 2000                    __pstringtext2 200F  
                  __pstringtext3 201D                    __pstringtext4 2028                    __pstringtext5 2033  
                  __pstringtext6 203B                    __pstringtext7 2041                    __pstringtext8 2044  
                  __pstringtext9 2047              ??_set_CELL_CLK_HIGH 0070           __Umul8_16@multiplicand 0070  
                   ?_DIO_SET_LOW 0070                   ??_CLK_SET_HIGH 0070                         sprintf@f 00AE  
                       sprintf@s 00AD                 ___lldiv@quotient 0079                 _get_CELL_DAT_VAL 0889  
                       strncmp@l 0077                         strncmp@n 0074                         strncmp@r 0079  
                    _SSPCON1bits 0215                      _SSPCON2bits 0216                ?_set_CELL_CLK_LOW 0070  
         __end_of_lcd_set_cursor 1105                   start_segment@p 0072                   ??_DIO_SET_HIGH 0070  
                  ?_encode_digit 0079               ??_set_CELL_CLK_LOW 0070               __end_of_write4bits 1FDD  
                   ___aodiv@sign 0072   __end_of_PIN_MANAGER_Initialize 1FC2                      _print_digit 09E0  
      __end_of_set_CELL_CLK_HIGH 1E5D             __Umul8_16@multiplier 0078               __end_of_write_byte 122A  
                 lcd_backlight@p 0074                     ___aomod@sign 0072           __end_of_lcd_print_with 1F3F  
                 ?_get_scale_val 0020                __Umul8_16@product 0074  



Microchip MPLAB XC8 Assembler V2.32 build 20210201212658 
                                                                                               Thu Oct 21 22:53:46 2021

Microchip MPLAB XC8 C Compiler v2.32 (Free license) build 20210201212658 Og1 
     1                           	processor	16F1827
     2                           	pagewidth 120
     3                           	opt	flic
     4                           	psect	idataBANK0,global,class=CODE,delta=2,noexec
     5                           	psect	cinit,global,class=CODE,merge=1,delta=2
     6                           	psect	bssCOMMON,global,class=COMMON,space=1,delta=1,noexec
     7                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,noexec
     8                           	psect	dataBANK0,global,class=BANK0,space=1,delta=1,noexec
     9                           	psect	inittext,global,class=CODE,delta=2
    10                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1,noexec
    11                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,noexec
    12                           	psect	maintext,global,class=CODE,merge=1,split=1,delta=2
    13                           	psect	text1,local,class=CODE,merge=1,delta=2
    14                           	psect	text2,local,class=CODE,merge=1,delta=2
    15                           	psect	text3,local,class=CODE,merge=1,delta=2
    16                           	psect	text4,local,class=CODE,merge=1,delta=2
    17                           	psect	text5,local,class=CODE,merge=1,delta=2
    18                           	psect	text6,local,class=CODE,merge=1,delta=2
    19                           	psect	text7,local,class=CODE,merge=1,delta=2
    20                           	psect	text8,local,class=CODE,merge=1,delta=2
    21                           	psect	text9,local,class=CODE,merge=1,delta=2
    22                           	psect	text10,local,class=CODE,merge=1,delta=2
    23                           	psect	text11,local,class=CODE,merge=1,delta=2
    24                           	psect	text12,local,class=CODE,merge=1,delta=2
    25                           	psect	text13,local,class=CODE,merge=1,delta=2
    26                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=2,noexec
    27                           	dabs	1,0x7E,2
    28  0000                     
    29                           ; Version 2.32
    30                           ; Generated 02/02/2021 GMT
    31                           ; 
    32                           ; Copyright Â© 2021, Microchip Technology Inc. and its subsidiaries ("Microchip")
    33                           ; All rights reserved.
    34                           ; 
    35                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    36                           ; 
    37                           ; Redistribution and use in source and binary forms, with or without modification, are
    38                           ; permitted provided that the following conditions are met:
    39                           ; 
    40                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    41                           ;        conditions and the following disclaimer.
    42                           ; 
    43                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    44                           ;        of conditions and the following disclaimer in the documentation and/or other
    45                           ;        materials provided with the distribution. Publication is not required when
    46                           ;        this file is used in an embedded application.
    47                           ; 
    48                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    49                           ;        software without specific prior written permission.
    50                           ; 
    51                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    52                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    53                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    54                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    55                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    56                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    57                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    58                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    59                           ; 
    60                           ; 
    61                           ; Code-generator required, PIC16F1827 Definitions
    62                           ; 
    63                           ; SFR Addresses
    64  0000                     	;# 
    65  0001                     	;# 
    66  0002                     	;# 
    67  0003                     	;# 
    68  0004                     	;# 
    69  0005                     	;# 
    70  0006                     	;# 
    71  0007                     	;# 
    72  0008                     	;# 
    73  0009                     	;# 
    74  000A                     	;# 
    75  000B                     	;# 
    76  000C                     	;# 
    77  000D                     	;# 
    78  0011                     	;# 
    79  0012                     	;# 
    80  0013                     	;# 
    81  0014                     	;# 
    82  0015                     	;# 
    83  0016                     	;# 
    84  0016                     	;# 
    85  0017                     	;# 
    86  0018                     	;# 
    87  0019                     	;# 
    88  001A                     	;# 
    89  001B                     	;# 
    90  001C                     	;# 
    91  001E                     	;# 
    92  001F                     	;# 
    93  008C                     	;# 
    94  008D                     	;# 
    95  0091                     	;# 
    96  0092                     	;# 
    97  0093                     	;# 
    98  0094                     	;# 
    99  0095                     	;# 
   100  0096                     	;# 
   101  0097                     	;# 
   102  0098                     	;# 
   103  0099                     	;# 
   104  009A                     	;# 
   105  009B                     	;# 
   106  009B                     	;# 
   107  009C                     	;# 
   108  009D                     	;# 
   109  009E                     	;# 
   110  010C                     	;# 
   111  010D                     	;# 
   112  0111                     	;# 
   113  0112                     	;# 
   114  0113                     	;# 
   115  0114                     	;# 
   116  0115                     	;# 
   117  0116                     	;# 
   118  0117                     	;# 
   119  0118                     	;# 
   120  0119                     	;# 
   121  011A                     	;# 
   122  011B                     	;# 
   123  011D                     	;# 
   124  011E                     	;# 
   125  018C                     	;# 
   126  018D                     	;# 
   127  0191                     	;# 
   128  0191                     	;# 
   129  0192                     	;# 
   130  0193                     	;# 
   131  0193                     	;# 
   132  0193                     	;# 
   133  0194                     	;# 
   134  0195                     	;# 
   135  0196                     	;# 
   136  0199                     	;# 
   137  019A                     	;# 
   138  019B                     	;# 
   139  019B                     	;# 
   140  019B                     	;# 
   141  019B                     	;# 
   142  019C                     	;# 
   143  019C                     	;# 
   144  019D                     	;# 
   145  019E                     	;# 
   146  019F                     	;# 
   147  020C                     	;# 
   148  020D                     	;# 
   149  0211                     	;# 
   150  0211                     	;# 
   151  0212                     	;# 
   152  0212                     	;# 
   153  0213                     	;# 
   154  0213                     	;# 
   155  0214                     	;# 
   156  0214                     	;# 
   157  0215                     	;# 
   158  0215                     	;# 
   159  0215                     	;# 
   160  0216                     	;# 
   161  0216                     	;# 
   162  0217                     	;# 
   163  0217                     	;# 
   164  0219                     	;# 
   165  021A                     	;# 
   166  021B                     	;# 
   167  021C                     	;# 
   168  021D                     	;# 
   169  021E                     	;# 
   170  021F                     	;# 
   171  0291                     	;# 
   172  0291                     	;# 
   173  0292                     	;# 
   174  0293                     	;# 
   175  0294                     	;# 
   176  0295                     	;# 
   177  0295                     	;# 
   178  0296                     	;# 
   179  0298                     	;# 
   180  0298                     	;# 
   181  0299                     	;# 
   182  029A                     	;# 
   183  029B                     	;# 
   184  029C                     	;# 
   185  029C                     	;# 
   186  029D                     	;# 
   187  029E                     	;# 
   188  029E                     	;# 
   189  0311                     	;# 
   190  0311                     	;# 
   191  0312                     	;# 
   192  0313                     	;# 
   193  0318                     	;# 
   194  0318                     	;# 
   195  0319                     	;# 
   196  031A                     	;# 
   197  0394                     	;# 
   198  0395                     	;# 
   199  0396                     	;# 
   200  039A                     	;# 
   201  039C                     	;# 
   202  039D                     	;# 
   203  039E                     	;# 
   204  039F                     	;# 
   205  0415                     	;# 
   206  0416                     	;# 
   207  0417                     	;# 
   208  041C                     	;# 
   209  041D                     	;# 
   210  041E                     	;# 
   211  0FE4                     	;# 
   212  0FE5                     	;# 
   213  0FE6                     	;# 
   214  0FE7                     	;# 
   215  0FE8                     	;# 
   216  0FE9                     	;# 
   217  0FEA                     	;# 
   218  0FEB                     	;# 
   219  0FED                     	;# 
   220  0FEE                     	;# 
   221  0FEF                     	;# 
   222  0000                     	;# 
   223  0001                     	;# 
   224  0002                     	;# 
   225  0003                     	;# 
   226  0004                     	;# 
   227  0005                     	;# 
   228  0006                     	;# 
   229  0007                     	;# 
   230  0008                     	;# 
   231  0009                     	;# 
   232  000A                     	;# 
   233  000B                     	;# 
   234  000C                     	;# 
   235  000D                     	;# 
   236  0011                     	;# 
   237  0012                     	;# 
   238  0013                     	;# 
   239  0014                     	;# 
   240  0015                     	;# 
   241  0016                     	;# 
   242  0016                     	;# 
   243  0017                     	;# 
   244  0018                     	;# 
   245  0019                     	;# 
   246  001A                     	;# 
   247  001B                     	;# 
   248  001C                     	;# 
   249  001E                     	;# 
   250  001F                     	;# 
   251  008C                     	;# 
   252  008D                     	;# 
   253  0091                     	;# 
   254  0092                     	;# 
   255  0093                     	;# 
   256  0094                     	;# 
   257  0095                     	;# 
   258  0096                     	;# 
   259  0097                     	;# 
   260  0098                     	;# 
   261  0099                     	;# 
   262  009A                     	;# 
   263  009B                     	;# 
   264  009B                     	;# 
   265  009C                     	;# 
   266  009D                     	;# 
   267  009E                     	;# 
   268  010C                     	;# 
   269  010D                     	;# 
   270  0111                     	;# 
   271  0112                     	;# 
   272  0113                     	;# 
   273  0114                     	;# 
   274  0115                     	;# 
   275  0116                     	;# 
   276  0117                     	;# 
   277  0118                     	;# 
   278  0119                     	;# 
   279  011A                     	;# 
   280  011B                     	;# 
   281  011D                     	;# 
   282  011E                     	;# 
   283  018C                     	;# 
   284  018D                     	;# 
   285  0191                     	;# 
   286  0191                     	;# 
   287  0192                     	;# 
   288  0193                     	;# 
   289  0193                     	;# 
   290  0193                     	;# 
   291  0194                     	;# 
   292  0195                     	;# 
   293  0196                     	;# 
   294  0199                     	;# 
   295  019A                     	;# 
   296  019B                     	;# 
   297  019B                     	;# 
   298  019B                     	;# 
   299  019B                     	;# 
   300  019C                     	;# 
   301  019C                     	;# 
   302  019D                     	;# 
   303  019E                     	;# 
   304  019F                     	;# 
   305  020C                     	;# 
   306  020D                     	;# 
   307  0211                     	;# 
   308  0211                     	;# 
   309  0212                     	;# 
   310  0212                     	;# 
   311  0213                     	;# 
   312  0213                     	;# 
   313  0214                     	;# 
   314  0214                     	;# 
   315  0215                     	;# 
   316  0215                     	;# 
   317  0215                     	;# 
   318  0216                     	;# 
   319  0216                     	;# 
   320  0217                     	;# 
   321  0217                     	;# 
   322  0219                     	;# 
   323  021A                     	;# 
   324  021B                     	;# 
   325  021C                     	;# 
   326  021D                     	;# 
   327  021E                     	;# 
   328  021F                     	;# 
   329  0291                     	;# 
   330  0291                     	;# 
   331  0292                     	;# 
   332  0293                     	;# 
   333  0294                     	;# 
   334  0295                     	;# 
   335  0295                     	;# 
   336  0296                     	;# 
   337  0298                     	;# 
   338  0298                     	;# 
   339  0299                     	;# 
   340  029A                     	;# 
   341  029B                     	;# 
   342  029C                     	;# 
   343  029C                     	;# 
   344  029D                     	;# 
   345  029E                     	;# 
   346  029E                     	;# 
   347  0311                     	;# 
   348  0311                     	;# 
   349  0312                     	;# 
   350  0313                     	;# 
   351  0318                     	;# 
   352  0318                     	;# 
   353  0319                     	;# 
   354  031A                     	;# 
   355  0394                     	;# 
   356  0395                     	;# 
   357  0396                     	;# 
   358  039A                     	;# 
   359  039C                     	;# 
   360  039D                     	;# 
   361  039E                     	;# 
   362  039F                     	;# 
   363  0415                     	;# 
   364  0416                     	;# 
   365  0417                     	;# 
   366  041C                     	;# 
   367  041D                     	;# 
   368  041E                     	;# 
   369  0FE4                     	;# 
   370  0FE5                     	;# 
   371  0FE6                     	;# 
   372  0FE7                     	;# 
   373  0FE8                     	;# 
   374  0FE9                     	;# 
   375  0FEA                     	;# 
   376  0FEB                     	;# 
   377  0FED                     	;# 
   378  0FEE                     	;# 
   379  0FEF                     	;# 
   380  0000                     	;# 
   381  0001                     	;# 
   382  0002                     	;# 
   383  0003                     	;# 
   384  0004                     	;# 
   385  0005                     	;# 
   386  0006                     	;# 
   387  0007                     	;# 
   388  0008                     	;# 
   389  0009                     	;# 
   390  000A                     	;# 
   391  000B                     	;# 
   392  000C                     	;# 
   393  000D                     	;# 
   394  0011                     	;# 
   395  0012                     	;# 
   396  0013                     	;# 
   397  0014                     	;# 
   398  0015                     	;# 
   399  0016                     	;# 
   400  0016                     	;# 
   401  0017                     	;# 
   402  0018                     	;# 
   403  0019                     	;# 
   404  001A                     	;# 
   405  001B                     	;# 
   406  001C                     	;# 
   407  001E                     	;# 
   408  001F                     	;# 
   409  008C                     	;# 
   410  008D                     	;# 
   411  0091                     	;# 
   412  0092                     	;# 
   413  0093                     	;# 
   414  0094                     	;# 
   415  0095                     	;# 
   416  0096                     	;# 
   417  0097                     	;# 
   418  0098                     	;# 
   419  0099                     	;# 
   420  009A                     	;# 
   421  009B                     	;# 
   422  009B                     	;# 
   423  009C                     	;# 
   424  009D                     	;# 
   425  009E                     	;# 
   426  010C                     	;# 
   427  010D                     	;# 
   428  0111                     	;# 
   429  0112                     	;# 
   430  0113                     	;# 
   431  0114                     	;# 
   432  0115                     	;# 
   433  0116                     	;# 
   434  0117                     	;# 
   435  0118                     	;# 
   436  0119                     	;# 
   437  011A                     	;# 
   438  011B                     	;# 
   439  011D                     	;# 
   440  011E                     	;# 
   441  018C                     	;# 
   442  018D                     	;# 
   443  0191                     	;# 
   444  0191                     	;# 
   445  0192                     	;# 
   446  0193                     	;# 
   447  0193                     	;# 
   448  0193                     	;# 
   449  0194                     	;# 
   450  0195                     	;# 
   451  0196                     	;# 
   452  0199                     	;# 
   453  019A                     	;# 
   454  019B                     	;# 
   455  019B                     	;# 
   456  019B                     	;# 
   457  019B                     	;# 
   458  019C                     	;# 
   459  019C                     	;# 
   460  019D                     	;# 
   461  019E                     	;# 
   462  019F                     	;# 
   463  020C                     	;# 
   464  020D                     	;# 
   465  0211                     	;# 
   466  0211                     	;# 
   467  0212                     	;# 
   468  0212                     	;# 
   469  0213                     	;# 
   470  0213                     	;# 
   471  0214                     	;# 
   472  0214                     	;# 
   473  0215                     	;# 
   474  0215                     	;# 
   475  0215                     	;# 
   476  0216                     	;# 
   477  0216                     	;# 
   478  0217                     	;# 
   479  0217                     	;# 
   480  0219                     	;# 
   481  021A                     	;# 
   482  021B                     	;# 
   483  021C                     	;# 
   484  021D                     	;# 
   485  021E                     	;# 
   486  021F                     	;# 
   487  0291                     	;# 
   488  0291                     	;# 
   489  0292                     	;# 
   490  0293                     	;# 
   491  0294                     	;# 
   492  0295                     	;# 
   493  0295                     	;# 
   494  0296                     	;# 
   495  0298                     	;# 
   496  0298                     	;# 
   497  0299                     	;# 
   498  029A                     	;# 
   499  029B                     	;# 
   500  029C                     	;# 
   501  029C                     	;# 
   502  029D                     	;# 
   503  029E                     	;# 
   504  029E                     	;# 
   505  0311                     	;# 
   506  0311                     	;# 
   507  0312                     	;# 
   508  0313                     	;# 
   509  0318                     	;# 
   510  0318                     	;# 
   511  0319                     	;# 
   512  031A                     	;# 
   513  0394                     	;# 
   514  0395                     	;# 
   515  0396                     	;# 
   516  039A                     	;# 
   517  039C                     	;# 
   518  039D                     	;# 
   519  039E                     	;# 
   520  039F                     	;# 
   521  0415                     	;# 
   522  0416                     	;# 
   523  0417                     	;# 
   524  041C                     	;# 
   525  041D                     	;# 
   526  041E                     	;# 
   527  0FE4                     	;# 
   528  0FE5                     	;# 
   529  0FE6                     	;# 
   530  0FE7                     	;# 
   531  0FE8                     	;# 
   532  0FE9                     	;# 
   533  0FEA                     	;# 
   534  0FEB                     	;# 
   535  0FED                     	;# 
   536  0FEE                     	;# 
   537  0FEF                     	;# 
   538  0000                     	;# 
   539  0001                     	;# 
   540  0002                     	;# 
   541  0003                     	;# 
   542  0004                     	;# 
   543  0005                     	;# 
   544  0006                     	;# 
   545  0007                     	;# 
   546  0008                     	;# 
   547  0009                     	;# 
   548  000A                     	;# 
   549  000B                     	;# 
   550  000C                     	;# 
   551  000D                     	;# 
   552  0011                     	;# 
   553  0012                     	;# 
   554  0013                     	;# 
   555  0014                     	;# 
   556  0015                     	;# 
   557  0016                     	;# 
   558  0016                     	;# 
   559  0017                     	;# 
   560  0018                     	;# 
   561  0019                     	;# 
   562  001A                     	;# 
   563  001B                     	;# 
   564  001C                     	;# 
   565  001E                     	;# 
   566  001F                     	;# 
   567  008C                     	;# 
   568  008D                     	;# 
   569  0091                     	;# 
   570  0092                     	;# 
   571  0093                     	;# 
   572  0094                     	;# 
   573  0095                     	;# 
   574  0096                     	;# 
   575  0097                     	;# 
   576  0098                     	;# 
   577  0099                     	;# 
   578  009A                     	;# 
   579  009B                     	;# 
   580  009B                     	;# 
   581  009C                     	;# 
   582  009D                     	;# 
   583  009E                     	;# 
   584  010C                     	;# 
   585  010D                     	;# 
   586  0111                     	;# 
   587  0112                     	;# 
   588  0113                     	;# 
   589  0114                     	;# 
   590  0115                     	;# 
   591  0116                     	;# 
   592  0117                     	;# 
   593  0118                     	;# 
   594  0119                     	;# 
   595  011A                     	;# 
   596  011B                     	;# 
   597  011D                     	;# 
   598  011E                     	;# 
   599  018C                     	;# 
   600  018D                     	;# 
   601  0191                     	;# 
   602  0191                     	;# 
   603  0192                     	;# 
   604  0193                     	;# 
   605  0193                     	;# 
   606  0193                     	;# 
   607  0194                     	;# 
   608  0195                     	;# 
   609  0196                     	;# 
   610  0199                     	;# 
   611  019A                     	;# 
   612  019B                     	;# 
   613  019B                     	;# 
   614  019B                     	;# 
   615  019B                     	;# 
   616  019C                     	;# 
   617  019C                     	;# 
   618  019D                     	;# 
   619  019E                     	;# 
   620  019F                     	;# 
   621  020C                     	;# 
   622  020D                     	;# 
   623  0211                     	;# 
   624  0211                     	;# 
   625  0212                     	;# 
   626  0212                     	;# 
   627  0213                     	;# 
   628  0213                     	;# 
   629  0214                     	;# 
   630  0214                     	;# 
   631  0215                     	;# 
   632  0215                     	;# 
   633  0215                     	;# 
   634  0216                     	;# 
   635  0216                     	;# 
   636  0217                     	;# 
   637  0217                     	;# 
   638  0219                     	;# 
   639  021A                     	;# 
   640  021B                     	;# 
   641  021C                     	;# 
   642  021D                     	;# 
   643  021E                     	;# 
   644  021F                     	;# 
   645  0291                     	;# 
   646  0291                     	;# 
   647  0292                     	;# 
   648  0293                     	;# 
   649  0294                     	;# 
   650  0295                     	;# 
   651  0295                     	;# 
   652  0296                     	;# 
   653  0298                     	;# 
   654  0298                     	;# 
   655  0299                     	;# 
   656  029A                     	;# 
   657  029B                     	;# 
   658  029C                     	;# 
   659  029C                     	;# 
   660  029D                     	;# 
   661  029E                     	;# 
   662  029E                     	;# 
   663  0311                     	;# 
   664  0311                     	;# 
   665  0312                     	;# 
   666  0313                     	;# 
   667  0318                     	;# 
   668  0318                     	;# 
   669  0319                     	;# 
   670  031A                     	;# 
   671  0394                     	;# 
   672  0395                     	;# 
   673  0396                     	;# 
   674  039A                     	;# 
   675  039C                     	;# 
   676  039D                     	;# 
   677  039E                     	;# 
   678  039F                     	;# 
   679  0415                     	;# 
   680  0416                     	;# 
   681  0417                     	;# 
   682  041C                     	;# 
   683  041D                     	;# 
   684  041E                     	;# 
   685  0FE4                     	;# 
   686  0FE5                     	;# 
   687  0FE6                     	;# 
   688  0FE7                     	;# 
   689  0FE8                     	;# 
   690  0FE9                     	;# 
   691  0FEA                     	;# 
   692  0FEB                     	;# 
   693  0FED                     	;# 
   694  0FEE                     	;# 
   695  0FEF                     	;# 
   696  0000                     	;# 
   697  0001                     	;# 
   698  0002                     	;# 
   699  0003                     	;# 
   700  0004                     	;# 
   701  0005                     	;# 
   702  0006                     	;# 
   703  0007                     	;# 
   704  0008                     	;# 
   705  0009                     	;# 
   706  000A                     	;# 
   707  000B                     	;# 
   708  000C                     	;# 
   709  000D                     	;# 
   710  0011                     	;# 
   711  0012                     	;# 
   712  0013                     	;# 
   713  0014                     	;# 
   714  0015                     	;# 
   715  0016                     	;# 
   716  0016                     	;# 
   717  0017                     	;# 
   718  0018                     	;# 
   719  0019                     	;# 
   720  001A                     	;# 
   721  001B                     	;# 
   722  001C                     	;# 
   723  001E                     	;# 
   724  001F                     	;# 
   725  008C                     	;# 
   726  008D                     	;# 
   727  0091                     	;# 
   728  0092                     	;# 
   729  0093                     	;# 
   730  0094                     	;# 
   731  0095                     	;# 
   732  0096                     	;# 
   733  0097                     	;# 
   734  0098                     	;# 
   735  0099                     	;# 
   736  009A                     	;# 
   737  009B                     	;# 
   738  009B                     	;# 
   739  009C                     	;# 
   740  009D                     	;# 
   741  009E                     	;# 
   742  010C                     	;# 
   743  010D                     	;# 
   744  0111                     	;# 
   745  0112                     	;# 
   746  0113                     	;# 
   747  0114                     	;# 
   748  0115                     	;# 
   749  0116                     	;# 
   750  0117                     	;# 
   751  0118                     	;# 
   752  0119                     	;# 
   753  011A                     	;# 
   754  011B                     	;# 
   755  011D                     	;# 
   756  011E                     	;# 
   757  018C                     	;# 
   758  018D                     	;# 
   759  0191                     	;# 
   760  0191                     	;# 
   761  0192                     	;# 
   762  0193                     	;# 
   763  0193                     	;# 
   764  0193                     	;# 
   765  0194                     	;# 
   766  0195                     	;# 
   767  0196                     	;# 
   768  0199                     	;# 
   769  019A                     	;# 
   770  019B                     	;# 
   771  019B                     	;# 
   772  019B                     	;# 
   773  019B                     	;# 
   774  019C                     	;# 
   775  019C                     	;# 
   776  019D                     	;# 
   777  019E                     	;# 
   778  019F                     	;# 
   779  020C                     	;# 
   780  020D                     	;# 
   781  0211                     	;# 
   782  0211                     	;# 
   783  0212                     	;# 
   784  0212                     	;# 
   785  0213                     	;# 
   786  0213                     	;# 
   787  0214                     	;# 
   788  0214                     	;# 
   789  0215                     	;# 
   790  0215                     	;# 
   791  0215                     	;# 
   792  0216                     	;# 
   793  0216                     	;# 
   794  0217                     	;# 
   795  0217                     	;# 
   796  0219                     	;# 
   797  021A                     	;# 
   798  021B                     	;# 
   799  021C                     	;# 
   800  021D                     	;# 
   801  021E                     	;# 
   802  021F                     	;# 
   803  0291                     	;# 
   804  0291                     	;# 
   805  0292                     	;# 
   806  0293                     	;# 
   807  0294                     	;# 
   808  0295                     	;# 
   809  0295                     	;# 
   810  0296                     	;# 
   811  0298                     	;# 
   812  0298                     	;# 
   813  0299                     	;# 
   814  029A                     	;# 
   815  029B                     	;# 
   816  029C                     	;# 
   817  029C                     	;# 
   818  029D                     	;# 
   819  029E                     	;# 
   820  029E                     	;# 
   821  0311                     	;# 
   822  0311                     	;# 
   823  0312                     	;# 
   824  0313                     	;# 
   825  0318                     	;# 
   826  0318                     	;# 
   827  0319                     	;# 
   828  031A                     	;# 
   829  0394                     	;# 
   830  0395                     	;# 
   831  0396                     	;# 
   832  039A                     	;# 
   833  039C                     	;# 
   834  039D                     	;# 
   835  039E                     	;# 
   836  039F                     	;# 
   837  0415                     	;# 
   838  0416                     	;# 
   839  0417                     	;# 
   840  041C                     	;# 
   841  041D                     	;# 
   842  041E                     	;# 
   843  0FE4                     	;# 
   844  0FE5                     	;# 
   845  0FE6                     	;# 
   846  0FE7                     	;# 
   847  0FE8                     	;# 
   848  0FE9                     	;# 
   849  0FEA                     	;# 
   850  0FEB                     	;# 
   851  0FED                     	;# 
   852  0FEE                     	;# 
   853  0FEF                     	;# 
   854  0000                     	;# 
   855  0001                     	;# 
   856  0002                     	;# 
   857  0003                     	;# 
   858  0004                     	;# 
   859  0005                     	;# 
   860  0006                     	;# 
   861  0007                     	;# 
   862  0008                     	;# 
   863  0009                     	;# 
   864  000A                     	;# 
   865  000B                     	;# 
   866  000C                     	;# 
   867  000D                     	;# 
   868  0011                     	;# 
   869  0012                     	;# 
   870  0013                     	;# 
   871  0014                     	;# 
   872  0015                     	;# 
   873  0016                     	;# 
   874  0016                     	;# 
   875  0017                     	;# 
   876  0018                     	;# 
   877  0019                     	;# 
   878  001A                     	;# 
   879  001B                     	;# 
   880  001C                     	;# 
   881  001E                     	;# 
   882  001F                     	;# 
   883  008C                     	;# 
   884  008D                     	;# 
   885  0091                     	;# 
   886  0092                     	;# 
   887  0093                     	;# 
   888  0094                     	;# 
   889  0095                     	;# 
   890  0096                     	;# 
   891  0097                     	;# 
   892  0098                     	;# 
   893  0099                     	;# 
   894  009A                     	;# 
   895  009B                     	;# 
   896  009B                     	;# 
   897  009C                     	;# 
   898  009D                     	;# 
   899  009E                     	;# 
   900  010C                     	;# 
   901  010D                     	;# 
   902  0111                     	;# 
   903  0112                     	;# 
   904  0113                     	;# 
   905  0114                     	;# 
   906  0115                     	;# 
   907  0116                     	;# 
   908  0117                     	;# 
   909  0118                     	;# 
   910  0119                     	;# 
   911  011A                     	;# 
   912  011B                     	;# 
   913  011D                     	;# 
   914  011E                     	;# 
   915  018C                     	;# 
   916  018D                     	;# 
   917  0191                     	;# 
   918  0191                     	;# 
   919  0192                     	;# 
   920  0193                     	;# 
   921  0193                     	;# 
   922  0193                     	;# 
   923  0194                     	;# 
   924  0195                     	;# 
   925  0196                     	;# 
   926  0199                     	;# 
   927  019A                     	;# 
   928  019B                     	;# 
   929  019B                     	;# 
   930  019B                     	;# 
   931  019B                     	;# 
   932  019C                     	;# 
   933  019C                     	;# 
   934  019D                     	;# 
   935  019E                     	;# 
   936  019F                     	;# 
   937  020C                     	;# 
   938  020D                     	;# 
   939  0211                     	;# 
   940  0211                     	;# 
   941  0212                     	;# 
   942  0212                     	;# 
   943  0213                     	;# 
   944  0213                     	;# 
   945  0214                     	;# 
   946  0214                     	;# 
   947  0215                     	;# 
   948  0215                     	;# 
   949  0215                     	;# 
   950  0216                     	;# 
   951  0216                     	;# 
   952  0217                     	;# 
   953  0217                     	;# 
   954  0219                     	;# 
   955  021A                     	;# 
   956  021B                     	;# 
   957  021C                     	;# 
   958  021D                     	;# 
   959  021E                     	;# 
   960  021F                     	;# 
   961  0291                     	;# 
   962  0291                     	;# 
   963  0292                     	;# 
   964  0293                     	;# 
   965  0294                     	;# 
   966  0295                     	;# 
   967  0295                     	;# 
   968  0296                     	;# 
   969  0298                     	;# 
   970  0298                     	;# 
   971  0299                     	;# 
   972  029A                     	;# 
   973  029B                     	;# 
   974  029C                     	;# 
   975  029C                     	;# 
   976  029D                     	;# 
   977  029E                     	;# 
   978  029E                     	;# 
   979  0311                     	;# 
   980  0311                     	;# 
   981  0312                     	;# 
   982  0313                     	;# 
   983  0318                     	;# 
   984  0318                     	;# 
   985  0319                     	;# 
   986  031A                     	;# 
   987  0394                     	;# 
   988  0395                     	;# 
   989  0396                     	;# 
   990  039A                     	;# 
   991  039C                     	;# 
   992  039D                     	;# 
   993  039E                     	;# 
   994  039F                     	;# 
   995  0415                     	;# 
   996  0416                     	;# 
   997  0417                     	;# 
   998  041C                     	;# 
   999  041D                     	;# 
  1000  041E                     	;# 
  1001  0FE4                     	;# 
  1002  0FE5                     	;# 
  1003  0FE6                     	;# 
  1004  0FE7                     	;# 
  1005  0FE8                     	;# 
  1006  0FE9                     	;# 
  1007  0FEA                     	;# 
  1008  0FEB                     	;# 
  1009  0FED                     	;# 
  1010  0FEE                     	;# 
  1011  0FEF                     	;# 
  1012                           
  1013                           	psect	idataBANK0
  1014  06A7                     __pidataBANK0:
  1015                           
  1016                           ;initializer for _segdata
  1017  06A7  343F               	retlw	63
  1018  06A8  3406               	retlw	6
  1019  06A9  345B               	retlw	91
  1020  06AA  344F               	retlw	79
  1021  06AB  3466               	retlw	102
  1022  06AC  346D               	retlw	109
  1023  06AD  347D               	retlw	125
  1024  06AE  3407               	retlw	7
  1025  06AF  347F               	retlw	127
  1026  06B0  346F               	retlw	111
  1027                           
  1028                           ;initializer for main@F2513
  1029  06B1  34FF               	retlw	255
  1030  06B2  34FF               	retlw	255
  1031  06B3  34FF               	retlw	255
  1032  06B4  34FF               	retlw	255
  1033  000C                     _PORTAbits	set	12
  1034  0097                     _WDTCON	set	151
  1035  0098                     _OSCTUNE	set	152
  1036  0099                     _OSCCON	set	153
  1037  0095                     _OPTION_REGbits	set	149
  1038  008D                     _TRISB	set	141
  1039  008C                     _TRISA	set	140
  1040  0116                     _BORCON	set	278
  1041  011E                     _APFCON1	set	286
  1042  011D                     _APFCON0	set	285
  1043  010D                     _LATB	set	269
  1044  010C                     _LATA	set	268
  1045  018C                     _ANSELA	set	396
  1046  018D                     _ANSELB	set	397
  1047  0215                     _SSPCON1bits	set	533
  1048  0214                     _SSPSTATbits	set	532
  1049  0211                     _SSPBUF	set	529
  1050  0216                     _SSPCON2bits	set	534
  1051  0214                     _SSPSTAT	set	532
  1052  0216                     _SSPCON2	set	534
  1053  020C                     _WPUA	set	524
  1054  020D                     _WPUB	set	525
  1055                           
  1056                           	psect	cinit
  1057  07EC                     start_initialization:	
  1058                           ; #config settings
  1059                           
  1060  07EC                     __initialization:
  1061                           
  1062                           ; Initialize objects allocated to BANK0
  1063  07EC  30A7               	movlw	low __pidataBANK0
  1064  07ED  0084               	movwf	4
  1065  07EE  3086               	movlw	(high __pidataBANK0)| (0+128)
  1066  07EF  0085               	movwf	5
  1067  07F0  3020               	movlw	low __pdataBANK0
  1068  07F1  0086               	movwf	6
  1069  07F2  3000               	movlw	high __pdataBANK0
  1070  07F3  0087               	movwf	7
  1071  07F4  300E               	movlw	14
  1072  07F5  3186  2681  3187   	fcall	init_ram
  1073                           
  1074                           ; Clear objects allocated to COMMON
  1075  07F8  01FD               	clrf	__pbssCOMMON& (0+127)
  1076                           
  1077                           ; Clear objects allocated to BANK0
  1078  07F9  01B6               	clrf	__pbssBANK0& (0+127)
  1079  07FA  01B7               	clrf	(__pbssBANK0+1)& (0+127)
  1080  07FB  01B8               	clrf	(__pbssBANK0+2)& (0+127)
  1081  07FC  01B9               	clrf	(__pbssBANK0+3)& (0+127)
  1082  07FD                     end_of_initialization:	
  1083                           ;End of C runtime variable initialization code
  1084                           
  1085  07FD                     __end_of__initialization:
  1086  07FD  0020               	movlb	0
  1087  07FE  3187  2F4F         	ljmp	_main	;jump to C main() function
  1088                           
  1089                           	psect	bssCOMMON
  1090  007D                     __pbssCOMMON:
  1091  007D                     _m_brightness:
  1092  007D                     	ds	1
  1093                           
  1094                           	psect	bssBANK0
  1095  0036                     __pbssBANK0:
  1096  0036                     clear_segment@F2506:
  1097  0036                     	ds	4
  1098                           
  1099                           	psect	dataBANK0
  1100  0020                     __pdataBANK0:
  1101  0020                     _segdata:
  1102  0020                     	ds	10
  1103  002A                     main@F2513:
  1104  002A                     	ds	4
  1105                           
  1106                           	psect	inittext
  1107  0681                     init_ram:
  1108  0681  00FE               	movwf	btemp
  1109  0682                     initloop:
  1110  0682  0012               	moviw fsr0++
  1111  0683  001E               	movwi fsr1++
  1112  0684  0BFE               	decfsz	btemp,f
  1113  0685  2E82               	goto	initloop
  1114  0686  3400               	retlw	0
  1115                           
  1116                           	psect	cstackCOMMON
  1117  0070                     __pcstackCOMMON:
  1118  0070                     ?_OSCILLATOR_Initialize:
  1119  0070                     ??_OSCILLATOR_Initialize:	
  1120                           ; 1 bytes @ 0x0
  1121                           
  1122  0070                     ?_WDT_Initialize:	
  1123                           ; 1 bytes @ 0x0
  1124                           
  1125  0070                     ??_WDT_Initialize:	
  1126                           ; 1 bytes @ 0x0
  1127                           
  1128  0070                     ?_clear_segment:	
  1129                           ; 1 bytes @ 0x0
  1130                           
  1131  0070                     ?_encode_digit:	
  1132                           ; 1 bytes @ 0x0
  1133                           
  1134  0070                     ??_encode_digit:	
  1135                           ; 1 bytes @ 0x0
  1136                           
  1137  0070                     ?_set_brigthness:	
  1138                           ; 1 bytes @ 0x0
  1139                           
  1140  0070                     ?_PIN_MANAGER_Initialize:	
  1141                           ; 1 bytes @ 0x0
  1142                           
  1143  0070                     ??_PIN_MANAGER_Initialize:	
  1144                           ; 1 bytes @ 0x0
  1145                           
  1146  0070                     ?_SYSTEM_Initialize:	
  1147                           ; 1 bytes @ 0x0
  1148                           
  1149  0070                     ??_SYSTEM_Initialize:	
  1150                           ; 1 bytes @ 0x0
  1151                           
  1152  0070                     ?_main:	
  1153                           ; 1 bytes @ 0x0
  1154                           
  1155  0070                     ?_bit_delay:	
  1156                           ; 1 bytes @ 0x0
  1157                           
  1158  0070                     ??_bit_delay:	
  1159                           ; 1 bytes @ 0x0
  1160                           
  1161  0070                     ?_start_segment:	
  1162                           ; 1 bytes @ 0x0
  1163                           
  1164  0070                     ??_start_segment:	
  1165                           ; 1 bytes @ 0x0
  1166                           
  1167  0070                     ?_stop_segment:	
  1168                           ; 1 bytes @ 0x0
  1169                           
  1170  0070                     ??_stop_segment:	
  1171                           ; 1 bytes @ 0x0
  1172                           
  1173  0070                     ?_get_DIO_PIN_value:	
  1174                           ; 1 bytes @ 0x0
  1175                           
  1176  0070                     ??_get_DIO_PIN_value:	
  1177                           ; 1 bytes @ 0x0
  1178                           
  1179  0070                     ?_write_byte:	
  1180                           ; 1 bytes @ 0x0
  1181                           
  1182  0070                     set_brigthness@on:	
  1183                           ; 1 bytes @ 0x0
  1184                           
  1185  0070                     encode_digit@digit:	
  1186                           ; 1 bytes @ 0x0
  1187                           
  1188                           
  1189                           ; 1 bytes @ 0x0
  1190  0070                     	ds	1
  1191  0071                     ??_set_brigthness:
  1192  0071                     ??_write_byte:	
  1193                           ; 1 bytes @ 0x1
  1194                           
  1195                           
  1196                           ; 1 bytes @ 0x1
  1197  0071                     	ds	1
  1198  0072                     write_byte@b:
  1199  0072                     set_brigthness@brightness:	
  1200                           ; 1 bytes @ 0x2
  1201                           
  1202                           
  1203                           ; 1 bytes @ 0x2
  1204  0072                     	ds	1
  1205  0073                     write_byte@ack:
  1206                           
  1207                           ; 1 bytes @ 0x3
  1208  0073                     	ds	1
  1209  0074                     write_byte@data:
  1210                           
  1211                           ; 1 bytes @ 0x4
  1212  0074                     	ds	1
  1213  0075                     write_byte@i:
  1214                           
  1215                           ; 1 bytes @ 0x5
  1216  0075                     	ds	1
  1217  0076                     ?_set_segments:
  1218  0076                     set_segments@length:	
  1219                           ; 1 bytes @ 0x6
  1220                           
  1221                           
  1222                           ; 1 bytes @ 0x6
  1223  0076                     	ds	1
  1224  0077                     set_segments@pos:
  1225                           
  1226                           ; 1 bytes @ 0x7
  1227  0077                     	ds	1
  1228  0078                     ??_set_segments:
  1229                           
  1230                           ; 1 bytes @ 0x8
  1231  0078                     	ds	1
  1232  0079                     set_segments@segments:
  1233                           
  1234                           ; 1 bytes @ 0x9
  1235  0079                     	ds	1
  1236  007A                     set_segments@k:
  1237                           
  1238                           ; 1 bytes @ 0xA
  1239  007A                     	ds	1
  1240  007B                     ??_clear_segment:
  1241                           
  1242                           ; 1 bytes @ 0xB
  1243  007B                     	ds	1
  1244  007C                     ??_main:
  1245                           
  1246                           ; 1 bytes @ 0xC
  1247  007C                     	ds	1
  1248                           
  1249                           	psect	cstackBANK0
  1250  002E                     __pcstackBANK0:
  1251  002E                     clear_segment@data:
  1252                           
  1253                           ; 4 bytes @ 0x0
  1254  002E                     	ds	4
  1255  0032                     main@data:
  1256                           
  1257                           ; 4 bytes @ 0x4
  1258  0032                     	ds	4
  1259                           
  1260                           	psect	maintext
  1261  074F                     __pmaintext:	
  1262 ;;
  1263 ;;Main: autosize = 0, tempsize = 1, incstack = 0, save=0
  1264 ;;
  1265 ;; *************** function _main *****************
  1266 ;; Defined at:
  1267 ;;		line 6 in file "main.c"
  1268 ;; Parameters:    Size  Location     Type
  1269 ;;		None
  1270 ;; Auto vars:     Size  Location     Type
  1271 ;;  data            4    4[BANK0 ] unsigned char [4]
  1272 ;;  k               1    0        unsigned char 
  1273 ;; Return value:  Size  Location     Type
  1274 ;;                  1    wreg      void 
  1275 ;; Registers used:
  1276 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  1277 ;; Tracked objects:
  1278 ;;		On entry : B1F/0
  1279 ;;		On exit  : 0/0
  1280 ;;		Unchanged: 0/0
  1281 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  1282 ;;      Params:         0       0       0       0       0       0
  1283 ;;      Locals:         0       4       0       0       0       0
  1284 ;;      Temps:          1       0       0       0       0       0
  1285 ;;      Totals:         1       4       0       0       0       0
  1286 ;;Total ram usage:        5 bytes
  1287 ;; Hardware stack levels required when called: 4
  1288 ;; This function calls:
  1289 ;;		_SYSTEM_Initialize
  1290 ;;		_clear_segment
  1291 ;;		_encode_digit
  1292 ;;		_set_brigthness
  1293 ;;		_set_segments
  1294 ;; This function is called by:
  1295 ;;		Startup code after reset
  1296 ;; This function uses a non-reentrant model
  1297 ;;
  1298                           
  1299                           
  1300                           ;psect for function _main
  1301  074F                     _main:
  1302  074F                     l1153:	
  1303                           ;incstack = 0
  1304                           ; Regs used in _main: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
  1305                           
  1306                           
  1307                           ;main.c: 9:     SYSTEM_Initialize();
  1308  074F  3186  269D  3187   	fcall	_SYSTEM_Initialize
  1309  0752                     l1155:
  1310                           
  1311                           ;main.c: 11:     ANSELA = 0x00;
  1312  0752  0023               	movlb	3	; select bank3
  1313  0753  018C               	clrf	12	;volatile
  1314  0754                     l1157:
  1315                           
  1316                           ;main.c: 12:     TRISA = 0x00;
  1317  0754  0021               	movlb	1	; select bank1
  1318  0755  018C               	clrf	12	;volatile
  1319  0756                     l1159:
  1320                           
  1321                           ;main.c: 13:     LATA = 0x00;
  1322  0756  0022               	movlb	2	; select bank2
  1323  0757  018C               	clrf	12	;volatile
  1324  0758                     l1161:
  1325                           
  1326                           ;main.c: 16:     LATA |= 0x80;
  1327  0758  178C               	bsf	12,7	;volatile
  1328  0759                     l1163:
  1329                           
  1330                           ;main.c: 18:     uint8_t data[] = {0xff, 0xff, 0xff, 0xff};
  1331  0759  0020               	movlb	0	; select bank0
  1332  075A  082D               	movf	main@F2513+3,w
  1333  075B  00B5               	movwf	main@data+3
  1334  075C  082C               	movf	main@F2513+2,w
  1335  075D  00B4               	movwf	main@data+2
  1336  075E  082B               	movf	main@F2513+1,w
  1337  075F  00B3               	movwf	main@data+1
  1338  0760  082A               	movf	main@F2513,w
  1339  0761  00B2               	movwf	main@data
  1340  0762                     l1165:
  1341                           
  1342                           ;main.c: 20:     clear_segment();
  1343  0762  3186  26D9  3187   	fcall	_clear_segment
  1344  0765                     l1167:
  1345                           
  1346                           ;main.c: 22:     data[0] = encode_digit(1);
  1347  0765  3001               	movlw	1
  1348  0766  3186  2695  3187   	fcall	_encode_digit
  1349  0769  00FC               	movwf	??_main
  1350  076A  087C               	movf	??_main,w
  1351  076B  0020               	movlb	0	; select bank0
  1352  076C  00B2               	movwf	main@data
  1353  076D                     l1169:
  1354                           
  1355                           ;main.c: 23:     data[1] = encode_digit(9);
  1356  076D  3009               	movlw	9
  1357  076E  3186  2695  3187   	fcall	_encode_digit
  1358  0771  00FC               	movwf	??_main
  1359  0772  087C               	movf	??_main,w
  1360  0773  0020               	movlb	0	; select bank0
  1361  0774  00B3               	movwf	main@data+1
  1362  0775                     l1171:
  1363                           
  1364                           ;main.c: 24:     data[2] = encode_digit(8);
  1365  0775  3008               	movlw	8
  1366  0776  3186  2695  3187   	fcall	_encode_digit
  1367  0779  00FC               	movwf	??_main
  1368  077A  087C               	movf	??_main,w
  1369  077B  0020               	movlb	0	; select bank0
  1370  077C  00B4               	movwf	main@data+2
  1371  077D                     l1173:
  1372                           
  1373                           ;main.c: 25:     data[3] = encode_digit(4);
  1374  077D  3004               	movlw	4
  1375  077E  3186  2695  3187   	fcall	_encode_digit
  1376  0781  00FC               	movwf	??_main
  1377  0782  087C               	movf	??_main,w
  1378  0783  0020               	movlb	0	; select bank0
  1379  0784  00B5               	movwf	main@data+3
  1380  0785                     l1175:
  1381                           
  1382                           ;main.c: 28:     set_brigthness(0x0f, 1);
  1383  0785  01F0               	clrf	set_brigthness@on
  1384  0786  0AF0               	incf	set_brigthness@on,f
  1385  0787  300F               	movlw	15
  1386  0788  3186  26EC  3187   	fcall	_set_brigthness
  1387  078B                     l1177:
  1388                           
  1389                           ;main.c: 29:     set_segments(data, 4, 0);
  1390  078B  3004               	movlw	4
  1391  078C  00FC               	movwf	??_main
  1392  078D  087C               	movf	??_main,w
  1393  078E  00F6               	movwf	set_segments@length
  1394  078F  01F7               	clrf	set_segments@pos
  1395  0790  3032               	movlw	(low (main@data| 0))& (0+255)
  1396  0791  3187  2715  3187   	fcall	_set_segments
  1397  0794                     l1179:
  1398  0794                     l125:	
  1399                           ;main.c: 34:     while (1)
  1400                           
  1401  0794                     l126:	
  1402                           ;main.c: 35:     {;main.c: 43:     }
  1403                           
  1404  0794  2F94               	goto	l125
  1405  0795  3180  2802         	ljmp	start
  1406  0797                     __end_of_main:
  1407                           
  1408                           	psect	text1
  1409  06EC                     __ptext1:	
  1410 ;; *************** function _set_brigthness *****************
  1411 ;; Defined at:
  1412 ;;		line 132 in file "tm1637.c"
  1413 ;; Parameters:    Size  Location     Type
  1414 ;;  brightness      1    wreg     unsigned char 
  1415 ;;  on              1    0[COMMON] unsigned char 
  1416 ;; Auto vars:     Size  Location     Type
  1417 ;;  brightness      1    2[COMMON] unsigned char 
  1418 ;; Return value:  Size  Location     Type
  1419 ;;                  1    wreg      void 
  1420 ;; Registers used:
  1421 ;;		wreg, status,2, status,0
  1422 ;; Tracked objects:
  1423 ;;		On entry : 0/0
  1424 ;;		On exit  : 0/0
  1425 ;;		Unchanged: 0/0
  1426 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  1427 ;;      Params:         1       0       0       0       0       0
  1428 ;;      Locals:         1       0       0       0       0       0
  1429 ;;      Temps:          1       0       0       0       0       0
  1430 ;;      Totals:         3       0       0       0       0       0
  1431 ;;Total ram usage:        3 bytes
  1432 ;; Hardware stack levels used: 1
  1433 ;; This function calls:
  1434 ;;		Nothing
  1435 ;; This function is called by:
  1436 ;;		_main
  1437 ;; This function uses a non-reentrant model
  1438 ;;
  1439                           
  1440                           
  1441                           ;psect for function _set_brigthness
  1442  06EC                     _set_brigthness:
  1443                           
  1444                           ;incstack = 0
  1445                           ; Regs used in _set_brigthness: [wreg+status,2+status,0]
  1446                           ;set_brigthness@brightness stored from wreg
  1447  06EC  00F2               	movwf	set_brigthness@brightness
  1448  06ED                     l1147:
  1449                           
  1450                           ;tm1637.c: 133:     if(on == 1){
  1451  06ED  0370               	decf	set_brigthness@on,w
  1452  06EE  1D03               	btfss	3,2
  1453  06EF  2EF1               	goto	u181
  1454  06F0  2EF2               	goto	u180
  1455  06F1                     u181:
  1456  06F1  2EF9               	goto	l1151
  1457  06F2                     u180:
  1458  06F2                     l1149:
  1459                           
  1460                           ;tm1637.c: 134:         m_brightness = (brightness & 0x7 | 0x08);
  1461  06F2  0872               	movf	set_brigthness@brightness,w
  1462  06F3  3907               	andlw	7
  1463  06F4  3808               	iorlw	8
  1464  06F5  00F1               	movwf	??_set_brigthness
  1465  06F6  0871               	movf	??_set_brigthness,w
  1466  06F7  00FD               	movwf	_m_brightness
  1467                           
  1468                           ;tm1637.c: 135:     }else{
  1469  06F8  2EFE               	goto	l171
  1470  06F9                     l1151:
  1471                           
  1472                           ;tm1637.c: 136:         m_brightness = (brightness & 0x7 | 0x00);
  1473  06F9  0872               	movf	set_brigthness@brightness,w
  1474  06FA  3907               	andlw	7
  1475  06FB  00F1               	movwf	??_set_brigthness
  1476  06FC  0871               	movf	??_set_brigthness,w
  1477  06FD  00FD               	movwf	_m_brightness
  1478  06FE                     l171:
  1479  06FE  0008               	return
  1480  06FF                     __end_of_set_brigthness:
  1481                           
  1482                           	psect	text2
  1483  0695                     __ptext2:	
  1484 ;; *************** function _encode_digit *****************
  1485 ;; Defined at:
  1486 ;;		line 183 in file "tm1637.c"
  1487 ;; Parameters:    Size  Location     Type
  1488 ;;  digit           1    wreg     unsigned char 
  1489 ;; Auto vars:     Size  Location     Type
  1490 ;;  digit           1    0[COMMON] unsigned char 
  1491 ;; Return value:  Size  Location     Type
  1492 ;;                  1    wreg      unsigned char 
  1493 ;; Registers used:
  1494 ;;		wreg, fsr1l, fsr1h, status,2, status,0
  1495 ;; Tracked objects:
  1496 ;;		On entry : 0/0
  1497 ;;		On exit  : 0/0
  1498 ;;		Unchanged: 0/0
  1499 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  1500 ;;      Params:         0       0       0       0       0       0
  1501 ;;      Locals:         1       0       0       0       0       0
  1502 ;;      Temps:          0       0       0       0       0       0
  1503 ;;      Totals:         1       0       0       0       0       0
  1504 ;;Total ram usage:        1 bytes
  1505 ;; Hardware stack levels used: 1
  1506 ;; This function calls:
  1507 ;;		Nothing
  1508 ;; This function is called by:
  1509 ;;		_main
  1510 ;; This function uses a non-reentrant model
  1511 ;;
  1512                           
  1513                           
  1514                           ;psect for function _encode_digit
  1515  0695                     _encode_digit:
  1516                           
  1517                           ;incstack = 0
  1518                           ; Regs used in _encode_digit: [wreg+fsr1l+fsr1h+status,2+status,0]
  1519                           ;encode_digit@digit stored from wreg
  1520  0695  00F0               	movwf	encode_digit@digit
  1521  0696                     l1143:
  1522                           
  1523                           ;tm1637.c: 184:     return segdata[digit & 0x0f];
  1524  0696  0870               	movf	encode_digit@digit,w
  1525  0697  390F               	andlw	15
  1526  0698  3E20               	addlw	(low (_segdata| 0))& (0+255)
  1527  0699  0086               	movwf	6
  1528  069A  0187               	clrf	7
  1529  069B  0801               	movf	1,w
  1530  069C                     l185:
  1531  069C  0008               	return
  1532  069D                     __end_of_encode_digit:
  1533                           
  1534                           	psect	text3
  1535  06D9                     __ptext3:	
  1536 ;; *************** function _clear_segment *****************
  1537 ;; Defined at:
  1538 ;;		line 173 in file "tm1637.c"
  1539 ;; Parameters:    Size  Location     Type
  1540 ;;		None
  1541 ;; Auto vars:     Size  Location     Type
  1542 ;;  data            4    0[BANK0 ] unsigned char [4]
  1543 ;; Return value:  Size  Location     Type
  1544 ;;                  1    wreg      void 
  1545 ;; Registers used:
  1546 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  1547 ;; Tracked objects:
  1548 ;;		On entry : 0/0
  1549 ;;		On exit  : 0/0
  1550 ;;		Unchanged: 0/0
  1551 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  1552 ;;      Params:         0       0       0       0       0       0
  1553 ;;      Locals:         0       4       0       0       0       0
  1554 ;;      Temps:          1       0       0       0       0       0
  1555 ;;      Totals:         1       4       0       0       0       0
  1556 ;;Total ram usage:        5 bytes
  1557 ;; Hardware stack levels used: 1
  1558 ;; Hardware stack levels required when called: 3
  1559 ;; This function calls:
  1560 ;;		_set_segments
  1561 ;; This function is called by:
  1562 ;;		_main
  1563 ;; This function uses a non-reentrant model
  1564 ;;
  1565                           
  1566                           
  1567                           ;psect for function _clear_segment
  1568  06D9                     _clear_segment:
  1569  06D9                     l1139:	
  1570                           ;incstack = 0
  1571                           ; Regs used in _clear_segment: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
  1572                           
  1573                           
  1574                           ;tm1637.c: 174:     uint8_t data[] = { 0, 0, 0, 0 };
  1575  06D9  3000               	movlw	0
  1576  06DA  0020               	movlb	0	; select bank0
  1577  06DB  00B1               	movwf	clear_segment@data+3
  1578  06DC  3000               	movlw	0
  1579  06DD  00B0               	movwf	clear_segment@data+2
  1580  06DE  3000               	movlw	0
  1581  06DF  00AF               	movwf	clear_segment@data+1
  1582  06E0  3000               	movlw	0
  1583  06E1  00AE               	movwf	clear_segment@data
  1584  06E2                     l1141:
  1585                           
  1586                           ;tm1637.c: 175:  set_segments(data, 4, 0);
  1587  06E2  3004               	movlw	4
  1588  06E3  00FB               	movwf	??_clear_segment
  1589  06E4  087B               	movf	??_clear_segment,w
  1590  06E5  00F6               	movwf	set_segments@length
  1591  06E6  01F7               	clrf	set_segments@pos
  1592  06E7  302E               	movlw	(low (clear_segment@data| 0))& (0+255)
  1593  06E8  3187  2715  3186   	fcall	_set_segments
  1594  06EB                     l182:
  1595  06EB  0008               	return
  1596  06EC                     __end_of_clear_segment:
  1597                           
  1598                           	psect	text4
  1599  0715                     __ptext4:	
  1600 ;; *************** function _set_segments *****************
  1601 ;; Defined at:
  1602 ;;		line 146 in file "tm1637.c"
  1603 ;; Parameters:    Size  Location     Type
  1604 ;;  segments        1    wreg     PTR const unsigned char 
  1605 ;;		 -> clear_segment@data(4), main@data(4), 
  1606 ;;  length          1    6[COMMON] unsigned char 
  1607 ;;  pos             1    7[COMMON] unsigned char 
  1608 ;; Auto vars:     Size  Location     Type
  1609 ;;  segments        1    9[COMMON] PTR const unsigned char 
  1610 ;;		 -> clear_segment@data(4), main@data(4), 
  1611 ;;  k               1   10[COMMON] unsigned char 
  1612 ;; Return value:  Size  Location     Type
  1613 ;;                  1    wreg      void 
  1614 ;; Registers used:
  1615 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  1616 ;; Tracked objects:
  1617 ;;		On entry : 0/0
  1618 ;;		On exit  : 0/0
  1619 ;;		Unchanged: 0/0
  1620 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  1621 ;;      Params:         2       0       0       0       0       0
  1622 ;;      Locals:         2       0       0       0       0       0
  1623 ;;      Temps:          1       0       0       0       0       0
  1624 ;;      Totals:         5       0       0       0       0       0
  1625 ;;Total ram usage:        5 bytes
  1626 ;; Hardware stack levels used: 1
  1627 ;; Hardware stack levels required when called: 2
  1628 ;; This function calls:
  1629 ;;		_start_segment
  1630 ;;		_stop_segment
  1631 ;;		_write_byte
  1632 ;; This function is called by:
  1633 ;;		_main
  1634 ;;		_clear_segment
  1635 ;; This function uses a non-reentrant model
  1636 ;;
  1637                           
  1638                           
  1639                           ;psect for function _set_segments
  1640  0715                     _set_segments:
  1641                           
  1642                           ;incstack = 0
  1643                           ; Regs used in _set_segments: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
  1644                           ;set_segments@segments stored from wreg
  1645  0715  00F9               	movwf	set_segments@segments
  1646  0716                     l1125:
  1647                           
  1648                           ;tm1637.c: 149:     start_segment();
  1649  0716  3186  26B5  3187   	fcall	_start_segment
  1650                           
  1651                           ;tm1637.c: 150:     write_byte(0x40);
  1652  0719  3040               	movlw	64
  1653  071A  3187  2797  3187   	fcall	_write_byte
  1654                           
  1655                           ;tm1637.c: 151:     stop_segment();
  1656  071D  3186  26C7  3187   	fcall	_stop_segment
  1657                           
  1658                           ;tm1637.c: 154:     start_segment();
  1659  0720  3186  26B5  3187   	fcall	_start_segment
  1660                           
  1661                           ;tm1637.c: 155:     write_byte(0xC0 + (pos & 0x03));
  1662  0723  0877               	movf	set_segments@pos,w
  1663  0724  3903               	andlw	3
  1664  0725  3EC0               	addlw	192
  1665  0726  3187  2797  3187   	fcall	_write_byte
  1666  0729                     l1127:
  1667                           
  1668                           ;tm1637.c: 158:     for(uint8_t k = 0; k < length; k++){
  1669  0729  01FA               	clrf	set_segments@k
  1670  072A  2F39               	goto	l1133
  1671  072B                     l1129:
  1672                           
  1673                           ;tm1637.c: 159:         write_byte(segments[k]);
  1674  072B  087A               	movf	set_segments@k,w
  1675  072C  0779               	addwf	set_segments@segments,w
  1676  072D  00F8               	movwf	??_set_segments
  1677  072E  0878               	movf	??_set_segments,w
  1678  072F  0086               	movwf	6
  1679  0730  0187               	clrf	7
  1680  0731  0801               	movf	1,w
  1681  0732  3187  2797  3187   	fcall	_write_byte
  1682  0735                     l1131:
  1683                           
  1684                           ;tm1637.c: 160:     }
  1685  0735  3001               	movlw	1
  1686  0736  00F8               	movwf	??_set_segments
  1687  0737  0878               	movf	??_set_segments,w
  1688  0738  07FA               	addwf	set_segments@k,f
  1689  0739                     l1133:
  1690  0739  0876               	movf	set_segments@length,w
  1691  073A  027A               	subwf	set_segments@k,w
  1692  073B  1C03               	skipc
  1693  073C  2F3E               	goto	u171
  1694  073D  2F3F               	goto	u170
  1695  073E                     u171:
  1696  073E  2F2B               	goto	l1129
  1697  073F                     u170:
  1698  073F                     l1135:
  1699                           
  1700                           ;tm1637.c: 162:     stop_segment();
  1701  073F  3186  26C7  3187   	fcall	_stop_segment
  1702                           
  1703                           ;tm1637.c: 165:     start_segment();
  1704  0742  3186  26B5  3187   	fcall	_start_segment
  1705                           
  1706                           ;tm1637.c: 166:     write_byte(0x80 + (m_brightness & 0x0f));
  1707  0745  087D               	movf	_m_brightness,w
  1708  0746  390F               	andlw	15
  1709  0747  3E80               	addlw	128
  1710  0748  3187  2797  3187   	fcall	_write_byte
  1711                           
  1712                           ;tm1637.c: 167:     stop_segment();
  1713  074B  3186  26C7  3187   	fcall	_stop_segment
  1714  074E                     l177:
  1715  074E  0008               	return
  1716  074F                     __end_of_set_segments:
  1717                           
  1718                           	psect	text5
  1719  0797                     __ptext5:	
  1720 ;; *************** function _write_byte *****************
  1721 ;; Defined at:
  1722 ;;		line 74 in file "tm1637.c"
  1723 ;; Parameters:    Size  Location     Type
  1724 ;;  b               1    wreg     unsigned char 
  1725 ;; Auto vars:     Size  Location     Type
  1726 ;;  b               1    2[COMMON] unsigned char 
  1727 ;;  i               1    5[COMMON] unsigned char 
  1728 ;;  data            1    4[COMMON] unsigned char 
  1729 ;;  ack             1    3[COMMON] unsigned char 
  1730 ;; Return value:  Size  Location     Type
  1731 ;;                  1    wreg      unsigned char 
  1732 ;; Registers used:
  1733 ;;		wreg, status,2, status,0, pclath, cstack
  1734 ;; Tracked objects:
  1735 ;;		On entry : 0/0
  1736 ;;		On exit  : 0/0
  1737 ;;		Unchanged: 0/0
  1738 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  1739 ;;      Params:         0       0       0       0       0       0
  1740 ;;      Locals:         4       0       0       0       0       0
  1741 ;;      Temps:          1       0       0       0       0       0
  1742 ;;      Totals:         5       0       0       0       0       0
  1743 ;;Total ram usage:        5 bytes
  1744 ;; Hardware stack levels used: 1
  1745 ;; Hardware stack levels required when called: 1
  1746 ;; This function calls:
  1747 ;;		_bit_delay
  1748 ;;		_get_DIO_PIN_value
  1749 ;; This function is called by:
  1750 ;;		_set_segments
  1751 ;; This function uses a non-reentrant model
  1752 ;;
  1753                           
  1754                           
  1755                           ;psect for function _write_byte
  1756  0797                     _write_byte:
  1757                           
  1758                           ;incstack = 0
  1759                           ; Regs used in _write_byte: [wreg+status,2+status,0+pclath+cstack]
  1760                           ;write_byte@b stored from wreg
  1761  0797  00F2               	movwf	write_byte@b
  1762  0798                     l1057:
  1763                           
  1764                           ;tm1637.c: 75:     uint8_t data = b;
  1765  0798  0872               	movf	write_byte@b,w
  1766  0799  00F1               	movwf	??_write_byte
  1767  079A  0871               	movf	??_write_byte,w
  1768  079B  00F4               	movwf	write_byte@data
  1769  079C                     l1059:
  1770                           
  1771                           ;tm1637.c: 78:     TRISA &= ~0x00;
  1772  079C  0021               	movlb	1	; select bank1
  1773  079D  080C               	movf	12,w	;volatile
  1774  079E                     l1061:
  1775                           
  1776                           ;tm1637.c: 79:     for(uint8_t i = 0; i < 8; i++){
  1777  079E  01F5               	clrf	write_byte@i
  1778  079F                     l1067:
  1779                           
  1780                           ;tm1637.c: 81:         LATA &= ~0x00;
  1781  079F  0022               	movlb	2	; select bank2
  1782  07A0  080C               	movf	12,w	;volatile
  1783  07A1                     l1069:
  1784                           
  1785                           ;tm1637.c: 83:         if(data & 0x01){
  1786  07A1  1C74               	btfss	write_byte@data,0
  1787  07A2  2FA4               	goto	u141
  1788  07A3  2FA5               	goto	u140
  1789  07A4                     u141:
  1790  07A4  2FAA               	goto	l1073
  1791  07A5                     u140:
  1792  07A5                     l1071:
  1793                           
  1794                           ;tm1637.c: 85:             LATA |= 0x03;
  1795  07A5  3003               	movlw	3
  1796  07A6  00F1               	movwf	??_write_byte
  1797  07A7  0871               	movf	??_write_byte,w
  1798  07A8  048C               	iorwf	12,f	;volatile
  1799                           
  1800                           ;tm1637.c: 86:         }else{
  1801  07A9  2FAE               	goto	l1075
  1802  07AA                     l1073:
  1803                           
  1804                           ;tm1637.c: 88:             LATA &= ~0x03;
  1805  07AA  30FC               	movlw	252
  1806  07AB  00F1               	movwf	??_write_byte
  1807  07AC  0871               	movf	??_write_byte,w
  1808  07AD  058C               	andwf	12,f	;volatile
  1809  07AE                     l1075:
  1810                           
  1811                           ;tm1637.c: 92:         LATA |= 0x00;
  1812  07AE  080C               	movf	12,w	;volatile
  1813  07AF                     l1077:
  1814                           
  1815                           ;tm1637.c: 94:         data = data >> 1;
  1816  07AF  3674               	lsrf	write_byte@data,w
  1817  07B0  00F1               	movwf	??_write_byte
  1818  07B1  0871               	movf	??_write_byte,w
  1819  07B2  00F4               	movwf	write_byte@data
  1820  07B3                     l1079:
  1821                           
  1822                           ;tm1637.c: 95:     }
  1823  07B3  3001               	movlw	1
  1824  07B4  00F1               	movwf	??_write_byte
  1825  07B5  0871               	movf	??_write_byte,w
  1826  07B6  07F5               	addwf	write_byte@i,f
  1827  07B7                     l1081:
  1828  07B7  3008               	movlw	8
  1829  07B8  0275               	subwf	write_byte@i,w
  1830  07B9  1C03               	skipc
  1831  07BA  2FBC               	goto	u151
  1832  07BB  2FBD               	goto	u150
  1833  07BC                     u151:
  1834  07BC  2F9F               	goto	l1067
  1835  07BD                     u150:
  1836  07BD                     l1083:
  1837                           
  1838                           ;tm1637.c: 100:     LATA &= 0x00;
  1839  07BD  018C               	clrf	12	;volatile
  1840  07BE                     l1085:
  1841                           
  1842                           ;tm1637.c: 101:     LATA |= 0x03;
  1843  07BE  3003               	movlw	3
  1844  07BF  00F1               	movwf	??_write_byte
  1845  07C0  0871               	movf	??_write_byte,w
  1846  07C1  048C               	iorwf	12,f	;volatile
  1847  07C2                     l1087:
  1848                           
  1849                           ;tm1637.c: 104:     LATA |= 0x00;
  1850  07C2  080C               	movf	12,w	;volatile
  1851  07C3                     l1089:
  1852                           
  1853                           ;tm1637.c: 107:     TRISA |= 0x03;
  1854  07C3  3003               	movlw	3
  1855  07C4  00F1               	movwf	??_write_byte
  1856  07C5  0871               	movf	??_write_byte,w
  1857  07C6  0021               	movlb	1	; select bank1
  1858  07C7  048C               	iorwf	12,f	;volatile
  1859  07C8                     l1091:
  1860                           
  1861                           ;tm1637.c: 108:     bit_delay();
  1862  07C8  3186  267C  3187   	fcall	_bit_delay
  1863  07CB                     l1093:
  1864                           
  1865                           ;tm1637.c: 110:     uint8_t ack = get_DIO_PIN_value();
  1866  07CB  3186  268E  3187   	fcall	_get_DIO_PIN_value
  1867  07CE  00F1               	movwf	??_write_byte
  1868  07CF  0871               	movf	??_write_byte,w
  1869  07D0  00F3               	movwf	write_byte@ack
  1870  07D1                     l1095:
  1871                           
  1872                           ;tm1637.c: 111:     if(ack == 0){
  1873  07D1  0873               	movf	write_byte@ack,w
  1874  07D2  1D03               	btfss	3,2
  1875  07D3  2FD5               	goto	u161
  1876  07D4  2FD6               	goto	u160
  1877  07D5                     u161:
  1878  07D5  2FE0               	goto	l1099
  1879  07D6                     u160:
  1880  07D6                     l1097:
  1881                           
  1882                           ;tm1637.c: 113:         TRISA &= ~0x03;
  1883  07D6  30FC               	movlw	252
  1884  07D7  00F1               	movwf	??_write_byte
  1885  07D8  0871               	movf	??_write_byte,w
  1886  07D9  0021               	movlb	1	; select bank1
  1887  07DA  058C               	andwf	12,f	;volatile
  1888                           
  1889                           ;tm1637.c: 116:         LATA &= ~0x03;
  1890  07DB  30FC               	movlw	252
  1891  07DC  00F1               	movwf	??_write_byte
  1892  07DD  0871               	movf	??_write_byte,w
  1893  07DE  0022               	movlb	2	; select bank2
  1894  07DF  058C               	andwf	12,f	;volatile
  1895  07E0                     l1099:
  1896                           
  1897                           ;tm1637.c: 119:     bit_delay();
  1898  07E0  3186  267C  3187   	fcall	_bit_delay
  1899  07E3                     l1101:
  1900                           
  1901                           ;tm1637.c: 121:     TRISA &= ~0x03;
  1902  07E3  30FC               	movlw	252
  1903  07E4  00F1               	movwf	??_write_byte
  1904  07E5  0871               	movf	??_write_byte,w
  1905  07E6  0021               	movlb	1	; select bank1
  1906  07E7  058C               	andwf	12,f	;volatile
  1907                           
  1908                           ;tm1637.c: 122:     bit_delay();
  1909  07E8  3186  267C  3187   	fcall	_bit_delay
  1910  07EB                     l166:
  1911  07EB  0008               	return
  1912  07EC                     __end_of_write_byte:
  1913                           
  1914                           	psect	text6
  1915  068E                     __ptext6:	
  1916 ;; *************** function _get_DIO_PIN_value *****************
  1917 ;; Defined at:
  1918 ;;		line 63 in file "tm1637.c"
  1919 ;; Parameters:    Size  Location     Type
  1920 ;;		None
  1921 ;; Auto vars:     Size  Location     Type
  1922 ;;		None
  1923 ;; Return value:  Size  Location     Type
  1924 ;;                  1    wreg      unsigned char 
  1925 ;; Registers used:
  1926 ;;		wreg, status,2, status,0
  1927 ;; Tracked objects:
  1928 ;;		On entry : 0/0
  1929 ;;		On exit  : 0/0
  1930 ;;		Unchanged: 0/0
  1931 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  1932 ;;      Params:         0       0       0       0       0       0
  1933 ;;      Locals:         0       0       0       0       0       0
  1934 ;;      Temps:          1       0       0       0       0       0
  1935 ;;      Totals:         1       0       0       0       0       0
  1936 ;;Total ram usage:        1 bytes
  1937 ;; Hardware stack levels used: 1
  1938 ;; This function calls:
  1939 ;;		Nothing
  1940 ;; This function is called by:
  1941 ;;		_write_byte
  1942 ;; This function uses a non-reentrant model
  1943 ;;
  1944                           
  1945                           
  1946                           ;psect for function _get_DIO_PIN_value
  1947  068E                     _get_DIO_PIN_value:
  1948  068E                     l1003:	
  1949                           ;incstack = 0
  1950                           ; Regs used in _get_DIO_PIN_value: [wreg+status,2+status,0]
  1951                           
  1952  068E                     l1017:	
  1953                           ;tm1637.c: 64:     if(0x03 == 0x00){ return PORTAbits.RA0; }
  1954                           
  1955  068E  0020               	movlb	0	; select bank0
  1956  068F  0C0C               	rrf	12,w	;volatile
  1957  0690  00F0               	movwf	??_get_DIO_PIN_value
  1958  0691  0CF0               	rrf	??_get_DIO_PIN_value,f
  1959  0692  0C70               	rrf	??_get_DIO_PIN_value,w
  1960  0693  3901               	andlw	1
  1961  0694                     l151:
  1962  0694  0008               	return
  1963  0695                     __end_of_get_DIO_PIN_value:
  1964                           
  1965                           	psect	text7
  1966  067C                     __ptext7:	
  1967 ;; *************** function _bit_delay *****************
  1968 ;; Defined at:
  1969 ;;		line 31 in file "tm1637.c"
  1970 ;; Parameters:    Size  Location     Type
  1971 ;;		None
  1972 ;; Auto vars:     Size  Location     Type
  1973 ;;		None
  1974 ;; Return value:  Size  Location     Type
  1975 ;;                  1    wreg      void 
  1976 ;; Registers used:
  1977 ;;		None
  1978 ;; Tracked objects:
  1979 ;;		On entry : 0/0
  1980 ;;		On exit  : 0/0
  1981 ;;		Unchanged: 0/0
  1982 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  1983 ;;      Params:         0       0       0       0       0       0
  1984 ;;      Locals:         0       0       0       0       0       0
  1985 ;;      Temps:          0       0       0       0       0       0
  1986 ;;      Totals:         0       0       0       0       0       0
  1987 ;;Total ram usage:        0 bytes
  1988 ;; Hardware stack levels used: 1
  1989 ;; This function calls:
  1990 ;;		Nothing
  1991 ;; This function is called by:
  1992 ;;		_write_byte
  1993 ;; This function uses a non-reentrant model
  1994 ;;
  1995                           
  1996                           
  1997                           ;psect for function _bit_delay
  1998  067C                     _bit_delay:
  1999  067C                     l141:	
  2000                           ;incstack = 0
  2001                           ; Regs used in _bit_delay: []
  2002                           
  2003  067C  0008               	return
  2004  067D                     __end_of_bit_delay:
  2005                           
  2006                           	psect	text8
  2007  06C7                     __ptext8:	
  2008 ;; *************** function _stop_segment *****************
  2009 ;; Defined at:
  2010 ;;		line 49 in file "tm1637.c"
  2011 ;; Parameters:    Size  Location     Type
  2012 ;;		None
  2013 ;; Auto vars:     Size  Location     Type
  2014 ;;		None
  2015 ;; Return value:  Size  Location     Type
  2016 ;;                  1    wreg      void 
  2017 ;; Registers used:
  2018 ;;		wreg, status,2, status,0
  2019 ;; Tracked objects:
  2020 ;;		On entry : 0/0
  2021 ;;		On exit  : 0/0
  2022 ;;		Unchanged: 0/0
  2023 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  2024 ;;      Params:         0       0       0       0       0       0
  2025 ;;      Locals:         0       0       0       0       0       0
  2026 ;;      Temps:          1       0       0       0       0       0
  2027 ;;      Totals:         1       0       0       0       0       0
  2028 ;;Total ram usage:        1 bytes
  2029 ;; Hardware stack levels used: 1
  2030 ;; This function calls:
  2031 ;;		Nothing
  2032 ;; This function is called by:
  2033 ;;		_set_segments
  2034 ;; This function uses a non-reentrant model
  2035 ;;
  2036                           
  2037                           
  2038                           ;psect for function _stop_segment
  2039  06C7                     _stop_segment:
  2040  06C7                     l1047:	
  2041                           ;incstack = 0
  2042                           ; Regs used in _stop_segment: [wreg+status,2+status,0]
  2043                           
  2044                           
  2045                           ;tm1637.c: 51:     TRISA &= ~0x03;
  2046  06C7  30FC               	movlw	252
  2047  06C8  00F0               	movwf	??_stop_segment
  2048  06C9  0870               	movf	??_stop_segment,w
  2049  06CA  0021               	movlb	1	; select bank1
  2050  06CB  058C               	andwf	12,f	;volatile
  2051  06CC                     l1049:
  2052                           
  2053                           ;tm1637.c: 52:     TRISA &= ~0x00;
  2054  06CC  080C               	movf	12,w	;volatile
  2055  06CD                     l1051:
  2056                           
  2057                           ;tm1637.c: 55:     LATA &= ~0x03;
  2058  06CD  30FC               	movlw	252
  2059  06CE  00F0               	movwf	??_stop_segment
  2060  06CF  0870               	movf	??_stop_segment,w
  2061  06D0  0022               	movlb	2	; select bank2
  2062  06D1  058C               	andwf	12,f	;volatile
  2063                           
  2064                           ;tm1637.c: 56:     LATA &= ~0x00;
  2065  06D2  080C               	movf	12,w	;volatile
  2066  06D3                     l1053:
  2067                           
  2068                           ;tm1637.c: 59:     LATA |= 0x03;
  2069  06D3  3003               	movlw	3
  2070  06D4  00F0               	movwf	??_stop_segment
  2071  06D5  0870               	movf	??_stop_segment,w
  2072  06D6  048C               	iorwf	12,f	;volatile
  2073  06D7                     l1055:
  2074                           
  2075                           ;tm1637.c: 60:     LATA |= 0x00;
  2076  06D7  080C               	movf	12,w	;volatile
  2077  06D8                     l147:
  2078  06D8  0008               	return
  2079  06D9                     __end_of_stop_segment:
  2080                           
  2081                           	psect	text9
  2082  06B5                     __ptext9:	
  2083 ;; *************** function _start_segment *****************
  2084 ;; Defined at:
  2085 ;;		line 35 in file "tm1637.c"
  2086 ;; Parameters:    Size  Location     Type
  2087 ;;		None
  2088 ;; Auto vars:     Size  Location     Type
  2089 ;;		None
  2090 ;; Return value:  Size  Location     Type
  2091 ;;                  1    wreg      void 
  2092 ;; Registers used:
  2093 ;;		wreg, status,2, status,0
  2094 ;; Tracked objects:
  2095 ;;		On entry : 0/0
  2096 ;;		On exit  : 0/0
  2097 ;;		Unchanged: 0/0
  2098 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  2099 ;;      Params:         0       0       0       0       0       0
  2100 ;;      Locals:         0       0       0       0       0       0
  2101 ;;      Temps:          1       0       0       0       0       0
  2102 ;;      Totals:         1       0       0       0       0       0
  2103 ;;Total ram usage:        1 bytes
  2104 ;; Hardware stack levels used: 1
  2105 ;; This function calls:
  2106 ;;		Nothing
  2107 ;; This function is called by:
  2108 ;;		_set_segments
  2109 ;; This function uses a non-reentrant model
  2110 ;;
  2111                           
  2112                           
  2113                           ;psect for function _start_segment
  2114  06B5                     _start_segment:
  2115  06B5                     l1037:	
  2116                           ;incstack = 0
  2117                           ; Regs used in _start_segment: [wreg+status,2+status,0]
  2118                           
  2119                           
  2120                           ;tm1637.c: 37:     TRISA &= ~0x03;
  2121  06B5  30FC               	movlw	252
  2122  06B6  00F0               	movwf	??_start_segment
  2123  06B7  0870               	movf	??_start_segment,w
  2124  06B8  0021               	movlb	1	; select bank1
  2125  06B9  058C               	andwf	12,f	;volatile
  2126  06BA                     l1039:
  2127                           
  2128                           ;tm1637.c: 38:     TRISA &= ~0x00;
  2129  06BA  080C               	movf	12,w	;volatile
  2130  06BB                     l1041:
  2131                           
  2132                           ;tm1637.c: 41:     LATA |= 0x03;
  2133  06BB  3003               	movlw	3
  2134  06BC  00F0               	movwf	??_start_segment
  2135  06BD  0870               	movf	??_start_segment,w
  2136  06BE  0022               	movlb	2	; select bank2
  2137  06BF  048C               	iorwf	12,f	;volatile
  2138                           
  2139                           ;tm1637.c: 42:     LATA |= 0x00;
  2140  06C0  080C               	movf	12,w	;volatile
  2141  06C1                     l1043:
  2142                           
  2143                           ;tm1637.c: 45:     LATA &= ~0x03;
  2144  06C1  30FC               	movlw	252
  2145  06C2  00F0               	movwf	??_start_segment
  2146  06C3  0870               	movf	??_start_segment,w
  2147  06C4  058C               	andwf	12,f	;volatile
  2148  06C5                     l1045:
  2149                           
  2150                           ;tm1637.c: 46:     LATA &= ~0x00;
  2151  06C5  080C               	movf	12,w	;volatile
  2152  06C6                     l144:
  2153  06C6  0008               	return
  2154  06C7                     __end_of_start_segment:
  2155                           
  2156                           	psect	text10
  2157  069D                     __ptext10:	
  2158 ;; *************** function _SYSTEM_Initialize *****************
  2159 ;; Defined at:
  2160 ;;		line 50 in file "mcc_generated_files/mcc.c"
  2161 ;; Parameters:    Size  Location     Type
  2162 ;;		None
  2163 ;; Auto vars:     Size  Location     Type
  2164 ;;		None
  2165 ;; Return value:  Size  Location     Type
  2166 ;;                  1    wreg      void 
  2167 ;; Registers used:
  2168 ;;		wreg, status,2, status,0, pclath, cstack
  2169 ;; Tracked objects:
  2170 ;;		On entry : 0/0
  2171 ;;		On exit  : 0/0
  2172 ;;		Unchanged: 0/0
  2173 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  2174 ;;      Params:         0       0       0       0       0       0
  2175 ;;      Locals:         0       0       0       0       0       0
  2176 ;;      Temps:          0       0       0       0       0       0
  2177 ;;      Totals:         0       0       0       0       0       0
  2178 ;;Total ram usage:        0 bytes
  2179 ;; Hardware stack levels used: 1
  2180 ;; Hardware stack levels required when called: 1
  2181 ;; This function calls:
  2182 ;;		_OSCILLATOR_Initialize
  2183 ;;		_PIN_MANAGER_Initialize
  2184 ;;		_WDT_Initialize
  2185 ;; This function is called by:
  2186 ;;		_main
  2187 ;; This function uses a non-reentrant model
  2188 ;;
  2189                           
  2190                           
  2191                           ;psect for function _SYSTEM_Initialize
  2192  069D                     _SYSTEM_Initialize:
  2193  069D                     l1137:	
  2194                           ;incstack = 0
  2195                           ; Regs used in _SYSTEM_Initialize: [wreg+status,2+status,0+pclath+cstack]
  2196                           
  2197                           
  2198                           ;mcc_generated_files/mcc.c: 53:     PIN_MANAGER_Initialize();
  2199  069D  3186  26FF  3186   	fcall	_PIN_MANAGER_Initialize
  2200                           
  2201                           ;mcc_generated_files/mcc.c: 54:     OSCILLATOR_Initialize();
  2202  06A0  3186  2687  3186   	fcall	_OSCILLATOR_Initialize
  2203                           
  2204                           ;mcc_generated_files/mcc.c: 55:     WDT_Initialize();
  2205  06A3  3186  267D  3186   	fcall	_WDT_Initialize
  2206  06A6                     l45:
  2207  06A6  0008               	return
  2208  06A7                     __end_of_SYSTEM_Initialize:
  2209                           
  2210                           	psect	text11
  2211  067D                     __ptext11:	
  2212 ;; *************** function _WDT_Initialize *****************
  2213 ;; Defined at:
  2214 ;;		line 68 in file "mcc_generated_files/mcc.c"
  2215 ;; Parameters:    Size  Location     Type
  2216 ;;		None
  2217 ;; Auto vars:     Size  Location     Type
  2218 ;;		None
  2219 ;; Return value:  Size  Location     Type
  2220 ;;                  1    wreg      void 
  2221 ;; Registers used:
  2222 ;;		wreg
  2223 ;; Tracked objects:
  2224 ;;		On entry : 0/0
  2225 ;;		On exit  : 0/0
  2226 ;;		Unchanged: 0/0
  2227 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  2228 ;;      Params:         0       0       0       0       0       0
  2229 ;;      Locals:         0       0       0       0       0       0
  2230 ;;      Temps:          0       0       0       0       0       0
  2231 ;;      Totals:         0       0       0       0       0       0
  2232 ;;Total ram usage:        0 bytes
  2233 ;; Hardware stack levels used: 1
  2234 ;; This function calls:
  2235 ;;		Nothing
  2236 ;; This function is called by:
  2237 ;;		_SYSTEM_Initialize
  2238 ;; This function uses a non-reentrant model
  2239 ;;
  2240                           
  2241                           
  2242                           ;psect for function _WDT_Initialize
  2243  067D                     _WDT_Initialize:
  2244  067D                     l1123:	
  2245                           ;incstack = 0
  2246                           ; Regs used in _WDT_Initialize: [wreg]
  2247                           
  2248                           
  2249                           ;mcc_generated_files/mcc.c: 71:     WDTCON = 0x16;
  2250  067D  3016               	movlw	22
  2251  067E  0021               	movlb	1	; select bank1
  2252  067F  0097               	movwf	23	;volatile
  2253  0680                     l51:
  2254  0680  0008               	return
  2255  0681                     __end_of_WDT_Initialize:
  2256                           
  2257                           	psect	text12
  2258  06FF                     __ptext12:	
  2259 ;; *************** function _PIN_MANAGER_Initialize *****************
  2260 ;; Defined at:
  2261 ;;		line 55 in file "mcc_generated_files/pin_manager.c"
  2262 ;; Parameters:    Size  Location     Type
  2263 ;;		None
  2264 ;; Auto vars:     Size  Location     Type
  2265 ;;		None
  2266 ;; Return value:  Size  Location     Type
  2267 ;;                  1    wreg      void 
  2268 ;; Registers used:
  2269 ;;		wreg, status,2
  2270 ;; Tracked objects:
  2271 ;;		On entry : 0/0
  2272 ;;		On exit  : 0/0
  2273 ;;		Unchanged: 0/0
  2274 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  2275 ;;      Params:         0       0       0       0       0       0
  2276 ;;      Locals:         0       0       0       0       0       0
  2277 ;;      Temps:          0       0       0       0       0       0
  2278 ;;      Totals:         0       0       0       0       0       0
  2279 ;;Total ram usage:        0 bytes
  2280 ;; Hardware stack levels used: 1
  2281 ;; This function calls:
  2282 ;;		Nothing
  2283 ;; This function is called by:
  2284 ;;		_SYSTEM_Initialize
  2285 ;; This function uses a non-reentrant model
  2286 ;;
  2287                           
  2288                           
  2289                           ;psect for function _PIN_MANAGER_Initialize
  2290  06FF                     _PIN_MANAGER_Initialize:
  2291  06FF                     l1105:	
  2292                           ;incstack = 0
  2293                           ; Regs used in _PIN_MANAGER_Initialize: [wreg+status,2]
  2294                           
  2295                           
  2296                           ;mcc_generated_files/pin_manager.c: 60:     LATA = 0x00;
  2297  06FF  0022               	movlb	2	; select bank2
  2298  0700  018C               	clrf	12	;volatile
  2299                           
  2300                           ;mcc_generated_files/pin_manager.c: 61:     LATB = 0x00;
  2301  0701  018D               	clrf	13	;volatile
  2302  0702                     l1107:
  2303                           
  2304                           ;mcc_generated_files/pin_manager.c: 66:     TRISA = 0xFF;
  2305  0702  30FF               	movlw	255
  2306  0703  0021               	movlb	1	; select bank1
  2307  0704  008C               	movwf	12	;volatile
  2308  0705                     l1109:
  2309                           
  2310                           ;mcc_generated_files/pin_manager.c: 67:     TRISB = 0xFF;
  2311  0705  30FF               	movlw	255
  2312  0706  008D               	movwf	13	;volatile
  2313  0707                     l1111:
  2314                           
  2315                           ;mcc_generated_files/pin_manager.c: 72:     ANSELB = 0xFE;
  2316  0707  30FE               	movlw	254
  2317  0708  0023               	movlb	3	; select bank3
  2318  0709  008D               	movwf	13	;volatile
  2319  070A                     l1113:
  2320                           
  2321                           ;mcc_generated_files/pin_manager.c: 73:     ANSELA = 0x1F;
  2322  070A  301F               	movlw	31
  2323  070B  008C               	movwf	12	;volatile
  2324                           
  2325                           ;mcc_generated_files/pin_manager.c: 78:     WPUB = 0x00;
  2326  070C  0024               	movlb	4	; select bank4
  2327  070D  018D               	clrf	13	;volatile
  2328                           
  2329                           ;mcc_generated_files/pin_manager.c: 79:     WPUA = 0x00;
  2330  070E  018C               	clrf	12	;volatile
  2331  070F                     l1115:
  2332                           
  2333                           ;mcc_generated_files/pin_manager.c: 80:     OPTION_REGbits.nWPUEN = 1;
  2334  070F  0021               	movlb	1	; select bank1
  2335  0710  1795               	bsf	21,7	;volatile
  2336                           
  2337                           ;mcc_generated_files/pin_manager.c: 86:     APFCON0 = 0x00;
  2338  0711  0022               	movlb	2	; select bank2
  2339  0712  019D               	clrf	29	;volatile
  2340                           
  2341                           ;mcc_generated_files/pin_manager.c: 87:     APFCON1 = 0x00;
  2342  0713  019E               	clrf	30	;volatile
  2343  0714                     l25:
  2344  0714  0008               	return
  2345  0715                     __end_of_PIN_MANAGER_Initialize:
  2346                           
  2347                           	psect	text13
  2348  0687                     __ptext13:	
  2349 ;; *************** function _OSCILLATOR_Initialize *****************
  2350 ;; Defined at:
  2351 ;;		line 58 in file "mcc_generated_files/mcc.c"
  2352 ;; Parameters:    Size  Location     Type
  2353 ;;		None
  2354 ;; Auto vars:     Size  Location     Type
  2355 ;;		None
  2356 ;; Return value:  Size  Location     Type
  2357 ;;                  1    wreg      void 
  2358 ;; Registers used:
  2359 ;;		wreg, status,2
  2360 ;; Tracked objects:
  2361 ;;		On entry : 0/0
  2362 ;;		On exit  : 0/0
  2363 ;;		Unchanged: 0/0
  2364 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  2365 ;;      Params:         0       0       0       0       0       0
  2366 ;;      Locals:         0       0       0       0       0       0
  2367 ;;      Temps:          0       0       0       0       0       0
  2368 ;;      Totals:         0       0       0       0       0       0
  2369 ;;Total ram usage:        0 bytes
  2370 ;; Hardware stack levels used: 1
  2371 ;; This function calls:
  2372 ;;		Nothing
  2373 ;; This function is called by:
  2374 ;;		_SYSTEM_Initialize
  2375 ;; This function uses a non-reentrant model
  2376 ;;
  2377                           
  2378                           
  2379                           ;psect for function _OSCILLATOR_Initialize
  2380  0687                     _OSCILLATOR_Initialize:
  2381  0687                     l1117:	
  2382                           ;incstack = 0
  2383                           ; Regs used in _OSCILLATOR_Initialize: [wreg+status,2]
  2384                           
  2385                           
  2386                           ;mcc_generated_files/mcc.c: 61:     OSCCON = 0x70;
  2387  0687  3070               	movlw	112
  2388  0688  0021               	movlb	1	; select bank1
  2389  0689  0099               	movwf	25	;volatile
  2390  068A                     l1119:
  2391                           
  2392                           ;mcc_generated_files/mcc.c: 63:     OSCTUNE = 0x00;
  2393  068A  0198               	clrf	24	;volatile
  2394  068B                     l1121:
  2395                           
  2396                           ;mcc_generated_files/mcc.c: 65:     BORCON = 0x00;
  2397  068B  0022               	movlb	2	; select bank2
  2398  068C  0196               	clrf	22	;volatile
  2399  068D                     l48:
  2400  068D  0008               	return
  2401  068E                     __end_of_OSCILLATOR_Initialize:
  2402  007E                     btemp	set	126	;btemp
  2403  007E                     wtemp0	set	126
  2404                           
  2405                           	psect	config
  2406                           
  2407                           ;Config register CONFIG1 @ 0x8007
  2408                           ;	Oscillator Selection
  2409                           ;	FOSC = INTOSC, INTOSC oscillator: I/O function on CLKIN pin
  2410                           ;	Watchdog Timer Enable
  2411                           ;	WDTE = OFF, WDT disabled
  2412                           ;	Power-up Timer Enable
  2413                           ;	PWRTE = OFF, PWRT disabled
  2414                           ;	MCLR Pin Function Select
  2415                           ;	MCLRE = ON, MCLR/VPP pin function is MCLR
  2416                           ;	Flash Program Memory Code Protection
  2417                           ;	CP = OFF, Program memory code protection is disabled
  2418                           ;	Data Memory Code Protection
  2419                           ;	CPD = OFF, Data memory code protection is disabled
  2420                           ;	Brown-out Reset Enable
  2421                           ;	BOREN = ON, Brown-out Reset enabled
  2422                           ;	Clock Out Enable
  2423                           ;	CLKOUTEN = OFF, CLKOUT function is disabled. I/O or oscillator function on the CLKOUT 
      +                          pin
  2424                           ;	Internal/External Switchover
  2425                           ;	IESO = ON, Internal/External Switchover mode is enabled
  2426                           ;	Fail-Safe Clock Monitor Enable
  2427                           ;	FCMEN = ON, Fail-Safe Clock Monitor is enabled
  2428  8007                     	org	32775
  2429  8007  3FE4               	dw	16356
  2430                           
  2431                           ;Config register CONFIG2 @ 0x8008
  2432                           ;	Flash Memory Self-Write Protection
  2433                           ;	WRT = OFF, Write protection off
  2434                           ;	PLL Enable
  2435                           ;	PLLEN = OFF, 4x PLL disabled
  2436                           ;	Stack Overflow/Underflow Reset Enable
  2437                           ;	STVREN = ON, Stack Overflow or Underflow will cause a Reset
  2438                           ;	Brown-out Reset Voltage Selection
  2439                           ;	BORV = LO, Brown-out Reset Voltage (Vbor), low trip point selected.
  2440                           ;	Low-Voltage Programming Enable
  2441                           ;	LVP = OFF, High-voltage on MCLR/VPP must be used for programming
  2442  8008                     	org	32776
  2443  8008  1EFF               	dw	7935

Data Sizes:
    Strings     0
    Constant    0
    Data        14
    BSS         5
    Persistent  32
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14     13      14
    BANK0            80      8      26
    BANK1            80      0       0
    BANK2            80      0       0
    BANK3            80      0       0
    BANK4            48      0       0

Pointer List with Targets:

    set_segments@segments	PTR const unsigned char  size(1) Largest target is 4
		 -> clear_segment@data(BANK0[4]), main@data(BANK0[4]), 


Critical Paths under _main in COMMON

    _main->_clear_segment
    _clear_segment->_set_segments
    _set_segments->_write_byte
    _write_byte->_get_DIO_PIN_value

Critical Paths under _main in BANK0

    _main->_clear_segment

Critical Paths under _main in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 6     6      0    1536
                                             12 COMMON     1     1      0
                                              4 BANK0      4     4      0
                  _SYSTEM_Initialize
                      _clear_segment
                       _encode_digit
                     _set_brigthness
                       _set_segments
 ---------------------------------------------------------------------------------
 (1) _set_brigthness                                       3     2      1     142
                                              0 COMMON     3     2      1
 ---------------------------------------------------------------------------------
 (1) _encode_digit                                         1     1      0      22
                                              0 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (1) _clear_segment                                        5     5      0     649
                                             11 COMMON     1     1      0
                                              0 BANK0      4     4      0
                       _set_segments
 ---------------------------------------------------------------------------------
 (1) _set_segments                                         5     3      2     625
                                              6 COMMON     5     3      2
                      _start_segment
                       _stop_segment
                         _write_byte
 ---------------------------------------------------------------------------------
 (2) _write_byte                                           5     5      0     143
                                              1 COMMON     5     5      0
                          _bit_delay
                  _get_DIO_PIN_value
 ---------------------------------------------------------------------------------
 (3) _get_DIO_PIN_value                                    1     1      0       0
                                              0 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (3) _bit_delay                                            0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _stop_segment                                         1     1      0       0
                                              0 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (2) _start_segment                                        1     1      0       0
                                              0 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (1) _SYSTEM_Initialize                                    0     0      0       0
              _OSCILLATOR_Initialize
             _PIN_MANAGER_Initialize
                     _WDT_Initialize
 ---------------------------------------------------------------------------------
 (2) _WDT_Initialize                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _PIN_MANAGER_Initialize                               0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _OSCILLATOR_Initialize                                0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 3
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _SYSTEM_Initialize
     _OSCILLATOR_Initialize
     _PIN_MANAGER_Initialize
     _WDT_Initialize
   _clear_segment
     _set_segments
       _start_segment
       _stop_segment
       _write_byte
         _bit_delay
         _get_DIO_PIN_value
   _encode_digit
   _set_brigthness
   _set_segments

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             170      0       0       0        0.0%
EEDATA             100      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
BITCOMMON            E      0       0       1        0.0%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
COMMON               E      D       E       2      100.0%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
BITSFR2              0      0       0       3        0.0%
SFR2                 0      0       0       3        0.0%
STACK                0      0       0       3        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
ABS                  0      0      28       4        0.0%
BITBANK0            50      0       0       5        0.0%
BITSFR4              0      0       0       5        0.0%
SFR4                 0      0       0       5        0.0%
BANK0               50      8      1A       6       32.5%
BITSFR5              0      0       0       6        0.0%
SFR5                 0      0       0       6        0.0%
BITBANK1            50      0       0       7        0.0%
BITSFR6              0      0       0       7        0.0%
SFR6                 0      0       0       7        0.0%
BANK1               50      0       0       8        0.0%
BITSFR7              0      0       0       8        0.0%
SFR7                 0      0       0       8        0.0%
BITBANK2            50      0       0       9        0.0%
BITSFR8              0      0       0       9        0.0%
SFR8                 0      0       0       9        0.0%
BANK2               50      0       0      10        0.0%
BITSFR9              0      0       0      10        0.0%
SFR9                 0      0       0      10        0.0%
BITBANK3            50      0       0      11        0.0%
BITSFR10             0      0       0      11        0.0%
SFR10                0      0       0      11        0.0%
BANK3               50      0       0      12        0.0%
BITSFR11             0      0       0      12        0.0%
SFR11                0      0       0      12        0.0%
BITBANK4            30      0       0      13        0.0%
BITSFR12             0      0       0      13        0.0%
SFR12                0      0       0      13        0.0%
BANK4               30      0       0      14        0.0%
BITSFR13             0      0       0      14        0.0%
SFR13                0      0       0      14        0.0%
BITSFR14             0      0       0      15        0.0%
SFR14                0      0       0      15        0.0%
DATA                 0      0      28      15        0.0%
BITSFR15             0      0       0      16        0.0%
SFR15                0      0       0      16        0.0%
BITSFR16             0      0       0      17        0.0%
SFR16                0      0       0      17        0.0%
BITSFR17             0      0       0      18        0.0%
SFR17                0      0       0      18        0.0%
BITSFR18             0      0       0      19        0.0%
SFR18                0      0       0      19        0.0%
BITSFR19             0      0       0      20        0.0%
SFR19                0      0       0      20        0.0%
BITSFR20             0      0       0      21        0.0%
SFR20                0      0       0      21        0.0%
BITSFR21             0      0       0      22        0.0%
SFR21                0      0       0      22        0.0%
BITSFR22             0      0       0      23        0.0%
SFR22                0      0       0      23        0.0%
BITSFR23             0      0       0      24        0.0%
SFR23                0      0       0      24        0.0%
BITSFR24             0      0       0      25        0.0%
SFR24                0      0       0      25        0.0%
BITSFR25             0      0       0      26        0.0%
SFR25                0      0       0      26        0.0%
BITSFR26             0      0       0      27        0.0%
SFR26                0      0       0      27        0.0%
BITSFR27             0      0       0      28        0.0%
SFR27                0      0       0      28        0.0%
BITSFR28             0      0       0      29        0.0%
SFR28                0      0       0      29        0.0%
BITSFR29             0      0       0      30        0.0%
SFR29                0      0       0      30        0.0%
BITSFR30             0      0       0      31        0.0%
SFR30                0      0       0      31        0.0%
BITSFR31             0      0       0      32        0.0%
SFR31                0      0       0      32        0.0%


Microchip Technology PIC Macro Assembler V2.32 build 20210201212658 
Symbol Table                                                                                   Thu Oct 21 22:53:46 2021

         __size_of_start_segment 0012                      _SSPSTATbits 0214                               l25 0714  
                             l51 0680                               l45 06A6                               l48 068D  
                            l141 067C                              l125 0794                              l126 0794  
                            l151 0694                              l144 06C6                              l147 06D8  
                            l171 06FE                              l166 07EB                              l182 06EB  
                            l177 074E                              l185 069C                              u140 07A5  
                            u141 07A4                              u150 07BD                              u151 07BC  
                            u160 07D6                              u161 07D5                              u170 073F  
                            u171 073E                              u180 06F2                              u181 06F1  
                 ??_encode_digit 0070                             l1003 068E                             l1101 07E3  
                           l1111 0707                             l1121 068B                             l1113 070A  
                           l1105 06FF                             l1041 06BB                             l1017 068E  
                           l1115 070F                             l1107 0702                             l1123 067D  
                           l1043 06C1                             l1051 06CD                             l1131 0735  
                           l1117 0687                             l1109 0705                             l1045 06C5  
                           l1037 06B5                             l1053 06D3                             l1061 079E  
                           l1133 0739                             l1125 0716                             l1141 06E2  
                           l1119 068A                             l1039 06BA                             l1055 06D7  
                           l1047 06C7                             l1071 07A5                             l1135 073F  
                           l1127 0729                             l1143 0696                             l1151 06F9  
                           l1137 069D                             l1049 06CC                             l1081 07B7  
                           l1073 07AA                             l1057 0798                             l1129 072B  
                           l1161 0758                             l1153 074F                             l1091 07C8  
                           l1083 07BD                             l1075 07AE                             l1067 079F  
                           l1059 079C                             l1139 06D9                             l1147 06ED  
                           l1171 0775                             l1163 0759                             l1155 0752  
                           l1093 07CB                             l1085 07BE                             l1077 07AF  
                           l1069 07A1                             l1149 06F2                             l1173 077D  
                           l1165 0762                             l1157 0754                             l1095 07D1  
                           l1087 07C2                             l1079 07B3                             l1175 0785  
                           l1167 0765                             l1159 0756                             l1097 07D6  
                           l1089 07C3                             l1177 078B                             l1169 076D  
                           l1099 07E0                             l1179 0794                             _LATA 010C  
                           _LATB 010D                             _WPUA 020C                             _WPUB 020D  
                           _main 074F                    write_byte@ack 0073                             fsr0h 0005  
                           fsr1h 0007                             fsr0l 0004                             indf1 0001  
                           fsr1l 0006                             btemp 007E                             start 0002  
 __size_of_OSCILLATOR_Initialize 0007    __end_of_OSCILLATOR_Initialize 068E            __size_of_stop_segment 0012  
                          ?_main 0070                            _TRISA 008C                            _TRISB 008D  
                 _WDT_Initialize 067D                    _start_segment 06B5                   write_byte@data 0074  
                          status 0003                            wtemp0 007E                  __initialization 07EC  
                   _stop_segment 06C7                     __end_of_main 0797                           ??_main 007C  
         __end_of_WDT_Initialize 0681                  set_segments@pos 0077                   ?_start_segment 0070  
                         _ANSELA 018C                           _ANSELB 018D                           _BORCON 0116  
                         _OSCCON 0099                           _WDTCON 0097                           _SSPBUF 0211  
          __end_of_clear_segment 06EC             __end_of_encode_digit 069D                  ?_WDT_Initialize 0070  
        __size_of_set_brigthness 0013                _SYSTEM_Initialize 069D          __end_of__initialization 07FD  
             ?_SYSTEM_Initialize 0070         set_brigthness@brightness 0072                   __pcstackCOMMON 0070  
                   __pidataBANK0 06A7              ??_SYSTEM_Initialize 0070               __size_of_bit_delay 0001  
                 _OPTION_REGbits 0095                  ??_start_segment 0070        __end_of_SYSTEM_Initialize 06A7  
                     __pbssBANK0 0036                _get_DIO_PIN_value 068E               ?_get_DIO_PIN_value 0070  
                     __pmaintext 074F              ??_get_DIO_PIN_value 0070                          _APFCON0 011D  
                        _APFCON1 011E               set_segments@length 0076                          _OSCTUNE 0098  
                        _SSPCON2 0216                          _SSPSTAT 0214        __end_of_get_DIO_PIN_value 0695  
              __end_of_bit_delay 067D            __size_of_encode_digit 0008                    ?_set_segments 0076  
                        __ptext1 06EC                          __ptext2 0695                          __ptext3 06D9  
                        __ptext4 0715                          __ptext5 0797                          __ptext6 068E  
                        __ptext7 067C                          __ptext8 06C7                          __ptext9 06B5  
          _OSCILLATOR_Initialize 0687                          _segdata 0020         ??_PIN_MANAGER_Initialize 0070  
                 _set_brigthness 06EC       __size_of_SYSTEM_Initialize 000A             end_of_initialization 07FD  
                   _encode_digit 0695               clear_segment@F2506 0036                          init_ram 0681  
                        initloop 0682             set_segments@segments 0079                   ??_set_segments 0078  
               ??_WDT_Initialize 0070                        _PORTAbits 000C                     _m_brightness 007D  
         __end_of_set_brigthness 06FF       __size_of_get_DIO_PIN_value 0007                       _write_byte 0797  
         ?_OSCILLATOR_Initialize 0070              start_initialization 07EC                  ?_set_brigthness 0070  
__size_of_PIN_MANAGER_Initialize 0016           __size_of_clear_segment 0013                      __pdataBANK0 0020  
                    __pbssCOMMON 007D                        ___latbits 0001                    __pcstackBANK0 002E  
          __end_of_start_segment 06C7             __end_of_set_segments 074F                 set_brigthness@on 0070  
         _PIN_MANAGER_Initialize 06FF                    ?_stop_segment 0070                        _bit_delay 067C  
                  _clear_segment 06D9                      ?_write_byte 0070                   ??_stop_segment 0070  
                 ?_clear_segment 0070                clear_segment@data 002E                       ?_bit_delay 0070  
                      main@F2513 002A                encode_digit@digit 0070                      write_byte@b 0072  
                    write_byte@i 0075              __size_of_write_byte 0055                    set_segments@k 007A  
        ??_OSCILLATOR_Initialize 0070                 ??_set_brigthness 0071            __size_of_set_segments 003A  
                       __ptext10 069D                         __ptext11 067D                         __ptext12 06FF  
                       __ptext13 0687                    __size_of_main 0048                  ??_clear_segment 007B  
                    ??_bit_delay 0070                         main@data 0032                     _set_segments 0715  
           __end_of_stop_segment 06D9          __size_of_WDT_Initialize 0004          ?_PIN_MANAGER_Initialize 0070  
                   ??_write_byte 0071                      _SSPCON1bits 0215                      _SSPCON2bits 0216  
                  ?_encode_digit 0070   __end_of_PIN_MANAGER_Initialize 0715               __end_of_write_byte 07EC  

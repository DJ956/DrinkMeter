

Microchip MPLAB XC8 Assembler V2.32 build 20210201212658 
                                                                                               Sat Jan 01 20:02:45 2022

Microchip MPLAB XC8 C Compiler v2.32 (Free license) build 20210201212658 Og1 
     1                           	processor	16F1938
     2                           	pagewidth 120
     3                           	opt	flic
     4                           	psect	idataBANK1,global,class=CODE,delta=2,noexec
     5                           	psect	idataBANK2,global,class=CODE,delta=2,noexec
     6                           	psect	stringtext1,global,class=STRCODE,delta=2,noexec
     7                           	psect	stringtext2,global,class=STRCODE,delta=2,noexec
     8                           	psect	stringtext3,global,class=STRCODE,delta=2,noexec
     9                           	psect	stringtext4,global,class=STRCODE,delta=2,noexec
    10                           	psect	stringtext5,global,class=STRCODE,delta=2,noexec
    11                           	psect	stringtext6,global,class=STRCODE,delta=2,noexec
    12                           	psect	stringtext7,global,class=STRCODE,delta=2,noexec
    13                           	psect	stringtext8,global,class=STRCODE,delta=2,noexec
    14                           	psect	stringtext9,global,class=STRCODE,delta=2,noexec
    15                           	psect	stringtext10,global,class=STRCODE,delta=2,noexec
    16                           	psect	stringtext11,global,class=STRCODE,delta=2,noexec
    17                           	psect	cinit,global,class=CODE,merge=1,delta=2
    18                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1,noexec
    19                           	psect	dataBANK1,global,class=BANK1,space=1,delta=1,noexec
    20                           	psect	bssBANK2,global,class=BANK2,space=1,delta=1,noexec
    21                           	psect	dataBANK2,global,class=BANK2,space=1,delta=1,noexec
    22                           	psect	bssBANK3,global,class=BANK3,space=1,delta=1,noexec
    23                           	psect	inittext,global,class=CODE,delta=2
    24                           	psect	clrtext,global,class=CODE,delta=2
    25                           	psect	cstackBANK2,global,class=BANK2,space=1,delta=1,noexec
    26                           	psect	cstackBANK1,global,class=BANK1,space=1,delta=1,noexec
    27                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1,noexec
    28                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,noexec
    29                           	psect	maintext,global,class=CODE,merge=1,split=1,delta=2
    30                           	psect	text1,local,class=CODE,merge=1,delta=2
    31                           	psect	text2,local,class=CODE,merge=1,delta=2
    32                           	psect	text3,local,class=CODE,merge=1,delta=2
    33                           	psect	text4,local,class=CODE,merge=1,delta=2,group=2
    34                           	psect	text5,local,class=CODE,merge=1,delta=2,group=2
    35                           	psect	text6,local,class=CODE,merge=1,delta=2,group=2
    36                           	psect	text7,local,class=CODE,merge=1,delta=2,group=2
    37                           	psect	text8,local,class=CODE,merge=1,delta=2,group=2
    38                           	psect	text9,local,class=CODE,merge=1,delta=2
    39                           	psect	text10,local,class=CODE,merge=1,delta=2
    40                           	psect	text11,local,class=CODE,merge=1,delta=2,group=3
    41                           	psect	text12,local,class=CODE,merge=1,delta=2,group=1
    42                           	psect	text13,local,class=CODE,merge=1,delta=2,group=1
    43                           	psect	text14,local,class=CODE,merge=1,delta=2,group=1
    44                           	psect	text15,local,class=CODE,merge=1,delta=2,group=2
    45                           	psect	text16,local,class=CODE,merge=1,delta=2,group=2
    46                           	psect	text17,local,class=CODE,merge=1,delta=2,group=3
    47                           	psect	text18,local,class=CODE,merge=1,delta=2,group=1
    48                           	psect	text19,local,class=CODE,merge=1,delta=2,group=1
    49                           	psect	text20,local,class=CODE,merge=1,delta=2,group=3
    50                           	psect	text21,local,class=CODE,merge=1,delta=2,group=3
    51                           	psect	text22,local,class=CODE,merge=1,delta=2,group=3
    52                           	psect	text23,local,class=CODE,merge=1,delta=2,group=3
    53                           	psect	text24,local,class=CODE,merge=1,delta=2,group=3
    54                           	psect	text25,local,class=CODE,merge=1,delta=2,group=2
    55                           	psect	text26,local,class=CODE,merge=1,delta=2,group=2
    56                           	psect	text27,local,class=CODE,merge=1,delta=2
    57                           	psect	text28,local,class=CODE,merge=1,delta=2
    58                           	psect	text29,local,class=CODE,merge=1,delta=2
    59                           	psect	text30,local,class=CODE,merge=1,delta=2
    60                           	psect	text31,local,class=CODE,merge=1,delta=2
    61                           	psect	text32,local,class=CODE,merge=1,delta=2
    62                           	psect	text33,local,class=CODE,merge=1,delta=2
    63                           	psect	text34,local,class=CODE,merge=1,delta=2
    64                           	psect	text35,local,class=CODE,merge=1,delta=2
    65                           	psect	text36,local,class=CODE,merge=1,delta=2
    66                           	psect	text37,local,class=CODE,merge=1,delta=2
    67                           	psect	text38,local,class=CODE,merge=1,delta=2
    68                           	psect	text39,local,class=CODE,merge=1,delta=2
    69                           	psect	text40,local,class=CODE,merge=1,delta=2
    70                           	psect	text41,local,class=CODE,merge=1,delta=2
    71                           	psect	text42,local,class=CODE,merge=1,delta=2
    72                           	psect	text43,local,class=CODE,merge=1,delta=2
    73                           	psect	text44,local,class=CODE,merge=1,delta=2
    74                           	psect	text45,local,class=CODE,merge=1,delta=2
    75                           	psect	text46,local,class=CODE,merge=1,delta=2
    76                           	psect	text47,local,class=CODE,merge=1,delta=2
    77                           	psect	text48,local,class=CODE,merge=1,delta=2
    78                           	psect	text49,local,class=CODE,merge=1,delta=2
    79                           	psect	text50,local,class=CODE,merge=1,delta=2
    80                           	psect	text51,local,class=CODE,merge=1,delta=2
    81                           	psect	text52,local,class=CODE,merge=1,delta=2
    82                           	psect	text53,local,class=CODE,merge=1,delta=2
    83                           	psect	text54,local,class=CODE,merge=1,delta=2
    84                           	psect	text55,local,class=CODE,merge=1,delta=2
    85                           	psect	text56,local,class=CODE,merge=1,delta=2,group=2
    86                           	psect	text57,local,class=CODE,merge=1,delta=2,group=2
    87                           	psect	text58,local,class=CODE,merge=1,delta=2
    88                           	psect	text59,local,class=CODE,merge=1,delta=2
    89                           	psect	text60,local,class=CODE,merge=1,delta=2
    90                           	psect	text61,local,class=CODE,merge=1,delta=2
    91                           	psect	text62,local,class=CODE,merge=1,delta=2,group=2
    92                           	psect	text63,local,class=CODE,merge=1,delta=2
    93                           	psect	text64,local,class=CODE,merge=1,delta=2
    94                           	psect	text65,local,class=CODE,merge=1,delta=2
    95                           	psect	text66,local,class=CODE,merge=1,delta=2
    96                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=2,noexec
    97                           	dabs	1,0x7E,2
    98  0000                     
    99                           ; Version 2.32
   100                           ; Generated 02/02/2021 GMT
   101                           ; 
   102                           ; Copyright Â© 2021, Microchip Technology Inc. and its subsidiaries ("Microchip")
   103                           ; All rights reserved.
   104                           ; 
   105                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
   106                           ; 
   107                           ; Redistribution and use in source and binary forms, with or without modification, are
   108                           ; permitted provided that the following conditions are met:
   109                           ; 
   110                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
   111                           ;        conditions and the following disclaimer.
   112                           ; 
   113                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
   114                           ;        of conditions and the following disclaimer in the documentation and/or other
   115                           ;        materials provided with the distribution. Publication is not required when
   116                           ;        this file is used in an embedded application.
   117                           ; 
   118                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
   119                           ;        software without specific prior written permission.
   120                           ; 
   121                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
   122                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
   123                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
   124                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
   125                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
   126                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
   127                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
   128                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
   129                           ; 
   130                           ; 
   131                           ; Code-generator required, PIC16F1938 Definitions
   132                           ; 
   133                           ; SFR Addresses
   134  0000                     	;# 
   135  0001                     	;# 
   136  0002                     	;# 
   137  0003                     	;# 
   138  0004                     	;# 
   139  0005                     	;# 
   140  0006                     	;# 
   141  0007                     	;# 
   142  0008                     	;# 
   143  0009                     	;# 
   144  000A                     	;# 
   145  000B                     	;# 
   146  000C                     	;# 
   147  000D                     	;# 
   148  000E                     	;# 
   149  0010                     	;# 
   150  0011                     	;# 
   151  0012                     	;# 
   152  0013                     	;# 
   153  0015                     	;# 
   154  0016                     	;# 
   155  0016                     	;# 
   156  0017                     	;# 
   157  0018                     	;# 
   158  0019                     	;# 
   159  001A                     	;# 
   160  001B                     	;# 
   161  001C                     	;# 
   162  001E                     	;# 
   163  001F                     	;# 
   164  008C                     	;# 
   165  008D                     	;# 
   166  008E                     	;# 
   167  0090                     	;# 
   168  0091                     	;# 
   169  0092                     	;# 
   170  0093                     	;# 
   171  0095                     	;# 
   172  0096                     	;# 
   173  0097                     	;# 
   174  0098                     	;# 
   175  0099                     	;# 
   176  009A                     	;# 
   177  009B                     	;# 
   178  009B                     	;# 
   179  009C                     	;# 
   180  009D                     	;# 
   181  009E                     	;# 
   182  010C                     	;# 
   183  010D                     	;# 
   184  010E                     	;# 
   185  0110                     	;# 
   186  0111                     	;# 
   187  0112                     	;# 
   188  0113                     	;# 
   189  0114                     	;# 
   190  0115                     	;# 
   191  0116                     	;# 
   192  0117                     	;# 
   193  0118                     	;# 
   194  0119                     	;# 
   195  011A                     	;# 
   196  011B                     	;# 
   197  011D                     	;# 
   198  018C                     	;# 
   199  018D                     	;# 
   200  0191                     	;# 
   201  0191                     	;# 
   202  0192                     	;# 
   203  0193                     	;# 
   204  0193                     	;# 
   205  0193                     	;# 
   206  0194                     	;# 
   207  0195                     	;# 
   208  0196                     	;# 
   209  0199                     	;# 
   210  019A                     	;# 
   211  019B                     	;# 
   212  019B                     	;# 
   213  019B                     	;# 
   214  019B                     	;# 
   215  019C                     	;# 
   216  019C                     	;# 
   217  019D                     	;# 
   218  019E                     	;# 
   219  019F                     	;# 
   220  020D                     	;# 
   221  0210                     	;# 
   222  0211                     	;# 
   223  0212                     	;# 
   224  0213                     	;# 
   225  0214                     	;# 
   226  0215                     	;# 
   227  0215                     	;# 
   228  0216                     	;# 
   229  0217                     	;# 
   230  0291                     	;# 
   231  0291                     	;# 
   232  0292                     	;# 
   233  0293                     	;# 
   234  0294                     	;# 
   235  0295                     	;# 
   236  0295                     	;# 
   237  0296                     	;# 
   238  0298                     	;# 
   239  0298                     	;# 
   240  0299                     	;# 
   241  029A                     	;# 
   242  029B                     	;# 
   243  029C                     	;# 
   244  029C                     	;# 
   245  029D                     	;# 
   246  029E                     	;# 
   247  029F                     	;# 
   248  0311                     	;# 
   249  0311                     	;# 
   250  0312                     	;# 
   251  0313                     	;# 
   252  0314                     	;# 
   253  0315                     	;# 
   254  0315                     	;# 
   255  0316                     	;# 
   256  0318                     	;# 
   257  0318                     	;# 
   258  0319                     	;# 
   259  031A                     	;# 
   260  031C                     	;# 
   261  031C                     	;# 
   262  031D                     	;# 
   263  031E                     	;# 
   264  0394                     	;# 
   265  0395                     	;# 
   266  0396                     	;# 
   267  0415                     	;# 
   268  0416                     	;# 
   269  0417                     	;# 
   270  041C                     	;# 
   271  041D                     	;# 
   272  041E                     	;# 
   273  0791                     	;# 
   274  0792                     	;# 
   275  0793                     	;# 
   276  0794                     	;# 
   277  0795                     	;# 
   278  0798                     	;# 
   279  0799                     	;# 
   280  07A0                     	;# 
   281  07A1                     	;# 
   282  07A3                     	;# 
   283  07A4                     	;# 
   284  07A6                     	;# 
   285  07A7                     	;# 
   286  07A9                     	;# 
   287  07AA                     	;# 
   288  0FE4                     	;# 
   289  0FE5                     	;# 
   290  0FE6                     	;# 
   291  0FE7                     	;# 
   292  0FE8                     	;# 
   293  0FE9                     	;# 
   294  0FEA                     	;# 
   295  0FEB                     	;# 
   296  0FED                     	;# 
   297  0FEE                     	;# 
   298  0FEF                     	;# 
   299  0000                     	;# 
   300  0001                     	;# 
   301  0002                     	;# 
   302  0003                     	;# 
   303  0004                     	;# 
   304  0005                     	;# 
   305  0006                     	;# 
   306  0007                     	;# 
   307  0008                     	;# 
   308  0009                     	;# 
   309  000A                     	;# 
   310  000B                     	;# 
   311  000C                     	;# 
   312  000D                     	;# 
   313  000E                     	;# 
   314  0010                     	;# 
   315  0011                     	;# 
   316  0012                     	;# 
   317  0013                     	;# 
   318  0015                     	;# 
   319  0016                     	;# 
   320  0016                     	;# 
   321  0017                     	;# 
   322  0018                     	;# 
   323  0019                     	;# 
   324  001A                     	;# 
   325  001B                     	;# 
   326  001C                     	;# 
   327  001E                     	;# 
   328  001F                     	;# 
   329  008C                     	;# 
   330  008D                     	;# 
   331  008E                     	;# 
   332  0090                     	;# 
   333  0091                     	;# 
   334  0092                     	;# 
   335  0093                     	;# 
   336  0095                     	;# 
   337  0096                     	;# 
   338  0097                     	;# 
   339  0098                     	;# 
   340  0099                     	;# 
   341  009A                     	;# 
   342  009B                     	;# 
   343  009B                     	;# 
   344  009C                     	;# 
   345  009D                     	;# 
   346  009E                     	;# 
   347  010C                     	;# 
   348  010D                     	;# 
   349  010E                     	;# 
   350  0110                     	;# 
   351  0111                     	;# 
   352  0112                     	;# 
   353  0113                     	;# 
   354  0114                     	;# 
   355  0115                     	;# 
   356  0116                     	;# 
   357  0117                     	;# 
   358  0118                     	;# 
   359  0119                     	;# 
   360  011A                     	;# 
   361  011B                     	;# 
   362  011D                     	;# 
   363  018C                     	;# 
   364  018D                     	;# 
   365  0191                     	;# 
   366  0191                     	;# 
   367  0192                     	;# 
   368  0193                     	;# 
   369  0193                     	;# 
   370  0193                     	;# 
   371  0194                     	;# 
   372  0195                     	;# 
   373  0196                     	;# 
   374  0199                     	;# 
   375  019A                     	;# 
   376  019B                     	;# 
   377  019B                     	;# 
   378  019B                     	;# 
   379  019B                     	;# 
   380  019C                     	;# 
   381  019C                     	;# 
   382  019D                     	;# 
   383  019E                     	;# 
   384  019F                     	;# 
   385  020D                     	;# 
   386  0210                     	;# 
   387  0211                     	;# 
   388  0212                     	;# 
   389  0213                     	;# 
   390  0214                     	;# 
   391  0215                     	;# 
   392  0215                     	;# 
   393  0216                     	;# 
   394  0217                     	;# 
   395  0291                     	;# 
   396  0291                     	;# 
   397  0292                     	;# 
   398  0293                     	;# 
   399  0294                     	;# 
   400  0295                     	;# 
   401  0295                     	;# 
   402  0296                     	;# 
   403  0298                     	;# 
   404  0298                     	;# 
   405  0299                     	;# 
   406  029A                     	;# 
   407  029B                     	;# 
   408  029C                     	;# 
   409  029C                     	;# 
   410  029D                     	;# 
   411  029E                     	;# 
   412  029F                     	;# 
   413  0311                     	;# 
   414  0311                     	;# 
   415  0312                     	;# 
   416  0313                     	;# 
   417  0314                     	;# 
   418  0315                     	;# 
   419  0315                     	;# 
   420  0316                     	;# 
   421  0318                     	;# 
   422  0318                     	;# 
   423  0319                     	;# 
   424  031A                     	;# 
   425  031C                     	;# 
   426  031C                     	;# 
   427  031D                     	;# 
   428  031E                     	;# 
   429  0394                     	;# 
   430  0395                     	;# 
   431  0396                     	;# 
   432  0415                     	;# 
   433  0416                     	;# 
   434  0417                     	;# 
   435  041C                     	;# 
   436  041D                     	;# 
   437  041E                     	;# 
   438  0791                     	;# 
   439  0792                     	;# 
   440  0793                     	;# 
   441  0794                     	;# 
   442  0795                     	;# 
   443  0798                     	;# 
   444  0799                     	;# 
   445  07A0                     	;# 
   446  07A1                     	;# 
   447  07A3                     	;# 
   448  07A4                     	;# 
   449  07A6                     	;# 
   450  07A7                     	;# 
   451  07A9                     	;# 
   452  07AA                     	;# 
   453  0FE4                     	;# 
   454  0FE5                     	;# 
   455  0FE6                     	;# 
   456  0FE7                     	;# 
   457  0FE8                     	;# 
   458  0FE9                     	;# 
   459  0FEA                     	;# 
   460  0FEB                     	;# 
   461  0FED                     	;# 
   462  0FEE                     	;# 
   463  0FEF                     	;# 
   464  0000                     	;# 
   465  0001                     	;# 
   466  0002                     	;# 
   467  0003                     	;# 
   468  0004                     	;# 
   469  0005                     	;# 
   470  0006                     	;# 
   471  0007                     	;# 
   472  0008                     	;# 
   473  0009                     	;# 
   474  000A                     	;# 
   475  000B                     	;# 
   476  000C                     	;# 
   477  000D                     	;# 
   478  000E                     	;# 
   479  0010                     	;# 
   480  0011                     	;# 
   481  0012                     	;# 
   482  0013                     	;# 
   483  0015                     	;# 
   484  0016                     	;# 
   485  0016                     	;# 
   486  0017                     	;# 
   487  0018                     	;# 
   488  0019                     	;# 
   489  001A                     	;# 
   490  001B                     	;# 
   491  001C                     	;# 
   492  001E                     	;# 
   493  001F                     	;# 
   494  008C                     	;# 
   495  008D                     	;# 
   496  008E                     	;# 
   497  0090                     	;# 
   498  0091                     	;# 
   499  0092                     	;# 
   500  0093                     	;# 
   501  0095                     	;# 
   502  0096                     	;# 
   503  0097                     	;# 
   504  0098                     	;# 
   505  0099                     	;# 
   506  009A                     	;# 
   507  009B                     	;# 
   508  009B                     	;# 
   509  009C                     	;# 
   510  009D                     	;# 
   511  009E                     	;# 
   512  010C                     	;# 
   513  010D                     	;# 
   514  010E                     	;# 
   515  0110                     	;# 
   516  0111                     	;# 
   517  0112                     	;# 
   518  0113                     	;# 
   519  0114                     	;# 
   520  0115                     	;# 
   521  0116                     	;# 
   522  0117                     	;# 
   523  0118                     	;# 
   524  0119                     	;# 
   525  011A                     	;# 
   526  011B                     	;# 
   527  011D                     	;# 
   528  018C                     	;# 
   529  018D                     	;# 
   530  0191                     	;# 
   531  0191                     	;# 
   532  0192                     	;# 
   533  0193                     	;# 
   534  0193                     	;# 
   535  0193                     	;# 
   536  0194                     	;# 
   537  0195                     	;# 
   538  0196                     	;# 
   539  0199                     	;# 
   540  019A                     	;# 
   541  019B                     	;# 
   542  019B                     	;# 
   543  019B                     	;# 
   544  019B                     	;# 
   545  019C                     	;# 
   546  019C                     	;# 
   547  019D                     	;# 
   548  019E                     	;# 
   549  019F                     	;# 
   550  020D                     	;# 
   551  0210                     	;# 
   552  0211                     	;# 
   553  0212                     	;# 
   554  0213                     	;# 
   555  0214                     	;# 
   556  0215                     	;# 
   557  0215                     	;# 
   558  0216                     	;# 
   559  0217                     	;# 
   560  0291                     	;# 
   561  0291                     	;# 
   562  0292                     	;# 
   563  0293                     	;# 
   564  0294                     	;# 
   565  0295                     	;# 
   566  0295                     	;# 
   567  0296                     	;# 
   568  0298                     	;# 
   569  0298                     	;# 
   570  0299                     	;# 
   571  029A                     	;# 
   572  029B                     	;# 
   573  029C                     	;# 
   574  029C                     	;# 
   575  029D                     	;# 
   576  029E                     	;# 
   577  029F                     	;# 
   578  0311                     	;# 
   579  0311                     	;# 
   580  0312                     	;# 
   581  0313                     	;# 
   582  0314                     	;# 
   583  0315                     	;# 
   584  0315                     	;# 
   585  0316                     	;# 
   586  0318                     	;# 
   587  0318                     	;# 
   588  0319                     	;# 
   589  031A                     	;# 
   590  031C                     	;# 
   591  031C                     	;# 
   592  031D                     	;# 
   593  031E                     	;# 
   594  0394                     	;# 
   595  0395                     	;# 
   596  0396                     	;# 
   597  0415                     	;# 
   598  0416                     	;# 
   599  0417                     	;# 
   600  041C                     	;# 
   601  041D                     	;# 
   602  041E                     	;# 
   603  0791                     	;# 
   604  0792                     	;# 
   605  0793                     	;# 
   606  0794                     	;# 
   607  0795                     	;# 
   608  0798                     	;# 
   609  0799                     	;# 
   610  07A0                     	;# 
   611  07A1                     	;# 
   612  07A3                     	;# 
   613  07A4                     	;# 
   614  07A6                     	;# 
   615  07A7                     	;# 
   616  07A9                     	;# 
   617  07AA                     	;# 
   618  0FE4                     	;# 
   619  0FE5                     	;# 
   620  0FE6                     	;# 
   621  0FE7                     	;# 
   622  0FE8                     	;# 
   623  0FE9                     	;# 
   624  0FEA                     	;# 
   625  0FEB                     	;# 
   626  0FED                     	;# 
   627  0FEE                     	;# 
   628  0FEF                     	;# 
   629  0000                     	;# 
   630  0001                     	;# 
   631  0002                     	;# 
   632  0003                     	;# 
   633  0004                     	;# 
   634  0005                     	;# 
   635  0006                     	;# 
   636  0007                     	;# 
   637  0008                     	;# 
   638  0009                     	;# 
   639  000A                     	;# 
   640  000B                     	;# 
   641  000C                     	;# 
   642  000D                     	;# 
   643  000E                     	;# 
   644  0010                     	;# 
   645  0011                     	;# 
   646  0012                     	;# 
   647  0013                     	;# 
   648  0015                     	;# 
   649  0016                     	;# 
   650  0016                     	;# 
   651  0017                     	;# 
   652  0018                     	;# 
   653  0019                     	;# 
   654  001A                     	;# 
   655  001B                     	;# 
   656  001C                     	;# 
   657  001E                     	;# 
   658  001F                     	;# 
   659  008C                     	;# 
   660  008D                     	;# 
   661  008E                     	;# 
   662  0090                     	;# 
   663  0091                     	;# 
   664  0092                     	;# 
   665  0093                     	;# 
   666  0095                     	;# 
   667  0096                     	;# 
   668  0097                     	;# 
   669  0098                     	;# 
   670  0099                     	;# 
   671  009A                     	;# 
   672  009B                     	;# 
   673  009B                     	;# 
   674  009C                     	;# 
   675  009D                     	;# 
   676  009E                     	;# 
   677  010C                     	;# 
   678  010D                     	;# 
   679  010E                     	;# 
   680  0110                     	;# 
   681  0111                     	;# 
   682  0112                     	;# 
   683  0113                     	;# 
   684  0114                     	;# 
   685  0115                     	;# 
   686  0116                     	;# 
   687  0117                     	;# 
   688  0118                     	;# 
   689  0119                     	;# 
   690  011A                     	;# 
   691  011B                     	;# 
   692  011D                     	;# 
   693  018C                     	;# 
   694  018D                     	;# 
   695  0191                     	;# 
   696  0191                     	;# 
   697  0192                     	;# 
   698  0193                     	;# 
   699  0193                     	;# 
   700  0193                     	;# 
   701  0194                     	;# 
   702  0195                     	;# 
   703  0196                     	;# 
   704  0199                     	;# 
   705  019A                     	;# 
   706  019B                     	;# 
   707  019B                     	;# 
   708  019B                     	;# 
   709  019B                     	;# 
   710  019C                     	;# 
   711  019C                     	;# 
   712  019D                     	;# 
   713  019E                     	;# 
   714  019F                     	;# 
   715  020D                     	;# 
   716  0210                     	;# 
   717  0211                     	;# 
   718  0212                     	;# 
   719  0213                     	;# 
   720  0214                     	;# 
   721  0215                     	;# 
   722  0215                     	;# 
   723  0216                     	;# 
   724  0217                     	;# 
   725  0291                     	;# 
   726  0291                     	;# 
   727  0292                     	;# 
   728  0293                     	;# 
   729  0294                     	;# 
   730  0295                     	;# 
   731  0295                     	;# 
   732  0296                     	;# 
   733  0298                     	;# 
   734  0298                     	;# 
   735  0299                     	;# 
   736  029A                     	;# 
   737  029B                     	;# 
   738  029C                     	;# 
   739  029C                     	;# 
   740  029D                     	;# 
   741  029E                     	;# 
   742  029F                     	;# 
   743  0311                     	;# 
   744  0311                     	;# 
   745  0312                     	;# 
   746  0313                     	;# 
   747  0314                     	;# 
   748  0315                     	;# 
   749  0315                     	;# 
   750  0316                     	;# 
   751  0318                     	;# 
   752  0318                     	;# 
   753  0319                     	;# 
   754  031A                     	;# 
   755  031C                     	;# 
   756  031C                     	;# 
   757  031D                     	;# 
   758  031E                     	;# 
   759  0394                     	;# 
   760  0395                     	;# 
   761  0396                     	;# 
   762  0415                     	;# 
   763  0416                     	;# 
   764  0417                     	;# 
   765  041C                     	;# 
   766  041D                     	;# 
   767  041E                     	;# 
   768  0791                     	;# 
   769  0792                     	;# 
   770  0793                     	;# 
   771  0794                     	;# 
   772  0795                     	;# 
   773  0798                     	;# 
   774  0799                     	;# 
   775  07A0                     	;# 
   776  07A1                     	;# 
   777  07A3                     	;# 
   778  07A4                     	;# 
   779  07A6                     	;# 
   780  07A7                     	;# 
   781  07A9                     	;# 
   782  07AA                     	;# 
   783  0FE4                     	;# 
   784  0FE5                     	;# 
   785  0FE6                     	;# 
   786  0FE7                     	;# 
   787  0FE8                     	;# 
   788  0FE9                     	;# 
   789  0FEA                     	;# 
   790  0FEB                     	;# 
   791  0FED                     	;# 
   792  0FEE                     	;# 
   793  0FEF                     	;# 
   794  0000                     	;# 
   795  0001                     	;# 
   796  0002                     	;# 
   797  0003                     	;# 
   798  0004                     	;# 
   799  0005                     	;# 
   800  0006                     	;# 
   801  0007                     	;# 
   802  0008                     	;# 
   803  0009                     	;# 
   804  000A                     	;# 
   805  000B                     	;# 
   806  000C                     	;# 
   807  000D                     	;# 
   808  000E                     	;# 
   809  0010                     	;# 
   810  0011                     	;# 
   811  0012                     	;# 
   812  0013                     	;# 
   813  0015                     	;# 
   814  0016                     	;# 
   815  0016                     	;# 
   816  0017                     	;# 
   817  0018                     	;# 
   818  0019                     	;# 
   819  001A                     	;# 
   820  001B                     	;# 
   821  001C                     	;# 
   822  001E                     	;# 
   823  001F                     	;# 
   824  008C                     	;# 
   825  008D                     	;# 
   826  008E                     	;# 
   827  0090                     	;# 
   828  0091                     	;# 
   829  0092                     	;# 
   830  0093                     	;# 
   831  0095                     	;# 
   832  0096                     	;# 
   833  0097                     	;# 
   834  0098                     	;# 
   835  0099                     	;# 
   836  009A                     	;# 
   837  009B                     	;# 
   838  009B                     	;# 
   839  009C                     	;# 
   840  009D                     	;# 
   841  009E                     	;# 
   842  010C                     	;# 
   843  010D                     	;# 
   844  010E                     	;# 
   845  0110                     	;# 
   846  0111                     	;# 
   847  0112                     	;# 
   848  0113                     	;# 
   849  0114                     	;# 
   850  0115                     	;# 
   851  0116                     	;# 
   852  0117                     	;# 
   853  0118                     	;# 
   854  0119                     	;# 
   855  011A                     	;# 
   856  011B                     	;# 
   857  011D                     	;# 
   858  018C                     	;# 
   859  018D                     	;# 
   860  0191                     	;# 
   861  0191                     	;# 
   862  0192                     	;# 
   863  0193                     	;# 
   864  0193                     	;# 
   865  0193                     	;# 
   866  0194                     	;# 
   867  0195                     	;# 
   868  0196                     	;# 
   869  0199                     	;# 
   870  019A                     	;# 
   871  019B                     	;# 
   872  019B                     	;# 
   873  019B                     	;# 
   874  019B                     	;# 
   875  019C                     	;# 
   876  019C                     	;# 
   877  019D                     	;# 
   878  019E                     	;# 
   879  019F                     	;# 
   880  020D                     	;# 
   881  0210                     	;# 
   882  0211                     	;# 
   883  0212                     	;# 
   884  0213                     	;# 
   885  0214                     	;# 
   886  0215                     	;# 
   887  0215                     	;# 
   888  0216                     	;# 
   889  0217                     	;# 
   890  0291                     	;# 
   891  0291                     	;# 
   892  0292                     	;# 
   893  0293                     	;# 
   894  0294                     	;# 
   895  0295                     	;# 
   896  0295                     	;# 
   897  0296                     	;# 
   898  0298                     	;# 
   899  0298                     	;# 
   900  0299                     	;# 
   901  029A                     	;# 
   902  029B                     	;# 
   903  029C                     	;# 
   904  029C                     	;# 
   905  029D                     	;# 
   906  029E                     	;# 
   907  029F                     	;# 
   908  0311                     	;# 
   909  0311                     	;# 
   910  0312                     	;# 
   911  0313                     	;# 
   912  0314                     	;# 
   913  0315                     	;# 
   914  0315                     	;# 
   915  0316                     	;# 
   916  0318                     	;# 
   917  0318                     	;# 
   918  0319                     	;# 
   919  031A                     	;# 
   920  031C                     	;# 
   921  031C                     	;# 
   922  031D                     	;# 
   923  031E                     	;# 
   924  0394                     	;# 
   925  0395                     	;# 
   926  0396                     	;# 
   927  0415                     	;# 
   928  0416                     	;# 
   929  0417                     	;# 
   930  041C                     	;# 
   931  041D                     	;# 
   932  041E                     	;# 
   933  0791                     	;# 
   934  0792                     	;# 
   935  0793                     	;# 
   936  0794                     	;# 
   937  0795                     	;# 
   938  0798                     	;# 
   939  0799                     	;# 
   940  07A0                     	;# 
   941  07A1                     	;# 
   942  07A3                     	;# 
   943  07A4                     	;# 
   944  07A6                     	;# 
   945  07A7                     	;# 
   946  07A9                     	;# 
   947  07AA                     	;# 
   948  0FE4                     	;# 
   949  0FE5                     	;# 
   950  0FE6                     	;# 
   951  0FE7                     	;# 
   952  0FE8                     	;# 
   953  0FE9                     	;# 
   954  0FEA                     	;# 
   955  0FEB                     	;# 
   956  0FED                     	;# 
   957  0FEE                     	;# 
   958  0FEF                     	;# 
   959  0000                     	;# 
   960  0001                     	;# 
   961  0002                     	;# 
   962  0003                     	;# 
   963  0004                     	;# 
   964  0005                     	;# 
   965  0006                     	;# 
   966  0007                     	;# 
   967  0008                     	;# 
   968  0009                     	;# 
   969  000A                     	;# 
   970  000B                     	;# 
   971  000C                     	;# 
   972  000D                     	;# 
   973  000E                     	;# 
   974  0010                     	;# 
   975  0011                     	;# 
   976  0012                     	;# 
   977  0013                     	;# 
   978  0015                     	;# 
   979  0016                     	;# 
   980  0016                     	;# 
   981  0017                     	;# 
   982  0018                     	;# 
   983  0019                     	;# 
   984  001A                     	;# 
   985  001B                     	;# 
   986  001C                     	;# 
   987  001E                     	;# 
   988  001F                     	;# 
   989  008C                     	;# 
   990  008D                     	;# 
   991  008E                     	;# 
   992  0090                     	;# 
   993  0091                     	;# 
   994  0092                     	;# 
   995  0093                     	;# 
   996  0095                     	;# 
   997  0096                     	;# 
   998  0097                     	;# 
   999  0098                     	;# 
  1000  0099                     	;# 
  1001  009A                     	;# 
  1002  009B                     	;# 
  1003  009B                     	;# 
  1004  009C                     	;# 
  1005  009D                     	;# 
  1006  009E                     	;# 
  1007  010C                     	;# 
  1008  010D                     	;# 
  1009  010E                     	;# 
  1010  0110                     	;# 
  1011  0111                     	;# 
  1012  0112                     	;# 
  1013  0113                     	;# 
  1014  0114                     	;# 
  1015  0115                     	;# 
  1016  0116                     	;# 
  1017  0117                     	;# 
  1018  0118                     	;# 
  1019  0119                     	;# 
  1020  011A                     	;# 
  1021  011B                     	;# 
  1022  011D                     	;# 
  1023  018C                     	;# 
  1024  018D                     	;# 
  1025  0191                     	;# 
  1026  0191                     	;# 
  1027  0192                     	;# 
  1028  0193                     	;# 
  1029  0193                     	;# 
  1030  0193                     	;# 
  1031  0194                     	;# 
  1032  0195                     	;# 
  1033  0196                     	;# 
  1034  0199                     	;# 
  1035  019A                     	;# 
  1036  019B                     	;# 
  1037  019B                     	;# 
  1038  019B                     	;# 
  1039  019B                     	;# 
  1040  019C                     	;# 
  1041  019C                     	;# 
  1042  019D                     	;# 
  1043  019E                     	;# 
  1044  019F                     	;# 
  1045  020D                     	;# 
  1046  0210                     	;# 
  1047  0211                     	;# 
  1048  0212                     	;# 
  1049  0213                     	;# 
  1050  0214                     	;# 
  1051  0215                     	;# 
  1052  0215                     	;# 
  1053  0216                     	;# 
  1054  0217                     	;# 
  1055  0291                     	;# 
  1056  0291                     	;# 
  1057  0292                     	;# 
  1058  0293                     	;# 
  1059  0294                     	;# 
  1060  0295                     	;# 
  1061  0295                     	;# 
  1062  0296                     	;# 
  1063  0298                     	;# 
  1064  0298                     	;# 
  1065  0299                     	;# 
  1066  029A                     	;# 
  1067  029B                     	;# 
  1068  029C                     	;# 
  1069  029C                     	;# 
  1070  029D                     	;# 
  1071  029E                     	;# 
  1072  029F                     	;# 
  1073  0311                     	;# 
  1074  0311                     	;# 
  1075  0312                     	;# 
  1076  0313                     	;# 
  1077  0314                     	;# 
  1078  0315                     	;# 
  1079  0315                     	;# 
  1080  0316                     	;# 
  1081  0318                     	;# 
  1082  0318                     	;# 
  1083  0319                     	;# 
  1084  031A                     	;# 
  1085  031C                     	;# 
  1086  031C                     	;# 
  1087  031D                     	;# 
  1088  031E                     	;# 
  1089  0394                     	;# 
  1090  0395                     	;# 
  1091  0396                     	;# 
  1092  0415                     	;# 
  1093  0416                     	;# 
  1094  0417                     	;# 
  1095  041C                     	;# 
  1096  041D                     	;# 
  1097  041E                     	;# 
  1098  0791                     	;# 
  1099  0792                     	;# 
  1100  0793                     	;# 
  1101  0794                     	;# 
  1102  0795                     	;# 
  1103  0798                     	;# 
  1104  0799                     	;# 
  1105  07A0                     	;# 
  1106  07A1                     	;# 
  1107  07A3                     	;# 
  1108  07A4                     	;# 
  1109  07A6                     	;# 
  1110  07A7                     	;# 
  1111  07A9                     	;# 
  1112  07AA                     	;# 
  1113  0FE4                     	;# 
  1114  0FE5                     	;# 
  1115  0FE6                     	;# 
  1116  0FE7                     	;# 
  1117  0FE8                     	;# 
  1118  0FE9                     	;# 
  1119  0FEA                     	;# 
  1120  0FEB                     	;# 
  1121  0FED                     	;# 
  1122  0FEE                     	;# 
  1123  0FEF                     	;# 
  1124  0000                     	;# 
  1125  0001                     	;# 
  1126  0002                     	;# 
  1127  0003                     	;# 
  1128  0004                     	;# 
  1129  0005                     	;# 
  1130  0006                     	;# 
  1131  0007                     	;# 
  1132  0008                     	;# 
  1133  0009                     	;# 
  1134  000A                     	;# 
  1135  000B                     	;# 
  1136  000C                     	;# 
  1137  000D                     	;# 
  1138  000E                     	;# 
  1139  0010                     	;# 
  1140  0011                     	;# 
  1141  0012                     	;# 
  1142  0013                     	;# 
  1143  0015                     	;# 
  1144  0016                     	;# 
  1145  0016                     	;# 
  1146  0017                     	;# 
  1147  0018                     	;# 
  1148  0019                     	;# 
  1149  001A                     	;# 
  1150  001B                     	;# 
  1151  001C                     	;# 
  1152  001E                     	;# 
  1153  001F                     	;# 
  1154  008C                     	;# 
  1155  008D                     	;# 
  1156  008E                     	;# 
  1157  0090                     	;# 
  1158  0091                     	;# 
  1159  0092                     	;# 
  1160  0093                     	;# 
  1161  0095                     	;# 
  1162  0096                     	;# 
  1163  0097                     	;# 
  1164  0098                     	;# 
  1165  0099                     	;# 
  1166  009A                     	;# 
  1167  009B                     	;# 
  1168  009B                     	;# 
  1169  009C                     	;# 
  1170  009D                     	;# 
  1171  009E                     	;# 
  1172  010C                     	;# 
  1173  010D                     	;# 
  1174  010E                     	;# 
  1175  0110                     	;# 
  1176  0111                     	;# 
  1177  0112                     	;# 
  1178  0113                     	;# 
  1179  0114                     	;# 
  1180  0115                     	;# 
  1181  0116                     	;# 
  1182  0117                     	;# 
  1183  0118                     	;# 
  1184  0119                     	;# 
  1185  011A                     	;# 
  1186  011B                     	;# 
  1187  011D                     	;# 
  1188  018C                     	;# 
  1189  018D                     	;# 
  1190  0191                     	;# 
  1191  0191                     	;# 
  1192  0192                     	;# 
  1193  0193                     	;# 
  1194  0193                     	;# 
  1195  0193                     	;# 
  1196  0194                     	;# 
  1197  0195                     	;# 
  1198  0196                     	;# 
  1199  0199                     	;# 
  1200  019A                     	;# 
  1201  019B                     	;# 
  1202  019B                     	;# 
  1203  019B                     	;# 
  1204  019B                     	;# 
  1205  019C                     	;# 
  1206  019C                     	;# 
  1207  019D                     	;# 
  1208  019E                     	;# 
  1209  019F                     	;# 
  1210  020D                     	;# 
  1211  0210                     	;# 
  1212  0211                     	;# 
  1213  0212                     	;# 
  1214  0213                     	;# 
  1215  0214                     	;# 
  1216  0215                     	;# 
  1217  0215                     	;# 
  1218  0216                     	;# 
  1219  0217                     	;# 
  1220  0291                     	;# 
  1221  0291                     	;# 
  1222  0292                     	;# 
  1223  0293                     	;# 
  1224  0294                     	;# 
  1225  0295                     	;# 
  1226  0295                     	;# 
  1227  0296                     	;# 
  1228  0298                     	;# 
  1229  0298                     	;# 
  1230  0299                     	;# 
  1231  029A                     	;# 
  1232  029B                     	;# 
  1233  029C                     	;# 
  1234  029C                     	;# 
  1235  029D                     	;# 
  1236  029E                     	;# 
  1237  029F                     	;# 
  1238  0311                     	;# 
  1239  0311                     	;# 
  1240  0312                     	;# 
  1241  0313                     	;# 
  1242  0314                     	;# 
  1243  0315                     	;# 
  1244  0315                     	;# 
  1245  0316                     	;# 
  1246  0318                     	;# 
  1247  0318                     	;# 
  1248  0319                     	;# 
  1249  031A                     	;# 
  1250  031C                     	;# 
  1251  031C                     	;# 
  1252  031D                     	;# 
  1253  031E                     	;# 
  1254  0394                     	;# 
  1255  0395                     	;# 
  1256  0396                     	;# 
  1257  0415                     	;# 
  1258  0416                     	;# 
  1259  0417                     	;# 
  1260  041C                     	;# 
  1261  041D                     	;# 
  1262  041E                     	;# 
  1263  0791                     	;# 
  1264  0792                     	;# 
  1265  0793                     	;# 
  1266  0794                     	;# 
  1267  0795                     	;# 
  1268  0798                     	;# 
  1269  0799                     	;# 
  1270  07A0                     	;# 
  1271  07A1                     	;# 
  1272  07A3                     	;# 
  1273  07A4                     	;# 
  1274  07A6                     	;# 
  1275  07A7                     	;# 
  1276  07A9                     	;# 
  1277  07AA                     	;# 
  1278  0FE4                     	;# 
  1279  0FE5                     	;# 
  1280  0FE6                     	;# 
  1281  0FE7                     	;# 
  1282  0FE8                     	;# 
  1283  0FE9                     	;# 
  1284  0FEA                     	;# 
  1285  0FEB                     	;# 
  1286  0FED                     	;# 
  1287  0FEE                     	;# 
  1288  0FEF                     	;# 
  1289  0000                     	;# 
  1290  0001                     	;# 
  1291  0002                     	;# 
  1292  0003                     	;# 
  1293  0004                     	;# 
  1294  0005                     	;# 
  1295  0006                     	;# 
  1296  0007                     	;# 
  1297  0008                     	;# 
  1298  0009                     	;# 
  1299  000A                     	;# 
  1300  000B                     	;# 
  1301  000C                     	;# 
  1302  000D                     	;# 
  1303  000E                     	;# 
  1304  0010                     	;# 
  1305  0011                     	;# 
  1306  0012                     	;# 
  1307  0013                     	;# 
  1308  0015                     	;# 
  1309  0016                     	;# 
  1310  0016                     	;# 
  1311  0017                     	;# 
  1312  0018                     	;# 
  1313  0019                     	;# 
  1314  001A                     	;# 
  1315  001B                     	;# 
  1316  001C                     	;# 
  1317  001E                     	;# 
  1318  001F                     	;# 
  1319  008C                     	;# 
  1320  008D                     	;# 
  1321  008E                     	;# 
  1322  0090                     	;# 
  1323  0091                     	;# 
  1324  0092                     	;# 
  1325  0093                     	;# 
  1326  0095                     	;# 
  1327  0096                     	;# 
  1328  0097                     	;# 
  1329  0098                     	;# 
  1330  0099                     	;# 
  1331  009A                     	;# 
  1332  009B                     	;# 
  1333  009B                     	;# 
  1334  009C                     	;# 
  1335  009D                     	;# 
  1336  009E                     	;# 
  1337  010C                     	;# 
  1338  010D                     	;# 
  1339  010E                     	;# 
  1340  0110                     	;# 
  1341  0111                     	;# 
  1342  0112                     	;# 
  1343  0113                     	;# 
  1344  0114                     	;# 
  1345  0115                     	;# 
  1346  0116                     	;# 
  1347  0117                     	;# 
  1348  0118                     	;# 
  1349  0119                     	;# 
  1350  011A                     	;# 
  1351  011B                     	;# 
  1352  011D                     	;# 
  1353  018C                     	;# 
  1354  018D                     	;# 
  1355  0191                     	;# 
  1356  0191                     	;# 
  1357  0192                     	;# 
  1358  0193                     	;# 
  1359  0193                     	;# 
  1360  0193                     	;# 
  1361  0194                     	;# 
  1362  0195                     	;# 
  1363  0196                     	;# 
  1364  0199                     	;# 
  1365  019A                     	;# 
  1366  019B                     	;# 
  1367  019B                     	;# 
  1368  019B                     	;# 
  1369  019B                     	;# 
  1370  019C                     	;# 
  1371  019C                     	;# 
  1372  019D                     	;# 
  1373  019E                     	;# 
  1374  019F                     	;# 
  1375  020D                     	;# 
  1376  0210                     	;# 
  1377  0211                     	;# 
  1378  0212                     	;# 
  1379  0213                     	;# 
  1380  0214                     	;# 
  1381  0215                     	;# 
  1382  0215                     	;# 
  1383  0216                     	;# 
  1384  0217                     	;# 
  1385  0291                     	;# 
  1386  0291                     	;# 
  1387  0292                     	;# 
  1388  0293                     	;# 
  1389  0294                     	;# 
  1390  0295                     	;# 
  1391  0295                     	;# 
  1392  0296                     	;# 
  1393  0298                     	;# 
  1394  0298                     	;# 
  1395  0299                     	;# 
  1396  029A                     	;# 
  1397  029B                     	;# 
  1398  029C                     	;# 
  1399  029C                     	;# 
  1400  029D                     	;# 
  1401  029E                     	;# 
  1402  029F                     	;# 
  1403  0311                     	;# 
  1404  0311                     	;# 
  1405  0312                     	;# 
  1406  0313                     	;# 
  1407  0314                     	;# 
  1408  0315                     	;# 
  1409  0315                     	;# 
  1410  0316                     	;# 
  1411  0318                     	;# 
  1412  0318                     	;# 
  1413  0319                     	;# 
  1414  031A                     	;# 
  1415  031C                     	;# 
  1416  031C                     	;# 
  1417  031D                     	;# 
  1418  031E                     	;# 
  1419  0394                     	;# 
  1420  0395                     	;# 
  1421  0396                     	;# 
  1422  0415                     	;# 
  1423  0416                     	;# 
  1424  0417                     	;# 
  1425  041C                     	;# 
  1426  041D                     	;# 
  1427  041E                     	;# 
  1428  0791                     	;# 
  1429  0792                     	;# 
  1430  0793                     	;# 
  1431  0794                     	;# 
  1432  0795                     	;# 
  1433  0798                     	;# 
  1434  0799                     	;# 
  1435  07A0                     	;# 
  1436  07A1                     	;# 
  1437  07A3                     	;# 
  1438  07A4                     	;# 
  1439  07A6                     	;# 
  1440  07A7                     	;# 
  1441  07A9                     	;# 
  1442  07AA                     	;# 
  1443  0FE4                     	;# 
  1444  0FE5                     	;# 
  1445  0FE6                     	;# 
  1446  0FE7                     	;# 
  1447  0FE8                     	;# 
  1448  0FE9                     	;# 
  1449  0FEA                     	;# 
  1450  0FEB                     	;# 
  1451  0FED                     	;# 
  1452  0FEE                     	;# 
  1453  0FEF                     	;# 
  1454  0000                     	;# 
  1455  0001                     	;# 
  1456  0002                     	;# 
  1457  0003                     	;# 
  1458  0004                     	;# 
  1459  0005                     	;# 
  1460  0006                     	;# 
  1461  0007                     	;# 
  1462  0008                     	;# 
  1463  0009                     	;# 
  1464  000A                     	;# 
  1465  000B                     	;# 
  1466  000C                     	;# 
  1467  000D                     	;# 
  1468  000E                     	;# 
  1469  0010                     	;# 
  1470  0011                     	;# 
  1471  0012                     	;# 
  1472  0013                     	;# 
  1473  0015                     	;# 
  1474  0016                     	;# 
  1475  0016                     	;# 
  1476  0017                     	;# 
  1477  0018                     	;# 
  1478  0019                     	;# 
  1479  001A                     	;# 
  1480  001B                     	;# 
  1481  001C                     	;# 
  1482  001E                     	;# 
  1483  001F                     	;# 
  1484  008C                     	;# 
  1485  008D                     	;# 
  1486  008E                     	;# 
  1487  0090                     	;# 
  1488  0091                     	;# 
  1489  0092                     	;# 
  1490  0093                     	;# 
  1491  0095                     	;# 
  1492  0096                     	;# 
  1493  0097                     	;# 
  1494  0098                     	;# 
  1495  0099                     	;# 
  1496  009A                     	;# 
  1497  009B                     	;# 
  1498  009B                     	;# 
  1499  009C                     	;# 
  1500  009D                     	;# 
  1501  009E                     	;# 
  1502  010C                     	;# 
  1503  010D                     	;# 
  1504  010E                     	;# 
  1505  0110                     	;# 
  1506  0111                     	;# 
  1507  0112                     	;# 
  1508  0113                     	;# 
  1509  0114                     	;# 
  1510  0115                     	;# 
  1511  0116                     	;# 
  1512  0117                     	;# 
  1513  0118                     	;# 
  1514  0119                     	;# 
  1515  011A                     	;# 
  1516  011B                     	;# 
  1517  011D                     	;# 
  1518  018C                     	;# 
  1519  018D                     	;# 
  1520  0191                     	;# 
  1521  0191                     	;# 
  1522  0192                     	;# 
  1523  0193                     	;# 
  1524  0193                     	;# 
  1525  0193                     	;# 
  1526  0194                     	;# 
  1527  0195                     	;# 
  1528  0196                     	;# 
  1529  0199                     	;# 
  1530  019A                     	;# 
  1531  019B                     	;# 
  1532  019B                     	;# 
  1533  019B                     	;# 
  1534  019B                     	;# 
  1535  019C                     	;# 
  1536  019C                     	;# 
  1537  019D                     	;# 
  1538  019E                     	;# 
  1539  019F                     	;# 
  1540  020D                     	;# 
  1541  0210                     	;# 
  1542  0211                     	;# 
  1543  0212                     	;# 
  1544  0213                     	;# 
  1545  0214                     	;# 
  1546  0215                     	;# 
  1547  0215                     	;# 
  1548  0216                     	;# 
  1549  0217                     	;# 
  1550  0291                     	;# 
  1551  0291                     	;# 
  1552  0292                     	;# 
  1553  0293                     	;# 
  1554  0294                     	;# 
  1555  0295                     	;# 
  1556  0295                     	;# 
  1557  0296                     	;# 
  1558  0298                     	;# 
  1559  0298                     	;# 
  1560  0299                     	;# 
  1561  029A                     	;# 
  1562  029B                     	;# 
  1563  029C                     	;# 
  1564  029C                     	;# 
  1565  029D                     	;# 
  1566  029E                     	;# 
  1567  029F                     	;# 
  1568  0311                     	;# 
  1569  0311                     	;# 
  1570  0312                     	;# 
  1571  0313                     	;# 
  1572  0314                     	;# 
  1573  0315                     	;# 
  1574  0315                     	;# 
  1575  0316                     	;# 
  1576  0318                     	;# 
  1577  0318                     	;# 
  1578  0319                     	;# 
  1579  031A                     	;# 
  1580  031C                     	;# 
  1581  031C                     	;# 
  1582  031D                     	;# 
  1583  031E                     	;# 
  1584  0394                     	;# 
  1585  0395                     	;# 
  1586  0396                     	;# 
  1587  0415                     	;# 
  1588  0416                     	;# 
  1589  0417                     	;# 
  1590  041C                     	;# 
  1591  041D                     	;# 
  1592  041E                     	;# 
  1593  0791                     	;# 
  1594  0792                     	;# 
  1595  0793                     	;# 
  1596  0794                     	;# 
  1597  0795                     	;# 
  1598  0798                     	;# 
  1599  0799                     	;# 
  1600  07A0                     	;# 
  1601  07A1                     	;# 
  1602  07A3                     	;# 
  1603  07A4                     	;# 
  1604  07A6                     	;# 
  1605  07A7                     	;# 
  1606  07A9                     	;# 
  1607  07AA                     	;# 
  1608  0FE4                     	;# 
  1609  0FE5                     	;# 
  1610  0FE6                     	;# 
  1611  0FE7                     	;# 
  1612  0FE8                     	;# 
  1613  0FE9                     	;# 
  1614  0FEA                     	;# 
  1615  0FEB                     	;# 
  1616  0FED                     	;# 
  1617  0FEE                     	;# 
  1618  0FEF                     	;# 
  1619                           
  1620                           	psect	idataBANK1
  1621  0800                     __pidataBANK1:
  1622                           
  1623                           ;initializer for lcd_set_cursor@F2781
  1624  0800  3400               	retlw	0
  1625  0801  3440               	retlw	64
  1626  0802  3414               	retlw	20
  1627  0803  3454               	retlw	84
  1628                           
  1629                           ;initializer for print_digit@F2820
  1630  0804  34FF               	retlw	255
  1631  0805  34FF               	retlw	255
  1632  0806  34FF               	retlw	255
  1633  0807  34FF               	retlw	255
  1634                           
  1635                           	psect	idataBANK2
  1636  1003                     __pidataBANK2:
  1637                           
  1638                           ;initializer for main@F2849
  1639  1003  3402               	retlw	2
  1640  1004  3404               	retlw	4
  1641  1005  3400               	retlw	0
  1642  1006  3400               	retlw	0
  1643  1007  3400               	retlw	0
  1644  1008  3400               	retlw	0
  1645  1009  3400               	retlw	0
  1646  100A  3400               	retlw	0
  1647  100B  3400               	retlw	0
  1648  100C  3400               	retlw	0
  1649  100D  3412               	retlw	18
  1650  100E  3402               	retlw	2
  1651                           
  1652                           ;initializer for _segdata
  1653  100F  343F               	retlw	63
  1654  1010  3406               	retlw	6
  1655  1011  345B               	retlw	91
  1656  1012  344F               	retlw	79
  1657  1013  3466               	retlw	102
  1658  1014  346D               	retlw	109
  1659  1015  347D               	retlw	125
  1660  1016  3407               	retlw	7
  1661  1017  347F               	retlw	127
  1662  1018  346F               	retlw	111
  1663                           
  1664                           ;initializer for main@F2851
  1665  1019  3427               	retlw	39
  1666  101A  3410               	retlw	16
  1667  101B  3402               	retlw	2
  1668  101C  3400               	retlw	0
  1669                           
  1670                           ;initializer for main@F2853
  1671  101D  3408               	retlw	8
  1672  101E  3410               	retlw	16
  1673  000D                     _PORTBbits	set	13
  1674  0075                     _RC5	set	117
  1675  0076                     _RC6	set	118
  1676  0077                     _RC7	set	119
  1677  0097                     _WDTCON	set	151
  1678  0098                     _OSCTUNE	set	152
  1679  0099                     _OSCCON	set	153
  1680  0095                     _OPTION_REGbits	set	149
  1681  008E                     _TRISC	set	142
  1682  008D                     _TRISB	set	141
  1683  008C                     _TRISA	set	140
  1684  0090                     _TRISE	set	144
  1685  0116                     _BORCON	set	278
  1686  011D                     _APFCON	set	285
  1687  010E                     _LATC	set	270
  1688  010D                     _LATB	set	269
  1689  010C                     _LATA	set	268
  1690  0110                     _LATE	set	272
  1691  018C                     _ANSELA	set	396
  1692  018D                     _ANSELB	set	397
  1693  0215                     _SSPCON1	set	533
  1694  0212                     _SSPADD	set	530
  1695  0215                     _SSPCON1bits	set	533
  1696  0214                     _SSPSTATbits	set	532
  1697  0211                     _SSPBUF	set	529
  1698  0216                     _SSPCON2bits	set	534
  1699  0214                     _SSPSTAT	set	532
  1700  0216                     _SSPCON2	set	534
  1701  020D                     _WPUB	set	525
  1702  0210                     _WPUE	set	528
  1703                           
  1704                           	psect	stringtext1
  1705  2000                     __pstringtext1:
  1706  2000                     STR_3:
  1707  2000  344C               	retlw	76	;'L'
  1708  2001  346F               	retlw	111	;'o'
  1709  2002  3461               	retlw	97	;'a'
  1710  2003  3464               	retlw	100	;'d'
  1711  2004  3420               	retlw	32	;' '
  1712  2005  3463               	retlw	99	;'c'
  1713  2006  3465               	retlw	101	;'e'
  1714  2007  346C               	retlw	108	;'l'
  1715  2008  346C               	retlw	108	;'l'
  1716  2009  3420               	retlw	32	;' '
  1717  200A  3455               	retlw	85	;'U'
  1718  200B  346E               	retlw	110	;'n'
  1719  200C  3469               	retlw	105	;'i'
  1720  200D  3474               	retlw	116	;'t'
  1721  200E  3400               	retlw	0
  1722                           
  1723                           	psect	stringtext2
  1724  200F                     __pstringtext2:
  1725  200F                     STR_7:
  1726  200F  3473               	retlw	115	;'s'
  1727  2010  3465               	retlw	101	;'e'
  1728  2011  3474               	retlw	116	;'t'
  1729  2012  3420               	retlw	32	;' '
  1730  2013  346D               	retlw	109	;'m'
  1731  2014  3461               	retlw	97	;'a'
  1732  2015  3478               	retlw	120	;'x'
  1733  2016  3420               	retlw	32	;' '
  1734  2017  346D               	retlw	109	;'m'
  1735  2018  346C               	retlw	108	;'l'
  1736  2019  3420               	retlw	32	;' '
  1737  201A  3425               	retlw	37	;'%'
  1738  201B  3464               	retlw	100	;'d'
  1739  201C  3400               	retlw	0
  1740                           
  1741                           	psect	stringtext3
  1742  201D                     __pstringtext3:
  1743  201D                     STR_5:
  1744  201D  3425               	retlw	37	;'%'
  1745  201E  3464               	retlw	100	;'d'
  1746  201F  346D               	retlw	109	;'m'
  1747  2020  346C               	retlw	108	;'l'
  1748  2021  3420               	retlw	32	;' '
  1749  2022  346D               	retlw	109	;'m'
  1750  2023  3461               	retlw	97	;'a'
  1751  2024  3478               	retlw	120	;'x'
  1752  2025  343D               	retlw	61	;'='
  1753  2026  3425               	retlw	37	;'%'
  1754  2027  3464               	retlw	100	;'d'
  1755  2028  346D               	retlw	109	;'m'
  1756  2029  346C               	retlw	108	;'l'
  1757  202A  3400               	retlw	0
  1758                           
  1759                           	psect	stringtext4
  1760  202B                     __pstringtext4:
  1761  202B                     STR_2:
  1762  202B  3449               	retlw	73	;'I'
  1763  202C  346E               	retlw	110	;'n'
  1764  202D  3469               	retlw	105	;'i'
  1765  202E  3474               	retlw	116	;'t'
  1766  202F  3469               	retlw	105	;'i'
  1767  2030  3461               	retlw	97	;'a'
  1768  2031  346C               	retlw	108	;'l'
  1769  2032  3469               	retlw	105	;'i'
  1770  2033  347A               	retlw	122	;'z'
  1771  2034  3465               	retlw	101	;'e'
  1772  2035  3400               	retlw	0
  1773                           
  1774                           	psect	stringtext5
  1775  2036                     __pstringtext5:
  1776  2036                     STR_4:
  1777  2036  3425               	retlw	37	;'%'
  1778  2037  346C               	retlw	108	;'l'
  1779  2038  3475               	retlw	117	;'u'
  1780  2039  3420               	retlw	32	;' '
  1781  203A  3476               	retlw	118	;'v'
  1782  203B  3461               	retlw	97	;'a'
  1783  203C  346C               	retlw	108	;'l'
  1784  203D  3400               	retlw	0
  1785                           
  1786                           	psect	stringtext6
  1787  203E                     __pstringtext6:
  1788  203E                     STR_6:
  1789  203E  3425               	retlw	37	;'%'
  1790  203F  3464               	retlw	100	;'d'
  1791  2040  3420               	retlw	32	;' '
  1792  2041  3425               	retlw	37	;'%'
  1793  2042  3425               	retlw	37	;'%'
  1794  2043  3400               	retlw	0
  1795                           
  1796                           	psect	stringtext7
  1797  2044                     __pstringtext7:
  1798  2044                     STR_8:
  1799  2044  346C               	retlw	108	;'l'
  1800  2045  3464               	retlw	100	;'d'
  1801  2046  3400               	retlw	0
  1802                           
  1803                           	psect	stringtext8
  1804  2047                     __pstringtext8:
  1805  2047                     STR_12:
  1806  2047  346C               	retlw	108	;'l'
  1807  2048  3469               	retlw	105	;'i'
  1808  2049  3400               	retlw	0
  1809                           
  1810                           	psect	stringtext9
  1811  204A                     __pstringtext9:
  1812  204A                     STR_17:
  1813  204A  346C               	retlw	108	;'l'
  1814  204B  3475               	retlw	117	;'u'
  1815  204C  3400               	retlw	0
  1816                           
  1817                           	psect	stringtext10
  1818  204D                     __pstringtext10:
  1819  204D                     STR_1:
  1820  204D  3420               	retlw	32	;' '
  1821  204E  3400               	retlw	0
  1822                           
  1823                           	psect	stringtext11
  1824  0000                     __pstringtext11:
  1825  2044                     
  1826                           	psect	cinit
  1827  07CD                     start_initialization:	
  1828                           ; #config settings
  1829                           
  1830  07CD                     __initialization:
  1831                           
  1832                           ; Initialize objects allocated to BANK1
  1833  07CD  3000               	movlw	low __pidataBANK1
  1834  07CE  0084               	movwf	4
  1835  07CF  3088               	movlw	(high __pidataBANK1)| (0+128)
  1836  07D0  0085               	movwf	5
  1837  07D1  30E5               	movlw	low __pdataBANK1
  1838  07D2  0086               	movwf	6
  1839  07D3  3000               	movlw	high __pdataBANK1
  1840  07D4  0087               	movwf	7
  1841  07D5  3008               	movlw	8
  1842  07D6  319E  2622  3187   	fcall	init_ram
  1843                           
  1844                           ; Initialize objects allocated to BANK2
  1845  07D9  3003               	movlw	low __pidataBANK2
  1846  07DA  0084               	movwf	4
  1847  07DB  3090               	movlw	(high __pidataBANK2)| (0+128)
  1848  07DC  0085               	movwf	5
  1849  07DD  3020               	movlw	low __pdataBANK2
  1850  07DE  0086               	movwf	6
  1851  07DF  3001               	movlw	high __pdataBANK2
  1852  07E0  0087               	movwf	7
  1853  07E1  301C               	movlw	28
  1854  07E2  319E  2622  3187   	fcall	init_ram
  1855                           
  1856                           ; Clear objects allocated to BANK1
  1857  07E5  30D8               	movlw	low __pbssBANK1
  1858  07E6  0084               	movwf	4
  1859  07E7  3000               	movlw	high __pbssBANK1
  1860  07E8  0085               	movwf	5
  1861  07E9  300D               	movlw	13
  1862  07EA  319E  261C  3187   	fcall	clear_ram0
  1863                           
  1864                           ; Clear objects allocated to BANK2
  1865  07ED  3056               	movlw	low __pbssBANK2
  1866  07EE  0084               	movwf	4
  1867  07EF  3001               	movlw	high __pbssBANK2
  1868  07F0  0085               	movwf	5
  1869  07F1  3008               	movlw	8
  1870  07F2  319E  261C  3187   	fcall	clear_ram0
  1871                           
  1872                           ; Clear objects allocated to BANK3
  1873  07F5  30A0               	movlw	low __pbssBANK3
  1874  07F6  0084               	movwf	4
  1875  07F7  3001               	movlw	high __pbssBANK3
  1876  07F8  0085               	movwf	5
  1877  07F9  3020               	movlw	32
  1878  07FA  319E  261C  3187   	fcall	clear_ram0
  1879  07FD                     end_of_initialization:	
  1880                           ;End of C runtime variable initialization code
  1881                           
  1882  07FD                     __end_of__initialization:
  1883  07FD  0020               	movlb	0
  1884  07FE  318A  2A9D         	ljmp	_main	;jump to C main() function
  1885                           
  1886                           	psect	bssBANK1
  1887  00D8                     __pbssBANK1:
  1888  00D8                     clear_segment@F2810:
  1889  00D8                     	ds	4
  1890  00DC                     _nout:
  1891  00DC                     	ds	2
  1892  00DE                     _width:
  1893  00DE                     	ds	2
  1894  00E0                     _prec:
  1895  00E0                     	ds	2
  1896  00E2                     _flags:
  1897  00E2                     	ds	2
  1898  00E4                     _m_brightness:
  1899  00E4                     	ds	1
  1900                           
  1901                           	psect	dataBANK1
  1902  00E5                     __pdataBANK1:
  1903  00E5                     lcd_set_cursor@F2781:
  1904  00E5                     	ds	4
  1905  00E9                     print_digit@F2820:
  1906  00E9                     	ds	4
  1907                           
  1908                           	psect	bssBANK2
  1909  0156                     __pbssBANK2:
  1910  0156                     main@F2855:
  1911  0156                     	ds	8
  1912                           
  1913                           	psect	dataBANK2
  1914  0120                     __pdataBANK2:
  1915  0120                     main@F2849:
  1916  0120                     	ds	12
  1917  012C                     _segdata:
  1918  012C                     	ds	10
  1919  0136                     main@F2851:
  1920  0136                     	ds	4
  1921  013A                     main@F2853:
  1922  013A                     	ds	2
  1923                           
  1924                           	psect	bssBANK3
  1925  01A0                     __pbssBANK3:
  1926  01A0                     _dbuf:
  1927  01A0                     	ds	32
  1928                           
  1929                           	psect	inittext
  1930  1E22                     init_ram:
  1931  1E22  00FE               	movwf	btemp
  1932  1E23                     initloop:
  1933  1E23  0012               	moviw fsr0++
  1934  1E24  001E               	movwi fsr1++
  1935  1E25  0BFE               	decfsz	btemp,f
  1936  1E26  2E23               	goto	initloop
  1937  1E27  3400               	retlw	0
  1938                           
  1939                           	psect	clrtext
  1940  1E1C                     clear_ram0:	
  1941                           ;	Called with FSR0 containing the base address, and
  1942                           ;	WREG with the size to clear
  1943                           
  1944  1E1C  0064               	clrwdt	;clear the watchdog before getting into this loop
  1945  1E1D                     clrloop0:
  1946  1E1D  0180               	clrf	0	;clear RAM location pointed to by FSR
  1947  1E1E  3101               	addfsr 0,1
  1948  1E1F  0B89               	decfsz	9,f	;Have we reached the end of clearing yet?
  1949  1E20  2E1D               	goto	clrloop0	;have we reached the end yet?
  1950  1E21  3400               	retlw	0	;all done for this memory range, return
  1951                           
  1952                           	psect	cstackBANK2
  1953  013C                     __pcstackBANK2:
  1954  013C                     main@lcd:
  1955                           
  1956                           ; 4 bytes @ 0x0
  1957  013C                     	ds	4
  1958  0140                     main@tm1637:
  1959                           
  1960                           ; 2 bytes @ 0x4
  1961  0140                     	ds	2
  1962  0142                     main@loadcell:
  1963                           
  1964                           ; 12 bytes @ 0x6
  1965  0142                     	ds	12
  1966  014E                     main@drink:
  1967                           
  1968                           ; 8 bytes @ 0x12
  1969  014E                     	ds	8
  1970                           
  1971                           	psect	cstackBANK1
  1972  00A0                     __pcstackBANK1:
  1973  00A0                     ??_vfprintf:
  1974  00A0                     calc_percentage@p:	
  1975                           ; 1 bytes @ 0x0
  1976                           
  1977                           
  1978                           ; 1 bytes @ 0x0
  1979  00A0                     	ds	2
  1980  00A2                     vfprintf@fp:
  1981                           
  1982                           ; 1 bytes @ 0x2
  1983  00A2                     	ds	1
  1984  00A3                     vfprintf@cfmt:
  1985                           
  1986                           ; 2 bytes @ 0x3
  1987  00A3                     	ds	2
  1988  00A5                     ?_sprintf:
  1989  00A5                     sprintf@fmt:	
  1990                           ; 2 bytes @ 0x5
  1991                           
  1992                           
  1993                           ; 2 bytes @ 0x5
  1994  00A5                     	ds	6
  1995  00AB                     ??_sprintf:
  1996                           
  1997                           ; 1 bytes @ 0xB
  1998  00AB                     	ds	1
  1999  00AC                     sprintf@ap:
  2000                           
  2001                           ; 1 bytes @ 0xC
  2002  00AC                     	ds	1
  2003  00AD                     sprintf@s:
  2004                           
  2005                           ; 1 bytes @ 0xD
  2006  00AD                     	ds	1
  2007  00AE                     sprintf@f:
  2008                           
  2009                           ; 5 bytes @ 0xE
  2010  00AE                     	ds	5
  2011  00B3                     ??_initialize:
  2012  00B3                     ??_print_gram:	
  2013                           ; 1 bytes @ 0x13
  2014                           
  2015  00B3                     ?_set_max_gram:	
  2016                           ; 1 bytes @ 0x13
  2017                           
  2018  00B3                     set_max_gram@max_gram:	
  2019                           ; 1 bytes @ 0x13
  2020                           
  2021                           
  2022                           ; 2 bytes @ 0x13
  2023  00B3                     	ds	1
  2024  00B4                     initialize@valstr:
  2025                           
  2026                           ; 16 bytes @ 0x14
  2027  00B4                     	ds	1
  2028  00B5                     set_max_gram@empty_gram:
  2029  00B5                     print_gram@row1:	
  2030                           ; 2 bytes @ 0x15
  2031                           
  2032                           
  2033                           ; 16 bytes @ 0x15
  2034  00B5                     	ds	2
  2035  00B7                     set_max_gram@valstr:
  2036                           
  2037                           ; 16 bytes @ 0x17
  2038  00B7                     	ds	13
  2039  00C4                     initialize@p:
  2040                           
  2041                           ; 1 bytes @ 0x24
  2042  00C4                     	ds	1
  2043  00C5                     print_gram@row2:
  2044                           
  2045                           ; 16 bytes @ 0x25
  2046  00C5                     	ds	2
  2047  00C7                     set_max_gram@p:
  2048                           
  2049                           ; 1 bytes @ 0x27
  2050  00C7                     	ds	14
  2051  00D5                     print_gram@p:
  2052                           
  2053                           ; 1 bytes @ 0x35
  2054  00D5                     	ds	1
  2055  00D6                     ??_main:
  2056                           
  2057                           ; 1 bytes @ 0x36
  2058  00D6                     	ds	2
  2059                           
  2060                           	psect	cstackCOMMON
  2061  0070                     __pcstackCOMMON:
  2062  0070                     ?_OSCILLATOR_Initialize:
  2063  0070                     ??_OSCILLATOR_Initialize:	
  2064                           ; 1 bytes @ 0x0
  2065                           
  2066  0070                     ?_WDT_Initialize:	
  2067                           ; 1 bytes @ 0x0
  2068                           
  2069  0070                     ??_WDT_Initialize:	
  2070                           ; 1 bytes @ 0x0
  2071                           
  2072  0070                     ?_initialize:	
  2073                           ; 1 bytes @ 0x0
  2074                           
  2075  0070                     ?_calc_percentage:	
  2076                           ; 1 bytes @ 0x0
  2077                           
  2078  0070                     ?_print_gram:	
  2079                           ; 1 bytes @ 0x0
  2080                           
  2081  0070                     ?_putch:	
  2082                           ; 1 bytes @ 0x0
  2083                           
  2084  0070                     ??_putch:	
  2085                           ; 1 bytes @ 0x0
  2086                           
  2087  0070                     ?_PIN_MANAGER_Initialize:	
  2088                           ; 1 bytes @ 0x0
  2089                           
  2090  0070                     ??_PIN_MANAGER_Initialize:	
  2091                           ; 1 bytes @ 0x0
  2092                           
  2093  0070                     ?_SYSTEM_Initialize:	
  2094                           ; 1 bytes @ 0x0
  2095                           
  2096  0070                     ??_SYSTEM_Initialize:	
  2097                           ; 1 bytes @ 0x0
  2098                           
  2099  0070                     ?_i2c_wait:	
  2100                           ; 1 bytes @ 0x0
  2101                           
  2102  0070                     ??_i2c_wait:	
  2103                           ; 1 bytes @ 0x0
  2104                           
  2105  0070                     ?_i2c_start:	
  2106                           ; 1 bytes @ 0x0
  2107                           
  2108  0070                     ??_i2c_start:	
  2109                           ; 1 bytes @ 0x0
  2110                           
  2111  0070                     ?_i2c_stop:	
  2112                           ; 1 bytes @ 0x0
  2113                           
  2114  0070                     ??_i2c_stop:	
  2115                           ; 1 bytes @ 0x0
  2116                           
  2117  0070                     ?_i2c_write:	
  2118                           ; 1 bytes @ 0x0
  2119                           
  2120  0070                     ??_i2c_write:	
  2121                           ; 1 bytes @ 0x0
  2122                           
  2123  0070                     ?_main:	
  2124                           ; 1 bytes @ 0x0
  2125                           
  2126  0070                     ?_CLK_SET_OUTPUT:	
  2127                           ; 1 bytes @ 0x0
  2128                           
  2129  0070                     ??_CLK_SET_OUTPUT:	
  2130                           ; 1 bytes @ 0x0
  2131                           
  2132  0070                     ?_CLK_SET_HIGH:	
  2133                           ; 1 bytes @ 0x0
  2134                           
  2135  0070                     ??_CLK_SET_HIGH:	
  2136                           ; 1 bytes @ 0x0
  2137                           
  2138  0070                     ?_CLK_SET_LOW:	
  2139                           ; 1 bytes @ 0x0
  2140                           
  2141  0070                     ??_CLK_SET_LOW:	
  2142                           ; 1 bytes @ 0x0
  2143                           
  2144  0070                     ?_DIO_SET_OUTPUT:	
  2145                           ; 1 bytes @ 0x0
  2146                           
  2147  0070                     ??_DIO_SET_OUTPUT:	
  2148                           ; 1 bytes @ 0x0
  2149                           
  2150  0070                     ?_DIO_SET_INPUT:	
  2151                           ; 1 bytes @ 0x0
  2152                           
  2153  0070                     ??_DIO_SET_INPUT:	
  2154                           ; 1 bytes @ 0x0
  2155                           
  2156  0070                     ?_DIO_SET_HIGH:	
  2157                           ; 1 bytes @ 0x0
  2158                           
  2159  0070                     ??_DIO_SET_HIGH:	
  2160                           ; 1 bytes @ 0x0
  2161                           
  2162  0070                     ?_DIO_SET_LOW:	
  2163                           ; 1 bytes @ 0x0
  2164                           
  2165  0070                     ??_DIO_SET_LOW:	
  2166                           ; 1 bytes @ 0x0
  2167                           
  2168  0070                     ?_start_segment:	
  2169                           ; 1 bytes @ 0x0
  2170                           
  2171  0070                     ?_stop_segment:	
  2172                           ; 1 bytes @ 0x0
  2173                           
  2174  0070                     ?_get_DIO_PIN_value:	
  2175                           ; 1 bytes @ 0x0
  2176                           
  2177  0070                     ??_get_DIO_PIN_value:	
  2178                           ; 1 bytes @ 0x0
  2179                           
  2180  0070                     ?_set_brigthness:	
  2181                           ; 1 bytes @ 0x0
  2182                           
  2183  0070                     ?_initialize_digit:	
  2184                           ; 1 bytes @ 0x0
  2185                           
  2186  0070                     ?_set_CELL_CLK_LOW:	
  2187                           ; 1 bytes @ 0x0
  2188                           
  2189  0070                     ??_set_CELL_CLK_LOW:	
  2190                           ; 1 bytes @ 0x0
  2191                           
  2192  0070                     ?_set_CELL_CLK_HIGH:	
  2193                           ; 1 bytes @ 0x0
  2194                           
  2195  0070                     ??_set_CELL_CLK_HIGH:	
  2196                           ; 1 bytes @ 0x0
  2197                           
  2198  0070                     ?_scale_convert_gram:	
  2199                           ; 1 bytes @ 0x0
  2200                           
  2201  0070                     ?_lcd_init:	
  2202                           ; 1 bytes @ 0x0
  2203                           
  2204  0070                     ?_lcd_backlight:	
  2205                           ; 1 bytes @ 0x0
  2206                           
  2207  0070                     ?_lcd_clear:	
  2208                           ; 1 bytes @ 0x0
  2209                           
  2210  0070                     ??___aodiv:	
  2211                           ; 1 bytes @ 0x0
  2212                           
  2213  0070                     ??___aomod:	
  2214                           ; 1 bytes @ 0x0
  2215                           
  2216  0070                     ??___lodiv:	
  2217                           ; 1 bytes @ 0x0
  2218                           
  2219  0070                     ??___lomod:	
  2220                           ; 1 bytes @ 0x0
  2221                           
  2222  0070                     ?__Umul8_16:	
  2223                           ; 1 bytes @ 0x0
  2224                           
  2225  0070                     ?_fputc:	
  2226                           ; 2 bytes @ 0x0
  2227                           
  2228  0070                     ?_strlen:	
  2229                           ; 2 bytes @ 0x0
  2230                           
  2231  0070                     ?_strncmp:	
  2232                           ; 2 bytes @ 0x0
  2233                           
  2234  0070                     ?_get_CELL_DAT_VAL:	
  2235                           ; 2 bytes @ 0x0
  2236                           
  2237  0070                     ?___awdiv:	
  2238                           ; 2 bytes @ 0x0
  2239                           
  2240  0070                     ?___awmod:	
  2241                           ; 2 bytes @ 0x0
  2242                           
  2243  0070                     ?___lldiv:	
  2244                           ; 2 bytes @ 0x0
  2245                           
  2246  0070                     ?___xxtofl:	
  2247                           ; 4 bytes @ 0x0
  2248                           
  2249  0070                     i2c_write@data:	
  2250                           ; 4 bytes @ 0x0
  2251                           
  2252  0070                     set_brigthness@brightness:	
  2253                           ; 1 bytes @ 0x0
  2254                           
  2255  0070                     __Umul8_16@multiplicand:	
  2256                           ; 1 bytes @ 0x0
  2257                           
  2258  0070                     putch@c:	
  2259                           ; 1 bytes @ 0x0
  2260                           
  2261  0070                     ___awdiv@divisor:	
  2262                           ; 1 bytes @ 0x0
  2263                           
  2264  0070                     ___awmod@divisor:	
  2265                           ; 2 bytes @ 0x0
  2266                           
  2267  0070                     fputc@c:	
  2268                           ; 2 bytes @ 0x0
  2269                           
  2270  0070                     strncmp@_l:	
  2271                           ; 2 bytes @ 0x0
  2272                           
  2273  0070                     ___lldiv@divisor:	
  2274                           ; 2 bytes @ 0x0
  2275                           
  2276  0070                     ___xxtofl@val:	
  2277                           ; 4 bytes @ 0x0
  2278                           
  2279                           
  2280                           ; 4 bytes @ 0x0
  2281  0070                     	ds	1
  2282  0071                     ?_lcd_cmd:
  2283  0071                     CLK_SET_OUTPUT@p:	
  2284                           ; 1 bytes @ 0x1
  2285                           
  2286  0071                     CLK_SET_HIGH@p:	
  2287                           ; 1 bytes @ 0x1
  2288                           
  2289  0071                     CLK_SET_LOW@p:	
  2290                           ; 1 bytes @ 0x1
  2291                           
  2292  0071                     DIO_SET_OUTPUT@p:	
  2293                           ; 1 bytes @ 0x1
  2294                           
  2295  0071                     DIO_SET_INPUT@p:	
  2296                           ; 1 bytes @ 0x1
  2297                           
  2298  0071                     DIO_SET_HIGH@p:	
  2299                           ; 1 bytes @ 0x1
  2300                           
  2301  0071                     DIO_SET_LOW@p:	
  2302                           ; 1 bytes @ 0x1
  2303                           
  2304  0071                     get_DIO_PIN_value@p:	
  2305                           ; 1 bytes @ 0x1
  2306                           
  2307  0071                     set_brigthness@on:	
  2308                           ; 1 bytes @ 0x1
  2309                           
  2310  0071                     set_CELL_CLK_LOW@p:	
  2311                           ; 1 bytes @ 0x1
  2312                           
  2313  0071                     set_CELL_CLK_HIGH@p:	
  2314                           ; 1 bytes @ 0x1
  2315                           
  2316  0071                     lcd_cmd@cmd:	
  2317                           ; 1 bytes @ 0x1
  2318                           
  2319  0071                     ___aodiv@counter:	
  2320                           ; 1 bytes @ 0x1
  2321                           
  2322  0071                     ___aomod@counter:	
  2323                           ; 1 bytes @ 0x1
  2324                           
  2325  0071                     ___lomod@counter:	
  2326                           ; 1 bytes @ 0x1
  2327                           
  2328  0071                     ___lodiv@quotient:	
  2329                           ; 1 bytes @ 0x1
  2330                           
  2331                           
  2332                           ; 8 bytes @ 0x1
  2333  0071                     	ds	1
  2334  0072                     ??__Umul8_16:
  2335  0072                     ??_strlen:	
  2336                           ; 1 bytes @ 0x2
  2337                           
  2338  0072                     ??_start_segment:	
  2339                           ; 1 bytes @ 0x2
  2340                           
  2341  0072                     ??_stop_segment:	
  2342                           ; 1 bytes @ 0x2
  2343                           
  2344  0072                     ?_write_byte:	
  2345                           ; 1 bytes @ 0x2
  2346                           
  2347  0072                     ??_set_brigthness:	
  2348                           ; 1 bytes @ 0x2
  2349                           
  2350  0072                     ??_get_CELL_DAT_VAL:	
  2351                           ; 1 bytes @ 0x2
  2352                           
  2353  0072                     ??_lcd_cmd:	
  2354                           ; 1 bytes @ 0x2
  2355                           
  2356  0072                     start_segment@p:	
  2357                           ; 1 bytes @ 0x2
  2358                           
  2359  0072                     stop_segment@p:	
  2360                           ; 1 bytes @ 0x2
  2361                           
  2362  0072                     write_byte@b:	
  2363                           ; 1 bytes @ 0x2
  2364                           
  2365  0072                     lcd_cmd@p:	
  2366                           ; 1 bytes @ 0x2
  2367                           
  2368  0072                     ___aodiv@sign:	
  2369                           ; 1 bytes @ 0x2
  2370                           
  2371  0072                     ___aomod@sign:	
  2372                           ; 1 bytes @ 0x2
  2373                           
  2374  0072                     fputc@fp:	
  2375                           ; 1 bytes @ 0x2
  2376                           
  2377  0072                     ___awdiv@dividend:	
  2378                           ; 1 bytes @ 0x2
  2379                           
  2380  0072                     ___awmod@dividend:	
  2381                           ; 2 bytes @ 0x2
  2382                           
  2383  0072                     strncmp@_r:	
  2384                           ; 2 bytes @ 0x2
  2385                           
  2386                           
  2387                           ; 2 bytes @ 0x2
  2388  0072                     	ds	1
  2389  0073                     ?_write4bits:
  2390  0073                     ?_command:	
  2391                           ; 1 bytes @ 0x3
  2392                           
  2393  0073                     ??_fputc:	
  2394                           ; 1 bytes @ 0x3
  2395                           
  2396  0073                     ??_write_byte:	
  2397                           ; 1 bytes @ 0x3
  2398                           
  2399  0073                     ??_lcd_backlight:	
  2400                           ; 1 bytes @ 0x3
  2401                           
  2402  0073                     ?_abs:	
  2403                           ; 1 bytes @ 0x3
  2404                           
  2405  0073                     set_brigthness@p:	
  2406                           ; 2 bytes @ 0x3
  2407                           
  2408  0073                     command@val:	
  2409                           ; 1 bytes @ 0x3
  2410                           
  2411  0073                     write4bits@val:	
  2412                           ; 1 bytes @ 0x3
  2413                           
  2414  0073                     strlen@a:	
  2415                           ; 1 bytes @ 0x3
  2416                           
  2417  0073                     abs@a:	
  2418                           ; 1 bytes @ 0x3
  2419                           
  2420  0073                     ___aodiv@quotient:	
  2421                           ; 2 bytes @ 0x3
  2422                           
  2423                           
  2424                           ; 8 bytes @ 0x3
  2425  0073                     	ds	1
  2426  0074                     ??_write4bits:
  2427  0074                     ??___awdiv:	
  2428                           ; 1 bytes @ 0x4
  2429                           
  2430  0074                     ??___awmod:	
  2431                           ; 1 bytes @ 0x4
  2432                           
  2433  0074                     ??___xxtofl:	
  2434                           ; 1 bytes @ 0x4
  2435                           
  2436  0074                     write_byte@ack:	
  2437                           ; 1 bytes @ 0x4
  2438                           
  2439  0074                     lcd_backlight@p:	
  2440                           ; 1 bytes @ 0x4
  2441                           
  2442  0074                     command@mode:	
  2443                           ; 1 bytes @ 0x4
  2444                           
  2445  0074                     strlen@s:	
  2446                           ; 1 bytes @ 0x4
  2447                           
  2448  0074                     __Umul8_16@product:	
  2449                           ; 1 bytes @ 0x4
  2450                           
  2451  0074                     strncmp@n:	
  2452                           ; 2 bytes @ 0x4
  2453                           
  2454  0074                     ___lldiv@dividend:	
  2455                           ; 2 bytes @ 0x4
  2456                           
  2457                           
  2458                           ; 4 bytes @ 0x4
  2459  0074                     	ds	1
  2460  0075                     ??_command:
  2461  0075                     ??_abs:	
  2462                           ; 1 bytes @ 0x5
  2463                           
  2464  0075                     write_byte@data:	
  2465                           ; 1 bytes @ 0x5
  2466                           
  2467  0075                     get_CELL_DAT_VAL@p:	
  2468                           ; 1 bytes @ 0x5
  2469                           
  2470  0075                     write4bits@p:	
  2471                           ; 1 bytes @ 0x5
  2472                           
  2473  0075                     ___awdiv@counter:	
  2474                           ; 1 bytes @ 0x5
  2475                           
  2476  0075                     ___awmod@counter:	
  2477                           ; 1 bytes @ 0x5
  2478                           
  2479                           
  2480                           ; 1 bytes @ 0x5
  2481  0075                     	ds	1
  2482  0076                     ??_strncmp:
  2483  0076                     ??_lcd_init:	
  2484                           ; 1 bytes @ 0x6
  2485                           
  2486  0076                     write_byte@i:	
  2487                           ; 1 bytes @ 0x6
  2488                           
  2489  0076                     ___awdiv@sign:	
  2490                           ; 1 bytes @ 0x6
  2491                           
  2492  0076                     ___awmod@sign:	
  2493                           ; 1 bytes @ 0x6
  2494                           
  2495  0076                     __Umul8_16@word_mpld:	
  2496                           ; 1 bytes @ 0x6
  2497                           
  2498                           
  2499                           ; 2 bytes @ 0x6
  2500  0076                     	ds	1
  2501  0077                     write_byte@p:
  2502  0077                     command@highnib:	
  2503                           ; 1 bytes @ 0x7
  2504                           
  2505  0077                     ___awdiv@quotient:	
  2506                           ; 1 bytes @ 0x7
  2507                           
  2508  0077                     strncmp@l:	
  2509                           ; 2 bytes @ 0x7
  2510                           
  2511                           
  2512                           ; 2 bytes @ 0x7
  2513  0077                     	ds	1
  2514  0078                     ?_set_segments:
  2515  0078                     ??___lldiv:	
  2516                           ; 1 bytes @ 0x8
  2517                           
  2518  0078                     ?_fputs:	
  2519                           ; 1 bytes @ 0x8
  2520                           
  2521  0078                     set_segments@segments:	
  2522                           ; 2 bytes @ 0x8
  2523                           
  2524  0078                     lcd_init@p:	
  2525                           ; 1 bytes @ 0x8
  2526                           
  2527  0078                     command@lownib:	
  2528                           ; 1 bytes @ 0x8
  2529                           
  2530  0078                     __Umul8_16@multiplier:	
  2531                           ; 1 bytes @ 0x8
  2532                           
  2533  0078                     ___xxtofl@sign:	
  2534                           ; 1 bytes @ 0x8
  2535                           
  2536  0078                     fputs@fp:	
  2537                           ; 1 bytes @ 0x8
  2538                           
  2539                           
  2540                           ; 1 bytes @ 0x8
  2541  0078                     	ds	1
  2542  0079                     ??_fputs:
  2543  0079                     ?_encode_digit:	
  2544                           ; 1 bytes @ 0x9
  2545                           
  2546  0079                     set_segments@length:	
  2547                           ; 1 bytes @ 0x9
  2548                           
  2549  0079                     encode_digit@digit:	
  2550                           ; 1 bytes @ 0x9
  2551                           
  2552  0079                     command@p:	
  2553                           ; 1 bytes @ 0x9
  2554                           
  2555  0079                     ___lodiv@counter:	
  2556                           ; 1 bytes @ 0x9
  2557                           
  2558  0079                     ___xxtofl@exp:	
  2559                           ; 1 bytes @ 0x9
  2560                           
  2561  0079                     strncmp@r:	
  2562                           ; 1 bytes @ 0x9
  2563                           
  2564  0079                     ___lldiv@quotient:	
  2565                           ; 2 bytes @ 0x9
  2566                           
  2567                           
  2568                           ; 4 bytes @ 0x9
  2569  0079                     	ds	1
  2570  007A                     ?_lcd_set_cursor:
  2571  007A                     ?_lcd_print:	
  2572                           ; 1 bytes @ 0xA
  2573                           
  2574  007A                     ??_encode_digit:	
  2575                           ; 1 bytes @ 0xA
  2576                           
  2577  007A                     set_segments@pos:	
  2578                           ; 1 bytes @ 0xA
  2579                           
  2580  007A                     encode_digit@p:	
  2581                           ; 1 bytes @ 0xA
  2582                           
  2583  007A                     lcd_set_cursor@col:	
  2584                           ; 1 bytes @ 0xA
  2585                           
  2586  007A                     lcd_print@str:	
  2587                           ; 1 bytes @ 0xA
  2588                           
  2589  007A                     ___xxtofl@arg:	
  2590                           ; 2 bytes @ 0xA
  2591                           
  2592                           
  2593                           ; 4 bytes @ 0xA
  2594  007A                     	ds	1
  2595  007B                     ??_set_segments:
  2596  007B                     lcd_set_cursor@row:	
  2597                           ; 1 bytes @ 0xB
  2598                           
  2599                           
  2600                           ; 1 bytes @ 0xB
  2601  007B                     	ds	1
  2602  007C                     ??_lcd_set_cursor:
  2603  007C                     ??_lcd_print:	
  2604                           ; 1 bytes @ 0xC
  2605                           
  2606  007C                     ??_pad:	
  2607                           ; 1 bytes @ 0xC
  2608                           
  2609                           
  2610                           ; 1 bytes @ 0xC
  2611  007C                     	ds	1
  2612  007D                     ?_print_digit:
  2613  007D                     ??_utoa:	
  2614                           ; 1 bytes @ 0xD
  2615                           
  2616  007D                     print_digit@number:	
  2617                           ; 1 bytes @ 0xD
  2618                           
  2619  007D                     lcd_print_with@p:	
  2620                           ; 1 bytes @ 0xD
  2621                           
  2622  007D                     ___lldiv@counter:	
  2623                           ; 1 bytes @ 0xD
  2624                           
  2625                           
  2626                           ; 1 bytes @ 0xD
  2627  007D                     	ds	1
  2628  007E                     ??_set_max_gram:
  2629                           
  2630                           	psect	cstackBANK0
  2631  0020                     __pcstackBANK0:	
  2632                           ; 1 bytes @ 0xE
  2633                           
  2634  0020                     ?_get_scale_val:
  2635  0020                     ?___fldiv:	
  2636                           ; 4 bytes @ 0x0
  2637                           
  2638  0020                     ?___aodiv:	
  2639                           ; 4 bytes @ 0x0
  2640                           
  2641  0020                     ?___aomod:	
  2642                           ; 8 bytes @ 0x0
  2643                           
  2644  0020                     ?___lodiv:	
  2645                           ; 8 bytes @ 0x0
  2646                           
  2647  0020                     ?___lomod:	
  2648                           ; 8 bytes @ 0x0
  2649                           
  2650  0020                     set_segments@k:	
  2651                           ; 8 bytes @ 0x0
  2652                           
  2653  0020                     get_scale_val@scale_avg_count:	
  2654                           ; 1 bytes @ 0x0
  2655                           
  2656  0020                     lcd_print@cmd:	
  2657                           ; 1 bytes @ 0x0
  2658                           
  2659  0020                     fputs@c:	
  2660                           ; 1 bytes @ 0x0
  2661                           
  2662  0020                     lcd_set_cursor@row_offsets:	
  2663                           ; 1 bytes @ 0x0
  2664                           
  2665  0020                     ___fldiv@a:	
  2666                           ; 4 bytes @ 0x0
  2667                           
  2668  0020                     ___aodiv@divisor:	
  2669                           ; 4 bytes @ 0x0
  2670                           
  2671  0020                     ___aomod@divisor:	
  2672                           ; 8 bytes @ 0x0
  2673                           
  2674  0020                     ___lodiv@divisor:	
  2675                           ; 8 bytes @ 0x0
  2676                           
  2677  0020                     ___lomod@divisor:	
  2678                           ; 8 bytes @ 0x0
  2679                           
  2680                           
  2681                           ; 8 bytes @ 0x0
  2682  0020                     	ds	1
  2683  0021                     set_segments@p:
  2684  0021                     lcd_print@p:	
  2685                           ; 1 bytes @ 0x1
  2686                           
  2687  0021                     fputs@i:	
  2688                           ; 1 bytes @ 0x1
  2689                           
  2690                           
  2691                           ; 2 bytes @ 0x1
  2692  0021                     	ds	1
  2693  0022                     ??_print_digit:
  2694                           
  2695                           ; 1 bytes @ 0x2
  2696  0022                     	ds	1
  2697  0023                     fputs@s:
  2698                           
  2699                           ; 1 bytes @ 0x3
  2700  0023                     	ds	1
  2701  0024                     ??_get_scale_val:
  2702  0024                     ?_pad:	
  2703                           ; 1 bytes @ 0x4
  2704                           
  2705  0024                     lcd_set_cursor@cmd:	
  2706                           ; 2 bytes @ 0x4
  2707                           
  2708  0024                     pad@buf:	
  2709                           ; 1 bytes @ 0x4
  2710                           
  2711  0024                     ___fldiv@b:	
  2712                           ; 1 bytes @ 0x4
  2713                           
  2714                           
  2715                           ; 4 bytes @ 0x4
  2716  0024                     	ds	1
  2717  0025                     lcd_set_cursor@p:
  2718  0025                     pad@p:	
  2719                           ; 1 bytes @ 0x5
  2720                           
  2721                           
  2722                           ; 2 bytes @ 0x5
  2723  0025                     	ds	1
  2724  0026                     ??_lcd_clear:
  2725  0026                     ?_lcd_print_with:	
  2726                           ; 1 bytes @ 0x6
  2727                           
  2728  0026                     lcd_print_with@str:	
  2729                           ; 1 bytes @ 0x6
  2730                           
  2731  0026                     print_digit@data:	
  2732                           ; 2 bytes @ 0x6
  2733                           
  2734                           
  2735                           ; 4 bytes @ 0x6
  2736  0026                     	ds	1
  2737  0027                     pad@i:
  2738                           
  2739                           ; 2 bytes @ 0x7
  2740  0027                     	ds	1
  2741  0028                     ??___fldiv:
  2742  0028                     lcd_clear@row:	
  2743                           ; 1 bytes @ 0x8
  2744                           
  2745  0028                     lcd_print_with@col:	
  2746                           ; 1 bytes @ 0x8
  2747                           
  2748  0028                     get_scale_val@weight_add:	
  2749                           ; 1 bytes @ 0x8
  2750                           
  2751  0028                     ___aodiv@dividend:	
  2752                           ; 4 bytes @ 0x8
  2753                           
  2754  0028                     ___aomod@dividend:	
  2755                           ; 8 bytes @ 0x8
  2756                           
  2757  0028                     ___lodiv@dividend:	
  2758                           ; 8 bytes @ 0x8
  2759                           
  2760  0028                     ___lomod@dividend:	
  2761                           ; 8 bytes @ 0x8
  2762                           
  2763                           
  2764                           ; 8 bytes @ 0x8
  2765  0028                     	ds	1
  2766  0029                     lcd_clear@col:
  2767  0029                     lcd_print_with@row:	
  2768                           ; 1 bytes @ 0x9
  2769                           
  2770  0029                     pad@w:	
  2771                           ; 1 bytes @ 0x9
  2772                           
  2773                           
  2774                           ; 2 bytes @ 0x9
  2775  0029                     	ds	1
  2776  002A                     ??_lcd_print_with:
  2777  002A                     print_digit@p:	
  2778                           ; 1 bytes @ 0xA
  2779                           
  2780  002A                     lcd_clear@p:	
  2781                           ; 1 bytes @ 0xA
  2782                           
  2783                           
  2784                           ; 1 bytes @ 0xA
  2785  002A                     	ds	1
  2786  002B                     print_digit@tmp:
  2787  002B                     pad@fp:	
  2788                           ; 1 bytes @ 0xB
  2789                           
  2790                           
  2791                           ; 1 bytes @ 0xB
  2792  002B                     	ds	1
  2793  002C                     ??_initialize_digit:
  2794  002C                     get_scale_val@j:	
  2795                           ; 1 bytes @ 0xC
  2796                           
  2797                           
  2798                           ; 1 bytes @ 0xC
  2799  002C                     	ds	1
  2800  002D                     initialize_digit@p:
  2801  002D                     get_scale_val@weight_count:	
  2802                           ; 1 bytes @ 0xD
  2803                           
  2804  002D                     ___fldiv@rem:	
  2805                           ; 4 bytes @ 0xD
  2806                           
  2807                           
  2808                           ; 4 bytes @ 0xD
  2809  002D                     	ds	3
  2810  0030                     ?_dtoa:
  2811  0030                     ?_utoa:	
  2812                           ; 2 bytes @ 0x10
  2813                           
  2814  0030                     dtoa@d:	
  2815                           ; 2 bytes @ 0x10
  2816                           
  2817  0030                     utoa@d:	
  2818                           ; 8 bytes @ 0x10
  2819                           
  2820                           
  2821                           ; 8 bytes @ 0x10
  2822  0030                     	ds	1
  2823  0031                     get_scale_val@i:
  2824  0031                     ___fldiv@sign:	
  2825                           ; 1 bytes @ 0x11
  2826                           
  2827                           
  2828                           ; 1 bytes @ 0x11
  2829  0031                     	ds	1
  2830  0032                     get_scale_val@p:
  2831  0032                     ___fldiv@new_exp:	
  2832                           ; 1 bytes @ 0x12
  2833                           
  2834                           
  2835                           ; 2 bytes @ 0x12
  2836  0032                     	ds	2
  2837  0034                     ___fldiv@grs:
  2838                           
  2839                           ; 4 bytes @ 0x14
  2840  0034                     	ds	4
  2841  0038                     ??_dtoa:
  2842  0038                     ___fldiv@bexp:	
  2843                           ; 1 bytes @ 0x18
  2844                           
  2845  0038                     utoa@p:	
  2846                           ; 1 bytes @ 0x18
  2847                           
  2848                           
  2849                           ; 2 bytes @ 0x18
  2850  0038                     	ds	1
  2851  0039                     ___fldiv@aexp:
  2852                           
  2853                           ; 1 bytes @ 0x19
  2854  0039                     	ds	1
  2855  003A                     ?___flmul:
  2856  003A                     utoa@fp:	
  2857                           ; 4 bytes @ 0x1A
  2858                           
  2859  003A                     ___flmul@b:	
  2860                           ; 1 bytes @ 0x1A
  2861                           
  2862                           
  2863                           ; 4 bytes @ 0x1A
  2864  003A                     	ds	1
  2865  003B                     _dtoa$1262:
  2866  003B                     utoa@w:	
  2867                           ; 2 bytes @ 0x1B
  2868                           
  2869                           
  2870                           ; 2 bytes @ 0x1B
  2871  003B                     	ds	2
  2872  003D                     dtoa@p:
  2873  003D                     utoa@n:	
  2874                           ; 2 bytes @ 0x1D
  2875                           
  2876                           
  2877                           ; 8 bytes @ 0x1D
  2878  003D                     	ds	1
  2879  003E                     ___flmul@a:
  2880                           
  2881                           ; 4 bytes @ 0x1E
  2882  003E                     	ds	1
  2883  003F                     dtoa@fp:
  2884                           
  2885                           ; 1 bytes @ 0x1F
  2886  003F                     	ds	1
  2887  0040                     dtoa@w:
  2888                           
  2889                           ; 2 bytes @ 0x20
  2890  0040                     	ds	2
  2891  0042                     ??___flmul:
  2892  0042                     dtoa@s:	
  2893                           ; 1 bytes @ 0x22
  2894                           
  2895                           
  2896                           ; 2 bytes @ 0x22
  2897  0042                     	ds	2
  2898  0044                     dtoa@n:
  2899                           
  2900                           ; 8 bytes @ 0x24
  2901  0044                     	ds	1
  2902  0045                     utoa@i:
  2903                           
  2904                           ; 2 bytes @ 0x25
  2905  0045                     	ds	2
  2906  0047                     ___flmul@sign:
  2907                           
  2908                           ; 1 bytes @ 0x27
  2909  0047                     	ds	1
  2910  0048                     ___flmul@grs:
  2911                           
  2912                           ; 4 bytes @ 0x28
  2913  0048                     	ds	4
  2914  004C                     ___flmul@aexp:
  2915  004C                     dtoa@i:	
  2916                           ; 1 bytes @ 0x2C
  2917                           
  2918                           
  2919                           ; 2 bytes @ 0x2C
  2920  004C                     	ds	1
  2921  004D                     ___flmul@bexp:
  2922                           
  2923                           ; 1 bytes @ 0x2D
  2924  004D                     	ds	1
  2925  004E                     ?_vfpfcnvrt:
  2926  004E                     vfpfcnvrt@fmt:	
  2927                           ; 2 bytes @ 0x2E
  2928                           
  2929  004E                     ___flmul@prod:	
  2930                           ; 1 bytes @ 0x2E
  2931                           
  2932                           
  2933                           ; 4 bytes @ 0x2E
  2934  004E                     	ds	1
  2935  004F                     vfpfcnvrt@ap:
  2936                           
  2937                           ; 1 bytes @ 0x2F
  2938  004F                     	ds	1
  2939  0050                     ??_vfpfcnvrt:
  2940                           
  2941                           ; 1 bytes @ 0x30
  2942  0050                     	ds	2
  2943  0052                     ___flmul@temp:
  2944                           
  2945                           ; 2 bytes @ 0x32
  2946  0052                     	ds	2
  2947  0054                     ?___fltol:
  2948  0054                     ___fltol@f1:	
  2949                           ; 4 bytes @ 0x34
  2950                           
  2951                           
  2952                           ; 4 bytes @ 0x34
  2953  0054                     	ds	4
  2954  0058                     ??___fltol:
  2955                           
  2956                           ; 1 bytes @ 0x38
  2957  0058                     	ds	4
  2958  005C                     vfpfcnvrt@ll:
  2959                           
  2960                           ; 8 bytes @ 0x3C
  2961  005C                     	ds	1
  2962  005D                     ___fltol@sign1:
  2963                           
  2964                           ; 1 bytes @ 0x3D
  2965  005D                     	ds	1
  2966  005E                     ___fltol@exp1:
  2967                           
  2968                           ; 1 bytes @ 0x3E
  2969  005E                     	ds	1
  2970  005F                     ??_scale_convert_gram:
  2971                           
  2972                           ; 1 bytes @ 0x3F
  2973  005F                     	ds	5
  2974  0064                     vfpfcnvrt@llu:
  2975                           
  2976                           ; 8 bytes @ 0x44
  2977  0064                     	ds	3
  2978  0067                     scale_convert_gram@temp:
  2979                           
  2980                           ; 4 bytes @ 0x47
  2981  0067                     	ds	4
  2982  006B                     scale_convert_gram@p:
  2983                           
  2984                           ; 1 bytes @ 0x4B
  2985  006B                     	ds	1
  2986  006C                     ??_calc_percentage:
  2987  006C                     vfpfcnvrt@fp:	
  2988                           ; 1 bytes @ 0x4C
  2989                           
  2990                           
  2991                           ; 1 bytes @ 0x4C
  2992  006C                     	ds	1
  2993  006D                     ?_vfprintf:
  2994  006D                     vfprintf@fmt:	
  2995                           ; 2 bytes @ 0x4D
  2996                           
  2997                           
  2998                           ; 2 bytes @ 0x4D
  2999  006D                     	ds	2
  3000  006F                     vfprintf@ap:
  3001                           
  3002                           ; 1 bytes @ 0x4F
  3003  006F                     	ds	1
  3004                           
  3005                           	psect	maintext
  3006  0A9D                     __pmaintext:	
  3007 ;;
  3008 ;;Main: autosize = 0, tempsize = 2, incstack = 0, save=0
  3009 ;;
  3010 ;; *************** function _main *****************
  3011 ;; Defined at:
  3012 ;;		line 8 in file "main.c"
  3013 ;; Parameters:    Size  Location     Type
  3014 ;;		None
  3015 ;; Auto vars:     Size  Location     Type
  3016 ;;  loadcell       12    6[BANK2 ] struct .
  3017 ;;  drink           8   18[BANK2 ] struct .
  3018 ;;  lcd             4    0[BANK2 ] struct .
  3019 ;;  tm1637          2    4[BANK2 ] struct .
  3020 ;; Return value:  Size  Location     Type
  3021 ;;                  1    wreg      void 
  3022 ;; Registers used:
  3023 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  3024 ;; Tracked objects:
  3025 ;;		On entry : B1F/0
  3026 ;;		On exit  : 0/0
  3027 ;;		Unchanged: 0/0
  3028 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  3029 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3030 ;;      Locals:         0       0       0      26       0       0       0       0       0       0       0       0       
      +0       0
  3031 ;;      Temps:          0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0
  3032 ;;      Totals:         0       0       2      26       0       0       0       0       0       0       0       0       
      +0       0
  3033 ;;Total ram usage:       28 bytes
  3034 ;; Hardware stack levels required when called: 9
  3035 ;; This function calls:
  3036 ;;		_SYSTEM_Initialize
  3037 ;;		_calc_percentage
  3038 ;;		_initialize
  3039 ;;		_print_gram
  3040 ;;		_set_max_gram
  3041 ;; This function is called by:
  3042 ;;		Startup code after reset
  3043 ;; This function uses a non-reentrant model
  3044 ;;
  3045                           
  3046                           
  3047                           ;psect for function _main
  3048  0A9D                     _main:
  3049  0A9D                     l3902:	
  3050                           ;incstack = 0
  3051                           ; Regs used in _main: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  3052                           
  3053                           
  3054                           ;main.c: 10:     SYSTEM_Initialize();
  3055  0A9D  319E  263E  318A   	fcall	_SYSTEM_Initialize
  3056  0AA0                     l3904:
  3057                           
  3058                           ;main.c: 13:     ANSELA = 0x00;
  3059  0AA0  0023               	movlb	3	; select bank3
  3060  0AA1  018C               	clrf	12	;volatile
  3061  0AA2                     l3906:
  3062                           
  3063                           ;main.c: 14:     ANSELB = 0x00;
  3064  0AA2  018D               	clrf	13	;volatile
  3065  0AA3                     l3908:
  3066                           
  3067                           ;main.c: 18:     TRISB = 0x04;
  3068  0AA3  3004               	movlw	4
  3069  0AA4  0021               	movlb	1	; select bank1
  3070  0AA5  008D               	movwf	13	;volatile
  3071  0AA6                     l3910:
  3072                           
  3073                           ;main.c: 21:     TRISC = 0xF8;
  3074  0AA6  30F8               	movlw	248
  3075  0AA7  008E               	movwf	14	;volatile
  3076  0AA8                     l3912:
  3077                           
  3078                           ;main.c: 24:     LATA = 0x00;
  3079  0AA8  0022               	movlb	2	; select bank2
  3080  0AA9  018C               	clrf	12	;volatile
  3081  0AAA                     l3914:
  3082                           
  3083                           ;main.c: 25:     LATB = 0x00;
  3084  0AAA  018D               	clrf	13	;volatile
  3085  0AAB                     l3916:
  3086                           
  3087                           ;main.c: 26:     LATC = 0x00;
  3088  0AAB  018E               	clrf	14	;volatile
  3089  0AAC                     l3918:
  3090                           
  3091                           ;main.c: 29:     SSPADD = 0x13;
  3092  0AAC  3013               	movlw	19
  3093  0AAD  0024               	movlb	4	; select bank4
  3094  0AAE  0092               	movwf	18	;volatile
  3095  0AAF                     l3920:
  3096                           
  3097                           ;main.c: 30:     SSPCON1 = 0x28;
  3098  0AAF  3028               	movlw	40
  3099  0AB0  0095               	movwf	21	;volatile
  3100  0AB1                     l3922:
  3101                           
  3102                           ;main.c: 31:     SSPCON2 = 0x0;
  3103  0AB1  0196               	clrf	22	;volatile
  3104  0AB2                     l3924:
  3105                           
  3106                           ;main.c: 32:     SSPSTAT = 0;
  3107  0AB2  0194               	clrf	20	;volatile
  3108  0AB3                     l3926:
  3109                           
  3110                           ;main.c: 35:     LoadCell loadcell = {0x02, 0x04, 0, 0, 530};
  3111  0AB3  3020               	movlw	low main@F2849
  3112  0AB4  0086               	movwf	6
  3113  0AB5  3001               	movlw	high main@F2849
  3114  0AB6  0087               	movwf	7
  3115  0AB7  3042               	movlw	low main@loadcell
  3116  0AB8  0084               	movwf	4
  3117  0AB9  3001               	movlw	high main@loadcell
  3118  0ABA  0085               	movwf	5
  3119  0ABB  300C               	movlw	12
  3120  0ABC  0021               	movlb	1	; select bank1
  3121  0ABD  00D6               	movwf	??_main^(0+128)
  3122  0ABE                     u4640:
  3123  0ABE  0016               	moviw fsr1++
  3124  0ABF  001A               	movwi fsr0++
  3125  0AC0  0BD6               	decfsz	??_main^(0+128),f
  3126  0AC1  2ABE               	goto	u4640
  3127  0AC2                     l3928:
  3128                           
  3129                           ;main.c: 37:     Lcd lcd = {0x27, 16, 2, 0};
  3130  0AC2  0022               	movlb	2	; select bank2
  3131  0AC3  0839               	movf	(main@F2851+3)^(0+256),w
  3132  0AC4  00BF               	movwf	(main@lcd+3)^(0+256)
  3133  0AC5  0838               	movf	(main@F2851+2)^(0+256),w
  3134  0AC6  00BE               	movwf	(main@lcd+2)^(0+256)
  3135  0AC7  0837               	movf	(main@F2851+1)^(0+256),w
  3136  0AC8  00BD               	movwf	(main@lcd+1)^(0+256)
  3137  0AC9  0836               	movf	main@F2851^(0+256),w
  3138  0ACA  00BC               	movwf	main@lcd^(0+256)
  3139  0ACB                     l3930:
  3140                           
  3141                           ;main.c: 39:     TM1637 tm1637 = {0x08, 0x10};
  3142  0ACB  083B               	movf	(main@F2853+1)^(0+256),w
  3143  0ACC  00C1               	movwf	(main@tm1637+1)^(0+256)
  3144  0ACD  083A               	movf	main@F2853^(0+256),w
  3145  0ACE  00C0               	movwf	main@tm1637^(0+256)
  3146  0ACF                     l3932:
  3147                           
  3148                           ;main.c: 41:     DrinkMeter drink = {&loadcell, &lcd, &tm1637, 500, 24, 0};
  3149  0ACF  3056               	movlw	low main@F2855
  3150  0AD0  0086               	movwf	6
  3151  0AD1  3001               	movlw	high main@F2855
  3152  0AD2  0087               	movwf	7
  3153  0AD3  304E               	movlw	low main@drink
  3154  0AD4  0084               	movwf	4
  3155  0AD5  3001               	movlw	high main@drink
  3156  0AD6  0085               	movwf	5
  3157  0AD7  3008               	movlw	8
  3158  0AD8  0021               	movlb	1	; select bank1
  3159  0AD9  00D6               	movwf	??_main^(0+128)
  3160  0ADA                     u4650:
  3161  0ADA  0016               	moviw fsr1++
  3162  0ADB  001A               	movwi fsr0++
  3163  0ADC  0BD6               	decfsz	??_main^(0+128),f
  3164  0ADD  2ADA               	goto	u4650
  3165  0ADE                     l3934:
  3166  0ADE  3042               	movlw	(low (main@loadcell| (0+256)))& (0+255)
  3167  0ADF  00D6               	movwf	??_main^(0+128)
  3168  0AE0  0856               	movf	??_main^(0+128),w
  3169  0AE1  0022               	movlb	2	; select bank2
  3170  0AE2  00CE               	movwf	main@drink^(0+256)
  3171  0AE3                     l3936:
  3172  0AE3  303C               	movlw	(low (main@lcd| (0+256)))& (0+255)
  3173  0AE4  0021               	movlb	1	; select bank1
  3174  0AE5  00D6               	movwf	??_main^(0+128)
  3175  0AE6  0856               	movf	??_main^(0+128),w
  3176  0AE7  0022               	movlb	2	; select bank2
  3177  0AE8  00CF               	movwf	(low ((main@drink| (0+256)+1)))^0
  3178  0AE9                     l3938:
  3179  0AE9  3040               	movlw	(low (main@tm1637| (0+256)))& (0+255)
  3180  0AEA  0021               	movlb	1	; select bank1
  3181  0AEB  00D6               	movwf	??_main^(0+128)
  3182  0AEC  0856               	movf	??_main^(0+128),w
  3183  0AED  0022               	movlb	2	; select bank2
  3184  0AEE  00D0               	movwf	(low ((main@drink| (0+256)+2)))^0
  3185  0AEF                     l3940:
  3186  0AEF  30F4               	movlw	244
  3187  0AF0  00D1               	movwf	(main@drink^(0+256)+3)
  3188  0AF1  3001               	movlw	1
  3189  0AF2  00D2               	movwf	(main@drink^(0+256)+4)
  3190  0AF3                     l3942:
  3191  0AF3  3018               	movlw	24
  3192  0AF4  00D3               	movwf	(main@drink^(0+256)+5)
  3193  0AF5  3000               	movlw	0
  3194  0AF6  00D4               	movwf	(main@drink^(0+256)+6)
  3195  0AF7                     l3944:
  3196  0AF7  01D5               	clrf	(main@drink^(0+256)+7)
  3197  0AF8                     l3946:
  3198                           
  3199                           ;main.c: 43:     initialize(&drink);
  3200  0AF8  304E               	movlw	(low (main@drink| (0+256)))& (0+255)
  3201  0AF9  3196  261B  318A   	fcall	_initialize
  3202  0AFC                     l3948:
  3203                           
  3204                           ;main.c: 46:         calc_percentage(&drink);
  3205  0AFC  304E               	movlw	(low (main@drink| (0+256)))& (0+255)
  3206  0AFD  318B  2364  318A   	fcall	_calc_percentage
  3207  0B00                     l3950:
  3208                           
  3209                           ;main.c: 47:         print_gram(&drink);
  3210  0B00  304E               	movlw	(low (main@drink| (0+256)))& (0+255)
  3211  0B01  3194  24BD  318A   	fcall	_print_gram
  3212  0B04                     l3952:
  3213                           
  3214                           ;main.c: 49:         if(RC7 == 0){
  3215  0B04  0020               	movlb	0	; select bank0
  3216  0B05  1B8E               	btfsc	14,7	;volatile
  3217  0B06  2B08               	goto	u4661
  3218  0B07  2B09               	goto	u4660
  3219  0B08                     u4661:
  3220  0B08  2B23               	goto	l3958
  3221  0B09                     u4660:
  3222  0B09                     l3954:
  3223                           
  3224                           ;main.c: 50:             set_max_gram(&drink, 500, 24);
  3225  0B09  30F4               	movlw	244
  3226  0B0A  0021               	movlb	1	; select bank1
  3227  0B0B  00B3               	movwf	set_max_gram@max_gram^(0+128)
  3228  0B0C  3001               	movlw	1
  3229  0B0D  00B4               	movwf	(set_max_gram@max_gram^(0+128)+1)
  3230  0B0E  3018               	movlw	24
  3231  0B0F  00B5               	movwf	set_max_gram@empty_gram^(0+128)
  3232  0B10  3000               	movlw	0
  3233  0B11  00B6               	movwf	(set_max_gram@empty_gram^(0+128)+1)
  3234  0B12  304E               	movlw	(low (main@drink| (0+256)))& (0+255)
  3235  0B13  3191  2105  318A   	fcall	_set_max_gram
  3236  0B16                     l3956:
  3237                           
  3238                           ;main.c: 51:             _delay((unsigned long)((1000)*(8000000/4000.0)));
  3239  0B16  300B               	movlw	11
  3240  0B17  0021               	movlb	1	; select bank1
  3241  0B18  00D7               	movwf	(??_main^(0+128)+1)
  3242  0B19  3026               	movlw	38
  3243  0B1A  00D6               	movwf	??_main^(0+128)
  3244  0B1B  305D               	movlw	93
  3245  0B1C                     u4697:
  3246  0B1C  0B89               	decfsz	9,f
  3247  0B1D  2B1C               	goto	u4697
  3248  0B1E  0BD6               	decfsz	??_main^(0+128),f
  3249  0B1F  2B1C               	goto	u4697
  3250  0B20  0BD7               	decfsz	(??_main^(0+128)+1),f
  3251  0B21  2B1C               	goto	u4697
  3252  0B22  3200               	nop2
  3253  0B23                     l3958:
  3254                           
  3255                           ;main.c: 54:         if(RC6 == 0){
  3256  0B23  0020               	movlb	0	; select bank0
  3257  0B24  1B0E               	btfsc	14,6	;volatile
  3258  0B25  2B27               	goto	u4671
  3259  0B26  2B28               	goto	u4670
  3260  0B27                     u4671:
  3261  0B27  2B42               	goto	l3964
  3262  0B28                     u4670:
  3263  0B28                     l3960:
  3264                           
  3265                           ;main.c: 55:             set_max_gram(&drink, 355, 20);
  3266  0B28  3063               	movlw	99
  3267  0B29  0021               	movlb	1	; select bank1
  3268  0B2A  00B3               	movwf	set_max_gram@max_gram^(0+128)
  3269  0B2B  3001               	movlw	1
  3270  0B2C  00B4               	movwf	(set_max_gram@max_gram^(0+128)+1)
  3271  0B2D  3014               	movlw	20
  3272  0B2E  00B5               	movwf	set_max_gram@empty_gram^(0+128)
  3273  0B2F  3000               	movlw	0
  3274  0B30  00B6               	movwf	(set_max_gram@empty_gram^(0+128)+1)
  3275  0B31  304E               	movlw	(low (main@drink| (0+256)))& (0+255)
  3276  0B32  3191  2105  318A   	fcall	_set_max_gram
  3277  0B35                     l3962:
  3278                           
  3279                           ;main.c: 56:             _delay((unsigned long)((1000)*(8000000/4000.0)));
  3280  0B35  300B               	movlw	11
  3281  0B36  0021               	movlb	1	; select bank1
  3282  0B37  00D7               	movwf	(??_main^(0+128)+1)
  3283  0B38  3026               	movlw	38
  3284  0B39  00D6               	movwf	??_main^(0+128)
  3285  0B3A  305D               	movlw	93
  3286  0B3B                     u4707:
  3287  0B3B  0B89               	decfsz	9,f
  3288  0B3C  2B3B               	goto	u4707
  3289  0B3D  0BD6               	decfsz	??_main^(0+128),f
  3290  0B3E  2B3B               	goto	u4707
  3291  0B3F  0BD7               	decfsz	(??_main^(0+128)+1),f
  3292  0B40  2B3B               	goto	u4707
  3293  0B41  3200               	nop2
  3294  0B42                     l3964:
  3295                           
  3296                           ;main.c: 59:         if(RC5 == 0){
  3297  0B42  0020               	movlb	0	; select bank0
  3298  0B43  1A8E               	btfsc	14,5	;volatile
  3299  0B44  2B46               	goto	u4681
  3300  0B45  2B47               	goto	u4680
  3301  0B46                     u4681:
  3302  0B46  2AFC               	goto	l3948
  3303  0B47                     u4680:
  3304  0B47                     l3966:
  3305                           
  3306                           ;main.c: 60:             set_max_gram(&drink, 350, 15);
  3307  0B47  305E               	movlw	94
  3308  0B48  0021               	movlb	1	; select bank1
  3309  0B49  00B3               	movwf	set_max_gram@max_gram^(0+128)
  3310  0B4A  3001               	movlw	1
  3311  0B4B  00B4               	movwf	(set_max_gram@max_gram^(0+128)+1)
  3312  0B4C  300F               	movlw	15
  3313  0B4D  00B5               	movwf	set_max_gram@empty_gram^(0+128)
  3314  0B4E  3000               	movlw	0
  3315  0B4F  00B6               	movwf	(set_max_gram@empty_gram^(0+128)+1)
  3316  0B50  304E               	movlw	(low (main@drink| (0+256)))& (0+255)
  3317  0B51  3191  2105  318A   	fcall	_set_max_gram
  3318  0B54                     l3968:
  3319                           
  3320                           ;main.c: 61:             _delay((unsigned long)((1000)*(8000000/4000.0)));
  3321  0B54  300B               	movlw	11
  3322  0B55  0021               	movlb	1	; select bank1
  3323  0B56  00D7               	movwf	(??_main^(0+128)+1)
  3324  0B57  3026               	movlw	38
  3325  0B58  00D6               	movwf	??_main^(0+128)
  3326  0B59  305D               	movlw	93
  3327  0B5A                     u4717:
  3328  0B5A  0B89               	decfsz	9,f
  3329  0B5B  2B5A               	goto	u4717
  3330  0B5C  0BD6               	decfsz	??_main^(0+128),f
  3331  0B5D  2B5A               	goto	u4717
  3332  0B5E  0BD7               	decfsz	(??_main^(0+128)+1),f
  3333  0B5F  2B5A               	goto	u4717
  3334  0B60  3200               	nop2
  3335  0B61  2AFC               	goto	l3948
  3336  0B62  3180  2802         	ljmp	start
  3337  0B64                     __end_of_main:
  3338                           
  3339                           	psect	text1
  3340  1105                     __ptext1:	
  3341 ;; *************** function _set_max_gram *****************
  3342 ;; Defined at:
  3343 ;;		line 60 in file "drink_meter.c"
  3344 ;; Parameters:    Size  Location     Type
  3345 ;;  p               1    wreg     PTR struct .
  3346 ;;		 -> main@drink(8), 
  3347 ;;  max_gram        2   19[BANK1 ] unsigned short 
  3348 ;;  empty_gram      2   21[BANK1 ] unsigned short 
  3349 ;; Auto vars:     Size  Location     Type
  3350 ;;  p               1   39[BANK1 ] PTR struct .
  3351 ;;		 -> main@drink(8), 
  3352 ;;  valstr         16   23[BANK1 ] unsigned char [16]
  3353 ;; Return value:  Size  Location     Type
  3354 ;;                  1    wreg      void 
  3355 ;; Registers used:
  3356 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  3357 ;; Tracked objects:
  3358 ;;		On entry : 0/0
  3359 ;;		On exit  : 0/0
  3360 ;;		Unchanged: 0/0
  3361 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  3362 ;;      Params:         0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0
  3363 ;;      Locals:         0       0      17       0       0       0       0       0       0       0       0       0       
      +0       0
  3364 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3365 ;;      Totals:         0       0      21       0       0       0       0       0       0       0       0       0       
      +0       0
  3366 ;;Total ram usage:       21 bytes
  3367 ;; Hardware stack levels used: 1
  3368 ;; Hardware stack levels required when called: 8
  3369 ;; This function calls:
  3370 ;;		_calc_percentage
  3371 ;;		_lcd_clear
  3372 ;;		_lcd_print
  3373 ;;		_sprintf
  3374 ;; This function is called by:
  3375 ;;		_main
  3376 ;; This function uses a non-reentrant model
  3377 ;;
  3378                           
  3379                           
  3380                           ;psect for function _set_max_gram
  3381  1105                     _set_max_gram:
  3382                           
  3383                           ;incstack = 0
  3384                           ; Regs used in _set_max_gram: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  3385                           ;set_max_gram@p stored from wreg
  3386  1105  0021               	movlb	1	; select bank1
  3387  1106  00C7               	movwf	set_max_gram@p^(0+128)
  3388  1107                     l3876:
  3389                           
  3390                           ;drink_meter.c: 61:     p->max_gram = max_gram;
  3391  1107  0847               	movf	set_max_gram@p^(0+128),w
  3392  1108  3E03               	addlw	3
  3393  1109  0086               	movwf	6
  3394  110A  3001               	movlw	1	; select bank2/3
  3395  110B  0087               	movwf	7
  3396  110C  0833               	movf	set_max_gram@max_gram^(0+128),w
  3397  110D  3FC0               	movwi [0]fsr1
  3398  110E  0834               	movf	(set_max_gram@max_gram+1)^(0+128),w
  3399  110F  3FC1               	movwi [1]fsr1
  3400                           
  3401                           ;drink_meter.c: 62:     p->empty_gram = empty_gram;
  3402  1110  0847               	movf	set_max_gram@p^(0+128),w
  3403  1111  3E05               	addlw	5
  3404  1112  0086               	movwf	6
  3405  1113  3001               	movlw	1	; select bank2/3
  3406  1114  0087               	movwf	7
  3407  1115  0835               	movf	set_max_gram@empty_gram^(0+128),w
  3408  1116  3FC0               	movwi [0]fsr1
  3409  1117  0836               	movf	(set_max_gram@empty_gram+1)^(0+128),w
  3410  1118  3FC1               	movwi [1]fsr1
  3411  1119                     l3878:
  3412                           
  3413                           ;drink_meter.c: 64:     char valstr[16];;drink_meter.c: 65:     sprintf(valstr, "set max
      +                           ml %d", max_gram);
  3414  1119  300F               	movlw	low (STR_7| (0+32768))
  3415  111A  00A5               	movwf	sprintf@fmt^(0+128)
  3416  111B  30A0               	movlw	high (STR_7| (0+32768))
  3417  111C  00A6               	movwf	(sprintf@fmt^(0+128)+1)
  3418  111D  0834               	movf	(set_max_gram@max_gram+1)^(0+128),w
  3419  111E  00A8               	movwf	((?_sprintf+1)^(0+128)+2)
  3420  111F  0833               	movf	set_max_gram@max_gram^(0+128),w
  3421  1120  00A7               	movwf	(?_sprintf^(0+128)+2)
  3422  1121  30B7               	movlw	(low (set_max_gram@valstr| 0))& (0+255)
  3423  1122  3190  2043  3191   	fcall	_sprintf
  3424  1125                     l3880:
  3425                           
  3426                           ;drink_meter.c: 67:     lcd_clear(p->lcd);
  3427  1125  0021               	movlb	1	; select bank1
  3428  1126  0A47               	incf	set_max_gram@p^(0+128),w
  3429  1127  0086               	movwf	6
  3430  1128  3001               	movlw	1	; select bank2/3
  3431  1129  0087               	movwf	7
  3432  112A  0801               	movf	1,w
  3433  112B  3191  2141  3191   	fcall	_lcd_clear
  3434  112E                     l3882:
  3435                           
  3436                           ;drink_meter.c: 68:     lcd_print(p->lcd, valstr);
  3437  112E  30B7               	movlw	low set_max_gram@valstr
  3438  112F  00FA               	movwf	lcd_print@str
  3439  1130  3000               	movlw	high set_max_gram@valstr
  3440  1131  00FB               	movwf	lcd_print@str+1
  3441  1132  0021               	movlb	1	; select bank1
  3442  1133  0A47               	incf	set_max_gram@p^(0+128),w
  3443  1134  0086               	movwf	6
  3444  1135  3001               	movlw	1	; select bank2/3
  3445  1136  0087               	movwf	7
  3446  1137  0801               	movf	1,w
  3447  1138  3190  201F  3191   	fcall	_lcd_print
  3448  113B                     l3884:
  3449                           
  3450                           ;drink_meter.c: 70:     calc_percentage(p);
  3451  113B  0021               	movlb	1	; select bank1
  3452  113C  0847               	movf	set_max_gram@p^(0+128),w
  3453  113D  318B  2364  3191   	fcall	_calc_percentage
  3454  1140                     l384:
  3455  1140  0008               	return
  3456  1141                     __end_of_set_max_gram:
  3457                           
  3458                           	psect	text2
  3459  0B64                     __ptext2:	
  3460 ;; *************** function _calc_percentage *****************
  3461 ;; Defined at:
  3462 ;;		line 25 in file "drink_meter.c"
  3463 ;; Parameters:    Size  Location     Type
  3464 ;;  p               1    wreg     PTR struct .
  3465 ;;		 -> main@drink(8), 
  3466 ;; Auto vars:     Size  Location     Type
  3467 ;;  p               1    0[BANK1 ] PTR struct .
  3468 ;;		 -> main@drink(8), 
  3469 ;; Return value:  Size  Location     Type
  3470 ;;                  1    wreg      void 
  3471 ;; Registers used:
  3472 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  3473 ;; Tracked objects:
  3474 ;;		On entry : 0/0
  3475 ;;		On exit  : 0/0
  3476 ;;		Unchanged: 0/0
  3477 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  3478 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3479 ;;      Locals:         0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0
  3480 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3481 ;;      Totals:         0       4       1       0       0       0       0       0       0       0       0       0       
      +0       0
  3482 ;;Total ram usage:        5 bytes
  3483 ;; Hardware stack levels used: 1
  3484 ;; Hardware stack levels required when called: 2
  3485 ;; This function calls:
  3486 ;;		___fldiv
  3487 ;;		___flmul
  3488 ;;		___fltol
  3489 ;;		___xxtofl
  3490 ;;		_get_scale_val
  3491 ;;		_scale_convert_gram
  3492 ;; This function is called by:
  3493 ;;		_main
  3494 ;;		_set_max_gram
  3495 ;; This function uses a non-reentrant model
  3496 ;;
  3497                           
  3498                           
  3499                           ;psect for function _calc_percentage
  3500  0B64                     _calc_percentage:
  3501                           
  3502                           ;incstack = 0
  3503                           ; Regs used in _calc_percentage: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  3504                           ;calc_percentage@p stored from wreg
  3505  0B64  0021               	movlb	1	; select bank1
  3506  0B65  00A0               	movwf	calc_percentage@p^(0+128)
  3507  0B66                     l3764:
  3508                           
  3509                           ;drink_meter.c: 27:     p->loadcell->weight_dat = get_scale_val(p->loadcell, 16);
  3510  0B66  3010               	movlw	16
  3511  0B67  0020               	movlb	0	; select bank0
  3512  0B68  00EC               	movwf	??_calc_percentage
  3513  0B69  086C               	movf	??_calc_percentage,w
  3514  0B6A  00A0               	movwf	get_scale_val@scale_avg_count
  3515  0B6B  0021               	movlb	1	; select bank1
  3516  0B6C  0820               	movf	calc_percentage@p^(0+128),w
  3517  0B6D  0086               	movwf	6
  3518  0B6E  3001               	movlw	1	; select bank2/3
  3519  0B6F  0087               	movwf	7
  3520  0B70  0801               	movf	1,w
  3521  0B71  318C  2445  318B   	fcall	_get_scale_val
  3522  0B74  0021               	movlb	1	; select bank1
  3523  0B75  0820               	movf	calc_percentage@p^(0+128),w
  3524  0B76  0086               	movwf	6
  3525  0B77  3001               	movlw	1	; select bank2/3
  3526  0B78  0087               	movwf	7
  3527  0B79  0801               	movf	1,w
  3528  0B7A  3E06               	addlw	6
  3529  0B7B  0086               	movwf	6
  3530  0B7C  3001               	movlw	1	; select bank2/3
  3531  0B7D  0087               	movwf	7
  3532  0B7E  0020               	movlb	0	; select bank0
  3533  0B7F  0820               	movf	?_get_scale_val,w
  3534  0B80  3FC0               	movwi [0]fsr1
  3535  0B81  0821               	movf	?_get_scale_val+1,w
  3536  0B82  3FC1               	movwi [1]fsr1
  3537  0B83  0822               	movf	?_get_scale_val+2,w
  3538  0B84  3FC2               	movwi [2]fsr1
  3539  0B85  0823               	movf	?_get_scale_val+3,w
  3540  0B86  3FC3               	movwi [3]fsr1
  3541                           
  3542                           ;drink_meter.c: 28:     scale_convert_gram(p->loadcell);
  3543  0B87  0021               	movlb	1	; select bank1
  3544  0B88  0820               	movf	calc_percentage@p^(0+128),w
  3545  0B89  0086               	movwf	6
  3546  0B8A  3001               	movlw	1	; select bank2/3
  3547  0B8B  0087               	movwf	7
  3548  0B8C  0801               	movf	1,w
  3549  0B8D  3196  26B7  318B   	fcall	_scale_convert_gram
  3550  0B90                     l3766:
  3551                           
  3552                           ;drink_meter.c: 31:     if(p->loadcell->gram == 0){
  3553  0B90  0021               	movlb	1	; select bank1
  3554  0B91  0820               	movf	calc_percentage@p^(0+128),w
  3555  0B92  0086               	movwf	6
  3556  0B93  3001               	movlw	1	; select bank2/3
  3557  0B94  0087               	movwf	7
  3558  0B95  0801               	movf	1,w
  3559  0B96  3E0A               	addlw	10
  3560  0B97  0086               	movwf	6
  3561  0B98  3001               	movlw	1	; select bank2/3
  3562  0B99  0087               	movwf	7
  3563  0B9A  0016               	moviw fsr1++
  3564  0B9B  0401               	iorwf	1,w
  3565  0B9C  1D03               	btfss	3,2
  3566  0B9D  2B9F               	goto	u4581
  3567  0B9E  2BA0               	goto	u4580
  3568  0B9F                     u4581:
  3569  0B9F  2BA7               	goto	l3772
  3570  0BA0                     u4580:
  3571  0BA0                     l3768:
  3572                           
  3573                           ;drink_meter.c: 32:         p->percentage = 0;
  3574  0BA0  0820               	movf	calc_percentage@p^(0+128),w
  3575  0BA1  3E07               	addlw	7
  3576  0BA2  0086               	movwf	6
  3577  0BA3  3001               	movlw	1	; select bank2/3
  3578  0BA4  0087               	movwf	7
  3579  0BA5  0181               	clrf	1
  3580  0BA6  2C44               	goto	l377
  3581  0BA7                     l3772:
  3582                           
  3583                           ;drink_meter.c: 36:     if(p->loadcell->gram < p->empty_gram){
  3584  0BA7  0820               	movf	calc_percentage@p^(0+128),w
  3585  0BA8  3E05               	addlw	5
  3586  0BA9  0086               	movwf	6
  3587  0BAA  3001               	movlw	1	; select bank2/3
  3588  0BAB  0087               	movwf	7
  3589  0BAC  3F40               	moviw [0]fsr1
  3590  0BAD  0020               	movlb	0	; select bank0
  3591  0BAE  00EC               	movwf	??_calc_percentage
  3592  0BAF  3F41               	moviw [1]fsr1
  3593  0BB0  00ED               	movwf	??_calc_percentage+1
  3594  0BB1  0021               	movlb	1	; select bank1
  3595  0BB2  0820               	movf	calc_percentage@p^(0+128),w
  3596  0BB3  0086               	movwf	6
  3597  0BB4  3001               	movlw	1	; select bank2/3
  3598  0BB5  0087               	movwf	7
  3599  0BB6  0801               	movf	1,w
  3600  0BB7  3E0A               	addlw	10
  3601  0BB8  0086               	movwf	6
  3602  0BB9  3001               	movlw	1	; select bank2/3
  3603  0BBA  0087               	movwf	7
  3604  0BBB  3F40               	moviw [0]fsr1
  3605  0BBC  0020               	movlb	0	; select bank0
  3606  0BBD  00EE               	movwf	??_calc_percentage+2
  3607  0BBE  3F41               	moviw [1]fsr1
  3608  0BBF  00EF               	movwf	??_calc_percentage+3
  3609  0BC0  086D               	movf	??_calc_percentage+1,w
  3610  0BC1  026F               	subwf	??_calc_percentage+3,w
  3611  0BC2  1D03               	skipz
  3612  0BC3  2BC6               	goto	u4595
  3613  0BC4  086C               	movf	??_calc_percentage,w
  3614  0BC5  026E               	subwf	??_calc_percentage+2,w
  3615  0BC6                     u4595:
  3616  0BC6  1803               	skipnc
  3617  0BC7  2BC9               	goto	u4591
  3618  0BC8  2BCA               	goto	u4590
  3619  0BC9                     u4591:
  3620  0BC9  2BD2               	goto	l3778
  3621  0BCA                     u4590:
  3622  0BCA                     l3774:
  3623                           
  3624                           ;drink_meter.c: 37:         p->percentage = 0;
  3625  0BCA  0021               	movlb	1	; select bank1
  3626  0BCB  0820               	movf	calc_percentage@p^(0+128),w
  3627  0BCC  3E07               	addlw	7
  3628  0BCD  0086               	movwf	6
  3629  0BCE  3001               	movlw	1	; select bank2/3
  3630  0BCF  0087               	movwf	7
  3631  0BD0  0181               	clrf	1
  3632  0BD1  2C44               	goto	l377
  3633  0BD2                     l3778:
  3634                           
  3635                           ;drink_meter.c: 42:     p->percentage = ((float)(p->loadcell->gram - p->empty_gram) / (f
      +                          loat)p->max_gram) * 100;
  3636  0BD2  0021               	movlb	1	; select bank1
  3637  0BD3  0820               	movf	calc_percentage@p^(0+128),w
  3638  0BD4  3E05               	addlw	5
  3639  0BD5  0086               	movwf	6
  3640  0BD6  3001               	movlw	1	; select bank2/3
  3641  0BD7  0087               	movwf	7
  3642  0BD8  0820               	movf	calc_percentage@p^(0+128),w
  3643  0BD9  0084               	movwf	4
  3644  0BDA  3001               	movlw	1	; select bank2/3
  3645  0BDB  0085               	movwf	5
  3646  0BDC  0800               	movf	0,w
  3647  0BDD  3E0A               	addlw	10
  3648  0BDE  0084               	movwf	4
  3649  0BDF  3001               	movlw	1	; select bank2/3
  3650  0BE0  0085               	movwf	5
  3651  0BE1  3F40               	moviw [0]fsr1
  3652  0BE2  0200               	subwf	0,w
  3653  0BE3  00F0               	movwf	___xxtofl@val
  3654  0BE4  3101               	addfsr 0,1
  3655  0BE5  3F41               	moviw [1]fsr1
  3656  0BE6  3B00               	subwfb	0,w
  3657  0BE7  00F1               	movwf	___xxtofl@val+1
  3658  0BE8  01F2               	clrf	___xxtofl@val+2
  3659  0BE9  01F3               	clrf	___xxtofl@val+3
  3660  0BEA  3000               	movlw	0
  3661  0BEB  3189  2137  318B   	fcall	___xxtofl
  3662  0BEE  0873               	movf	?___xxtofl+3,w
  3663  0BEF  0020               	movlb	0	; select bank0
  3664  0BF0  00A7               	movwf	___fldiv@b+3
  3665  0BF1  0872               	movf	?___xxtofl+2,w
  3666  0BF2  00A6               	movwf	___fldiv@b+2
  3667  0BF3  0871               	movf	?___xxtofl+1,w
  3668  0BF4  00A5               	movwf	___fldiv@b+1
  3669  0BF5  0870               	movf	?___xxtofl,w
  3670  0BF6  00A4               	movwf	___fldiv@b
  3671  0BF7  0021               	movlb	1	; select bank1
  3672  0BF8  0820               	movf	calc_percentage@p^(0+128),w
  3673  0BF9  3E03               	addlw	3
  3674  0BFA  0086               	movwf	6
  3675  0BFB  3001               	movlw	1	; select bank2/3
  3676  0BFC  0087               	movwf	7
  3677  0BFD  3F40               	moviw [0]fsr1
  3678  0BFE  0020               	movlb	0	; select bank0
  3679  0BFF  00EC               	movwf	??_calc_percentage
  3680  0C00  3F41               	moviw [1]fsr1
  3681  0C01  00ED               	movwf	??_calc_percentage+1
  3682  0C02  086C               	movf	??_calc_percentage,w
  3683  0C03  00F0               	movwf	___xxtofl@val
  3684  0C04  086D               	movf	??_calc_percentage+1,w
  3685  0C05  00F1               	movwf	___xxtofl@val+1
  3686  0C06  01F2               	clrf	___xxtofl@val+2
  3687  0C07  01F3               	clrf	___xxtofl@val+3
  3688  0C08  3000               	movlw	0
  3689  0C09  3189  2137  318B   	fcall	___xxtofl
  3690  0C0C  0873               	movf	?___xxtofl+3,w
  3691  0C0D  0020               	movlb	0	; select bank0
  3692  0C0E  00A3               	movwf	___fldiv@a+3
  3693  0C0F  0872               	movf	?___xxtofl+2,w
  3694  0C10  00A2               	movwf	___fldiv@a+2
  3695  0C11  0871               	movf	?___xxtofl+1,w
  3696  0C12  00A1               	movwf	___fldiv@a+1
  3697  0C13  0870               	movf	?___xxtofl,w
  3698  0C14  00A0               	movwf	___fldiv@a
  3699  0C15  3181  21C6  318B   	fcall	___fldiv
  3700  0C18  0020               	movlb	0	; select bank0
  3701  0C19  0823               	movf	?___fldiv+3,w
  3702  0C1A  00C1               	movwf	___flmul@a+3
  3703  0C1B  0822               	movf	?___fldiv+2,w
  3704  0C1C  00C0               	movwf	___flmul@a+2
  3705  0C1D  0821               	movf	?___fldiv+1,w
  3706  0C1E  00BF               	movwf	___flmul@a+1
  3707  0C1F  0820               	movf	?___fldiv,w
  3708  0C20  00BE               	movwf	___flmul@a
  3709  0C21  3042               	movlw	66
  3710  0C22  00BD               	movwf	___flmul@b+3
  3711  0C23  30C8               	movlw	200
  3712  0C24  00BC               	movwf	___flmul@b+2
  3713  0C25  3000               	movlw	0
  3714  0C26  00BB               	movwf	___flmul@b+1
  3715  0C27  3000               	movlw	0
  3716  0C28  00BA               	movwf	___flmul@b
  3717  0C29  3185  2576  318B   	fcall	___flmul
  3718  0C2C  0020               	movlb	0	; select bank0
  3719  0C2D  083D               	movf	?___flmul+3,w
  3720  0C2E  00D7               	movwf	___fltol@f1+3
  3721  0C2F  083C               	movf	?___flmul+2,w
  3722  0C30  00D6               	movwf	___fltol@f1+2
  3723  0C31  083B               	movf	?___flmul+1,w
  3724  0C32  00D5               	movwf	___fltol@f1+1
  3725  0C33  083A               	movf	?___flmul,w
  3726  0C34  00D4               	movwf	___fltol@f1
  3727  0C35  3195  252E  318B   	fcall	___fltol
  3728  0C38  0020               	movlb	0	; select bank0
  3729  0C39  0854               	movf	?___fltol,w
  3730  0C3A  00EE               	movwf	??_calc_percentage+2
  3731  0C3B  0021               	movlb	1	; select bank1
  3732  0C3C  0820               	movf	calc_percentage@p^(0+128),w
  3733  0C3D  3E07               	addlw	7
  3734  0C3E  0086               	movwf	6
  3735  0C3F  3001               	movlw	1	; select bank2/3
  3736  0C40  0087               	movwf	7
  3737  0C41  0020               	movlb	0	; select bank0
  3738  0C42  086E               	movf	??_calc_percentage+2,w
  3739  0C43  0081               	movwf	1
  3740  0C44                     l377:
  3741  0C44  0008               	return
  3742  0C45                     __end_of_calc_percentage:
  3743                           
  3744                           	psect	text3
  3745  16B7                     __ptext3:	
  3746 ;; *************** function _scale_convert_gram *****************
  3747 ;; Defined at:
  3748 ;;		line 75 in file "loadcell.c"
  3749 ;; Parameters:    Size  Location     Type
  3750 ;;  p               1    wreg     PTR struct .
  3751 ;;		 -> NULL(0), main@loadcell(12), 
  3752 ;; Auto vars:     Size  Location     Type
  3753 ;;  p               1   75[BANK0 ] PTR struct .
  3754 ;;		 -> NULL(0), main@loadcell(12), 
  3755 ;;  temp            4   71[BANK0 ] float 
  3756 ;; Return value:  Size  Location     Type
  3757 ;;                  1    wreg      void 
  3758 ;; Registers used:
  3759 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  3760 ;; Tracked objects:
  3761 ;;		On entry : 0/0
  3762 ;;		On exit  : 0/0
  3763 ;;		Unchanged: 0/0
  3764 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  3765 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3766 ;;      Locals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3767 ;;      Temps:          0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3768 ;;      Totals:         0      13       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3769 ;;Total ram usage:       13 bytes
  3770 ;; Hardware stack levels used: 1
  3771 ;; Hardware stack levels required when called: 1
  3772 ;; This function calls:
  3773 ;;		___fldiv
  3774 ;;		___fltol
  3775 ;;		___xxtofl
  3776 ;; This function is called by:
  3777 ;;		_calc_percentage
  3778 ;; This function uses a non-reentrant model
  3779 ;;
  3780                           
  3781                           
  3782                           ;psect for function _scale_convert_gram
  3783  16B7                     _scale_convert_gram:
  3784                           
  3785                           ;incstack = 0
  3786                           ; Regs used in _scale_convert_gram: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
  3787                           ;scale_convert_gram@p stored from wreg
  3788  16B7  0020               	movlb	0	; select bank0
  3789  16B8  00EB               	movwf	scale_convert_gram@p
  3790  16B9                     l3556:
  3791                           
  3792                           ;loadcell.c: 77:     if(p->weight_dat < p->weight_zero){
  3793  16B9  086B               	movf	scale_convert_gram@p,w
  3794  16BA  3E02               	addlw	2
  3795  16BB  0086               	movwf	6
  3796  16BC  3001               	movlw	1	; select bank2/3
  3797  16BD  0087               	movwf	7
  3798  16BE  3F40               	moviw [0]fsr1
  3799  16BF  00DF               	movwf	??_scale_convert_gram
  3800  16C0  3F41               	moviw [1]fsr1
  3801  16C1  00E0               	movwf	??_scale_convert_gram+1
  3802  16C2  3F42               	moviw [2]fsr1
  3803  16C3  00E1               	movwf	??_scale_convert_gram+2
  3804  16C4  3F43               	moviw [3]fsr1
  3805  16C5  00E2               	movwf	??_scale_convert_gram+3
  3806  16C6  086B               	movf	scale_convert_gram@p,w
  3807  16C7  3E06               	addlw	6
  3808  16C8  0086               	movwf	6
  3809  16C9  3001               	movlw	1	; select bank2/3
  3810  16CA  0087               	movwf	7
  3811  16CB  3F40               	moviw [0]fsr1
  3812  16CC  00E3               	movwf	??_scale_convert_gram+4
  3813  16CD  3F41               	moviw [1]fsr1
  3814  16CE  00E4               	movwf	??_scale_convert_gram+5
  3815  16CF  3F42               	moviw [2]fsr1
  3816  16D0  00E5               	movwf	??_scale_convert_gram+6
  3817  16D1  3F43               	moviw [3]fsr1
  3818  16D2  00E6               	movwf	??_scale_convert_gram+7
  3819  16D3  0862               	movf	??_scale_convert_gram+3,w
  3820  16D4  0266               	subwf	??_scale_convert_gram+7,w
  3821  16D5  1D03               	skipz
  3822  16D6  2EE1               	goto	u4285
  3823  16D7  0861               	movf	??_scale_convert_gram+2,w
  3824  16D8  0265               	subwf	??_scale_convert_gram+6,w
  3825  16D9  1D03               	skipz
  3826  16DA  2EE1               	goto	u4285
  3827  16DB  0860               	movf	??_scale_convert_gram+1,w
  3828  16DC  0264               	subwf	??_scale_convert_gram+5,w
  3829  16DD  1D03               	skipz
  3830  16DE  2EE1               	goto	u4285
  3831  16DF  085F               	movf	??_scale_convert_gram,w
  3832  16E0  0263               	subwf	??_scale_convert_gram+4,w
  3833  16E1                     u4285:
  3834  16E1  1803               	skipnc
  3835  16E2  2EE4               	goto	u4281
  3836  16E3  2EE5               	goto	u4280
  3837  16E4                     u4281:
  3838  16E4  2EEE               	goto	l3562
  3839  16E5                     u4280:
  3840  16E5                     l3558:
  3841                           
  3842                           ;loadcell.c: 78:         p->gram = 0;
  3843  16E5  086B               	movf	scale_convert_gram@p,w
  3844  16E6  3E0A               	addlw	10
  3845  16E7  0086               	movwf	6
  3846  16E8  3001               	movlw	1	; select bank2/3
  3847  16E9  0087               	movwf	7
  3848  16EA  3000               	movlw	0
  3849  16EB  3FC0               	movwi [0]fsr1
  3850  16EC  3FC1               	movwi [1]fsr1
  3851  16ED  2F56               	goto	l295
  3852  16EE                     l3562:
  3853                           
  3854                           ;loadcell.c: 82:     float temp = p->weight_dat - p->weight_zero;
  3855  16EE  086B               	movf	scale_convert_gram@p,w
  3856  16EF  3E02               	addlw	2
  3857  16F0  0086               	movwf	6
  3858  16F1  3001               	movlw	1	; select bank2/3
  3859  16F2  0087               	movwf	7
  3860  16F3  3F40               	moviw [0]fsr1
  3861  16F4  00DF               	movwf	??_scale_convert_gram
  3862  16F5  3F41               	moviw [1]fsr1
  3863  16F6  00E0               	movwf	??_scale_convert_gram+1
  3864  16F7  3F42               	moviw [2]fsr1
  3865  16F8  00E1               	movwf	??_scale_convert_gram+2
  3866  16F9  3F43               	moviw [3]fsr1
  3867  16FA  00E2               	movwf	??_scale_convert_gram+3
  3868  16FB  086B               	movf	scale_convert_gram@p,w
  3869  16FC  3E06               	addlw	6
  3870  16FD  0086               	movwf	6
  3871  16FE  3001               	movlw	1	; select bank2/3
  3872  16FF  0087               	movwf	7
  3873  1700  3F40               	moviw [0]fsr1
  3874  1701  00E3               	movwf	??_scale_convert_gram+4
  3875  1702  3F41               	moviw [1]fsr1
  3876  1703  00E4               	movwf	??_scale_convert_gram+5
  3877  1704  3F42               	moviw [2]fsr1
  3878  1705  00E5               	movwf	??_scale_convert_gram+6
  3879  1706  3F43               	moviw [3]fsr1
  3880  1707  00E6               	movwf	??_scale_convert_gram+7
  3881  1708  085F               	movf	??_scale_convert_gram,w
  3882  1709  02E3               	subwf	??_scale_convert_gram+4,f
  3883  170A  0860               	movf	??_scale_convert_gram+1,w
  3884  170B  3BE4               	subwfb	??_scale_convert_gram+5,f
  3885  170C  0861               	movf	??_scale_convert_gram+2,w
  3886  170D  3BE5               	subwfb	??_scale_convert_gram+6,f
  3887  170E  0862               	movf	??_scale_convert_gram+3,w
  3888  170F  3BE6               	subwfb	??_scale_convert_gram+7,f
  3889  1710  0866               	movf	??_scale_convert_gram+7,w
  3890  1711  00F3               	movwf	___xxtofl@val+3
  3891  1712  0865               	movf	??_scale_convert_gram+6,w
  3892  1713  00F2               	movwf	___xxtofl@val+2
  3893  1714  0864               	movf	??_scale_convert_gram+5,w
  3894  1715  00F1               	movwf	___xxtofl@val+1
  3895  1716  0863               	movf	??_scale_convert_gram+4,w
  3896  1717  00F0               	movwf	___xxtofl@val
  3897  1718  3000               	movlw	0
  3898  1719  3189  2137  3196   	fcall	___xxtofl
  3899  171C  0873               	movf	?___xxtofl+3,w
  3900  171D  0020               	movlb	0	; select bank0
  3901  171E  00EA               	movwf	scale_convert_gram@temp+3
  3902  171F  0872               	movf	?___xxtofl+2,w
  3903  1720  00E9               	movwf	scale_convert_gram@temp+2
  3904  1721  0871               	movf	?___xxtofl+1,w
  3905  1722  00E8               	movwf	scale_convert_gram@temp+1
  3906  1723  0870               	movf	?___xxtofl,w
  3907  1724  00E7               	movwf	scale_convert_gram@temp
  3908  1725                     l3564:
  3909                           
  3910                           ;loadcell.c: 83:     temp = temp / 493;
  3911  1725  3043               	movlw	67
  3912  1726  00A3               	movwf	___fldiv@a+3
  3913  1727  30F6               	movlw	246
  3914  1728  00A2               	movwf	___fldiv@a+2
  3915  1729  3080               	movlw	128
  3916  172A  00A1               	movwf	___fldiv@a+1
  3917  172B  3000               	movlw	0
  3918  172C  00A0               	movwf	___fldiv@a
  3919  172D  086A               	movf	scale_convert_gram@temp+3,w
  3920  172E  00A7               	movwf	___fldiv@b+3
  3921  172F  0869               	movf	scale_convert_gram@temp+2,w
  3922  1730  00A6               	movwf	___fldiv@b+2
  3923  1731  0868               	movf	scale_convert_gram@temp+1,w
  3924  1732  00A5               	movwf	___fldiv@b+1
  3925  1733  0867               	movf	scale_convert_gram@temp,w
  3926  1734  00A4               	movwf	___fldiv@b
  3927  1735  3181  21C6  3196   	fcall	___fldiv
  3928  1738  0020               	movlb	0	; select bank0
  3929  1739  0823               	movf	?___fldiv+3,w
  3930  173A  00EA               	movwf	scale_convert_gram@temp+3
  3931  173B  0822               	movf	?___fldiv+2,w
  3932  173C  00E9               	movwf	scale_convert_gram@temp+2
  3933  173D  0821               	movf	?___fldiv+1,w
  3934  173E  00E8               	movwf	scale_convert_gram@temp+1
  3935  173F  0820               	movf	?___fldiv,w
  3936  1740  00E7               	movwf	scale_convert_gram@temp
  3937  1741                     l3566:
  3938                           
  3939                           ;loadcell.c: 84:     p->gram = (uint16_t)temp;
  3940  1741  086A               	movf	scale_convert_gram@temp+3,w
  3941  1742  00D7               	movwf	___fltol@f1+3
  3942  1743  0869               	movf	scale_convert_gram@temp+2,w
  3943  1744  00D6               	movwf	___fltol@f1+2
  3944  1745  0868               	movf	scale_convert_gram@temp+1,w
  3945  1746  00D5               	movwf	___fltol@f1+1
  3946  1747  0867               	movf	scale_convert_gram@temp,w
  3947  1748  00D4               	movwf	___fltol@f1
  3948  1749  3195  252E  3196   	fcall	___fltol
  3949  174C  0020               	movlb	0	; select bank0
  3950  174D  086B               	movf	scale_convert_gram@p,w
  3951  174E  3E0A               	addlw	10
  3952  174F  0086               	movwf	6
  3953  1750  3001               	movlw	1	; select bank2/3
  3954  1751  0087               	movwf	7
  3955  1752  0854               	movf	?___fltol,w
  3956  1753  3FC0               	movwi [0]fsr1
  3957  1754  0855               	movf	?___fltol+1,w
  3958  1755  3FC1               	movwi [1]fsr1
  3959  1756                     l295:
  3960  1756  0008               	return
  3961  1757                     __end_of_scale_convert_gram:
  3962                           
  3963                           	psect	text4
  3964  0937                     __ptext4:	
  3965 ;; *************** function ___xxtofl *****************
  3966 ;; Defined at:
  3967 ;;		line 10 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\xxtofl.c"
  3968 ;; Parameters:    Size  Location     Type
  3969 ;;  sign            1    wreg     unsigned char 
  3970 ;;  val             4    0[COMMON] long 
  3971 ;; Auto vars:     Size  Location     Type
  3972 ;;  sign            1    8[COMMON] unsigned char 
  3973 ;;  arg             4   10[COMMON] unsigned long 
  3974 ;;  exp             1    9[COMMON] unsigned char 
  3975 ;; Return value:  Size  Location     Type
  3976 ;;                  4    0[COMMON] unsigned char 
  3977 ;; Registers used:
  3978 ;;		wreg, status,2, status,0
  3979 ;; Tracked objects:
  3980 ;;		On entry : 0/0
  3981 ;;		On exit  : 0/0
  3982 ;;		Unchanged: 0/0
  3983 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  3984 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3985 ;;      Locals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3986 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3987 ;;      Totals:        14       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3988 ;;Total ram usage:       14 bytes
  3989 ;; Hardware stack levels used: 1
  3990 ;; This function calls:
  3991 ;;		Nothing
  3992 ;; This function is called by:
  3993 ;;		_scale_convert_gram
  3994 ;;		_calc_percentage
  3995 ;; This function uses a non-reentrant model
  3996 ;;
  3997                           
  3998                           
  3999                           ;psect for function ___xxtofl
  4000  0937                     ___xxtofl:
  4001                           
  4002                           ;incstack = 0
  4003                           ; Regs used in ___xxtofl: [wreg+status,2+status,0]
  4004                           ;___xxtofl@sign stored from wreg
  4005  0937  00F8               	movwf	___xxtofl@sign
  4006  0938                     l3346:
  4007  0938  0878               	movf	___xxtofl@sign,w
  4008  0939  1903               	btfsc	3,2
  4009  093A  293C               	goto	u3991
  4010  093B  293D               	goto	u3990
  4011  093C                     u3991:
  4012  093C  2951               	goto	l3352
  4013  093D                     u3990:
  4014  093D                     l3348:
  4015  093D  1FF3               	btfss	___xxtofl@val+3,7
  4016  093E  2940               	goto	u4001
  4017  093F  2941               	goto	u4000
  4018  0940                     u4001:
  4019  0940  2951               	goto	l3352
  4020  0941                     u4000:
  4021  0941                     l3350:
  4022  0941  0970               	comf	___xxtofl@val,w
  4023  0942  00FA               	movwf	___xxtofl@arg
  4024  0943  0971               	comf	___xxtofl@val+1,w
  4025  0944  00FB               	movwf	___xxtofl@arg+1
  4026  0945  0972               	comf	___xxtofl@val+2,w
  4027  0946  00FC               	movwf	___xxtofl@arg+2
  4028  0947  0973               	comf	___xxtofl@val+3,w
  4029  0948  00FD               	movwf	___xxtofl@arg+3
  4030  0949  0AFA               	incf	___xxtofl@arg,f
  4031  094A  1903               	skipnz
  4032  094B  0AFB               	incf	___xxtofl@arg+1,f
  4033  094C  1903               	skipnz
  4034  094D  0AFC               	incf	___xxtofl@arg+2,f
  4035  094E  1903               	skipnz
  4036  094F  0AFD               	incf	___xxtofl@arg+3,f
  4037  0950  2959               	goto	l975
  4038  0951                     l3352:
  4039  0951  0873               	movf	___xxtofl@val+3,w
  4040  0952  00FD               	movwf	___xxtofl@arg+3
  4041  0953  0872               	movf	___xxtofl@val+2,w
  4042  0954  00FC               	movwf	___xxtofl@arg+2
  4043  0955  0871               	movf	___xxtofl@val+1,w
  4044  0956  00FB               	movwf	___xxtofl@arg+1
  4045  0957  0870               	movf	___xxtofl@val,w
  4046  0958  00FA               	movwf	___xxtofl@arg
  4047  0959                     l975:
  4048  0959  0873               	movf	___xxtofl@val+3,w
  4049  095A  0472               	iorwf	___xxtofl@val+2,w
  4050  095B  0471               	iorwf	___xxtofl@val+1,w
  4051  095C  0470               	iorwf	___xxtofl@val,w
  4052  095D  1D03               	skipz
  4053  095E  2960               	goto	u4011
  4054  095F  2961               	goto	u4010
  4055  0960                     u4011:
  4056  0960  296A               	goto	l3358
  4057  0961                     u4010:
  4058  0961                     l3354:
  4059  0961  3000               	movlw	0
  4060  0962  00F3               	movwf	?___xxtofl+3
  4061  0963  3000               	movlw	0
  4062  0964  00F2               	movwf	?___xxtofl+2
  4063  0965  3000               	movlw	0
  4064  0966  00F1               	movwf	?___xxtofl+1
  4065  0967  3000               	movlw	0
  4066  0968  00F0               	movwf	?___xxtofl
  4067  0969  29E2               	goto	l977
  4068  096A                     l3358:
  4069  096A  3096               	movlw	150
  4070  096B  00F4               	movwf	??___xxtofl
  4071  096C  0874               	movf	??___xxtofl,w
  4072  096D  00F9               	movwf	___xxtofl@exp
  4073  096E  297A               	goto	l3362
  4074  096F                     l3360:
  4075  096F  3001               	movlw	1
  4076  0970  00F4               	movwf	??___xxtofl
  4077  0971  0874               	movf	??___xxtofl,w
  4078  0972  07F9               	addwf	___xxtofl@exp,f
  4079  0973  3001               	movlw	1
  4080  0974                     u4025:
  4081  0974  36FD               	lsrf	___xxtofl@arg+3,f
  4082  0975  0CFC               	rrf	___xxtofl@arg+2,f
  4083  0976  0CFB               	rrf	___xxtofl@arg+1,f
  4084  0977  0CFA               	rrf	___xxtofl@arg,f
  4085  0978  0B89               	decfsz	9,f
  4086  0979  2974               	goto	u4025
  4087  097A                     l3362:
  4088  097A  30FE               	movlw	254
  4089  097B  057D               	andwf	___xxtofl@arg+3,w
  4090  097C  1D03               	btfss	3,2
  4091  097D  297F               	goto	u4031
  4092  097E  2980               	goto	u4030
  4093  097F                     u4031:
  4094  097F  296F               	goto	l3360
  4095  0980                     u4030:
  4096  0980  2994               	goto	l981
  4097  0981                     l3364:
  4098  0981  3001               	movlw	1
  4099  0982  00F4               	movwf	??___xxtofl
  4100  0983  0874               	movf	??___xxtofl,w
  4101  0984  07F9               	addwf	___xxtofl@exp,f
  4102  0985                     l3366:
  4103  0985  3001               	movlw	1
  4104  0986  07FA               	addwf	___xxtofl@arg,f
  4105  0987  3000               	movlw	0
  4106  0988  3DFB               	addwfc	___xxtofl@arg+1,f
  4107  0989  3000               	movlw	0
  4108  098A  3DFC               	addwfc	___xxtofl@arg+2,f
  4109  098B  3000               	movlw	0
  4110  098C  3DFD               	addwfc	___xxtofl@arg+3,f
  4111  098D                     l3368:
  4112  098D  3001               	movlw	1
  4113  098E                     u4045:
  4114  098E  36FD               	lsrf	___xxtofl@arg+3,f
  4115  098F  0CFC               	rrf	___xxtofl@arg+2,f
  4116  0990  0CFB               	rrf	___xxtofl@arg+1,f
  4117  0991  0CFA               	rrf	___xxtofl@arg,f
  4118  0992  0B89               	decfsz	9,f
  4119  0993  298E               	goto	u4045
  4120  0994                     l981:
  4121  0994  30FF               	movlw	255
  4122  0995  057D               	andwf	___xxtofl@arg+3,w
  4123  0996  1D03               	btfss	3,2
  4124  0997  2999               	goto	u4051
  4125  0998  299A               	goto	u4050
  4126  0999                     u4051:
  4127  0999  2981               	goto	l3364
  4128  099A                     u4050:
  4129  099A  29A4               	goto	l3372
  4130  099B                     l3370:
  4131  099B  3001               	movlw	1
  4132  099C  02F9               	subwf	___xxtofl@exp,f
  4133  099D  3001               	movlw	1
  4134  099E                     u4065:
  4135  099E  35FA               	lslf	___xxtofl@arg,f
  4136  099F  0DFB               	rlf	___xxtofl@arg+1,f
  4137  09A0  0DFC               	rlf	___xxtofl@arg+2,f
  4138  09A1  0DFD               	rlf	___xxtofl@arg+3,f
  4139  09A2  0B89               	decfsz	9,f
  4140  09A3  299E               	goto	u4065
  4141  09A4                     l3372:
  4142  09A4  1BFC               	btfsc	___xxtofl@arg+2,7
  4143  09A5  29A7               	goto	u4071
  4144  09A6  29A8               	goto	u4070
  4145  09A7                     u4071:
  4146  09A7  29AE               	goto	l988
  4147  09A8                     u4070:
  4148  09A8                     l3374:
  4149  09A8  3002               	movlw	2
  4150  09A9  0279               	subwf	___xxtofl@exp,w
  4151  09AA  1803               	skipnc
  4152  09AB  29AD               	goto	u4081
  4153  09AC  29AE               	goto	u4080
  4154  09AD                     u4081:
  4155  09AD  299B               	goto	l3370
  4156  09AE                     u4080:
  4157  09AE                     l988:
  4158  09AE  1879               	btfsc	___xxtofl@exp,0
  4159  09AF  29B1               	goto	u4091
  4160  09B0  29B2               	goto	u4090
  4161  09B1                     u4091:
  4162  09B1  29BA               	goto	l989
  4163  09B2                     u4090:
  4164  09B2                     l3376:
  4165  09B2  30FF               	movlw	255
  4166  09B3  05FA               	andwf	___xxtofl@arg,f
  4167  09B4  30FF               	movlw	255
  4168  09B5  05FB               	andwf	___xxtofl@arg+1,f
  4169  09B6  307F               	movlw	127
  4170  09B7  05FC               	andwf	___xxtofl@arg+2,f
  4171  09B8  30FF               	movlw	255
  4172  09B9  05FD               	andwf	___xxtofl@arg+3,f
  4173  09BA                     l989:
  4174  09BA  1003               	clrc
  4175  09BB  0CF9               	rrf	___xxtofl@exp,f
  4176  09BC                     l3378:
  4177  09BC  0879               	movf	___xxtofl@exp,w
  4178  09BD  00F4               	movwf	??___xxtofl
  4179  09BE  01F5               	clrf	??___xxtofl+1
  4180  09BF  01F6               	clrf	??___xxtofl+2
  4181  09C0  01F7               	clrf	??___xxtofl+3
  4182  09C1  3018               	movlw	24
  4183  09C2                     u4105:
  4184  09C2  35F4               	lslf	??___xxtofl,f
  4185  09C3  0DF5               	rlf	??___xxtofl+1,f
  4186  09C4  0DF6               	rlf	??___xxtofl+2,f
  4187  09C5  0DF7               	rlf	??___xxtofl+3,f
  4188  09C6                     u4100:
  4189  09C6  0B89               	decfsz	9,f
  4190  09C7  29C2               	goto	u4105
  4191  09C8  0874               	movf	??___xxtofl,w
  4192  09C9  04FA               	iorwf	___xxtofl@arg,f
  4193  09CA  0875               	movf	??___xxtofl+1,w
  4194  09CB  04FB               	iorwf	___xxtofl@arg+1,f
  4195  09CC  0876               	movf	??___xxtofl+2,w
  4196  09CD  04FC               	iorwf	___xxtofl@arg+2,f
  4197  09CE  0877               	movf	??___xxtofl+3,w
  4198  09CF  04FD               	iorwf	___xxtofl@arg+3,f
  4199  09D0                     l3380:
  4200  09D0  0878               	movf	___xxtofl@sign,w
  4201  09D1  1903               	btfsc	3,2
  4202  09D2  29D4               	goto	u4111
  4203  09D3  29D5               	goto	u4110
  4204  09D4                     u4111:
  4205  09D4  29DA               	goto	l3386
  4206  09D5                     u4110:
  4207  09D5                     l3382:
  4208  09D5  1FF3               	btfss	___xxtofl@val+3,7
  4209  09D6  29D8               	goto	u4121
  4210  09D7  29D9               	goto	u4120
  4211  09D8                     u4121:
  4212  09D8  29DA               	goto	l3386
  4213  09D9                     u4120:
  4214  09D9                     l3384:
  4215  09D9  17FD               	bsf	___xxtofl@arg+3,7
  4216  09DA                     l3386:
  4217  09DA  087D               	movf	___xxtofl@arg+3,w
  4218  09DB  00F3               	movwf	?___xxtofl+3
  4219  09DC  087C               	movf	___xxtofl@arg+2,w
  4220  09DD  00F2               	movwf	?___xxtofl+2
  4221  09DE  087B               	movf	___xxtofl@arg+1,w
  4222  09DF  00F1               	movwf	?___xxtofl+1
  4223  09E0  087A               	movf	___xxtofl@arg,w
  4224  09E1  00F0               	movwf	?___xxtofl
  4225  09E2                     l977:
  4226  09E2  0008               	return
  4227  09E3                     __end_of___xxtofl:
  4228                           
  4229                           	psect	text5
  4230  152E                     __ptext5:	
  4231 ;; *************** function ___fltol *****************
  4232 ;; Defined at:
  4233 ;;		line 43 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\fltol.c"
  4234 ;; Parameters:    Size  Location     Type
  4235 ;;  f1              4   52[BANK0 ] unsigned char 
  4236 ;; Auto vars:     Size  Location     Type
  4237 ;;  exp1            1   62[BANK0 ] unsigned char 
  4238 ;;  sign1           1   61[BANK0 ] unsigned char 
  4239 ;; Return value:  Size  Location     Type
  4240 ;;                  4   52[BANK0 ] long 
  4241 ;; Registers used:
  4242 ;;		wreg, status,2, status,0
  4243 ;; Tracked objects:
  4244 ;;		On entry : 0/0
  4245 ;;		On exit  : 0/0
  4246 ;;		Unchanged: 0/0
  4247 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  4248 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4249 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4250 ;;      Temps:          0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4251 ;;      Totals:         0      11       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4252 ;;Total ram usage:       11 bytes
  4253 ;; Hardware stack levels used: 1
  4254 ;; This function calls:
  4255 ;;		Nothing
  4256 ;; This function is called by:
  4257 ;;		_scale_convert_gram
  4258 ;;		_calc_percentage
  4259 ;; This function uses a non-reentrant model
  4260 ;;
  4261                           
  4262                           
  4263                           ;psect for function ___fltol
  4264  152E                     ___fltol:
  4265  152E                     l3156:	
  4266                           ;incstack = 0
  4267                           ; Regs used in ___fltol: [wreg+status,2+status,0]
  4268                           
  4269  152E  1003               	clrc
  4270  152F  0020               	movlb	0	; select bank0
  4271  1530  0D56               	rlf	___fltol@f1+2,w
  4272  1531  0D57               	rlf	___fltol@f1+3,w
  4273  1532  00D8               	movwf	??___fltol
  4274  1533  0858               	movf	??___fltol,w
  4275  1534  00DE               	movwf	___fltol@exp1
  4276  1535  085E               	movf	___fltol@exp1,w
  4277  1536  1D03               	btfss	3,2
  4278  1537  2D39               	goto	u3571
  4279  1538  2D3A               	goto	u3570
  4280  1539                     u3571:
  4281  1539  2D43               	goto	l3162
  4282  153A                     u3570:
  4283  153A                     l3158:
  4284  153A  3000               	movlw	0
  4285  153B  00D7               	movwf	?___fltol+3
  4286  153C  3000               	movlw	0
  4287  153D  00D6               	movwf	?___fltol+2
  4288  153E  3000               	movlw	0
  4289  153F  00D5               	movwf	?___fltol+1
  4290  1540  3000               	movlw	0
  4291  1541  00D4               	movwf	?___fltol
  4292  1542  2DA2               	goto	l728
  4293  1543                     l3162:
  4294  1543  0854               	movf	___fltol@f1,w
  4295  1544  00D8               	movwf	??___fltol
  4296  1545  0855               	movf	___fltol@f1+1,w
  4297  1546  00D9               	movwf	??___fltol+1
  4298  1547  0856               	movf	___fltol@f1+2,w
  4299  1548  00DA               	movwf	??___fltol+2
  4300  1549  0857               	movf	___fltol@f1+3,w
  4301  154A  00DB               	movwf	??___fltol+3
  4302  154B  301F               	movlw	31
  4303  154C                     u3585:
  4304  154C  36DB               	lsrf	??___fltol+3,f
  4305  154D  0CDA               	rrf	??___fltol+2,f
  4306  154E  0CD9               	rrf	??___fltol+1,f
  4307  154F  0CD8               	rrf	??___fltol,f
  4308  1550                     u3580:
  4309  1550  0B89               	decfsz	9,f
  4310  1551  2D4C               	goto	u3585
  4311  1552  0858               	movf	??___fltol,w
  4312  1553  00DC               	movwf	??___fltol+4
  4313  1554  085C               	movf	??___fltol+4,w
  4314  1555  00DD               	movwf	___fltol@sign1
  4315  1556                     l3164:
  4316  1556  17D6               	bsf	___fltol@f1+2,7
  4317  1557                     l3166:
  4318  1557  30FF               	movlw	255
  4319  1558  05D4               	andwf	___fltol@f1,f
  4320  1559  30FF               	movlw	255
  4321  155A  05D5               	andwf	___fltol@f1+1,f
  4322  155B  30FF               	movlw	255
  4323  155C  05D6               	andwf	___fltol@f1+2,f
  4324  155D  3000               	movlw	0
  4325  155E  05D7               	andwf	___fltol@f1+3,f
  4326  155F                     l3168:
  4327  155F  3096               	movlw	150
  4328  1560  02DE               	subwf	___fltol@exp1,f
  4329  1561                     l3170:
  4330  1561  1FDE               	btfss	___fltol@exp1,7
  4331  1562  2D64               	goto	u3591
  4332  1563  2D65               	goto	u3590
  4333  1564                     u3591:
  4334  1564  2D7D               	goto	l3180
  4335  1565                     u3590:
  4336  1565                     l3172:
  4337  1565  085E               	movf	___fltol@exp1,w
  4338  1566  3A80               	xorlw	128
  4339  1567  3E97               	addlw	151
  4340  1568  1803               	skipnc
  4341  1569  2D6B               	goto	u3601
  4342  156A  2D6C               	goto	u3600
  4343  156B                     u3601:
  4344  156B  2D6D               	goto	l3178
  4345  156C                     u3600:
  4346  156C  2D3A               	goto	l3158
  4347  156D                     l3178:
  4348  156D  3001               	movlw	1
  4349  156E                     u3615:
  4350  156E  36D7               	lsrf	___fltol@f1+3,f
  4351  156F  0CD6               	rrf	___fltol@f1+2,f
  4352  1570  0CD5               	rrf	___fltol@f1+1,f
  4353  1571  0CD4               	rrf	___fltol@f1,f
  4354  1572  0B89               	decfsz	9,f
  4355  1573  2D6E               	goto	u3615
  4356  1574  3001               	movlw	1
  4357  1575  00D8               	movwf	??___fltol
  4358  1576  0858               	movf	??___fltol,w
  4359  1577  07DE               	addwf	___fltol@exp1,f
  4360  1578  1D03               	btfss	3,2
  4361  1579  2D7B               	goto	u3621
  4362  157A  2D7C               	goto	u3620
  4363  157B                     u3621:
  4364  157B  2D6D               	goto	l3178
  4365  157C                     u3620:
  4366  157C  2D92               	goto	l3188
  4367  157D                     l3180:
  4368  157D  3020               	movlw	32
  4369  157E  025E               	subwf	___fltol@exp1,w
  4370  157F  1C03               	skipc
  4371  1580  2D82               	goto	u3631
  4372  1581  2D83               	goto	u3630
  4373  1582                     u3631:
  4374  1582  2D8D               	goto	l735
  4375  1583                     u3630:
  4376  1583  2D3A               	goto	l3158
  4377  1584                     l3186:
  4378  1584  3001               	movlw	1
  4379  1585                     u3645:
  4380  1585  35D4               	lslf	___fltol@f1,f
  4381  1586  0DD5               	rlf	___fltol@f1+1,f
  4382  1587  0DD6               	rlf	___fltol@f1+2,f
  4383  1588  0DD7               	rlf	___fltol@f1+3,f
  4384  1589  0B89               	decfsz	9,f
  4385  158A  2D85               	goto	u3645
  4386  158B  3001               	movlw	1
  4387  158C  02DE               	subwf	___fltol@exp1,f
  4388  158D                     l735:
  4389  158D  085E               	movf	___fltol@exp1,w
  4390  158E  1D03               	btfss	3,2
  4391  158F  2D91               	goto	u3651
  4392  1590  2D92               	goto	u3650
  4393  1591                     u3651:
  4394  1591  2D84               	goto	l3186
  4395  1592                     u3650:
  4396  1592                     l3188:
  4397  1592  085D               	movf	___fltol@sign1,w
  4398  1593  1903               	btfsc	3,2
  4399  1594  2D96               	goto	u3661
  4400  1595  2D97               	goto	u3660
  4401  1596                     u3661:
  4402  1596  2DA2               	goto	l738
  4403  1597                     u3660:
  4404  1597                     l3190:
  4405  1597  09D4               	comf	___fltol@f1,f
  4406  1598  09D5               	comf	___fltol@f1+1,f
  4407  1599  09D6               	comf	___fltol@f1+2,f
  4408  159A  09D7               	comf	___fltol@f1+3,f
  4409  159B  0AD4               	incf	___fltol@f1,f
  4410  159C  1903               	skipnz
  4411  159D  0AD5               	incf	___fltol@f1+1,f
  4412  159E  1903               	skipnz
  4413  159F  0AD6               	incf	___fltol@f1+2,f
  4414  15A0  1903               	skipnz
  4415  15A1  0AD7               	incf	___fltol@f1+3,f
  4416  15A2                     l738:
  4417  15A2                     l728:
  4418  15A2  0008               	return
  4419  15A3                     __end_of___fltol:
  4420                           
  4421                           	psect	text6
  4422  01C6                     __ptext6:	
  4423 ;; *************** function ___fldiv *****************
  4424 ;; Defined at:
  4425 ;;		line 8 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\sprcdiv.c"
  4426 ;; Parameters:    Size  Location     Type
  4427 ;;  a               4    0[BANK0 ] long 
  4428 ;;  b               4    4[BANK0 ] long 
  4429 ;; Auto vars:     Size  Location     Type
  4430 ;;  grs             4   20[BANK0 ] unsigned long 
  4431 ;;  rem             4   13[BANK0 ] unsigned long 
  4432 ;;  new_exp         2   18[BANK0 ] int 
  4433 ;;  aexp            1   25[BANK0 ] unsigned char 
  4434 ;;  bexp            1   24[BANK0 ] unsigned char 
  4435 ;;  sign            1   17[BANK0 ] unsigned char 
  4436 ;; Return value:  Size  Location     Type
  4437 ;;                  4    0[BANK0 ] unsigned char 
  4438 ;; Registers used:
  4439 ;;		wreg, status,2, status,0
  4440 ;; Tracked objects:
  4441 ;;		On entry : 0/0
  4442 ;;		On exit  : 0/0
  4443 ;;		Unchanged: 0/0
  4444 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  4445 ;;      Params:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4446 ;;      Locals:         0      13       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4447 ;;      Temps:          0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4448 ;;      Totals:         0      26       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4449 ;;Total ram usage:       26 bytes
  4450 ;; Hardware stack levels used: 1
  4451 ;; This function calls:
  4452 ;;		Nothing
  4453 ;; This function is called by:
  4454 ;;		_scale_convert_gram
  4455 ;;		_calc_percentage
  4456 ;; This function uses a non-reentrant model
  4457 ;;
  4458                           
  4459                           
  4460                           ;psect for function ___fldiv
  4461  01C6                     ___fldiv:
  4462  01C6                     l3192:	
  4463                           ;incstack = 0
  4464                           ; Regs used in ___fldiv: [wreg+status,2+status,0]
  4465                           
  4466  01C6  0020               	movlb	0	; select bank0
  4467  01C7  0827               	movf	___fldiv@b+3,w
  4468  01C8  3980               	andlw	128
  4469  01C9  00A8               	movwf	??___fldiv
  4470  01CA  0828               	movf	??___fldiv,w
  4471  01CB  00B1               	movwf	___fldiv@sign
  4472  01CC                     l3194:
  4473  01CC  3527               	lslf	___fldiv@b+3,w
  4474  01CD  00A8               	movwf	??___fldiv
  4475  01CE  0828               	movf	??___fldiv,w
  4476  01CF  00B8               	movwf	___fldiv@bexp
  4477  01D0                     l3196:
  4478  01D0  1FA6               	btfss	___fldiv@b+2,7
  4479  01D1  29D3               	goto	u3671
  4480  01D2  29D4               	goto	u3670
  4481  01D3                     u3671:
  4482  01D3  29D5               	goto	l3200
  4483  01D4                     u3670:
  4484  01D4                     l3198:
  4485  01D4  1438               	bsf	___fldiv@bexp,0
  4486  01D5                     l3200:
  4487  01D5  0838               	movf	___fldiv@bexp,w
  4488  01D6  1903               	btfsc	3,2
  4489  01D7  29D9               	goto	u3681
  4490  01D8  29DA               	goto	u3680
  4491  01D9                     u3681:
  4492  01D9  29EA               	goto	l3210
  4493  01DA                     u3680:
  4494  01DA                     l3202:
  4495  01DA  0A38               	incf	___fldiv@bexp,w
  4496  01DB  1D03               	btfss	3,2
  4497  01DC  29DE               	goto	u3691
  4498  01DD  29DF               	goto	u3690
  4499  01DE                     u3691:
  4500  01DE  29E7               	goto	l3206
  4501  01DF                     u3690:
  4502  01DF                     l3204:
  4503  01DF  3000               	movlw	0
  4504  01E0  00A7               	movwf	___fldiv@b+3
  4505  01E1  3000               	movlw	0
  4506  01E2  00A6               	movwf	___fldiv@b+2
  4507  01E3  3000               	movlw	0
  4508  01E4  00A5               	movwf	___fldiv@b+1
  4509  01E5  3000               	movlw	0
  4510  01E6  00A4               	movwf	___fldiv@b
  4511  01E7                     l3206:
  4512  01E7  17A6               	bsf	___fldiv@b+2,7
  4513  01E8                     l3208:
  4514  01E8  01A7               	clrf	___fldiv@b+3
  4515  01E9  29F2               	goto	l3212
  4516  01EA                     l3210:
  4517  01EA  3000               	movlw	0
  4518  01EB  00A7               	movwf	___fldiv@b+3
  4519  01EC  3000               	movlw	0
  4520  01ED  00A6               	movwf	___fldiv@b+2
  4521  01EE  3000               	movlw	0
  4522  01EF  00A5               	movwf	___fldiv@b+1
  4523  01F0  3000               	movlw	0
  4524  01F1  00A4               	movwf	___fldiv@b
  4525  01F2                     l3212:
  4526  01F2  0823               	movf	___fldiv@a+3,w
  4527  01F3  3980               	andlw	128
  4528  01F4  00A8               	movwf	??___fldiv
  4529  01F5  0828               	movf	??___fldiv,w
  4530  01F6  06B1               	xorwf	___fldiv@sign,f
  4531  01F7                     l3214:
  4532  01F7  3523               	lslf	___fldiv@a+3,w
  4533  01F8  00A8               	movwf	??___fldiv
  4534  01F9  0828               	movf	??___fldiv,w
  4535  01FA  00B9               	movwf	___fldiv@aexp
  4536  01FB                     l3216:
  4537  01FB  1FA2               	btfss	___fldiv@a+2,7
  4538  01FC  29FE               	goto	u3701
  4539  01FD  29FF               	goto	u3700
  4540  01FE                     u3701:
  4541  01FE  2A00               	goto	l3220
  4542  01FF                     u3700:
  4543  01FF                     l3218:
  4544  01FF  1439               	bsf	___fldiv@aexp,0
  4545  0200                     l3220:
  4546  0200  0839               	movf	___fldiv@aexp,w
  4547  0201  1903               	btfsc	3,2
  4548  0202  2A04               	goto	u3711
  4549  0203  2A05               	goto	u3710
  4550  0204                     u3711:
  4551  0204  2A15               	goto	l3230
  4552  0205                     u3710:
  4553  0205                     l3222:
  4554  0205  0A39               	incf	___fldiv@aexp,w
  4555  0206  1D03               	btfss	3,2
  4556  0207  2A09               	goto	u3721
  4557  0208  2A0A               	goto	u3720
  4558  0209                     u3721:
  4559  0209  2A12               	goto	l3226
  4560  020A                     u3720:
  4561  020A                     l3224:
  4562  020A  3000               	movlw	0
  4563  020B  00A3               	movwf	___fldiv@a+3
  4564  020C  3000               	movlw	0
  4565  020D  00A2               	movwf	___fldiv@a+2
  4566  020E  3000               	movlw	0
  4567  020F  00A1               	movwf	___fldiv@a+1
  4568  0210  3000               	movlw	0
  4569  0211  00A0               	movwf	___fldiv@a
  4570  0212                     l3226:
  4571  0212  17A2               	bsf	___fldiv@a+2,7
  4572  0213                     l3228:
  4573  0213  01A3               	clrf	___fldiv@a+3
  4574  0214  2A1D               	goto	l891
  4575  0215                     l3230:
  4576  0215  3000               	movlw	0
  4577  0216  00A3               	movwf	___fldiv@a+3
  4578  0217  3000               	movlw	0
  4579  0218  00A2               	movwf	___fldiv@a+2
  4580  0219  3000               	movlw	0
  4581  021A  00A1               	movwf	___fldiv@a+1
  4582  021B  3000               	movlw	0
  4583  021C  00A0               	movwf	___fldiv@a
  4584  021D                     l891:
  4585  021D  0823               	movf	___fldiv@a+3,w
  4586  021E  0422               	iorwf	___fldiv@a+2,w
  4587  021F  0421               	iorwf	___fldiv@a+1,w
  4588  0220  0420               	iorwf	___fldiv@a,w
  4589  0221  1D03               	skipz
  4590  0222  2A24               	goto	u3731
  4591  0223  2A25               	goto	u3730
  4592  0224                     u3731:
  4593  0224  2A3E               	goto	l3240
  4594  0225                     u3730:
  4595  0225                     l3232:
  4596  0225  3000               	movlw	0
  4597  0226  00A7               	movwf	___fldiv@b+3
  4598  0227  3000               	movlw	0
  4599  0228  00A6               	movwf	___fldiv@b+2
  4600  0229  3000               	movlw	0
  4601  022A  00A5               	movwf	___fldiv@b+1
  4602  022B  3000               	movlw	0
  4603  022C  00A4               	movwf	___fldiv@b
  4604  022D  3080               	movlw	128
  4605  022E  04A6               	iorwf	___fldiv@b+2,f
  4606  022F  307F               	movlw	127
  4607  0230  04A7               	iorwf	___fldiv@b+3,f
  4608  0231                     l3234:
  4609  0231  0831               	movf	___fldiv@sign,w
  4610  0232  00A8               	movwf	??___fldiv
  4611  0233  0828               	movf	??___fldiv,w
  4612  0234  04A7               	iorwf	___fldiv@b+3,f
  4613  0235                     l3236:
  4614  0235  0827               	movf	___fldiv@b+3,w
  4615  0236  00A3               	movwf	?___fldiv+3
  4616  0237  0826               	movf	___fldiv@b+2,w
  4617  0238  00A2               	movwf	?___fldiv+2
  4618  0239  0825               	movf	___fldiv@b+1,w
  4619  023A  00A1               	movwf	?___fldiv+1
  4620  023B  0824               	movf	___fldiv@b,w
  4621  023C  00A0               	movwf	?___fldiv
  4622  023D  2B79               	goto	l893
  4623  023E                     l3240:
  4624  023E  0838               	movf	___fldiv@bexp,w
  4625  023F  1D03               	btfss	3,2
  4626  0240  2A42               	goto	u3741
  4627  0241  2A43               	goto	u3740
  4628  0242                     u3741:
  4629  0242  2A4C               	goto	l3246
  4630  0243                     u3740:
  4631  0243                     l3242:
  4632  0243  3000               	movlw	0
  4633  0244  00A3               	movwf	?___fldiv+3
  4634  0245  3000               	movlw	0
  4635  0246  00A2               	movwf	?___fldiv+2
  4636  0247  3000               	movlw	0
  4637  0248  00A1               	movwf	?___fldiv+1
  4638  0249  3000               	movlw	0
  4639  024A  00A0               	movwf	?___fldiv
  4640  024B  2B79               	goto	l893
  4641  024C                     l3246:
  4642  024C  0838               	movf	___fldiv@bexp,w
  4643  024D  00A8               	movwf	??___fldiv
  4644  024E  01A9               	clrf	??___fldiv+1
  4645  024F  0829               	movf	??___fldiv+1,w
  4646  0250  00AB               	movwf	??___fldiv+3
  4647  0251  0839               	movf	___fldiv@aexp,w
  4648  0252  0228               	subwf	??___fldiv,w
  4649  0253  00AA               	movwf	??___fldiv+2
  4650  0254  1C03               	skipc
  4651  0255  03AB               	decf	??___fldiv+3,f
  4652  0256  082A               	movf	??___fldiv+2,w
  4653  0257  3E7F               	addlw	127
  4654  0258  00B2               	movwf	___fldiv@new_exp
  4655  0259  3000               	movlw	0
  4656  025A  3D2B               	addwfc	??___fldiv+3,w
  4657  025B  00B3               	movwf	___fldiv@new_exp+1
  4658  025C                     l3248:
  4659  025C  0827               	movf	___fldiv@b+3,w
  4660  025D  00B0               	movwf	___fldiv@rem+3
  4661  025E  0826               	movf	___fldiv@b+2,w
  4662  025F  00AF               	movwf	___fldiv@rem+2
  4663  0260  0825               	movf	___fldiv@b+1,w
  4664  0261  00AE               	movwf	___fldiv@rem+1
  4665  0262  0824               	movf	___fldiv@b,w
  4666  0263  00AD               	movwf	___fldiv@rem
  4667  0264                     l3250:
  4668  0264  3000               	movlw	0
  4669  0265  00A7               	movwf	___fldiv@b+3
  4670  0266  3000               	movlw	0
  4671  0267  00A6               	movwf	___fldiv@b+2
  4672  0268  3000               	movlw	0
  4673  0269  00A5               	movwf	___fldiv@b+1
  4674  026A  3000               	movlw	0
  4675  026B  00A4               	movwf	___fldiv@b
  4676  026C                     l3252:
  4677  026C  3000               	movlw	0
  4678  026D  00B7               	movwf	___fldiv@grs+3
  4679  026E  3000               	movlw	0
  4680  026F  00B6               	movwf	___fldiv@grs+2
  4681  0270  3000               	movlw	0
  4682  0271  00B5               	movwf	___fldiv@grs+1
  4683  0272  3000               	movlw	0
  4684  0273  00B4               	movwf	___fldiv@grs
  4685  0274                     l3254:
  4686  0274  01B9               	clrf	___fldiv@aexp
  4687  0275  2AB4               	goto	l3274
  4688  0276                     l3256:
  4689  0276  0839               	movf	___fldiv@aexp,w
  4690  0277  1903               	btfsc	3,2
  4691  0278  2A7A               	goto	u3751
  4692  0279  2A7B               	goto	u3750
  4693  027A                     u3751:
  4694  027A  2A95               	goto	l3266
  4695  027B                     u3750:
  4696  027B                     l3258:
  4697  027B  3001               	movlw	1
  4698  027C                     u3765:
  4699  027C  35AD               	lslf	___fldiv@rem,f
  4700  027D  0DAE               	rlf	___fldiv@rem+1,f
  4701  027E  0DAF               	rlf	___fldiv@rem+2,f
  4702  027F  0DB0               	rlf	___fldiv@rem+3,f
  4703  0280  0B89               	decfsz	9,f
  4704  0281  2A7C               	goto	u3765
  4705  0282  3001               	movlw	1
  4706  0283                     u3775:
  4707  0283  35A4               	lslf	___fldiv@b,f
  4708  0284  0DA5               	rlf	___fldiv@b+1,f
  4709  0285  0DA6               	rlf	___fldiv@b+2,f
  4710  0286  0DA7               	rlf	___fldiv@b+3,f
  4711  0287  0B89               	decfsz	9,f
  4712  0288  2A83               	goto	u3775
  4713  0289                     l3260:
  4714  0289  1FB7               	btfss	___fldiv@grs+3,7
  4715  028A  2A8C               	goto	u3781
  4716  028B  2A8D               	goto	u3780
  4717  028C                     u3781:
  4718  028C  2A8E               	goto	l3264
  4719  028D                     u3780:
  4720  028D                     l3262:
  4721  028D  1424               	bsf	___fldiv@b,0
  4722  028E                     l3264:
  4723  028E  3001               	movlw	1
  4724  028F                     u3795:
  4725  028F  35B4               	lslf	___fldiv@grs,f
  4726  0290  0DB5               	rlf	___fldiv@grs+1,f
  4727  0291  0DB6               	rlf	___fldiv@grs+2,f
  4728  0292  0DB7               	rlf	___fldiv@grs+3,f
  4729  0293  0B89               	decfsz	9,f
  4730  0294  2A8F               	goto	u3795
  4731  0295                     l3266:
  4732  0295  0823               	movf	___fldiv@a+3,w
  4733  0296  0230               	subwf	___fldiv@rem+3,w
  4734  0297  1D03               	skipz
  4735  0298  2AA3               	goto	u3805
  4736  0299  0822               	movf	___fldiv@a+2,w
  4737  029A  022F               	subwf	___fldiv@rem+2,w
  4738  029B  1D03               	skipz
  4739  029C  2AA3               	goto	u3805
  4740  029D  0821               	movf	___fldiv@a+1,w
  4741  029E  022E               	subwf	___fldiv@rem+1,w
  4742  029F  1D03               	skipz
  4743  02A0  2AA3               	goto	u3805
  4744  02A1  0820               	movf	___fldiv@a,w
  4745  02A2  022D               	subwf	___fldiv@rem,w
  4746  02A3                     u3805:
  4747  02A3  1C03               	skipc
  4748  02A4  2AA6               	goto	u3801
  4749  02A5  2AA7               	goto	u3800
  4750  02A6                     u3801:
  4751  02A6  2AB0               	goto	l3272
  4752  02A7                     u3800:
  4753  02A7                     l3268:
  4754  02A7  1737               	bsf	___fldiv@grs+3,6
  4755  02A8                     l3270:
  4756  02A8  0820               	movf	___fldiv@a,w
  4757  02A9  02AD               	subwf	___fldiv@rem,f
  4758  02AA  0821               	movf	___fldiv@a+1,w
  4759  02AB  3BAE               	subwfb	___fldiv@rem+1,f
  4760  02AC  0822               	movf	___fldiv@a+2,w
  4761  02AD  3BAF               	subwfb	___fldiv@rem+2,f
  4762  02AE  0823               	movf	___fldiv@a+3,w
  4763  02AF  3BB0               	subwfb	___fldiv@rem+3,f
  4764  02B0                     l3272:
  4765  02B0  3001               	movlw	1
  4766  02B1  00A8               	movwf	??___fldiv
  4767  02B2  0828               	movf	??___fldiv,w
  4768  02B3  07B9               	addwf	___fldiv@aexp,f
  4769  02B4                     l3274:
  4770  02B4  301A               	movlw	26
  4771  02B5  0239               	subwf	___fldiv@aexp,w
  4772  02B6  1C03               	skipc
  4773  02B7  2AB9               	goto	u3811
  4774  02B8  2ABA               	goto	u3810
  4775  02B9                     u3811:
  4776  02B9  2A76               	goto	l3256
  4777  02BA                     u3810:
  4778  02BA                     l3276:
  4779  02BA  0830               	movf	___fldiv@rem+3,w
  4780  02BB  042F               	iorwf	___fldiv@rem+2,w
  4781  02BC  042E               	iorwf	___fldiv@rem+1,w
  4782  02BD  042D               	iorwf	___fldiv@rem,w
  4783  02BE  1903               	skipnz
  4784  02BF  2AC1               	goto	u3821
  4785  02C0  2AC2               	goto	u3820
  4786  02C1                     u3821:
  4787  02C1  2ADB               	goto	l3290
  4788  02C2                     u3820:
  4789  02C2                     l3278:
  4790  02C2  1434               	bsf	___fldiv@grs,0
  4791  02C3  2ADB               	goto	l3290
  4792  02C4                     l3280:
  4793  02C4  3001               	movlw	1
  4794  02C5                     u3835:
  4795  02C5  35A4               	lslf	___fldiv@b,f
  4796  02C6  0DA5               	rlf	___fldiv@b+1,f
  4797  02C7  0DA6               	rlf	___fldiv@b+2,f
  4798  02C8  0DA7               	rlf	___fldiv@b+3,f
  4799  02C9  0B89               	decfsz	9,f
  4800  02CA  2AC5               	goto	u3835
  4801  02CB                     l3282:
  4802  02CB  1FB7               	btfss	___fldiv@grs+3,7
  4803  02CC  2ACE               	goto	u3841
  4804  02CD  2ACF               	goto	u3840
  4805  02CE                     u3841:
  4806  02CE  2AD0               	goto	l3286
  4807  02CF                     u3840:
  4808  02CF                     l3284:
  4809  02CF  1424               	bsf	___fldiv@b,0
  4810  02D0                     l3286:
  4811  02D0  3001               	movlw	1
  4812  02D1                     u3855:
  4813  02D1  35B4               	lslf	___fldiv@grs,f
  4814  02D2  0DB5               	rlf	___fldiv@grs+1,f
  4815  02D3  0DB6               	rlf	___fldiv@grs+2,f
  4816  02D4  0DB7               	rlf	___fldiv@grs+3,f
  4817  02D5  0B89               	decfsz	9,f
  4818  02D6  2AD1               	goto	u3855
  4819  02D7                     l3288:
  4820  02D7  30FF               	movlw	255
  4821  02D8  07B2               	addwf	___fldiv@new_exp,f
  4822  02D9  30FF               	movlw	255
  4823  02DA  3DB3               	addwfc	___fldiv@new_exp+1,f
  4824  02DB                     l3290:
  4825  02DB  1FA6               	btfss	___fldiv@b+2,7
  4826  02DC  2ADE               	goto	u3861
  4827  02DD  2ADF               	goto	u3860
  4828  02DE                     u3861:
  4829  02DE  2AC4               	goto	l3280
  4830  02DF                     u3860:
  4831  02DF                     l3292:
  4832  02DF  01B9               	clrf	___fldiv@aexp
  4833  02E0                     l3294:
  4834  02E0  1FB7               	btfss	___fldiv@grs+3,7
  4835  02E1  2AE3               	goto	u3871
  4836  02E2  2AE4               	goto	u3870
  4837  02E3                     u3871:
  4838  02E3  2B00               	goto	l3302
  4839  02E4                     u3870:
  4840  02E4                     l3296:
  4841  02E4  30FF               	movlw	255
  4842  02E5  0534               	andwf	___fldiv@grs,w
  4843  02E6  00A8               	movwf	??___fldiv
  4844  02E7  30FF               	movlw	255
  4845  02E8  0535               	andwf	___fldiv@grs+1,w
  4846  02E9  00A9               	movwf	??___fldiv+1
  4847  02EA  30FF               	movlw	255
  4848  02EB  0536               	andwf	___fldiv@grs+2,w
  4849  02EC  00AA               	movwf	??___fldiv+2
  4850  02ED  307F               	movlw	127
  4851  02EE  0537               	andwf	___fldiv@grs+3,w
  4852  02EF  00AB               	movwf	??___fldiv+3
  4853  02F0  082B               	movf	??___fldiv+3,w
  4854  02F1  042A               	iorwf	??___fldiv+2,w
  4855  02F2  0429               	iorwf	??___fldiv+1,w
  4856  02F3  0428               	iorwf	??___fldiv,w
  4857  02F4  1903               	skipnz
  4858  02F5  2AF7               	goto	u3881
  4859  02F6  2AF8               	goto	u3880
  4860  02F7                     u3881:
  4861  02F7  2AFB               	goto	l907
  4862  02F8                     u3880:
  4863  02F8                     l3298:
  4864  02F8  01B9               	clrf	___fldiv@aexp
  4865  02F9  0AB9               	incf	___fldiv@aexp,f
  4866  02FA  2B00               	goto	l3302
  4867  02FB                     l907:
  4868  02FB  1C24               	btfss	___fldiv@b,0
  4869  02FC  2AFE               	goto	u3891
  4870  02FD  2AFF               	goto	u3890
  4871  02FE                     u3891:
  4872  02FE  2B00               	goto	l3302
  4873  02FF                     u3890:
  4874  02FF  2AF8               	goto	l3298
  4875  0300                     l3302:
  4876  0300  0839               	movf	___fldiv@aexp,w
  4877  0301  1903               	btfsc	3,2
  4878  0302  2B04               	goto	u3901
  4879  0303  2B05               	goto	u3900
  4880  0304                     u3901:
  4881  0304  2B2D               	goto	l3312
  4882  0305                     u3900:
  4883  0305                     l3304:
  4884  0305  3001               	movlw	1
  4885  0306  07A4               	addwf	___fldiv@b,f
  4886  0307  3000               	movlw	0
  4887  0308  3DA5               	addwfc	___fldiv@b+1,f
  4888  0309  3000               	movlw	0
  4889  030A  3DA6               	addwfc	___fldiv@b+2,f
  4890  030B  3000               	movlw	0
  4891  030C  3DA7               	addwfc	___fldiv@b+3,f
  4892  030D                     l3306:
  4893  030D  1C27               	btfss	___fldiv@b+3,0
  4894  030E  2B10               	goto	u3911
  4895  030F  2B11               	goto	u3910
  4896  0310                     u3911:
  4897  0310  2B2D               	goto	l3312
  4898  0311                     u3910:
  4899  0311                     l3308:
  4900  0311  0824               	movf	___fldiv@b,w
  4901  0312  00A8               	movwf	??___fldiv
  4902  0313  0825               	movf	___fldiv@b+1,w
  4903  0314  00A9               	movwf	??___fldiv+1
  4904  0315  0826               	movf	___fldiv@b+2,w
  4905  0316  00AA               	movwf	??___fldiv+2
  4906  0317  0827               	movf	___fldiv@b+3,w
  4907  0318  00AB               	movwf	??___fldiv+3
  4908  0319  3001               	movlw	1
  4909  031A  00AC               	movwf	??___fldiv+4
  4910  031B                     u3925:
  4911  031B  37AB               	asrf	??___fldiv+3,f
  4912  031C  0CAA               	rrf	??___fldiv+2,f
  4913  031D  0CA9               	rrf	??___fldiv+1,f
  4914  031E  0CA8               	rrf	??___fldiv,f
  4915  031F                     u3920:
  4916  031F  0BAC               	decfsz	??___fldiv+4,f
  4917  0320  2B1B               	goto	u3925
  4918  0321  082B               	movf	??___fldiv+3,w
  4919  0322  00A7               	movwf	___fldiv@b+3
  4920  0323  082A               	movf	??___fldiv+2,w
  4921  0324  00A6               	movwf	___fldiv@b+2
  4922  0325  0829               	movf	??___fldiv+1,w
  4923  0326  00A5               	movwf	___fldiv@b+1
  4924  0327  0828               	movf	??___fldiv,w
  4925  0328  00A4               	movwf	___fldiv@b
  4926  0329                     l3310:
  4927  0329  3001               	movlw	1
  4928  032A  07B2               	addwf	___fldiv@new_exp,f
  4929  032B  3000               	movlw	0
  4930  032C  3DB3               	addwfc	___fldiv@new_exp+1,f
  4931  032D                     l3312:
  4932  032D  0833               	movf	___fldiv@new_exp+1,w
  4933  032E  3A80               	xorlw	128
  4934  032F  00A8               	movwf	??___fldiv
  4935  0330  3080               	movlw	128
  4936  0331  0228               	subwf	??___fldiv,w
  4937  0332  1D03               	skipz
  4938  0333  2B36               	goto	u3935
  4939  0334  30FF               	movlw	255
  4940  0335  0232               	subwf	___fldiv@new_exp,w
  4941  0336                     u3935:
  4942  0336  1C03               	skipc
  4943  0337  2B39               	goto	u3931
  4944  0338  2B3A               	goto	u3930
  4945  0339                     u3931:
  4946  0339  2B47               	goto	l912
  4947  033A                     u3930:
  4948  033A                     l3314:
  4949  033A  30FF               	movlw	255
  4950  033B  0020               	movlb	0	; select bank0
  4951  033C  00B2               	movwf	___fldiv@new_exp
  4952  033D  3000               	movlw	0
  4953  033E  00B3               	movwf	___fldiv@new_exp+1
  4954  033F  3000               	movlw	0
  4955  0340  00A7               	movwf	___fldiv@b+3
  4956  0341  3000               	movlw	0
  4957  0342  00A6               	movwf	___fldiv@b+2
  4958  0343  3000               	movlw	0
  4959  0344  00A5               	movwf	___fldiv@b+1
  4960  0345  3000               	movlw	0
  4961  0346  00A4               	movwf	___fldiv@b
  4962  0347                     l912:
  4963  0347  0020               	movlb	0	; select bank0
  4964  0348  0833               	movf	___fldiv@new_exp+1,w
  4965  0349  3A80               	xorlw	128
  4966  034A  00A8               	movwf	??___fldiv
  4967  034B  3080               	movlw	128
  4968  034C  0228               	subwf	??___fldiv,w
  4969  034D  1D03               	skipz
  4970  034E  2B51               	goto	u3945
  4971  034F  3001               	movlw	1
  4972  0350  0232               	subwf	___fldiv@new_exp,w
  4973  0351                     u3945:
  4974  0351  1803               	skipnc
  4975  0352  2B54               	goto	u3941
  4976  0353  2B55               	goto	u3940
  4977  0354                     u3941:
  4978  0354  2B61               	goto	l913
  4979  0355                     u3940:
  4980  0355                     l3316:
  4981  0355  0020               	movlb	0	; select bank0
  4982  0356  01B2               	clrf	___fldiv@new_exp
  4983  0357  01B3               	clrf	___fldiv@new_exp+1
  4984  0358                     l3318:
  4985  0358  3000               	movlw	0
  4986  0359  00A7               	movwf	___fldiv@b+3
  4987  035A  3000               	movlw	0
  4988  035B  00A6               	movwf	___fldiv@b+2
  4989  035C  3000               	movlw	0
  4990  035D  00A5               	movwf	___fldiv@b+1
  4991  035E  3000               	movlw	0
  4992  035F  00A4               	movwf	___fldiv@b
  4993  0360                     l3320:
  4994  0360  01B1               	clrf	___fldiv@sign
  4995  0361                     l913:
  4996  0361  0020               	movlb	0	; select bank0
  4997  0362  0832               	movf	___fldiv@new_exp,w
  4998  0363  00A8               	movwf	??___fldiv
  4999  0364  0828               	movf	??___fldiv,w
  5000  0365  00B8               	movwf	___fldiv@bexp
  5001  0366                     l3322:
  5002  0366  1C38               	btfss	___fldiv@bexp,0
  5003  0367  2B69               	goto	u3951
  5004  0368  2B6A               	goto	u3950
  5005  0369                     u3951:
  5006  0369  2B6C               	goto	l3326
  5007  036A                     u3950:
  5008  036A                     l3324:
  5009  036A  17A6               	bsf	___fldiv@b+2,7
  5010  036B  2B70               	goto	l915
  5011  036C                     l3326:
  5012  036C  307F               	movlw	127
  5013  036D  00A8               	movwf	??___fldiv
  5014  036E  0828               	movf	??___fldiv,w
  5015  036F  05A6               	andwf	___fldiv@b+2,f
  5016  0370                     l915:
  5017  0370  3638               	lsrf	___fldiv@bexp,w
  5018  0371  00A8               	movwf	??___fldiv
  5019  0372  0828               	movf	??___fldiv,w
  5020  0373  00A7               	movwf	___fldiv@b+3
  5021  0374  0831               	movf	___fldiv@sign,w
  5022  0375  00A8               	movwf	??___fldiv
  5023  0376  0828               	movf	??___fldiv,w
  5024  0377  04A7               	iorwf	___fldiv@b+3,f
  5025  0378  2A35               	goto	l3236
  5026  0379                     l893:
  5027  0379  0008               	return
  5028  037A                     __end_of___fldiv:
  5029                           
  5030                           	psect	text7
  5031  0576                     __ptext7:	
  5032 ;; *************** function ___flmul *****************
  5033 ;; Defined at:
  5034 ;;		line 8 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\sprcmul.c"
  5035 ;; Parameters:    Size  Location     Type
  5036 ;;  b               4   26[BANK0 ] unsigned char 
  5037 ;;  a               4   30[BANK0 ] unsigned char 
  5038 ;; Auto vars:     Size  Location     Type
  5039 ;;  prod            4   46[BANK0 ] struct .
  5040 ;;  grs             4   40[BANK0 ] unsigned long 
  5041 ;;  temp            2   50[BANK0 ] struct .
  5042 ;;  bexp            1   45[BANK0 ] unsigned char 
  5043 ;;  aexp            1   44[BANK0 ] unsigned char 
  5044 ;;  sign            1   39[BANK0 ] unsigned char 
  5045 ;; Return value:  Size  Location     Type
  5046 ;;                  4   26[BANK0 ] unsigned char 
  5047 ;; Registers used:
  5048 ;;		wreg, status,2, status,0, pclath, cstack
  5049 ;; Tracked objects:
  5050 ;;		On entry : 0/0
  5051 ;;		On exit  : 0/0
  5052 ;;		Unchanged: 0/0
  5053 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  5054 ;;      Params:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5055 ;;      Locals:         0      13       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5056 ;;      Temps:          0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5057 ;;      Totals:         0      26       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5058 ;;Total ram usage:       26 bytes
  5059 ;; Hardware stack levels used: 1
  5060 ;; Hardware stack levels required when called: 1
  5061 ;; This function calls:
  5062 ;;		__Umul8_16
  5063 ;; This function is called by:
  5064 ;;		_calc_percentage
  5065 ;; This function uses a non-reentrant model
  5066 ;;
  5067                           
  5068                           
  5069                           ;psect for function ___flmul
  5070  0576                     ___flmul:
  5071  0576                     l3588:	
  5072                           ;incstack = 0
  5073                           ; Regs used in ___flmul: [wreg+status,2+status,0+pclath+cstack]
  5074                           
  5075  0576  0020               	movlb	0	; select bank0
  5076  0577  083D               	movf	___flmul@b+3,w
  5077  0578  3980               	andlw	128
  5078  0579  00C2               	movwf	??___flmul
  5079  057A  0842               	movf	??___flmul,w
  5080  057B  00C7               	movwf	___flmul@sign
  5081  057C                     l3590:
  5082  057C  353D               	lslf	___flmul@b+3,w
  5083  057D  00C2               	movwf	??___flmul
  5084  057E  0842               	movf	??___flmul,w
  5085  057F  00CD               	movwf	___flmul@bexp
  5086  0580                     l3592:
  5087  0580  1FBC               	btfss	___flmul@b+2,7
  5088  0581  2D83               	goto	u4311
  5089  0582  2D84               	goto	u4310
  5090  0583                     u4311:
  5091  0583  2D85               	goto	l3596
  5092  0584                     u4310:
  5093  0584                     l3594:
  5094  0584  144D               	bsf	___flmul@bexp,0
  5095  0585                     l3596:
  5096  0585  084D               	movf	___flmul@bexp,w
  5097  0586  1903               	btfsc	3,2
  5098  0587  2D89               	goto	u4321
  5099  0588  2D8A               	goto	u4320
  5100  0589                     u4321:
  5101  0589  2D99               	goto	l3604
  5102  058A                     u4320:
  5103  058A                     l3598:
  5104  058A  0A4D               	incf	___flmul@bexp,w
  5105  058B  1D03               	btfss	3,2
  5106  058C  2D8E               	goto	u4331
  5107  058D  2D8F               	goto	u4330
  5108  058E                     u4331:
  5109  058E  2D97               	goto	l3602
  5110  058F                     u4330:
  5111  058F                     l3600:
  5112  058F  3000               	movlw	0
  5113  0590  00BD               	movwf	___flmul@b+3
  5114  0591  3000               	movlw	0
  5115  0592  00BC               	movwf	___flmul@b+2
  5116  0593  3000               	movlw	0
  5117  0594  00BB               	movwf	___flmul@b+1
  5118  0595  3000               	movlw	0
  5119  0596  00BA               	movwf	___flmul@b
  5120  0597                     l3602:
  5121  0597  17BC               	bsf	___flmul@b+2,7
  5122  0598  2DA1               	goto	l3606
  5123  0599                     l3604:
  5124  0599  3000               	movlw	0
  5125  059A  00BD               	movwf	___flmul@b+3
  5126  059B  3000               	movlw	0
  5127  059C  00BC               	movwf	___flmul@b+2
  5128  059D  3000               	movlw	0
  5129  059E  00BB               	movwf	___flmul@b+1
  5130  059F  3000               	movlw	0
  5131  05A0  00BA               	movwf	___flmul@b
  5132  05A1                     l3606:
  5133  05A1  0841               	movf	___flmul@a+3,w
  5134  05A2  3980               	andlw	128
  5135  05A3  00C2               	movwf	??___flmul
  5136  05A4  0842               	movf	??___flmul,w
  5137  05A5  06C7               	xorwf	___flmul@sign,f
  5138  05A6                     l3608:
  5139  05A6  3541               	lslf	___flmul@a+3,w
  5140  05A7  00C2               	movwf	??___flmul
  5141  05A8  0842               	movf	??___flmul,w
  5142  05A9  00CC               	movwf	___flmul@aexp
  5143  05AA                     l3610:
  5144  05AA  1FC0               	btfss	___flmul@a+2,7
  5145  05AB  2DAD               	goto	u4341
  5146  05AC  2DAE               	goto	u4340
  5147  05AD                     u4341:
  5148  05AD  2DAF               	goto	l3614
  5149  05AE                     u4340:
  5150  05AE                     l3612:
  5151  05AE  144C               	bsf	___flmul@aexp,0
  5152  05AF                     l3614:
  5153  05AF  084C               	movf	___flmul@aexp,w
  5154  05B0  1903               	btfsc	3,2
  5155  05B1  2DB3               	goto	u4351
  5156  05B2  2DB4               	goto	u4350
  5157  05B3                     u4351:
  5158  05B3  2DC3               	goto	l3622
  5159  05B4                     u4350:
  5160  05B4                     l3616:
  5161  05B4  0A4C               	incf	___flmul@aexp,w
  5162  05B5  1D03               	btfss	3,2
  5163  05B6  2DB8               	goto	u4361
  5164  05B7  2DB9               	goto	u4360
  5165  05B8                     u4361:
  5166  05B8  2DC1               	goto	l3620
  5167  05B9                     u4360:
  5168  05B9                     l3618:
  5169  05B9  3000               	movlw	0
  5170  05BA  00C1               	movwf	___flmul@a+3
  5171  05BB  3000               	movlw	0
  5172  05BC  00C0               	movwf	___flmul@a+2
  5173  05BD  3000               	movlw	0
  5174  05BE  00BF               	movwf	___flmul@a+1
  5175  05BF  3000               	movlw	0
  5176  05C0  00BE               	movwf	___flmul@a
  5177  05C1                     l3620:
  5178  05C1  17C0               	bsf	___flmul@a+2,7
  5179  05C2  2DCB               	goto	l3624
  5180  05C3                     l3622:
  5181  05C3  3000               	movlw	0
  5182  05C4  00C1               	movwf	___flmul@a+3
  5183  05C5  3000               	movlw	0
  5184  05C6  00C0               	movwf	___flmul@a+2
  5185  05C7  3000               	movlw	0
  5186  05C8  00BF               	movwf	___flmul@a+1
  5187  05C9  3000               	movlw	0
  5188  05CA  00BE               	movwf	___flmul@a
  5189  05CB                     l3624:
  5190  05CB  084C               	movf	___flmul@aexp,w
  5191  05CC  1903               	btfsc	3,2
  5192  05CD  2DCF               	goto	u4371
  5193  05CE  2DD0               	goto	u4370
  5194  05CF                     u4371:
  5195  05CF  2DD5               	goto	l3628
  5196  05D0                     u4370:
  5197  05D0                     l3626:
  5198  05D0  084D               	movf	___flmul@bexp,w
  5199  05D1  1D03               	btfss	3,2
  5200  05D2  2DD4               	goto	u4381
  5201  05D3  2DD5               	goto	u4380
  5202  05D4                     u4381:
  5203  05D4  2DDE               	goto	l3632
  5204  05D5                     u4380:
  5205  05D5                     l3628:
  5206  05D5  3000               	movlw	0
  5207  05D6  00BD               	movwf	?___flmul+3
  5208  05D7  3000               	movlw	0
  5209  05D8  00BC               	movwf	?___flmul+2
  5210  05D9  3000               	movlw	0
  5211  05DA  00BB               	movwf	?___flmul+1
  5212  05DB  3000               	movlw	0
  5213  05DC  00BA               	movwf	?___flmul
  5214  05DD  2FCC               	goto	l931
  5215  05DE                     l3632:
  5216  05DE  083A               	movf	___flmul@b,w
  5217  05DF  00C2               	movwf	??___flmul
  5218  05E0  0842               	movf	??___flmul,w
  5219  05E1  00F0               	movwf	__Umul8_16@multiplicand
  5220  05E2  0840               	movf	___flmul@a+2,w
  5221  05E3  319F  27DD  3185   	fcall	__Umul8_16
  5222  05E6  0871               	movf	?__Umul8_16+1,w
  5223  05E7  0020               	movlb	0	; select bank0
  5224  05E8  00D3               	movwf	___flmul@temp+1
  5225  05E9  0870               	movf	?__Umul8_16,w
  5226  05EA  00D2               	movwf	___flmul@temp
  5227  05EB                     l3634:
  5228  05EB  0852               	movf	___flmul@temp,w
  5229  05EC  00C2               	movwf	??___flmul
  5230  05ED  01C3               	clrf	??___flmul+1
  5231  05EE  01C4               	clrf	??___flmul+2
  5232  05EF  01C5               	clrf	??___flmul+3
  5233  05F0  0845               	movf	??___flmul+3,w
  5234  05F1  00CB               	movwf	___flmul@grs+3
  5235  05F2  0844               	movf	??___flmul+2,w
  5236  05F3  00CA               	movwf	___flmul@grs+2
  5237  05F4  0843               	movf	??___flmul+1,w
  5238  05F5  00C9               	movwf	___flmul@grs+1
  5239  05F6  0842               	movf	??___flmul,w
  5240  05F7  00C8               	movwf	___flmul@grs
  5241  05F8                     l3636:
  5242  05F8  0853               	movf	___flmul@temp+1,w
  5243  05F9  00C2               	movwf	??___flmul
  5244  05FA  01C3               	clrf	??___flmul+1
  5245  05FB  01C4               	clrf	??___flmul+2
  5246  05FC  01C5               	clrf	??___flmul+3
  5247  05FD  0845               	movf	??___flmul+3,w
  5248  05FE  00D1               	movwf	___flmul@prod+3
  5249  05FF  0844               	movf	??___flmul+2,w
  5250  0600  00D0               	movwf	___flmul@prod+2
  5251  0601  0843               	movf	??___flmul+1,w
  5252  0602  00CF               	movwf	___flmul@prod+1
  5253  0603  0842               	movf	??___flmul,w
  5254  0604  00CE               	movwf	___flmul@prod
  5255  0605  083B               	movf	___flmul@b+1,w
  5256  0606  00C2               	movwf	??___flmul
  5257  0607  0842               	movf	??___flmul,w
  5258  0608  00F0               	movwf	__Umul8_16@multiplicand
  5259  0609  083F               	movf	___flmul@a+1,w
  5260  060A  319F  27DD  3185   	fcall	__Umul8_16
  5261  060D  0871               	movf	?__Umul8_16+1,w
  5262  060E  0020               	movlb	0	; select bank0
  5263  060F  00D3               	movwf	___flmul@temp+1
  5264  0610  0870               	movf	?__Umul8_16,w
  5265  0611  00D2               	movwf	___flmul@temp
  5266  0612                     l3638:
  5267  0612  0852               	movf	___flmul@temp,w
  5268  0613  00C2               	movwf	??___flmul
  5269  0614  01C3               	clrf	??___flmul+1
  5270  0615  01C4               	clrf	??___flmul+2
  5271  0616  01C5               	clrf	??___flmul+3
  5272  0617  0842               	movf	??___flmul,w
  5273  0618  07C8               	addwf	___flmul@grs,f
  5274  0619  0843               	movf	??___flmul+1,w
  5275  061A  3DC9               	addwfc	___flmul@grs+1,f
  5276  061B  0844               	movf	??___flmul+2,w
  5277  061C  3DCA               	addwfc	___flmul@grs+2,f
  5278  061D  0845               	movf	??___flmul+3,w
  5279  061E  3DCB               	addwfc	___flmul@grs+3,f
  5280  061F                     l3640:
  5281  061F  0853               	movf	___flmul@temp+1,w
  5282  0620  00C2               	movwf	??___flmul
  5283  0621  01C3               	clrf	??___flmul+1
  5284  0622  01C4               	clrf	??___flmul+2
  5285  0623  01C5               	clrf	??___flmul+3
  5286  0624  0842               	movf	??___flmul,w
  5287  0625  07CE               	addwf	___flmul@prod,f
  5288  0626  0843               	movf	??___flmul+1,w
  5289  0627  3DCF               	addwfc	___flmul@prod+1,f
  5290  0628  0844               	movf	??___flmul+2,w
  5291  0629  3DD0               	addwfc	___flmul@prod+2,f
  5292  062A  0845               	movf	??___flmul+3,w
  5293  062B  3DD1               	addwfc	___flmul@prod+3,f
  5294  062C  083C               	movf	___flmul@b+2,w
  5295  062D  00C2               	movwf	??___flmul
  5296  062E  0842               	movf	??___flmul,w
  5297  062F  00F0               	movwf	__Umul8_16@multiplicand
  5298  0630  083E               	movf	___flmul@a,w
  5299  0631  319F  27DD  3185   	fcall	__Umul8_16
  5300  0634  0871               	movf	?__Umul8_16+1,w
  5301  0635  0020               	movlb	0	; select bank0
  5302  0636  00D3               	movwf	___flmul@temp+1
  5303  0637  0870               	movf	?__Umul8_16,w
  5304  0638  00D2               	movwf	___flmul@temp
  5305  0639                     l3642:
  5306  0639  0852               	movf	___flmul@temp,w
  5307  063A  00C2               	movwf	??___flmul
  5308  063B  01C3               	clrf	??___flmul+1
  5309  063C  01C4               	clrf	??___flmul+2
  5310  063D  01C5               	clrf	??___flmul+3
  5311  063E  0842               	movf	??___flmul,w
  5312  063F  07C8               	addwf	___flmul@grs,f
  5313  0640  0843               	movf	??___flmul+1,w
  5314  0641  3DC9               	addwfc	___flmul@grs+1,f
  5315  0642  0844               	movf	??___flmul+2,w
  5316  0643  3DCA               	addwfc	___flmul@grs+2,f
  5317  0644  0845               	movf	??___flmul+3,w
  5318  0645  3DCB               	addwfc	___flmul@grs+3,f
  5319  0646                     l3644:
  5320  0646  0853               	movf	___flmul@temp+1,w
  5321  0647  00C2               	movwf	??___flmul
  5322  0648  01C3               	clrf	??___flmul+1
  5323  0649  01C4               	clrf	??___flmul+2
  5324  064A  01C5               	clrf	??___flmul+3
  5325  064B  0842               	movf	??___flmul,w
  5326  064C  07CE               	addwf	___flmul@prod,f
  5327  064D  0843               	movf	??___flmul+1,w
  5328  064E  3DCF               	addwfc	___flmul@prod+1,f
  5329  064F  0844               	movf	??___flmul+2,w
  5330  0650  3DD0               	addwfc	___flmul@prod+2,f
  5331  0651  0845               	movf	??___flmul+3,w
  5332  0652  3DD1               	addwfc	___flmul@prod+3,f
  5333  0653                     l3646:
  5334  0653  3008               	movlw	8
  5335  0654                     u4395:
  5336  0654  35C8               	lslf	___flmul@grs,f
  5337  0655  0DC9               	rlf	___flmul@grs+1,f
  5338  0656  0DCA               	rlf	___flmul@grs+2,f
  5339  0657  0DCB               	rlf	___flmul@grs+3,f
  5340  0658  0B89               	decfsz	9,f
  5341  0659  2E54               	goto	u4395
  5342  065A                     l3648:
  5343  065A  083B               	movf	___flmul@b+1,w
  5344  065B  00C2               	movwf	??___flmul
  5345  065C  0842               	movf	??___flmul,w
  5346  065D  00F0               	movwf	__Umul8_16@multiplicand
  5347  065E  083E               	movf	___flmul@a,w
  5348  065F  319F  27DD  3185   	fcall	__Umul8_16
  5349  0662  0871               	movf	?__Umul8_16+1,w
  5350  0663  0020               	movlb	0	; select bank0
  5351  0664  00D3               	movwf	___flmul@temp+1
  5352  0665  0870               	movf	?__Umul8_16,w
  5353  0666  00D2               	movwf	___flmul@temp
  5354  0667                     l3650:
  5355  0667  0852               	movf	___flmul@temp,w
  5356  0668  07C8               	addwf	___flmul@grs,f
  5357  0669  0853               	movf	___flmul@temp+1,w
  5358  066A  3DC9               	addwfc	___flmul@grs+1,f
  5359  066B  3000               	movlw	0
  5360  066C  3DCA               	addwfc	___flmul@grs+2,f
  5361  066D  3DCB               	addwfc	___flmul@grs+3,f
  5362  066E                     l3652:
  5363  066E  083A               	movf	___flmul@b,w
  5364  066F  00C2               	movwf	??___flmul
  5365  0670  0842               	movf	??___flmul,w
  5366  0671  00F0               	movwf	__Umul8_16@multiplicand
  5367  0672  083F               	movf	___flmul@a+1,w
  5368  0673  319F  27DD  3185   	fcall	__Umul8_16
  5369  0676  0871               	movf	?__Umul8_16+1,w
  5370  0677  0020               	movlb	0	; select bank0
  5371  0678  00D3               	movwf	___flmul@temp+1
  5372  0679  0870               	movf	?__Umul8_16,w
  5373  067A  00D2               	movwf	___flmul@temp
  5374  067B                     l3654:
  5375  067B  0852               	movf	___flmul@temp,w
  5376  067C  07C8               	addwf	___flmul@grs,f
  5377  067D  0853               	movf	___flmul@temp+1,w
  5378  067E  3DC9               	addwfc	___flmul@grs+1,f
  5379  067F  3000               	movlw	0
  5380  0680  3DCA               	addwfc	___flmul@grs+2,f
  5381  0681  3DCB               	addwfc	___flmul@grs+3,f
  5382  0682                     l3656:
  5383  0682  3008               	movlw	8
  5384  0683                     u4405:
  5385  0683  35C8               	lslf	___flmul@grs,f
  5386  0684  0DC9               	rlf	___flmul@grs+1,f
  5387  0685  0DCA               	rlf	___flmul@grs+2,f
  5388  0686  0DCB               	rlf	___flmul@grs+3,f
  5389  0687  0B89               	decfsz	9,f
  5390  0688  2E83               	goto	u4405
  5391  0689  083A               	movf	___flmul@b,w
  5392  068A  00C2               	movwf	??___flmul
  5393  068B  0842               	movf	??___flmul,w
  5394  068C  00F0               	movwf	__Umul8_16@multiplicand
  5395  068D  083E               	movf	___flmul@a,w
  5396  068E  319F  27DD  3185   	fcall	__Umul8_16
  5397  0691  0871               	movf	?__Umul8_16+1,w
  5398  0692  0020               	movlb	0	; select bank0
  5399  0693  00D3               	movwf	___flmul@temp+1
  5400  0694  0870               	movf	?__Umul8_16,w
  5401  0695  00D2               	movwf	___flmul@temp
  5402  0696                     l3658:
  5403  0696  0852               	movf	___flmul@temp,w
  5404  0697  07C8               	addwf	___flmul@grs,f
  5405  0698  0853               	movf	___flmul@temp+1,w
  5406  0699  3DC9               	addwfc	___flmul@grs+1,f
  5407  069A  3000               	movlw	0
  5408  069B  3DCA               	addwfc	___flmul@grs+2,f
  5409  069C  3DCB               	addwfc	___flmul@grs+3,f
  5410  069D                     l3660:
  5411  069D  083B               	movf	___flmul@b+1,w
  5412  069E  00C2               	movwf	??___flmul
  5413  069F  0842               	movf	??___flmul,w
  5414  06A0  00F0               	movwf	__Umul8_16@multiplicand
  5415  06A1  0840               	movf	___flmul@a+2,w
  5416  06A2  319F  27DD  3185   	fcall	__Umul8_16
  5417  06A5  0871               	movf	?__Umul8_16+1,w
  5418  06A6  0020               	movlb	0	; select bank0
  5419  06A7  00D3               	movwf	___flmul@temp+1
  5420  06A8  0870               	movf	?__Umul8_16,w
  5421  06A9  00D2               	movwf	___flmul@temp
  5422  06AA  0852               	movf	___flmul@temp,w
  5423  06AB  07CE               	addwf	___flmul@prod,f
  5424  06AC  0853               	movf	___flmul@temp+1,w
  5425  06AD  3DCF               	addwfc	___flmul@prod+1,f
  5426  06AE  3000               	movlw	0
  5427  06AF  3DD0               	addwfc	___flmul@prod+2,f
  5428  06B0  3DD1               	addwfc	___flmul@prod+3,f
  5429  06B1                     l3662:
  5430  06B1  083C               	movf	___flmul@b+2,w
  5431  06B2  00C2               	movwf	??___flmul
  5432  06B3  0842               	movf	??___flmul,w
  5433  06B4  00F0               	movwf	__Umul8_16@multiplicand
  5434  06B5  083F               	movf	___flmul@a+1,w
  5435  06B6  319F  27DD  3185   	fcall	__Umul8_16
  5436  06B9  0871               	movf	?__Umul8_16+1,w
  5437  06BA  0020               	movlb	0	; select bank0
  5438  06BB  00D3               	movwf	___flmul@temp+1
  5439  06BC  0870               	movf	?__Umul8_16,w
  5440  06BD  00D2               	movwf	___flmul@temp
  5441  06BE                     l3664:
  5442  06BE  0852               	movf	___flmul@temp,w
  5443  06BF  07CE               	addwf	___flmul@prod,f
  5444  06C0  0853               	movf	___flmul@temp+1,w
  5445  06C1  3DCF               	addwfc	___flmul@prod+1,f
  5446  06C2  3000               	movlw	0
  5447  06C3  3DD0               	addwfc	___flmul@prod+2,f
  5448  06C4  3DD1               	addwfc	___flmul@prod+3,f
  5449  06C5  083C               	movf	___flmul@b+2,w
  5450  06C6  00C2               	movwf	??___flmul
  5451  06C7  0842               	movf	??___flmul,w
  5452  06C8  00F0               	movwf	__Umul8_16@multiplicand
  5453  06C9  0840               	movf	___flmul@a+2,w
  5454  06CA  319F  27DD  3185   	fcall	__Umul8_16
  5455  06CD  0871               	movf	?__Umul8_16+1,w
  5456  06CE  0020               	movlb	0	; select bank0
  5457  06CF  00D3               	movwf	___flmul@temp+1
  5458  06D0  0870               	movf	?__Umul8_16,w
  5459  06D1  00D2               	movwf	___flmul@temp
  5460  06D2                     l3666:
  5461  06D2  0852               	movf	___flmul@temp,w
  5462  06D3  00C2               	movwf	??___flmul
  5463  06D4  0853               	movf	___flmul@temp+1,w
  5464  06D5  00C3               	movwf	??___flmul+1
  5465  06D6  01C4               	clrf	??___flmul+2
  5466  06D7  01C5               	clrf	??___flmul+3
  5467  06D8  3008               	movlw	8
  5468  06D9                     u4415:
  5469  06D9  35C2               	lslf	??___flmul,f
  5470  06DA  0DC3               	rlf	??___flmul+1,f
  5471  06DB  0DC4               	rlf	??___flmul+2,f
  5472  06DC  0DC5               	rlf	??___flmul+3,f
  5473  06DD                     u4410:
  5474  06DD  0B89               	decfsz	9,f
  5475  06DE  2ED9               	goto	u4415
  5476  06DF  0842               	movf	??___flmul,w
  5477  06E0  07CE               	addwf	___flmul@prod,f
  5478  06E1  0843               	movf	??___flmul+1,w
  5479  06E2  3DCF               	addwfc	___flmul@prod+1,f
  5480  06E3  0844               	movf	??___flmul+2,w
  5481  06E4  3DD0               	addwfc	___flmul@prod+2,f
  5482  06E5  0845               	movf	??___flmul+3,w
  5483  06E6  3DD1               	addwfc	___flmul@prod+3,f
  5484  06E7                     l3668:
  5485  06E7  0848               	movf	___flmul@grs,w
  5486  06E8  00C2               	movwf	??___flmul
  5487  06E9  0849               	movf	___flmul@grs+1,w
  5488  06EA  00C3               	movwf	??___flmul+1
  5489  06EB  084A               	movf	___flmul@grs+2,w
  5490  06EC  00C4               	movwf	??___flmul+2
  5491  06ED  084B               	movf	___flmul@grs+3,w
  5492  06EE  00C5               	movwf	??___flmul+3
  5493  06EF  3018               	movlw	24
  5494  06F0                     u4425:
  5495  06F0  36C5               	lsrf	??___flmul+3,f
  5496  06F1  0CC4               	rrf	??___flmul+2,f
  5497  06F2  0CC3               	rrf	??___flmul+1,f
  5498  06F3  0CC2               	rrf	??___flmul,f
  5499  06F4                     u4420:
  5500  06F4  0B89               	decfsz	9,f
  5501  06F5  2EF0               	goto	u4425
  5502  06F6  0842               	movf	??___flmul,w
  5503  06F7  07CE               	addwf	___flmul@prod,f
  5504  06F8  0843               	movf	??___flmul+1,w
  5505  06F9  3DCF               	addwfc	___flmul@prod+1,f
  5506  06FA  0844               	movf	??___flmul+2,w
  5507  06FB  3DD0               	addwfc	___flmul@prod+2,f
  5508  06FC  0845               	movf	??___flmul+3,w
  5509  06FD  3DD1               	addwfc	___flmul@prod+3,f
  5510  06FE                     l3670:
  5511  06FE  3008               	movlw	8
  5512  06FF                     u4435:
  5513  06FF  35C8               	lslf	___flmul@grs,f
  5514  0700  0DC9               	rlf	___flmul@grs+1,f
  5515  0701  0DCA               	rlf	___flmul@grs+2,f
  5516  0702  0DCB               	rlf	___flmul@grs+3,f
  5517  0703  0B89               	decfsz	9,f
  5518  0704  2EFF               	goto	u4435
  5519  0705                     l3672:
  5520  0705  084D               	movf	___flmul@bexp,w
  5521  0706  074C               	addwf	___flmul@aexp,w
  5522  0707  00C2               	movwf	??___flmul
  5523  0708  01C3               	clrf	??___flmul+1
  5524  0709  0DC3               	rlf	??___flmul+1,f
  5525  070A  0842               	movf	??___flmul,w
  5526  070B  3E82               	addlw	130
  5527  070C  00D2               	movwf	___flmul@temp
  5528  070D  30FF               	movlw	255
  5529  070E  3D43               	addwfc	??___flmul+1,w
  5530  070F  00D3               	movwf	___flmul@temp+1
  5531  0710  2F28               	goto	l3684
  5532  0711                     l3674:
  5533  0711  3001               	movlw	1
  5534  0712                     u4445:
  5535  0712  35CE               	lslf	___flmul@prod,f
  5536  0713  0DCF               	rlf	___flmul@prod+1,f
  5537  0714  0DD0               	rlf	___flmul@prod+2,f
  5538  0715  0DD1               	rlf	___flmul@prod+3,f
  5539  0716  0B89               	decfsz	9,f
  5540  0717  2F12               	goto	u4445
  5541  0718                     l3676:
  5542  0718  1FCB               	btfss	___flmul@grs+3,7
  5543  0719  2F1B               	goto	u4451
  5544  071A  2F1C               	goto	u4450
  5545  071B                     u4451:
  5546  071B  2F1D               	goto	l3680
  5547  071C                     u4450:
  5548  071C                     l3678:
  5549  071C  144E               	bsf	___flmul@prod,0
  5550  071D                     l3680:
  5551  071D  3001               	movlw	1
  5552  071E                     u4465:
  5553  071E  35C8               	lslf	___flmul@grs,f
  5554  071F  0DC9               	rlf	___flmul@grs+1,f
  5555  0720  0DCA               	rlf	___flmul@grs+2,f
  5556  0721  0DCB               	rlf	___flmul@grs+3,f
  5557  0722  0B89               	decfsz	9,f
  5558  0723  2F1E               	goto	u4465
  5559  0724                     l3682:
  5560  0724  30FF               	movlw	255
  5561  0725  07D2               	addwf	___flmul@temp,f
  5562  0726  30FF               	movlw	255
  5563  0727  3DD3               	addwfc	___flmul@temp+1,f
  5564  0728                     l3684:
  5565  0728  1FD0               	btfss	___flmul@prod+2,7
  5566  0729  2F2B               	goto	u4471
  5567  072A  2F2C               	goto	u4470
  5568  072B                     u4471:
  5569  072B  2F11               	goto	l3674
  5570  072C                     u4470:
  5571  072C                     l3686:
  5572  072C  01CC               	clrf	___flmul@aexp
  5573  072D                     l3688:
  5574  072D  1FCB               	btfss	___flmul@grs+3,7
  5575  072E  2F30               	goto	u4481
  5576  072F  2F31               	goto	u4480
  5577  0730                     u4481:
  5578  0730  2F4D               	goto	l3696
  5579  0731                     u4480:
  5580  0731                     l3690:
  5581  0731  30FF               	movlw	255
  5582  0732  0548               	andwf	___flmul@grs,w
  5583  0733  00C2               	movwf	??___flmul
  5584  0734  30FF               	movlw	255
  5585  0735  0549               	andwf	___flmul@grs+1,w
  5586  0736  00C3               	movwf	??___flmul+1
  5587  0737  30FF               	movlw	255
  5588  0738  054A               	andwf	___flmul@grs+2,w
  5589  0739  00C4               	movwf	??___flmul+2
  5590  073A  307F               	movlw	127
  5591  073B  054B               	andwf	___flmul@grs+3,w
  5592  073C  00C5               	movwf	??___flmul+3
  5593  073D  0845               	movf	??___flmul+3,w
  5594  073E  0444               	iorwf	??___flmul+2,w
  5595  073F  0443               	iorwf	??___flmul+1,w
  5596  0740  0442               	iorwf	??___flmul,w
  5597  0741  1903               	skipnz
  5598  0742  2F44               	goto	u4491
  5599  0743  2F45               	goto	u4490
  5600  0744                     u4491:
  5601  0744  2F48               	goto	l937
  5602  0745                     u4490:
  5603  0745                     l3692:
  5604  0745  01CC               	clrf	___flmul@aexp
  5605  0746  0ACC               	incf	___flmul@aexp,f
  5606  0747  2F4D               	goto	l3696
  5607  0748                     l937:
  5608  0748  1C4E               	btfss	___flmul@prod,0
  5609  0749  2F4B               	goto	u4501
  5610  074A  2F4C               	goto	u4500
  5611  074B                     u4501:
  5612  074B  2F4D               	goto	l3696
  5613  074C                     u4500:
  5614  074C  2F45               	goto	l3692
  5615  074D                     l3696:
  5616  074D  084C               	movf	___flmul@aexp,w
  5617  074E  1903               	btfsc	3,2
  5618  074F  2F51               	goto	u4511
  5619  0750  2F52               	goto	u4510
  5620  0751                     u4511:
  5621  0751  2F7A               	goto	l3706
  5622  0752                     u4510:
  5623  0752                     l3698:
  5624  0752  3001               	movlw	1
  5625  0753  07CE               	addwf	___flmul@prod,f
  5626  0754  3000               	movlw	0
  5627  0755  3DCF               	addwfc	___flmul@prod+1,f
  5628  0756  3000               	movlw	0
  5629  0757  3DD0               	addwfc	___flmul@prod+2,f
  5630  0758  3000               	movlw	0
  5631  0759  3DD1               	addwfc	___flmul@prod+3,f
  5632  075A                     l3700:
  5633  075A  1C51               	btfss	___flmul@prod+3,0
  5634  075B  2F5D               	goto	u4521
  5635  075C  2F5E               	goto	u4520
  5636  075D                     u4521:
  5637  075D  2F7A               	goto	l3706
  5638  075E                     u4520:
  5639  075E                     l3702:
  5640  075E  084E               	movf	___flmul@prod,w
  5641  075F  00C2               	movwf	??___flmul
  5642  0760  084F               	movf	___flmul@prod+1,w
  5643  0761  00C3               	movwf	??___flmul+1
  5644  0762  0850               	movf	___flmul@prod+2,w
  5645  0763  00C4               	movwf	??___flmul+2
  5646  0764  0851               	movf	___flmul@prod+3,w
  5647  0765  00C5               	movwf	??___flmul+3
  5648  0766  3001               	movlw	1
  5649  0767  00C6               	movwf	??___flmul+4
  5650  0768                     u4535:
  5651  0768  37C5               	asrf	??___flmul+3,f
  5652  0769  0CC4               	rrf	??___flmul+2,f
  5653  076A  0CC3               	rrf	??___flmul+1,f
  5654  076B  0CC2               	rrf	??___flmul,f
  5655  076C                     u4530:
  5656  076C  0BC6               	decfsz	??___flmul+4,f
  5657  076D  2F68               	goto	u4535
  5658  076E  0845               	movf	??___flmul+3,w
  5659  076F  00D1               	movwf	___flmul@prod+3
  5660  0770  0844               	movf	??___flmul+2,w
  5661  0771  00D0               	movwf	___flmul@prod+2
  5662  0772  0843               	movf	??___flmul+1,w
  5663  0773  00CF               	movwf	___flmul@prod+1
  5664  0774  0842               	movf	??___flmul,w
  5665  0775  00CE               	movwf	___flmul@prod
  5666  0776                     l3704:
  5667  0776  3001               	movlw	1
  5668  0777  07D2               	addwf	___flmul@temp,f
  5669  0778  3000               	movlw	0
  5670  0779  3DD3               	addwfc	___flmul@temp+1,f
  5671  077A                     l3706:
  5672  077A  0853               	movf	___flmul@temp+1,w
  5673  077B  3A80               	xorlw	128
  5674  077C  00C2               	movwf	??___flmul
  5675  077D  3080               	movlw	128
  5676  077E  0242               	subwf	??___flmul,w
  5677  077F  1D03               	skipz
  5678  0780  2F83               	goto	u4545
  5679  0781  30FF               	movlw	255
  5680  0782  0252               	subwf	___flmul@temp,w
  5681  0783                     u4545:
  5682  0783  1C03               	skipc
  5683  0784  2F86               	goto	u4541
  5684  0785  2F87               	goto	u4540
  5685  0786                     u4541:
  5686  0786  2F91               	goto	l3710
  5687  0787                     u4540:
  5688  0787                     l3708:
  5689  0787  307F               	movlw	127
  5690  0788  0020               	movlb	0	; select bank0
  5691  0789  00D1               	movwf	___flmul@prod+3
  5692  078A  3080               	movlw	128
  5693  078B  00D0               	movwf	___flmul@prod+2
  5694  078C  3000               	movlw	0
  5695  078D  00CF               	movwf	___flmul@prod+1
  5696  078E  3000               	movlw	0
  5697  078F  00CE               	movwf	___flmul@prod
  5698  0790  2FC0               	goto	l943
  5699  0791                     l3710:
  5700  0791  0020               	movlb	0	; select bank0
  5701  0792  0853               	movf	___flmul@temp+1,w
  5702  0793  3A80               	xorlw	128
  5703  0794  00C2               	movwf	??___flmul
  5704  0795  3080               	movlw	128
  5705  0796  0242               	subwf	??___flmul,w
  5706  0797  1D03               	skipz
  5707  0798  2F9B               	goto	u4555
  5708  0799  3001               	movlw	1
  5709  079A  0252               	subwf	___flmul@temp,w
  5710  079B                     u4555:
  5711  079B  1803               	skipnc
  5712  079C  2F9E               	goto	u4551
  5713  079D  2F9F               	goto	u4550
  5714  079E                     u4551:
  5715  079E  2FAA               	goto	l3716
  5716  079F                     u4550:
  5717  079F                     l3712:
  5718  079F  3000               	movlw	0
  5719  07A0  0020               	movlb	0	; select bank0
  5720  07A1  00D1               	movwf	___flmul@prod+3
  5721  07A2  3000               	movlw	0
  5722  07A3  00D0               	movwf	___flmul@prod+2
  5723  07A4  3000               	movlw	0
  5724  07A5  00CF               	movwf	___flmul@prod+1
  5725  07A6  3000               	movlw	0
  5726  07A7  00CE               	movwf	___flmul@prod
  5727  07A8                     l3714:
  5728  07A8  01C7               	clrf	___flmul@sign
  5729  07A9  2FC0               	goto	l943
  5730  07AA                     l3716:
  5731  07AA  0020               	movlb	0	; select bank0
  5732  07AB  0852               	movf	___flmul@temp,w
  5733  07AC  00C2               	movwf	??___flmul
  5734  07AD  0842               	movf	??___flmul,w
  5735  07AE  00CD               	movwf	___flmul@bexp
  5736  07AF  30FF               	movlw	255
  5737  07B0  05CE               	andwf	___flmul@prod,f
  5738  07B1  30FF               	movlw	255
  5739  07B2  05CF               	andwf	___flmul@prod+1,f
  5740  07B3  307F               	movlw	127
  5741  07B4  05D0               	andwf	___flmul@prod+2,f
  5742  07B5  3000               	movlw	0
  5743  07B6  05D1               	andwf	___flmul@prod+3,f
  5744  07B7                     l3718:
  5745  07B7  1C4D               	btfss	___flmul@bexp,0
  5746  07B8  2FBA               	goto	u4561
  5747  07B9  2FBB               	goto	u4560
  5748  07BA                     u4561:
  5749  07BA  2FBC               	goto	l3722
  5750  07BB                     u4560:
  5751  07BB                     l3720:
  5752  07BB  17D0               	bsf	___flmul@prod+2,7
  5753  07BC                     l3722:
  5754  07BC  364D               	lsrf	___flmul@bexp,w
  5755  07BD  00C2               	movwf	??___flmul
  5756  07BE  0842               	movf	??___flmul,w
  5757  07BF  00D1               	movwf	___flmul@prod+3
  5758  07C0                     l943:
  5759  07C0  0847               	movf	___flmul@sign,w
  5760  07C1  00C2               	movwf	??___flmul
  5761  07C2  0842               	movf	??___flmul,w
  5762  07C3  04D1               	iorwf	___flmul@prod+3,f
  5763  07C4                     l3724:
  5764  07C4  0851               	movf	___flmul@prod+3,w
  5765  07C5  00BD               	movwf	?___flmul+3
  5766  07C6  0850               	movf	___flmul@prod+2,w
  5767  07C7  00BC               	movwf	?___flmul+2
  5768  07C8  084F               	movf	___flmul@prod+1,w
  5769  07C9  00BB               	movwf	?___flmul+1
  5770  07CA  084E               	movf	___flmul@prod,w
  5771  07CB  00BA               	movwf	?___flmul
  5772  07CC                     l931:
  5773  07CC  0008               	return
  5774  07CD                     __end_of___flmul:
  5775                           
  5776                           	psect	text8
  5777  1FDD                     __ptext8:	
  5778 ;; *************** function __Umul8_16 *****************
  5779 ;; Defined at:
  5780 ;;		line 4 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\Umul8_16.c"
  5781 ;; Parameters:    Size  Location     Type
  5782 ;;  multiplier      1    wreg     unsigned char 
  5783 ;;  multiplicand    1    0[COMMON] unsigned char 
  5784 ;; Auto vars:     Size  Location     Type
  5785 ;;  multiplier      1    8[COMMON] unsigned char 
  5786 ;;  word_mpld       2    6[COMMON] unsigned int 
  5787 ;;  product         2    4[COMMON] unsigned int 
  5788 ;; Return value:  Size  Location     Type
  5789 ;;                  2    0[COMMON] unsigned int 
  5790 ;; Registers used:
  5791 ;;		wreg, status,2, status,0
  5792 ;; Tracked objects:
  5793 ;;		On entry : 0/0
  5794 ;;		On exit  : 0/0
  5795 ;;		Unchanged: 0/0
  5796 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  5797 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5798 ;;      Locals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5799 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5800 ;;      Totals:         9       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5801 ;;Total ram usage:        9 bytes
  5802 ;; Hardware stack levels used: 1
  5803 ;; This function calls:
  5804 ;;		Nothing
  5805 ;; This function is called by:
  5806 ;;		___flmul
  5807 ;; This function uses a non-reentrant model
  5808 ;;
  5809                           
  5810                           
  5811                           ;psect for function __Umul8_16
  5812  1FDD                     __Umul8_16:
  5813                           
  5814                           ;incstack = 0
  5815                           ; Regs used in __Umul8_16: [wreg+status,2+status,0]
  5816                           ;__Umul8_16@multiplier stored from wreg
  5817  1FDD  00F8               	movwf	__Umul8_16@multiplier
  5818  1FDE                     l3332:
  5819  1FDE  01F4               	clrf	__Umul8_16@product
  5820  1FDF  01F5               	clrf	__Umul8_16@product+1
  5821  1FE0                     l3334:
  5822  1FE0  0870               	movf	__Umul8_16@multiplicand,w
  5823  1FE1  00F2               	movwf	??__Umul8_16
  5824  1FE2  01F3               	clrf	??__Umul8_16+1
  5825  1FE3  0872               	movf	??__Umul8_16,w
  5826  1FE4  00F6               	movwf	__Umul8_16@word_mpld
  5827  1FE5  0873               	movf	??__Umul8_16+1,w
  5828  1FE6  00F7               	movwf	__Umul8_16@word_mpld+1
  5829  1FE7                     l3336:
  5830  1FE7  1C78               	btfss	__Umul8_16@multiplier,0
  5831  1FE8  2FEA               	goto	u3961
  5832  1FE9  2FEB               	goto	u3960
  5833  1FEA                     u3961:
  5834  1FEA  2FEF               	goto	l950
  5835  1FEB                     u3960:
  5836  1FEB                     l3338:
  5837  1FEB  0876               	movf	__Umul8_16@word_mpld,w
  5838  1FEC  07F4               	addwf	__Umul8_16@product,f
  5839  1FED  0877               	movf	__Umul8_16@word_mpld+1,w
  5840  1FEE  3DF5               	addwfc	__Umul8_16@product+1,f
  5841  1FEF                     l950:
  5842  1FEF  3001               	movlw	1
  5843  1FF0                     u3975:
  5844  1FF0  35F6               	lslf	__Umul8_16@word_mpld,f
  5845  1FF1  0DF7               	rlf	__Umul8_16@word_mpld+1,f
  5846  1FF2  0B89               	decfsz	9,f
  5847  1FF3  2FF0               	goto	u3975
  5848  1FF4  1003               	clrc
  5849  1FF5  0CF8               	rrf	__Umul8_16@multiplier,f
  5850  1FF6                     l3340:
  5851  1FF6  0878               	movf	__Umul8_16@multiplier,w
  5852  1FF7  1D03               	btfss	3,2
  5853  1FF8  2FFA               	goto	u3981
  5854  1FF9  2FFB               	goto	u3980
  5855  1FFA                     u3981:
  5856  1FFA  2FE7               	goto	l3336
  5857  1FFB                     u3980:
  5858  1FFB                     l3342:
  5859  1FFB  0875               	movf	__Umul8_16@product+1,w
  5860  1FFC  00F1               	movwf	?__Umul8_16+1
  5861  1FFD  0874               	movf	__Umul8_16@product,w
  5862  1FFE  00F0               	movwf	?__Umul8_16
  5863  1FFF                     l952:
  5864  1FFF  0008               	return
  5865  2000                     __end_of__Umul8_16:
  5866                           
  5867                           	psect	text9
  5868  14BD                     __ptext9:	
  5869 ;; *************** function _print_gram *****************
  5870 ;; Defined at:
  5871 ;;		line 45 in file "drink_meter.c"
  5872 ;; Parameters:    Size  Location     Type
  5873 ;;  p               1    wreg     PTR struct .
  5874 ;;		 -> main@drink(8), 
  5875 ;; Auto vars:     Size  Location     Type
  5876 ;;  p               1   53[BANK1 ] PTR struct .
  5877 ;;		 -> main@drink(8), 
  5878 ;;  row2           16   37[BANK1 ] unsigned char [16]
  5879 ;;  row1           16   21[BANK1 ] unsigned char [16]
  5880 ;; Return value:  Size  Location     Type
  5881 ;;                  1    wreg      void 
  5882 ;; Registers used:
  5883 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  5884 ;; Tracked objects:
  5885 ;;		On entry : 0/0
  5886 ;;		On exit  : 0/0
  5887 ;;		Unchanged: 0/0
  5888 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  5889 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5890 ;;      Locals:         0       0      33       0       0       0       0       0       0       0       0       0       
      +0       0
  5891 ;;      Temps:          0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0
  5892 ;;      Totals:         0       0      35       0       0       0       0       0       0       0       0       0       
      +0       0
  5893 ;;Total ram usage:       35 bytes
  5894 ;; Hardware stack levels used: 1
  5895 ;; Hardware stack levels required when called: 8
  5896 ;; This function calls:
  5897 ;;		_lcd_clear
  5898 ;;		_lcd_print_with
  5899 ;;		_print_digit
  5900 ;;		_sprintf
  5901 ;; This function is called by:
  5902 ;;		_main
  5903 ;; This function uses a non-reentrant model
  5904 ;;
  5905                           
  5906                           
  5907                           ;psect for function _print_gram
  5908  14BD                     _print_gram:
  5909                           
  5910                           ;incstack = 0
  5911                           ; Regs used in _print_gram: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  5912                           ;print_gram@p stored from wreg
  5913  14BD  0021               	movlb	1	; select bank1
  5914  14BE  00D5               	movwf	print_gram@p^(0+128)
  5915  14BF                     l3872:
  5916                           
  5917                           ;drink_meter.c: 46:     char row1[16];;drink_meter.c: 47:     char row2[16];;drink_meter
      +                          .c: 49:     sprintf(row1, "%dml max=%dml", p->loadcell->gram, p->max_gram);
  5918  14BF  301D               	movlw	low (STR_5| (0+32768))
  5919  14C0  00A5               	movwf	sprintf@fmt^(0+128)
  5920  14C1  30A0               	movlw	high (STR_5| (0+32768))
  5921  14C2  00A6               	movwf	(sprintf@fmt^(0+128)+1)
  5922  14C3  0855               	movf	print_gram@p^(0+128),w
  5923  14C4  0086               	movwf	6
  5924  14C5  3001               	movlw	1	; select bank2/3
  5925  14C6  0087               	movwf	7
  5926  14C7  0801               	movf	1,w
  5927  14C8  3E0A               	addlw	10
  5928  14C9  0086               	movwf	6
  5929  14CA  3001               	movlw	1	; select bank2/3
  5930  14CB  0087               	movwf	7
  5931  14CC  3F40               	moviw [0]fsr1
  5932  14CD  00A7               	movwf	(?_sprintf^(0+128)+2)
  5933  14CE  3F41               	moviw [1]fsr1
  5934  14CF  00A8               	movwf	((?_sprintf+1)^(0+128)+2)
  5935  14D0  0855               	movf	print_gram@p^(0+128),w
  5936  14D1  3E03               	addlw	3
  5937  14D2  0086               	movwf	6
  5938  14D3  3001               	movlw	1	; select bank2/3
  5939  14D4  0087               	movwf	7
  5940  14D5  3F40               	moviw [0]fsr1
  5941  14D6  00A9               	movwf	(?_sprintf^(0+128)+4)
  5942  14D7  3F41               	moviw [1]fsr1
  5943  14D8  00AA               	movwf	((?_sprintf+1)^(0+128)+4)
  5944  14D9  30B5               	movlw	(low (print_gram@row1| 0))& (0+255)
  5945  14DA  3190  2043  3194   	fcall	_sprintf
  5946                           
  5947                           ;drink_meter.c: 50:     sprintf(row2, "%d %%", p->percentage);
  5948  14DD  303E               	movlw	low (STR_6| (0+32768))
  5949  14DE  0021               	movlb	1	; select bank1
  5950  14DF  00A5               	movwf	sprintf@fmt^(0+128)
  5951  14E0  30A0               	movlw	high (STR_6| (0+32768))
  5952  14E1  00A6               	movwf	(sprintf@fmt^(0+128)+1)
  5953  14E2  0855               	movf	print_gram@p^(0+128),w
  5954  14E3  3E07               	addlw	7
  5955  14E4  0086               	movwf	6
  5956  14E5  3001               	movlw	1	; select bank2/3
  5957  14E6  0087               	movwf	7
  5958  14E7  0801               	movf	1,w
  5959  14E8  00B3               	movwf	??_print_gram^(0+128)
  5960  14E9  01B4               	clrf	(??_print_gram^(0+128)+1)
  5961  14EA  0833               	movf	??_print_gram^(0+128),w
  5962  14EB  00A7               	movwf	(?_sprintf^(0+128)+2)
  5963  14EC  0834               	movf	(??_print_gram+1)^(0+128),w
  5964  14ED  00A8               	movwf	((?_sprintf+1)^(0+128)+2)
  5965  14EE  30C5               	movlw	(low (print_gram@row2| 0))& (0+255)
  5966  14EF  3190  2043  3194   	fcall	_sprintf
  5967                           
  5968                           ;drink_meter.c: 52:     lcd_clear(p->lcd);
  5969  14F2  0021               	movlb	1	; select bank1
  5970  14F3  0A55               	incf	print_gram@p^(0+128),w
  5971  14F4  0086               	movwf	6
  5972  14F5  3001               	movlw	1	; select bank2/3
  5973  14F6  0087               	movwf	7
  5974  14F7  0801               	movf	1,w
  5975  14F8  3191  2141  3194   	fcall	_lcd_clear
  5976                           
  5977                           ;drink_meter.c: 54:     lcd_print_with(p->lcd, row1, 0, 0);
  5978  14FB  30B5               	movlw	low print_gram@row1
  5979  14FC  0020               	movlb	0	; select bank0
  5980  14FD  00A6               	movwf	lcd_print_with@str
  5981  14FE  3000               	movlw	high print_gram@row1
  5982  14FF  00A7               	movwf	lcd_print_with@str+1
  5983  1500  01A8               	clrf	lcd_print_with@col
  5984  1501  01A9               	clrf	lcd_print_with@row
  5985  1502  0021               	movlb	1	; select bank1
  5986  1503  0A55               	incf	print_gram@p^(0+128),w
  5987  1504  0086               	movwf	6
  5988  1505  3001               	movlw	1	; select bank2/3
  5989  1506  0087               	movwf	7
  5990  1507  0801               	movf	1,w
  5991  1508  319F  2727  3194   	fcall	_lcd_print_with
  5992                           
  5993                           ;drink_meter.c: 55:     lcd_print_with(p->lcd, row2, 0, 1);
  5994  150B  30C5               	movlw	low print_gram@row2
  5995  150C  0020               	movlb	0	; select bank0
  5996  150D  00A6               	movwf	lcd_print_with@str
  5997  150E  3000               	movlw	high print_gram@row2
  5998  150F  00A7               	movwf	lcd_print_with@str+1
  5999  1510  01A8               	clrf	lcd_print_with@col
  6000  1511  01A9               	clrf	lcd_print_with@row
  6001  1512  0AA9               	incf	lcd_print_with@row,f
  6002  1513  0021               	movlb	1	; select bank1
  6003  1514  0A55               	incf	print_gram@p^(0+128),w
  6004  1515  0086               	movwf	6
  6005  1516  3001               	movlw	1	; select bank2/3
  6006  1517  0087               	movwf	7
  6007  1518  0801               	movf	1,w
  6008  1519  319F  2727  3194   	fcall	_lcd_print_with
  6009  151C                     l3874:
  6010                           
  6011                           ;drink_meter.c: 57:     print_digit(p->tm1637, p->percentage);
  6012  151C  0021               	movlb	1	; select bank1
  6013  151D  0855               	movf	print_gram@p^(0+128),w
  6014  151E  0086               	movwf	6
  6015  151F  3001               	movlw	1	; select bank2/3
  6016  1520  0087               	movwf	7
  6017  1521  3001               	movlw	1	; select bank2/3
  6018  1522  3F47               	moviw [7]fsr1
  6019  1523  00FD               	movwf	print_digit@number
  6020  1524  0855               	movf	print_gram@p^(0+128),w
  6021  1525  3E02               	addlw	2
  6022  1526  0086               	movwf	6
  6023  1527  3001               	movlw	1	; select bank2/3
  6024  1528  0087               	movwf	7
  6025  1529  0801               	movf	1,w
  6026  152A  3189  21E3  3194   	fcall	_print_digit
  6027  152D                     l381:
  6028  152D  0008               	return
  6029  152E                     __end_of_print_gram:
  6030                           
  6031                           	psect	text10
  6032  161B                     __ptext10:	
  6033 ;; *************** function _initialize *****************
  6034 ;; Defined at:
  6035 ;;		line 5 in file "drink_meter.c"
  6036 ;; Parameters:    Size  Location     Type
  6037 ;;  p               1    wreg     PTR struct .
  6038 ;;		 -> main@drink(8), 
  6039 ;; Auto vars:     Size  Location     Type
  6040 ;;  p               1   36[BANK1 ] PTR struct .
  6041 ;;		 -> main@drink(8), 
  6042 ;;  valstr         16   20[BANK1 ] unsigned char [16]
  6043 ;; Return value:  Size  Location     Type
  6044 ;;                  1    wreg      void 
  6045 ;; Registers used:
  6046 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  6047 ;; Tracked objects:
  6048 ;;		On entry : 0/0
  6049 ;;		On exit  : 0/0
  6050 ;;		Unchanged: 0/0
  6051 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  6052 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6053 ;;      Locals:         0       0      17       0       0       0       0       0       0       0       0       0       
      +0       0
  6054 ;;      Temps:          0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0
  6055 ;;      Totals:         0       0      18       0       0       0       0       0       0       0       0       0       
      +0       0
  6056 ;;Total ram usage:       18 bytes
  6057 ;; Hardware stack levels used: 1
  6058 ;; Hardware stack levels required when called: 8
  6059 ;; This function calls:
  6060 ;;		_get_scale_val
  6061 ;;		_initialize_digit
  6062 ;;		_lcd_backlight
  6063 ;;		_lcd_clear
  6064 ;;		_lcd_init
  6065 ;;		_lcd_print
  6066 ;;		_lcd_print_with
  6067 ;;		_print_digit
  6068 ;;		_sprintf
  6069 ;; This function is called by:
  6070 ;;		_main
  6071 ;; This function uses a non-reentrant model
  6072 ;;
  6073                           
  6074                           
  6075                           ;psect for function _initialize
  6076  161B                     _initialize:
  6077                           
  6078                           ;incstack = 0
  6079                           ; Regs used in _initialize: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  6080                           ;initialize@p stored from wreg
  6081  161B  0021               	movlb	1	; select bank1
  6082  161C  00C4               	movwf	initialize@p^(0+128)
  6083  161D                     l3860:
  6084                           
  6085                           ;drink_meter.c: 6:     lcd_init(p->lcd);
  6086  161D  0A44               	incf	initialize@p^(0+128),w
  6087  161E  0086               	movwf	6
  6088  161F  3001               	movlw	1	; select bank2/3
  6089  1620  0087               	movwf	7
  6090  1621  0801               	movf	1,w
  6091  1622  3197  2757  3196   	fcall	_lcd_init
  6092                           
  6093                           ;drink_meter.c: 7:     lcd_backlight(p->lcd);
  6094  1625  0021               	movlb	1	; select bank1
  6095  1626  0A44               	incf	initialize@p^(0+128),w
  6096  1627  0086               	movwf	6
  6097  1628  3001               	movlw	1	; select bank2/3
  6098  1629  0087               	movwf	7
  6099  162A  0801               	movf	1,w
  6100  162B  319E  26F8  3196   	fcall	_lcd_backlight
  6101  162E                     l3862:
  6102                           
  6103                           ;drink_meter.c: 9:     lcd_print_with(p->lcd, "Initialize", 0, 0);
  6104  162E  302B               	movlw	low (STR_2| (0+32768))
  6105  162F  0020               	movlb	0	; select bank0
  6106  1630  00A6               	movwf	lcd_print_with@str
  6107  1631  30A0               	movlw	high (STR_2| (0+32768))
  6108  1632  00A7               	movwf	lcd_print_with@str+1
  6109  1633  01A8               	clrf	lcd_print_with@col
  6110  1634  01A9               	clrf	lcd_print_with@row
  6111  1635  0021               	movlb	1	; select bank1
  6112  1636  0A44               	incf	initialize@p^(0+128),w
  6113  1637  0086               	movwf	6
  6114  1638  3001               	movlw	1	; select bank2/3
  6115  1639  0087               	movwf	7
  6116  163A  0801               	movf	1,w
  6117  163B  319F  2727  3196   	fcall	_lcd_print_with
  6118  163E                     l3864:
  6119                           
  6120                           ;drink_meter.c: 10:     lcd_print_with(p->lcd, "Load cell Unit", 0, 1);
  6121  163E  3000               	movlw	low (STR_3| (0+32768))
  6122  163F  0020               	movlb	0	; select bank0
  6123  1640  00A6               	movwf	lcd_print_with@str
  6124  1641  30A0               	movlw	high (STR_3| (0+32768))
  6125  1642  00A7               	movwf	lcd_print_with@str+1
  6126  1643  01A8               	clrf	lcd_print_with@col
  6127  1644  01A9               	clrf	lcd_print_with@row
  6128  1645  0AA9               	incf	lcd_print_with@row,f
  6129  1646  0021               	movlb	1	; select bank1
  6130  1647  0A44               	incf	initialize@p^(0+128),w
  6131  1648  0086               	movwf	6
  6132  1649  3001               	movlw	1	; select bank2/3
  6133  164A  0087               	movwf	7
  6134  164B  0801               	movf	1,w
  6135  164C  319F  2727  3196   	fcall	_lcd_print_with
  6136                           
  6137                           ;drink_meter.c: 12:     initialize_digit(p->tm1637);
  6138  164F  0021               	movlb	1	; select bank1
  6139  1650  0844               	movf	initialize@p^(0+128),w
  6140  1651  3E02               	addlw	2
  6141  1652  0086               	movwf	6
  6142  1653  3001               	movlw	1	; select bank2/3
  6143  1654  0087               	movwf	7
  6144  1655  0801               	movf	1,w
  6145  1656  319E  26D1  3196   	fcall	_initialize_digit
  6146                           
  6147                           ;drink_meter.c: 13:     print_digit(p->tm1637, 0);
  6148  1659  01FD               	clrf	print_digit@number
  6149  165A  0021               	movlb	1	; select bank1
  6150  165B  0844               	movf	initialize@p^(0+128),w
  6151  165C  3E02               	addlw	2
  6152  165D  0086               	movwf	6
  6153  165E  3001               	movlw	1	; select bank2/3
  6154  165F  0087               	movwf	7
  6155  1660  0801               	movf	1,w
  6156  1661  3189  21E3  3196   	fcall	_print_digit
  6157                           
  6158                           ;drink_meter.c: 16:     p->loadcell->weight_zero = get_scale_val(p->loadcell, 50);
  6159  1664  3032               	movlw	50
  6160  1665  0021               	movlb	1	; select bank1
  6161  1666  00B3               	movwf	??_initialize^(0+128)
  6162  1667  0833               	movf	??_initialize^(0+128),w
  6163  1668  0020               	movlb	0	; select bank0
  6164  1669  00A0               	movwf	get_scale_val@scale_avg_count
  6165  166A  0021               	movlb	1	; select bank1
  6166  166B  0844               	movf	initialize@p^(0+128),w
  6167  166C  0086               	movwf	6
  6168  166D  3001               	movlw	1	; select bank2/3
  6169  166E  0087               	movwf	7
  6170  166F  0801               	movf	1,w
  6171  1670  318C  2445  3196   	fcall	_get_scale_val
  6172  1673  0021               	movlb	1	; select bank1
  6173  1674  0844               	movf	initialize@p^(0+128),w
  6174  1675  0086               	movwf	6
  6175  1676  3001               	movlw	1	; select bank2/3
  6176  1677  0087               	movwf	7
  6177  1678  0801               	movf	1,w
  6178  1679  3E02               	addlw	2
  6179  167A  0086               	movwf	6
  6180  167B  3001               	movlw	1	; select bank2/3
  6181  167C  0087               	movwf	7
  6182  167D  0020               	movlb	0	; select bank0
  6183  167E  0820               	movf	?_get_scale_val,w
  6184  167F  3FC0               	movwi [0]fsr1
  6185  1680  0821               	movf	?_get_scale_val+1,w
  6186  1681  3FC1               	movwi [1]fsr1
  6187  1682  0822               	movf	?_get_scale_val+2,w
  6188  1683  3FC2               	movwi [2]fsr1
  6189  1684  0823               	movf	?_get_scale_val+3,w
  6190  1685  3FC3               	movwi [3]fsr1
  6191  1686                     l3866:
  6192                           
  6193                           ;drink_meter.c: 18:     char valstr[16];;drink_meter.c: 19:     sprintf(valstr, "%lu val
      +                          ", p->loadcell->weight_dat);
  6194  1686  3036               	movlw	low (STR_4| (0+32768))
  6195  1687  0021               	movlb	1	; select bank1
  6196  1688  00A5               	movwf	sprintf@fmt^(0+128)
  6197  1689  30A0               	movlw	high (STR_4| (0+32768))
  6198  168A  00A6               	movwf	(sprintf@fmt^(0+128)+1)
  6199  168B  0844               	movf	initialize@p^(0+128),w
  6200  168C  0086               	movwf	6
  6201  168D  3001               	movlw	1	; select bank2/3
  6202  168E  0087               	movwf	7
  6203  168F  0801               	movf	1,w
  6204  1690  3E06               	addlw	6
  6205  1691  0086               	movwf	6
  6206  1692  3001               	movlw	1	; select bank2/3
  6207  1693  0087               	movwf	7
  6208  1694  3F40               	moviw [0]fsr1
  6209  1695  00A7               	movwf	(?_sprintf^(0+128)+2)
  6210  1696  3F41               	moviw [1]fsr1
  6211  1697  00A8               	movwf	((?_sprintf+1)^(0+128)+2)
  6212  1698  3F42               	moviw [2]fsr1
  6213  1699  00A9               	movwf	((?_sprintf+2)^(0+128)+2)
  6214  169A  3F43               	moviw [3]fsr1
  6215  169B  00AA               	movwf	((?_sprintf+3)^(0+128)+2)
  6216  169C  30B4               	movlw	(low (initialize@valstr| 0))& (0+255)
  6217  169D  3190  2043  3196   	fcall	_sprintf
  6218  16A0                     l3868:
  6219                           
  6220                           ;drink_meter.c: 21:     lcd_clear(p->lcd);
  6221  16A0  0021               	movlb	1	; select bank1
  6222  16A1  0A44               	incf	initialize@p^(0+128),w
  6223  16A2  0086               	movwf	6
  6224  16A3  3001               	movlw	1	; select bank2/3
  6225  16A4  0087               	movwf	7
  6226  16A5  0801               	movf	1,w
  6227  16A6  3191  2141  3196   	fcall	_lcd_clear
  6228  16A9                     l3870:
  6229                           
  6230                           ;drink_meter.c: 22:     lcd_print(p->lcd, valstr);
  6231  16A9  30B4               	movlw	low initialize@valstr
  6232  16AA  00FA               	movwf	lcd_print@str
  6233  16AB  3000               	movlw	high initialize@valstr
  6234  16AC  00FB               	movwf	lcd_print@str+1
  6235  16AD  0021               	movlb	1	; select bank1
  6236  16AE  0A44               	incf	initialize@p^(0+128),w
  6237  16AF  0086               	movwf	6
  6238  16B0  3001               	movlw	1	; select bank2/3
  6239  16B1  0087               	movwf	7
  6240  16B2  0801               	movf	1,w
  6241  16B3  3190  201F  3196   	fcall	_lcd_print
  6242  16B6                     l373:
  6243  16B6  0008               	return
  6244  16B7                     __end_of_initialize:
  6245                           
  6246                           	psect	text11
  6247  1043                     __ptext11:	
  6248 ;; *************** function _sprintf *****************
  6249 ;; Defined at:
  6250 ;;		line 9 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\nf_sprintf.c"
  6251 ;; Parameters:    Size  Location     Type
  6252 ;;  s               1    wreg     PTR unsigned char 
  6253 ;;		 -> set_max_gram@valstr(16), print_gram@row2(16), print_gram@row1(16), initialize@valstr(16), 
  6254 ;;  fmt             2    5[BANK1 ] PTR const unsigned char 
  6255 ;;		 -> STR_7(14), STR_6(6), STR_5(14), STR_4(8), 
  6256 ;; Auto vars:     Size  Location     Type
  6257 ;;  s               1   13[BANK1 ] PTR unsigned char 
  6258 ;;		 -> set_max_gram@valstr(16), print_gram@row2(16), print_gram@row1(16), initialize@valstr(16), 
  6259 ;;  f               5   14[BANK1 ] struct _IO_FILE
  6260 ;;  ret             2    0        int 
  6261 ;;  ap              1   12[BANK1 ] PTR void [1]
  6262 ;;		 -> ?_sprintf(2), 
  6263 ;; Return value:  Size  Location     Type
  6264 ;;                  2    5[BANK1 ] int 
  6265 ;; Registers used:
  6266 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  6267 ;; Tracked objects:
  6268 ;;		On entry : 0/0
  6269 ;;		On exit  : 0/0
  6270 ;;		Unchanged: 0/0
  6271 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  6272 ;;      Params:         0       0       6       0       0       0       0       0       0       0       0       0       
      +0       0
  6273 ;;      Locals:         0       0       7       0       0       0       0       0       0       0       0       0       
      +0       0
  6274 ;;      Temps:          0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0
  6275 ;;      Totals:         0       0      14       0       0       0       0       0       0       0       0       0       
      +0       0
  6276 ;;Total ram usage:       14 bytes
  6277 ;; Hardware stack levels used: 1
  6278 ;; Hardware stack levels required when called: 7
  6279 ;; This function calls:
  6280 ;;		_vfprintf
  6281 ;; This function is called by:
  6282 ;;		_initialize
  6283 ;;		_print_gram
  6284 ;;		_set_max_gram
  6285 ;; This function uses a non-reentrant model
  6286 ;;
  6287                           
  6288                           
  6289                           ;psect for function _sprintf
  6290  1043                     _sprintf:
  6291                           
  6292                           ;incstack = 0
  6293                           ; Regs used in _sprintf: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  6294                           ;sprintf@s stored from wreg
  6295  1043  0021               	movlb	1	; select bank1
  6296  1044  00AD               	movwf	sprintf@s^(0+128)
  6297  1045                     l3846:
  6298  1045  30A7               	movlw	(low ((?_sprintf| 0+2)))& (0+255)
  6299  1046  00AB               	movwf	??_sprintf^(0+128)
  6300  1047  082B               	movf	??_sprintf^(0+128),w
  6301  1048  00AC               	movwf	sprintf@ap^(0+128)
  6302  1049  082D               	movf	sprintf@s^(0+128),w
  6303  104A  00AB               	movwf	??_sprintf^(0+128)
  6304  104B  082B               	movf	??_sprintf^(0+128),w
  6305  104C  00AE               	movwf	sprintf@f^(0+128)
  6306  104D                     l3848:
  6307  104D  01AF               	clrf	(sprintf@f^(0+128)+1)
  6308  104E  01B0               	clrf	((sprintf@f+1)^(0+128)+1)
  6309  104F                     l3850:
  6310  104F  01B1               	clrf	(sprintf@f^(0+128)+3)
  6311  1050  01B2               	clrf	((sprintf@f+1)^(0+128)+3)
  6312  1051                     l3852:
  6313  1051  0826               	movf	(sprintf@fmt+1)^(0+128),w
  6314  1052  0020               	movlb	0	; select bank0
  6315  1053  00EE               	movwf	vfprintf@fmt+1
  6316  1054  0021               	movlb	1	; select bank1
  6317  1055  0825               	movf	sprintf@fmt^(0+128),w
  6318  1056  0020               	movlb	0	; select bank0
  6319  1057  00ED               	movwf	vfprintf@fmt
  6320  1058  30AC               	movlw	(low (sprintf@ap| 0))& (0+255)
  6321  1059  0021               	movlb	1	; select bank1
  6322  105A  00AB               	movwf	??_sprintf^(0+128)
  6323  105B  082B               	movf	??_sprintf^(0+128),w
  6324  105C  0020               	movlb	0	; select bank0
  6325  105D  00EF               	movwf	vfprintf@ap
  6326  105E  30AE               	movlw	(low (sprintf@f| 0))& (0+255)
  6327  105F  3190  2094  3190   	fcall	_vfprintf
  6328  1062                     l3854:
  6329  1062  0021               	movlb	1	; select bank1
  6330  1063  082F               	movf	(sprintf@f^(0+128)+1),w
  6331  1064  072D               	addwf	sprintf@s^(0+128),w
  6332  1065  00AB               	movwf	??_sprintf^(0+128)
  6333  1066  082B               	movf	??_sprintf^(0+128),w
  6334  1067  0086               	movwf	6
  6335  1068  0187               	clrf	7
  6336  1069  0181               	clrf	1
  6337  106A                     l997:
  6338  106A  0008               	return
  6339  106B                     __end_of_sprintf:
  6340                           
  6341                           	psect	text12
  6342  1094                     __ptext12:	
  6343 ;; *************** function _vfprintf *****************
  6344 ;; Defined at:
  6345 ;;		line 1390 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c"
  6346 ;; Parameters:    Size  Location     Type
  6347 ;;  fp              1    wreg     PTR struct _IO_FILE
  6348 ;;		 -> sprintf@f(5), 
  6349 ;;  fmt             2   77[BANK0 ] PTR const unsigned char 
  6350 ;;		 -> STR_7(14), STR_6(6), STR_5(14), STR_4(8), 
  6351 ;;  ap              1   79[BANK0 ] PTR PTR void 
  6352 ;;		 -> sprintf@ap(1), 
  6353 ;; Auto vars:     Size  Location     Type
  6354 ;;  fp              1    2[BANK1 ] PTR struct _IO_FILE
  6355 ;;		 -> sprintf@f(5), 
  6356 ;;  cfmt            2    3[BANK1 ] PTR unsigned char 
  6357 ;;		 -> STR_7(14), STR_6(6), STR_5(14), STR_4(8), 
  6358 ;; Return value:  Size  Location     Type
  6359 ;;                  2   77[BANK0 ] int 
  6360 ;; Registers used:
  6361 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  6362 ;; Tracked objects:
  6363 ;;		On entry : 0/0
  6364 ;;		On exit  : 0/0
  6365 ;;		Unchanged: 0/0
  6366 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  6367 ;;      Params:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6368 ;;      Locals:         0       0       3       0       0       0       0       0       0       0       0       0       
      +0       0
  6369 ;;      Temps:          0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0
  6370 ;;      Totals:         0       3       5       0       0       0       0       0       0       0       0       0       
      +0       0
  6371 ;;Total ram usage:        8 bytes
  6372 ;; Hardware stack levels used: 1
  6373 ;; Hardware stack levels required when called: 6
  6374 ;; This function calls:
  6375 ;;		_vfpfcnvrt
  6376 ;; This function is called by:
  6377 ;;		_sprintf
  6378 ;; This function uses a non-reentrant model
  6379 ;;
  6380                           
  6381                           
  6382                           ;psect for function _vfprintf
  6383  1094                     _vfprintf:
  6384                           
  6385                           ;incstack = 0
  6386                           ; Regs used in _vfprintf: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  6387                           ;vfprintf@fp stored from wreg
  6388  1094  0021               	movlb	1	; select bank1
  6389  1095  00A2               	movwf	vfprintf@fp^(0+128)
  6390  1096                     l3728:
  6391                           
  6392                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 1390: int vfprint
      +                          f(FILE *fp, const char *fmt, va_list ap);C:\Program Files\Microchip\xc8\v2.32\pic\source
      +                          s\c99\common\doprnt.c: 1391: {;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\comm
      +                          on\doprnt.c: 1393:     char *cfmt;;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\
      +                          common\doprnt.c: 1395:     cfmt = (char *)fmt;
  6393  1096  0020               	movlb	0	; select bank0
  6394  1097  086E               	movf	vfprintf@fmt+1,w
  6395  1098  0021               	movlb	1	; select bank1
  6396  1099  00A4               	movwf	(vfprintf@cfmt+1)^(0+128)
  6397  109A  0020               	movlb	0	; select bank0
  6398  109B  086D               	movf	vfprintf@fmt,w
  6399  109C  0021               	movlb	1	; select bank1
  6400  109D  00A3               	movwf	vfprintf@cfmt^(0+128)
  6401  109E                     l3730:
  6402                           
  6403                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 1396:     nout = 
      +                          0;
  6404  109E  01DC               	clrf	_nout^(0+128)
  6405  109F  01DD               	clrf	(_nout+1)^(0+128)
  6406                           
  6407                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 1397:     while (
      +                          *cfmt) {
  6408  10A0  28B9               	goto	l3734
  6409  10A1                     l3732:
  6410                           
  6411                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 1398:         nou
      +                          t += vfpfcnvrt(fp, &cfmt, ap);
  6412  10A1  30A3               	movlw	(low (vfprintf@cfmt| 0))& (0+255)
  6413  10A2  00A0               	movwf	??_vfprintf^(0+128)
  6414  10A3  0820               	movf	??_vfprintf^(0+128),w
  6415  10A4  0020               	movlb	0	; select bank0
  6416  10A5  00CE               	movwf	vfpfcnvrt@fmt
  6417  10A6  086F               	movf	vfprintf@ap,w
  6418  10A7  0021               	movlb	1	; select bank1
  6419  10A8  00A1               	movwf	(??_vfprintf+1)^(0+128)
  6420  10A9  0821               	movf	(??_vfprintf+1)^(0+128),w
  6421  10AA  0020               	movlb	0	; select bank0
  6422  10AB  00CF               	movwf	vfpfcnvrt@ap
  6423  10AC  0021               	movlb	1	; select bank1
  6424  10AD  0822               	movf	vfprintf@fp^(0+128),w
  6425  10AE  3183  237A  3190   	fcall	_vfpfcnvrt
  6426  10B1  0020               	movlb	0	; select bank0
  6427  10B2  084E               	movf	?_vfpfcnvrt,w
  6428  10B3  0021               	movlb	1	; select bank1
  6429  10B4  07DC               	addwf	_nout^(0+128),f
  6430  10B5  0020               	movlb	0	; select bank0
  6431  10B6  084F               	movf	?_vfpfcnvrt+1,w
  6432  10B7  0021               	movlb	1	; select bank1
  6433  10B8  3DDD               	addwfc	(_nout+1)^(0+128),f
  6434  10B9                     l3734:
  6435                           
  6436                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 1397:     while (
      +                          *cfmt) {
  6437  10B9  0823               	movf	vfprintf@cfmt^(0+128),w
  6438  10BA  0084               	movwf	4
  6439  10BB  0824               	movf	(vfprintf@cfmt+1)^(0+128),w
  6440  10BC  0085               	movwf	5
  6441  10BD  0012               	moviw fsr0++
  6442  10BE  1D03               	btfss	3,2
  6443  10BF  28C1               	goto	u4571
  6444  10C0  28C2               	goto	u4570
  6445  10C1                     u4571:
  6446  10C1  28A1               	goto	l3732
  6447  10C2                     u4570:
  6448  10C2                     l3736:
  6449                           
  6450                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 1400:     return 
      +                          nout;
  6451  10C2  085D               	movf	(_nout+1)^(0+128),w
  6452  10C3  0020               	movlb	0	; select bank0
  6453  10C4  00EE               	movwf	?_vfprintf+1
  6454  10C5  0021               	movlb	1	; select bank1
  6455  10C6  085C               	movf	_nout^(0+128),w
  6456  10C7  0020               	movlb	0	; select bank0
  6457  10C8  00ED               	movwf	?_vfprintf
  6458  10C9                     l1091:
  6459  10C9  0008               	return
  6460  10CA                     __end_of_vfprintf:
  6461                           
  6462                           	psect	text13
  6463  037A                     __ptext13:	
  6464 ;; *************** function _vfpfcnvrt *****************
  6465 ;; Defined at:
  6466 ;;		line 692 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c"
  6467 ;; Parameters:    Size  Location     Type
  6468 ;;  fp              1    wreg     PTR struct _IO_FILE
  6469 ;;		 -> sprintf@f(5), 
  6470 ;;  fmt             1   46[BANK0 ] PTR PTR unsigned char 
  6471 ;;		 -> vfprintf@cfmt(2), 
  6472 ;;  ap              1   47[BANK0 ] PTR PTR void 
  6473 ;;		 -> sprintf@ap(1), 
  6474 ;; Auto vars:     Size  Location     Type
  6475 ;;  fp              1   76[BANK0 ] PTR struct _IO_FILE
  6476 ;;		 -> sprintf@f(5), 
  6477 ;;  llu             8   68[BANK0 ] unsigned long long 
  6478 ;;  ll              8   60[BANK0 ] long long 
  6479 ;;  f               4    0        long long 
  6480 ;;  ct              3    0        unsigned char [3]
  6481 ;;  vp              2    0        PTR void 
  6482 ;;  i               2    0        int 
  6483 ;;  done            2    0        int 
  6484 ;;  cp              2    0        PTR unsigned char 
  6485 ;;  c               1    0        unsigned char 
  6486 ;; Return value:  Size  Location     Type
  6487 ;;                  2   46[BANK0 ] int 
  6488 ;; Registers used:
  6489 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  6490 ;; Tracked objects:
  6491 ;;		On entry : 0/0
  6492 ;;		On exit  : 0/0
  6493 ;;		Unchanged: 0/0
  6494 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  6495 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6496 ;;      Locals:         0      17       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6497 ;;      Temps:          0      12       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6498 ;;      Totals:         0      31       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6499 ;;Total ram usage:       31 bytes
  6500 ;; Hardware stack levels used: 1
  6501 ;; Hardware stack levels required when called: 5
  6502 ;; This function calls:
  6503 ;;		_dtoa
  6504 ;;		_fputc
  6505 ;;		_strncmp
  6506 ;;		_utoa
  6507 ;; This function is called by:
  6508 ;;		_vfprintf
  6509 ;; This function uses a non-reentrant model
  6510 ;;
  6511                           
  6512                           
  6513                           ;psect for function _vfpfcnvrt
  6514  037A                     _vfpfcnvrt:
  6515                           
  6516                           ;incstack = 0
  6517                           ; Regs used in _vfpfcnvrt: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  6518                           ;vfpfcnvrt@fp stored from wreg
  6519  037A  0020               	movlb	0	; select bank0
  6520  037B  00EC               	movwf	vfpfcnvrt@fp
  6521  037C                     l3390:
  6522                           
  6523                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 692: static int v
      +                          fpfcnvrt(FILE *fp, char *fmt[], va_list ap);C:\Program Files\Microchip\xc8\v2.32\pic\sou
      +                          rces\c99\common\doprnt.c: 693: {;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\co
      +                          mmon\doprnt.c: 694:     char c, *cp, ct[3];;C:\Program Files\Microchip\xc8\v2.32\pic\sou
      +                          rces\c99\common\doprnt.c: 695:     int done, i;;C:\Program Files\Microchip\xc8\v2.32\pic
      +                          \sources\c99\common\doprnt.c: 696:     long long ll;;C:\Program Files\Microchip\xc8\v2.3
      +                          2\pic\sources\c99\common\doprnt.c: 697:     unsigned long long llu;
  6524  037C  084E               	movf	vfpfcnvrt@fmt,w
  6525  037D  0086               	movwf	6
  6526  037E  0187               	clrf	7
  6527  037F  3F40               	moviw [0]fsr1
  6528  0380  00D0               	movwf	??_vfpfcnvrt
  6529  0381  3F41               	moviw [1]fsr1
  6530  0382  00D1               	movwf	??_vfpfcnvrt+1
  6531  0383  0850               	movf	??_vfpfcnvrt,w
  6532  0384  0084               	movwf	4
  6533  0385  0851               	movf	??_vfpfcnvrt+1,w
  6534  0386  0085               	movwf	5
  6535  0387  0012               	moviw fsr0++
  6536  0388  3A25               	xorlw	37
  6537  0389  1D03               	btfss	3,2
  6538  038A  2B8C               	goto	u4131
  6539  038B  2B8D               	goto	u4130
  6540  038C                     u4131:
  6541  038C  2D52               	goto	l3458
  6542  038D                     u4130:
  6543  038D                     l3392:
  6544                           
  6545                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 703:         ++*f
      +                          mt;
  6546  038D  084E               	movf	vfpfcnvrt@fmt,w
  6547  038E  0086               	movwf	6
  6548  038F  0187               	clrf	7
  6549  0390  3001               	movlw	1
  6550  0391  0781               	addwf	1,f
  6551  0392  3141               	addfsr 1,1
  6552  0393  1803               	skipnc
  6553  0394  0A81               	incf	1,f
  6554  0395                     l3394:
  6555                           
  6556                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 705:         flag
      +                          s = width = 0;
  6557  0395  0021               	movlb	1	; select bank1
  6558  0396  01DE               	clrf	_width^(0+128)
  6559  0397  01DF               	clrf	(_width+1)^(0+128)
  6560  0398  01E2               	clrf	_flags^(0+128)
  6561  0399  01E3               	clrf	(_flags+1)^(0+128)
  6562  039A                     l3396:
  6563                           
  6564                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 706:         prec
      +                           = -1;
  6565  039A  30FF               	movlw	255
  6566  039B  00E0               	movwf	_prec^(0+128)
  6567  039C  30FF               	movlw	255
  6568  039D  00E1               	movwf	(_prec^(0+128)+1)
  6569  039E                     l3398:
  6570                           
  6571                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 847:         if (
      +                          (*fmt[0] == 'd') || (*fmt[0] == 'i')) {
  6572  039E  0020               	movlb	0	; select bank0
  6573  039F  084E               	movf	vfpfcnvrt@fmt,w
  6574  03A0  0086               	movwf	6
  6575  03A1  0187               	clrf	7
  6576  03A2  3F40               	moviw [0]fsr1
  6577  03A3  00D0               	movwf	??_vfpfcnvrt
  6578  03A4  3F41               	moviw [1]fsr1
  6579  03A5  00D1               	movwf	??_vfpfcnvrt+1
  6580  03A6  0850               	movf	??_vfpfcnvrt,w
  6581  03A7  0084               	movwf	4
  6582  03A8  0851               	movf	??_vfpfcnvrt+1,w
  6583  03A9  0085               	movwf	5
  6584  03AA  0012               	moviw fsr0++
  6585  03AB  3A64               	xorlw	100
  6586  03AC  1903               	btfsc	3,2
  6587  03AD  2BAF               	goto	u4141
  6588  03AE  2BB0               	goto	u4140
  6589  03AF                     u4141:
  6590  03AF  2BC1               	goto	l3402
  6591  03B0                     u4140:
  6592  03B0                     l3400:
  6593  03B0  084E               	movf	vfpfcnvrt@fmt,w
  6594  03B1  0086               	movwf	6
  6595  03B2  0187               	clrf	7
  6596  03B3  3F40               	moviw [0]fsr1
  6597  03B4  00D0               	movwf	??_vfpfcnvrt
  6598  03B5  3F41               	moviw [1]fsr1
  6599  03B6  00D1               	movwf	??_vfpfcnvrt+1
  6600  03B7  0850               	movf	??_vfpfcnvrt,w
  6601  03B8  0084               	movwf	4
  6602  03B9  0851               	movf	??_vfpfcnvrt+1,w
  6603  03BA  0085               	movwf	5
  6604  03BB  0012               	moviw fsr0++
  6605  03BC  3A69               	xorlw	105
  6606  03BD  1D03               	btfss	3,2
  6607  03BE  2BC0               	goto	u4151
  6608  03BF  2BC1               	goto	u4150
  6609  03C0                     u4151:
  6610  03C0  2BFC               	goto	l3410
  6611  03C1                     u4150:
  6612  03C1                     l3402:
  6613                           
  6614                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 849:             
      +                          ++*fmt;
  6615  03C1  084E               	movf	vfpfcnvrt@fmt,w
  6616  03C2  0086               	movwf	6
  6617  03C3  0187               	clrf	7
  6618  03C4  3001               	movlw	1
  6619  03C5  0781               	addwf	1,f
  6620  03C6  3141               	addfsr 1,1
  6621  03C7  1803               	skipnc
  6622  03C8  0A81               	incf	1,f
  6623  03C9                     l3404:
  6624                           
  6625                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 850:             
      +                          ll = (long long)(*(int *)__va_arg(*(int **)ap, (int)0));
  6626  03C9  084F               	movf	vfpfcnvrt@ap,w
  6627  03CA  0086               	movwf	6
  6628  03CB  0187               	clrf	7
  6629  03CC  0801               	movf	1,w
  6630  03CD  0084               	movwf	4
  6631  03CE  0185               	clrf	5
  6632  03CF  3002               	movlw	2
  6633  03D0  0781               	addwf	1,f
  6634  03D1  3F00               	moviw [0]fsr0
  6635  03D2  00D0               	movwf	??_vfpfcnvrt
  6636  03D3  3F01               	moviw [1]fsr0
  6637  03D4  00D1               	movwf	??_vfpfcnvrt+1
  6638  03D5  0850               	movf	??_vfpfcnvrt,w
  6639  03D6  00DC               	movwf	vfpfcnvrt@ll
  6640  03D7  0851               	movf	??_vfpfcnvrt+1,w
  6641  03D8  00DD               	movwf	vfpfcnvrt@ll+1
  6642  03D9  0D89               	rlf	9,f
  6643  03DA  3B89               	subwfb	9,f
  6644  03DB  0989               	comf	9,f
  6645  03DC  00DE               	movwf	vfpfcnvrt@ll+2
  6646  03DD  00DF               	movwf	vfpfcnvrt@ll+3
  6647  03DE  00E0               	movwf	vfpfcnvrt@ll+4
  6648  03DF  00E1               	movwf	vfpfcnvrt@ll+5
  6649  03E0  00E2               	movwf	vfpfcnvrt@ll+6
  6650  03E1  00E3               	movwf	vfpfcnvrt@ll+7
  6651  03E2                     l3406:
  6652                           
  6653                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 852:             
      +                          return dtoa(fp, ll);
  6654  03E2  085C               	movf	vfpfcnvrt@ll,w
  6655  03E3  00B0               	movwf	dtoa@d
  6656  03E4  085D               	movf	vfpfcnvrt@ll+1,w
  6657  03E5  00B1               	movwf	dtoa@d+1
  6658  03E6  085E               	movf	vfpfcnvrt@ll+2,w
  6659  03E7  00B2               	movwf	dtoa@d+2
  6660  03E8  085F               	movf	vfpfcnvrt@ll+3,w
  6661  03E9  00B3               	movwf	dtoa@d+3
  6662  03EA  0860               	movf	vfpfcnvrt@ll+4,w
  6663  03EB  00B4               	movwf	dtoa@d+4
  6664  03EC  0861               	movf	vfpfcnvrt@ll+5,w
  6665  03ED  00B5               	movwf	dtoa@d+5
  6666  03EE  0862               	movf	vfpfcnvrt@ll+6,w
  6667  03EF  00B6               	movwf	dtoa@d+6
  6668  03F0  0863               	movf	vfpfcnvrt@ll+7,w
  6669  03F1  00B7               	movwf	dtoa@d+7
  6670  03F2  086C               	movf	vfpfcnvrt@fp,w
  6671  03F3  3180  2056  3183   	fcall	_dtoa
  6672  03F6  0020               	movlb	0	; select bank0
  6673  03F7  0831               	movf	?_dtoa+1,w
  6674  03F8  00CF               	movwf	?_vfpfcnvrt+1
  6675  03F9  0830               	movf	?_dtoa,w
  6676  03FA  00CE               	movwf	?_vfpfcnvrt
  6677  03FB  2D75               	goto	l1079
  6678  03FC                     l3410:
  6679                           
  6680                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 857:         if (
      +                          !strncmp(*fmt, "ld", ((sizeof("ld")/sizeof("ld"[0]))-1)) || !strncmp(*fmt, "li", ((sizeo
      +                          f("li")/sizeof("li"[0]))-1))) {
  6681  03FC  084E               	movf	vfpfcnvrt@fmt,w
  6682  03FD  0086               	movwf	6
  6683  03FE  0187               	clrf	7
  6684  03FF  3F40               	moviw [0]fsr1
  6685  0400  00F0               	movwf	strncmp@_l
  6686  0401  3F41               	moviw [1]fsr1
  6687  0402  00F1               	movwf	strncmp@_l+1
  6688  0403  3044               	movlw	low (STR_8| (0+32768))
  6689  0404  00F2               	movwf	strncmp@_r
  6690  0405  30A0               	movlw	high (STR_8| (0+32768))
  6691  0406  00F3               	movwf	strncmp@_r+1
  6692  0407  3002               	movlw	2
  6693  0408  00F4               	movwf	strncmp@n
  6694  0409  3000               	movlw	0
  6695  040A  00F5               	movwf	strncmp@n+1
  6696  040B  3193  2391  3183   	fcall	_strncmp
  6697  040E  0870               	movf	?_strncmp,w
  6698  040F  0471               	iorwf	?_strncmp+1,w
  6699  0410  1903               	btfsc	3,2
  6700  0411  2C13               	goto	u4161
  6701  0412  2C14               	goto	u4160
  6702  0413                     u4161:
  6703  0413  2C2D               	goto	l3414
  6704  0414                     u4160:
  6705  0414                     l3412:
  6706  0414  0020               	movlb	0	; select bank0
  6707  0415  084E               	movf	vfpfcnvrt@fmt,w
  6708  0416  0086               	movwf	6
  6709  0417  0187               	clrf	7
  6710  0418  3F40               	moviw [0]fsr1
  6711  0419  00F0               	movwf	strncmp@_l
  6712  041A  3F41               	moviw [1]fsr1
  6713  041B  00F1               	movwf	strncmp@_l+1
  6714  041C  3047               	movlw	low (STR_12| (0+32768))
  6715  041D  00F2               	movwf	strncmp@_r
  6716  041E  30A0               	movlw	high (STR_12| (0+32768))
  6717  041F  00F3               	movwf	strncmp@_r+1
  6718  0420  3002               	movlw	2
  6719  0421  00F4               	movwf	strncmp@n
  6720  0422  3000               	movlw	0
  6721  0423  00F5               	movwf	strncmp@n+1
  6722  0424  3193  2391  3183   	fcall	_strncmp
  6723  0427  0870               	movf	?_strncmp,w
  6724  0428  0471               	iorwf	?_strncmp+1,w
  6725  0429  1D03               	btfss	3,2
  6726  042A  2C2C               	goto	u4171
  6727  042B  2C2D               	goto	u4170
  6728  042C                     u4171:
  6729  042C  2C6F               	goto	l3422
  6730  042D                     u4170:
  6731  042D                     l3414:
  6732                           
  6733                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 858: ;C:\Program 
      +                          Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 860:             *fmt += ((si
      +                          zeof("ld")/sizeof("ld"[0]))-1);
  6734  042D  0020               	movlb	0	; select bank0
  6735  042E  084E               	movf	vfpfcnvrt@fmt,w
  6736  042F  0086               	movwf	6
  6737  0430  0187               	clrf	7
  6738  0431  3002               	movlw	2
  6739  0432  0781               	addwf	1,f
  6740  0433  3141               	addfsr 1,1
  6741  0434  1803               	skipnc
  6742  0435  0A81               	incf	1,f
  6743  0436                     l3416:
  6744                           
  6745                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 861:             
      +                          ll = (long long)(*(long *)__va_arg(*(long **)ap, (long)0));
  6746  0436  084F               	movf	vfpfcnvrt@ap,w
  6747  0437  0086               	movwf	6
  6748  0438  0187               	clrf	7
  6749  0439  0801               	movf	1,w
  6750  043A  0084               	movwf	4
  6751  043B  0185               	clrf	5
  6752  043C  3004               	movlw	4
  6753  043D  0781               	addwf	1,f
  6754  043E  3F00               	moviw [0]fsr0
  6755  043F  00D0               	movwf	??_vfpfcnvrt
  6756  0440  3F01               	moviw [1]fsr0
  6757  0441  00D1               	movwf	??_vfpfcnvrt+1
  6758  0442  3F02               	moviw [2]fsr0
  6759  0443  00D2               	movwf	??_vfpfcnvrt+2
  6760  0444  3F03               	moviw [3]fsr0
  6761  0445  00D3               	movwf	??_vfpfcnvrt+3
  6762  0446  0850               	movf	??_vfpfcnvrt,w
  6763  0447  00DC               	movwf	vfpfcnvrt@ll
  6764  0448  0851               	movf	??_vfpfcnvrt+1,w
  6765  0449  00DD               	movwf	vfpfcnvrt@ll+1
  6766  044A  0852               	movf	??_vfpfcnvrt+2,w
  6767  044B  00DE               	movwf	vfpfcnvrt@ll+2
  6768  044C  0853               	movf	??_vfpfcnvrt+3,w
  6769  044D  00DF               	movwf	vfpfcnvrt@ll+3
  6770  044E  3000               	movlw	0
  6771  044F  1BDF               	btfsc	vfpfcnvrt@ll+3,7
  6772  0450  30FF               	movlw	255
  6773  0451  00E0               	movwf	vfpfcnvrt@ll+4
  6774  0452  00E1               	movwf	vfpfcnvrt@ll+5
  6775  0453  00E2               	movwf	vfpfcnvrt@ll+6
  6776  0454  00E3               	movwf	vfpfcnvrt@ll+7
  6777  0455                     l3418:
  6778                           
  6779                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 863:             
      +                          return dtoa(fp, ll);
  6780  0455  085C               	movf	vfpfcnvrt@ll,w
  6781  0456  00B0               	movwf	dtoa@d
  6782  0457  085D               	movf	vfpfcnvrt@ll+1,w
  6783  0458  00B1               	movwf	dtoa@d+1
  6784  0459  085E               	movf	vfpfcnvrt@ll+2,w
  6785  045A  00B2               	movwf	dtoa@d+2
  6786  045B  085F               	movf	vfpfcnvrt@ll+3,w
  6787  045C  00B3               	movwf	dtoa@d+3
  6788  045D  0860               	movf	vfpfcnvrt@ll+4,w
  6789  045E  00B4               	movwf	dtoa@d+4
  6790  045F  0861               	movf	vfpfcnvrt@ll+5,w
  6791  0460  00B5               	movwf	dtoa@d+5
  6792  0461  0862               	movf	vfpfcnvrt@ll+6,w
  6793  0462  00B6               	movwf	dtoa@d+6
  6794  0463  0863               	movf	vfpfcnvrt@ll+7,w
  6795  0464  00B7               	movwf	dtoa@d+7
  6796  0465  086C               	movf	vfpfcnvrt@fp,w
  6797  0466  3180  2056  3183   	fcall	_dtoa
  6798  0469  0020               	movlb	0	; select bank0
  6799  046A  0831               	movf	?_dtoa+1,w
  6800  046B  00CF               	movwf	?_vfpfcnvrt+1
  6801  046C  0830               	movf	?_dtoa,w
  6802  046D  00CE               	movwf	?_vfpfcnvrt
  6803  046E  2D75               	goto	l1079
  6804  046F                     l3422:
  6805                           
  6806                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 1204:         if 
      +                          (*fmt[0] == 'u') {
  6807  046F  0020               	movlb	0	; select bank0
  6808  0470  084E               	movf	vfpfcnvrt@fmt,w
  6809  0471  0086               	movwf	6
  6810  0472  0187               	clrf	7
  6811  0473  3F40               	moviw [0]fsr1
  6812  0474  00D0               	movwf	??_vfpfcnvrt
  6813  0475  3F41               	moviw [1]fsr1
  6814  0476  00D1               	movwf	??_vfpfcnvrt+1
  6815  0477  0850               	movf	??_vfpfcnvrt,w
  6816  0478  0084               	movwf	4
  6817  0479  0851               	movf	??_vfpfcnvrt+1,w
  6818  047A  0085               	movwf	5
  6819  047B  0012               	moviw fsr0++
  6820  047C  3A75               	xorlw	117
  6821  047D  1D03               	btfss	3,2
  6822  047E  2C80               	goto	u4181
  6823  047F  2C81               	goto	u4180
  6824  0480                     u4181:
  6825  0480  2CB5               	goto	l3432
  6826  0481                     u4180:
  6827  0481                     l3424:
  6828                           
  6829                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 1206:            
      +                           ++*fmt;
  6830  0481  084E               	movf	vfpfcnvrt@fmt,w
  6831  0482  0086               	movwf	6
  6832  0483  0187               	clrf	7
  6833  0484  3001               	movlw	1
  6834  0485  0781               	addwf	1,f
  6835  0486  3141               	addfsr 1,1
  6836  0487  1803               	skipnc
  6837  0488  0A81               	incf	1,f
  6838  0489                     l3426:
  6839                           
  6840                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 1207:            
      +                           llu = (unsigned long long)(*(unsigned int *)__va_arg(*(unsigned int **)ap, (unsigned in
      +                          t)0));
  6841  0489  084F               	movf	vfpfcnvrt@ap,w
  6842  048A  0086               	movwf	6
  6843  048B  0187               	clrf	7
  6844  048C  0801               	movf	1,w
  6845  048D  0084               	movwf	4
  6846  048E  0185               	clrf	5
  6847  048F  3002               	movlw	2
  6848  0490  0781               	addwf	1,f
  6849  0491  3F00               	moviw [0]fsr0
  6850  0492  00E4               	movwf	vfpfcnvrt@llu
  6851  0493  3F01               	moviw [1]fsr0
  6852  0494  00E5               	movwf	vfpfcnvrt@llu+1
  6853  0495  01E6               	clrf	vfpfcnvrt@llu+2
  6854  0496  01E7               	clrf	vfpfcnvrt@llu+3
  6855  0497  01E8               	clrf	vfpfcnvrt@llu+4
  6856  0498  01E9               	clrf	vfpfcnvrt@llu+5
  6857  0499  01EA               	clrf	vfpfcnvrt@llu+6
  6858  049A  01EB               	clrf	vfpfcnvrt@llu+7
  6859  049B                     l3428:
  6860                           
  6861                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 1209:            
      +                           return utoa(fp, llu);
  6862  049B  0864               	movf	vfpfcnvrt@llu,w
  6863  049C  00B0               	movwf	utoa@d
  6864  049D  0865               	movf	vfpfcnvrt@llu+1,w
  6865  049E  00B1               	movwf	utoa@d+1
  6866  049F  0866               	movf	vfpfcnvrt@llu+2,w
  6867  04A0  00B2               	movwf	utoa@d+2
  6868  04A1  0867               	movf	vfpfcnvrt@llu+3,w
  6869  04A2  00B3               	movwf	utoa@d+3
  6870  04A3  0868               	movf	vfpfcnvrt@llu+4,w
  6871  04A4  00B4               	movwf	utoa@d+4
  6872  04A5  0869               	movf	vfpfcnvrt@llu+5,w
  6873  04A6  00B5               	movwf	utoa@d+5
  6874  04A7  086A               	movf	vfpfcnvrt@llu+6,w
  6875  04A8  00B6               	movwf	utoa@d+6
  6876  04A9  086B               	movf	vfpfcnvrt@llu+7,w
  6877  04AA  00B7               	movwf	utoa@d+7
  6878  04AB  086C               	movf	vfpfcnvrt@fp,w
  6879  04AC  318E  2612  3183   	fcall	_utoa
  6880  04AF  0020               	movlb	0	; select bank0
  6881  04B0  0831               	movf	?_utoa+1,w
  6882  04B1  00CF               	movwf	?_vfpfcnvrt+1
  6883  04B2  0830               	movf	?_utoa,w
  6884  04B3  00CE               	movwf	?_vfpfcnvrt
  6885  04B4  2D75               	goto	l1079
  6886  04B5                     l3432:
  6887                           
  6888                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 1214:         if 
      +                          (!strncmp(*fmt, "lu", ((sizeof("lu")/sizeof("lu"[0]))-1))) {
  6889  04B5  084E               	movf	vfpfcnvrt@fmt,w
  6890  04B6  0086               	movwf	6
  6891  04B7  0187               	clrf	7
  6892  04B8  3F40               	moviw [0]fsr1
  6893  04B9  00F0               	movwf	strncmp@_l
  6894  04BA  3F41               	moviw [1]fsr1
  6895  04BB  00F1               	movwf	strncmp@_l+1
  6896  04BC  304A               	movlw	low (STR_17| (0+32768))
  6897  04BD  00F2               	movwf	strncmp@_r
  6898  04BE  30A0               	movlw	high (STR_17| (0+32768))
  6899  04BF  00F3               	movwf	strncmp@_r+1
  6900  04C0  3002               	movlw	2
  6901  04C1  00F4               	movwf	strncmp@n
  6902  04C2  3000               	movlw	0
  6903  04C3  00F5               	movwf	strncmp@n+1
  6904  04C4  3193  2391  3183   	fcall	_strncmp
  6905  04C7  0870               	movf	?_strncmp,w
  6906  04C8  0471               	iorwf	?_strncmp+1,w
  6907  04C9  1D03               	btfss	3,2
  6908  04CA  2CCC               	goto	u4191
  6909  04CB  2CCD               	goto	u4190
  6910  04CC                     u4191:
  6911  04CC  2D1C               	goto	l3442
  6912  04CD                     u4190:
  6913  04CD                     l3434:
  6914                           
  6915                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 1216:            
      +                           *fmt += ((sizeof("lu")/sizeof("lu"[0]))-1);
  6916  04CD  0020               	movlb	0	; select bank0
  6917  04CE  084E               	movf	vfpfcnvrt@fmt,w
  6918  04CF  0086               	movwf	6
  6919  04D0  0187               	clrf	7
  6920  04D1  3002               	movlw	2
  6921  04D2  0781               	addwf	1,f
  6922  04D3  3141               	addfsr 1,1
  6923  04D4  1803               	skipnc
  6924  04D5  0A81               	incf	1,f
  6925  04D6                     l3436:
  6926                           
  6927                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 1217:            
      +                           llu = (unsigned long long)(*(unsigned long *)__va_arg(*(unsigned long **)ap, (unsigned 
      +                          long)0));
  6928  04D6  084F               	movf	vfpfcnvrt@ap,w
  6929  04D7  0086               	movwf	6
  6930  04D8  0187               	clrf	7
  6931  04D9  0801               	movf	1,w
  6932  04DA  0084               	movwf	4
  6933  04DB  0185               	clrf	5
  6934  04DC  3004               	movlw	4
  6935  04DD  0781               	addwf	1,f
  6936  04DE  3F00               	moviw [0]fsr0
  6937  04DF  00D0               	movwf	??_vfpfcnvrt
  6938  04E0  3F01               	moviw [1]fsr0
  6939  04E1  00D1               	movwf	??_vfpfcnvrt+1
  6940  04E2  3F02               	moviw [2]fsr0
  6941  04E3  00D2               	movwf	??_vfpfcnvrt+2
  6942  04E4  3F03               	moviw [3]fsr0
  6943  04E5  00D3               	movwf	??_vfpfcnvrt+3
  6944  04E6  0850               	movf	??_vfpfcnvrt,w
  6945  04E7  00D4               	movwf	??_vfpfcnvrt+4
  6946  04E8  0851               	movf	??_vfpfcnvrt+1,w
  6947  04E9  00D5               	movwf	??_vfpfcnvrt+5
  6948  04EA  0852               	movf	??_vfpfcnvrt+2,w
  6949  04EB  00D6               	movwf	??_vfpfcnvrt+6
  6950  04EC  0853               	movf	??_vfpfcnvrt+3,w
  6951  04ED  00D7               	movwf	??_vfpfcnvrt+7
  6952  04EE  01D8               	clrf	??_vfpfcnvrt+8
  6953  04EF  01D9               	clrf	??_vfpfcnvrt+9
  6954  04F0  01DA               	clrf	??_vfpfcnvrt+10
  6955  04F1  01DB               	clrf	??_vfpfcnvrt+11
  6956  04F2  085B               	movf	??_vfpfcnvrt+11,w
  6957  04F3  00EB               	movwf	vfpfcnvrt@llu+7
  6958  04F4  085A               	movf	??_vfpfcnvrt+10,w
  6959  04F5  00EA               	movwf	vfpfcnvrt@llu+6
  6960  04F6  0859               	movf	??_vfpfcnvrt+9,w
  6961  04F7  00E9               	movwf	vfpfcnvrt@llu+5
  6962  04F8  0858               	movf	??_vfpfcnvrt+8,w
  6963  04F9  00E8               	movwf	vfpfcnvrt@llu+4
  6964  04FA  0857               	movf	??_vfpfcnvrt+7,w
  6965  04FB  00E7               	movwf	vfpfcnvrt@llu+3
  6966  04FC  0856               	movf	??_vfpfcnvrt+6,w
  6967  04FD  00E6               	movwf	vfpfcnvrt@llu+2
  6968  04FE  0855               	movf	??_vfpfcnvrt+5,w
  6969  04FF  00E5               	movwf	vfpfcnvrt@llu+1
  6970  0500  0854               	movf	??_vfpfcnvrt+4,w
  6971  0501  00E4               	movwf	vfpfcnvrt@llu
  6972  0502                     l3438:
  6973                           
  6974                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 1219:            
      +                           return utoa(fp, llu);
  6975  0502  0864               	movf	vfpfcnvrt@llu,w
  6976  0503  00B0               	movwf	utoa@d
  6977  0504  0865               	movf	vfpfcnvrt@llu+1,w
  6978  0505  00B1               	movwf	utoa@d+1
  6979  0506  0866               	movf	vfpfcnvrt@llu+2,w
  6980  0507  00B2               	movwf	utoa@d+2
  6981  0508  0867               	movf	vfpfcnvrt@llu+3,w
  6982  0509  00B3               	movwf	utoa@d+3
  6983  050A  0868               	movf	vfpfcnvrt@llu+4,w
  6984  050B  00B4               	movwf	utoa@d+4
  6985  050C  0869               	movf	vfpfcnvrt@llu+5,w
  6986  050D  00B5               	movwf	utoa@d+5
  6987  050E  086A               	movf	vfpfcnvrt@llu+6,w
  6988  050F  00B6               	movwf	utoa@d+6
  6989  0510  086B               	movf	vfpfcnvrt@llu+7,w
  6990  0511  00B7               	movwf	utoa@d+7
  6991  0512  086C               	movf	vfpfcnvrt@fp,w
  6992  0513  318E  2612  3183   	fcall	_utoa
  6993  0516  0020               	movlb	0	; select bank0
  6994  0517  0831               	movf	?_utoa+1,w
  6995  0518  00CF               	movwf	?_vfpfcnvrt+1
  6996  0519  0830               	movf	?_utoa,w
  6997  051A  00CE               	movwf	?_vfpfcnvrt
  6998  051B  2D75               	goto	l1079
  6999  051C                     l3442:
  7000                           
  7001                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 1372:         if 
      +                          ((*fmt)[0] == '%') {
  7002  051C  0020               	movlb	0	; select bank0
  7003  051D  084E               	movf	vfpfcnvrt@fmt,w
  7004  051E  0086               	movwf	6
  7005  051F  0187               	clrf	7
  7006  0520  3F40               	moviw [0]fsr1
  7007  0521  00D0               	movwf	??_vfpfcnvrt
  7008  0522  3F41               	moviw [1]fsr1
  7009  0523  00D1               	movwf	??_vfpfcnvrt+1
  7010  0524  0850               	movf	??_vfpfcnvrt,w
  7011  0525  0084               	movwf	4
  7012  0526  0851               	movf	??_vfpfcnvrt+1,w
  7013  0527  0085               	movwf	5
  7014  0528  0012               	moviw fsr0++
  7015  0529  3A25               	xorlw	37
  7016  052A  1D03               	btfss	3,2
  7017  052B  2D2D               	goto	u4201
  7018  052C  2D2E               	goto	u4200
  7019  052D                     u4201:
  7020  052D  2D47               	goto	l3452
  7021  052E                     u4200:
  7022  052E                     l3444:
  7023                           
  7024                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 1373:            
      +                           ++*fmt;
  7025  052E  084E               	movf	vfpfcnvrt@fmt,w
  7026  052F  0086               	movwf	6
  7027  0530  0187               	clrf	7
  7028  0531  3001               	movlw	1
  7029  0532  0781               	addwf	1,f
  7030  0533  3141               	addfsr 1,1
  7031  0534  1803               	skipnc
  7032  0535  0A81               	incf	1,f
  7033  0536                     l3446:
  7034                           
  7035                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 1374:            
      +                           fputc((int)'%', fp);
  7036  0536  3025               	movlw	37
  7037  0537  00F0               	movwf	fputc@c
  7038  0538  3000               	movlw	0
  7039  0539  00F1               	movwf	fputc@c+1
  7040  053A  086C               	movf	vfpfcnvrt@fp,w
  7041  053B  00D0               	movwf	??_vfpfcnvrt
  7042  053C  0850               	movf	??_vfpfcnvrt,w
  7043  053D  00F2               	movwf	fputc@fp
  7044  053E  3180  2007  3183   	fcall	_fputc
  7045  0541                     l3448:
  7046                           
  7047                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 1375:            
      +                           return 1;
  7048  0541  3001               	movlw	1
  7049  0542  0020               	movlb	0	; select bank0
  7050  0543  00CE               	movwf	?_vfpfcnvrt
  7051  0544  3000               	movlw	0
  7052  0545  00CF               	movwf	?_vfpfcnvrt+1
  7053  0546  2D75               	goto	l1079
  7054  0547                     l3452:
  7055                           
  7056                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 1379:         ++*
      +                          fmt;
  7057  0547  084E               	movf	vfpfcnvrt@fmt,w
  7058  0548  0086               	movwf	6
  7059  0549  0187               	clrf	7
  7060  054A  3001               	movlw	1
  7061  054B  0781               	addwf	1,f
  7062  054C  3141               	addfsr 1,1
  7063  054D  1803               	skipnc
  7064  054E  0A81               	incf	1,f
  7065  054F                     l3454:
  7066                           
  7067                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 1380:         ret
      +                          urn 0;
  7068  054F  01CE               	clrf	?_vfpfcnvrt
  7069  0550  01CF               	clrf	?_vfpfcnvrt+1
  7070  0551  2D75               	goto	l1079
  7071  0552                     l3458:
  7072                           
  7073                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 1384:     fputc((
      +                          int)(*fmt)[0], fp);
  7074  0552  084E               	movf	vfpfcnvrt@fmt,w
  7075  0553  0086               	movwf	6
  7076  0554  0187               	clrf	7
  7077  0555  3F40               	moviw [0]fsr1
  7078  0556  00D0               	movwf	??_vfpfcnvrt
  7079  0557  3F41               	moviw [1]fsr1
  7080  0558  00D1               	movwf	??_vfpfcnvrt+1
  7081  0559  0850               	movf	??_vfpfcnvrt,w
  7082  055A  0084               	movwf	4
  7083  055B  0851               	movf	??_vfpfcnvrt+1,w
  7084  055C  0085               	movwf	5
  7085  055D  0800               	movf	0,w	;code access
  7086  055E  00D2               	movwf	??_vfpfcnvrt+2
  7087  055F  01D3               	clrf	??_vfpfcnvrt+3
  7088  0560  0852               	movf	??_vfpfcnvrt+2,w
  7089  0561  00F0               	movwf	fputc@c
  7090  0562  0853               	movf	??_vfpfcnvrt+3,w
  7091  0563  00F1               	movwf	fputc@c+1
  7092  0564  086C               	movf	vfpfcnvrt@fp,w
  7093  0565  00D4               	movwf	??_vfpfcnvrt+4
  7094  0566  0854               	movf	??_vfpfcnvrt+4,w
  7095  0567  00F2               	movwf	fputc@fp
  7096  0568  3180  2007  3183   	fcall	_fputc
  7097  056B                     l3460:
  7098                           
  7099                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 1385:     ++*fmt;
  7100  056B  0020               	movlb	0	; select bank0
  7101  056C  084E               	movf	vfpfcnvrt@fmt,w
  7102  056D  0086               	movwf	6
  7103  056E  0187               	clrf	7
  7104  056F  3001               	movlw	1
  7105  0570  0781               	addwf	1,f
  7106  0571  3141               	addfsr 1,1
  7107  0572  1803               	skipnc
  7108  0573  0A81               	incf	1,f
  7109  0574  2D41               	goto	l3448
  7110  0575                     l1079:
  7111  0575  0008               	return
  7112  0576                     __end_of_vfpfcnvrt:
  7113                           
  7114                           	psect	text14
  7115  0E12                     __ptext14:	
  7116 ;; *************** function _utoa *****************
  7117 ;; Defined at:
  7118 ;;		line 615 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c"
  7119 ;; Parameters:    Size  Location     Type
  7120 ;;  fp              1    wreg     PTR struct _IO_FILE
  7121 ;;		 -> sprintf@f(5), 
  7122 ;;  d               8   16[BANK0 ] unsigned long long 
  7123 ;; Auto vars:     Size  Location     Type
  7124 ;;  fp              1   26[BANK0 ] PTR struct _IO_FILE
  7125 ;;		 -> sprintf@f(5), 
  7126 ;;  n               8   29[BANK0 ] unsigned long long 
  7127 ;;  i               2   37[BANK0 ] int 
  7128 ;;  w               2   27[BANK0 ] int 
  7129 ;;  p               2   24[BANK0 ] int 
  7130 ;; Return value:  Size  Location     Type
  7131 ;;                  2   16[BANK0 ] int 
  7132 ;; Registers used:
  7133 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  7134 ;; Tracked objects:
  7135 ;;		On entry : 0/0
  7136 ;;		On exit  : 0/0
  7137 ;;		Unchanged: 0/0
  7138 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  7139 ;;      Params:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7140 ;;      Locals:         0      15       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7141 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7142 ;;      Totals:         1      23       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7143 ;;Total ram usage:       24 bytes
  7144 ;; Hardware stack levels used: 1
  7145 ;; Hardware stack levels required when called: 4
  7146 ;; This function calls:
  7147 ;;		___lodiv
  7148 ;;		___lomod
  7149 ;;		_pad
  7150 ;; This function is called by:
  7151 ;;		_vfpfcnvrt
  7152 ;; This function uses a non-reentrant model
  7153 ;;
  7154                           
  7155                           
  7156                           ;psect for function _utoa
  7157  0E12                     _utoa:
  7158                           
  7159                           ;incstack = 0
  7160                           ; Regs used in _utoa: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  7161                           ;utoa@fp stored from wreg
  7162  0E12  0020               	movlb	0	; select bank0
  7163  0E13  00BA               	movwf	utoa@fp
  7164  0E14                     l2904:
  7165                           
  7166                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 615: static int u
      +                          toa(FILE *fp, unsigned long long d);C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99
      +                          \common\doprnt.c: 616: {;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\dop
      +                          rnt.c: 617:     int i, p, w;;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common
      +                          \doprnt.c: 618:     unsigned long long n;;C:\Program Files\Microchip\xc8\v2.32\pic\sourc
      +                          es\c99\common\doprnt.c: 621:     if (!(prec < 0)) {
  7167  0E14  0021               	movlb	1	; select bank1
  7168  0E15  1BE1               	btfsc	(_prec+1)^(0+128),7
  7169  0E16  2E18               	goto	u3091
  7170  0E17  2E19               	goto	u3090
  7171  0E18                     u3091:
  7172  0E18  2E1D               	goto	l1060
  7173  0E19                     u3090:
  7174  0E19                     l2906:
  7175                           
  7176                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 622:         flag
      +                          s &= ~(1 << 1);
  7177  0E19  30FD               	movlw	253
  7178  0E1A  05E2               	andwf	_flags^(0+128),f
  7179  0E1B  30FF               	movlw	255
  7180  0E1C  05E3               	andwf	(_flags+1)^(0+128),f
  7181  0E1D                     l1060:	
  7182                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 623:     }
  7183                           
  7184                           
  7185                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 624:     p = (0 <
      +                           prec) ? prec : 1;
  7186  0E1D  0861               	movf	(_prec+1)^(0+128),w
  7187  0E1E  3A80               	xorlw	128
  7188  0E1F  00FD               	movwf	??_utoa
  7189  0E20  3080               	movlw	128
  7190  0E21  027D               	subwf	??_utoa,w
  7191  0E22  1D03               	skipz
  7192  0E23  2E26               	goto	u3105
  7193  0E24  3001               	movlw	1
  7194  0E25  0260               	subwf	_prec^(0+128),w
  7195  0E26                     u3105:
  7196  0E26  1803               	skipnc
  7197  0E27  2E29               	goto	u3101
  7198  0E28  2E2A               	goto	u3100
  7199  0E29                     u3101:
  7200  0E29  2E30               	goto	l2910
  7201  0E2A                     u3100:
  7202  0E2A                     l2908:
  7203  0E2A  3001               	movlw	1
  7204  0E2B  0020               	movlb	0	; select bank0
  7205  0E2C  00B8               	movwf	utoa@p
  7206  0E2D  3000               	movlw	0
  7207  0E2E  00B9               	movwf	utoa@p+1
  7208  0E2F  2E38               	goto	l1064
  7209  0E30                     l2910:
  7210  0E30  0021               	movlb	1	; select bank1
  7211  0E31  0861               	movf	(_prec+1)^(0+128),w
  7212  0E32  0020               	movlb	0	; select bank0
  7213  0E33  00B9               	movwf	utoa@p+1
  7214  0E34  0021               	movlb	1	; select bank1
  7215  0E35  0860               	movf	_prec^(0+128),w
  7216  0E36  0020               	movlb	0	; select bank0
  7217  0E37  00B8               	movwf	utoa@p
  7218  0E38                     l1064:
  7219                           
  7220                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 625:     w = widt
      +                          h;
  7221  0E38  0021               	movlb	1	; select bank1
  7222  0E39  085F               	movf	(_width+1)^(0+128),w
  7223  0E3A  0020               	movlb	0	; select bank0
  7224  0E3B  00BC               	movwf	utoa@w+1
  7225  0E3C  0021               	movlb	1	; select bank1
  7226  0E3D  085E               	movf	_width^(0+128),w
  7227  0E3E  0020               	movlb	0	; select bank0
  7228  0E3F  00BB               	movwf	utoa@w
  7229  0E40                     l2912:
  7230                           
  7231                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 628:     n = d;
  7232  0E40  0830               	movf	utoa@d,w
  7233  0E41  00BD               	movwf	utoa@n
  7234  0E42  0831               	movf	utoa@d+1,w
  7235  0E43  00BE               	movwf	utoa@n+1
  7236  0E44  0832               	movf	utoa@d+2,w
  7237  0E45  00BF               	movwf	utoa@n+2
  7238  0E46  0833               	movf	utoa@d+3,w
  7239  0E47  00C0               	movwf	utoa@n+3
  7240  0E48  0834               	movf	utoa@d+4,w
  7241  0E49  00C1               	movwf	utoa@n+4
  7242  0E4A  0835               	movf	utoa@d+5,w
  7243  0E4B  00C2               	movwf	utoa@n+5
  7244  0E4C  0836               	movf	utoa@d+6,w
  7245  0E4D  00C3               	movwf	utoa@n+6
  7246  0E4E  0837               	movf	utoa@d+7,w
  7247  0E4F  00C4               	movwf	utoa@n+7
  7248                           
  7249                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 629:     i = size
      +                          of(dbuf) - 1;
  7250  0E50  301F               	movlw	31
  7251  0E51  00C5               	movwf	utoa@i
  7252  0E52  3000               	movlw	0
  7253  0E53  00C6               	movwf	utoa@i+1
  7254  0E54                     l2914:
  7255                           
  7256                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 630:     dbuf[i] 
      +                          = '\0';
  7257  0E54  0023               	movlb	3	; select bank3
  7258  0E55  01BF               	clrf	(_dbuf^(0+384)+31)
  7259                           
  7260                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 631:     while (i
      +                           && (n || (0 < p) || ((0 < w) && (flags & (1 << 1))))) {
  7261  0E56  2EB8               	goto	l2926
  7262  0E57                     l2916:
  7263                           
  7264                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 632:         --i;
  7265  0E57  30FF               	movlw	255
  7266  0E58  0020               	movlb	0	; select bank0
  7267  0E59  07C5               	addwf	utoa@i,f
  7268  0E5A  30FF               	movlw	255
  7269  0E5B  3DC6               	addwfc	utoa@i+1,f
  7270  0E5C                     l2918:
  7271                           
  7272                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 633:         dbuf
      +                          [i] = '0' + (n % 10);
  7273  0E5C  300A               	movlw	10
  7274  0E5D  00A0               	movwf	___lomod@divisor
  7275  0E5E  01A1               	clrf	___lomod@divisor+1
  7276  0E5F  01A2               	clrf	___lomod@divisor+2
  7277  0E60  01A3               	clrf	___lomod@divisor+3
  7278  0E61  01A4               	clrf	___lomod@divisor+4
  7279  0E62  01A5               	clrf	___lomod@divisor+5
  7280  0E63  01A6               	clrf	___lomod@divisor+6
  7281  0E64  01A7               	clrf	___lomod@divisor+7
  7282  0E65  083D               	movf	utoa@n,w
  7283  0E66  00A8               	movwf	___lomod@dividend
  7284  0E67  083E               	movf	utoa@n+1,w
  7285  0E68  00A9               	movwf	___lomod@dividend+1
  7286  0E69  083F               	movf	utoa@n+2,w
  7287  0E6A  00AA               	movwf	___lomod@dividend+2
  7288  0E6B  0840               	movf	utoa@n+3,w
  7289  0E6C  00AB               	movwf	___lomod@dividend+3
  7290  0E6D  0841               	movf	utoa@n+4,w
  7291  0E6E  00AC               	movwf	___lomod@dividend+4
  7292  0E6F  0842               	movf	utoa@n+5,w
  7293  0E70  00AD               	movwf	___lomod@dividend+5
  7294  0E71  0843               	movf	utoa@n+6,w
  7295  0E72  00AE               	movwf	___lomod@dividend+6
  7296  0E73  0844               	movf	utoa@n+7,w
  7297  0E74  00AF               	movwf	___lomod@dividend+7
  7298  0E75  3194  244C  318E   	fcall	___lomod
  7299  0E78  0020               	movlb	0	; select bank0
  7300  0E79  0820               	movf	?___lomod,w
  7301  0E7A  3E30               	addlw	48
  7302  0E7B  00FD               	movwf	??_utoa
  7303  0E7C  0845               	movf	utoa@i,w
  7304  0E7D  3EA0               	addlw	(low (_dbuf| (0+256)))& (0+255)
  7305  0E7E  0086               	movwf	6
  7306  0E7F  3001               	movlw	1	; select bank3/4
  7307  0E80  0087               	movwf	7
  7308  0E81  087D               	movf	??_utoa,w
  7309  0E82  0081               	movwf	1
  7310  0E83                     l2920:
  7311                           
  7312                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 634:         --p;
  7313  0E83  30FF               	movlw	255
  7314  0E84  07B8               	addwf	utoa@p,f
  7315  0E85  30FF               	movlw	255
  7316  0E86  3DB9               	addwfc	utoa@p+1,f
  7317  0E87                     l2922:
  7318                           
  7319                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 635:         --w;
  7320  0E87  30FF               	movlw	255
  7321  0E88  07BB               	addwf	utoa@w,f
  7322  0E89  30FF               	movlw	255
  7323  0E8A  3DBC               	addwfc	utoa@w+1,f
  7324  0E8B                     l2924:
  7325                           
  7326                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 636:         n = 
      +                          n / 10;
  7327  0E8B  300A               	movlw	10
  7328  0E8C  00A0               	movwf	___lodiv@divisor
  7329  0E8D  01A1               	clrf	___lodiv@divisor+1
  7330  0E8E  01A2               	clrf	___lodiv@divisor+2
  7331  0E8F  01A3               	clrf	___lodiv@divisor+3
  7332  0E90  01A4               	clrf	___lodiv@divisor+4
  7333  0E91  01A5               	clrf	___lodiv@divisor+5
  7334  0E92  01A6               	clrf	___lodiv@divisor+6
  7335  0E93  01A7               	clrf	___lodiv@divisor+7
  7336  0E94  083D               	movf	utoa@n,w
  7337  0E95  00A8               	movwf	___lodiv@dividend
  7338  0E96  083E               	movf	utoa@n+1,w
  7339  0E97  00A9               	movwf	___lodiv@dividend+1
  7340  0E98  083F               	movf	utoa@n+2,w
  7341  0E99  00AA               	movwf	___lodiv@dividend+2
  7342  0E9A  0840               	movf	utoa@n+3,w
  7343  0E9B  00AB               	movwf	___lodiv@dividend+3
  7344  0E9C  0841               	movf	utoa@n+4,w
  7345  0E9D  00AC               	movwf	___lodiv@dividend+4
  7346  0E9E  0842               	movf	utoa@n+5,w
  7347  0E9F  00AD               	movwf	___lodiv@dividend+5
  7348  0EA0  0843               	movf	utoa@n+6,w
  7349  0EA1  00AE               	movwf	___lodiv@dividend+6
  7350  0EA2  0844               	movf	utoa@n+7,w
  7351  0EA3  00AF               	movwf	___lodiv@dividend+7
  7352  0EA4  3188  2008  318E   	fcall	___lodiv
  7353  0EA7  0020               	movlb	0	; select bank0
  7354  0EA8  0820               	movf	?___lodiv,w
  7355  0EA9  00BD               	movwf	utoa@n
  7356  0EAA  0821               	movf	?___lodiv+1,w
  7357  0EAB  00BE               	movwf	utoa@n+1
  7358  0EAC  0822               	movf	?___lodiv+2,w
  7359  0EAD  00BF               	movwf	utoa@n+2
  7360  0EAE  0823               	movf	?___lodiv+3,w
  7361  0EAF  00C0               	movwf	utoa@n+3
  7362  0EB0  0824               	movf	?___lodiv+4,w
  7363  0EB1  00C1               	movwf	utoa@n+4
  7364  0EB2  0825               	movf	?___lodiv+5,w
  7365  0EB3  00C2               	movwf	utoa@n+5
  7366  0EB4  0826               	movf	?___lodiv+6,w
  7367  0EB5  00C3               	movwf	utoa@n+6
  7368  0EB6  0827               	movf	?___lodiv+7,w
  7369  0EB7  00C4               	movwf	utoa@n+7
  7370  0EB8                     l2926:
  7371                           
  7372                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 631:     while (i
      +                           && (n || (0 < p) || ((0 < w) && (flags & (1 << 1))))) {
  7373  0EB8  0020               	movlb	0	; select bank0
  7374  0EB9  0845               	movf	utoa@i,w
  7375  0EBA  0446               	iorwf	utoa@i+1,w
  7376  0EBB  1903               	btfsc	3,2
  7377  0EBC  2EBE               	goto	u3111
  7378  0EBD  2EBF               	goto	u3110
  7379  0EBE                     u3111:
  7380  0EBE  2EEB               	goto	l2936
  7381  0EBF                     u3110:
  7382  0EBF                     l2928:
  7383  0EBF  083D               	movf	utoa@n,w
  7384  0EC0  043E               	iorwf	utoa@n+1,w
  7385  0EC1  043F               	iorwf	utoa@n+2,w
  7386  0EC2  0440               	iorwf	utoa@n+3,w
  7387  0EC3  0441               	iorwf	utoa@n+4,w
  7388  0EC4  0442               	iorwf	utoa@n+5,w
  7389  0EC5  0443               	iorwf	utoa@n+6,w
  7390  0EC6  0444               	iorwf	utoa@n+7,w
  7391  0EC7  1D03               	skipz
  7392  0EC8  2ECA               	goto	u3121
  7393  0EC9  2ECB               	goto	u3120
  7394  0ECA                     u3121:
  7395  0ECA  2E57               	goto	l2916
  7396  0ECB                     u3120:
  7397  0ECB                     l2930:
  7398  0ECB  0839               	movf	utoa@p+1,w
  7399  0ECC  3A80               	xorlw	128
  7400  0ECD  00FD               	movwf	??_utoa
  7401  0ECE  3080               	movlw	128
  7402  0ECF  027D               	subwf	??_utoa,w
  7403  0ED0  1D03               	skipz
  7404  0ED1  2ED4               	goto	u3135
  7405  0ED2  3001               	movlw	1
  7406  0ED3  0238               	subwf	utoa@p,w
  7407  0ED4                     u3135:
  7408  0ED4  1803               	skipnc
  7409  0ED5  2ED7               	goto	u3131
  7410  0ED6  2ED8               	goto	u3130
  7411  0ED7                     u3131:
  7412  0ED7  2E57               	goto	l2916
  7413  0ED8                     u3130:
  7414  0ED8                     l2932:
  7415  0ED8  0020               	movlb	0	; select bank0
  7416  0ED9  083C               	movf	utoa@w+1,w
  7417  0EDA  3A80               	xorlw	128
  7418  0EDB  00FD               	movwf	??_utoa
  7419  0EDC  3080               	movlw	128
  7420  0EDD  027D               	subwf	??_utoa,w
  7421  0EDE  1D03               	skipz
  7422  0EDF  2EE2               	goto	u3145
  7423  0EE0  3001               	movlw	1
  7424  0EE1  023B               	subwf	utoa@w,w
  7425  0EE2                     u3145:
  7426  0EE2  1C03               	skipc
  7427  0EE3  2EE5               	goto	u3141
  7428  0EE4  2EE6               	goto	u3140
  7429  0EE5                     u3141:
  7430  0EE5  2EEB               	goto	l2936
  7431  0EE6                     u3140:
  7432  0EE6                     l2934:
  7433  0EE6  0021               	movlb	1	; select bank1
  7434  0EE7  18E2               	btfsc	_flags^(0+128),1
  7435  0EE8  2EEA               	goto	u3151
  7436  0EE9  2EEB               	goto	u3150
  7437  0EEA                     u3151:
  7438  0EEA  2E57               	goto	l2916
  7439  0EEB                     u3150:
  7440  0EEB                     l2936:
  7441                           
  7442                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 640:     return p
      +                          ad(fp, &dbuf[i], w);
  7443  0EEB  0020               	movlb	0	; select bank0
  7444  0EEC  0845               	movf	utoa@i,w
  7445  0EED  3EA0               	addlw	(low (_dbuf| (0+256)))& (0+255)
  7446  0EEE  00FD               	movwf	??_utoa
  7447  0EEF  087D               	movf	??_utoa,w
  7448  0EF0  00A4               	movwf	pad@buf
  7449  0EF1  083C               	movf	utoa@w+1,w
  7450  0EF2  00A6               	movwf	pad@p+1
  7451  0EF3  083B               	movf	utoa@w,w
  7452  0EF4  00A5               	movwf	pad@p
  7453  0EF5  083A               	movf	utoa@fp,w
  7454  0EF6  3192  2283  318E   	fcall	_pad
  7455  0EF9  0020               	movlb	0	; select bank0
  7456  0EFA  0825               	movf	?_pad+1,w
  7457  0EFB  00B1               	movwf	?_utoa+1
  7458  0EFC  0824               	movf	?_pad,w
  7459  0EFD  00B0               	movwf	?_utoa
  7460  0EFE                     l1072:
  7461  0EFE  0008               	return
  7462  0EFF                     __end_of_utoa:
  7463                           
  7464                           	psect	text15
  7465  144C                     __ptext15:	
  7466 ;; *************** function ___lomod *****************
  7467 ;; Defined at:
  7468 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\lomod.c"
  7469 ;; Parameters:    Size  Location     Type
  7470 ;;  divisor         8    0[BANK0 ] unsigned long long 
  7471 ;;  dividend        8    8[BANK0 ] unsigned long long 
  7472 ;; Auto vars:     Size  Location     Type
  7473 ;;  counter         1    1[COMMON] unsigned char 
  7474 ;; Return value:  Size  Location     Type
  7475 ;;                  8    0[BANK0 ] unsigned long long 
  7476 ;; Registers used:
  7477 ;;		wreg, status,2, status,0
  7478 ;; Tracked objects:
  7479 ;;		On entry : 0/0
  7480 ;;		On exit  : 0/0
  7481 ;;		Unchanged: 0/0
  7482 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  7483 ;;      Params:         0      16       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7484 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7485 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7486 ;;      Totals:         2      16       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7487 ;;Total ram usage:       18 bytes
  7488 ;; Hardware stack levels used: 1
  7489 ;; This function calls:
  7490 ;;		Nothing
  7491 ;; This function is called by:
  7492 ;;		_utoa
  7493 ;; This function uses a non-reentrant model
  7494 ;;
  7495                           
  7496                           
  7497                           ;psect for function ___lomod
  7498  144C                     ___lomod:
  7499  144C                     l2758:	
  7500                           ;incstack = 0
  7501                           ; Regs used in ___lomod: [wreg+status,2+status,0]
  7502                           
  7503  144C  0020               	movlb	0	; select bank0
  7504  144D  0820               	movf	___lomod@divisor,w
  7505  144E  0421               	iorwf	___lomod@divisor+1,w
  7506  144F  0422               	iorwf	___lomod@divisor+2,w
  7507  1450  0423               	iorwf	___lomod@divisor+3,w
  7508  1451  0424               	iorwf	___lomod@divisor+4,w
  7509  1452  0425               	iorwf	___lomod@divisor+5,w
  7510  1453  0426               	iorwf	___lomod@divisor+6,w
  7511  1454  0427               	iorwf	___lomod@divisor+7,w
  7512  1455  1903               	skipnz
  7513  1456  2C58               	goto	u2811
  7514  1457  2C59               	goto	u2810
  7515  1458                     u2811:
  7516  1458  2CAC               	goto	l777
  7517  1459                     u2810:
  7518  1459                     l2760:
  7519  1459  01F1               	clrf	___lomod@counter
  7520  145A  0AF1               	incf	___lomod@counter,f
  7521  145B  2C68               	goto	l2766
  7522  145C                     l2762:
  7523  145C  35A0               	lslf	___lomod@divisor,f
  7524  145D  0DA1               	rlf	___lomod@divisor+1,f
  7525  145E  0DA2               	rlf	___lomod@divisor+2,f
  7526  145F  0DA3               	rlf	___lomod@divisor+3,f
  7527  1460  0DA4               	rlf	___lomod@divisor+4,f
  7528  1461  0DA5               	rlf	___lomod@divisor+5,f
  7529  1462  0DA6               	rlf	___lomod@divisor+6,f
  7530  1463  0DA7               	rlf	___lomod@divisor+7,f
  7531  1464                     l2764:
  7532  1464  3001               	movlw	1
  7533  1465  00F0               	movwf	??___lomod
  7534  1466  0870               	movf	??___lomod,w
  7535  1467  07F1               	addwf	___lomod@counter,f
  7536  1468                     l2766:
  7537  1468  1FA7               	btfss	___lomod@divisor+7,7
  7538  1469  2C6B               	goto	u2821
  7539  146A  2C6C               	goto	u2820
  7540  146B                     u2821:
  7541  146B  2C5C               	goto	l2762
  7542  146C                     u2820:
  7543  146C                     l2768:
  7544  146C  0827               	movf	___lomod@divisor+7,w
  7545  146D  022F               	subwf	___lomod@dividend+7,w
  7546  146E  1D03               	skipz
  7547  146F  2C8A               	goto	u2835
  7548  1470  0826               	movf	___lomod@divisor+6,w
  7549  1471  022E               	subwf	___lomod@dividend+6,w
  7550  1472  1D03               	skipz
  7551  1473  2C8A               	goto	u2835
  7552  1474  0825               	movf	___lomod@divisor+5,w
  7553  1475  022D               	subwf	___lomod@dividend+5,w
  7554  1476  1D03               	skipz
  7555  1477  2C8A               	goto	u2835
  7556  1478  0824               	movf	___lomod@divisor+4,w
  7557  1479  022C               	subwf	___lomod@dividend+4,w
  7558  147A  1D03               	skipz
  7559  147B  2C8A               	goto	u2835
  7560  147C  0823               	movf	___lomod@divisor+3,w
  7561  147D  022B               	subwf	___lomod@dividend+3,w
  7562  147E  1D03               	skipz
  7563  147F  2C8A               	goto	u2835
  7564  1480  0822               	movf	___lomod@divisor+2,w
  7565  1481  022A               	subwf	___lomod@dividend+2,w
  7566  1482  1D03               	skipz
  7567  1483  2C8A               	goto	u2835
  7568  1484  0821               	movf	___lomod@divisor+1,w
  7569  1485  0229               	subwf	___lomod@dividend+1,w
  7570  1486  1D03               	skipz
  7571  1487  2C8A               	goto	u2835
  7572  1488  0820               	movf	___lomod@divisor,w
  7573  1489  0228               	subwf	___lomod@dividend,w
  7574  148A                     u2835:
  7575  148A  1C03               	skipc
  7576  148B  2C8D               	goto	u2831
  7577  148C  2C8E               	goto	u2830
  7578  148D                     u2831:
  7579  148D  2C9E               	goto	l2772
  7580  148E                     u2830:
  7581  148E                     l2770:
  7582  148E  0820               	movf	___lomod@divisor,w
  7583  148F  02A8               	subwf	___lomod@dividend,f
  7584  1490  0821               	movf	___lomod@divisor+1,w
  7585  1491  3BA9               	subwfb	___lomod@dividend+1,f
  7586  1492  0822               	movf	___lomod@divisor+2,w
  7587  1493  3BAA               	subwfb	___lomod@dividend+2,f
  7588  1494  0823               	movf	___lomod@divisor+3,w
  7589  1495  3BAB               	subwfb	___lomod@dividend+3,f
  7590  1496  0824               	movf	___lomod@divisor+4,w
  7591  1497  3BAC               	subwfb	___lomod@dividend+4,f
  7592  1498  0825               	movf	___lomod@divisor+5,w
  7593  1499  3BAD               	subwfb	___lomod@dividend+5,f
  7594  149A  0826               	movf	___lomod@divisor+6,w
  7595  149B  3BAE               	subwfb	___lomod@dividend+6,f
  7596  149C  0827               	movf	___lomod@divisor+7,w
  7597  149D  3BAF               	subwfb	___lomod@dividend+7,f
  7598  149E                     l2772:
  7599  149E  36A7               	lsrf	___lomod@divisor+7,f
  7600  149F  0CA6               	rrf	___lomod@divisor+6,f
  7601  14A0  0CA5               	rrf	___lomod@divisor+5,f
  7602  14A1  0CA4               	rrf	___lomod@divisor+4,f
  7603  14A2  0CA3               	rrf	___lomod@divisor+3,f
  7604  14A3  0CA2               	rrf	___lomod@divisor+2,f
  7605  14A4  0CA1               	rrf	___lomod@divisor+1,f
  7606  14A5  0CA0               	rrf	___lomod@divisor,f
  7607  14A6  3001               	movlw	1
  7608  14A7  02F1               	subwf	___lomod@counter,f
  7609  14A8  1D03               	btfss	3,2
  7610  14A9  2CAB               	goto	u2841
  7611  14AA  2CAC               	goto	u2840
  7612  14AB                     u2841:
  7613  14AB  2C6C               	goto	l2768
  7614  14AC                     u2840:
  7615  14AC                     l777:
  7616  14AC  0828               	movf	___lomod@dividend,w
  7617  14AD  00A0               	movwf	?___lomod
  7618  14AE  0829               	movf	___lomod@dividend+1,w
  7619  14AF  00A1               	movwf	?___lomod+1
  7620  14B0  082A               	movf	___lomod@dividend+2,w
  7621  14B1  00A2               	movwf	?___lomod+2
  7622  14B2  082B               	movf	___lomod@dividend+3,w
  7623  14B3  00A3               	movwf	?___lomod+3
  7624  14B4  082C               	movf	___lomod@dividend+4,w
  7625  14B5  00A4               	movwf	?___lomod+4
  7626  14B6  082D               	movf	___lomod@dividend+5,w
  7627  14B7  00A5               	movwf	?___lomod+5
  7628  14B8  082E               	movf	___lomod@dividend+6,w
  7629  14B9  00A6               	movwf	?___lomod+6
  7630  14BA  082F               	movf	___lomod@dividend+7,w
  7631  14BB  00A7               	movwf	?___lomod+7
  7632  14BC                     l784:
  7633  14BC  0008               	return
  7634  14BD                     __end_of___lomod:
  7635                           
  7636                           	psect	text16
  7637  0808                     __ptext16:	
  7638 ;; *************** function ___lodiv *****************
  7639 ;; Defined at:
  7640 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\lodiv.c"
  7641 ;; Parameters:    Size  Location     Type
  7642 ;;  divisor         8    0[BANK0 ] unsigned long long 
  7643 ;;  dividend        8    8[BANK0 ] unsigned long long 
  7644 ;; Auto vars:     Size  Location     Type
  7645 ;;  quotient        8    1[COMMON] unsigned long long 
  7646 ;;  counter         1    9[COMMON] unsigned char 
  7647 ;; Return value:  Size  Location     Type
  7648 ;;                  8    0[BANK0 ] unsigned long long 
  7649 ;; Registers used:
  7650 ;;		wreg, fsr1l, fsr1h, status,2, status,0
  7651 ;; Tracked objects:
  7652 ;;		On entry : 0/0
  7653 ;;		On exit  : 0/0
  7654 ;;		Unchanged: 0/0
  7655 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  7656 ;;      Params:         0      16       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7657 ;;      Locals:         9       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7658 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7659 ;;      Totals:        10      16       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7660 ;;Total ram usage:       26 bytes
  7661 ;; Hardware stack levels used: 1
  7662 ;; This function calls:
  7663 ;;		Nothing
  7664 ;; This function is called by:
  7665 ;;		_utoa
  7666 ;; This function uses a non-reentrant model
  7667 ;;
  7668                           
  7669                           
  7670                           ;psect for function ___lodiv
  7671  0808                     ___lodiv:
  7672  0808                     l2736:	
  7673                           ;incstack = 0
  7674                           ; Regs used in ___lodiv: [wreg+fsr1l+fsr1h+status,2+status,0]
  7675                           
  7676  0808  3071               	movlw	low ___lodiv@quotient
  7677  0809  0086               	movwf	6
  7678  080A  3000               	movlw	high ___lodiv@quotient
  7679  080B  0087               	movwf	7
  7680  080C  3008               	movlw	8
  7681  080D  00F0               	movwf	??___lodiv
  7682  080E  3000               	movlw	0
  7683  080F                     u2760:
  7684  080F  001E               	movwi fsr1++
  7685  0810  0BF0               	decfsz	??___lodiv,f
  7686  0811  280F               	goto	u2760
  7687  0812                     l2738:
  7688  0812  0020               	movlb	0	; select bank0
  7689  0813  0820               	movf	___lodiv@divisor,w
  7690  0814  0421               	iorwf	___lodiv@divisor+1,w
  7691  0815  0422               	iorwf	___lodiv@divisor+2,w
  7692  0816  0423               	iorwf	___lodiv@divisor+3,w
  7693  0817  0424               	iorwf	___lodiv@divisor+4,w
  7694  0818  0425               	iorwf	___lodiv@divisor+5,w
  7695  0819  0426               	iorwf	___lodiv@divisor+6,w
  7696  081A  0427               	iorwf	___lodiv@divisor+7,w
  7697  081B  1903               	skipnz
  7698  081C  281E               	goto	u2771
  7699  081D  281F               	goto	u2770
  7700  081E                     u2771:
  7701  081E  287B               	goto	l767
  7702  081F                     u2770:
  7703  081F                     l2740:
  7704  081F  01F9               	clrf	___lodiv@counter
  7705  0820  0AF9               	incf	___lodiv@counter,f
  7706  0821  282E               	goto	l2746
  7707  0822                     l2742:
  7708  0822  35A0               	lslf	___lodiv@divisor,f
  7709  0823  0DA1               	rlf	___lodiv@divisor+1,f
  7710  0824  0DA2               	rlf	___lodiv@divisor+2,f
  7711  0825  0DA3               	rlf	___lodiv@divisor+3,f
  7712  0826  0DA4               	rlf	___lodiv@divisor+4,f
  7713  0827  0DA5               	rlf	___lodiv@divisor+5,f
  7714  0828  0DA6               	rlf	___lodiv@divisor+6,f
  7715  0829  0DA7               	rlf	___lodiv@divisor+7,f
  7716  082A                     l2744:
  7717  082A  3001               	movlw	1
  7718  082B  00F0               	movwf	??___lodiv
  7719  082C  0870               	movf	??___lodiv,w
  7720  082D  07F9               	addwf	___lodiv@counter,f
  7721  082E                     l2746:
  7722  082E  1FA7               	btfss	___lodiv@divisor+7,7
  7723  082F  2831               	goto	u2781
  7724  0830  2832               	goto	u2780
  7725  0831                     u2781:
  7726  0831  2822               	goto	l2742
  7727  0832                     u2780:
  7728  0832                     l2748:
  7729  0832  35F1               	lslf	___lodiv@quotient,f
  7730  0833  0DF2               	rlf	___lodiv@quotient+1,f
  7731  0834  0DF3               	rlf	___lodiv@quotient+2,f
  7732  0835  0DF4               	rlf	___lodiv@quotient+3,f
  7733  0836  0DF5               	rlf	___lodiv@quotient+4,f
  7734  0837  0DF6               	rlf	___lodiv@quotient+5,f
  7735  0838  0DF7               	rlf	___lodiv@quotient+6,f
  7736  0839  0DF8               	rlf	___lodiv@quotient+7,f
  7737  083A                     l2750:
  7738  083A  0827               	movf	___lodiv@divisor+7,w
  7739  083B  022F               	subwf	___lodiv@dividend+7,w
  7740  083C  1D03               	skipz
  7741  083D  2858               	goto	u2795
  7742  083E  0826               	movf	___lodiv@divisor+6,w
  7743  083F  022E               	subwf	___lodiv@dividend+6,w
  7744  0840  1D03               	skipz
  7745  0841  2858               	goto	u2795
  7746  0842  0825               	movf	___lodiv@divisor+5,w
  7747  0843  022D               	subwf	___lodiv@dividend+5,w
  7748  0844  1D03               	skipz
  7749  0845  2858               	goto	u2795
  7750  0846  0824               	movf	___lodiv@divisor+4,w
  7751  0847  022C               	subwf	___lodiv@dividend+4,w
  7752  0848  1D03               	skipz
  7753  0849  2858               	goto	u2795
  7754  084A  0823               	movf	___lodiv@divisor+3,w
  7755  084B  022B               	subwf	___lodiv@dividend+3,w
  7756  084C  1D03               	skipz
  7757  084D  2858               	goto	u2795
  7758  084E  0822               	movf	___lodiv@divisor+2,w
  7759  084F  022A               	subwf	___lodiv@dividend+2,w
  7760  0850  1D03               	skipz
  7761  0851  2858               	goto	u2795
  7762  0852  0821               	movf	___lodiv@divisor+1,w
  7763  0853  0229               	subwf	___lodiv@dividend+1,w
  7764  0854  1D03               	skipz
  7765  0855  2858               	goto	u2795
  7766  0856  0820               	movf	___lodiv@divisor,w
  7767  0857  0228               	subwf	___lodiv@dividend,w
  7768  0858                     u2795:
  7769  0858  1C03               	skipc
  7770  0859  285B               	goto	u2791
  7771  085A  285C               	goto	u2790
  7772  085B                     u2791:
  7773  085B  286D               	goto	l2756
  7774  085C                     u2790:
  7775  085C                     l2752:
  7776  085C  0820               	movf	___lodiv@divisor,w
  7777  085D  02A8               	subwf	___lodiv@dividend,f
  7778  085E  0821               	movf	___lodiv@divisor+1,w
  7779  085F  3BA9               	subwfb	___lodiv@dividend+1,f
  7780  0860  0822               	movf	___lodiv@divisor+2,w
  7781  0861  3BAA               	subwfb	___lodiv@dividend+2,f
  7782  0862  0823               	movf	___lodiv@divisor+3,w
  7783  0863  3BAB               	subwfb	___lodiv@dividend+3,f
  7784  0864  0824               	movf	___lodiv@divisor+4,w
  7785  0865  3BAC               	subwfb	___lodiv@dividend+4,f
  7786  0866  0825               	movf	___lodiv@divisor+5,w
  7787  0867  3BAD               	subwfb	___lodiv@dividend+5,f
  7788  0868  0826               	movf	___lodiv@divisor+6,w
  7789  0869  3BAE               	subwfb	___lodiv@dividend+6,f
  7790  086A  0827               	movf	___lodiv@divisor+7,w
  7791  086B  3BAF               	subwfb	___lodiv@dividend+7,f
  7792  086C                     l2754:
  7793  086C  1471               	bsf	___lodiv@quotient,0
  7794  086D                     l2756:
  7795  086D  36A7               	lsrf	___lodiv@divisor+7,f
  7796  086E  0CA6               	rrf	___lodiv@divisor+6,f
  7797  086F  0CA5               	rrf	___lodiv@divisor+5,f
  7798  0870  0CA4               	rrf	___lodiv@divisor+4,f
  7799  0871  0CA3               	rrf	___lodiv@divisor+3,f
  7800  0872  0CA2               	rrf	___lodiv@divisor+2,f
  7801  0873  0CA1               	rrf	___lodiv@divisor+1,f
  7802  0874  0CA0               	rrf	___lodiv@divisor,f
  7803  0875  3001               	movlw	1
  7804  0876  02F9               	subwf	___lodiv@counter,f
  7805  0877  1D03               	btfss	3,2
  7806  0878  287A               	goto	u2801
  7807  0879  287B               	goto	u2800
  7808  087A                     u2801:
  7809  087A  2832               	goto	l2748
  7810  087B                     u2800:
  7811  087B                     l767:
  7812  087B  0871               	movf	___lodiv@quotient,w
  7813  087C  00A0               	movwf	?___lodiv
  7814  087D  0872               	movf	___lodiv@quotient+1,w
  7815  087E  00A1               	movwf	?___lodiv+1
  7816  087F  0873               	movf	___lodiv@quotient+2,w
  7817  0880  00A2               	movwf	?___lodiv+2
  7818  0881  0874               	movf	___lodiv@quotient+3,w
  7819  0882  00A3               	movwf	?___lodiv+3
  7820  0883  0875               	movf	___lodiv@quotient+4,w
  7821  0884  00A4               	movwf	?___lodiv+4
  7822  0885  0876               	movf	___lodiv@quotient+5,w
  7823  0886  00A5               	movwf	?___lodiv+5
  7824  0887  0877               	movf	___lodiv@quotient+6,w
  7825  0888  00A6               	movwf	?___lodiv+6
  7826  0889  0878               	movf	___lodiv@quotient+7,w
  7827  088A  00A7               	movwf	?___lodiv+7
  7828  088B                     l774:
  7829  088B  0008               	return
  7830  088C                     __end_of___lodiv:
  7831                           
  7832                           	psect	text17
  7833  1391                     __ptext17:	
  7834 ;; *************** function _strncmp *****************
  7835 ;; Defined at:
  7836 ;;		line 3 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\strncmp.c"
  7837 ;; Parameters:    Size  Location     Type
  7838 ;;  _l              2    0[COMMON] PTR const unsigned char 
  7839 ;;		 -> STR_7(14), STR_6(6), STR_5(14), STR_4(8), 
  7840 ;;  _r              2    2[COMMON] PTR const unsigned char 
  7841 ;;		 -> STR_19(3), STR_14(3), STR_10(3), 
  7842 ;;  n               2    4[COMMON] unsigned int 
  7843 ;; Auto vars:     Size  Location     Type
  7844 ;;  r               2    9[COMMON] PTR const unsigned char 
  7845 ;;		 -> STR_19(3), STR_14(3), STR_10(3), 
  7846 ;;  l               2    7[COMMON] PTR const unsigned char 
  7847 ;;		 -> STR_7(14), STR_6(6), STR_5(14), STR_4(8), 
  7848 ;; Return value:  Size  Location     Type
  7849 ;;                  2    0[COMMON] int 
  7850 ;; Registers used:
  7851 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath
  7852 ;; Tracked objects:
  7853 ;;		On entry : 0/0
  7854 ;;		On exit  : 0/0
  7855 ;;		Unchanged: 0/0
  7856 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  7857 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7858 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7859 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7860 ;;      Totals:        11       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7861 ;;Total ram usage:       11 bytes
  7862 ;; Hardware stack levels used: 1
  7863 ;; This function calls:
  7864 ;;		Nothing
  7865 ;; This function is called by:
  7866 ;;		_vfpfcnvrt
  7867 ;; This function uses a non-reentrant model
  7868 ;;
  7869                           
  7870                           
  7871                           ;psect for function _strncmp
  7872  1391                     _strncmp:
  7873  1391                     l2940:	
  7874                           ;incstack = 0
  7875                           ; Regs used in _strncmp: [wreg-fsr0h+status,2+status,0+pclath]
  7876                           
  7877  1391  0871               	movf	strncmp@_l+1,w
  7878  1392  00F8               	movwf	strncmp@l+1
  7879  1393  0870               	movf	strncmp@_l,w
  7880  1394  00F7               	movwf	strncmp@l
  7881  1395  0873               	movf	strncmp@_r+1,w
  7882  1396  00FA               	movwf	strncmp@r+1
  7883  1397  0872               	movf	strncmp@_r,w
  7884  1398  00F9               	movwf	strncmp@r
  7885  1399                     l2942:
  7886  1399  3001               	movlw	1
  7887  139A  02F4               	subwf	strncmp@n,f
  7888  139B  3000               	movlw	0
  7889  139C  3BF5               	subwfb	strncmp@n+1,f
  7890  139D  0A74               	incf	strncmp@n,w
  7891  139E  1D03               	skipz
  7892  139F  2BA4               	goto	u3161
  7893  13A0  0A75               	incf	strncmp@n+1,w
  7894  13A1  1D03               	btfss	3,2
  7895  13A2  2BA4               	goto	u3161
  7896  13A3  2BA5               	goto	u3160
  7897  13A4                     u3161:
  7898  13A4  2BB4               	goto	l2950
  7899  13A5                     u3160:
  7900  13A5                     l2944:
  7901  13A5  01F0               	clrf	?_strncmp
  7902  13A6  01F1               	clrf	?_strncmp+1
  7903  13A7  2BEC               	goto	l1131
  7904  13A8                     l2948:
  7905  13A8  3001               	movlw	1
  7906  13A9  07F7               	addwf	strncmp@l,f
  7907  13AA  3000               	movlw	0
  7908  13AB  3DF8               	addwfc	strncmp@l+1,f
  7909  13AC  3001               	movlw	1
  7910  13AD  07F9               	addwf	strncmp@r,f
  7911  13AE  3000               	movlw	0
  7912  13AF  3DFA               	addwfc	strncmp@r+1,f
  7913  13B0  3001               	movlw	1
  7914  13B1  02F4               	subwf	strncmp@n,f
  7915  13B2  3000               	movlw	0
  7916  13B3  3BF5               	subwfb	strncmp@n+1,f
  7917  13B4                     l2950:
  7918  13B4  0877               	movf	strncmp@l,w
  7919  13B5  0084               	movwf	4
  7920  13B6  0878               	movf	strncmp@l+1,w
  7921  13B7  0085               	movwf	5
  7922  13B8  0012               	moviw fsr0++
  7923  13B9  1903               	btfsc	3,2
  7924  13BA  2BBC               	goto	u3171
  7925  13BB  2BBD               	goto	u3170
  7926  13BC                     u3171:
  7927  13BC  2BDC               	goto	l2958
  7928  13BD                     u3170:
  7929  13BD                     l2952:
  7930  13BD  0879               	movf	strncmp@r,w
  7931  13BE  0084               	movwf	4
  7932  13BF  087A               	movf	strncmp@r+1,w
  7933  13C0  0085               	movwf	5
  7934  13C1  0012               	moviw fsr0++
  7935  13C2  1903               	btfsc	3,2
  7936  13C3  2BC5               	goto	u3181
  7937  13C4  2BC6               	goto	u3180
  7938  13C5                     u3181:
  7939  13C5  2BDC               	goto	l2958
  7940  13C6                     u3180:
  7941  13C6                     l2954:
  7942  13C6  0874               	movf	strncmp@n,w
  7943  13C7  0475               	iorwf	strncmp@n+1,w
  7944  13C8  1903               	btfsc	3,2
  7945  13C9  2BCB               	goto	u3191
  7946  13CA  2BCC               	goto	u3190
  7947  13CB                     u3191:
  7948  13CB  2BDC               	goto	l2958
  7949  13CC                     u3190:
  7950  13CC                     l2956:
  7951  13CC  0879               	movf	strncmp@r,w
  7952  13CD  0084               	movwf	4
  7953  13CE  087A               	movf	strncmp@r+1,w
  7954  13CF  0085               	movwf	5
  7955  13D0  0800               	movf	0,w	;code access
  7956  13D1  00F6               	movwf	??_strncmp
  7957  13D2  0877               	movf	strncmp@l,w
  7958  13D3  0084               	movwf	4
  7959  13D4  0878               	movf	strncmp@l+1,w
  7960  13D5  0085               	movwf	5
  7961  13D6  0800               	movf	0,w	;code access
  7962  13D7  0676               	xorwf	??_strncmp,w
  7963  13D8  1903               	skipnz
  7964  13D9  2BDB               	goto	u3201
  7965  13DA  2BDC               	goto	u3200
  7966  13DB                     u3201:
  7967  13DB  2BA8               	goto	l2948
  7968  13DC                     u3200:
  7969  13DC                     l2958:
  7970  13DC  0877               	movf	strncmp@l,w
  7971  13DD  0084               	movwf	4
  7972  13DE  0878               	movf	strncmp@l+1,w
  7973  13DF  0085               	movwf	5
  7974  13E0  0800               	movf	0,w	;code access
  7975  13E1  00F6               	movwf	??_strncmp
  7976  13E2  0879               	movf	strncmp@r,w
  7977  13E3  0084               	movwf	4
  7978  13E4  087A               	movf	strncmp@r+1,w
  7979  13E5  0085               	movwf	5
  7980  13E6  0800               	movf	0,w	;code access
  7981  13E7  0276               	subwf	??_strncmp,w
  7982  13E8  00F0               	movwf	?_strncmp
  7983  13E9  01F1               	clrf	?_strncmp+1
  7984  13EA  1C03               	skipc
  7985  13EB  03F1               	decf	?_strncmp+1,f
  7986  13EC                     l1131:
  7987  13EC  0008               	return
  7988  13ED                     __end_of_strncmp:
  7989                           
  7990                           	psect	text18
  7991  0056                     __ptext18:	
  7992 ;; *************** function _dtoa *****************
  7993 ;; Defined at:
  7994 ;;		line 287 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c"
  7995 ;; Parameters:    Size  Location     Type
  7996 ;;  fp              1    wreg     PTR struct _IO_FILE
  7997 ;;		 -> sprintf@f(5), 
  7998 ;;  d               8   16[BANK0 ] long long 
  7999 ;; Auto vars:     Size  Location     Type
  8000 ;;  fp              1   31[BANK0 ] PTR struct _IO_FILE
  8001 ;;		 -> sprintf@f(5), 
  8002 ;;  n               8   36[BANK0 ] long long 
  8003 ;;  i               2   44[BANK0 ] int 
  8004 ;;  s               2   34[BANK0 ] int 
  8005 ;;  w               2   32[BANK0 ] int 
  8006 ;;  p               2   29[BANK0 ] int 
  8007 ;; Return value:  Size  Location     Type
  8008 ;;                  2   16[BANK0 ] int 
  8009 ;; Registers used:
  8010 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  8011 ;; Tracked objects:
  8012 ;;		On entry : 0/0
  8013 ;;		On exit  : 0/0
  8014 ;;		Unchanged: 0/0
  8015 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  8016 ;;      Params:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8017 ;;      Locals:         0      19       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8018 ;;      Temps:          0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8019 ;;      Totals:         0      30       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8020 ;;Total ram usage:       30 bytes
  8021 ;; Hardware stack levels used: 1
  8022 ;; Hardware stack levels required when called: 4
  8023 ;; This function calls:
  8024 ;;		___aodiv
  8025 ;;		___aomod
  8026 ;;		_abs
  8027 ;;		_pad
  8028 ;; This function is called by:
  8029 ;;		_vfpfcnvrt
  8030 ;; This function uses a non-reentrant model
  8031 ;;
  8032                           
  8033                           
  8034                           ;psect for function _dtoa
  8035  0056                     _dtoa:
  8036                           
  8037                           ;incstack = 0
  8038                           ; Regs used in _dtoa: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  8039                           ;dtoa@fp stored from wreg
  8040  0056  0020               	movlb	0	; select bank0
  8041  0057  00BF               	movwf	dtoa@fp
  8042  0058                     l2846:
  8043                           
  8044                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 287: static int d
      +                          toa(FILE *fp, long long d);C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\d
      +                          oprnt.c: 288: {;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 28
      +                          9:     int i, p, s, w;;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprn
      +                          t.c: 290:     long long n;;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\d
      +                          oprnt.c: 293:     n = d;
  8045  0058  0830               	movf	dtoa@d,w
  8046  0059  00C4               	movwf	dtoa@n
  8047  005A  0831               	movf	dtoa@d+1,w
  8048  005B  00C5               	movwf	dtoa@n+1
  8049  005C  0832               	movf	dtoa@d+2,w
  8050  005D  00C6               	movwf	dtoa@n+2
  8051  005E  0833               	movf	dtoa@d+3,w
  8052  005F  00C7               	movwf	dtoa@n+3
  8053  0060  0834               	movf	dtoa@d+4,w
  8054  0061  00C8               	movwf	dtoa@n+4
  8055  0062  0835               	movf	dtoa@d+5,w
  8056  0063  00C9               	movwf	dtoa@n+5
  8057  0064  0836               	movf	dtoa@d+6,w
  8058  0065  00CA               	movwf	dtoa@n+6
  8059  0066  0837               	movf	dtoa@d+7,w
  8060  0067  00CB               	movwf	dtoa@n+7
  8061  0068                     l2848:
  8062                           
  8063                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 294:     s = n < 
      +                          0 ? 1 : 0;
  8064  0068  3044               	movlw	low dtoa@n
  8065  0069  0086               	movwf	6
  8066  006A  3000               	movlw	high dtoa@n
  8067  006B  0087               	movwf	7
  8068  006C  3F47               	moviw [7]fsr1
  8069  006D  00B8               	movwf	??_dtoa
  8070  006E  1BB8               	btfsc	??_dtoa,7
  8071  006F  2871               	goto	u2931
  8072  0070  2873               	goto	u2930
  8073  0071                     u2931:
  8074  0071  3001               	movlw	1
  8075  0072  2874               	goto	u2940
  8076  0073                     u2930:
  8077  0073  3000               	movlw	0
  8078  0074                     u2940:
  8079  0074  0020               	movlb	0	; select bank0
  8080  0075  00B9               	movwf	??_dtoa+1
  8081  0076  01BA               	clrf	??_dtoa+2
  8082  0077  0839               	movf	??_dtoa+1,w
  8083  0078  00C2               	movwf	dtoa@s
  8084  0079  083A               	movf	??_dtoa+2,w
  8085  007A  00C3               	movwf	dtoa@s+1
  8086  007B                     l2850:
  8087                           
  8088                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 295:     if (s) {
  8089  007B  0842               	movf	dtoa@s,w
  8090  007C  0443               	iorwf	dtoa@s+1,w
  8091  007D  1903               	btfsc	3,2
  8092  007E  2880               	goto	u2951
  8093  007F  2881               	goto	u2950
  8094  0080                     u2951:
  8095  0080  289F               	goto	l1034
  8096  0081                     u2950:
  8097  0081                     l2852:
  8098                           
  8099                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 296:         n = 
      +                          -n;
  8100  0081  09C4               	comf	dtoa@n,f
  8101  0082  09C5               	comf	dtoa@n+1,f
  8102  0083  09C6               	comf	dtoa@n+2,f
  8103  0084  09C7               	comf	dtoa@n+3,f
  8104  0085  09C8               	comf	dtoa@n+4,f
  8105  0086  09C9               	comf	dtoa@n+5,f
  8106  0087  09CA               	comf	dtoa@n+6,f
  8107  0088  09CB               	comf	dtoa@n+7,f
  8108  0089  0AC4               	incf	dtoa@n,f
  8109  008A  1D03               	skipz
  8110  008B  289F               	goto	u296lld
  8111  008C  0AC5               	incf	dtoa@n+1,f
  8112  008D  1D03               	skipz
  8113  008E  289F               	goto	u296lld
  8114  008F  0AC6               	incf	dtoa@n+2,f
  8115  0090  1D03               	skipz
  8116  0091  289F               	goto	u296lld
  8117  0092  0AC7               	incf	dtoa@n+3,f
  8118  0093  1D03               	skipz
  8119  0094  289F               	goto	u296lld
  8120  0095  0AC8               	incf	dtoa@n+4,f
  8121  0096  1D03               	skipz
  8122  0097  289F               	goto	u296lld
  8123  0098  0AC9               	incf	dtoa@n+5,f
  8124  0099  1D03               	skipz
  8125  009A  289F               	goto	u296lld
  8126  009B  0ACA               	incf	dtoa@n+6,f
  8127  009C  1D03               	skipz
  8128  009D  289F               	goto	u296lld
  8129  009E  0ACB               	incf	dtoa@n+7,f
  8130  009F                     u296lld:
  8131  009F                     l1034:	
  8132                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 297:     }
  8133                           
  8134                           
  8135                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 300:     if (!(pr
      +                          ec < 0)) {
  8136  009F  0021               	movlb	1	; select bank1
  8137  00A0  1BE1               	btfsc	(_prec+1)^(0+128),7
  8138  00A1  28A3               	goto	u2971
  8139  00A2  28A4               	goto	u2970
  8140  00A3                     u2971:
  8141  00A3  28A8               	goto	l1035
  8142  00A4                     u2970:
  8143  00A4                     l2854:
  8144                           
  8145                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 301:         flag
      +                          s &= ~(1 << 1);
  8146  00A4  30FD               	movlw	253
  8147  00A5  05E2               	andwf	_flags^(0+128),f
  8148  00A6  30FF               	movlw	255
  8149  00A7  05E3               	andwf	(_flags+1)^(0+128),f
  8150  00A8                     l1035:	
  8151                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 302:     }
  8152                           
  8153                           
  8154                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 303:     p = (0 <
      +                           prec) ? prec : 1;
  8155  00A8  0861               	movf	(_prec+1)^(0+128),w
  8156  00A9  3A80               	xorlw	128
  8157  00AA  0020               	movlb	0	; select bank0
  8158  00AB  00B8               	movwf	??_dtoa
  8159  00AC  3080               	movlw	128
  8160  00AD  0238               	subwf	??_dtoa,w
  8161  00AE  1D03               	skipz
  8162  00AF  28B3               	goto	u2985
  8163  00B0  3001               	movlw	1
  8164  00B1  0021               	movlb	1	; select bank1
  8165  00B2  0260               	subwf	_prec^(0+128),w
  8166  00B3                     u2985:
  8167  00B3  1803               	skipnc
  8168  00B4  28B6               	goto	u2981
  8169  00B5  28B7               	goto	u2980
  8170  00B6                     u2981:
  8171  00B6  28BD               	goto	l2858
  8172  00B7                     u2980:
  8173  00B7                     l2856:
  8174  00B7  3001               	movlw	1
  8175  00B8  0020               	movlb	0	; select bank0
  8176  00B9  00BD               	movwf	dtoa@p
  8177  00BA  3000               	movlw	0
  8178  00BB  00BE               	movwf	dtoa@p+1
  8179  00BC  28C5               	goto	l1039
  8180  00BD                     l2858:
  8181  00BD  0021               	movlb	1	; select bank1
  8182  00BE  0861               	movf	(_prec+1)^(0+128),w
  8183  00BF  0020               	movlb	0	; select bank0
  8184  00C0  00BE               	movwf	dtoa@p+1
  8185  00C1  0021               	movlb	1	; select bank1
  8186  00C2  0860               	movf	_prec^(0+128),w
  8187  00C3  0020               	movlb	0	; select bank0
  8188  00C4  00BD               	movwf	dtoa@p
  8189  00C5                     l1039:
  8190                           
  8191                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 304:     w = widt
      +                          h;
  8192  00C5  0021               	movlb	1	; select bank1
  8193  00C6  085F               	movf	(_width+1)^(0+128),w
  8194  00C7  0020               	movlb	0	; select bank0
  8195  00C8  00C1               	movwf	dtoa@w+1
  8196  00C9  0021               	movlb	1	; select bank1
  8197  00CA  085E               	movf	_width^(0+128),w
  8198  00CB  0020               	movlb	0	; select bank0
  8199  00CC  00C0               	movwf	dtoa@w
  8200  00CD                     l2860:
  8201                           
  8202                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 305:     if (s ||
      +                           (flags & (1 << 2))) {
  8203  00CD  0842               	movf	dtoa@s,w
  8204  00CE  0443               	iorwf	dtoa@s+1,w
  8205  00CF  1D03               	btfss	3,2
  8206  00D0  28D2               	goto	u2991
  8207  00D1  28D3               	goto	u2990
  8208  00D2                     u2991:
  8209  00D2  28D8               	goto	l2864
  8210  00D3                     u2990:
  8211  00D3                     l2862:
  8212  00D3  0021               	movlb	1	; select bank1
  8213  00D4  1D62               	btfss	_flags^(0+128),2
  8214  00D5  28D7               	goto	u3001
  8215  00D6  28D8               	goto	u3000
  8216  00D7                     u3001:
  8217  00D7  28DD               	goto	l1040
  8218  00D8                     u3000:
  8219  00D8                     l2864:
  8220                           
  8221                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 306:         --w;
  8222  00D8  30FF               	movlw	255
  8223  00D9  0020               	movlb	0	; select bank0
  8224  00DA  07C0               	addwf	dtoa@w,f
  8225  00DB  30FF               	movlw	255
  8226  00DC  3DC1               	addwfc	dtoa@w+1,f
  8227  00DD                     l1040:	
  8228                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 307:     }
  8229                           
  8230                           
  8231                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 310:     i = size
      +                          of(dbuf) - 1;
  8232  00DD  301F               	movlw	31
  8233  00DE  0020               	movlb	0	; select bank0
  8234  00DF  00CC               	movwf	dtoa@i
  8235  00E0  3000               	movlw	0
  8236  00E1  00CD               	movwf	dtoa@i+1
  8237  00E2                     l2866:
  8238                           
  8239                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 311:     dbuf[i] 
      +                          = '\0';
  8240  00E2  0023               	movlb	3	; select bank3
  8241  00E3  01BF               	clrf	(_dbuf^(0+384)+31)
  8242                           
  8243                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 312:     while (!
      +                          (i < 1) && (n || (0 < p) || ((0 < w) && (flags & (1 << 1))))) {
  8244  00E4  294E               	goto	l1043
  8245  00E5                     l2868:
  8246                           
  8247                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 313:         --i;
  8248  00E5  30FF               	movlw	255
  8249  00E6  0020               	movlb	0	; select bank0
  8250  00E7  07CC               	addwf	dtoa@i,f
  8251  00E8  30FF               	movlw	255
  8252  00E9  3DCD               	addwfc	dtoa@i+1,f
  8253  00EA                     l2870:
  8254                           
  8255                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 314:         dbuf
      +                          [i] = (char)((int)'0' + abs(n % 10));
  8256  00EA  300A               	movlw	10
  8257  00EB  00A0               	movwf	___aomod@divisor
  8258  00EC  01A1               	clrf	___aomod@divisor+1
  8259  00ED  01A2               	clrf	___aomod@divisor+2
  8260  00EE  01A3               	clrf	___aomod@divisor+3
  8261  00EF  01A4               	clrf	___aomod@divisor+4
  8262  00F0  01A5               	clrf	___aomod@divisor+5
  8263  00F1  01A6               	clrf	___aomod@divisor+6
  8264  00F2  01A7               	clrf	___aomod@divisor+7
  8265  00F3  0844               	movf	dtoa@n,w
  8266  00F4  00A8               	movwf	___aomod@dividend
  8267  00F5  0845               	movf	dtoa@n+1,w
  8268  00F6  00A9               	movwf	___aomod@dividend+1
  8269  00F7  0846               	movf	dtoa@n+2,w
  8270  00F8  00AA               	movwf	___aomod@dividend+2
  8271  00F9  0847               	movf	dtoa@n+3,w
  8272  00FA  00AB               	movwf	___aomod@dividend+3
  8273  00FB  0848               	movf	dtoa@n+4,w
  8274  00FC  00AC               	movwf	___aomod@dividend+4
  8275  00FD  0849               	movf	dtoa@n+5,w
  8276  00FE  00AD               	movwf	___aomod@dividend+5
  8277  00FF  084A               	movf	dtoa@n+6,w
  8278  0100  00AE               	movwf	___aomod@dividend+6
  8279  0101  084B               	movf	dtoa@n+7,w
  8280  0102  00AF               	movwf	___aomod@dividend+7
  8281  0103  318D  2528  3180   	fcall	___aomod
  8282  0106  0020               	movlb	0	; select bank0
  8283  0107  0821               	movf	?___aomod+1,w
  8284  0108  00F4               	movwf	abs@a+1
  8285  0109  0820               	movf	?___aomod,w
  8286  010A  00F3               	movwf	abs@a
  8287  010B  319F  2773  3180   	fcall	_abs
  8288  010E  0873               	movf	?_abs,w
  8289  010F  3E30               	addlw	48
  8290  0110  0020               	movlb	0	; select bank0
  8291  0111  00B8               	movwf	??_dtoa
  8292  0112  084C               	movf	dtoa@i,w
  8293  0113  3EA0               	addlw	(low (_dbuf| (0+256)))& (0+255)
  8294  0114  0086               	movwf	6
  8295  0115  3001               	movlw	1	; select bank3/4
  8296  0116  0087               	movwf	7
  8297  0117  0838               	movf	??_dtoa,w
  8298  0118  0081               	movwf	1
  8299  0119                     l2872:
  8300                           
  8301                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 315:         --p;
  8302  0119  30FF               	movlw	255
  8303  011A  07BD               	addwf	dtoa@p,f
  8304  011B  30FF               	movlw	255
  8305  011C  3DBE               	addwfc	dtoa@p+1,f
  8306  011D                     l2874:
  8307                           
  8308                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 316:         --w;
  8309  011D  30FF               	movlw	255
  8310  011E  07C0               	addwf	dtoa@w,f
  8311  011F  30FF               	movlw	255
  8312  0120  3DC1               	addwfc	dtoa@w+1,f
  8313  0121                     l2876:
  8314                           
  8315                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 317:         n = 
      +                          n / 10;
  8316  0121  300A               	movlw	10
  8317  0122  00A0               	movwf	___aodiv@divisor
  8318  0123  01A1               	clrf	___aodiv@divisor+1
  8319  0124  01A2               	clrf	___aodiv@divisor+2
  8320  0125  01A3               	clrf	___aodiv@divisor+3
  8321  0126  01A4               	clrf	___aodiv@divisor+4
  8322  0127  01A5               	clrf	___aodiv@divisor+5
  8323  0128  01A6               	clrf	___aodiv@divisor+6
  8324  0129  01A7               	clrf	___aodiv@divisor+7
  8325  012A  0844               	movf	dtoa@n,w
  8326  012B  00A8               	movwf	___aodiv@dividend
  8327  012C  0845               	movf	dtoa@n+1,w
  8328  012D  00A9               	movwf	___aodiv@dividend+1
  8329  012E  0846               	movf	dtoa@n+2,w
  8330  012F  00AA               	movwf	___aodiv@dividend+2
  8331  0130  0847               	movf	dtoa@n+3,w
  8332  0131  00AB               	movwf	___aodiv@dividend+3
  8333  0132  0848               	movf	dtoa@n+4,w
  8334  0133  00AC               	movwf	___aodiv@dividend+4
  8335  0134  0849               	movf	dtoa@n+5,w
  8336  0135  00AD               	movwf	___aodiv@dividend+5
  8337  0136  084A               	movf	dtoa@n+6,w
  8338  0137  00AE               	movwf	___aodiv@dividend+6
  8339  0138  084B               	movf	dtoa@n+7,w
  8340  0139  00AF               	movwf	___aodiv@dividend+7
  8341  013A  318E  26FF  3180   	fcall	___aodiv
  8342  013D  0020               	movlb	0	; select bank0
  8343  013E  0820               	movf	?___aodiv,w
  8344  013F  00C4               	movwf	dtoa@n
  8345  0140  0821               	movf	?___aodiv+1,w
  8346  0141  00C5               	movwf	dtoa@n+1
  8347  0142  0822               	movf	?___aodiv+2,w
  8348  0143  00C6               	movwf	dtoa@n+2
  8349  0144  0823               	movf	?___aodiv+3,w
  8350  0145  00C7               	movwf	dtoa@n+3
  8351  0146  0824               	movf	?___aodiv+4,w
  8352  0147  00C8               	movwf	dtoa@n+4
  8353  0148  0825               	movf	?___aodiv+5,w
  8354  0149  00C9               	movwf	dtoa@n+5
  8355  014A  0826               	movf	?___aodiv+6,w
  8356  014B  00CA               	movwf	dtoa@n+6
  8357  014C  0827               	movf	?___aodiv+7,w
  8358  014D  00CB               	movwf	dtoa@n+7
  8359  014E                     l1043:	
  8360                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 318:     }
  8361                           
  8362                           
  8363                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 312:     while (!
      +                          (i < 1) && (n || (0 < p) || ((0 < w) && (flags & (1 << 1))))) {
  8364  014E  0020               	movlb	0	; select bank0
  8365  014F  084D               	movf	dtoa@i+1,w
  8366  0150  3A80               	xorlw	128
  8367  0151  00B8               	movwf	??_dtoa
  8368  0152  3080               	movlw	128
  8369  0153  0238               	subwf	??_dtoa,w
  8370  0154  1D03               	skipz
  8371  0155  2958               	goto	u3015
  8372  0156  3001               	movlw	1
  8373  0157  024C               	subwf	dtoa@i,w
  8374  0158                     u3015:
  8375  0158  1C03               	skipc
  8376  0159  295B               	goto	u3011
  8377  015A  295C               	goto	u3010
  8378  015B                     u3011:
  8379  015B  2989               	goto	l2886
  8380  015C                     u3010:
  8381  015C                     l2878:
  8382  015C  0020               	movlb	0	; select bank0
  8383  015D  0844               	movf	dtoa@n,w
  8384  015E  0445               	iorwf	dtoa@n+1,w
  8385  015F  0446               	iorwf	dtoa@n+2,w
  8386  0160  0447               	iorwf	dtoa@n+3,w
  8387  0161  0448               	iorwf	dtoa@n+4,w
  8388  0162  0449               	iorwf	dtoa@n+5,w
  8389  0163  044A               	iorwf	dtoa@n+6,w
  8390  0164  044B               	iorwf	dtoa@n+7,w
  8391  0165  1D03               	skipz
  8392  0166  2968               	goto	u3021
  8393  0167  2969               	goto	u3020
  8394  0168                     u3021:
  8395  0168  28E5               	goto	l2868
  8396  0169                     u3020:
  8397  0169                     l2880:
  8398  0169  083E               	movf	dtoa@p+1,w
  8399  016A  3A80               	xorlw	128
  8400  016B  00B8               	movwf	??_dtoa
  8401  016C  3080               	movlw	128
  8402  016D  0238               	subwf	??_dtoa,w
  8403  016E  1D03               	skipz
  8404  016F  2972               	goto	u3035
  8405  0170  3001               	movlw	1
  8406  0171  023D               	subwf	dtoa@p,w
  8407  0172                     u3035:
  8408  0172  1803               	skipnc
  8409  0173  2975               	goto	u3031
  8410  0174  2976               	goto	u3030
  8411  0175                     u3031:
  8412  0175  28E5               	goto	l2868
  8413  0176                     u3030:
  8414  0176                     l2882:
  8415  0176  0020               	movlb	0	; select bank0
  8416  0177  0841               	movf	dtoa@w+1,w
  8417  0178  3A80               	xorlw	128
  8418  0179  00B8               	movwf	??_dtoa
  8419  017A  3080               	movlw	128
  8420  017B  0238               	subwf	??_dtoa,w
  8421  017C  1D03               	skipz
  8422  017D  2980               	goto	u3045
  8423  017E  3001               	movlw	1
  8424  017F  0240               	subwf	dtoa@w,w
  8425  0180                     u3045:
  8426  0180  1C03               	skipc
  8427  0181  2983               	goto	u3041
  8428  0182  2984               	goto	u3040
  8429  0183                     u3041:
  8430  0183  2989               	goto	l2886
  8431  0184                     u3040:
  8432  0184                     l2884:
  8433  0184  0021               	movlb	1	; select bank1
  8434  0185  18E2               	btfsc	_flags^(0+128),1
  8435  0186  2988               	goto	u3051
  8436  0187  2989               	goto	u3050
  8437  0188                     u3051:
  8438  0188  28E5               	goto	l2868
  8439  0189                     u3050:
  8440  0189                     l2886:
  8441                           
  8442                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 321:     if (s ||
      +                           (flags & (1 << 2))) {
  8443  0189  0020               	movlb	0	; select bank0
  8444  018A  0842               	movf	dtoa@s,w
  8445  018B  0443               	iorwf	dtoa@s+1,w
  8446  018C  1D03               	btfss	3,2
  8447  018D  298F               	goto	u3061
  8448  018E  2990               	goto	u3060
  8449  018F                     u3061:
  8450  018F  2995               	goto	l2890
  8451  0190                     u3060:
  8452  0190                     l2888:
  8453  0190  0021               	movlb	1	; select bank1
  8454  0191  1D62               	btfss	_flags^(0+128),2
  8455  0192  2994               	goto	u3071
  8456  0193  2995               	goto	u3070
  8457  0194                     u3071:
  8458  0194  29B2               	goto	l2900
  8459  0195                     u3070:
  8460  0195                     l2890:
  8461                           
  8462                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 322:         --i;
  8463  0195  30FF               	movlw	255
  8464  0196  0020               	movlb	0	; select bank0
  8465  0197  07CC               	addwf	dtoa@i,f
  8466  0198  30FF               	movlw	255
  8467  0199  3DCD               	addwfc	dtoa@i+1,f
  8468  019A                     l2892:
  8469                           
  8470                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 323:         dbuf
      +                          [i] = s ? '-' : '+';
  8471  019A  0842               	movf	dtoa@s,w
  8472  019B  0443               	iorwf	dtoa@s+1,w
  8473  019C  1D03               	btfss	3,2
  8474  019D  299F               	goto	u3081
  8475  019E  29A0               	goto	u3080
  8476  019F                     u3081:
  8477  019F  29A5               	goto	l2896
  8478  01A0                     u3080:
  8479  01A0                     l2894:
  8480  01A0  302B               	movlw	43
  8481  01A1  00BB               	movwf	_dtoa$1262
  8482  01A2  3000               	movlw	0
  8483  01A3  00BC               	movwf	_dtoa$1262+1
  8484  01A4  29A9               	goto	l2898
  8485  01A5                     l2896:
  8486  01A5  302D               	movlw	45
  8487  01A6  00BB               	movwf	_dtoa$1262
  8488  01A7  3000               	movlw	0
  8489  01A8  00BC               	movwf	_dtoa$1262+1
  8490  01A9                     l2898:
  8491  01A9  083B               	movf	_dtoa$1262,w
  8492  01AA  00B8               	movwf	??_dtoa
  8493  01AB  084C               	movf	dtoa@i,w
  8494  01AC  3EA0               	addlw	(low (_dbuf| (0+256)))& (0+255)
  8495  01AD  0086               	movwf	6
  8496  01AE  3001               	movlw	1	; select bank3/4
  8497  01AF  0087               	movwf	7
  8498  01B0  0838               	movf	??_dtoa,w
  8499  01B1  0081               	movwf	1
  8500  01B2                     l2900:
  8501                           
  8502                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 327:     return p
      +                          ad(fp, &dbuf[i], w);
  8503  01B2  0020               	movlb	0	; select bank0
  8504  01B3  084C               	movf	dtoa@i,w
  8505  01B4  3EA0               	addlw	(low (_dbuf| (0+256)))& (0+255)
  8506  01B5  00B8               	movwf	??_dtoa
  8507  01B6  0838               	movf	??_dtoa,w
  8508  01B7  00A4               	movwf	pad@buf
  8509  01B8  0841               	movf	dtoa@w+1,w
  8510  01B9  00A6               	movwf	pad@p+1
  8511  01BA  0840               	movf	dtoa@w,w
  8512  01BB  00A5               	movwf	pad@p
  8513  01BC  083F               	movf	dtoa@fp,w
  8514  01BD  3192  2283  3180   	fcall	_pad
  8515  01C0  0020               	movlb	0	; select bank0
  8516  01C1  0825               	movf	?_pad+1,w
  8517  01C2  00B1               	movwf	?_dtoa+1
  8518  01C3  0824               	movf	?_pad,w
  8519  01C4  00B0               	movwf	?_dtoa
  8520  01C5                     l1057:
  8521  01C5  0008               	return
  8522  01C6                     __end_of_dtoa:
  8523                           
  8524                           	psect	text19
  8525  1283                     __ptext19:	
  8526 ;; *************** function _pad *****************
  8527 ;; Defined at:
  8528 ;;		line 72 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c"
  8529 ;; Parameters:    Size  Location     Type
  8530 ;;  fp              1    wreg     PTR struct _IO_FILE
  8531 ;;		 -> sprintf@f(5), 
  8532 ;;  buf             1    4[BANK0 ] PTR unsigned char 
  8533 ;;		 -> dbuf(32), 
  8534 ;;  p               2    5[BANK0 ] int 
  8535 ;; Auto vars:     Size  Location     Type
  8536 ;;  fp              1   11[BANK0 ] PTR struct _IO_FILE
  8537 ;;		 -> sprintf@f(5), 
  8538 ;;  w               2    9[BANK0 ] int 
  8539 ;;  i               2    7[BANK0 ] int 
  8540 ;; Return value:  Size  Location     Type
  8541 ;;                  2    4[BANK0 ] int 
  8542 ;; Registers used:
  8543 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  8544 ;; Tracked objects:
  8545 ;;		On entry : 0/0
  8546 ;;		On exit  : 0/0
  8547 ;;		Unchanged: 0/0
  8548 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  8549 ;;      Params:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8550 ;;      Locals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8551 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8552 ;;      Totals:         1       8       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8553 ;;Total ram usage:        9 bytes
  8554 ;; Hardware stack levels used: 1
  8555 ;; Hardware stack levels required when called: 3
  8556 ;; This function calls:
  8557 ;;		_fputc
  8558 ;;		_fputs
  8559 ;;		_strlen
  8560 ;; This function is called by:
  8561 ;;		_dtoa
  8562 ;;		_utoa
  8563 ;; This function uses a non-reentrant model
  8564 ;;
  8565                           
  8566                           
  8567                           ;psect for function _pad
  8568  1283                     _pad:
  8569                           
  8570                           ;incstack = 0
  8571                           ; Regs used in _pad: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  8572                           ;pad@fp stored from wreg
  8573  1283  0020               	movlb	0	; select bank0
  8574  1284  00AB               	movwf	pad@fp
  8575  1285                     l2774:
  8576                           
  8577                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 72: static int pa
      +                          d(FILE *fp, char *buf, int p);C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\commo
      +                          n\doprnt.c: 73: {;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 
      +                          74:     int i, w;;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 
      +                          77:     if (flags & (1 << 0)) {
  8578  1285  0021               	movlb	1	; select bank1
  8579  1286  1C62               	btfss	_flags^(0+128),0
  8580  1287  2A89               	goto	u2851
  8581  1288  2A8A               	goto	u2850
  8582  1289                     u2851:
  8583  1289  2A93               	goto	l2778
  8584  128A                     u2850:
  8585  128A                     l2776:
  8586                           
  8587                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 78:         fputs
      +                          ((const char *)buf, fp);
  8588  128A  0020               	movlb	0	; select bank0
  8589  128B  082B               	movf	pad@fp,w
  8590  128C  00FC               	movwf	??_pad
  8591  128D  087C               	movf	??_pad,w
  8592  128E  00F8               	movwf	fputs@fp
  8593  128F  0824               	movf	pad@buf,w
  8594  1290  3190  206B  3192   	fcall	_fputs
  8595  1293                     l2778:
  8596                           
  8597                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 82:     w = (p < 
      +                          0) ? 0 : p;
  8598  1293  0020               	movlb	0	; select bank0
  8599  1294  1BA6               	btfsc	pad@p+1,7
  8600  1295  2A97               	goto	u2861
  8601  1296  2A98               	goto	u2860
  8602  1297                     u2861:
  8603  1297  2A9D               	goto	l2782
  8604  1298                     u2860:
  8605  1298                     l2780:
  8606  1298  0826               	movf	pad@p+1,w
  8607  1299  00AA               	movwf	pad@w+1
  8608  129A  0825               	movf	pad@p,w
  8609  129B  00A9               	movwf	pad@w
  8610  129C  2A9F               	goto	l1026
  8611  129D                     l2782:
  8612  129D  01A9               	clrf	pad@w
  8613  129E  01AA               	clrf	pad@w+1
  8614  129F                     l1026:
  8615                           
  8616                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 83:     i = 0;
  8617  129F  01A7               	clrf	pad@i
  8618  12A0  01A8               	clrf	pad@i+1
  8619                           
  8620                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 84:     while (i 
      +                          < w) {
  8621  12A1  2AB3               	goto	l2788
  8622  12A2                     l2784:
  8623                           
  8624                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 85:         fputc
      +                          (' ', fp);
  8625  12A2  3020               	movlw	32
  8626  12A3  00F0               	movwf	fputc@c
  8627  12A4  3000               	movlw	0
  8628  12A5  00F1               	movwf	fputc@c+1
  8629  12A6  0020               	movlb	0	; select bank0
  8630  12A7  082B               	movf	pad@fp,w
  8631  12A8  00FC               	movwf	??_pad
  8632  12A9  087C               	movf	??_pad,w
  8633  12AA  00F2               	movwf	fputc@fp
  8634  12AB  3180  2007  3192   	fcall	_fputc
  8635  12AE                     l2786:
  8636                           
  8637                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 86:         ++i;
  8638  12AE  3001               	movlw	1
  8639  12AF  0020               	movlb	0	; select bank0
  8640  12B0  07A7               	addwf	pad@i,f
  8641  12B1  3000               	movlw	0
  8642  12B2  3DA8               	addwfc	pad@i+1,f
  8643  12B3                     l2788:
  8644                           
  8645                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 84:     while (i 
      +                          < w) {
  8646  12B3  0828               	movf	pad@i+1,w
  8647  12B4  3A80               	xorlw	128
  8648  12B5  00FC               	movwf	??_pad
  8649  12B6  082A               	movf	pad@w+1,w
  8650  12B7  3A80               	xorlw	128
  8651  12B8  027C               	subwf	??_pad,w
  8652  12B9  1D03               	skipz
  8653  12BA  2ABD               	goto	u2875
  8654  12BB  0829               	movf	pad@w,w
  8655  12BC  0227               	subwf	pad@i,w
  8656  12BD                     u2875:
  8657  12BD  1C03               	skipc
  8658  12BE  2AC0               	goto	u2871
  8659  12BF  2AC1               	goto	u2870
  8660  12C0                     u2871:
  8661  12C0  2AA2               	goto	l2784
  8662  12C1                     u2870:
  8663  12C1                     l1029:
  8664                           
  8665                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 90:     if (!(fla
      +                          gs & (1 << 0))) {
  8666  12C1  0021               	movlb	1	; select bank1
  8667  12C2  1862               	btfsc	_flags^(0+128),0
  8668  12C3  2AC5               	goto	u2881
  8669  12C4  2AC6               	goto	u2880
  8670  12C5                     u2881:
  8671  12C5  2ACF               	goto	l2792
  8672  12C6                     u2880:
  8673  12C6                     l2790:
  8674                           
  8675                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 91:         fputs
      +                          ((const char *)buf, fp);
  8676  12C6  0020               	movlb	0	; select bank0
  8677  12C7  082B               	movf	pad@fp,w
  8678  12C8  00FC               	movwf	??_pad
  8679  12C9  087C               	movf	??_pad,w
  8680  12CA  00F8               	movwf	fputs@fp
  8681  12CB  0824               	movf	pad@buf,w
  8682  12CC  3190  206B  3192   	fcall	_fputs
  8683  12CF                     l2792:
  8684                           
  8685                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 94:     return (i
      +                          nt)(strlen(buf) + (size_t)w);
  8686  12CF  0020               	movlb	0	; select bank0
  8687  12D0  0824               	movf	pad@buf,w
  8688  12D1  319F  278D  3192   	fcall	_strlen
  8689  12D4  0020               	movlb	0	; select bank0
  8690  12D5  0829               	movf	pad@w,w
  8691  12D6  0770               	addwf	?_strlen,w
  8692  12D7  00A4               	movwf	?_pad
  8693  12D8  082A               	movf	pad@w+1,w
  8694  12D9  3D71               	addwfc	?_strlen+1,w
  8695  12DA  00A5               	movwf	?_pad+1
  8696  12DB                     l1031:
  8697  12DB  0008               	return
  8698  12DC                     __end_of_pad:
  8699                           
  8700                           	psect	text20
  8701  1F8D                     __ptext20:	
  8702 ;; *************** function _strlen *****************
  8703 ;; Defined at:
  8704 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\strlen.c"
  8705 ;; Parameters:    Size  Location     Type
  8706 ;;  s               1    wreg     PTR const unsigned char 
  8707 ;;		 -> dbuf(32), 
  8708 ;; Auto vars:     Size  Location     Type
  8709 ;;  s               1    4[COMMON] PTR const unsigned char 
  8710 ;;		 -> dbuf(32), 
  8711 ;;  a               1    3[COMMON] PTR const unsigned char 
  8712 ;;		 -> dbuf(32), 
  8713 ;; Return value:  Size  Location     Type
  8714 ;;                  2    0[COMMON] unsigned int 
  8715 ;; Registers used:
  8716 ;;		wreg, fsr1l, fsr1h, status,2, status,0
  8717 ;; Tracked objects:
  8718 ;;		On entry : 0/0
  8719 ;;		On exit  : 0/0
  8720 ;;		Unchanged: 0/0
  8721 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  8722 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8723 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8724 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8725 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8726 ;;Total ram usage:        5 bytes
  8727 ;; Hardware stack levels used: 1
  8728 ;; This function calls:
  8729 ;;		Nothing
  8730 ;; This function is called by:
  8731 ;;		_pad
  8732 ;; This function uses a non-reentrant model
  8733 ;;
  8734                           
  8735                           
  8736                           ;psect for function _strlen
  8737  1F8D                     _strlen:
  8738                           
  8739                           ;incstack = 0
  8740                           ; Regs used in _strlen: [wreg+fsr1l+fsr1h+status,2+status,0]
  8741                           ;strlen@s stored from wreg
  8742  1F8D  00F4               	movwf	strlen@s
  8743  1F8E                     l2586:
  8744  1F8E  0874               	movf	strlen@s,w
  8745  1F8F  00F2               	movwf	??_strlen
  8746  1F90  0872               	movf	??_strlen,w
  8747  1F91  00F3               	movwf	strlen@a
  8748  1F92  2F97               	goto	l2590
  8749  1F93                     l2588:
  8750  1F93  3001               	movlw	1
  8751  1F94  00F2               	movwf	??_strlen
  8752  1F95  0872               	movf	??_strlen,w
  8753  1F96  07F4               	addwf	strlen@s,f
  8754  1F97                     l2590:
  8755  1F97  0874               	movf	strlen@s,w
  8756  1F98  0086               	movwf	6
  8757  1F99  3001               	movlw	1	; select bank2/3
  8758  1F9A  0087               	movwf	7
  8759  1F9B  0801               	movf	1,w
  8760  1F9C  1D03               	btfss	3,2
  8761  1F9D  2F9F               	goto	u2421
  8762  1F9E  2FA0               	goto	u2420
  8763  1F9F                     u2421:
  8764  1F9F  2F93               	goto	l2588
  8765  1FA0                     u2420:
  8766  1FA0                     l2592:
  8767  1FA0  0873               	movf	strlen@a,w
  8768  1FA1  0274               	subwf	strlen@s,w
  8769  1FA2  00F0               	movwf	?_strlen
  8770  1FA3  01F1               	clrf	?_strlen+1
  8771  1FA4  1BF0               	btfsc	?_strlen,7
  8772  1FA5  03F1               	decf	?_strlen+1,f
  8773  1FA6                     l1127:
  8774  1FA6  0008               	return
  8775  1FA7                     __end_of_strlen:
  8776                           
  8777                           	psect	text21
  8778  106B                     __ptext21:	
  8779 ;; *************** function _fputs *****************
  8780 ;; Defined at:
  8781 ;;		line 8 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\nf_fputs.c"
  8782 ;; Parameters:    Size  Location     Type
  8783 ;;  s               1    wreg     PTR const unsigned char 
  8784 ;;		 -> dbuf(32), 
  8785 ;;  fp              1    8[COMMON] PTR struct _IO_FILE
  8786 ;;		 -> sprintf@f(5), 
  8787 ;; Auto vars:     Size  Location     Type
  8788 ;;  s               1    3[BANK0 ] PTR const unsigned char 
  8789 ;;		 -> dbuf(32), 
  8790 ;;  i               2    1[BANK0 ] int 
  8791 ;;  c               1    0[BANK0 ] unsigned char 
  8792 ;; Return value:  Size  Location     Type
  8793 ;;                  2    8[COMMON] int 
  8794 ;; Registers used:
  8795 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  8796 ;; Tracked objects:
  8797 ;;		On entry : 0/0
  8798 ;;		On exit  : 0/0
  8799 ;;		Unchanged: 0/0
  8800 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  8801 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8802 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8803 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8804 ;;      Totals:         4       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8805 ;;Total ram usage:        8 bytes
  8806 ;; Hardware stack levels used: 1
  8807 ;; Hardware stack levels required when called: 2
  8808 ;; This function calls:
  8809 ;;		_fputc
  8810 ;; This function is called by:
  8811 ;;		_pad
  8812 ;; This function uses a non-reentrant model
  8813 ;;
  8814                           
  8815                           
  8816                           ;psect for function _fputs
  8817  106B                     _fputs:
  8818                           
  8819                           ;incstack = 0
  8820                           ; Regs used in _fputs: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  8821                           ;fputs@s stored from wreg
  8822  106B  0020               	movlb	0	; select bank0
  8823  106C  00A3               	movwf	fputs@s
  8824  106D                     l2578:
  8825  106D  01A1               	clrf	fputs@i
  8826  106E  01A2               	clrf	fputs@i+1
  8827  106F  2883               	goto	l2584
  8828  1070                     l2580:
  8829  1070  0820               	movf	fputs@c,w
  8830  1071  00F9               	movwf	??_fputs
  8831  1072  01FA               	clrf	??_fputs+1
  8832  1073  0879               	movf	??_fputs,w
  8833  1074  00F0               	movwf	fputc@c
  8834  1075  087A               	movf	??_fputs+1,w
  8835  1076  00F1               	movwf	fputc@c+1
  8836  1077  0878               	movf	fputs@fp,w
  8837  1078  00FB               	movwf	??_fputs+2
  8838  1079  087B               	movf	??_fputs+2,w
  8839  107A  00F2               	movwf	fputc@fp
  8840  107B  3180  2007  3190   	fcall	_fputc
  8841  107E                     l2582:
  8842  107E  3001               	movlw	1
  8843  107F  0020               	movlb	0	; select bank0
  8844  1080  07A1               	addwf	fputs@i,f
  8845  1081  3000               	movlw	0
  8846  1082  3DA2               	addwfc	fputs@i+1,f
  8847  1083                     l2584:
  8848  1083  0821               	movf	fputs@i,w
  8849  1084  0723               	addwf	fputs@s,w
  8850  1085  00F9               	movwf	??_fputs
  8851  1086  0879               	movf	??_fputs,w
  8852  1087  0086               	movwf	6
  8853  1088  3001               	movlw	1	; select bank2/3
  8854  1089  0087               	movwf	7
  8855  108A  0801               	movf	1,w
  8856  108B  00FA               	movwf	??_fputs+1
  8857  108C  087A               	movf	??_fputs+1,w
  8858  108D  00A0               	movwf	fputs@c
  8859  108E  0820               	movf	fputs@c,w
  8860  108F  1D03               	btfss	3,2
  8861  1090  2892               	goto	u2411
  8862  1091  2893               	goto	u2410
  8863  1092                     u2411:
  8864  1092  2870               	goto	l2580
  8865  1093                     u2410:
  8866  1093                     l1118:
  8867  1093  0008               	return
  8868  1094                     __end_of_fputs:
  8869                           
  8870                           	psect	text22
  8871  0007                     __ptext22:	
  8872 ;; *************** function _fputc *****************
  8873 ;; Defined at:
  8874 ;;		line 8 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\nf_fputc.c"
  8875 ;; Parameters:    Size  Location     Type
  8876 ;;  c               2    0[COMMON] int 
  8877 ;;  fp              1    2[COMMON] PTR struct _IO_FILE
  8878 ;;		 -> sprintf@f(5), 
  8879 ;; Auto vars:     Size  Location     Type
  8880 ;;		None
  8881 ;; Return value:  Size  Location     Type
  8882 ;;                  2    0[COMMON] int 
  8883 ;; Registers used:
  8884 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  8885 ;; Tracked objects:
  8886 ;;		On entry : 0/0
  8887 ;;		On exit  : 0/0
  8888 ;;		Unchanged: 0/0
  8889 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  8890 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8891 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8892 ;;      Temps:          5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8893 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8894 ;;Total ram usage:        8 bytes
  8895 ;; Hardware stack levels used: 1
  8896 ;; Hardware stack levels required when called: 1
  8897 ;; This function calls:
  8898 ;;		_putch
  8899 ;; This function is called by:
  8900 ;;		_pad
  8901 ;;		_vfpfcnvrt
  8902 ;;		_fputs
  8903 ;; This function uses a non-reentrant model
  8904 ;;
  8905                           
  8906                           
  8907                           ;psect for function _fputc
  8908  0007                     _fputc:
  8909  0007                     l2556:	
  8910                           ;incstack = 0
  8911                           ; Regs used in _fputc: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  8912                           
  8913  0007  0872               	movf	fputc@fp,w
  8914  0008  1903               	btfsc	3,2
  8915  0009  280B               	goto	u2351
  8916  000A  280C               	goto	u2350
  8917  000B                     u2351:
  8918  000B  2811               	goto	l2560
  8919  000C                     u2350:
  8920  000C                     l2558:
  8921  000C  0872               	movf	fputc@fp,w
  8922  000D  1D03               	btfss	3,2
  8923  000E  2810               	goto	u2361
  8924  000F  2811               	goto	u2360
  8925  0010                     u2361:
  8926  0010  2816               	goto	l2562
  8927  0011                     u2360:
  8928  0011                     l2560:
  8929  0011  0870               	movf	fputc@c,w
  8930  0012  3180  2006  3180   	fcall	_putch
  8931  0015  2855               	goto	l1110
  8932  0016                     l2562:
  8933  0016  0872               	movf	fputc@fp,w
  8934  0017  3E03               	addlw	3
  8935  0018  0086               	movwf	6
  8936  0019  0187               	clrf	7
  8937  001A  0016               	moviw fsr1++
  8938  001B  0401               	iorwf	1,w
  8939  001C  1903               	btfsc	3,2
  8940  001D  281F               	goto	u2371
  8941  001E  2820               	goto	u2370
  8942  001F                     u2371:
  8943  001F  283D               	goto	l2566
  8944  0020                     u2370:
  8945  0020                     l2564:
  8946  0020  0872               	movf	fputc@fp,w
  8947  0021  3E03               	addlw	3
  8948  0022  0086               	movwf	6
  8949  0023  0187               	clrf	7
  8950  0024  3F40               	moviw [0]fsr1
  8951  0025  00F3               	movwf	??_fputc
  8952  0026  3F41               	moviw [1]fsr1
  8953  0027  00F4               	movwf	??_fputc+1
  8954  0028  0A72               	incf	fputc@fp,w
  8955  0029  0086               	movwf	6
  8956  002A  0187               	clrf	7
  8957  002B  3F40               	moviw [0]fsr1
  8958  002C  00F5               	movwf	??_fputc+2
  8959  002D  3F41               	moviw [1]fsr1
  8960  002E  00F6               	movwf	??_fputc+3
  8961  002F  0876               	movf	??_fputc+3,w
  8962  0030  3A80               	xorlw	128
  8963  0031  00F7               	movwf	??_fputc+4
  8964  0032  0874               	movf	??_fputc+1,w
  8965  0033  3A80               	xorlw	128
  8966  0034  0277               	subwf	??_fputc+4,w
  8967  0035  1D03               	skipz
  8968  0036  2839               	goto	u2385
  8969  0037  0873               	movf	??_fputc,w
  8970  0038  0275               	subwf	??_fputc+2,w
  8971  0039                     u2385:
  8972  0039  1803               	skipnc
  8973  003A  283C               	goto	u2381
  8974  003B  283D               	goto	u2380
  8975  003C                     u2381:
  8976  003C  2855               	goto	l1110
  8977  003D                     u2380:
  8978  003D                     l2566:
  8979  003D  0870               	movf	fputc@c,w
  8980  003E  00F3               	movwf	??_fputc
  8981  003F  0872               	movf	fputc@fp,w
  8982  0040  0086               	movwf	6
  8983  0041  0187               	clrf	7
  8984  0042  0A72               	incf	fputc@fp,w
  8985  0043  0084               	movwf	4
  8986  0044  0185               	clrf	5
  8987  0045  0800               	movf	0,w
  8988  0046  0701               	addwf	1,w
  8989  0047  00F4               	movwf	??_fputc+1
  8990  0048  0874               	movf	??_fputc+1,w
  8991  0049  0086               	movwf	6
  8992  004A  0187               	clrf	7
  8993  004B  0873               	movf	??_fputc,w
  8994  004C  0081               	movwf	1
  8995  004D                     l2568:
  8996  004D  0A72               	incf	fputc@fp,w
  8997  004E  0086               	movwf	6
  8998  004F  0187               	clrf	7
  8999  0050  3001               	movlw	1
  9000  0051  0781               	addwf	1,f
  9001  0052  3141               	addfsr 1,1
  9002  0053  1803               	skipnc
  9003  0054  0A81               	incf	1,f
  9004  0055                     l1110:
  9005  0055  0008               	return
  9006  0056                     __end_of_fputc:
  9007                           
  9008                           	psect	text23
  9009  0006                     __ptext23:	
  9010 ;; *************** function _putch *****************
  9011 ;; Defined at:
  9012 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\putch.c"
  9013 ;; Parameters:    Size  Location     Type
  9014 ;;  c               1    wreg     unsigned char 
  9015 ;; Auto vars:     Size  Location     Type
  9016 ;;  c               1    0[COMMON] unsigned char 
  9017 ;; Return value:  Size  Location     Type
  9018 ;;                  1    wreg      void 
  9019 ;; Registers used:
  9020 ;;		wreg
  9021 ;; Tracked objects:
  9022 ;;		On entry : 0/0
  9023 ;;		On exit  : 0/0
  9024 ;;		Unchanged: 0/0
  9025 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  9026 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9027 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9028 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9029 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9030 ;;Total ram usage:        0 bytes
  9031 ;; Hardware stack levels used: 1
  9032 ;; This function calls:
  9033 ;;		Nothing
  9034 ;; This function is called by:
  9035 ;;		_fputc
  9036 ;; This function uses a non-reentrant model
  9037 ;;
  9038                           
  9039                           
  9040                           ;psect for function _putch
  9041  0006                     _putch:
  9042  0006                     l1121:	
  9043                           ;incstack = 0
  9044                           ; Regs used in _putch: [wreg]
  9045                           
  9046  0006  0008               	return
  9047  0007                     __end_of_putch:
  9048                           
  9049                           	psect	text24
  9050  1F73                     __ptext24:	
  9051 ;; *************** function _abs *****************
  9052 ;; Defined at:
  9053 ;;		line 1 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\abs.c"
  9054 ;; Parameters:    Size  Location     Type
  9055 ;;  a               2    3[COMMON] int 
  9056 ;; Auto vars:     Size  Location     Type
  9057 ;;		None
  9058 ;; Return value:  Size  Location     Type
  9059 ;;                  2    3[COMMON] int 
  9060 ;; Registers used:
  9061 ;;		wreg, status,2, status,0
  9062 ;; Tracked objects:
  9063 ;;		On entry : 0/0
  9064 ;;		On exit  : 0/0
  9065 ;;		Unchanged: 0/0
  9066 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  9067 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9068 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9069 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9070 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9071 ;;Total ram usage:        4 bytes
  9072 ;; Hardware stack levels used: 1
  9073 ;; This function calls:
  9074 ;;		Nothing
  9075 ;; This function is called by:
  9076 ;;		_dtoa
  9077 ;; This function uses a non-reentrant model
  9078 ;;
  9079                           
  9080                           
  9081                           ;psect for function _abs
  9082  1F73                     _abs:
  9083  1F73                     l2796:	
  9084                           ;incstack = 0
  9085                           ; Regs used in _abs: [wreg+status,2+status,0]
  9086                           
  9087  1F73  0874               	movf	abs@a+1,w
  9088  1F74  3A80               	xorlw	128
  9089  1F75  00F5               	movwf	??_abs
  9090  1F76  3080               	movlw	128
  9091  1F77  0275               	subwf	??_abs,w
  9092  1F78  1D03               	skipz
  9093  1F79  2F7C               	goto	u2895
  9094  1F7A  3001               	movlw	1
  9095  1F7B  0273               	subwf	abs@a,w
  9096  1F7C                     u2895:
  9097  1F7C  1803               	skipnc
  9098  1F7D  2F7F               	goto	u2891
  9099  1F7E  2F80               	goto	u2890
  9100  1F7F                     u2891:
  9101  1F7F  2F8C               	goto	l1095
  9102  1F80                     u2890:
  9103  1F80                     l2798:
  9104  1F80  0973               	comf	abs@a,w
  9105  1F81  00F5               	movwf	??_abs
  9106  1F82  0974               	comf	abs@a+1,w
  9107  1F83  00F6               	movwf	??_abs+1
  9108  1F84  0AF5               	incf	??_abs,f
  9109  1F85  1903               	skipnz
  9110  1F86  0AF6               	incf	??_abs+1,f
  9111  1F87  0875               	movf	??_abs,w
  9112  1F88  00F3               	movwf	?_abs
  9113  1F89  0876               	movf	??_abs+1,w
  9114  1F8A  00F4               	movwf	?_abs+1
  9115  1F8B  2F8C               	goto	l1098
  9116  1F8C                     l1095:
  9117  1F8C                     l1098:
  9118  1F8C  0008               	return
  9119  1F8D                     __end_of_abs:
  9120                           
  9121                           	psect	text25
  9122  0D28                     __ptext25:	
  9123 ;; *************** function ___aomod *****************
  9124 ;; Defined at:
  9125 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\aomod.c"
  9126 ;; Parameters:    Size  Location     Type
  9127 ;;  divisor         8    0[BANK0 ] long long 
  9128 ;;  dividend        8    8[BANK0 ] long long 
  9129 ;; Auto vars:     Size  Location     Type
  9130 ;;  sign            1    2[COMMON] unsigned char 
  9131 ;;  counter         1    1[COMMON] unsigned char 
  9132 ;; Return value:  Size  Location     Type
  9133 ;;                  8    0[BANK0 ] long long 
  9134 ;; Registers used:
  9135 ;;		wreg, fsr1l, fsr1h, status,2, status,0
  9136 ;; Tracked objects:
  9137 ;;		On entry : 0/0
  9138 ;;		On exit  : 0/0
  9139 ;;		Unchanged: 0/0
  9140 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  9141 ;;      Params:         0      16       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9142 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9143 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9144 ;;      Totals:         3      16       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9145 ;;Total ram usage:       19 bytes
  9146 ;; Hardware stack levels used: 1
  9147 ;; This function calls:
  9148 ;;		Nothing
  9149 ;; This function is called by:
  9150 ;;		_dtoa
  9151 ;; This function uses a non-reentrant model
  9152 ;;
  9153                           
  9154                           
  9155                           ;psect for function ___aomod
  9156  0D28                     ___aomod:
  9157  0D28                     l2706:	
  9158                           ;incstack = 0
  9159                           ; Regs used in ___aomod: [wreg+fsr1l+fsr1h+status,2+status,0]
  9160                           
  9161  0D28  01F2               	clrf	___aomod@sign
  9162  0D29                     l2708:
  9163  0D29  3028               	movlw	low ___aomod@dividend
  9164  0D2A  0086               	movwf	6
  9165  0D2B  3000               	movlw	high ___aomod@dividend
  9166  0D2C  0087               	movwf	7
  9167  0D2D  3F47               	moviw [7]fsr1
  9168  0D2E  00F0               	movwf	??___aomod
  9169  0D2F  1FF0               	btfss	??___aomod,7
  9170  0D30  2D32               	goto	u2661
  9171  0D31  2D33               	goto	u2660
  9172  0D32                     u2661:
  9173  0D32  2D54               	goto	l2712
  9174  0D33                     u2660:
  9175  0D33                     l2710:
  9176  0D33  0020               	movlb	0	; select bank0
  9177  0D34  09A8               	comf	___aomod@dividend,f
  9178  0D35  09A9               	comf	___aomod@dividend+1,f
  9179  0D36  09AA               	comf	___aomod@dividend+2,f
  9180  0D37  09AB               	comf	___aomod@dividend+3,f
  9181  0D38  09AC               	comf	___aomod@dividend+4,f
  9182  0D39  09AD               	comf	___aomod@dividend+5,f
  9183  0D3A  09AE               	comf	___aomod@dividend+6,f
  9184  0D3B  09AF               	comf	___aomod@dividend+7,f
  9185  0D3C  0AA8               	incf	___aomod@dividend,f
  9186  0D3D  1D03               	skipz
  9187  0D3E  2D52               	goto	u267lld
  9188  0D3F  0AA9               	incf	___aomod@dividend+1,f
  9189  0D40  1D03               	skipz
  9190  0D41  2D52               	goto	u267lld
  9191  0D42  0AAA               	incf	___aomod@dividend+2,f
  9192  0D43  1D03               	skipz
  9193  0D44  2D52               	goto	u267lld
  9194  0D45  0AAB               	incf	___aomod@dividend+3,f
  9195  0D46  1D03               	skipz
  9196  0D47  2D52               	goto	u267lld
  9197  0D48  0AAC               	incf	___aomod@dividend+4,f
  9198  0D49  1D03               	skipz
  9199  0D4A  2D52               	goto	u267lld
  9200  0D4B  0AAD               	incf	___aomod@dividend+5,f
  9201  0D4C  1D03               	skipz
  9202  0D4D  2D52               	goto	u267lld
  9203  0D4E  0AAE               	incf	___aomod@dividend+6,f
  9204  0D4F  1D03               	skipz
  9205  0D50  2D52               	goto	u267lld
  9206  0D51  0AAF               	incf	___aomod@dividend+7,f
  9207  0D52                     u267lld:
  9208  0D52  01F2               	clrf	___aomod@sign
  9209  0D53  0AF2               	incf	___aomod@sign,f
  9210  0D54                     l2712:
  9211  0D54  3020               	movlw	low ___aomod@divisor
  9212  0D55  0086               	movwf	6
  9213  0D56  3000               	movlw	high ___aomod@divisor
  9214  0D57  0087               	movwf	7
  9215  0D58  3F47               	moviw [7]fsr1
  9216  0D59  00F0               	movwf	??___aomod
  9217  0D5A  1FF0               	btfss	??___aomod,7
  9218  0D5B  2D5D               	goto	u2681
  9219  0D5C  2D5E               	goto	u2680
  9220  0D5D                     u2681:
  9221  0D5D  2D7D               	goto	l2716
  9222  0D5E                     u2680:
  9223  0D5E                     l2714:
  9224  0D5E  0020               	movlb	0	; select bank0
  9225  0D5F  09A0               	comf	___aomod@divisor,f
  9226  0D60  09A1               	comf	___aomod@divisor+1,f
  9227  0D61  09A2               	comf	___aomod@divisor+2,f
  9228  0D62  09A3               	comf	___aomod@divisor+3,f
  9229  0D63  09A4               	comf	___aomod@divisor+4,f
  9230  0D64  09A5               	comf	___aomod@divisor+5,f
  9231  0D65  09A6               	comf	___aomod@divisor+6,f
  9232  0D66  09A7               	comf	___aomod@divisor+7,f
  9233  0D67  0AA0               	incf	___aomod@divisor,f
  9234  0D68  1D03               	skipz
  9235  0D69  2D7D               	goto	u269lld
  9236  0D6A  0AA1               	incf	___aomod@divisor+1,f
  9237  0D6B  1D03               	skipz
  9238  0D6C  2D7D               	goto	u269lld
  9239  0D6D  0AA2               	incf	___aomod@divisor+2,f
  9240  0D6E  1D03               	skipz
  9241  0D6F  2D7D               	goto	u269lld
  9242  0D70  0AA3               	incf	___aomod@divisor+3,f
  9243  0D71  1D03               	skipz
  9244  0D72  2D7D               	goto	u269lld
  9245  0D73  0AA4               	incf	___aomod@divisor+4,f
  9246  0D74  1D03               	skipz
  9247  0D75  2D7D               	goto	u269lld
  9248  0D76  0AA5               	incf	___aomod@divisor+5,f
  9249  0D77  1D03               	skipz
  9250  0D78  2D7D               	goto	u269lld
  9251  0D79  0AA6               	incf	___aomod@divisor+6,f
  9252  0D7A  1D03               	skipz
  9253  0D7B  2D7D               	goto	u269lld
  9254  0D7C  0AA7               	incf	___aomod@divisor+7,f
  9255  0D7D                     u269lld:
  9256  0D7D                     l2716:
  9257  0D7D  0020               	movlb	0	; select bank0
  9258  0D7E  0820               	movf	___aomod@divisor,w
  9259  0D7F  0421               	iorwf	___aomod@divisor+1,w
  9260  0D80  0422               	iorwf	___aomod@divisor+2,w
  9261  0D81  0423               	iorwf	___aomod@divisor+3,w
  9262  0D82  0424               	iorwf	___aomod@divisor+4,w
  9263  0D83  0425               	iorwf	___aomod@divisor+5,w
  9264  0D84  0426               	iorwf	___aomod@divisor+6,w
  9265  0D85  0427               	iorwf	___aomod@divisor+7,w
  9266  0D86  1903               	skipnz
  9267  0D87  2D89               	goto	u2701
  9268  0D88  2D8A               	goto	u2700
  9269  0D89                     u2701:
  9270  0D89  2DDD               	goto	l2732
  9271  0D8A                     u2700:
  9272  0D8A                     l2718:
  9273  0D8A  01F1               	clrf	___aomod@counter
  9274  0D8B  0AF1               	incf	___aomod@counter,f
  9275  0D8C  2D99               	goto	l2724
  9276  0D8D                     l2720:
  9277  0D8D  35A0               	lslf	___aomod@divisor,f
  9278  0D8E  0DA1               	rlf	___aomod@divisor+1,f
  9279  0D8F  0DA2               	rlf	___aomod@divisor+2,f
  9280  0D90  0DA3               	rlf	___aomod@divisor+3,f
  9281  0D91  0DA4               	rlf	___aomod@divisor+4,f
  9282  0D92  0DA5               	rlf	___aomod@divisor+5,f
  9283  0D93  0DA6               	rlf	___aomod@divisor+6,f
  9284  0D94  0DA7               	rlf	___aomod@divisor+7,f
  9285  0D95                     l2722:
  9286  0D95  3001               	movlw	1
  9287  0D96  00F0               	movwf	??___aomod
  9288  0D97  0870               	movf	??___aomod,w
  9289  0D98  07F1               	addwf	___aomod@counter,f
  9290  0D99                     l2724:
  9291  0D99  1FA7               	btfss	___aomod@divisor+7,7
  9292  0D9A  2D9C               	goto	u2711
  9293  0D9B  2D9D               	goto	u2710
  9294  0D9C                     u2711:
  9295  0D9C  2D8D               	goto	l2720
  9296  0D9D                     u2710:
  9297  0D9D                     l2726:
  9298  0D9D  0827               	movf	___aomod@divisor+7,w
  9299  0D9E  022F               	subwf	___aomod@dividend+7,w
  9300  0D9F  1D03               	skipz
  9301  0DA0  2DBB               	goto	u2725
  9302  0DA1  0826               	movf	___aomod@divisor+6,w
  9303  0DA2  022E               	subwf	___aomod@dividend+6,w
  9304  0DA3  1D03               	skipz
  9305  0DA4  2DBB               	goto	u2725
  9306  0DA5  0825               	movf	___aomod@divisor+5,w
  9307  0DA6  022D               	subwf	___aomod@dividend+5,w
  9308  0DA7  1D03               	skipz
  9309  0DA8  2DBB               	goto	u2725
  9310  0DA9  0824               	movf	___aomod@divisor+4,w
  9311  0DAA  022C               	subwf	___aomod@dividend+4,w
  9312  0DAB  1D03               	skipz
  9313  0DAC  2DBB               	goto	u2725
  9314  0DAD  0823               	movf	___aomod@divisor+3,w
  9315  0DAE  022B               	subwf	___aomod@dividend+3,w
  9316  0DAF  1D03               	skipz
  9317  0DB0  2DBB               	goto	u2725
  9318  0DB1  0822               	movf	___aomod@divisor+2,w
  9319  0DB2  022A               	subwf	___aomod@dividend+2,w
  9320  0DB3  1D03               	skipz
  9321  0DB4  2DBB               	goto	u2725
  9322  0DB5  0821               	movf	___aomod@divisor+1,w
  9323  0DB6  0229               	subwf	___aomod@dividend+1,w
  9324  0DB7  1D03               	skipz
  9325  0DB8  2DBB               	goto	u2725
  9326  0DB9  0820               	movf	___aomod@divisor,w
  9327  0DBA  0228               	subwf	___aomod@dividend,w
  9328  0DBB                     u2725:
  9329  0DBB  1C03               	skipc
  9330  0DBC  2DBE               	goto	u2721
  9331  0DBD  2DBF               	goto	u2720
  9332  0DBE                     u2721:
  9333  0DBE  2DCF               	goto	l2730
  9334  0DBF                     u2720:
  9335  0DBF                     l2728:
  9336  0DBF  0820               	movf	___aomod@divisor,w
  9337  0DC0  02A8               	subwf	___aomod@dividend,f
  9338  0DC1  0821               	movf	___aomod@divisor+1,w
  9339  0DC2  3BA9               	subwfb	___aomod@dividend+1,f
  9340  0DC3  0822               	movf	___aomod@divisor+2,w
  9341  0DC4  3BAA               	subwfb	___aomod@dividend+2,f
  9342  0DC5  0823               	movf	___aomod@divisor+3,w
  9343  0DC6  3BAB               	subwfb	___aomod@dividend+3,f
  9344  0DC7  0824               	movf	___aomod@divisor+4,w
  9345  0DC8  3BAC               	subwfb	___aomod@dividend+4,f
  9346  0DC9  0825               	movf	___aomod@divisor+5,w
  9347  0DCA  3BAD               	subwfb	___aomod@dividend+5,f
  9348  0DCB  0826               	movf	___aomod@divisor+6,w
  9349  0DCC  3BAE               	subwfb	___aomod@dividend+6,f
  9350  0DCD  0827               	movf	___aomod@divisor+7,w
  9351  0DCE  3BAF               	subwfb	___aomod@dividend+7,f
  9352  0DCF                     l2730:
  9353  0DCF  36A7               	lsrf	___aomod@divisor+7,f
  9354  0DD0  0CA6               	rrf	___aomod@divisor+6,f
  9355  0DD1  0CA5               	rrf	___aomod@divisor+5,f
  9356  0DD2  0CA4               	rrf	___aomod@divisor+4,f
  9357  0DD3  0CA3               	rrf	___aomod@divisor+3,f
  9358  0DD4  0CA2               	rrf	___aomod@divisor+2,f
  9359  0DD5  0CA1               	rrf	___aomod@divisor+1,f
  9360  0DD6  0CA0               	rrf	___aomod@divisor,f
  9361  0DD7  3001               	movlw	1
  9362  0DD8  02F1               	subwf	___aomod@counter,f
  9363  0DD9  1D03               	btfss	3,2
  9364  0DDA  2DDC               	goto	u2731
  9365  0DDB  2DDD               	goto	u2730
  9366  0DDC                     u2731:
  9367  0DDC  2D9D               	goto	l2726
  9368  0DDD                     u2730:
  9369  0DDD                     l2732:
  9370  0DDD  0872               	movf	___aomod@sign,w
  9371  0DDE  1903               	btfsc	3,2
  9372  0DDF  2DE1               	goto	u2741
  9373  0DE0  2DE2               	goto	u2740
  9374  0DE1                     u2741:
  9375  0DE1  2E00               	goto	l647
  9376  0DE2                     u2740:
  9377  0DE2                     l2734:
  9378  0DE2  09A8               	comf	___aomod@dividend,f
  9379  0DE3  09A9               	comf	___aomod@dividend+1,f
  9380  0DE4  09AA               	comf	___aomod@dividend+2,f
  9381  0DE5  09AB               	comf	___aomod@dividend+3,f
  9382  0DE6  09AC               	comf	___aomod@dividend+4,f
  9383  0DE7  09AD               	comf	___aomod@dividend+5,f
  9384  0DE8  09AE               	comf	___aomod@dividend+6,f
  9385  0DE9  09AF               	comf	___aomod@dividend+7,f
  9386  0DEA  0AA8               	incf	___aomod@dividend,f
  9387  0DEB  1D03               	skipz
  9388  0DEC  2E00               	goto	u275lld
  9389  0DED  0AA9               	incf	___aomod@dividend+1,f
  9390  0DEE  1D03               	skipz
  9391  0DEF  2E00               	goto	u275lld
  9392  0DF0  0AAA               	incf	___aomod@dividend+2,f
  9393  0DF1  1D03               	skipz
  9394  0DF2  2E00               	goto	u275lld
  9395  0DF3  0AAB               	incf	___aomod@dividend+3,f
  9396  0DF4  1D03               	skipz
  9397  0DF5  2E00               	goto	u275lld
  9398  0DF6  0AAC               	incf	___aomod@dividend+4,f
  9399  0DF7  1D03               	skipz
  9400  0DF8  2E00               	goto	u275lld
  9401  0DF9  0AAD               	incf	___aomod@dividend+5,f
  9402  0DFA  1D03               	skipz
  9403  0DFB  2E00               	goto	u275lld
  9404  0DFC  0AAE               	incf	___aomod@dividend+6,f
  9405  0DFD  1D03               	skipz
  9406  0DFE  2E00               	goto	u275lld
  9407  0DFF  0AAF               	incf	___aomod@dividend+7,f
  9408  0E00                     u275lld:
  9409  0E00                     l647:
  9410  0E00  0020               	movlb	0	; select bank0
  9411  0E01  0828               	movf	___aomod@dividend,w
  9412  0E02  00A0               	movwf	?___aomod
  9413  0E03  0829               	movf	___aomod@dividend+1,w
  9414  0E04  00A1               	movwf	?___aomod+1
  9415  0E05  082A               	movf	___aomod@dividend+2,w
  9416  0E06  00A2               	movwf	?___aomod+2
  9417  0E07  082B               	movf	___aomod@dividend+3,w
  9418  0E08  00A3               	movwf	?___aomod+3
  9419  0E09  082C               	movf	___aomod@dividend+4,w
  9420  0E0A  00A4               	movwf	?___aomod+4
  9421  0E0B  082D               	movf	___aomod@dividend+5,w
  9422  0E0C  00A5               	movwf	?___aomod+5
  9423  0E0D  082E               	movf	___aomod@dividend+6,w
  9424  0E0E  00A6               	movwf	?___aomod+6
  9425  0E0F  082F               	movf	___aomod@dividend+7,w
  9426  0E10  00A7               	movwf	?___aomod+7
  9427  0E11                     l648:
  9428  0E11  0008               	return
  9429  0E12                     __end_of___aomod:
  9430                           
  9431                           	psect	text26
  9432  0EFF                     __ptext26:	
  9433 ;; *************** function ___aodiv *****************
  9434 ;; Defined at:
  9435 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\aodiv.c"
  9436 ;; Parameters:    Size  Location     Type
  9437 ;;  divisor         8    0[BANK0 ] long long 
  9438 ;;  dividend        8    8[BANK0 ] long long 
  9439 ;; Auto vars:     Size  Location     Type
  9440 ;;  quotient        8    3[COMMON] long long 
  9441 ;;  sign            1    2[COMMON] unsigned char 
  9442 ;;  counter         1    1[COMMON] unsigned char 
  9443 ;; Return value:  Size  Location     Type
  9444 ;;                  8    0[BANK0 ] long long 
  9445 ;; Registers used:
  9446 ;;		wreg, fsr1l, fsr1h, status,2, status,0
  9447 ;; Tracked objects:
  9448 ;;		On entry : 0/0
  9449 ;;		On exit  : 0/0
  9450 ;;		Unchanged: 0/0
  9451 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  9452 ;;      Params:         0      16       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9453 ;;      Locals:        10       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9454 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9455 ;;      Totals:        11      16       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9456 ;;Total ram usage:       27 bytes
  9457 ;; Hardware stack levels used: 1
  9458 ;; This function calls:
  9459 ;;		Nothing
  9460 ;; This function is called by:
  9461 ;;		_dtoa
  9462 ;; This function uses a non-reentrant model
  9463 ;;
  9464                           
  9465                           
  9466                           ;psect for function ___aodiv
  9467  0EFF                     ___aodiv:
  9468  0EFF                     l2668:	
  9469                           ;incstack = 0
  9470                           ; Regs used in ___aodiv: [wreg+fsr1l+fsr1h+status,2+status,0]
  9471                           
  9472  0EFF  01F2               	clrf	___aodiv@sign
  9473  0F00                     l2670:
  9474  0F00  3020               	movlw	low ___aodiv@divisor
  9475  0F01  0086               	movwf	6
  9476  0F02  3000               	movlw	high ___aodiv@divisor
  9477  0F03  0087               	movwf	7
  9478  0F04  3F47               	moviw [7]fsr1
  9479  0F05  00F0               	movwf	??___aodiv
  9480  0F06  1FF0               	btfss	??___aodiv,7
  9481  0F07  2F09               	goto	u2551
  9482  0F08  2F0A               	goto	u2550
  9483  0F09                     u2551:
  9484  0F09  2F2B               	goto	l2674
  9485  0F0A                     u2550:
  9486  0F0A                     l2672:
  9487  0F0A  0020               	movlb	0	; select bank0
  9488  0F0B  09A0               	comf	___aodiv@divisor,f
  9489  0F0C  09A1               	comf	___aodiv@divisor+1,f
  9490  0F0D  09A2               	comf	___aodiv@divisor+2,f
  9491  0F0E  09A3               	comf	___aodiv@divisor+3,f
  9492  0F0F  09A4               	comf	___aodiv@divisor+4,f
  9493  0F10  09A5               	comf	___aodiv@divisor+5,f
  9494  0F11  09A6               	comf	___aodiv@divisor+6,f
  9495  0F12  09A7               	comf	___aodiv@divisor+7,f
  9496  0F13  0AA0               	incf	___aodiv@divisor,f
  9497  0F14  1D03               	skipz
  9498  0F15  2F29               	goto	u256lld
  9499  0F16  0AA1               	incf	___aodiv@divisor+1,f
  9500  0F17  1D03               	skipz
  9501  0F18  2F29               	goto	u256lld
  9502  0F19  0AA2               	incf	___aodiv@divisor+2,f
  9503  0F1A  1D03               	skipz
  9504  0F1B  2F29               	goto	u256lld
  9505  0F1C  0AA3               	incf	___aodiv@divisor+3,f
  9506  0F1D  1D03               	skipz
  9507  0F1E  2F29               	goto	u256lld
  9508  0F1F  0AA4               	incf	___aodiv@divisor+4,f
  9509  0F20  1D03               	skipz
  9510  0F21  2F29               	goto	u256lld
  9511  0F22  0AA5               	incf	___aodiv@divisor+5,f
  9512  0F23  1D03               	skipz
  9513  0F24  2F29               	goto	u256lld
  9514  0F25  0AA6               	incf	___aodiv@divisor+6,f
  9515  0F26  1D03               	skipz
  9516  0F27  2F29               	goto	u256lld
  9517  0F28  0AA7               	incf	___aodiv@divisor+7,f
  9518  0F29                     u256lld:
  9519  0F29  01F2               	clrf	___aodiv@sign
  9520  0F2A  0AF2               	incf	___aodiv@sign,f
  9521  0F2B                     l2674:
  9522  0F2B  3028               	movlw	low ___aodiv@dividend
  9523  0F2C  0086               	movwf	6
  9524  0F2D  3000               	movlw	high ___aodiv@dividend
  9525  0F2E  0087               	movwf	7
  9526  0F2F  3F47               	moviw [7]fsr1
  9527  0F30  00F0               	movwf	??___aodiv
  9528  0F31  1FF0               	btfss	??___aodiv,7
  9529  0F32  2F34               	goto	u2571
  9530  0F33  2F35               	goto	u2570
  9531  0F34                     u2571:
  9532  0F34  2F58               	goto	l2680
  9533  0F35                     u2570:
  9534  0F35                     l2676:
  9535  0F35  0020               	movlb	0	; select bank0
  9536  0F36  09A8               	comf	___aodiv@dividend,f
  9537  0F37  09A9               	comf	___aodiv@dividend+1,f
  9538  0F38  09AA               	comf	___aodiv@dividend+2,f
  9539  0F39  09AB               	comf	___aodiv@dividend+3,f
  9540  0F3A  09AC               	comf	___aodiv@dividend+4,f
  9541  0F3B  09AD               	comf	___aodiv@dividend+5,f
  9542  0F3C  09AE               	comf	___aodiv@dividend+6,f
  9543  0F3D  09AF               	comf	___aodiv@dividend+7,f
  9544  0F3E  0AA8               	incf	___aodiv@dividend,f
  9545  0F3F  1D03               	skipz
  9546  0F40  2F54               	goto	u258lld
  9547  0F41  0AA9               	incf	___aodiv@dividend+1,f
  9548  0F42  1D03               	skipz
  9549  0F43  2F54               	goto	u258lld
  9550  0F44  0AAA               	incf	___aodiv@dividend+2,f
  9551  0F45  1D03               	skipz
  9552  0F46  2F54               	goto	u258lld
  9553  0F47  0AAB               	incf	___aodiv@dividend+3,f
  9554  0F48  1D03               	skipz
  9555  0F49  2F54               	goto	u258lld
  9556  0F4A  0AAC               	incf	___aodiv@dividend+4,f
  9557  0F4B  1D03               	skipz
  9558  0F4C  2F54               	goto	u258lld
  9559  0F4D  0AAD               	incf	___aodiv@dividend+5,f
  9560  0F4E  1D03               	skipz
  9561  0F4F  2F54               	goto	u258lld
  9562  0F50  0AAE               	incf	___aodiv@dividend+6,f
  9563  0F51  1D03               	skipz
  9564  0F52  2F54               	goto	u258lld
  9565  0F53  0AAF               	incf	___aodiv@dividend+7,f
  9566  0F54                     u258lld:
  9567  0F54                     l2678:
  9568  0F54  3001               	movlw	1
  9569  0F55  00F0               	movwf	??___aodiv
  9570  0F56  0870               	movf	??___aodiv,w
  9571  0F57  06F2               	xorwf	___aodiv@sign,f
  9572  0F58                     l2680:
  9573  0F58  3073               	movlw	low ___aodiv@quotient
  9574  0F59  0086               	movwf	6
  9575  0F5A  3000               	movlw	high ___aodiv@quotient
  9576  0F5B  0087               	movwf	7
  9577  0F5C  3008               	movlw	8
  9578  0F5D  00F0               	movwf	??___aodiv
  9579  0F5E  3000               	movlw	0
  9580  0F5F                     u2590:
  9581  0F5F  001E               	movwi fsr1++
  9582  0F60  0BF0               	decfsz	??___aodiv,f
  9583  0F61  2F5F               	goto	u2590
  9584  0F62                     l2682:
  9585  0F62  0020               	movlb	0	; select bank0
  9586  0F63  0820               	movf	___aodiv@divisor,w
  9587  0F64  0421               	iorwf	___aodiv@divisor+1,w
  9588  0F65  0422               	iorwf	___aodiv@divisor+2,w
  9589  0F66  0423               	iorwf	___aodiv@divisor+3,w
  9590  0F67  0424               	iorwf	___aodiv@divisor+4,w
  9591  0F68  0425               	iorwf	___aodiv@divisor+5,w
  9592  0F69  0426               	iorwf	___aodiv@divisor+6,w
  9593  0F6A  0427               	iorwf	___aodiv@divisor+7,w
  9594  0F6B  1903               	skipnz
  9595  0F6C  2F6E               	goto	u2601
  9596  0F6D  2F6F               	goto	u2600
  9597  0F6E                     u2601:
  9598  0F6E  2FCB               	goto	l2702
  9599  0F6F                     u2600:
  9600  0F6F                     l2684:
  9601  0F6F  01F1               	clrf	___aodiv@counter
  9602  0F70  0AF1               	incf	___aodiv@counter,f
  9603  0F71  2F7E               	goto	l2690
  9604  0F72                     l2686:
  9605  0F72  35A0               	lslf	___aodiv@divisor,f
  9606  0F73  0DA1               	rlf	___aodiv@divisor+1,f
  9607  0F74  0DA2               	rlf	___aodiv@divisor+2,f
  9608  0F75  0DA3               	rlf	___aodiv@divisor+3,f
  9609  0F76  0DA4               	rlf	___aodiv@divisor+4,f
  9610  0F77  0DA5               	rlf	___aodiv@divisor+5,f
  9611  0F78  0DA6               	rlf	___aodiv@divisor+6,f
  9612  0F79  0DA7               	rlf	___aodiv@divisor+7,f
  9613  0F7A                     l2688:
  9614  0F7A  3001               	movlw	1
  9615  0F7B  00F0               	movwf	??___aodiv
  9616  0F7C  0870               	movf	??___aodiv,w
  9617  0F7D  07F1               	addwf	___aodiv@counter,f
  9618  0F7E                     l2690:
  9619  0F7E  1FA7               	btfss	___aodiv@divisor+7,7
  9620  0F7F  2F81               	goto	u2611
  9621  0F80  2F82               	goto	u2610
  9622  0F81                     u2611:
  9623  0F81  2F72               	goto	l2686
  9624  0F82                     u2610:
  9625  0F82                     l2692:
  9626  0F82  35F3               	lslf	___aodiv@quotient,f
  9627  0F83  0DF4               	rlf	___aodiv@quotient+1,f
  9628  0F84  0DF5               	rlf	___aodiv@quotient+2,f
  9629  0F85  0DF6               	rlf	___aodiv@quotient+3,f
  9630  0F86  0DF7               	rlf	___aodiv@quotient+4,f
  9631  0F87  0DF8               	rlf	___aodiv@quotient+5,f
  9632  0F88  0DF9               	rlf	___aodiv@quotient+6,f
  9633  0F89  0DFA               	rlf	___aodiv@quotient+7,f
  9634  0F8A                     l2694:
  9635  0F8A  0827               	movf	___aodiv@divisor+7,w
  9636  0F8B  022F               	subwf	___aodiv@dividend+7,w
  9637  0F8C  1D03               	skipz
  9638  0F8D  2FA8               	goto	u2625
  9639  0F8E  0826               	movf	___aodiv@divisor+6,w
  9640  0F8F  022E               	subwf	___aodiv@dividend+6,w
  9641  0F90  1D03               	skipz
  9642  0F91  2FA8               	goto	u2625
  9643  0F92  0825               	movf	___aodiv@divisor+5,w
  9644  0F93  022D               	subwf	___aodiv@dividend+5,w
  9645  0F94  1D03               	skipz
  9646  0F95  2FA8               	goto	u2625
  9647  0F96  0824               	movf	___aodiv@divisor+4,w
  9648  0F97  022C               	subwf	___aodiv@dividend+4,w
  9649  0F98  1D03               	skipz
  9650  0F99  2FA8               	goto	u2625
  9651  0F9A  0823               	movf	___aodiv@divisor+3,w
  9652  0F9B  022B               	subwf	___aodiv@dividend+3,w
  9653  0F9C  1D03               	skipz
  9654  0F9D  2FA8               	goto	u2625
  9655  0F9E  0822               	movf	___aodiv@divisor+2,w
  9656  0F9F  022A               	subwf	___aodiv@dividend+2,w
  9657  0FA0  1D03               	skipz
  9658  0FA1  2FA8               	goto	u2625
  9659  0FA2  0821               	movf	___aodiv@divisor+1,w
  9660  0FA3  0229               	subwf	___aodiv@dividend+1,w
  9661  0FA4  1D03               	skipz
  9662  0FA5  2FA8               	goto	u2625
  9663  0FA6  0820               	movf	___aodiv@divisor,w
  9664  0FA7  0228               	subwf	___aodiv@dividend,w
  9665  0FA8                     u2625:
  9666  0FA8  1C03               	skipc
  9667  0FA9  2FAB               	goto	u2621
  9668  0FAA  2FAC               	goto	u2620
  9669  0FAB                     u2621:
  9670  0FAB  2FBD               	goto	l2700
  9671  0FAC                     u2620:
  9672  0FAC                     l2696:
  9673  0FAC  0820               	movf	___aodiv@divisor,w
  9674  0FAD  02A8               	subwf	___aodiv@dividend,f
  9675  0FAE  0821               	movf	___aodiv@divisor+1,w
  9676  0FAF  3BA9               	subwfb	___aodiv@dividend+1,f
  9677  0FB0  0822               	movf	___aodiv@divisor+2,w
  9678  0FB1  3BAA               	subwfb	___aodiv@dividend+2,f
  9679  0FB2  0823               	movf	___aodiv@divisor+3,w
  9680  0FB3  3BAB               	subwfb	___aodiv@dividend+3,f
  9681  0FB4  0824               	movf	___aodiv@divisor+4,w
  9682  0FB5  3BAC               	subwfb	___aodiv@dividend+4,f
  9683  0FB6  0825               	movf	___aodiv@divisor+5,w
  9684  0FB7  3BAD               	subwfb	___aodiv@dividend+5,f
  9685  0FB8  0826               	movf	___aodiv@divisor+6,w
  9686  0FB9  3BAE               	subwfb	___aodiv@dividend+6,f
  9687  0FBA  0827               	movf	___aodiv@divisor+7,w
  9688  0FBB  3BAF               	subwfb	___aodiv@dividend+7,f
  9689  0FBC                     l2698:
  9690  0FBC  1473               	bsf	___aodiv@quotient,0
  9691  0FBD                     l2700:
  9692  0FBD  36A7               	lsrf	___aodiv@divisor+7,f
  9693  0FBE  0CA6               	rrf	___aodiv@divisor+6,f
  9694  0FBF  0CA5               	rrf	___aodiv@divisor+5,f
  9695  0FC0  0CA4               	rrf	___aodiv@divisor+4,f
  9696  0FC1  0CA3               	rrf	___aodiv@divisor+3,f
  9697  0FC2  0CA2               	rrf	___aodiv@divisor+2,f
  9698  0FC3  0CA1               	rrf	___aodiv@divisor+1,f
  9699  0FC4  0CA0               	rrf	___aodiv@divisor,f
  9700  0FC5  3001               	movlw	1
  9701  0FC6  02F1               	subwf	___aodiv@counter,f
  9702  0FC7  1D03               	btfss	3,2
  9703  0FC8  2FCA               	goto	u2631
  9704  0FC9  2FCB               	goto	u2630
  9705  0FCA                     u2631:
  9706  0FCA  2F82               	goto	l2692
  9707  0FCB                     u2630:
  9708  0FCB                     l2702:
  9709  0FCB  0872               	movf	___aodiv@sign,w
  9710  0FCC  1903               	btfsc	3,2
  9711  0FCD  2FCF               	goto	u2641
  9712  0FCE  2FD0               	goto	u2640
  9713  0FCF                     u2641:
  9714  0FCF  2FEE               	goto	l634
  9715  0FD0                     u2640:
  9716  0FD0                     l2704:
  9717  0FD0  09F3               	comf	___aodiv@quotient,f
  9718  0FD1  09F4               	comf	___aodiv@quotient+1,f
  9719  0FD2  09F5               	comf	___aodiv@quotient+2,f
  9720  0FD3  09F6               	comf	___aodiv@quotient+3,f
  9721  0FD4  09F7               	comf	___aodiv@quotient+4,f
  9722  0FD5  09F8               	comf	___aodiv@quotient+5,f
  9723  0FD6  09F9               	comf	___aodiv@quotient+6,f
  9724  0FD7  09FA               	comf	___aodiv@quotient+7,f
  9725  0FD8  0AF3               	incf	___aodiv@quotient,f
  9726  0FD9  1D03               	skipz
  9727  0FDA  2FEE               	goto	u265lld
  9728  0FDB  0AF4               	incf	___aodiv@quotient+1,f
  9729  0FDC  1D03               	skipz
  9730  0FDD  2FEE               	goto	u265lld
  9731  0FDE  0AF5               	incf	___aodiv@quotient+2,f
  9732  0FDF  1D03               	skipz
  9733  0FE0  2FEE               	goto	u265lld
  9734  0FE1  0AF6               	incf	___aodiv@quotient+3,f
  9735  0FE2  1D03               	skipz
  9736  0FE3  2FEE               	goto	u265lld
  9737  0FE4  0AF7               	incf	___aodiv@quotient+4,f
  9738  0FE5  1D03               	skipz
  9739  0FE6  2FEE               	goto	u265lld
  9740  0FE7  0AF8               	incf	___aodiv@quotient+5,f
  9741  0FE8  1D03               	skipz
  9742  0FE9  2FEE               	goto	u265lld
  9743  0FEA  0AF9               	incf	___aodiv@quotient+6,f
  9744  0FEB  1D03               	skipz
  9745  0FEC  2FEE               	goto	u265lld
  9746  0FED  0AFA               	incf	___aodiv@quotient+7,f
  9747  0FEE                     u265lld:
  9748  0FEE                     l634:
  9749  0FEE  0873               	movf	___aodiv@quotient,w
  9750  0FEF  0020               	movlb	0	; select bank0
  9751  0FF0  00A0               	movwf	?___aodiv
  9752  0FF1  0874               	movf	___aodiv@quotient+1,w
  9753  0FF2  00A1               	movwf	?___aodiv+1
  9754  0FF3  0875               	movf	___aodiv@quotient+2,w
  9755  0FF4  00A2               	movwf	?___aodiv+2
  9756  0FF5  0876               	movf	___aodiv@quotient+3,w
  9757  0FF6  00A3               	movwf	?___aodiv+3
  9758  0FF7  0877               	movf	___aodiv@quotient+4,w
  9759  0FF8  00A4               	movwf	?___aodiv+4
  9760  0FF9  0878               	movf	___aodiv@quotient+5,w
  9761  0FFA  00A5               	movwf	?___aodiv+5
  9762  0FFB  0879               	movf	___aodiv@quotient+6,w
  9763  0FFC  00A6               	movwf	?___aodiv+6
  9764  0FFD  087A               	movf	___aodiv@quotient+7,w
  9765  0FFE  00A7               	movwf	?___aodiv+7
  9766  0FFF                     l635:
  9767  0FFF  0008               	return
  9768  1000                     __end_of___aodiv:
  9769                           
  9770                           	psect	text27
  9771  1F27                     __ptext27:	
  9772 ;; *************** function _lcd_print_with *****************
  9773 ;; Defined at:
  9774 ;;		line 135 in file "lcd_lib.c"
  9775 ;; Parameters:    Size  Location     Type
  9776 ;;  p               1    wreg     PTR struct .
  9777 ;;		 -> NULL(0), main@lcd(4), 
  9778 ;;  str             2    6[BANK0 ] PTR unsigned char 
  9779 ;;		 -> print_gram@row2(16), print_gram@row1(16), STR_3(15), STR_2(11), 
  9780 ;;  col             1    8[BANK0 ] unsigned char 
  9781 ;;  row             1    9[BANK0 ] unsigned char 
  9782 ;; Auto vars:     Size  Location     Type
  9783 ;;  p               1   13[COMMON] PTR struct .
  9784 ;;		 -> NULL(0), main@lcd(4), 
  9785 ;; Return value:  Size  Location     Type
  9786 ;;                  1    wreg      void 
  9787 ;; Registers used:
  9788 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  9789 ;; Tracked objects:
  9790 ;;		On entry : 0/0
  9791 ;;		On exit  : 0/0
  9792 ;;		Unchanged: 0/0
  9793 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  9794 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9795 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9796 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9797 ;;      Totals:         1       6       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9798 ;;Total ram usage:        7 bytes
  9799 ;; Hardware stack levels used: 1
  9800 ;; Hardware stack levels required when called: 5
  9801 ;; This function calls:
  9802 ;;		_lcd_print
  9803 ;;		_lcd_set_cursor
  9804 ;; This function is called by:
  9805 ;;		_initialize
  9806 ;;		_print_gram
  9807 ;; This function uses a non-reentrant model
  9808 ;;
  9809                           
  9810                           
  9811                           ;psect for function _lcd_print_with
  9812  1F27                     _lcd_print_with:
  9813                           
  9814                           ;incstack = 0
  9815                           ; Regs used in _lcd_print_with: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  9816                           ;lcd_print_with@p stored from wreg
  9817  1F27  00FD               	movwf	lcd_print_with@p
  9818  1F28                     l3842:
  9819                           
  9820                           ;lcd_lib.c: 136:     lcd_set_cursor(p, col, row);
  9821  1F28  0020               	movlb	0	; select bank0
  9822  1F29  0828               	movf	lcd_print_with@col,w
  9823  1F2A  00AA               	movwf	??_lcd_print_with
  9824  1F2B  082A               	movf	??_lcd_print_with,w
  9825  1F2C  00FA               	movwf	lcd_set_cursor@col
  9826  1F2D  0829               	movf	lcd_print_with@row,w
  9827  1F2E  00AB               	movwf	??_lcd_print_with+1
  9828  1F2F  082B               	movf	??_lcd_print_with+1,w
  9829  1F30  00FB               	movwf	lcd_set_cursor@row
  9830  1F31  087D               	movf	lcd_print_with@p,w
  9831  1F32  3190  20CA  319F   	fcall	_lcd_set_cursor
  9832  1F35                     l3844:
  9833                           
  9834                           ;lcd_lib.c: 137:     lcd_print(p, str);
  9835  1F35  0020               	movlb	0	; select bank0
  9836  1F36  0827               	movf	lcd_print_with@str+1,w
  9837  1F37  00FB               	movwf	lcd_print@str+1
  9838  1F38  0826               	movf	lcd_print_with@str,w
  9839  1F39  00FA               	movwf	lcd_print@str
  9840  1F3A  087D               	movf	lcd_print_with@p,w
  9841  1F3B  3190  201F  319F   	fcall	_lcd_print
  9842  1F3E                     l344:
  9843  1F3E  0008               	return
  9844  1F3F                     __end_of_lcd_print_with:
  9845                           
  9846                           	psect	text28
  9847  1757                     __ptext28:	
  9848 ;; *************** function _lcd_init *****************
  9849 ;; Defined at:
  9850 ;;		line 18 in file "lcd_lib.c"
  9851 ;; Parameters:    Size  Location     Type
  9852 ;;  p               1    wreg     PTR struct .
  9853 ;;		 -> NULL(0), main@lcd(4), 
  9854 ;; Auto vars:     Size  Location     Type
  9855 ;;  p               1    8[COMMON] PTR struct .
  9856 ;;		 -> NULL(0), main@lcd(4), 
  9857 ;; Return value:  Size  Location     Type
  9858 ;;                  1    wreg      void 
  9859 ;; Registers used:
  9860 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  9861 ;; Tracked objects:
  9862 ;;		On entry : 0/0
  9863 ;;		On exit  : 0/0
  9864 ;;		Unchanged: 0/0
  9865 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  9866 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9867 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9868 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9869 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9870 ;;Total ram usage:        3 bytes
  9871 ;; Hardware stack levels used: 1
  9872 ;; Hardware stack levels required when called: 4
  9873 ;; This function calls:
  9874 ;;		_write4bits
  9875 ;; This function is called by:
  9876 ;;		_initialize
  9877 ;; This function uses a non-reentrant model
  9878 ;;
  9879                           
  9880                           
  9881                           ;psect for function _lcd_init
  9882  1757                     _lcd_init:
  9883                           
  9884                           ;incstack = 0
  9885                           ; Regs used in _lcd_init: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
  9886                           ;lcd_init@p stored from wreg
  9887  1757  00F8               	movwf	lcd_init@p
  9888  1758                     l3784:
  9889                           
  9890                           ;lcd_lib.c: 19:     _delay((unsigned long)((400)*(8000000/4000.0)));
  9891  1758  3005               	movlw	5
  9892  1759  00F7               	movwf	??_lcd_init+1
  9893  175A  300F               	movlw	15
  9894  175B  00F6               	movwf	??_lcd_init
  9895  175C  30F1               	movlw	241
  9896  175D                     u4727:
  9897  175D  0B89               	decfsz	9,f
  9898  175E  2F5D               	goto	u4727
  9899  175F  0BF6               	decfsz	??_lcd_init,f
  9900  1760  2F5D               	goto	u4727
  9901  1761  0BF7               	decfsz	??_lcd_init+1,f
  9902  1762  2F5D               	goto	u4727
  9903  1763  0000               	nop
  9904  1764                     l3786:
  9905                           
  9906                           ;lcd_lib.c: 21:     write4bits(p, 0x30);
  9907  1764  3030               	movlw	48
  9908  1765  00F6               	movwf	??_lcd_init
  9909  1766  0876               	movf	??_lcd_init,w
  9910  1767  00F3               	movwf	write4bits@val
  9911  1768  0878               	movf	lcd_init@p,w
  9912  1769  319F  27C2  3197   	fcall	_write4bits
  9913  176C                     l3788:
  9914                           
  9915                           ;lcd_lib.c: 22:     _delay((unsigned long)((5)*(8000000/4000.0)));
  9916  176C  300D               	movlw	13
  9917  176D  00F6               	movwf	??_lcd_init
  9918  176E  30FC               	movlw	252
  9919  176F                     u4737:
  9920  176F  0B89               	decfsz	9,f
  9921  1770  2F6F               	goto	u4737
  9922  1771  0BF6               	decfsz	??_lcd_init,f
  9923  1772  2F6F               	goto	u4737
  9924                           
  9925                           ;lcd_lib.c: 24:     write4bits(p, 0x30);
  9926  1773  3030               	movlw	48
  9927  1774  00F6               	movwf	??_lcd_init
  9928  1775  0876               	movf	??_lcd_init,w
  9929  1776  00F3               	movwf	write4bits@val
  9930  1777  0878               	movf	lcd_init@p,w
  9931  1778  319F  27C2  3197   	fcall	_write4bits
  9932  177B                     l3790:
  9933                           
  9934                           ;lcd_lib.c: 25:     _delay((unsigned long)((5)*(8000000/4000.0)));
  9935  177B  300D               	movlw	13
  9936  177C  00F6               	movwf	??_lcd_init
  9937  177D  30FC               	movlw	252
  9938  177E                     u4747:
  9939  177E  0B89               	decfsz	9,f
  9940  177F  2F7E               	goto	u4747
  9941  1780  0BF6               	decfsz	??_lcd_init,f
  9942  1781  2F7E               	goto	u4747
  9943  1782                     l3792:
  9944                           
  9945                           ;lcd_lib.c: 27:     write4bits(p, 0x30);
  9946  1782  3030               	movlw	48
  9947  1783  00F6               	movwf	??_lcd_init
  9948  1784  0876               	movf	??_lcd_init,w
  9949  1785  00F3               	movwf	write4bits@val
  9950  1786  0878               	movf	lcd_init@p,w
  9951  1787  319F  27C2  3197   	fcall	_write4bits
  9952                           
  9953                           ;lcd_lib.c: 28:     _delay((unsigned long)((300)*(8000000/4000000.0)));
  9954  178A  30C8               	movlw	200
  9955  178B                     u4757:
  9956  178B  0B89               	decfsz	9,f
  9957  178C  2F8B               	goto	u4757
  9958  178D                     l3794:
  9959                           
  9960                           ;lcd_lib.c: 30:     write4bits(p, 0x20);
  9961  178D  3020               	movlw	32
  9962  178E  00F6               	movwf	??_lcd_init
  9963  178F  0876               	movf	??_lcd_init,w
  9964  1790  00F3               	movwf	write4bits@val
  9965  1791  0878               	movf	lcd_init@p,w
  9966  1792  319F  27C2  3197   	fcall	_write4bits
  9967  1795                     l3796:
  9968                           
  9969                           ;lcd_lib.c: 31:     _delay((unsigned long)((10)*(8000000/4000000.0)));
  9970  1795  3006               	movlw	6
  9971  1796                     u4767:
  9972  1796  0B89               	decfsz	9,f
  9973  1797  2F96               	goto	u4767
  9974  1798  3200               	nop2
  9975                           
  9976                           ;lcd_lib.c: 34:     write4bits(p, 0x20);
  9977  1799  3020               	movlw	32
  9978  179A  00F6               	movwf	??_lcd_init
  9979  179B  0876               	movf	??_lcd_init,w
  9980  179C  00F3               	movwf	write4bits@val
  9981  179D  0878               	movf	lcd_init@p,w
  9982  179E  319F  27C2  3197   	fcall	_write4bits
  9983  17A1                     l3798:
  9984                           
  9985                           ;lcd_lib.c: 36:     _delay((unsigned long)((100)*(8000000/4000000.0)));
  9986  17A1  3042               	movlw	66
  9987  17A2                     u4777:
  9988  17A2  0B89               	decfsz	9,f
  9989  17A3  2FA2               	goto	u4777
  9990  17A4  3200               	nop2
  9991  17A5                     l3800:
  9992                           
  9993                           ;lcd_lib.c: 38:     write4bits(p, 0x80);
  9994  17A5  3080               	movlw	128
  9995  17A6  00F6               	movwf	??_lcd_init
  9996  17A7  0876               	movf	??_lcd_init,w
  9997  17A8  00F3               	movwf	write4bits@val
  9998  17A9  0878               	movf	lcd_init@p,w
  9999  17AA  319F  27C2  3197   	fcall	_write4bits
 10000  17AD                     l3802:
 10001                           
 10002                           ;lcd_lib.c: 43:     write4bits(p, 0x00);
 10003  17AD  01F3               	clrf	write4bits@val
 10004  17AE  0878               	movf	lcd_init@p,w
 10005  17AF  319F  27C2  3197   	fcall	_write4bits
 10006  17B2                     l3804:
 10007                           
 10008                           ;lcd_lib.c: 45:     _delay((unsigned long)((100)*(8000000/4000000.0)));
 10009  17B2  3042               	movlw	66
 10010  17B3                     u4787:
 10011  17B3  0B89               	decfsz	9,f
 10012  17B4  2FB3               	goto	u4787
 10013  17B5  3200               	nop2
 10014                           
 10015                           ;lcd_lib.c: 47:     write4bits(p, 0xC0);
 10016  17B6  30C0               	movlw	192
 10017  17B7  00F6               	movwf	??_lcd_init
 10018  17B8  0876               	movf	??_lcd_init,w
 10019  17B9  00F3               	movwf	write4bits@val
 10020  17BA  0878               	movf	lcd_init@p,w
 10021  17BB  319F  27C2  3197   	fcall	_write4bits
 10022                           
 10023                           ;lcd_lib.c: 51:     write4bits(p, 0x00);
 10024  17BE  01F3               	clrf	write4bits@val
 10025  17BF  0878               	movf	lcd_init@p,w
 10026  17C0  319F  27C2  3197   	fcall	_write4bits
 10027  17C3                     l3806:
 10028                           
 10029                           ;lcd_lib.c: 53:     _delay((unsigned long)((100)*(8000000/4000000.0)));
 10030  17C3  3042               	movlw	66
 10031  17C4                     u4797:
 10032  17C4  0B89               	decfsz	9,f
 10033  17C5  2FC4               	goto	u4797
 10034  17C6  3200               	nop2
 10035  17C7                     l3808:
 10036                           
 10037                           ;lcd_lib.c: 55:     write4bits(p, 0x10);
 10038  17C7  3010               	movlw	16
 10039  17C8  00F6               	movwf	??_lcd_init
 10040  17C9  0876               	movf	??_lcd_init,w
 10041  17CA  00F3               	movwf	write4bits@val
 10042  17CB  0878               	movf	lcd_init@p,w
 10043  17CC  319F  27C2  3197   	fcall	_write4bits
 10044                           
 10045                           ;lcd_lib.c: 57:     _delay((unsigned long)((5)*(8000000/4000.0)));
 10046  17CF  300D               	movlw	13
 10047  17D0  00F6               	movwf	??_lcd_init
 10048  17D1  30FC               	movlw	252
 10049  17D2                     u4807:
 10050  17D2  0B89               	decfsz	9,f
 10051  17D3  2FD2               	goto	u4807
 10052  17D4  0BF6               	decfsz	??_lcd_init,f
 10053  17D5  2FD2               	goto	u4807
 10054  17D6                     l3810:
 10055                           
 10056                           ;lcd_lib.c: 60:     write4bits(p, 0x00);
 10057  17D6  01F3               	clrf	write4bits@val
 10058  17D7  0878               	movf	lcd_init@p,w
 10059  17D8  319F  27C2  3197   	fcall	_write4bits
 10060  17DB                     l3812:
 10061                           
 10062                           ;lcd_lib.c: 62:     _delay((unsigned long)((100)*(8000000/4000000.0)));
 10063  17DB  3042               	movlw	66
 10064  17DC                     u4817:
 10065  17DC  0B89               	decfsz	9,f
 10066  17DD  2FDC               	goto	u4817
 10067  17DE  3200               	nop2
 10068                           
 10069                           ;lcd_lib.c: 64:     write4bits(p, 0x60);
 10070  17DF  3060               	movlw	96
 10071  17E0  00F6               	movwf	??_lcd_init
 10072  17E1  0876               	movf	??_lcd_init,w
 10073  17E2  00F3               	movwf	write4bits@val
 10074  17E3  0878               	movf	lcd_init@p,w
 10075  17E4  319F  27C2  3197   	fcall	_write4bits
 10076                           
 10077                           ;lcd_lib.c: 68:     write4bits(p, 0x00);
 10078  17E7  01F3               	clrf	write4bits@val
 10079  17E8  0878               	movf	lcd_init@p,w
 10080  17E9  319F  27C2  3197   	fcall	_write4bits
 10081  17EC                     l3814:
 10082                           
 10083                           ;lcd_lib.c: 70:     _delay((unsigned long)((100)*(8000000/4000000.0)));
 10084  17EC  3042               	movlw	66
 10085  17ED                     u4827:
 10086  17ED  0B89               	decfsz	9,f
 10087  17EE  2FED               	goto	u4827
 10088  17EF  3200               	nop2
 10089  17F0                     l3816:
 10090                           
 10091                           ;lcd_lib.c: 72:     write4bits(p, 0x20);
 10092  17F0  3020               	movlw	32
 10093  17F1  00F6               	movwf	??_lcd_init
 10094  17F2  0876               	movf	??_lcd_init,w
 10095  17F3  00F3               	movwf	write4bits@val
 10096  17F4  0878               	movf	lcd_init@p,w
 10097  17F5  319F  27C2  3197   	fcall	_write4bits
 10098                           
 10099                           ;lcd_lib.c: 74:     _delay((unsigned long)((3)*(8000000/4000.0)));
 10100  17F8  3008               	movlw	8
 10101  17F9  00F6               	movwf	??_lcd_init
 10102  17FA  30CA               	movlw	202
 10103  17FB                     u4837:
 10104  17FB  0B89               	decfsz	9,f
 10105  17FC  2FFB               	goto	u4837
 10106  17FD  0BF6               	decfsz	??_lcd_init,f
 10107  17FE  2FFB               	goto	u4837
 10108  17FF                     l317:
 10109  17FF  0008               	return
 10110  1800                     __end_of_lcd_init:
 10111                           
 10112                           	psect	text29
 10113  1FC2                     __ptext29:	
 10114 ;; *************** function _write4bits *****************
 10115 ;; Defined at:
 10116 ;;		line 155 in file "lcd_lib.c"
 10117 ;; Parameters:    Size  Location     Type
 10118 ;;  p               1    wreg     PTR struct .
 10119 ;;		 -> NULL(0), main@lcd(4), 
 10120 ;;  val             1    3[COMMON] unsigned char 
 10121 ;; Auto vars:     Size  Location     Type
 10122 ;;  p               1    5[COMMON] PTR struct .
 10123 ;;		 -> NULL(0), main@lcd(4), 
 10124 ;; Return value:  Size  Location     Type
 10125 ;;                  1    wreg      void 
 10126 ;; Registers used:
 10127 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 10128 ;; Tracked objects:
 10129 ;;		On entry : 0/0
 10130 ;;		On exit  : 0/0
 10131 ;;		Unchanged: 0/0
 10132 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 10133 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10134 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10135 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10136 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10137 ;;Total ram usage:        3 bytes
 10138 ;; Hardware stack levels used: 1
 10139 ;; Hardware stack levels required when called: 3
 10140 ;; This function calls:
 10141 ;;		_lcd_cmd
 10142 ;; This function is called by:
 10143 ;;		_lcd_init
 10144 ;; This function uses a non-reentrant model
 10145 ;;
 10146                           
 10147                           
 10148                           ;psect for function _write4bits
 10149  1FC2                     _write4bits:
 10150                           
 10151                           ;incstack = 0
 10152                           ; Regs used in _write4bits: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
 10153                           ;write4bits@p stored from wreg
 10154  1FC2  00F5               	movwf	write4bits@p
 10155  1FC3                     l3568:
 10156                           
 10157                           ;lcd_lib.c: 156:     lcd_cmd(p, val);
 10158  1FC3  0873               	movf	write4bits@val,w
 10159  1FC4  00F4               	movwf	??_write4bits
 10160  1FC5  0874               	movf	??_write4bits,w
 10161  1FC6  00F1               	movwf	lcd_cmd@cmd
 10162  1FC7  0875               	movf	write4bits@p,w
 10163  1FC8  319F  270F  319F   	fcall	_lcd_cmd
 10164                           
 10165                           ;lcd_lib.c: 157:     lcd_cmd(p, val | 0b00000100);
 10166  1FCB  0873               	movf	write4bits@val,w
 10167  1FCC  3804               	iorlw	4
 10168  1FCD  00F4               	movwf	??_write4bits
 10169  1FCE  0874               	movf	??_write4bits,w
 10170  1FCF  00F1               	movwf	lcd_cmd@cmd
 10171  1FD0  0875               	movf	write4bits@p,w
 10172  1FD1  319F  270F  319F   	fcall	_lcd_cmd
 10173                           
 10174                           ;lcd_lib.c: 158:     lcd_cmd(p, val);
 10175  1FD4  0873               	movf	write4bits@val,w
 10176  1FD5  00F4               	movwf	??_write4bits
 10177  1FD6  0874               	movf	??_write4bits,w
 10178  1FD7  00F1               	movwf	lcd_cmd@cmd
 10179  1FD8  0875               	movf	write4bits@p,w
 10180  1FD9  319F  270F  319F   	fcall	_lcd_cmd
 10181  1FDC                     l350:
 10182  1FDC  0008               	return
 10183  1FDD                     __end_of_write4bits:
 10184                           
 10185                           	psect	text30
 10186  1141                     __ptext30:	
 10187 ;; *************** function _lcd_clear *****************
 10188 ;; Defined at:
 10189 ;;		line 91 in file "lcd_lib.c"
 10190 ;; Parameters:    Size  Location     Type
 10191 ;;  p               1    wreg     PTR struct .
 10192 ;;		 -> NULL(0), main@lcd(4), 
 10193 ;; Auto vars:     Size  Location     Type
 10194 ;;  p               1   10[BANK0 ] PTR struct .
 10195 ;;		 -> NULL(0), main@lcd(4), 
 10196 ;;  col             1    9[BANK0 ] unsigned char 
 10197 ;;  row             1    8[BANK0 ] unsigned char 
 10198 ;; Return value:  Size  Location     Type
 10199 ;;                  1    wreg      void 
 10200 ;; Registers used:
 10201 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 10202 ;; Tracked objects:
 10203 ;;		On entry : 0/0
 10204 ;;		On exit  : 0/0
 10205 ;;		Unchanged: 0/0
 10206 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 10207 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10208 ;;      Locals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10209 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10210 ;;      Totals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10211 ;;Total ram usage:        5 bytes
 10212 ;; Hardware stack levels used: 1
 10213 ;; Hardware stack levels required when called: 5
 10214 ;; This function calls:
 10215 ;;		_lcd_print
 10216 ;;		_lcd_set_cursor
 10217 ;; This function is called by:
 10218 ;;		_initialize
 10219 ;;		_print_gram
 10220 ;;		_set_max_gram
 10221 ;; This function uses a non-reentrant model
 10222 ;;
 10223                           
 10224                           
 10225                           ;psect for function _lcd_clear
 10226  1141                     _lcd_clear:
 10227                           
 10228                           ;incstack = 0
 10229                           ; Regs used in _lcd_clear: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 10230                           ;lcd_clear@p stored from wreg
 10231  1141  0020               	movlb	0	; select bank0
 10232  1142  00AA               	movwf	lcd_clear@p
 10233  1143                     l3824:
 10234                           
 10235                           ;lcd_lib.c: 92:     for(uint8_t row = 0; row < (p->ROW); row++){
 10236  1143  01A8               	clrf	lcd_clear@row
 10237  1144  296F               	goto	l3838
 10238  1145                     l3826:
 10239                           
 10240                           ;lcd_lib.c: 93:         for(uint8_t col = 0; col < (p->COL); col++){
 10241  1145  01A9               	clrf	lcd_clear@col
 10242  1146  2961               	goto	l3834
 10243  1147                     l3828:
 10244                           
 10245                           ;lcd_lib.c: 94:             lcd_set_cursor(p, col, row);
 10246  1147  0829               	movf	lcd_clear@col,w
 10247  1148  00A6               	movwf	??_lcd_clear
 10248  1149  0826               	movf	??_lcd_clear,w
 10249  114A  00FA               	movwf	lcd_set_cursor@col
 10250  114B  0828               	movf	lcd_clear@row,w
 10251  114C  00A7               	movwf	??_lcd_clear+1
 10252  114D  0827               	movf	??_lcd_clear+1,w
 10253  114E  00FB               	movwf	lcd_set_cursor@row
 10254  114F  082A               	movf	lcd_clear@p,w
 10255  1150  3190  20CA  3191   	fcall	_lcd_set_cursor
 10256  1153                     l3830:
 10257                           
 10258                           ;lcd_lib.c: 95:             lcd_print(p, " ");
 10259  1153  304D               	movlw	low (STR_1| (0+32768))
 10260  1154  00FA               	movwf	lcd_print@str
 10261  1155  30A0               	movlw	high (STR_1| (0+32768))
 10262  1156  00FB               	movwf	lcd_print@str+1
 10263  1157  0020               	movlb	0	; select bank0
 10264  1158  082A               	movf	lcd_clear@p,w
 10265  1159  3190  201F  3191   	fcall	_lcd_print
 10266  115C                     l3832:
 10267                           
 10268                           ;lcd_lib.c: 96:         }
 10269  115C  3001               	movlw	1
 10270  115D  0020               	movlb	0	; select bank0
 10271  115E  00A6               	movwf	??_lcd_clear
 10272  115F  0826               	movf	??_lcd_clear,w
 10273  1160  07A9               	addwf	lcd_clear@col,f
 10274  1161                     l3834:
 10275  1161  0A2A               	incf	lcd_clear@p,w
 10276  1162  0086               	movwf	6
 10277  1163  3001               	movlw	1	; select bank2/3
 10278  1164  0087               	movwf	7
 10279  1165  0801               	movf	1,w
 10280  1166  0229               	subwf	lcd_clear@col,w
 10281  1167  1C03               	skipc
 10282  1168  296A               	goto	u4601
 10283  1169  296B               	goto	u4600
 10284  116A                     u4601:
 10285  116A  2947               	goto	l3828
 10286  116B                     u4600:
 10287  116B                     l3836:
 10288                           
 10289                           ;lcd_lib.c: 97:     }
 10290  116B  3001               	movlw	1
 10291  116C  00A6               	movwf	??_lcd_clear
 10292  116D  0826               	movf	??_lcd_clear,w
 10293  116E  07A8               	addwf	lcd_clear@row,f
 10294  116F                     l3838:
 10295  116F  082A               	movf	lcd_clear@p,w
 10296  1170  3E02               	addlw	2
 10297  1171  0086               	movwf	6
 10298  1172  3001               	movlw	1	; select bank2/3
 10299  1173  0087               	movwf	7
 10300  1174  0801               	movf	1,w
 10301  1175  0228               	subwf	lcd_clear@row,w
 10302  1176  1C03               	skipc
 10303  1177  2979               	goto	u4611
 10304  1178  297A               	goto	u4610
 10305  1179                     u4611:
 10306  1179  2945               	goto	l3826
 10307  117A                     u4610:
 10308  117A                     l3840:
 10309                           
 10310                           ;lcd_lib.c: 99:     lcd_set_cursor(p, 0, 0);
 10311  117A  01FA               	clrf	lcd_set_cursor@col
 10312  117B  01FB               	clrf	lcd_set_cursor@row
 10313  117C  082A               	movf	lcd_clear@p,w
 10314  117D  3190  20CA  3191   	fcall	_lcd_set_cursor
 10315  1180                     l329:
 10316  1180  0008               	return
 10317  1181                     __end_of_lcd_clear:
 10318                           
 10319                           	psect	text31
 10320  10CA                     __ptext31:	
 10321 ;; *************** function _lcd_set_cursor *****************
 10322 ;; Defined at:
 10323 ;;		line 107 in file "lcd_lib.c"
 10324 ;; Parameters:    Size  Location     Type
 10325 ;;  p               1    wreg     PTR struct .
 10326 ;;		 -> NULL(0), main@lcd(4), 
 10327 ;;  col             1   10[COMMON] unsigned char 
 10328 ;;  row             1   11[COMMON] unsigned char 
 10329 ;; Auto vars:     Size  Location     Type
 10330 ;;  p               1    5[BANK0 ] PTR struct .
 10331 ;;		 -> NULL(0), main@lcd(4), 
 10332 ;;  row_offsets     4    0[BANK0 ] unsigned char [4]
 10333 ;;  cmd             1    4[BANK0 ] unsigned char 
 10334 ;; Return value:  Size  Location     Type
 10335 ;;                  1    wreg      void 
 10336 ;; Registers used:
 10337 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 10338 ;; Tracked objects:
 10339 ;;		On entry : 0/0
 10340 ;;		On exit  : 0/0
 10341 ;;		Unchanged: 0/0
 10342 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 10343 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10344 ;;      Locals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10345 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10346 ;;      Totals:         3       6       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10347 ;;Total ram usage:        9 bytes
 10348 ;; Hardware stack levels used: 1
 10349 ;; Hardware stack levels required when called: 4
 10350 ;; This function calls:
 10351 ;;		_command
 10352 ;; This function is called by:
 10353 ;;		_lcd_clear
 10354 ;;		_lcd_print_with
 10355 ;; This function uses a non-reentrant model
 10356 ;;
 10357                           
 10358                           
 10359                           ;psect for function _lcd_set_cursor
 10360  10CA                     _lcd_set_cursor:
 10361                           
 10362                           ;incstack = 0
 10363                           ; Regs used in _lcd_set_cursor: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
 10364                           ;lcd_set_cursor@p stored from wreg
 10365  10CA  0020               	movlb	0	; select bank0
 10366  10CB  00A5               	movwf	lcd_set_cursor@p
 10367  10CC                     l3570:
 10368                           
 10369                           ;lcd_lib.c: 108:     uint8_t row_offsets[] = {0x00, 0x40, 0x14, 0x54};
 10370  10CC  0021               	movlb	1	; select bank1
 10371  10CD  0868               	movf	(lcd_set_cursor@F2781+3)^(0+128),w
 10372  10CE  0020               	movlb	0	; select bank0
 10373  10CF  00A3               	movwf	lcd_set_cursor@row_offsets+3
 10374  10D0  0021               	movlb	1	; select bank1
 10375  10D1  0867               	movf	(lcd_set_cursor@F2781+2)^(0+128),w
 10376  10D2  0020               	movlb	0	; select bank0
 10377  10D3  00A2               	movwf	lcd_set_cursor@row_offsets+2
 10378  10D4  0021               	movlb	1	; select bank1
 10379  10D5  0866               	movf	(lcd_set_cursor@F2781+1)^(0+128),w
 10380  10D6  0020               	movlb	0	; select bank0
 10381  10D7  00A1               	movwf	lcd_set_cursor@row_offsets+1
 10382  10D8  0021               	movlb	1	; select bank1
 10383  10D9  0865               	movf	lcd_set_cursor@F2781^(0+128),w
 10384  10DA  0020               	movlb	0	; select bank0
 10385  10DB  00A0               	movwf	lcd_set_cursor@row_offsets
 10386  10DC                     l3572:
 10387                           
 10388                           ;lcd_lib.c: 109:     if(row > p->ROW){
 10389  10DC  0825               	movf	lcd_set_cursor@p,w
 10390  10DD  3E02               	addlw	2
 10391  10DE  0086               	movwf	6
 10392  10DF  3001               	movlw	1	; select bank2/3
 10393  10E0  0087               	movwf	7
 10394  10E1  087B               	movf	lcd_set_cursor@row,w
 10395  10E2  0201               	subwf	1,w
 10396  10E3  1803               	skipnc
 10397  10E4  28E6               	goto	u4291
 10398  10E5  28E7               	goto	u4290
 10399  10E6                     u4291:
 10400  10E6  28F1               	goto	l334
 10401  10E7                     u4290:
 10402  10E7                     l3574:
 10403                           
 10404                           ;lcd_lib.c: 110:         row = p->ROW - 1;
 10405  10E7  0825               	movf	lcd_set_cursor@p,w
 10406  10E8  3E02               	addlw	2
 10407  10E9  0086               	movwf	6
 10408  10EA  3001               	movlw	1	; select bank2/3
 10409  10EB  0087               	movwf	7
 10410  10EC  0801               	movf	1,w
 10411  10ED  3EFF               	addlw	255
 10412  10EE  00FC               	movwf	??_lcd_set_cursor
 10413  10EF  087C               	movf	??_lcd_set_cursor,w
 10414  10F0  00FB               	movwf	lcd_set_cursor@row
 10415  10F1                     l334:	
 10416                           ;lcd_lib.c: 111:     }
 10417                           
 10418                           
 10419                           ;lcd_lib.c: 112:     uint8_t cmd = 0x80 | (col + row_offsets[row]);
 10420  10F1  087B               	movf	lcd_set_cursor@row,w
 10421  10F2  3E20               	addlw	(low (lcd_set_cursor@row_offsets| 0))& (0+255)
 10422  10F3  0086               	movwf	6
 10423  10F4  0187               	clrf	7
 10424  10F5  0801               	movf	1,w
 10425  10F6  077A               	addwf	lcd_set_cursor@col,w
 10426  10F7  3880               	iorlw	128
 10427  10F8  00FC               	movwf	??_lcd_set_cursor
 10428  10F9  087C               	movf	??_lcd_set_cursor,w
 10429  10FA  00A4               	movwf	lcd_set_cursor@cmd
 10430  10FB                     l3576:
 10431                           
 10432                           ;lcd_lib.c: 113:     command(p, cmd, 0);
 10433  10FB  0824               	movf	lcd_set_cursor@cmd,w
 10434  10FC  00FC               	movwf	??_lcd_set_cursor
 10435  10FD  087C               	movf	??_lcd_set_cursor,w
 10436  10FE  00F3               	movwf	command@val
 10437  10FF  01F4               	clrf	command@mode
 10438  1100  0825               	movf	lcd_set_cursor@p,w
 10439  1101  3192  222A  3190   	fcall	_command
 10440  1104                     l335:
 10441  1104  0008               	return
 10442  1105                     __end_of_lcd_set_cursor:
 10443                           
 10444                           	psect	text32
 10445  101F                     __ptext32:	
 10446 ;; *************** function _lcd_print *****************
 10447 ;; Defined at:
 10448 ;;		line 121 in file "lcd_lib.c"
 10449 ;; Parameters:    Size  Location     Type
 10450 ;;  p               1    wreg     PTR struct .
 10451 ;;		 -> NULL(0), main@lcd(4), 
 10452 ;;  str             2   10[COMMON] PTR unsigned char 
 10453 ;;		 -> set_max_gram@valstr(16), print_gram@row2(16), print_gram@row1(16), initialize@valstr(16), 
 10454 ;;		 -> STR_3(15), STR_2(11), STR_1(2), 
 10455 ;; Auto vars:     Size  Location     Type
 10456 ;;  p               1    1[BANK0 ] PTR struct .
 10457 ;;		 -> NULL(0), main@lcd(4), 
 10458 ;;  cmd             1    0[BANK0 ] unsigned char 
 10459 ;; Return value:  Size  Location     Type
 10460 ;;                  1    wreg      void 
 10461 ;; Registers used:
 10462 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 10463 ;; Tracked objects:
 10464 ;;		On entry : 0/0
 10465 ;;		On exit  : 0/0
 10466 ;;		Unchanged: 0/0
 10467 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 10468 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10469 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10470 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10471 ;;      Totals:         3       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10472 ;;Total ram usage:        5 bytes
 10473 ;; Hardware stack levels used: 1
 10474 ;; Hardware stack levels required when called: 4
 10475 ;; This function calls:
 10476 ;;		_command
 10477 ;; This function is called by:
 10478 ;;		_lcd_clear
 10479 ;;		_lcd_print_with
 10480 ;;		_initialize
 10481 ;;		_set_max_gram
 10482 ;; This function uses a non-reentrant model
 10483 ;;
 10484                           
 10485                           
 10486                           ;psect for function _lcd_print
 10487  101F                     _lcd_print:
 10488                           
 10489                           ;incstack = 0
 10490                           ; Regs used in _lcd_print: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 10491                           ;lcd_print@p stored from wreg
 10492  101F  0020               	movlb	0	; select bank0
 10493  1020  00A1               	movwf	lcd_print@p
 10494  1021                     l3578:
 10495                           
 10496                           ;lcd_lib.c: 122:     while (*str) {
 10497  1021  2839               	goto	l3586
 10498  1022                     l3580:
 10499                           
 10500                           ;lcd_lib.c: 123:         uint8_t cmd = *str++;
 10501  1022  087A               	movf	lcd_print@str,w
 10502  1023  0084               	movwf	4
 10503  1024  087B               	movf	lcd_print@str+1,w
 10504  1025  0085               	movwf	5
 10505  1026  0800               	movf	0,w	;code access
 10506  1027  00FC               	movwf	??_lcd_print
 10507  1028  087C               	movf	??_lcd_print,w
 10508  1029  0020               	movlb	0	; select bank0
 10509  102A  00A0               	movwf	lcd_print@cmd
 10510  102B                     l3582:
 10511  102B  3001               	movlw	1
 10512  102C  07FA               	addwf	lcd_print@str,f
 10513  102D  3000               	movlw	0
 10514  102E  3DFB               	addwfc	lcd_print@str+1,f
 10515  102F                     l3584:
 10516                           
 10517                           ;lcd_lib.c: 124:         command(p, cmd, 0b00000001);
 10518  102F  0820               	movf	lcd_print@cmd,w
 10519  1030  00FC               	movwf	??_lcd_print
 10520  1031  087C               	movf	??_lcd_print,w
 10521  1032  00F3               	movwf	command@val
 10522  1033  01F4               	clrf	command@mode
 10523  1034  0AF4               	incf	command@mode,f
 10524  1035  0821               	movf	lcd_print@p,w
 10525  1036  3192  222A  3190   	fcall	_command
 10526  1039                     l3586:
 10527                           
 10528                           ;lcd_lib.c: 122:     while (*str) {
 10529  1039  087A               	movf	lcd_print@str,w
 10530  103A  0084               	movwf	4
 10531  103B  087B               	movf	lcd_print@str+1,w
 10532  103C  0085               	movwf	5
 10533  103D  0012               	moviw fsr0++
 10534  103E  1D03               	btfss	3,2
 10535  103F  2841               	goto	u4301
 10536  1040  2842               	goto	u4300
 10537  1041                     u4301:
 10538  1041  2822               	goto	l3580
 10539  1042                     u4300:
 10540  1042                     l341:
 10541  1042  0008               	return
 10542  1043                     __end_of_lcd_print:
 10543                           
 10544                           	psect	text33
 10545  122A                     __ptext33:	
 10546 ;; *************** function _command *****************
 10547 ;; Defined at:
 10548 ;;		line 140 in file "lcd_lib.c"
 10549 ;; Parameters:    Size  Location     Type
 10550 ;;  p               1    wreg     PTR struct .
 10551 ;;		 -> NULL(0), main@lcd(4), 
 10552 ;;  val             1    3[COMMON] unsigned char 
 10553 ;;  mode            1    4[COMMON] unsigned char 
 10554 ;; Auto vars:     Size  Location     Type
 10555 ;;  p               1    9[COMMON] PTR struct .
 10556 ;;		 -> NULL(0), main@lcd(4), 
 10557 ;;  lownib          1    8[COMMON] unsigned char 
 10558 ;;  highnib         1    7[COMMON] unsigned char 
 10559 ;; Return value:  Size  Location     Type
 10560 ;;                  1    wreg      void 
 10561 ;; Registers used:
 10562 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 10563 ;; Tracked objects:
 10564 ;;		On entry : 0/0
 10565 ;;		On exit  : 0/0
 10566 ;;		Unchanged: 0/0
 10567 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 10568 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10569 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10570 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10571 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10572 ;;Total ram usage:        7 bytes
 10573 ;; Hardware stack levels used: 1
 10574 ;; Hardware stack levels required when called: 3
 10575 ;; This function calls:
 10576 ;;		_lcd_cmd
 10577 ;; This function is called by:
 10578 ;;		_lcd_set_cursor
 10579 ;;		_lcd_print
 10580 ;; This function uses a non-reentrant model
 10581 ;;
 10582                           
 10583                           
 10584                           ;psect for function _command
 10585  122A                     _command:
 10586                           
 10587                           ;incstack = 0
 10588                           ; Regs used in _command: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
 10589                           ;command@p stored from wreg
 10590  122A  00F9               	movwf	command@p
 10591  122B                     l3034:
 10592                           
 10593                           ;lcd_lib.c: 141:     uint8_t highnib = (val & 0xf0) | p->_backlightval | mode;
 10594  122B  0879               	movf	command@p,w
 10595  122C  3E03               	addlw	3
 10596  122D  0086               	movwf	6
 10597  122E  3001               	movlw	1	; select bank2/3
 10598  122F  0087               	movwf	7
 10599  1230  0873               	movf	command@val,w
 10600  1231  39F0               	andlw	240
 10601  1232  0401               	iorwf	1,w
 10602  1233  0474               	iorwf	command@mode,w
 10603  1234  00F5               	movwf	??_command
 10604  1235  0875               	movf	??_command,w
 10605  1236  00F7               	movwf	command@highnib
 10606                           
 10607                           ;lcd_lib.c: 142:  uint8_t lownib = ((val << 4) & 0xf0) | p->_backlightval | mode;
 10608  1237  0879               	movf	command@p,w
 10609  1238  3E03               	addlw	3
 10610  1239  0086               	movwf	6
 10611  123A  3001               	movlw	1	; select bank2/3
 10612  123B  0087               	movwf	7
 10613  123C  0873               	movf	command@val,w
 10614  123D  00F5               	movwf	??_command
 10615  123E  3003               	movlw	3
 10616  123F                     u3305:
 10617  123F  35F5               	lslf	??_command,f
 10618  1240  3EFF               	addlw	-1
 10619  1241  1D03               	skipz
 10620  1242  2A3F               	goto	u3305
 10621  1243  3575               	lslf	??_command,w
 10622  1244  39F0               	andlw	240
 10623  1245  0401               	iorwf	1,w
 10624  1246  0474               	iorwf	command@mode,w
 10625  1247  00F6               	movwf	??_command+1
 10626  1248  0876               	movf	??_command+1,w
 10627  1249  00F8               	movwf	command@lownib
 10628  124A                     l3036:
 10629                           
 10630                           ;lcd_lib.c: 144:  lcd_cmd(p, highnib);
 10631  124A  0877               	movf	command@highnib,w
 10632  124B  00F5               	movwf	??_command
 10633  124C  0875               	movf	??_command,w
 10634  124D  00F1               	movwf	lcd_cmd@cmd
 10635  124E  0879               	movf	command@p,w
 10636  124F  319F  270F  3192   	fcall	_lcd_cmd
 10637  1252                     l3038:
 10638                           
 10639                           ;lcd_lib.c: 145:     lcd_cmd(p, highnib | 0b00000100);
 10640  1252  0877               	movf	command@highnib,w
 10641  1253  3804               	iorlw	4
 10642  1254  00F5               	movwf	??_command
 10643  1255  0875               	movf	??_command,w
 10644  1256  00F1               	movwf	lcd_cmd@cmd
 10645  1257  0879               	movf	command@p,w
 10646  1258  319F  270F  3192   	fcall	_lcd_cmd
 10647  125B                     l3040:
 10648                           
 10649                           ;lcd_lib.c: 146:     lcd_cmd(p, highnib & ~0b00000100);
 10650  125B  0877               	movf	command@highnib,w
 10651  125C  39FB               	andlw	251
 10652  125D  00F5               	movwf	??_command
 10653  125E  0875               	movf	??_command,w
 10654  125F  00F1               	movwf	lcd_cmd@cmd
 10655  1260  0879               	movf	command@p,w
 10656  1261  319F  270F  3192   	fcall	_lcd_cmd
 10657  1264                     l3042:
 10658                           
 10659                           ;lcd_lib.c: 148:     _delay((unsigned long)((100)*(8000000/4000000.0)));
 10660  1264  3042               	movlw	66
 10661  1265                     u4847:
 10662  1265  0B89               	decfsz	9,f
 10663  1266  2A65               	goto	u4847
 10664  1267  3200               	nop2
 10665  1268                     l3044:
 10666                           
 10667                           ;lcd_lib.c: 150:  lcd_cmd(p, lownib);
 10668  1268  0878               	movf	command@lownib,w
 10669  1269  00F5               	movwf	??_command
 10670  126A  0875               	movf	??_command,w
 10671  126B  00F1               	movwf	lcd_cmd@cmd
 10672  126C  0879               	movf	command@p,w
 10673  126D  319F  270F  3192   	fcall	_lcd_cmd
 10674  1270                     l3046:
 10675                           
 10676                           ;lcd_lib.c: 151:     lcd_cmd(p, lownib | 0b00000100);
 10677  1270  0878               	movf	command@lownib,w
 10678  1271  3804               	iorlw	4
 10679  1272  00F5               	movwf	??_command
 10680  1273  0875               	movf	??_command,w
 10681  1274  00F1               	movwf	lcd_cmd@cmd
 10682  1275  0879               	movf	command@p,w
 10683  1276  319F  270F  3192   	fcall	_lcd_cmd
 10684  1279                     l3048:
 10685                           
 10686                           ;lcd_lib.c: 152:     lcd_cmd(p, lownib & ~0b00000100);
 10687  1279  0878               	movf	command@lownib,w
 10688  127A  39FB               	andlw	251
 10689  127B  00F5               	movwf	??_command
 10690  127C  0875               	movf	??_command,w
 10691  127D  00F1               	movwf	lcd_cmd@cmd
 10692  127E  0879               	movf	command@p,w
 10693  127F  319F  270F  3192   	fcall	_lcd_cmd
 10694  1282                     l347:
 10695  1282  0008               	return
 10696  1283                     __end_of_command:
 10697                           
 10698                           	psect	text34
 10699  1EF8                     __ptext34:	
 10700 ;; *************** function _lcd_backlight *****************
 10701 ;; Defined at:
 10702 ;;		line 81 in file "lcd_lib.c"
 10703 ;; Parameters:    Size  Location     Type
 10704 ;;  p               1    wreg     PTR struct .
 10705 ;;		 -> NULL(0), main@lcd(4), 
 10706 ;; Auto vars:     Size  Location     Type
 10707 ;;  p               1    4[COMMON] PTR struct .
 10708 ;;		 -> NULL(0), main@lcd(4), 
 10709 ;; Return value:  Size  Location     Type
 10710 ;;                  1    wreg      void 
 10711 ;; Registers used:
 10712 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 10713 ;; Tracked objects:
 10714 ;;		On entry : 0/0
 10715 ;;		On exit  : 0/0
 10716 ;;		Unchanged: 0/0
 10717 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 10718 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10719 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10720 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10721 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10722 ;;Total ram usage:        2 bytes
 10723 ;; Hardware stack levels used: 1
 10724 ;; Hardware stack levels required when called: 3
 10725 ;; This function calls:
 10726 ;;		_lcd_cmd
 10727 ;; This function is called by:
 10728 ;;		_initialize
 10729 ;; This function uses a non-reentrant model
 10730 ;;
 10731                           
 10732                           
 10733                           ;psect for function _lcd_backlight
 10734  1EF8                     _lcd_backlight:
 10735                           
 10736                           ;incstack = 0
 10737                           ; Regs used in _lcd_backlight: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
 10738                           ;lcd_backlight@p stored from wreg
 10739  1EF8  00F4               	movwf	lcd_backlight@p
 10740  1EF9                     l3818:
 10741                           
 10742                           ;lcd_lib.c: 82:     lcd_cmd(p, 0x08);
 10743  1EF9  3008               	movlw	8
 10744  1EFA  00F3               	movwf	??_lcd_backlight
 10745  1EFB  0873               	movf	??_lcd_backlight,w
 10746  1EFC  00F1               	movwf	lcd_cmd@cmd
 10747  1EFD  0874               	movf	lcd_backlight@p,w
 10748  1EFE  319F  270F  319E   	fcall	_lcd_cmd
 10749  1F01                     l3820:
 10750                           
 10751                           ;lcd_lib.c: 83:     p->_backlightval = 0x08;
 10752  1F01  3008               	movlw	8
 10753  1F02  00F3               	movwf	??_lcd_backlight
 10754  1F03  0874               	movf	lcd_backlight@p,w
 10755  1F04  3E03               	addlw	3
 10756  1F05  0086               	movwf	6
 10757  1F06  3001               	movlw	1	; select bank2/3
 10758  1F07  0087               	movwf	7
 10759  1F08  0873               	movf	??_lcd_backlight,w
 10760  1F09  0081               	movwf	1
 10761  1F0A                     l3822:
 10762                           
 10763                           ;lcd_lib.c: 84:     _delay((unsigned long)((10)*(8000000/4000000.0)));
 10764  1F0A  3006               	movlw	6
 10765  1F0B                     u4857:
 10766  1F0B  0B89               	decfsz	9,f
 10767  1F0C  2F0B               	goto	u4857
 10768  1F0D  3200               	nop2
 10769  1F0E                     l320:
 10770  1F0E  0008               	return
 10771  1F0F                     __end_of_lcd_backlight:
 10772                           
 10773                           	psect	text35
 10774  1F0F                     __ptext35:	
 10775 ;; *************** function _lcd_cmd *****************
 10776 ;; Defined at:
 10777 ;;		line 6 in file "lcd_lib.c"
 10778 ;; Parameters:    Size  Location     Type
 10779 ;;  p               1    wreg     PTR struct .
 10780 ;;		 -> NULL(0), main@lcd(4), 
 10781 ;;  cmd             1    1[COMMON] unsigned char 
 10782 ;; Auto vars:     Size  Location     Type
 10783 ;;  p               1    2[COMMON] PTR struct .
 10784 ;;		 -> NULL(0), main@lcd(4), 
 10785 ;; Return value:  Size  Location     Type
 10786 ;;                  1    wreg      void 
 10787 ;; Registers used:
 10788 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 10789 ;; Tracked objects:
 10790 ;;		On entry : 0/0
 10791 ;;		On exit  : 0/0
 10792 ;;		Unchanged: 0/0
 10793 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 10794 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10795 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10796 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10797 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10798 ;;Total ram usage:        2 bytes
 10799 ;; Hardware stack levels used: 1
 10800 ;; Hardware stack levels required when called: 2
 10801 ;; This function calls:
 10802 ;;		_i2c_start
 10803 ;;		_i2c_stop
 10804 ;;		_i2c_write
 10805 ;; This function is called by:
 10806 ;;		_lcd_backlight
 10807 ;;		_command
 10808 ;;		_write4bits
 10809 ;; This function uses a non-reentrant model
 10810 ;;
 10811                           
 10812                           
 10813                           ;psect for function _lcd_cmd
 10814  1F0F                     _lcd_cmd:
 10815                           
 10816                           ;incstack = 0
 10817                           ; Regs used in _lcd_cmd: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
 10818                           ;lcd_cmd@p stored from wreg
 10819  1F0F  00F2               	movwf	lcd_cmd@p
 10820  1F10                     l2836:
 10821                           
 10822                           ;lcd_lib.c: 7:     i2c_start();
 10823  1F10  319E  2648  319F   	fcall	_i2c_start
 10824  1F13                     l2838:
 10825                           
 10826                           ;lcd_lib.c: 8:     i2c_write(p->lcd_address << 1);
 10827  1F13  0872               	movf	lcd_cmd@p,w
 10828  1F14  0086               	movwf	6
 10829  1F15  3001               	movlw	1	; select bank2/3
 10830  1F16  0087               	movwf	7
 10831  1F17  3501               	lslf	1,w
 10832  1F18  319E  26C1  319F   	fcall	_i2c_write
 10833  1F1B                     l2840:
 10834                           
 10835                           ;lcd_lib.c: 9:     i2c_write(cmd);
 10836  1F1B  0871               	movf	lcd_cmd@cmd,w
 10837  1F1C  319E  26C1  319F   	fcall	_i2c_write
 10838  1F1F                     l2842:
 10839                           
 10840                           ;lcd_lib.c: 10:     i2c_stop();
 10841  1F1F  319E  262F  319F   	fcall	_i2c_stop
 10842  1F22                     l2844:
 10843                           
 10844                           ;lcd_lib.c: 11:     _delay((unsigned long)((10)*(8000000/4000000.0)));
 10845  1F22  3006               	movlw	6
 10846  1F23                     u4867:
 10847  1F23  0B89               	decfsz	9,f
 10848  1F24  2F23               	goto	u4867
 10849  1F25  3200               	nop2
 10850  1F26                     l314:
 10851  1F26  0008               	return
 10852  1F27                     __end_of_lcd_cmd:
 10853                           
 10854                           	psect	text36
 10855  1EC1                     __ptext36:	
 10856 ;; *************** function _i2c_write *****************
 10857 ;; Defined at:
 10858 ;;		line 25 in file "i2c.c"
 10859 ;; Parameters:    Size  Location     Type
 10860 ;;  data            1    wreg     unsigned char 
 10861 ;; Auto vars:     Size  Location     Type
 10862 ;;  data            1    0[COMMON] unsigned char 
 10863 ;; Return value:  Size  Location     Type
 10864 ;;                  1    wreg      void 
 10865 ;; Registers used:
 10866 ;;		wreg, status,2, status,0, pclath, cstack
 10867 ;; Tracked objects:
 10868 ;;		On entry : 0/0
 10869 ;;		On exit  : 0/0
 10870 ;;		Unchanged: 0/0
 10871 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 10872 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10873 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10874 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10875 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10876 ;;Total ram usage:        1 bytes
 10877 ;; Hardware stack levels used: 1
 10878 ;; Hardware stack levels required when called: 1
 10879 ;; This function calls:
 10880 ;;		_i2c_wait
 10881 ;; This function is called by:
 10882 ;;		_lcd_cmd
 10883 ;; This function uses a non-reentrant model
 10884 ;;
 10885                           
 10886                           
 10887                           ;psect for function _i2c_write
 10888  1EC1                     _i2c_write:
 10889                           
 10890                           ;incstack = 0
 10891                           ; Regs used in _i2c_write: [wreg+status,2+status,0+pclath+cstack]
 10892                           ;i2c_write@data stored from wreg
 10893  1EC1  00F0               	movwf	i2c_write@data
 10894  1EC2                     l2602:
 10895                           
 10896                           ;i2c.c: 26:     SSPBUF = data;
 10897  1EC2  0870               	movf	i2c_write@data,w
 10898  1EC3  0024               	movlb	4	; select bank4
 10899  1EC4  0091               	movwf	17	;volatile
 10900  1EC5                     l96:	
 10901                           ;i2c.c: 27:     while(SSPSTATbits.BF);
 10902                           
 10903  1EC5  1814               	btfsc	20,0	;volatile
 10904  1EC6  2EC8               	goto	u2451
 10905  1EC7  2EC9               	goto	u2450
 10906  1EC8                     u2451:
 10907  1EC8  2EC5               	goto	l96
 10908  1EC9                     u2450:
 10909  1EC9                     l99:
 10910  1EC9  1B16               	btfsc	22,6	;volatile
 10911  1ECA  2ECC               	goto	u2461
 10912  1ECB  2ECD               	goto	u2460
 10913  1ECC                     u2461:
 10914  1ECC  2EC9               	goto	l99
 10915  1ECD                     u2460:
 10916  1ECD                     l2604:
 10917                           
 10918                           ;i2c.c: 29:     i2c_wait();
 10919  1ECD  319E  26B5  319E   	fcall	_i2c_wait
 10920  1ED0                     l102:
 10921  1ED0  0008               	return
 10922  1ED1                     __end_of_i2c_write:
 10923                           
 10924                           	psect	text37
 10925  1E2F                     __ptext37:	
 10926 ;; *************** function _i2c_stop *****************
 10927 ;; Defined at:
 10928 ;;		line 14 in file "i2c.c"
 10929 ;; Parameters:    Size  Location     Type
 10930 ;;		None
 10931 ;; Auto vars:     Size  Location     Type
 10932 ;;		None
 10933 ;; Return value:  Size  Location     Type
 10934 ;;                  1    wreg      void 
 10935 ;; Registers used:
 10936 ;;		None
 10937 ;; Tracked objects:
 10938 ;;		On entry : 0/0
 10939 ;;		On exit  : 0/0
 10940 ;;		Unchanged: 0/0
 10941 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 10942 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10943 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10944 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10945 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10946 ;;Total ram usage:        0 bytes
 10947 ;; Hardware stack levels used: 1
 10948 ;; This function calls:
 10949 ;;		Nothing
 10950 ;; This function is called by:
 10951 ;;		_lcd_cmd
 10952 ;; This function uses a non-reentrant model
 10953 ;;
 10954                           
 10955                           
 10956                           ;psect for function _i2c_stop
 10957  1E2F                     _i2c_stop:
 10958  1E2F                     l2600:	
 10959                           ;incstack = 0
 10960                           ; Regs used in _i2c_stop: []
 10961                           
 10962                           
 10963                           ;i2c.c: 15:     SSPCON2bits.PEN = 1;
 10964  1E2F  0024               	movlb	4	; select bank4
 10965  1E30  1516               	bsf	22,2	;volatile
 10966  1E31                     l84:	
 10967                           ;i2c.c: 16:     while(SSPCON2bits.PEN);
 10968                           
 10969  1E31  1916               	btfsc	22,2	;volatile
 10970  1E32  2E34               	goto	u2441
 10971  1E33  2E35               	goto	u2440
 10972  1E34                     u2441:
 10973  1E34  2E31               	goto	l84
 10974  1E35                     u2440:
 10975  1E35                     l87:
 10976  1E35  0008               	return
 10977  1E36                     __end_of_i2c_stop:
 10978                           
 10979                           	psect	text38
 10980  1E48                     __ptext38:	
 10981 ;; *************** function _i2c_start *****************
 10982 ;; Defined at:
 10983 ;;		line 8 in file "i2c.c"
 10984 ;; Parameters:    Size  Location     Type
 10985 ;;		None
 10986 ;; Auto vars:     Size  Location     Type
 10987 ;;		None
 10988 ;; Return value:  Size  Location     Type
 10989 ;;                  1    wreg      void 
 10990 ;; Registers used:
 10991 ;;		wreg, status,2, status,0, pclath, cstack
 10992 ;; Tracked objects:
 10993 ;;		On entry : 0/0
 10994 ;;		On exit  : 0/0
 10995 ;;		Unchanged: 0/0
 10996 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 10997 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10998 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10999 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11000 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11001 ;;Total ram usage:        0 bytes
 11002 ;; Hardware stack levels used: 1
 11003 ;; Hardware stack levels required when called: 1
 11004 ;; This function calls:
 11005 ;;		_i2c_wait
 11006 ;; This function is called by:
 11007 ;;		_lcd_cmd
 11008 ;; This function uses a non-reentrant model
 11009 ;;
 11010                           
 11011                           
 11012                           ;psect for function _i2c_start
 11013  1E48                     _i2c_start:
 11014  1E48                     l2596:	
 11015                           ;incstack = 0
 11016                           ; Regs used in _i2c_start: [wreg+status,2+status,0+pclath+cstack]
 11017                           
 11018                           
 11019                           ;i2c.c: 9:     i2c_wait();
 11020  1E48  319E  26B5  319E   	fcall	_i2c_wait
 11021  1E4B                     l2598:
 11022                           
 11023                           ;i2c.c: 10:     SSPCON2bits.SEN = 1;
 11024  1E4B  0024               	movlb	4	; select bank4
 11025  1E4C  1416               	bsf	22,0	;volatile
 11026  1E4D                     l78:	
 11027                           ;i2c.c: 11:     while(SSPCON2bits.SEN);
 11028                           
 11029  1E4D  1816               	btfsc	22,0	;volatile
 11030  1E4E  2E50               	goto	u2431
 11031  1E4F  2E51               	goto	u2430
 11032  1E50                     u2431:
 11033  1E50  2E4D               	goto	l78
 11034  1E51                     u2430:
 11035  1E51                     l81:
 11036  1E51  0008               	return
 11037  1E52                     __end_of_i2c_start:
 11038                           
 11039                           	psect	text39
 11040  1EB5                     __ptext39:	
 11041 ;; *************** function _i2c_wait *****************
 11042 ;; Defined at:
 11043 ;;		line 4 in file "i2c.c"
 11044 ;; Parameters:    Size  Location     Type
 11045 ;;		None
 11046 ;; Auto vars:     Size  Location     Type
 11047 ;;		None
 11048 ;; Return value:  Size  Location     Type
 11049 ;;                  1    wreg      void 
 11050 ;; Registers used:
 11051 ;;		wreg, status,2
 11052 ;; Tracked objects:
 11053 ;;		On entry : 0/0
 11054 ;;		On exit  : 0/0
 11055 ;;		Unchanged: 0/0
 11056 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 11057 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11058 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11059 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11060 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11061 ;;Total ram usage:        0 bytes
 11062 ;; Hardware stack levels used: 1
 11063 ;; This function calls:
 11064 ;;		Nothing
 11065 ;; This function is called by:
 11066 ;;		_i2c_start
 11067 ;;		_i2c_write
 11068 ;;		_i2c_repeated_start
 11069 ;;		_i2c_read
 11070 ;; This function uses a non-reentrant model
 11071 ;;
 11072                           
 11073                           
 11074                           ;psect for function _i2c_wait
 11075  1EB5                     _i2c_wait:
 11076  1EB5                     l2572:	
 11077                           ;incstack = 0
 11078                           ; Regs used in _i2c_wait: [wreg+status,2]
 11079                           
 11080  1EB5                     l2574:	
 11081                           ;i2c.c: 5:     while((SSPCON2 & 0x1F) || (SSPSTAT & 0x04));
 11082                           
 11083  1EB5  0024               	movlb	4	; select bank4
 11084  1EB6  0816               	movf	22,w	;volatile
 11085  1EB7  391F               	andlw	31
 11086  1EB8  1D03               	btfss	3,2
 11087  1EB9  2EBB               	goto	u2391
 11088  1EBA  2EBC               	goto	u2390
 11089  1EBB                     u2391:
 11090  1EBB  2EB5               	goto	l2574
 11091  1EBC                     u2390:
 11092  1EBC                     l2576:
 11093  1EBC  1914               	btfsc	20,2	;volatile
 11094  1EBD  2EBF               	goto	u2401
 11095  1EBE  2EC0               	goto	u2400
 11096  1EBF                     u2401:
 11097  1EBF  2EB5               	goto	l2574
 11098  1EC0                     u2400:
 11099  1EC0                     l75:
 11100  1EC0  0008               	return
 11101  1EC1                     __end_of_i2c_wait:
 11102                           
 11103                           	psect	text40
 11104  1ED1                     __ptext40:	
 11105 ;; *************** function _initialize_digit *****************
 11106 ;; Defined at:
 11107 ;;		line 187 in file "tm1637.c"
 11108 ;; Parameters:    Size  Location     Type
 11109 ;;  p               1    wreg     PTR struct .
 11110 ;;		 -> NULL(0), main@tm1637(2), 
 11111 ;; Auto vars:     Size  Location     Type
 11112 ;;  p               1   13[BANK0 ] PTR struct .
 11113 ;;		 -> NULL(0), main@tm1637(2), 
 11114 ;; Return value:  Size  Location     Type
 11115 ;;                  1    wreg      void 
 11116 ;; Registers used:
 11117 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 11118 ;; Tracked objects:
 11119 ;;		On entry : 0/0
 11120 ;;		On exit  : 0/0
 11121 ;;		Unchanged: 0/0
 11122 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 11123 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11124 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11125 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11126 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11127 ;;Total ram usage:        2 bytes
 11128 ;; Hardware stack levels used: 1
 11129 ;; Hardware stack levels required when called: 4
 11130 ;; This function calls:
 11131 ;;		_print_digit
 11132 ;;		_set_brigthness
 11133 ;; This function is called by:
 11134 ;;		_initialize
 11135 ;; This function uses a non-reentrant model
 11136 ;;
 11137                           
 11138                           
 11139                           ;psect for function _initialize_digit
 11140  1ED1                     _initialize_digit:
 11141                           
 11142                           ;incstack = 0
 11143                           ; Regs used in _initialize_digit: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
 11144                           ;initialize_digit@p stored from wreg
 11145  1ED1  0020               	movlb	0	; select bank0
 11146  1ED2  00AD               	movwf	initialize_digit@p
 11147  1ED3                     l3780:
 11148                           
 11149                           ;tm1637.c: 188:     set_brigthness(p, 0x0f, 1);
 11150  1ED3  300F               	movlw	15
 11151  1ED4  00AC               	movwf	??_initialize_digit
 11152  1ED5  082C               	movf	??_initialize_digit,w
 11153  1ED6  00F0               	movwf	set_brigthness@brightness
 11154  1ED7  01F1               	clrf	set_brigthness@on
 11155  1ED8  0AF1               	incf	set_brigthness@on,f
 11156  1ED9  082D               	movf	initialize_digit@p,w
 11157  1EDA  319E  26E4  319E   	fcall	_set_brigthness
 11158  1EDD                     l3782:
 11159                           
 11160                           ;tm1637.c: 189:     print_digit(p, 0);
 11161  1EDD  01FD               	clrf	print_digit@number
 11162  1EDE  0020               	movlb	0	; select bank0
 11163  1EDF  082D               	movf	initialize_digit@p,w
 11164  1EE0  3189  21E3  319E   	fcall	_print_digit
 11165  1EE3                     l247:
 11166  1EE3  0008               	return
 11167  1EE4                     __end_of_initialize_digit:
 11168                           
 11169                           	psect	text41
 11170  1EE4                     __ptext41:	
 11171 ;; *************** function _set_brigthness *****************
 11172 ;; Defined at:
 11173 ;;		line 133 in file "tm1637.c"
 11174 ;; Parameters:    Size  Location     Type
 11175 ;;  p               1    wreg     PTR struct .
 11176 ;;		 -> NULL(0), main@tm1637(2), 
 11177 ;;  brightness      1    0[COMMON] unsigned char 
 11178 ;;  on              1    1[COMMON] unsigned char 
 11179 ;; Auto vars:     Size  Location     Type
 11180 ;;  p               1    3[COMMON] PTR struct .
 11181 ;;		 -> NULL(0), main@tm1637(2), 
 11182 ;; Return value:  Size  Location     Type
 11183 ;;                  1    wreg      void 
 11184 ;; Registers used:
 11185 ;;		wreg, status,2, status,0
 11186 ;; Tracked objects:
 11187 ;;		On entry : 0/0
 11188 ;;		On exit  : 0/0
 11189 ;;		Unchanged: 0/0
 11190 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 11191 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11192 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11193 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11194 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11195 ;;Total ram usage:        4 bytes
 11196 ;; Hardware stack levels used: 1
 11197 ;; This function calls:
 11198 ;;		Nothing
 11199 ;; This function is called by:
 11200 ;;		_initialize_digit
 11201 ;; This function uses a non-reentrant model
 11202 ;;
 11203                           
 11204                           
 11205                           ;psect for function _set_brigthness
 11206  1EE4                     _set_brigthness:
 11207  1EE4                     l3466:	
 11208                           ;incstack = 0
 11209                           ; Regs used in _set_brigthness: [wreg+status,2+status,0]
 11210                           
 11211                           
 11212                           ;tm1637.c: 134:     if(on == 1){
 11213  1EE4  0371               	decf	set_brigthness@on,w
 11214  1EE5  1D03               	btfss	3,2
 11215  1EE6  2EE8               	goto	u4211
 11216  1EE7  2EE9               	goto	u4210
 11217  1EE8                     u4211:
 11218  1EE8  2EF1               	goto	l3470
 11219  1EE9                     u4210:
 11220  1EE9                     l3468:
 11221                           
 11222                           ;tm1637.c: 135:         m_brightness = (brightness & 0x7 | 0x08);
 11223  1EE9  0870               	movf	set_brigthness@brightness,w
 11224  1EEA  3907               	andlw	7
 11225  1EEB  3808               	iorlw	8
 11226  1EEC  00F2               	movwf	??_set_brigthness
 11227  1EED  0872               	movf	??_set_brigthness,w
 11228  1EEE  0021               	movlb	1	; select bank1
 11229  1EEF  00E4               	movwf	_m_brightness^(0+128)
 11230                           
 11231                           ;tm1637.c: 136:     }else{
 11232  1EF0  2EF7               	goto	l230
 11233  1EF1                     l3470:
 11234                           
 11235                           ;tm1637.c: 137:         m_brightness = (brightness & 0x7 | 0x00);
 11236  1EF1  0870               	movf	set_brigthness@brightness,w
 11237  1EF2  3907               	andlw	7
 11238  1EF3  00F2               	movwf	??_set_brigthness
 11239  1EF4  0872               	movf	??_set_brigthness,w
 11240  1EF5  0021               	movlb	1	; select bank1
 11241  1EF6  00E4               	movwf	_m_brightness^(0+128)
 11242  1EF7                     l230:
 11243  1EF7  0008               	return
 11244  1EF8                     __end_of_set_brigthness:
 11245                           
 11246                           	psect	text42
 11247  09E3                     __ptext42:	
 11248 ;; *************** function _print_digit *****************
 11249 ;; Defined at:
 11250 ;;		line 192 in file "tm1637.c"
 11251 ;; Parameters:    Size  Location     Type
 11252 ;;  p               1    wreg     PTR struct .
 11253 ;;		 -> NULL(0), main@tm1637(2), 
 11254 ;;  number          1   13[COMMON] unsigned char 
 11255 ;; Auto vars:     Size  Location     Type
 11256 ;;  p               1   10[BANK0 ] PTR struct .
 11257 ;;		 -> NULL(0), main@tm1637(2), 
 11258 ;;  data            4    6[BANK0 ] unsigned char [4]
 11259 ;;  tmp             1   11[BANK0 ] unsigned char 
 11260 ;; Return value:  Size  Location     Type
 11261 ;;                  1    wreg      void 
 11262 ;; Registers used:
 11263 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 11264 ;; Tracked objects:
 11265 ;;		On entry : 0/0
 11266 ;;		On exit  : 0/0
 11267 ;;		Unchanged: 0/0
 11268 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 11269 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11270 ;;      Locals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11271 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11272 ;;      Totals:         1      10       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11273 ;;Total ram usage:       11 bytes
 11274 ;; Hardware stack levels used: 1
 11275 ;; Hardware stack levels required when called: 3
 11276 ;; This function calls:
 11277 ;;		___awdiv
 11278 ;;		___awmod
 11279 ;;		_encode_digit
 11280 ;;		_set_segments
 11281 ;; This function is called by:
 11282 ;;		_initialize_digit
 11283 ;;		_initialize
 11284 ;;		_print_gram
 11285 ;; This function uses a non-reentrant model
 11286 ;;
 11287                           
 11288                           
 11289                           ;psect for function _print_digit
 11290  09E3                     _print_digit:
 11291                           
 11292                           ;incstack = 0
 11293                           ; Regs used in _print_digit: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
 11294                           ;print_digit@p stored from wreg
 11295  09E3  0020               	movlb	0	; select bank0
 11296  09E4  00AA               	movwf	print_digit@p
 11297  09E5                     l3472:
 11298                           
 11299                           ;tm1637.c: 193:     uint8_t data[] = {0xff, 0xff, 0xff, 0xff};
 11300  09E5  0021               	movlb	1	; select bank1
 11301  09E6  086C               	movf	(print_digit@F2820+3)^(0+128),w
 11302  09E7  0020               	movlb	0	; select bank0
 11303  09E8  00A9               	movwf	print_digit@data+3
 11304  09E9  0021               	movlb	1	; select bank1
 11305  09EA  086B               	movf	(print_digit@F2820+2)^(0+128),w
 11306  09EB  0020               	movlb	0	; select bank0
 11307  09EC  00A8               	movwf	print_digit@data+2
 11308  09ED  0021               	movlb	1	; select bank1
 11309  09EE  086A               	movf	(print_digit@F2820+1)^(0+128),w
 11310  09EF  0020               	movlb	0	; select bank0
 11311  09F0  00A7               	movwf	print_digit@data+1
 11312  09F1  0021               	movlb	1	; select bank1
 11313  09F2  0869               	movf	print_digit@F2820^(0+128),w
 11314  09F3  0020               	movlb	0	; select bank0
 11315  09F4  00A6               	movwf	print_digit@data
 11316                           
 11317                           ;tm1637.c: 196:     uint8_t tmp = number;
 11318  09F5  087D               	movf	print_digit@number,w
 11319  09F6  00A2               	movwf	??_print_digit
 11320  09F7  0822               	movf	??_print_digit,w
 11321  09F8  00AB               	movwf	print_digit@tmp
 11322  09F9                     l3474:
 11323                           
 11324                           ;tm1637.c: 197:     data[0] = encode_digit(p, tmp / 1000);
 11325  09F9  30E8               	movlw	232
 11326  09FA  00F0               	movwf	___awdiv@divisor
 11327  09FB  3003               	movlw	3
 11328  09FC  00F1               	movwf	___awdiv@divisor+1
 11329  09FD  082B               	movf	print_digit@tmp,w
 11330  09FE  00A2               	movwf	??_print_digit
 11331  09FF  01A3               	clrf	??_print_digit+1
 11332  0A00  0822               	movf	??_print_digit,w
 11333  0A01  00F2               	movwf	___awdiv@dividend
 11334  0A02  0823               	movf	??_print_digit+1,w
 11335  0A03  00F3               	movwf	___awdiv@dividend+1
 11336  0A04  3193  23ED  3189   	fcall	___awdiv
 11337  0A07  0870               	movf	?___awdiv,w
 11338  0A08  0020               	movlb	0	; select bank0
 11339  0A09  00A4               	movwf	??_print_digit+2
 11340  0A0A  0824               	movf	??_print_digit+2,w
 11341  0A0B  00F9               	movwf	encode_digit@digit
 11342  0A0C  082A               	movf	print_digit@p,w
 11343  0A0D  319E  2636  3189   	fcall	_encode_digit
 11344  0A10  0020               	movlb	0	; select bank0
 11345  0A11  00A5               	movwf	??_print_digit+3
 11346  0A12  0825               	movf	??_print_digit+3,w
 11347  0A13  00A6               	movwf	print_digit@data
 11348  0A14                     l3476:
 11349                           
 11350                           ;tm1637.c: 198:     tmp %= 1000;
 11351  0A14  30E8               	movlw	232
 11352  0A15  00F0               	movwf	___awmod@divisor
 11353  0A16  3003               	movlw	3
 11354  0A17  00F1               	movwf	___awmod@divisor+1
 11355  0A18  082B               	movf	print_digit@tmp,w
 11356  0A19  00A2               	movwf	??_print_digit
 11357  0A1A  01A3               	clrf	??_print_digit+1
 11358  0A1B  0822               	movf	??_print_digit,w
 11359  0A1C  00F2               	movwf	___awmod@dividend
 11360  0A1D  0823               	movf	??_print_digit+1,w
 11361  0A1E  00F3               	movwf	___awmod@dividend+1
 11362  0A1F  3191  2181  3189   	fcall	___awmod
 11363  0A22  0870               	movf	?___awmod,w
 11364  0A23  0020               	movlb	0	; select bank0
 11365  0A24  00A4               	movwf	??_print_digit+2
 11366  0A25  0824               	movf	??_print_digit+2,w
 11367  0A26  00AB               	movwf	print_digit@tmp
 11368  0A27                     l3478:
 11369                           
 11370                           ;tm1637.c: 199:     data[1] = encode_digit(p, tmp / 100);
 11371  0A27  3064               	movlw	100
 11372  0A28  00F0               	movwf	___awdiv@divisor
 11373  0A29  3000               	movlw	0
 11374  0A2A  00F1               	movwf	___awdiv@divisor+1
 11375  0A2B  082B               	movf	print_digit@tmp,w
 11376  0A2C  00A2               	movwf	??_print_digit
 11377  0A2D  01A3               	clrf	??_print_digit+1
 11378  0A2E  0822               	movf	??_print_digit,w
 11379  0A2F  00F2               	movwf	___awdiv@dividend
 11380  0A30  0823               	movf	??_print_digit+1,w
 11381  0A31  00F3               	movwf	___awdiv@dividend+1
 11382  0A32  3193  23ED  3189   	fcall	___awdiv
 11383  0A35  0870               	movf	?___awdiv,w
 11384  0A36  0020               	movlb	0	; select bank0
 11385  0A37  00A4               	movwf	??_print_digit+2
 11386  0A38  0824               	movf	??_print_digit+2,w
 11387  0A39  00F9               	movwf	encode_digit@digit
 11388  0A3A  082A               	movf	print_digit@p,w
 11389  0A3B  319E  2636  3189   	fcall	_encode_digit
 11390  0A3E  0020               	movlb	0	; select bank0
 11391  0A3F  00A5               	movwf	??_print_digit+3
 11392  0A40  0825               	movf	??_print_digit+3,w
 11393  0A41  00A7               	movwf	print_digit@data+1
 11394  0A42                     l3480:
 11395                           
 11396                           ;tm1637.c: 200:     tmp %= 100;
 11397  0A42  3064               	movlw	100
 11398  0A43  00F0               	movwf	___awmod@divisor
 11399  0A44  3000               	movlw	0
 11400  0A45  00F1               	movwf	___awmod@divisor+1
 11401  0A46  082B               	movf	print_digit@tmp,w
 11402  0A47  00A2               	movwf	??_print_digit
 11403  0A48  01A3               	clrf	??_print_digit+1
 11404  0A49  0822               	movf	??_print_digit,w
 11405  0A4A  00F2               	movwf	___awmod@dividend
 11406  0A4B  0823               	movf	??_print_digit+1,w
 11407  0A4C  00F3               	movwf	___awmod@dividend+1
 11408  0A4D  3191  2181  3189   	fcall	___awmod
 11409  0A50  0870               	movf	?___awmod,w
 11410  0A51  0020               	movlb	0	; select bank0
 11411  0A52  00A4               	movwf	??_print_digit+2
 11412  0A53  0824               	movf	??_print_digit+2,w
 11413  0A54  00AB               	movwf	print_digit@tmp
 11414  0A55                     l3482:
 11415                           
 11416                           ;tm1637.c: 201:     data[2] = encode_digit(p, tmp / 10);
 11417  0A55  300A               	movlw	10
 11418  0A56  00F0               	movwf	___awdiv@divisor
 11419  0A57  3000               	movlw	0
 11420  0A58  00F1               	movwf	___awdiv@divisor+1
 11421  0A59  082B               	movf	print_digit@tmp,w
 11422  0A5A  00A2               	movwf	??_print_digit
 11423  0A5B  01A3               	clrf	??_print_digit+1
 11424  0A5C  0822               	movf	??_print_digit,w
 11425  0A5D  00F2               	movwf	___awdiv@dividend
 11426  0A5E  0823               	movf	??_print_digit+1,w
 11427  0A5F  00F3               	movwf	___awdiv@dividend+1
 11428  0A60  3193  23ED  3189   	fcall	___awdiv
 11429  0A63  0870               	movf	?___awdiv,w
 11430  0A64  0020               	movlb	0	; select bank0
 11431  0A65  00A4               	movwf	??_print_digit+2
 11432  0A66  0824               	movf	??_print_digit+2,w
 11433  0A67  00F9               	movwf	encode_digit@digit
 11434  0A68  082A               	movf	print_digit@p,w
 11435  0A69  319E  2636  3189   	fcall	_encode_digit
 11436  0A6C  0020               	movlb	0	; select bank0
 11437  0A6D  00A5               	movwf	??_print_digit+3
 11438  0A6E  0825               	movf	??_print_digit+3,w
 11439  0A6F  00A8               	movwf	print_digit@data+2
 11440  0A70                     l3484:
 11441                           
 11442                           ;tm1637.c: 202:     tmp %= 10;
 11443  0A70  300A               	movlw	10
 11444  0A71  00F0               	movwf	___awmod@divisor
 11445  0A72  3000               	movlw	0
 11446  0A73  00F1               	movwf	___awmod@divisor+1
 11447  0A74  082B               	movf	print_digit@tmp,w
 11448  0A75  00A2               	movwf	??_print_digit
 11449  0A76  01A3               	clrf	??_print_digit+1
 11450  0A77  0822               	movf	??_print_digit,w
 11451  0A78  00F2               	movwf	___awmod@dividend
 11452  0A79  0823               	movf	??_print_digit+1,w
 11453  0A7A  00F3               	movwf	___awmod@dividend+1
 11454  0A7B  3191  2181  3189   	fcall	___awmod
 11455  0A7E  0870               	movf	?___awmod,w
 11456  0A7F  0020               	movlb	0	; select bank0
 11457  0A80  00A4               	movwf	??_print_digit+2
 11458  0A81  0824               	movf	??_print_digit+2,w
 11459  0A82  00AB               	movwf	print_digit@tmp
 11460  0A83                     l3486:
 11461                           
 11462                           ;tm1637.c: 203:     data[3] = encode_digit(p, tmp);
 11463  0A83  082B               	movf	print_digit@tmp,w
 11464  0A84  00A2               	movwf	??_print_digit
 11465  0A85  0822               	movf	??_print_digit,w
 11466  0A86  00F9               	movwf	encode_digit@digit
 11467  0A87  082A               	movf	print_digit@p,w
 11468  0A88  319E  2636  3189   	fcall	_encode_digit
 11469  0A8B  0020               	movlb	0	; select bank0
 11470  0A8C  00A3               	movwf	??_print_digit+1
 11471  0A8D  0823               	movf	??_print_digit+1,w
 11472  0A8E  00A9               	movwf	print_digit@data+3
 11473  0A8F                     l3488:
 11474                           
 11475                           ;tm1637.c: 205:     set_segments(p, data, 4, 0);
 11476  0A8F  3026               	movlw	(low (print_digit@data| 0))& (0+255)
 11477  0A90  00A2               	movwf	??_print_digit
 11478  0A91  0822               	movf	??_print_digit,w
 11479  0A92  00F8               	movwf	set_segments@segments
 11480  0A93  3004               	movlw	4
 11481  0A94  00A3               	movwf	??_print_digit+1
 11482  0A95  0823               	movf	??_print_digit+1,w
 11483  0A96  00F9               	movwf	set_segments@length
 11484  0A97  01FA               	clrf	set_segments@pos
 11485  0A98  082A               	movf	print_digit@p,w
 11486  0A99  3193  2336  3189   	fcall	_set_segments
 11487  0A9C                     l252:
 11488  0A9C  0008               	return
 11489  0A9D                     __end_of_print_digit:
 11490                           
 11491                           	psect	text43
 11492  1336                     __ptext43:	
 11493 ;; *************** function _set_segments *****************
 11494 ;; Defined at:
 11495 ;;		line 147 in file "tm1637.c"
 11496 ;; Parameters:    Size  Location     Type
 11497 ;;  p               1    wreg     PTR struct .
 11498 ;;		 -> NULL(0), main@tm1637(2), 
 11499 ;;  segments        1    8[COMMON] PTR const unsigned char 
 11500 ;;		 -> print_digit@data(4), clear_segment@data(4), 
 11501 ;;  length          1    9[COMMON] unsigned char 
 11502 ;;  pos             1   10[COMMON] unsigned char 
 11503 ;; Auto vars:     Size  Location     Type
 11504 ;;  p               1    1[BANK0 ] PTR struct .
 11505 ;;		 -> NULL(0), main@tm1637(2), 
 11506 ;;  k               1    0[BANK0 ] unsigned char 
 11507 ;; Return value:  Size  Location     Type
 11508 ;;                  1    wreg      void 
 11509 ;; Registers used:
 11510 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 11511 ;; Tracked objects:
 11512 ;;		On entry : 0/0
 11513 ;;		On exit  : 0/0
 11514 ;;		Unchanged: 0/0
 11515 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 11516 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11517 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11518 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11519 ;;      Totals:         5       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11520 ;;Total ram usage:        7 bytes
 11521 ;; Hardware stack levels used: 1
 11522 ;; Hardware stack levels required when called: 2
 11523 ;; This function calls:
 11524 ;;		_start_segment
 11525 ;;		_stop_segment
 11526 ;;		_write_byte
 11527 ;; This function is called by:
 11528 ;;		_print_digit
 11529 ;;		_clear_segment
 11530 ;; This function uses a non-reentrant model
 11531 ;;
 11532                           
 11533                           
 11534                           ;psect for function _set_segments
 11535  1336                     _set_segments:
 11536                           
 11537                           ;incstack = 0
 11538                           ; Regs used in _set_segments: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
 11539                           ;set_segments@p stored from wreg
 11540  1336  0020               	movlb	0	; select bank0
 11541  1337  00A1               	movwf	set_segments@p
 11542  1338                     l2962:
 11543                           
 11544                           ;tm1637.c: 149:     start_segment(p);
 11545  1338  0821               	movf	set_segments@p,w
 11546  1339  319F  273F  3193   	fcall	_start_segment
 11547                           
 11548                           ;tm1637.c: 150:     write_byte(p, 0x40);
 11549  133C  3040               	movlw	64
 11550  133D  00FB               	movwf	??_set_segments
 11551  133E  087B               	movf	??_set_segments,w
 11552  133F  00F2               	movwf	write_byte@b
 11553  1340  0020               	movlb	0	; select bank0
 11554  1341  0821               	movf	set_segments@p,w
 11555  1342  3191  21D4  3193   	fcall	_write_byte
 11556                           
 11557                           ;tm1637.c: 151:     stop_segment(p);
 11558  1345  0020               	movlb	0	; select bank0
 11559  1346  0821               	movf	set_segments@p,w
 11560  1347  319F  2759  3193   	fcall	_stop_segment
 11561                           
 11562                           ;tm1637.c: 154:     start_segment(p);
 11563  134A  0020               	movlb	0	; select bank0
 11564  134B  0821               	movf	set_segments@p,w
 11565  134C  319F  273F  3193   	fcall	_start_segment
 11566                           
 11567                           ;tm1637.c: 155:     write_byte(p, 0xC0 + (pos & 0x03));
 11568  134F  087A               	movf	set_segments@pos,w
 11569  1350  3903               	andlw	3
 11570  1351  3EC0               	addlw	192
 11571  1352  00FB               	movwf	??_set_segments
 11572  1353  087B               	movf	??_set_segments,w
 11573  1354  00F2               	movwf	write_byte@b
 11574  1355  0020               	movlb	0	; select bank0
 11575  1356  0821               	movf	set_segments@p,w
 11576  1357  3191  21D4  3193   	fcall	_write_byte
 11577  135A                     l2964:
 11578                           
 11579                           ;tm1637.c: 158:     for(uint8_t k = 0; k < length; k++){
 11580  135A  0020               	movlb	0	; select bank0
 11581  135B  01A0               	clrf	set_segments@k
 11582  135C  2B70               	goto	l2970
 11583  135D                     l2966:
 11584                           
 11585                           ;tm1637.c: 159:         write_byte(p, segments[k]);
 11586  135D  0820               	movf	set_segments@k,w
 11587  135E  0778               	addwf	set_segments@segments,w
 11588  135F  00FB               	movwf	??_set_segments
 11589  1360  087B               	movf	??_set_segments,w
 11590  1361  0086               	movwf	6
 11591  1362  0187               	clrf	7
 11592  1363  0801               	movf	1,w
 11593  1364  00FC               	movwf	??_set_segments+1
 11594  1365  087C               	movf	??_set_segments+1,w
 11595  1366  00F2               	movwf	write_byte@b
 11596  1367  0821               	movf	set_segments@p,w
 11597  1368  3191  21D4  3193   	fcall	_write_byte
 11598  136B                     l2968:
 11599                           
 11600                           ;tm1637.c: 160:     }
 11601  136B  3001               	movlw	1
 11602  136C  00FB               	movwf	??_set_segments
 11603  136D  087B               	movf	??_set_segments,w
 11604  136E  0020               	movlb	0	; select bank0
 11605  136F  07A0               	addwf	set_segments@k,f
 11606  1370                     l2970:
 11607  1370  0879               	movf	set_segments@length,w
 11608  1371  0220               	subwf	set_segments@k,w
 11609  1372  1C03               	skipc
 11610  1373  2B75               	goto	u3211
 11611  1374  2B76               	goto	u3210
 11612  1375                     u3211:
 11613  1375  2B5D               	goto	l2966
 11614  1376                     u3210:
 11615  1376                     l2972:
 11616                           
 11617                           ;tm1637.c: 162:     stop_segment(p);
 11618  1376  0821               	movf	set_segments@p,w
 11619  1377  319F  2759  3193   	fcall	_stop_segment
 11620                           
 11621                           ;tm1637.c: 165:     start_segment(p);
 11622  137A  0020               	movlb	0	; select bank0
 11623  137B  0821               	movf	set_segments@p,w
 11624  137C  319F  273F  3193   	fcall	_start_segment
 11625                           
 11626                           ;tm1637.c: 166:     write_byte(p, 0x80 + (m_brightness & 0x0f));
 11627  137F  0021               	movlb	1	; select bank1
 11628  1380  0864               	movf	_m_brightness^(0+128),w
 11629  1381  390F               	andlw	15
 11630  1382  3E80               	addlw	128
 11631  1383  00FB               	movwf	??_set_segments
 11632  1384  087B               	movf	??_set_segments,w
 11633  1385  00F2               	movwf	write_byte@b
 11634  1386  0020               	movlb	0	; select bank0
 11635  1387  0821               	movf	set_segments@p,w
 11636  1388  3191  21D4  3193   	fcall	_write_byte
 11637                           
 11638                           ;tm1637.c: 167:     stop_segment(p);
 11639  138B  0020               	movlb	0	; select bank0
 11640  138C  0821               	movf	set_segments@p,w
 11641  138D  319F  2759  3193   	fcall	_stop_segment
 11642  1390                     l236:
 11643  1390  0008               	return
 11644  1391                     __end_of_set_segments:
 11645                           
 11646                           	psect	text44
 11647  11D4                     __ptext44:	
 11648 ;; *************** function _write_byte *****************
 11649 ;; Defined at:
 11650 ;;		line 78 in file "tm1637.c"
 11651 ;; Parameters:    Size  Location     Type
 11652 ;;  p               1    wreg     PTR struct .
 11653 ;;		 -> NULL(0), main@tm1637(2), 
 11654 ;;  b               1    2[COMMON] unsigned char 
 11655 ;; Auto vars:     Size  Location     Type
 11656 ;;  p               1    7[COMMON] PTR struct .
 11657 ;;		 -> NULL(0), main@tm1637(2), 
 11658 ;;  i               1    6[COMMON] unsigned char 
 11659 ;;  data            1    5[COMMON] unsigned char 
 11660 ;;  ack             1    4[COMMON] unsigned char 
 11661 ;; Return value:  Size  Location     Type
 11662 ;;                  1    wreg      unsigned char 
 11663 ;; Registers used:
 11664 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 11665 ;; Tracked objects:
 11666 ;;		On entry : 0/0
 11667 ;;		On exit  : 0/0
 11668 ;;		Unchanged: 0/0
 11669 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 11670 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11671 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11672 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11673 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11674 ;;Total ram usage:        6 bytes
 11675 ;; Hardware stack levels used: 1
 11676 ;; Hardware stack levels required when called: 1
 11677 ;; This function calls:
 11678 ;;		_CLK_SET_HIGH
 11679 ;;		_CLK_SET_LOW
 11680 ;;		_CLK_SET_OUTPUT
 11681 ;;		_DIO_SET_HIGH
 11682 ;;		_DIO_SET_INPUT
 11683 ;;		_DIO_SET_LOW
 11684 ;;		_DIO_SET_OUTPUT
 11685 ;;		_get_DIO_PIN_value
 11686 ;; This function is called by:
 11687 ;;		_set_segments
 11688 ;; This function uses a non-reentrant model
 11689 ;;
 11690                           
 11691                           
 11692                           ;psect for function _write_byte
 11693  11D4                     _write_byte:
 11694                           
 11695                           ;incstack = 0
 11696                           ; Regs used in _write_byte: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
 11697                           ;write_byte@p stored from wreg
 11698  11D4  00F7               	movwf	write_byte@p
 11699  11D5                     l2804:
 11700                           
 11701                           ;tm1637.c: 79:     uint8_t data = b;
 11702  11D5  0872               	movf	write_byte@b,w
 11703  11D6  00F3               	movwf	??_write_byte
 11704  11D7  0873               	movf	??_write_byte,w
 11705  11D8  00F5               	movwf	write_byte@data
 11706  11D9                     l2806:
 11707                           
 11708                           ;tm1637.c: 82:     CLK_SET_OUTPUT(p);
 11709  11D9  0877               	movf	write_byte@p,w
 11710  11DA  319E  267E  3191   	fcall	_CLK_SET_OUTPUT
 11711  11DD                     l2808:
 11712                           
 11713                           ;tm1637.c: 83:     for(uint8_t i = 0; i < 8; i++){
 11714  11DD  01F6               	clrf	write_byte@i
 11715  11DE                     l2814:
 11716                           
 11717                           ;tm1637.c: 85:         CLK_SET_LOW(p);
 11718  11DE  0877               	movf	write_byte@p,w
 11719  11DF  319E  2673  3191   	fcall	_CLK_SET_LOW
 11720  11E2                     l2816:
 11721                           
 11722                           ;tm1637.c: 87:         if(data & 0x01){
 11723  11E2  1C75               	btfss	write_byte@data,0
 11724  11E3  29E5               	goto	u2901
 11725  11E4  29E6               	goto	u2900
 11726  11E5                     u2901:
 11727  11E5  29EB               	goto	l2820
 11728  11E6                     u2900:
 11729  11E6                     l2818:
 11730                           
 11731                           ;tm1637.c: 89:             DIO_SET_HIGH(p);
 11732  11E6  0877               	movf	write_byte@p,w
 11733  11E7  319E  2689  3191   	fcall	_DIO_SET_HIGH
 11734                           
 11735                           ;tm1637.c: 90:         }else{
 11736  11EA  29EF               	goto	l223
 11737  11EB                     l2820:
 11738                           
 11739                           ;tm1637.c: 92:             DIO_SET_LOW(p);
 11740  11EB  0877               	movf	write_byte@p,w
 11741  11EC  319E  2694  3191   	fcall	_DIO_SET_LOW
 11742  11EF                     l223:	
 11743                           ;tm1637.c: 93:         }
 11744                           
 11745                           
 11746                           ;tm1637.c: 96:         CLK_SET_HIGH(p);
 11747  11EF  0877               	movf	write_byte@p,w
 11748  11F0  319E  2668  3191   	fcall	_CLK_SET_HIGH
 11749  11F3                     l2822:
 11750                           
 11751                           ;tm1637.c: 98:         data = data >> 1;
 11752  11F3  3675               	lsrf	write_byte@data,w
 11753  11F4  00F3               	movwf	??_write_byte
 11754  11F5  0873               	movf	??_write_byte,w
 11755  11F6  00F5               	movwf	write_byte@data
 11756  11F7                     l2824:
 11757                           
 11758                           ;tm1637.c: 99:     }
 11759  11F7  3001               	movlw	1
 11760  11F8  00F3               	movwf	??_write_byte
 11761  11F9  0873               	movf	??_write_byte,w
 11762  11FA  07F6               	addwf	write_byte@i,f
 11763  11FB                     l2826:
 11764  11FB  3008               	movlw	8
 11765  11FC  0276               	subwf	write_byte@i,w
 11766  11FD  1C03               	skipc
 11767  11FE  2A00               	goto	u2911
 11768  11FF  2A01               	goto	u2910
 11769  1200                     u2911:
 11770  1200  29DE               	goto	l2814
 11771  1201                     u2910:
 11772  1201                     l2828:
 11773                           
 11774                           ;tm1637.c: 104:     CLK_SET_LOW(p);
 11775  1201  0877               	movf	write_byte@p,w
 11776  1202  319E  2673  3191   	fcall	_CLK_SET_LOW
 11777                           
 11778                           ;tm1637.c: 105:     DIO_SET_HIGH(p);
 11779  1205  0877               	movf	write_byte@p,w
 11780  1206  319E  2689  3191   	fcall	_DIO_SET_HIGH
 11781                           
 11782                           ;tm1637.c: 108:     CLK_SET_HIGH(p);
 11783  1209  0877               	movf	write_byte@p,w
 11784  120A  319E  2668  3191   	fcall	_CLK_SET_HIGH
 11785                           
 11786                           ;tm1637.c: 111:     DIO_SET_INPUT(p);
 11787  120D  0877               	movf	write_byte@p,w
 11788  120E  319E  26AA  3191   	fcall	_DIO_SET_INPUT
 11789                           
 11790                           ;tm1637.c: 113:     uint8_t ack = get_DIO_PIN_value(p);
 11791  1211  0877               	movf	write_byte@p,w
 11792  1212  3195  25A3  3191   	fcall	_get_DIO_PIN_value
 11793  1215  00F3               	movwf	??_write_byte
 11794  1216  0873               	movf	??_write_byte,w
 11795  1217  00F4               	movwf	write_byte@ack
 11796  1218                     l2830:
 11797                           
 11798                           ;tm1637.c: 114:     if(ack == 0){
 11799  1218  0874               	movf	write_byte@ack,w
 11800  1219  1D03               	btfss	3,2
 11801  121A  2A1C               	goto	u2921
 11802  121B  2A1D               	goto	u2920
 11803  121C                     u2921:
 11804  121C  2A25               	goto	l224
 11805  121D                     u2920:
 11806  121D                     l2832:
 11807                           
 11808                           ;tm1637.c: 116:         DIO_SET_OUTPUT(p);
 11809  121D  0877               	movf	write_byte@p,w
 11810  121E  319E  269F  3191   	fcall	_DIO_SET_OUTPUT
 11811                           
 11812                           ;tm1637.c: 119:         DIO_SET_LOW(p);
 11813  1221  0877               	movf	write_byte@p,w
 11814  1222  319E  2694  3191   	fcall	_DIO_SET_LOW
 11815  1225                     l224:	
 11816                           ;tm1637.c: 120:     }
 11817                           
 11818                           
 11819                           ;tm1637.c: 123:     DIO_SET_OUTPUT(p);
 11820  1225  0877               	movf	write_byte@p,w
 11821  1226  319E  269F  3191   	fcall	_DIO_SET_OUTPUT
 11822  1229                     l225:
 11823  1229  0008               	return
 11824  122A                     __end_of_write_byte:
 11825                           
 11826                           	psect	text45
 11827  15A3                     __ptext45:	
 11828 ;; *************** function _get_DIO_PIN_value *****************
 11829 ;; Defined at:
 11830 ;;		line 67 in file "tm1637.c"
 11831 ;; Parameters:    Size  Location     Type
 11832 ;;  p               1    wreg     PTR struct .
 11833 ;;		 -> NULL(0), main@tm1637(2), 
 11834 ;; Auto vars:     Size  Location     Type
 11835 ;;  p               1    1[COMMON] PTR struct .
 11836 ;;		 -> NULL(0), main@tm1637(2), 
 11837 ;; Return value:  Size  Location     Type
 11838 ;;                  1    wreg      unsigned char 
 11839 ;; Registers used:
 11840 ;;		wreg, fsr1l, fsr1h, status,2, status,0
 11841 ;; Tracked objects:
 11842 ;;		On entry : 0/0
 11843 ;;		On exit  : 0/0
 11844 ;;		Unchanged: 0/0
 11845 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 11846 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11847 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11848 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11849 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11850 ;;Total ram usage:        2 bytes
 11851 ;; Hardware stack levels used: 1
 11852 ;; This function calls:
 11853 ;;		Nothing
 11854 ;; This function is called by:
 11855 ;;		_write_byte
 11856 ;; This function uses a non-reentrant model
 11857 ;;
 11858                           
 11859                           
 11860                           ;psect for function _get_DIO_PIN_value
 11861  15A3                     _get_DIO_PIN_value:
 11862                           
 11863                           ;incstack = 0
 11864                           ; Regs used in _get_DIO_PIN_value: [wreg+fsr1l+fsr1h+status,2+status,0]
 11865                           ;get_DIO_PIN_value@p stored from wreg
 11866  15A3  00F1               	movwf	get_DIO_PIN_value@p
 11867  15A4                     l2620:
 11868                           
 11869                           ;tm1637.c: 68:     if(p->dat_pin == 0x01){ return PORTBbits.RB0; }
 11870  15A4  0A71               	incf	get_DIO_PIN_value@p,w
 11871  15A5  0086               	movwf	6
 11872  15A6  3001               	movlw	1	; select bank2/3
 11873  15A7  0087               	movwf	7
 11874  15A8  0301               	decf	1,w
 11875  15A9  1D03               	btfss	3,2
 11876  15AA  2DAC               	goto	u2471
 11877  15AB  2DAD               	goto	u2470
 11878  15AC                     u2471:
 11879  15AC  2DB1               	goto	l2626
 11880  15AD                     u2470:
 11881  15AD                     l2622:
 11882  15AD  0020               	movlb	0	; select bank0
 11883  15AE  080D               	movf	13,w	;volatile
 11884  15AF  3901               	andlw	1
 11885  15B0  2E1A               	goto	l210
 11886  15B1                     l2626:
 11887                           
 11888                           ;tm1637.c: 69:     if(p->dat_pin == 0x02){ return PORTBbits.RB1; }
 11889  15B1  0A71               	incf	get_DIO_PIN_value@p,w
 11890  15B2  0086               	movwf	6
 11891  15B3  3001               	movlw	1	; select bank2/3
 11892  15B4  0087               	movwf	7
 11893  15B5  3002               	movlw	2
 11894  15B6  0601               	xorwf	1,w
 11895  15B7  1D03               	btfss	3,2
 11896  15B8  2DBA               	goto	u2481
 11897  15B9  2DBB               	goto	u2480
 11898  15BA                     u2481:
 11899  15BA  2DBF               	goto	l2632
 11900  15BB                     u2480:
 11901  15BB                     l2628:
 11902  15BB  0020               	movlb	0	; select bank0
 11903  15BC  0C0D               	rrf	13,w	;volatile
 11904  15BD  3901               	andlw	1
 11905  15BE  2E1A               	goto	l210
 11906  15BF                     l2632:
 11907                           
 11908                           ;tm1637.c: 70:     if(p->dat_pin == 0x04){ return PORTBbits.RB2; }
 11909  15BF  0A71               	incf	get_DIO_PIN_value@p,w
 11910  15C0  0086               	movwf	6
 11911  15C1  3001               	movlw	1	; select bank2/3
 11912  15C2  0087               	movwf	7
 11913  15C3  3004               	movlw	4
 11914  15C4  0601               	xorwf	1,w
 11915  15C5  1D03               	btfss	3,2
 11916  15C6  2DC8               	goto	u2491
 11917  15C7  2DC9               	goto	u2490
 11918  15C8                     u2491:
 11919  15C8  2DCE               	goto	l2638
 11920  15C9                     u2490:
 11921  15C9                     l2634:
 11922  15C9  0020               	movlb	0	; select bank0
 11923  15CA  0C0D               	rrf	13,w	;volatile
 11924  15CB  0C89               	rrf	9,f
 11925  15CC  3901               	andlw	1
 11926  15CD  2E1A               	goto	l210
 11927  15CE                     l2638:
 11928                           
 11929                           ;tm1637.c: 71:     if(p->dat_pin == 0x08){ return PORTBbits.RB3; }
 11930  15CE  0A71               	incf	get_DIO_PIN_value@p,w
 11931  15CF  0086               	movwf	6
 11932  15D0  3001               	movlw	1	; select bank2/3
 11933  15D1  0087               	movwf	7
 11934  15D2  3008               	movlw	8
 11935  15D3  0601               	xorwf	1,w
 11936  15D4  1D03               	btfss	3,2
 11937  15D5  2DD7               	goto	u2501
 11938  15D6  2DD8               	goto	u2500
 11939  15D7                     u2501:
 11940  15D7  2DDF               	goto	l2644
 11941  15D8                     u2500:
 11942  15D8                     l2640:
 11943  15D8  0020               	movlb	0	; select bank0
 11944  15D9  0C0D               	rrf	13,w	;volatile
 11945  15DA  00F0               	movwf	??_get_DIO_PIN_value
 11946  15DB  0CF0               	rrf	??_get_DIO_PIN_value,f
 11947  15DC  0C70               	rrf	??_get_DIO_PIN_value,w
 11948  15DD  3901               	andlw	1
 11949  15DE  2E1A               	goto	l210
 11950  15DF                     l2644:
 11951                           
 11952                           ;tm1637.c: 72:     if(p->dat_pin == 0x10){ return PORTBbits.RB4; }
 11953  15DF  0A71               	incf	get_DIO_PIN_value@p,w
 11954  15E0  0086               	movwf	6
 11955  15E1  3001               	movlw	1	; select bank2/3
 11956  15E2  0087               	movwf	7
 11957  15E3  3010               	movlw	16
 11958  15E4  0601               	xorwf	1,w
 11959  15E5  1D03               	btfss	3,2
 11960  15E6  2DE8               	goto	u2511
 11961  15E7  2DE9               	goto	u2510
 11962  15E8                     u2511:
 11963  15E8  2DED               	goto	l2650
 11964  15E9                     u2510:
 11965  15E9                     l2646:
 11966  15E9  0020               	movlb	0	; select bank0
 11967  15EA  0E0D               	swapf	13,w	;volatile
 11968  15EB  3901               	andlw	1
 11969  15EC  2E1A               	goto	l210
 11970  15ED                     l2650:
 11971                           
 11972                           ;tm1637.c: 73:     if(p->dat_pin == 0x20){ return PORTBbits.RB5; }
 11973  15ED  0A71               	incf	get_DIO_PIN_value@p,w
 11974  15EE  0086               	movwf	6
 11975  15EF  3001               	movlw	1	; select bank2/3
 11976  15F0  0087               	movwf	7
 11977  15F1  3020               	movlw	32
 11978  15F2  0601               	xorwf	1,w
 11979  15F3  1D03               	btfss	3,2
 11980  15F4  2DF6               	goto	u2521
 11981  15F5  2DF7               	goto	u2520
 11982  15F6                     u2521:
 11983  15F6  2DFC               	goto	l2656
 11984  15F7                     u2520:
 11985  15F7                     l2652:
 11986  15F7  0020               	movlb	0	; select bank0
 11987  15F8  0E0D               	swapf	13,w	;volatile
 11988  15F9  0C89               	rrf	9,f
 11989  15FA  3901               	andlw	1
 11990  15FB  2E1A               	goto	l210
 11991  15FC                     l2656:
 11992                           
 11993                           ;tm1637.c: 74:     if(p->dat_pin == 0x40){ return PORTBbits.RB6; }
 11994  15FC  0A71               	incf	get_DIO_PIN_value@p,w
 11995  15FD  0086               	movwf	6
 11996  15FE  3001               	movlw	1	; select bank2/3
 11997  15FF  0087               	movwf	7
 11998  1600  3040               	movlw	64
 11999  1601  0601               	xorwf	1,w
 12000  1602  1D03               	btfss	3,2
 12001  1603  2E05               	goto	u2531
 12002  1604  2E06               	goto	u2530
 12003  1605                     u2531:
 12004  1605  2E0C               	goto	l2662
 12005  1606                     u2530:
 12006  1606                     l2658:
 12007  1606  0020               	movlb	0	; select bank0
 12008  1607  0E0D               	swapf	13,w	;volatile
 12009  1608  0C89               	rrf	9,f
 12010  1609  0C89               	rrf	9,f
 12011  160A  3901               	andlw	1
 12012  160B  2E1A               	goto	l210
 12013  160C                     l2662:
 12014                           
 12015                           ;tm1637.c: 75:     if(p->dat_pin == 0x80){ return PORTBbits.RB7; }
 12016  160C  0A71               	incf	get_DIO_PIN_value@p,w
 12017  160D  0086               	movwf	6
 12018  160E  3001               	movlw	1	; select bank2/3
 12019  160F  0087               	movwf	7
 12020  1610  3080               	movlw	128
 12021  1611  0601               	xorwf	1,w
 12022  1612  1D03               	btfss	3,2
 12023  1613  2E15               	goto	u2541
 12024  1614  2E16               	goto	u2540
 12025  1615                     u2541:
 12026  1615  2E1A               	goto	l210
 12027  1616                     u2540:
 12028  1616                     l2664:
 12029  1616  0020               	movlb	0	; select bank0
 12030  1617  0D0D               	rlf	13,w	;volatile
 12031  1618  0D0D               	rlf	13,w	;volatile
 12032  1619  3901               	andlw	1
 12033  161A                     l210:
 12034  161A  0008               	return
 12035  161B                     __end_of_get_DIO_PIN_value:
 12036                           
 12037                           	psect	text46
 12038  1EAA                     __ptext46:	
 12039 ;; *************** function _DIO_SET_INPUT *****************
 12040 ;; Defined at:
 12041 ;;		line 32 in file "tm1637.c"
 12042 ;; Parameters:    Size  Location     Type
 12043 ;;  p               1    wreg     PTR struct .
 12044 ;;		 -> NULL(0), main@tm1637(2), 
 12045 ;; Auto vars:     Size  Location     Type
 12046 ;;  p               1    1[COMMON] PTR struct .
 12047 ;;		 -> NULL(0), main@tm1637(2), 
 12048 ;; Return value:  Size  Location     Type
 12049 ;;                  1    wreg      void 
 12050 ;; Registers used:
 12051 ;;		wreg, fsr1l, fsr1h, status,2, status,0
 12052 ;; Tracked objects:
 12053 ;;		On entry : 0/0
 12054 ;;		On exit  : 0/0
 12055 ;;		Unchanged: 0/0
 12056 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 12057 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12058 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12059 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12060 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12061 ;;Total ram usage:        2 bytes
 12062 ;; Hardware stack levels used: 1
 12063 ;; This function calls:
 12064 ;;		Nothing
 12065 ;; This function is called by:
 12066 ;;		_write_byte
 12067 ;; This function uses a non-reentrant model
 12068 ;;
 12069                           
 12070                           
 12071                           ;psect for function _DIO_SET_INPUT
 12072  1EAA                     _DIO_SET_INPUT:
 12073                           
 12074                           ;incstack = 0
 12075                           ; Regs used in _DIO_SET_INPUT: [wreg+fsr1l+fsr1h+status,2+status,0]
 12076                           ;DIO_SET_INPUT@p stored from wreg
 12077  1EAA  00F1               	movwf	DIO_SET_INPUT@p
 12078  1EAB                     l2614:
 12079  1EAB  0A71               	incf	DIO_SET_INPUT@p,w
 12080  1EAC  0086               	movwf	6
 12081  1EAD  3001               	movlw	1	; select bank2/3
 12082  1EAE  0087               	movwf	7
 12083  1EAF  0801               	movf	1,w
 12084  1EB0  00F0               	movwf	??_DIO_SET_INPUT
 12085  1EB1  0870               	movf	??_DIO_SET_INPUT,w
 12086  1EB2  0021               	movlb	1	; select bank1
 12087  1EB3  048D               	iorwf	13,f	;volatile
 12088  1EB4                     l194:
 12089  1EB4  0008               	return
 12090  1EB5                     __end_of_DIO_SET_INPUT:
 12091                           
 12092                           	psect	text47
 12093  1F59                     __ptext47:	
 12094 ;; *************** function _stop_segment *****************
 12095 ;; Defined at:
 12096 ;;		line 53 in file "tm1637.c"
 12097 ;; Parameters:    Size  Location     Type
 12098 ;;  p               1    wreg     PTR struct .
 12099 ;;		 -> NULL(0), main@tm1637(2), 
 12100 ;; Auto vars:     Size  Location     Type
 12101 ;;  p               1    2[COMMON] PTR struct .
 12102 ;;		 -> NULL(0), main@tm1637(2), 
 12103 ;; Return value:  Size  Location     Type
 12104 ;;                  1    wreg      void 
 12105 ;; Registers used:
 12106 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 12107 ;; Tracked objects:
 12108 ;;		On entry : 0/0
 12109 ;;		On exit  : 0/0
 12110 ;;		Unchanged: 0/0
 12111 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 12112 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12113 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12114 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12115 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12116 ;;Total ram usage:        1 bytes
 12117 ;; Hardware stack levels used: 1
 12118 ;; Hardware stack levels required when called: 1
 12119 ;; This function calls:
 12120 ;;		_CLK_SET_HIGH
 12121 ;;		_CLK_SET_LOW
 12122 ;;		_CLK_SET_OUTPUT
 12123 ;;		_DIO_SET_HIGH
 12124 ;;		_DIO_SET_LOW
 12125 ;;		_DIO_SET_OUTPUT
 12126 ;; This function is called by:
 12127 ;;		_set_segments
 12128 ;; This function uses a non-reentrant model
 12129 ;;
 12130                           
 12131                           
 12132                           ;psect for function _stop_segment
 12133  1F59                     _stop_segment:
 12134                           
 12135                           ;incstack = 0
 12136                           ; Regs used in _stop_segment: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
 12137                           ;stop_segment@p stored from wreg
 12138  1F59  00F2               	movwf	stop_segment@p
 12139  1F5A                     l2802:
 12140                           
 12141                           ;tm1637.c: 55:     DIO_SET_OUTPUT(p);
 12142  1F5A  0872               	movf	stop_segment@p,w
 12143  1F5B  319E  269F  319F   	fcall	_DIO_SET_OUTPUT
 12144                           
 12145                           ;tm1637.c: 56:     CLK_SET_OUTPUT(p);
 12146  1F5E  0872               	movf	stop_segment@p,w
 12147  1F5F  319E  267E  319F   	fcall	_CLK_SET_OUTPUT
 12148                           
 12149                           ;tm1637.c: 59:     CLK_SET_LOW(p);
 12150  1F62  0872               	movf	stop_segment@p,w
 12151  1F63  319E  2673  319F   	fcall	_CLK_SET_LOW
 12152                           
 12153                           ;tm1637.c: 60:     DIO_SET_LOW(p);
 12154  1F66  0872               	movf	stop_segment@p,w
 12155  1F67  319E  2694  319F   	fcall	_DIO_SET_LOW
 12156                           
 12157                           ;tm1637.c: 63:     CLK_SET_HIGH(p);
 12158  1F6A  0872               	movf	stop_segment@p,w
 12159  1F6B  319E  2668  319F   	fcall	_CLK_SET_HIGH
 12160                           
 12161                           ;tm1637.c: 64:     DIO_SET_HIGH(p);
 12162  1F6E  0872               	movf	stop_segment@p,w
 12163  1F6F  319E  2689  319F   	fcall	_DIO_SET_HIGH
 12164  1F72                     l206:
 12165  1F72  0008               	return
 12166  1F73                     __end_of_stop_segment:
 12167                           
 12168                           	psect	text48
 12169  1F3F                     __ptext48:	
 12170 ;; *************** function _start_segment *****************
 12171 ;; Defined at:
 12172 ;;		line 39 in file "tm1637.c"
 12173 ;; Parameters:    Size  Location     Type
 12174 ;;  p               1    wreg     PTR struct .
 12175 ;;		 -> NULL(0), main@tm1637(2), 
 12176 ;; Auto vars:     Size  Location     Type
 12177 ;;  p               1    2[COMMON] PTR struct .
 12178 ;;		 -> NULL(0), main@tm1637(2), 
 12179 ;; Return value:  Size  Location     Type
 12180 ;;                  1    wreg      void 
 12181 ;; Registers used:
 12182 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 12183 ;; Tracked objects:
 12184 ;;		On entry : 0/0
 12185 ;;		On exit  : 0/0
 12186 ;;		Unchanged: 0/0
 12187 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 12188 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12189 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12190 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12191 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12192 ;;Total ram usage:        1 bytes
 12193 ;; Hardware stack levels used: 1
 12194 ;; Hardware stack levels required when called: 1
 12195 ;; This function calls:
 12196 ;;		_CLK_SET_HIGH
 12197 ;;		_CLK_SET_LOW
 12198 ;;		_CLK_SET_OUTPUT
 12199 ;;		_DIO_SET_HIGH
 12200 ;;		_DIO_SET_LOW
 12201 ;;		_DIO_SET_OUTPUT
 12202 ;; This function is called by:
 12203 ;;		_set_segments
 12204 ;; This function uses a non-reentrant model
 12205 ;;
 12206                           
 12207                           
 12208                           ;psect for function _start_segment
 12209  1F3F                     _start_segment:
 12210                           
 12211                           ;incstack = 0
 12212                           ; Regs used in _start_segment: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
 12213                           ;start_segment@p stored from wreg
 12214  1F3F  00F2               	movwf	start_segment@p
 12215  1F40                     l2800:
 12216                           
 12217                           ;tm1637.c: 41:     DIO_SET_OUTPUT(p);
 12218  1F40  0872               	movf	start_segment@p,w
 12219  1F41  319E  269F  319F   	fcall	_DIO_SET_OUTPUT
 12220                           
 12221                           ;tm1637.c: 42:     CLK_SET_OUTPUT(p);
 12222  1F44  0872               	movf	start_segment@p,w
 12223  1F45  319E  267E  319F   	fcall	_CLK_SET_OUTPUT
 12224                           
 12225                           ;tm1637.c: 45:     DIO_SET_HIGH(p);
 12226  1F48  0872               	movf	start_segment@p,w
 12227  1F49  319E  2689  319F   	fcall	_DIO_SET_HIGH
 12228                           
 12229                           ;tm1637.c: 46:     CLK_SET_HIGH(p);
 12230  1F4C  0872               	movf	start_segment@p,w
 12231  1F4D  319E  2668  319F   	fcall	_CLK_SET_HIGH
 12232                           
 12233                           ;tm1637.c: 49:     DIO_SET_LOW(p);
 12234  1F50  0872               	movf	start_segment@p,w
 12235  1F51  319E  2694  319F   	fcall	_DIO_SET_LOW
 12236                           
 12237                           ;tm1637.c: 50:     CLK_SET_LOW(p);
 12238  1F54  0872               	movf	start_segment@p,w
 12239  1F55  319E  2673  319F   	fcall	_CLK_SET_LOW
 12240  1F58                     l203:
 12241  1F58  0008               	return
 12242  1F59                     __end_of_start_segment:
 12243                           
 12244                           	psect	text49
 12245  1E9F                     __ptext49:	
 12246 ;; *************** function _DIO_SET_OUTPUT *****************
 12247 ;; Defined at:
 12248 ;;		line 30 in file "tm1637.c"
 12249 ;; Parameters:    Size  Location     Type
 12250 ;;  p               1    wreg     PTR struct .
 12251 ;;		 -> NULL(0), main@tm1637(2), 
 12252 ;; Auto vars:     Size  Location     Type
 12253 ;;  p               1    1[COMMON] PTR struct .
 12254 ;;		 -> NULL(0), main@tm1637(2), 
 12255 ;; Return value:  Size  Location     Type
 12256 ;;                  1    wreg      void 
 12257 ;; Registers used:
 12258 ;;		wreg, fsr1l, fsr1h, status,2, status,0
 12259 ;; Tracked objects:
 12260 ;;		On entry : 0/0
 12261 ;;		On exit  : 0/0
 12262 ;;		Unchanged: 0/0
 12263 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 12264 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12265 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12266 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12267 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12268 ;;Total ram usage:        2 bytes
 12269 ;; Hardware stack levels used: 1
 12270 ;; This function calls:
 12271 ;;		Nothing
 12272 ;; This function is called by:
 12273 ;;		_start_segment
 12274 ;;		_stop_segment
 12275 ;;		_write_byte
 12276 ;; This function uses a non-reentrant model
 12277 ;;
 12278                           
 12279                           
 12280                           ;psect for function _DIO_SET_OUTPUT
 12281  1E9F                     _DIO_SET_OUTPUT:
 12282                           
 12283                           ;incstack = 0
 12284                           ; Regs used in _DIO_SET_OUTPUT: [wreg+fsr1l+fsr1h+status,2+status,0]
 12285                           ;DIO_SET_OUTPUT@p stored from wreg
 12286  1E9F  00F1               	movwf	DIO_SET_OUTPUT@p
 12287  1EA0                     l2612:
 12288  1EA0  0A71               	incf	DIO_SET_OUTPUT@p,w
 12289  1EA1  0086               	movwf	6
 12290  1EA2  3001               	movlw	1	; select bank2/3
 12291  1EA3  0087               	movwf	7
 12292  1EA4  0901               	comf	1,w
 12293  1EA5  00F0               	movwf	??_DIO_SET_OUTPUT
 12294  1EA6  0870               	movf	??_DIO_SET_OUTPUT,w
 12295  1EA7  0021               	movlb	1	; select bank1
 12296  1EA8  058D               	andwf	13,f	;volatile
 12297  1EA9                     l191:
 12298  1EA9  0008               	return
 12299  1EAA                     __end_of_DIO_SET_OUTPUT:
 12300                           
 12301                           	psect	text50
 12302  1E94                     __ptext50:	
 12303 ;; *************** function _DIO_SET_LOW *****************
 12304 ;; Defined at:
 12305 ;;		line 36 in file "tm1637.c"
 12306 ;; Parameters:    Size  Location     Type
 12307 ;;  p               1    wreg     PTR struct .
 12308 ;;		 -> NULL(0), main@tm1637(2), 
 12309 ;; Auto vars:     Size  Location     Type
 12310 ;;  p               1    1[COMMON] PTR struct .
 12311 ;;		 -> NULL(0), main@tm1637(2), 
 12312 ;; Return value:  Size  Location     Type
 12313 ;;                  1    wreg      void 
 12314 ;; Registers used:
 12315 ;;		wreg, fsr1l, fsr1h, status,2, status,0
 12316 ;; Tracked objects:
 12317 ;;		On entry : 0/0
 12318 ;;		On exit  : 0/0
 12319 ;;		Unchanged: 0/0
 12320 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 12321 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12322 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12323 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12324 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12325 ;;Total ram usage:        2 bytes
 12326 ;; Hardware stack levels used: 1
 12327 ;; This function calls:
 12328 ;;		Nothing
 12329 ;; This function is called by:
 12330 ;;		_start_segment
 12331 ;;		_stop_segment
 12332 ;;		_write_byte
 12333 ;; This function uses a non-reentrant model
 12334 ;;
 12335                           
 12336                           
 12337                           ;psect for function _DIO_SET_LOW
 12338  1E94                     _DIO_SET_LOW:
 12339                           
 12340                           ;incstack = 0
 12341                           ; Regs used in _DIO_SET_LOW: [wreg+fsr1l+fsr1h+status,2+status,0]
 12342                           ;DIO_SET_LOW@p stored from wreg
 12343  1E94  00F1               	movwf	DIO_SET_LOW@p
 12344  1E95                     l2618:
 12345  1E95  0A71               	incf	DIO_SET_LOW@p,w
 12346  1E96  0086               	movwf	6
 12347  1E97  3001               	movlw	1	; select bank2/3
 12348  1E98  0087               	movwf	7
 12349  1E99  0901               	comf	1,w
 12350  1E9A  00F0               	movwf	??_DIO_SET_LOW
 12351  1E9B  0870               	movf	??_DIO_SET_LOW,w
 12352  1E9C  0022               	movlb	2	; select bank2
 12353  1E9D  058D               	andwf	13,f	;volatile
 12354  1E9E                     l200:
 12355  1E9E  0008               	return
 12356  1E9F                     __end_of_DIO_SET_LOW:
 12357                           
 12358                           	psect	text51
 12359  1E89                     __ptext51:	
 12360 ;; *************** function _DIO_SET_HIGH *****************
 12361 ;; Defined at:
 12362 ;;		line 34 in file "tm1637.c"
 12363 ;; Parameters:    Size  Location     Type
 12364 ;;  p               1    wreg     PTR struct .
 12365 ;;		 -> NULL(0), main@tm1637(2), 
 12366 ;; Auto vars:     Size  Location     Type
 12367 ;;  p               1    1[COMMON] PTR struct .
 12368 ;;		 -> NULL(0), main@tm1637(2), 
 12369 ;; Return value:  Size  Location     Type
 12370 ;;                  1    wreg      void 
 12371 ;; Registers used:
 12372 ;;		wreg, fsr1l, fsr1h, status,2, status,0
 12373 ;; Tracked objects:
 12374 ;;		On entry : 0/0
 12375 ;;		On exit  : 0/0
 12376 ;;		Unchanged: 0/0
 12377 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 12378 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12379 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12380 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12381 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12382 ;;Total ram usage:        2 bytes
 12383 ;; Hardware stack levels used: 1
 12384 ;; This function calls:
 12385 ;;		Nothing
 12386 ;; This function is called by:
 12387 ;;		_start_segment
 12388 ;;		_stop_segment
 12389 ;;		_write_byte
 12390 ;; This function uses a non-reentrant model
 12391 ;;
 12392                           
 12393                           
 12394                           ;psect for function _DIO_SET_HIGH
 12395  1E89                     _DIO_SET_HIGH:
 12396                           
 12397                           ;incstack = 0
 12398                           ; Regs used in _DIO_SET_HIGH: [wreg+fsr1l+fsr1h+status,2+status,0]
 12399                           ;DIO_SET_HIGH@p stored from wreg
 12400  1E89  00F1               	movwf	DIO_SET_HIGH@p
 12401  1E8A                     l2616:
 12402  1E8A  0A71               	incf	DIO_SET_HIGH@p,w
 12403  1E8B  0086               	movwf	6
 12404  1E8C  3001               	movlw	1	; select bank2/3
 12405  1E8D  0087               	movwf	7
 12406  1E8E  0801               	movf	1,w
 12407  1E8F  00F0               	movwf	??_DIO_SET_HIGH
 12408  1E90  0870               	movf	??_DIO_SET_HIGH,w
 12409  1E91  0022               	movlb	2	; select bank2
 12410  1E92  048D               	iorwf	13,f	;volatile
 12411  1E93                     l197:
 12412  1E93  0008               	return
 12413  1E94                     __end_of_DIO_SET_HIGH:
 12414                           
 12415                           	psect	text52
 12416  1E7E                     __ptext52:	
 12417 ;; *************** function _CLK_SET_OUTPUT *****************
 12418 ;; Defined at:
 12419 ;;		line 22 in file "tm1637.c"
 12420 ;; Parameters:    Size  Location     Type
 12421 ;;  p               1    wreg     PTR struct .
 12422 ;;		 -> NULL(0), main@tm1637(2), 
 12423 ;; Auto vars:     Size  Location     Type
 12424 ;;  p               1    1[COMMON] PTR struct .
 12425 ;;		 -> NULL(0), main@tm1637(2), 
 12426 ;; Return value:  Size  Location     Type
 12427 ;;                  1    wreg      void 
 12428 ;; Registers used:
 12429 ;;		wreg, fsr1l, fsr1h, status,2, status,0
 12430 ;; Tracked objects:
 12431 ;;		On entry : 0/0
 12432 ;;		On exit  : 0/0
 12433 ;;		Unchanged: 0/0
 12434 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 12435 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12436 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12437 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12438 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12439 ;;Total ram usage:        2 bytes
 12440 ;; Hardware stack levels used: 1
 12441 ;; This function calls:
 12442 ;;		Nothing
 12443 ;; This function is called by:
 12444 ;;		_start_segment
 12445 ;;		_stop_segment
 12446 ;;		_write_byte
 12447 ;; This function uses a non-reentrant model
 12448 ;;
 12449                           
 12450                           
 12451                           ;psect for function _CLK_SET_OUTPUT
 12452  1E7E                     _CLK_SET_OUTPUT:
 12453                           
 12454                           ;incstack = 0
 12455                           ; Regs used in _CLK_SET_OUTPUT: [wreg+fsr1l+fsr1h+status,2+status,0]
 12456                           ;CLK_SET_OUTPUT@p stored from wreg
 12457  1E7E  00F1               	movwf	CLK_SET_OUTPUT@p
 12458  1E7F                     l2606:
 12459  1E7F  0871               	movf	CLK_SET_OUTPUT@p,w
 12460  1E80  0086               	movwf	6
 12461  1E81  3001               	movlw	1	; select bank2/3
 12462  1E82  0087               	movwf	7
 12463  1E83  0901               	comf	1,w
 12464  1E84  00F0               	movwf	??_CLK_SET_OUTPUT
 12465  1E85  0870               	movf	??_CLK_SET_OUTPUT,w
 12466  1E86  0021               	movlb	1	; select bank1
 12467  1E87  058D               	andwf	13,f	;volatile
 12468  1E88                     l182:
 12469  1E88  0008               	return
 12470  1E89                     __end_of_CLK_SET_OUTPUT:
 12471                           
 12472                           	psect	text53
 12473  1E73                     __ptext53:	
 12474 ;; *************** function _CLK_SET_LOW *****************
 12475 ;; Defined at:
 12476 ;;		line 27 in file "tm1637.c"
 12477 ;; Parameters:    Size  Location     Type
 12478 ;;  p               1    wreg     PTR struct .
 12479 ;;		 -> NULL(0), main@tm1637(2), 
 12480 ;; Auto vars:     Size  Location     Type
 12481 ;;  p               1    1[COMMON] PTR struct .
 12482 ;;		 -> NULL(0), main@tm1637(2), 
 12483 ;; Return value:  Size  Location     Type
 12484 ;;                  1    wreg      void 
 12485 ;; Registers used:
 12486 ;;		wreg, fsr1l, fsr1h, status,2, status,0
 12487 ;; Tracked objects:
 12488 ;;		On entry : 0/0
 12489 ;;		On exit  : 0/0
 12490 ;;		Unchanged: 0/0
 12491 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 12492 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12493 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12494 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12495 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12496 ;;Total ram usage:        2 bytes
 12497 ;; Hardware stack levels used: 1
 12498 ;; This function calls:
 12499 ;;		Nothing
 12500 ;; This function is called by:
 12501 ;;		_start_segment
 12502 ;;		_stop_segment
 12503 ;;		_write_byte
 12504 ;; This function uses a non-reentrant model
 12505 ;;
 12506                           
 12507                           
 12508                           ;psect for function _CLK_SET_LOW
 12509  1E73                     _CLK_SET_LOW:
 12510                           
 12511                           ;incstack = 0
 12512                           ; Regs used in _CLK_SET_LOW: [wreg+fsr1l+fsr1h+status,2+status,0]
 12513                           ;CLK_SET_LOW@p stored from wreg
 12514  1E73  00F1               	movwf	CLK_SET_LOW@p
 12515  1E74                     l2610:
 12516  1E74  0871               	movf	CLK_SET_LOW@p,w
 12517  1E75  0086               	movwf	6
 12518  1E76  3001               	movlw	1	; select bank2/3
 12519  1E77  0087               	movwf	7
 12520  1E78  0901               	comf	1,w
 12521  1E79  00F0               	movwf	??_CLK_SET_LOW
 12522  1E7A  0870               	movf	??_CLK_SET_LOW,w
 12523  1E7B  0022               	movlb	2	; select bank2
 12524  1E7C  058D               	andwf	13,f	;volatile
 12525  1E7D                     l188:
 12526  1E7D  0008               	return
 12527  1E7E                     __end_of_CLK_SET_LOW:
 12528                           
 12529                           	psect	text54
 12530  1E68                     __ptext54:	
 12531 ;; *************** function _CLK_SET_HIGH *****************
 12532 ;; Defined at:
 12533 ;;		line 25 in file "tm1637.c"
 12534 ;; Parameters:    Size  Location     Type
 12535 ;;  p               1    wreg     PTR struct .
 12536 ;;		 -> NULL(0), main@tm1637(2), 
 12537 ;; Auto vars:     Size  Location     Type
 12538 ;;  p               1    1[COMMON] PTR struct .
 12539 ;;		 -> NULL(0), main@tm1637(2), 
 12540 ;; Return value:  Size  Location     Type
 12541 ;;                  1    wreg      void 
 12542 ;; Registers used:
 12543 ;;		wreg, fsr1l, fsr1h, status,2, status,0
 12544 ;; Tracked objects:
 12545 ;;		On entry : 0/0
 12546 ;;		On exit  : 0/0
 12547 ;;		Unchanged: 0/0
 12548 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 12549 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12550 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12551 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12552 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12553 ;;Total ram usage:        2 bytes
 12554 ;; Hardware stack levels used: 1
 12555 ;; This function calls:
 12556 ;;		Nothing
 12557 ;; This function is called by:
 12558 ;;		_start_segment
 12559 ;;		_stop_segment
 12560 ;;		_write_byte
 12561 ;; This function uses a non-reentrant model
 12562 ;;
 12563                           
 12564                           
 12565                           ;psect for function _CLK_SET_HIGH
 12566  1E68                     _CLK_SET_HIGH:
 12567                           
 12568                           ;incstack = 0
 12569                           ; Regs used in _CLK_SET_HIGH: [wreg+fsr1l+fsr1h+status,2+status,0]
 12570                           ;CLK_SET_HIGH@p stored from wreg
 12571  1E68  00F1               	movwf	CLK_SET_HIGH@p
 12572  1E69                     l2608:
 12573  1E69  0871               	movf	CLK_SET_HIGH@p,w
 12574  1E6A  0086               	movwf	6
 12575  1E6B  3001               	movlw	1	; select bank2/3
 12576  1E6C  0087               	movwf	7
 12577  1E6D  0801               	movf	1,w
 12578  1E6E  00F0               	movwf	??_CLK_SET_HIGH
 12579  1E6F  0870               	movf	??_CLK_SET_HIGH,w
 12580  1E70  0022               	movlb	2	; select bank2
 12581  1E71  048D               	iorwf	13,f	;volatile
 12582  1E72                     l185:
 12583  1E72  0008               	return
 12584  1E73                     __end_of_CLK_SET_HIGH:
 12585                           
 12586                           	psect	text55
 12587  1E36                     __ptext55:	
 12588 ;; *************** function _encode_digit *****************
 12589 ;; Defined at:
 12590 ;;		line 183 in file "tm1637.c"
 12591 ;; Parameters:    Size  Location     Type
 12592 ;;  p               1    wreg     PTR struct .
 12593 ;;		 -> NULL(0), main@tm1637(2), 
 12594 ;;  digit           1    9[COMMON] unsigned char 
 12595 ;; Auto vars:     Size  Location     Type
 12596 ;;  p               1   10[COMMON] PTR struct .
 12597 ;;		 -> NULL(0), main@tm1637(2), 
 12598 ;; Return value:  Size  Location     Type
 12599 ;;                  1    wreg      unsigned char 
 12600 ;; Registers used:
 12601 ;;		wreg, fsr1l, fsr1h, status,2, status,0
 12602 ;; Tracked objects:
 12603 ;;		On entry : 0/0
 12604 ;;		On exit  : 0/0
 12605 ;;		Unchanged: 0/0
 12606 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 12607 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12608 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12609 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12610 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12611 ;;Total ram usage:        2 bytes
 12612 ;; Hardware stack levels used: 1
 12613 ;; This function calls:
 12614 ;;		Nothing
 12615 ;; This function is called by:
 12616 ;;		_print_digit
 12617 ;; This function uses a non-reentrant model
 12618 ;;
 12619                           
 12620                           
 12621                           ;psect for function _encode_digit
 12622  1E36                     _encode_digit:
 12623  1E36                     l2974:	
 12624                           ;incstack = 0
 12625                           ; Regs used in _encode_digit: [wreg+fsr1l+fsr1h+status,2+status,0]
 12626                           
 12627                           
 12628                           ;tm1637.c: 184:     return segdata[digit & 0x0f];
 12629  1E36  0879               	movf	encode_digit@digit,w
 12630  1E37  390F               	andlw	15
 12631  1E38  3E2C               	addlw	(low (_segdata| (0+256)))& (0+255)
 12632  1E39  0086               	movwf	6
 12633  1E3A  3001               	movlw	1	; select bank2/3
 12634  1E3B  0087               	movwf	7
 12635  1E3C  0801               	movf	1,w
 12636  1E3D                     l244:
 12637  1E3D  0008               	return
 12638  1E3E                     __end_of_encode_digit:
 12639                           
 12640                           	psect	text56
 12641  1181                     __ptext56:	
 12642 ;; *************** function ___awmod *****************
 12643 ;; Defined at:
 12644 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\awmod.c"
 12645 ;; Parameters:    Size  Location     Type
 12646 ;;  divisor         2    0[COMMON] int 
 12647 ;;  dividend        2    2[COMMON] int 
 12648 ;; Auto vars:     Size  Location     Type
 12649 ;;  sign            1    6[COMMON] unsigned char 
 12650 ;;  counter         1    5[COMMON] unsigned char 
 12651 ;; Return value:  Size  Location     Type
 12652 ;;                  2    0[COMMON] int 
 12653 ;; Registers used:
 12654 ;;		wreg, status,2, status,0
 12655 ;; Tracked objects:
 12656 ;;		On entry : 0/0
 12657 ;;		On exit  : 0/0
 12658 ;;		Unchanged: 0/0
 12659 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 12660 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12661 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12662 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12663 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12664 ;;Total ram usage:        7 bytes
 12665 ;; Hardware stack levels used: 1
 12666 ;; This function calls:
 12667 ;;		Nothing
 12668 ;; This function is called by:
 12669 ;;		_print_digit
 12670 ;; This function uses a non-reentrant model
 12671 ;;
 12672                           
 12673                           
 12674                           ;psect for function ___awmod
 12675  1181                     ___awmod:
 12676  1181                     l3118:	
 12677                           ;incstack = 0
 12678                           ; Regs used in ___awmod: [wreg+status,2+status,0]
 12679                           
 12680  1181  01F6               	clrf	___awmod@sign
 12681  1182                     l3120:
 12682  1182  1FF3               	btfss	___awmod@dividend+1,7
 12683  1183  2985               	goto	u3481
 12684  1184  2986               	goto	u3480
 12685  1185                     u3481:
 12686  1185  298D               	goto	l3126
 12687  1186                     u3480:
 12688  1186                     l3122:
 12689  1186  09F2               	comf	___awmod@dividend,f
 12690  1187  09F3               	comf	___awmod@dividend+1,f
 12691  1188  0AF2               	incf	___awmod@dividend,f
 12692  1189  1903               	skipnz
 12693  118A  0AF3               	incf	___awmod@dividend+1,f
 12694  118B                     l3124:
 12695  118B  01F6               	clrf	___awmod@sign
 12696  118C  0AF6               	incf	___awmod@sign,f
 12697  118D                     l3126:
 12698  118D  1FF1               	btfss	___awmod@divisor+1,7
 12699  118E  2990               	goto	u3491
 12700  118F  2991               	goto	u3490
 12701  1190                     u3491:
 12702  1190  2996               	goto	l3130
 12703  1191                     u3490:
 12704  1191                     l3128:
 12705  1191  09F0               	comf	___awmod@divisor,f
 12706  1192  09F1               	comf	___awmod@divisor+1,f
 12707  1193  0AF0               	incf	___awmod@divisor,f
 12708  1194  1903               	skipnz
 12709  1195  0AF1               	incf	___awmod@divisor+1,f
 12710  1196                     l3130:
 12711  1196  0870               	movf	___awmod@divisor,w
 12712  1197  0471               	iorwf	___awmod@divisor+1,w
 12713  1198  1903               	btfsc	3,2
 12714  1199  299B               	goto	u3501
 12715  119A  299C               	goto	u3500
 12716  119B                     u3501:
 12717  119B  29C5               	goto	l3148
 12718  119C                     u3500:
 12719  119C                     l3132:
 12720  119C  01F5               	clrf	___awmod@counter
 12721  119D  0AF5               	incf	___awmod@counter,f
 12722  119E  29A8               	goto	l3138
 12723  119F                     l3134:
 12724  119F  3001               	movlw	1
 12725  11A0                     u3515:
 12726  11A0  35F0               	lslf	___awmod@divisor,f
 12727  11A1  0DF1               	rlf	___awmod@divisor+1,f
 12728  11A2  0B89               	decfsz	9,f
 12729  11A3  29A0               	goto	u3515
 12730  11A4                     l3136:
 12731  11A4  3001               	movlw	1
 12732  11A5  00F4               	movwf	??___awmod
 12733  11A6  0874               	movf	??___awmod,w
 12734  11A7  07F5               	addwf	___awmod@counter,f
 12735  11A8                     l3138:
 12736  11A8  1FF1               	btfss	___awmod@divisor+1,7
 12737  11A9  29AB               	goto	u3521
 12738  11AA  29AC               	goto	u3520
 12739  11AB                     u3521:
 12740  11AB  299F               	goto	l3134
 12741  11AC                     u3520:
 12742  11AC                     l3140:
 12743  11AC  0871               	movf	___awmod@divisor+1,w
 12744  11AD  0273               	subwf	___awmod@dividend+1,w
 12745  11AE  1D03               	skipz
 12746  11AF  29B2               	goto	u3535
 12747  11B0  0870               	movf	___awmod@divisor,w
 12748  11B1  0272               	subwf	___awmod@dividend,w
 12749  11B2                     u3535:
 12750  11B2  1C03               	skipc
 12751  11B3  29B5               	goto	u3531
 12752  11B4  29B6               	goto	u3530
 12753  11B5                     u3531:
 12754  11B5  29BA               	goto	l3144
 12755  11B6                     u3530:
 12756  11B6                     l3142:
 12757  11B6  0870               	movf	___awmod@divisor,w
 12758  11B7  02F2               	subwf	___awmod@dividend,f
 12759  11B8  0871               	movf	___awmod@divisor+1,w
 12760  11B9  3BF3               	subwfb	___awmod@dividend+1,f
 12761  11BA                     l3144:
 12762  11BA  3001               	movlw	1
 12763  11BB                     u3545:
 12764  11BB  36F1               	lsrf	___awmod@divisor+1,f
 12765  11BC  0CF0               	rrf	___awmod@divisor,f
 12766  11BD  0B89               	decfsz	9,f
 12767  11BE  29BB               	goto	u3545
 12768  11BF                     l3146:
 12769  11BF  3001               	movlw	1
 12770  11C0  02F5               	subwf	___awmod@counter,f
 12771  11C1  1D03               	btfss	3,2
 12772  11C2  29C4               	goto	u3551
 12773  11C3  29C5               	goto	u3550
 12774  11C4                     u3551:
 12775  11C4  29AC               	goto	l3140
 12776  11C5                     u3550:
 12777  11C5                     l3148:
 12778  11C5  0876               	movf	___awmod@sign,w
 12779  11C6  1903               	btfsc	3,2
 12780  11C7  29C9               	goto	u3561
 12781  11C8  29CA               	goto	u3560
 12782  11C9                     u3561:
 12783  11C9  29CF               	goto	l3152
 12784  11CA                     u3560:
 12785  11CA                     l3150:
 12786  11CA  09F2               	comf	___awmod@dividend,f
 12787  11CB  09F3               	comf	___awmod@dividend+1,f
 12788  11CC  0AF2               	incf	___awmod@dividend,f
 12789  11CD  1903               	skipnz
 12790  11CE  0AF3               	incf	___awmod@dividend+1,f
 12791  11CF                     l3152:
 12792  11CF  0873               	movf	___awmod@dividend+1,w
 12793  11D0  00F1               	movwf	?___awmod+1
 12794  11D1  0872               	movf	___awmod@dividend,w
 12795  11D2  00F0               	movwf	?___awmod
 12796  11D3                     l700:
 12797  11D3  0008               	return
 12798  11D4                     __end_of___awmod:
 12799                           
 12800                           	psect	text57
 12801  13ED                     __ptext57:	
 12802 ;; *************** function ___awdiv *****************
 12803 ;; Defined at:
 12804 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\awdiv.c"
 12805 ;; Parameters:    Size  Location     Type
 12806 ;;  divisor         2    0[COMMON] int 
 12807 ;;  dividend        2    2[COMMON] int 
 12808 ;; Auto vars:     Size  Location     Type
 12809 ;;  quotient        2    7[COMMON] int 
 12810 ;;  sign            1    6[COMMON] unsigned char 
 12811 ;;  counter         1    5[COMMON] unsigned char 
 12812 ;; Return value:  Size  Location     Type
 12813 ;;                  2    0[COMMON] int 
 12814 ;; Registers used:
 12815 ;;		wreg, status,2, status,0
 12816 ;; Tracked objects:
 12817 ;;		On entry : 0/0
 12818 ;;		On exit  : 0/0
 12819 ;;		Unchanged: 0/0
 12820 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 12821 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12822 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12823 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12824 ;;      Totals:         9       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12825 ;;Total ram usage:        9 bytes
 12826 ;; Hardware stack levels used: 1
 12827 ;; This function calls:
 12828 ;;		Nothing
 12829 ;; This function is called by:
 12830 ;;		_print_digit
 12831 ;; This function uses a non-reentrant model
 12832 ;;
 12833                           
 12834                           
 12835                           ;psect for function ___awdiv
 12836  13ED                     ___awdiv:
 12837  13ED                     l3074:	
 12838                           ;incstack = 0
 12839                           ; Regs used in ___awdiv: [wreg+status,2+status,0]
 12840                           
 12841  13ED  01F6               	clrf	___awdiv@sign
 12842  13EE                     l3076:
 12843  13EE  1FF1               	btfss	___awdiv@divisor+1,7
 12844  13EF  2BF1               	goto	u3381
 12845  13F0  2BF2               	goto	u3380
 12846  13F1                     u3381:
 12847  13F1  2BF9               	goto	l3082
 12848  13F2                     u3380:
 12849  13F2                     l3078:
 12850  13F2  09F0               	comf	___awdiv@divisor,f
 12851  13F3  09F1               	comf	___awdiv@divisor+1,f
 12852  13F4  0AF0               	incf	___awdiv@divisor,f
 12853  13F5  1903               	skipnz
 12854  13F6  0AF1               	incf	___awdiv@divisor+1,f
 12855  13F7                     l3080:
 12856  13F7  01F6               	clrf	___awdiv@sign
 12857  13F8  0AF6               	incf	___awdiv@sign,f
 12858  13F9                     l3082:
 12859  13F9  1FF3               	btfss	___awdiv@dividend+1,7
 12860  13FA  2BFC               	goto	u3391
 12861  13FB  2BFD               	goto	u3390
 12862  13FC                     u3391:
 12863  13FC  2C06               	goto	l3088
 12864  13FD                     u3390:
 12865  13FD                     l3084:
 12866  13FD  09F2               	comf	___awdiv@dividend,f
 12867  13FE  09F3               	comf	___awdiv@dividend+1,f
 12868  13FF  0AF2               	incf	___awdiv@dividend,f
 12869  1400  1903               	skipnz
 12870  1401  0AF3               	incf	___awdiv@dividend+1,f
 12871  1402                     l3086:
 12872  1402  3001               	movlw	1
 12873  1403  00F4               	movwf	??___awdiv
 12874  1404  0874               	movf	??___awdiv,w
 12875  1405  06F6               	xorwf	___awdiv@sign,f
 12876  1406                     l3088:
 12877  1406  01F7               	clrf	___awdiv@quotient
 12878  1407  01F8               	clrf	___awdiv@quotient+1
 12879  1408                     l3090:
 12880  1408  0870               	movf	___awdiv@divisor,w
 12881  1409  0471               	iorwf	___awdiv@divisor+1,w
 12882  140A  1903               	btfsc	3,2
 12883  140B  2C0D               	goto	u3401
 12884  140C  2C0E               	goto	u3400
 12885  140D                     u3401:
 12886  140D  2C3D               	goto	l3110
 12887  140E                     u3400:
 12888  140E                     l3092:
 12889  140E  01F5               	clrf	___awdiv@counter
 12890  140F  0AF5               	incf	___awdiv@counter,f
 12891  1410  2C1A               	goto	l3098
 12892  1411                     l3094:
 12893  1411  3001               	movlw	1
 12894  1412                     u3415:
 12895  1412  35F0               	lslf	___awdiv@divisor,f
 12896  1413  0DF1               	rlf	___awdiv@divisor+1,f
 12897  1414  0B89               	decfsz	9,f
 12898  1415  2C12               	goto	u3415
 12899  1416                     l3096:
 12900  1416  3001               	movlw	1
 12901  1417  00F4               	movwf	??___awdiv
 12902  1418  0874               	movf	??___awdiv,w
 12903  1419  07F5               	addwf	___awdiv@counter,f
 12904  141A                     l3098:
 12905  141A  1FF1               	btfss	___awdiv@divisor+1,7
 12906  141B  2C1D               	goto	u3421
 12907  141C  2C1E               	goto	u3420
 12908  141D                     u3421:
 12909  141D  2C11               	goto	l3094
 12910  141E                     u3420:
 12911  141E                     l3100:
 12912  141E  3001               	movlw	1
 12913  141F                     u3435:
 12914  141F  35F7               	lslf	___awdiv@quotient,f
 12915  1420  0DF8               	rlf	___awdiv@quotient+1,f
 12916  1421  0B89               	decfsz	9,f
 12917  1422  2C1F               	goto	u3435
 12918  1423  0871               	movf	___awdiv@divisor+1,w
 12919  1424  0273               	subwf	___awdiv@dividend+1,w
 12920  1425  1D03               	skipz
 12921  1426  2C29               	goto	u3445
 12922  1427  0870               	movf	___awdiv@divisor,w
 12923  1428  0272               	subwf	___awdiv@dividend,w
 12924  1429                     u3445:
 12925  1429  1C03               	skipc
 12926  142A  2C2C               	goto	u3441
 12927  142B  2C2D               	goto	u3440
 12928  142C                     u3441:
 12929  142C  2C32               	goto	l3106
 12930  142D                     u3440:
 12931  142D                     l3102:
 12932  142D  0870               	movf	___awdiv@divisor,w
 12933  142E  02F2               	subwf	___awdiv@dividend,f
 12934  142F  0871               	movf	___awdiv@divisor+1,w
 12935  1430  3BF3               	subwfb	___awdiv@dividend+1,f
 12936  1431                     l3104:
 12937  1431  1477               	bsf	___awdiv@quotient,0
 12938  1432                     l3106:
 12939  1432  3001               	movlw	1
 12940  1433                     u3455:
 12941  1433  36F1               	lsrf	___awdiv@divisor+1,f
 12942  1434  0CF0               	rrf	___awdiv@divisor,f
 12943  1435  0B89               	decfsz	9,f
 12944  1436  2C33               	goto	u3455
 12945  1437                     l3108:
 12946  1437  3001               	movlw	1
 12947  1438  02F5               	subwf	___awdiv@counter,f
 12948  1439  1D03               	btfss	3,2
 12949  143A  2C3C               	goto	u3461
 12950  143B  2C3D               	goto	u3460
 12951  143C                     u3461:
 12952  143C  2C1E               	goto	l3100
 12953  143D                     u3460:
 12954  143D                     l3110:
 12955  143D  0876               	movf	___awdiv@sign,w
 12956  143E  1903               	btfsc	3,2
 12957  143F  2C41               	goto	u3471
 12958  1440  2C42               	goto	u3470
 12959  1441                     u3471:
 12960  1441  2C47               	goto	l3114
 12961  1442                     u3470:
 12962  1442                     l3112:
 12963  1442  09F7               	comf	___awdiv@quotient,f
 12964  1443  09F8               	comf	___awdiv@quotient+1,f
 12965  1444  0AF7               	incf	___awdiv@quotient,f
 12966  1445  1903               	skipnz
 12967  1446  0AF8               	incf	___awdiv@quotient+1,f
 12968  1447                     l3114:
 12969  1447  0878               	movf	___awdiv@quotient+1,w
 12970  1448  00F1               	movwf	?___awdiv+1
 12971  1449  0877               	movf	___awdiv@quotient,w
 12972  144A  00F0               	movwf	?___awdiv
 12973  144B                     l687:
 12974  144B  0008               	return
 12975  144C                     __end_of___awdiv:
 12976                           
 12977                           	psect	text58
 12978  0C45                     __ptext58:	
 12979 ;; *************** function _get_scale_val *****************
 12980 ;; Defined at:
 12981 ;;		line 34 in file "loadcell.c"
 12982 ;; Parameters:    Size  Location     Type
 12983 ;;  p               1    wreg     PTR struct .
 12984 ;;		 -> NULL(0), main@loadcell(12), 
 12985 ;;  scale_avg_co    1    0[BANK0 ] unsigned char 
 12986 ;; Auto vars:     Size  Location     Type
 12987 ;;  p               1   18[BANK0 ] PTR struct .
 12988 ;;		 -> NULL(0), main@loadcell(12), 
 12989 ;;  i               1   17[BANK0 ] unsigned char 
 12990 ;;  j               1   12[BANK0 ] unsigned char 
 12991 ;;  weight_count    4   13[BANK0 ] unsigned long 
 12992 ;;  weight_add      4    8[BANK0 ] unsigned long 
 12993 ;; Return value:  Size  Location     Type
 12994 ;;                  4    0[BANK0 ] unsigned long 
 12995 ;; Registers used:
 12996 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 12997 ;; Tracked objects:
 12998 ;;		On entry : 0/0
 12999 ;;		On exit  : 0/0
 13000 ;;		Unchanged: 0/0
 13001 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 13002 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13003 ;;      Locals:         0      11       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13004 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13005 ;;      Totals:         0      19       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13006 ;;Total ram usage:       19 bytes
 13007 ;; Hardware stack levels used: 1
 13008 ;; Hardware stack levels required when called: 1
 13009 ;; This function calls:
 13010 ;;		___lldiv
 13011 ;;		_get_CELL_DAT_VAL
 13012 ;;		_set_CELL_CLK_HIGH
 13013 ;;		_set_CELL_CLK_LOW
 13014 ;; This function is called by:
 13015 ;;		_initialize
 13016 ;;		_calc_percentage
 13017 ;; This function uses a non-reentrant model
 13018 ;;
 13019                           
 13020                           
 13021                           ;psect for function _get_scale_val
 13022  0C45                     _get_scale_val:
 13023                           
 13024                           ;incstack = 0
 13025                           ; Regs used in _get_scale_val: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
 13026                           ;get_scale_val@p stored from wreg
 13027  0C45  0020               	movlb	0	; select bank0
 13028  0C46  00B2               	movwf	get_scale_val@p
 13029  0C47                     l3490:
 13030                           
 13031                           ;loadcell.c: 35:     set_CELL_CLK_LOW(p);
 13032  0C47  0832               	movf	get_scale_val@p,w
 13033  0C48  319E  265D  318C   	fcall	_set_CELL_CLK_LOW
 13034  0C4B                     l3492:
 13035                           
 13036                           ;loadcell.c: 36:     unsigned long weight_count = 0;
 13037  0C4B  3000               	movlw	0
 13038  0C4C  0020               	movlb	0	; select bank0
 13039  0C4D  00B0               	movwf	get_scale_val@weight_count+3
 13040  0C4E  3000               	movlw	0
 13041  0C4F  00AF               	movwf	get_scale_val@weight_count+2
 13042  0C50  3000               	movlw	0
 13043  0C51  00AE               	movwf	get_scale_val@weight_count+1
 13044  0C52  3000               	movlw	0
 13045  0C53  00AD               	movwf	get_scale_val@weight_count
 13046  0C54                     l3494:
 13047                           
 13048                           ;loadcell.c: 37:     unsigned long weight_add = 0;
 13049  0C54  3000               	movlw	0
 13050  0C55  00AB               	movwf	get_scale_val@weight_add+3
 13051  0C56  3000               	movlw	0
 13052  0C57  00AA               	movwf	get_scale_val@weight_add+2
 13053  0C58  3000               	movlw	0
 13054  0C59  00A9               	movwf	get_scale_val@weight_add+1
 13055  0C5A  3000               	movlw	0
 13056  0C5B  00A8               	movwf	get_scale_val@weight_add
 13057  0C5C                     l3496:
 13058                           
 13059                           ;loadcell.c: 38:     for (uint8_t j = 0; j < scale_avg_count; j++)
 13060  0C5C  01AC               	clrf	get_scale_val@j
 13061  0C5D  2CE4               	goto	l3546
 13062  0C5E                     l3498:
 13063  0C5E  0020               	movlb	0	; select bank0
 13064  0C5F  0832               	movf	get_scale_val@p,w
 13065  0C60  3188  208C  318C   	fcall	_get_CELL_DAT_VAL
 13066  0C63  0870               	movf	?_get_CELL_DAT_VAL,w
 13067  0C64  0471               	iorwf	?_get_CELL_DAT_VAL+1,w
 13068  0C65  1903               	btfsc	3,2
 13069  0C66  2C68               	goto	u4221
 13070  0C67  2C69               	goto	u4220
 13071  0C68                     u4221:
 13072  0C68  2C5E               	goto	l3498
 13073  0C69                     u4220:
 13074  0C69                     l3500:
 13075  0C69  0020               	movlb	0	; select bank0
 13076  0C6A  0832               	movf	get_scale_val@p,w
 13077  0C6B  3188  208C  318C   	fcall	_get_CELL_DAT_VAL
 13078  0C6E  0370               	decf	?_get_CELL_DAT_VAL,w
 13079  0C6F  0471               	iorwf	?_get_CELL_DAT_VAL+1,w
 13080  0C70  1903               	btfsc	3,2
 13081  0C71  2C73               	goto	u4231
 13082  0C72  2C74               	goto	u4230
 13083  0C73                     u4231:
 13084  0C73  2C69               	goto	l3500
 13085  0C74                     u4230:
 13086  0C74                     l3502:
 13087                           
 13088                           ;loadcell.c: 42:         _delay((unsigned long)((10)*(8000000/4000000.0)));
 13089  0C74  3006               	movlw	6
 13090  0C75                     u4877:
 13091  0C75  0B89               	decfsz	9,f
 13092  0C76  2C75               	goto	u4877
 13093  0C77  3200               	nop2
 13094  0C78                     l3504:
 13095                           
 13096                           ;loadcell.c: 44:         uint8_t i;;loadcell.c: 45:         for (i = 0; i < 24; i++){
 13097  0C78  0020               	movlb	0	; select bank0
 13098  0C79  01B1               	clrf	get_scale_val@i
 13099  0C7A                     l3510:
 13100                           
 13101                           ;loadcell.c: 46:             weight_count <<= 1;
 13102  0C7A  3001               	movlw	1
 13103  0C7B                     u4245:
 13104  0C7B  35AD               	lslf	get_scale_val@weight_count,f
 13105  0C7C  0DAE               	rlf	get_scale_val@weight_count+1,f
 13106  0C7D  0DAF               	rlf	get_scale_val@weight_count+2,f
 13107  0C7E  0DB0               	rlf	get_scale_val@weight_count+3,f
 13108  0C7F  0B89               	decfsz	9,f
 13109  0C80  2C7B               	goto	u4245
 13110  0C81                     l3512:
 13111                           
 13112                           ;loadcell.c: 47:             set_CELL_CLK_HIGH(p);
 13113  0C81  0832               	movf	get_scale_val@p,w
 13114  0C82  319E  2652  318C   	fcall	_set_CELL_CLK_HIGH
 13115  0C85                     l3514:
 13116                           
 13117                           ;loadcell.c: 48:             _delay((unsigned long)((10)*(8000000/4000000.0)));
 13118  0C85  3006               	movlw	6
 13119  0C86                     u4887:
 13120  0C86  0B89               	decfsz	9,f
 13121  0C87  2C86               	goto	u4887
 13122  0C88  3200               	nop2
 13123  0C89                     l3516:
 13124                           
 13125                           ;loadcell.c: 49:             set_CELL_CLK_LOW(p);
 13126  0C89  0020               	movlb	0	; select bank0
 13127  0C8A  0832               	movf	get_scale_val@p,w
 13128  0C8B  319E  265D  318C   	fcall	_set_CELL_CLK_LOW
 13129  0C8E                     l3518:
 13130                           
 13131                           ;loadcell.c: 50:             weight_count += get_CELL_DAT_VAL(p);
 13132  0C8E  0020               	movlb	0	; select bank0
 13133  0C8F  0832               	movf	get_scale_val@p,w
 13134  0C90  3188  208C  318C   	fcall	_get_CELL_DAT_VAL
 13135  0C93  0870               	movf	?_get_CELL_DAT_VAL,w
 13136  0C94  0020               	movlb	0	; select bank0
 13137  0C95  00A4               	movwf	??_get_scale_val
 13138  0C96  0871               	movf	?_get_CELL_DAT_VAL+1,w
 13139  0C97  00A5               	movwf	??_get_scale_val+1
 13140  0C98  3000               	movlw	0
 13141  0C99  1BA5               	btfsc	??_get_scale_val+1,7
 13142  0C9A  30FF               	movlw	255
 13143  0C9B  00A6               	movwf	??_get_scale_val+2
 13144  0C9C  00A7               	movwf	??_get_scale_val+3
 13145  0C9D  0824               	movf	??_get_scale_val,w
 13146  0C9E  07AD               	addwf	get_scale_val@weight_count,f
 13147  0C9F  0825               	movf	??_get_scale_val+1,w
 13148  0CA0  3DAE               	addwfc	get_scale_val@weight_count+1,f
 13149  0CA1  0826               	movf	??_get_scale_val+2,w
 13150  0CA2  3DAF               	addwfc	get_scale_val@weight_count+2,f
 13151  0CA3  0827               	movf	??_get_scale_val+3,w
 13152  0CA4  3DB0               	addwfc	get_scale_val@weight_count+3,f
 13153  0CA5                     l3520:
 13154                           
 13155                           ;loadcell.c: 51:             _delay((unsigned long)((10)*(8000000/4000000.0)));
 13156  0CA5  3006               	movlw	6
 13157  0CA6                     u4897:
 13158  0CA6  0B89               	decfsz	9,f
 13159  0CA7  2CA6               	goto	u4897
 13160  0CA8  3200               	nop2
 13161  0CA9                     l3522:
 13162                           
 13163                           ;loadcell.c: 52:         }
 13164  0CA9  3001               	movlw	1
 13165  0CAA  0020               	movlb	0	; select bank0
 13166  0CAB  00A4               	movwf	??_get_scale_val
 13167  0CAC  0824               	movf	??_get_scale_val,w
 13168  0CAD  07B1               	addwf	get_scale_val@i,f
 13169  0CAE                     l3524:
 13170  0CAE  3018               	movlw	24
 13171  0CAF  0231               	subwf	get_scale_val@i,w
 13172  0CB0  1C03               	skipc
 13173  0CB1  2CB3               	goto	u4251
 13174  0CB2  2CB4               	goto	u4250
 13175  0CB3                     u4251:
 13176  0CB3  2C7A               	goto	l3510
 13177  0CB4                     u4250:
 13178  0CB4                     l3526:
 13179                           
 13180                           ;loadcell.c: 54:         for (i = 0; i < 1; i++){
 13181  0CB4  01B1               	clrf	get_scale_val@i
 13182  0CB5                     l3532:
 13183                           
 13184                           ;loadcell.c: 55:             set_CELL_CLK_HIGH(p);
 13185  0CB5  0832               	movf	get_scale_val@p,w
 13186  0CB6  319E  2652  318C   	fcall	_set_CELL_CLK_HIGH
 13187  0CB9                     l3534:
 13188                           
 13189                           ;loadcell.c: 56:             _delay((unsigned long)((10)*(8000000/4000000.0)));
 13190  0CB9  3006               	movlw	6
 13191  0CBA                     u4907:
 13192  0CBA  0B89               	decfsz	9,f
 13193  0CBB  2CBA               	goto	u4907
 13194  0CBC  3200               	nop2
 13195  0CBD                     l3536:
 13196                           
 13197                           ;loadcell.c: 57:             set_CELL_CLK_LOW(p);
 13198  0CBD  0020               	movlb	0	; select bank0
 13199  0CBE  0832               	movf	get_scale_val@p,w
 13200  0CBF  319E  265D  318C   	fcall	_set_CELL_CLK_LOW
 13201                           
 13202                           ;loadcell.c: 58:             _delay((unsigned long)((10)*(8000000/4000000.0)));
 13203  0CC2  3006               	movlw	6
 13204  0CC3                     u4917:
 13205  0CC3  0B89               	decfsz	9,f
 13206  0CC4  2CC3               	goto	u4917
 13207  0CC5  3200               	nop2
 13208  0CC6                     l3538:
 13209                           
 13210                           ;loadcell.c: 59:         };
 13211  0CC6  3001               	movlw	1
 13212  0CC7  0020               	movlb	0	; select bank0
 13213  0CC8  00A4               	movwf	??_get_scale_val
 13214  0CC9  0824               	movf	??_get_scale_val,w
 13215  0CCA  07B1               	addwf	get_scale_val@i,f
 13216  0CCB                     l3540:
 13217  0CCB  0831               	movf	get_scale_val@i,w
 13218  0CCC  1903               	btfsc	3,2
 13219  0CCD  2CCF               	goto	u4261
 13220  0CCE  2CD0               	goto	u4260
 13221  0CCF                     u4261:
 13222  0CCF  2CB5               	goto	l3532
 13223  0CD0                     u4260:
 13224  0CD0                     l3542:
 13225                           
 13226                           ;loadcell.c: 60:         weight_add += weight_count;
 13227  0CD0  082D               	movf	get_scale_val@weight_count,w
 13228  0CD1  07A8               	addwf	get_scale_val@weight_add,f
 13229  0CD2  082E               	movf	get_scale_val@weight_count+1,w
 13230  0CD3  3DA9               	addwfc	get_scale_val@weight_add+1,f
 13231  0CD4  082F               	movf	get_scale_val@weight_count+2,w
 13232  0CD5  3DAA               	addwfc	get_scale_val@weight_add+2,f
 13233  0CD6  0830               	movf	get_scale_val@weight_count+3,w
 13234  0CD7  3DAB               	addwfc	get_scale_val@weight_add+3,f
 13235                           
 13236                           ;loadcell.c: 61:         weight_count = 0;
 13237  0CD8  3000               	movlw	0
 13238  0CD9  00B0               	movwf	get_scale_val@weight_count+3
 13239  0CDA  3000               	movlw	0
 13240  0CDB  00AF               	movwf	get_scale_val@weight_count+2
 13241  0CDC  3000               	movlw	0
 13242  0CDD  00AE               	movwf	get_scale_val@weight_count+1
 13243  0CDE  3000               	movlw	0
 13244  0CDF  00AD               	movwf	get_scale_val@weight_count
 13245  0CE0                     l3544:
 13246                           
 13247                           ;loadcell.c: 62:     }
 13248  0CE0  3001               	movlw	1
 13249  0CE1  00A4               	movwf	??_get_scale_val
 13250  0CE2  0824               	movf	??_get_scale_val,w
 13251  0CE3  07AC               	addwf	get_scale_val@j,f
 13252  0CE4                     l3546:
 13253  0CE4  0820               	movf	get_scale_val@scale_avg_count,w
 13254  0CE5  022C               	subwf	get_scale_val@j,w
 13255  0CE6  1C03               	skipc
 13256  0CE7  2CE9               	goto	u4271
 13257  0CE8  2CEA               	goto	u4270
 13258  0CE9                     u4271:
 13259  0CE9  2C5E               	goto	l3498
 13260  0CEA                     u4270:
 13261  0CEA                     l3548:
 13262                           
 13263                           ;loadcell.c: 63:     weight_count = weight_add / scale_avg_count;
 13264  0CEA  0820               	movf	get_scale_val@scale_avg_count,w
 13265  0CEB  00A4               	movwf	??_get_scale_val
 13266  0CEC  01A5               	clrf	??_get_scale_val+1
 13267  0CED  01A6               	clrf	??_get_scale_val+2
 13268  0CEE  01A7               	clrf	??_get_scale_val+3
 13269  0CEF  0827               	movf	??_get_scale_val+3,w
 13270  0CF0  00F3               	movwf	___lldiv@divisor+3
 13271  0CF1  0826               	movf	??_get_scale_val+2,w
 13272  0CF2  00F2               	movwf	___lldiv@divisor+2
 13273  0CF3  0825               	movf	??_get_scale_val+1,w
 13274  0CF4  00F1               	movwf	___lldiv@divisor+1
 13275  0CF5  0824               	movf	??_get_scale_val,w
 13276  0CF6  00F0               	movwf	___lldiv@divisor
 13277  0CF7  082B               	movf	get_scale_val@weight_add+3,w
 13278  0CF8  00F7               	movwf	___lldiv@dividend+3
 13279  0CF9  082A               	movf	get_scale_val@weight_add+2,w
 13280  0CFA  00F6               	movwf	___lldiv@dividend+2
 13281  0CFB  0829               	movf	get_scale_val@weight_add+1,w
 13282  0CFC  00F5               	movwf	___lldiv@dividend+1
 13283  0CFD  0828               	movf	get_scale_val@weight_add,w
 13284  0CFE  00F4               	movwf	___lldiv@dividend
 13285  0CFF  3192  22DC  318C   	fcall	___lldiv
 13286  0D02  0873               	movf	?___lldiv+3,w
 13287  0D03  0020               	movlb	0	; select bank0
 13288  0D04  00B0               	movwf	get_scale_val@weight_count+3
 13289  0D05  0872               	movf	?___lldiv+2,w
 13290  0D06  00AF               	movwf	get_scale_val@weight_count+2
 13291  0D07  0871               	movf	?___lldiv+1,w
 13292  0D08  00AE               	movwf	get_scale_val@weight_count+1
 13293  0D09  0870               	movf	?___lldiv,w
 13294  0D0A  00AD               	movwf	get_scale_val@weight_count
 13295  0D0B                     l3550:
 13296                           
 13297                           ;loadcell.c: 66:     weight_count = weight_count ^ 0x800000;
 13298  0D0B  3000               	movlw	0
 13299  0D0C  062D               	xorwf	get_scale_val@weight_count,w
 13300  0D0D  00A4               	movwf	??_get_scale_val
 13301  0D0E  3000               	movlw	0
 13302  0D0F  062E               	xorwf	get_scale_val@weight_count+1,w
 13303  0D10  00A5               	movwf	??_get_scale_val+1
 13304  0D11  3080               	movlw	128
 13305  0D12  062F               	xorwf	get_scale_val@weight_count+2,w
 13306  0D13  00A6               	movwf	??_get_scale_val+2
 13307  0D14  3000               	movlw	0
 13308  0D15  0630               	xorwf	get_scale_val@weight_count+3,w
 13309  0D16  00A7               	movwf	??_get_scale_val+3
 13310  0D17  0827               	movf	??_get_scale_val+3,w
 13311  0D18  00B0               	movwf	get_scale_val@weight_count+3
 13312  0D19  0826               	movf	??_get_scale_val+2,w
 13313  0D1A  00AF               	movwf	get_scale_val@weight_count+2
 13314  0D1B  0825               	movf	??_get_scale_val+1,w
 13315  0D1C  00AE               	movwf	get_scale_val@weight_count+1
 13316  0D1D  0824               	movf	??_get_scale_val,w
 13317  0D1E  00AD               	movwf	get_scale_val@weight_count
 13318  0D1F                     l3552:
 13319                           
 13320                           ;loadcell.c: 67:     return weight_count;
 13321  0D1F  0830               	movf	get_scale_val@weight_count+3,w
 13322  0D20  00A3               	movwf	?_get_scale_val+3
 13323  0D21  082F               	movf	get_scale_val@weight_count+2,w
 13324  0D22  00A2               	movwf	?_get_scale_val+2
 13325  0D23  082E               	movf	get_scale_val@weight_count+1,w
 13326  0D24  00A1               	movwf	?_get_scale_val+1
 13327  0D25  082D               	movf	get_scale_val@weight_count,w
 13328  0D26  00A0               	movwf	?_get_scale_val
 13329  0D27                     l291:
 13330  0D27  0008               	return
 13331  0D28                     __end_of_get_scale_val:
 13332                           
 13333                           	psect	text59
 13334  1E5D                     __ptext59:	
 13335 ;; *************** function _set_CELL_CLK_LOW *****************
 13336 ;; Defined at:
 13337 ;;		line 7 in file "loadcell.c"
 13338 ;; Parameters:    Size  Location     Type
 13339 ;;  p               1    wreg     PTR struct .
 13340 ;;		 -> NULL(0), main@loadcell(12), 
 13341 ;; Auto vars:     Size  Location     Type
 13342 ;;  p               1    1[COMMON] PTR struct .
 13343 ;;		 -> NULL(0), main@loadcell(12), 
 13344 ;; Return value:  Size  Location     Type
 13345 ;;                  1    wreg      void 
 13346 ;; Registers used:
 13347 ;;		wreg, fsr1l, fsr1h, status,2, status,0
 13348 ;; Tracked objects:
 13349 ;;		On entry : 0/0
 13350 ;;		On exit  : 0/0
 13351 ;;		Unchanged: 0/0
 13352 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 13353 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13354 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13355 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13356 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13357 ;;Total ram usage:        2 bytes
 13358 ;; Hardware stack levels used: 1
 13359 ;; This function calls:
 13360 ;;		Nothing
 13361 ;; This function is called by:
 13362 ;;		_get_scale_val
 13363 ;; This function uses a non-reentrant model
 13364 ;;
 13365                           
 13366                           
 13367                           ;psect for function _set_CELL_CLK_LOW
 13368  1E5D                     _set_CELL_CLK_LOW:
 13369                           
 13370                           ;incstack = 0
 13371                           ; Regs used in _set_CELL_CLK_LOW: [wreg+fsr1l+fsr1h+status,2+status,0]
 13372                           ;set_CELL_CLK_LOW@p stored from wreg
 13373  1E5D  00F1               	movwf	set_CELL_CLK_LOW@p
 13374  1E5E                     l2978:
 13375  1E5E  0871               	movf	set_CELL_CLK_LOW@p,w
 13376  1E5F  0086               	movwf	6
 13377  1E60  3001               	movlw	1	; select bank2/3
 13378  1E61  0087               	movwf	7
 13379  1E62  0901               	comf	1,w
 13380  1E63  00F0               	movwf	??_set_CELL_CLK_LOW
 13381  1E64  0870               	movf	??_set_CELL_CLK_LOW,w
 13382  1E65  0022               	movlb	2	; select bank2
 13383  1E66  058D               	andwf	13,f	;volatile
 13384  1E67                     l261:
 13385  1E67  0008               	return
 13386  1E68                     __end_of_set_CELL_CLK_LOW:
 13387                           
 13388                           	psect	text60
 13389  1E52                     __ptext60:	
 13390 ;; *************** function _set_CELL_CLK_HIGH *****************
 13391 ;; Defined at:
 13392 ;;		line 12 in file "loadcell.c"
 13393 ;; Parameters:    Size  Location     Type
 13394 ;;  p               1    wreg     PTR struct .
 13395 ;;		 -> NULL(0), main@loadcell(12), 
 13396 ;; Auto vars:     Size  Location     Type
 13397 ;;  p               1    1[COMMON] PTR struct .
 13398 ;;		 -> NULL(0), main@loadcell(12), 
 13399 ;; Return value:  Size  Location     Type
 13400 ;;                  1    wreg      void 
 13401 ;; Registers used:
 13402 ;;		wreg, fsr1l, fsr1h, status,2, status,0
 13403 ;; Tracked objects:
 13404 ;;		On entry : 0/0
 13405 ;;		On exit  : 0/0
 13406 ;;		Unchanged: 0/0
 13407 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 13408 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13409 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13410 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13411 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13412 ;;Total ram usage:        2 bytes
 13413 ;; Hardware stack levels used: 1
 13414 ;; This function calls:
 13415 ;;		Nothing
 13416 ;; This function is called by:
 13417 ;;		_get_scale_val
 13418 ;; This function uses a non-reentrant model
 13419 ;;
 13420                           
 13421                           
 13422                           ;psect for function _set_CELL_CLK_HIGH
 13423  1E52                     _set_CELL_CLK_HIGH:
 13424                           
 13425                           ;incstack = 0
 13426                           ; Regs used in _set_CELL_CLK_HIGH: [wreg+fsr1l+fsr1h+status,2+status,0]
 13427                           ;set_CELL_CLK_HIGH@p stored from wreg
 13428  1E52  00F1               	movwf	set_CELL_CLK_HIGH@p
 13429  1E53                     l2980:
 13430  1E53  0871               	movf	set_CELL_CLK_HIGH@p,w
 13431  1E54  0086               	movwf	6
 13432  1E55  3001               	movlw	1	; select bank2/3
 13433  1E56  0087               	movwf	7
 13434  1E57  0801               	movf	1,w
 13435  1E58  00F0               	movwf	??_set_CELL_CLK_HIGH
 13436  1E59  0870               	movf	??_set_CELL_CLK_HIGH,w
 13437  1E5A  0022               	movlb	2	; select bank2
 13438  1E5B  048D               	iorwf	13,f	;volatile
 13439  1E5C                     l264:
 13440  1E5C  0008               	return
 13441  1E5D                     __end_of_set_CELL_CLK_HIGH:
 13442                           
 13443                           	psect	text61
 13444  088C                     __ptext61:	
 13445 ;; *************** function _get_CELL_DAT_VAL *****************
 13446 ;; Defined at:
 13447 ;;		line 15 in file "loadcell.c"
 13448 ;; Parameters:    Size  Location     Type
 13449 ;;  p               1    wreg     PTR struct .
 13450 ;;		 -> NULL(0), main@loadcell(12), 
 13451 ;; Auto vars:     Size  Location     Type
 13452 ;;  p               1    5[COMMON] PTR struct .
 13453 ;;		 -> NULL(0), main@loadcell(12), 
 13454 ;; Return value:  Size  Location     Type
 13455 ;;                  2    0[COMMON] int 
 13456 ;; Registers used:
 13457 ;;		wreg, fsr1l, fsr1h, status,2, status,0
 13458 ;; Tracked objects:
 13459 ;;		On entry : 0/0
 13460 ;;		On exit  : 0/0
 13461 ;;		Unchanged: 0/0
 13462 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 13463 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13464 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13465 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13466 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13467 ;;Total ram usage:        6 bytes
 13468 ;; Hardware stack levels used: 1
 13469 ;; This function calls:
 13470 ;;		Nothing
 13471 ;; This function is called by:
 13472 ;;		_get_scale_val
 13473 ;; This function uses a non-reentrant model
 13474 ;;
 13475                           
 13476                           
 13477                           ;psect for function _get_CELL_DAT_VAL
 13478  088C                     _get_CELL_DAT_VAL:
 13479                           
 13480                           ;incstack = 0
 13481                           ; Regs used in _get_CELL_DAT_VAL: [wreg+fsr1l+fsr1h+status,2+status,0]
 13482                           ;get_CELL_DAT_VAL@p stored from wreg
 13483  088C  00F5               	movwf	get_CELL_DAT_VAL@p
 13484  088D                     l2982:
 13485                           
 13486                           ;loadcell.c: 16:     if(p->cell_dat == 0x01){ return PORTBbits.RB0; }
 13487  088D  0A75               	incf	get_CELL_DAT_VAL@p,w
 13488  088E  0086               	movwf	6
 13489  088F  3001               	movlw	1	; select bank2/3
 13490  0890  0087               	movwf	7
 13491  0891  0301               	decf	1,w
 13492  0892  1D03               	btfss	3,2
 13493  0893  2895               	goto	u3221
 13494  0894  2896               	goto	u3220
 13495  0895                     u3221:
 13496  0895  28A0               	goto	l2988
 13497  0896                     u3220:
 13498  0896                     l2984:
 13499  0896  0020               	movlb	0	; select bank0
 13500  0897  080D               	movf	13,w	;volatile
 13501  0898  3901               	andlw	1
 13502  0899  00F2               	movwf	??_get_CELL_DAT_VAL
 13503  089A  01F3               	clrf	??_get_CELL_DAT_VAL+1
 13504  089B  0872               	movf	??_get_CELL_DAT_VAL,w
 13505  089C  00F0               	movwf	?_get_CELL_DAT_VAL
 13506  089D  0873               	movf	??_get_CELL_DAT_VAL+1,w
 13507  089E  00F1               	movwf	?_get_CELL_DAT_VAL+1
 13508  089F  2936               	goto	l268
 13509  08A0                     l2988:
 13510                           
 13511                           ;loadcell.c: 17:     if(p->cell_dat == 0x02){ return PORTBbits.RB1; }
 13512  08A0  0A75               	incf	get_CELL_DAT_VAL@p,w
 13513  08A1  0086               	movwf	6
 13514  08A2  3001               	movlw	1	; select bank2/3
 13515  08A3  0087               	movwf	7
 13516  08A4  3002               	movlw	2
 13517  08A5  0601               	xorwf	1,w
 13518  08A6  1D03               	btfss	3,2
 13519  08A7  28A9               	goto	u3231
 13520  08A8  28AA               	goto	u3230
 13521  08A9                     u3231:
 13522  08A9  28B4               	goto	l2994
 13523  08AA                     u3230:
 13524  08AA                     l2990:
 13525  08AA  0020               	movlb	0	; select bank0
 13526  08AB  0C0D               	rrf	13,w	;volatile
 13527  08AC  3901               	andlw	1
 13528  08AD  00F2               	movwf	??_get_CELL_DAT_VAL
 13529  08AE  01F3               	clrf	??_get_CELL_DAT_VAL+1
 13530  08AF  0872               	movf	??_get_CELL_DAT_VAL,w
 13531  08B0  00F0               	movwf	?_get_CELL_DAT_VAL
 13532  08B1  0873               	movf	??_get_CELL_DAT_VAL+1,w
 13533  08B2  00F1               	movwf	?_get_CELL_DAT_VAL+1
 13534  08B3  2936               	goto	l268
 13535  08B4                     l2994:
 13536                           
 13537                           ;loadcell.c: 18:     if(p->cell_dat == 0x04){ return PORTBbits.RB2; }
 13538  08B4  0A75               	incf	get_CELL_DAT_VAL@p,w
 13539  08B5  0086               	movwf	6
 13540  08B6  3001               	movlw	1	; select bank2/3
 13541  08B7  0087               	movwf	7
 13542  08B8  3004               	movlw	4
 13543  08B9  0601               	xorwf	1,w
 13544  08BA  1D03               	btfss	3,2
 13545  08BB  28BD               	goto	u3241
 13546  08BC  28BE               	goto	u3240
 13547  08BD                     u3241:
 13548  08BD  28C9               	goto	l3000
 13549  08BE                     u3240:
 13550  08BE                     l2996:
 13551  08BE  0020               	movlb	0	; select bank0
 13552  08BF  0C0D               	rrf	13,w	;volatile
 13553  08C0  0C89               	rrf	9,f
 13554  08C1  3901               	andlw	1
 13555  08C2  00F2               	movwf	??_get_CELL_DAT_VAL
 13556  08C3  01F3               	clrf	??_get_CELL_DAT_VAL+1
 13557  08C4  0872               	movf	??_get_CELL_DAT_VAL,w
 13558  08C5  00F0               	movwf	?_get_CELL_DAT_VAL
 13559  08C6  0873               	movf	??_get_CELL_DAT_VAL+1,w
 13560  08C7  00F1               	movwf	?_get_CELL_DAT_VAL+1
 13561  08C8  2936               	goto	l268
 13562  08C9                     l3000:
 13563                           
 13564                           ;loadcell.c: 19:     if(p->cell_dat == 0x08){ return PORTBbits.RB3; }
 13565  08C9  0A75               	incf	get_CELL_DAT_VAL@p,w
 13566  08CA  0086               	movwf	6
 13567  08CB  3001               	movlw	1	; select bank2/3
 13568  08CC  0087               	movwf	7
 13569  08CD  3008               	movlw	8
 13570  08CE  0601               	xorwf	1,w
 13571  08CF  1D03               	btfss	3,2
 13572  08D0  28D2               	goto	u3251
 13573  08D1  28D3               	goto	u3250
 13574  08D2                     u3251:
 13575  08D2  28E0               	goto	l3006
 13576  08D3                     u3250:
 13577  08D3                     l3002:
 13578  08D3  0020               	movlb	0	; select bank0
 13579  08D4  0C0D               	rrf	13,w	;volatile
 13580  08D5  00F2               	movwf	??_get_CELL_DAT_VAL
 13581  08D6  0CF2               	rrf	??_get_CELL_DAT_VAL,f
 13582  08D7  0C72               	rrf	??_get_CELL_DAT_VAL,w
 13583  08D8  3901               	andlw	1
 13584  08D9  00F3               	movwf	??_get_CELL_DAT_VAL+1
 13585  08DA  01F4               	clrf	??_get_CELL_DAT_VAL+2
 13586  08DB  0873               	movf	??_get_CELL_DAT_VAL+1,w
 13587  08DC  00F0               	movwf	?_get_CELL_DAT_VAL
 13588  08DD  0874               	movf	??_get_CELL_DAT_VAL+2,w
 13589  08DE  00F1               	movwf	?_get_CELL_DAT_VAL+1
 13590  08DF  2936               	goto	l268
 13591  08E0                     l3006:
 13592                           
 13593                           ;loadcell.c: 20:     if(p->cell_dat == 0x10){ return PORTBbits.RB4; }
 13594  08E0  0A75               	incf	get_CELL_DAT_VAL@p,w
 13595  08E1  0086               	movwf	6
 13596  08E2  3001               	movlw	1	; select bank2/3
 13597  08E3  0087               	movwf	7
 13598  08E4  3010               	movlw	16
 13599  08E5  0601               	xorwf	1,w
 13600  08E6  1D03               	btfss	3,2
 13601  08E7  28E9               	goto	u3261
 13602  08E8  28EA               	goto	u3260
 13603  08E9                     u3261:
 13604  08E9  28F4               	goto	l3012
 13605  08EA                     u3260:
 13606  08EA                     l3008:
 13607  08EA  0020               	movlb	0	; select bank0
 13608  08EB  0E0D               	swapf	13,w	;volatile
 13609  08EC  3901               	andlw	1
 13610  08ED  00F2               	movwf	??_get_CELL_DAT_VAL
 13611  08EE  01F3               	clrf	??_get_CELL_DAT_VAL+1
 13612  08EF  0872               	movf	??_get_CELL_DAT_VAL,w
 13613  08F0  00F0               	movwf	?_get_CELL_DAT_VAL
 13614  08F1  0873               	movf	??_get_CELL_DAT_VAL+1,w
 13615  08F2  00F1               	movwf	?_get_CELL_DAT_VAL+1
 13616  08F3  2936               	goto	l268
 13617  08F4                     l3012:
 13618                           
 13619                           ;loadcell.c: 21:     if(p->cell_dat == 0x20){ return PORTBbits.RB5; }
 13620  08F4  0A75               	incf	get_CELL_DAT_VAL@p,w
 13621  08F5  0086               	movwf	6
 13622  08F6  3001               	movlw	1	; select bank2/3
 13623  08F7  0087               	movwf	7
 13624  08F8  3020               	movlw	32
 13625  08F9  0601               	xorwf	1,w
 13626  08FA  1D03               	btfss	3,2
 13627  08FB  28FD               	goto	u3271
 13628  08FC  28FE               	goto	u3270
 13629  08FD                     u3271:
 13630  08FD  2909               	goto	l3018
 13631  08FE                     u3270:
 13632  08FE                     l3014:
 13633  08FE  0020               	movlb	0	; select bank0
 13634  08FF  0E0D               	swapf	13,w	;volatile
 13635  0900  0C89               	rrf	9,f
 13636  0901  3901               	andlw	1
 13637  0902  00F2               	movwf	??_get_CELL_DAT_VAL
 13638  0903  01F3               	clrf	??_get_CELL_DAT_VAL+1
 13639  0904  0872               	movf	??_get_CELL_DAT_VAL,w
 13640  0905  00F0               	movwf	?_get_CELL_DAT_VAL
 13641  0906  0873               	movf	??_get_CELL_DAT_VAL+1,w
 13642  0907  00F1               	movwf	?_get_CELL_DAT_VAL+1
 13643  0908  2936               	goto	l268
 13644  0909                     l3018:
 13645                           
 13646                           ;loadcell.c: 22:     if(p->cell_dat == 0x40){ return PORTBbits.RB6; }
 13647  0909  0A75               	incf	get_CELL_DAT_VAL@p,w
 13648  090A  0086               	movwf	6
 13649  090B  3001               	movlw	1	; select bank2/3
 13650  090C  0087               	movwf	7
 13651  090D  3040               	movlw	64
 13652  090E  0601               	xorwf	1,w
 13653  090F  1D03               	btfss	3,2
 13654  0910  2912               	goto	u3281
 13655  0911  2913               	goto	u3280
 13656  0912                     u3281:
 13657  0912  291F               	goto	l3024
 13658  0913                     u3280:
 13659  0913                     l3020:
 13660  0913  0020               	movlb	0	; select bank0
 13661  0914  0E0D               	swapf	13,w	;volatile
 13662  0915  0C89               	rrf	9,f
 13663  0916  0C89               	rrf	9,f
 13664  0917  3901               	andlw	1
 13665  0918  00F2               	movwf	??_get_CELL_DAT_VAL
 13666  0919  01F3               	clrf	??_get_CELL_DAT_VAL+1
 13667  091A  0872               	movf	??_get_CELL_DAT_VAL,w
 13668  091B  00F0               	movwf	?_get_CELL_DAT_VAL
 13669  091C  0873               	movf	??_get_CELL_DAT_VAL+1,w
 13670  091D  00F1               	movwf	?_get_CELL_DAT_VAL+1
 13671  091E  2936               	goto	l268
 13672  091F                     l3024:
 13673                           
 13674                           ;loadcell.c: 23:     if(p->cell_dat == 0x80){ return PORTBbits.RB7; }
 13675  091F  0A75               	incf	get_CELL_DAT_VAL@p,w
 13676  0920  0086               	movwf	6
 13677  0921  3001               	movlw	1	; select bank2/3
 13678  0922  0087               	movwf	7
 13679  0923  3080               	movlw	128
 13680  0924  0601               	xorwf	1,w
 13681  0925  1D03               	btfss	3,2
 13682  0926  2928               	goto	u3291
 13683  0927  2929               	goto	u3290
 13684  0928                     u3291:
 13685  0928  2934               	goto	l3030
 13686  0929                     u3290:
 13687  0929                     l3026:
 13688  0929  0020               	movlb	0	; select bank0
 13689  092A  0D0D               	rlf	13,w	;volatile
 13690  092B  0D0D               	rlf	13,w	;volatile
 13691  092C  3901               	andlw	1
 13692  092D  00F2               	movwf	??_get_CELL_DAT_VAL
 13693  092E  01F3               	clrf	??_get_CELL_DAT_VAL+1
 13694  092F  0872               	movf	??_get_CELL_DAT_VAL,w
 13695  0930  00F0               	movwf	?_get_CELL_DAT_VAL
 13696  0931  0873               	movf	??_get_CELL_DAT_VAL+1,w
 13697  0932  00F1               	movwf	?_get_CELL_DAT_VAL+1
 13698  0933  2936               	goto	l268
 13699  0934                     l3030:
 13700                           
 13701                           ;loadcell.c: 25:     return 0;
 13702  0934  01F0               	clrf	?_get_CELL_DAT_VAL
 13703  0935  01F1               	clrf	?_get_CELL_DAT_VAL+1
 13704  0936                     l268:
 13705  0936  0008               	return
 13706  0937                     __end_of_get_CELL_DAT_VAL:
 13707                           
 13708                           	psect	text62
 13709  12DC                     __ptext62:	
 13710 ;; *************** function ___lldiv *****************
 13711 ;; Defined at:
 13712 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\__lldiv.c"
 13713 ;; Parameters:    Size  Location     Type
 13714 ;;  divisor         4    0[COMMON] unsigned long 
 13715 ;;  dividend        4    4[COMMON] unsigned long 
 13716 ;; Auto vars:     Size  Location     Type
 13717 ;;  quotient        4    9[COMMON] unsigned long 
 13718 ;;  counter         1   13[COMMON] unsigned char 
 13719 ;; Return value:  Size  Location     Type
 13720 ;;                  4    0[COMMON] unsigned long 
 13721 ;; Registers used:
 13722 ;;		wreg, status,2, status,0
 13723 ;; Tracked objects:
 13724 ;;		On entry : 0/0
 13725 ;;		On exit  : 0/0
 13726 ;;		Unchanged: 0/0
 13727 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 13728 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13729 ;;      Locals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13730 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13731 ;;      Totals:        14       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13732 ;;Total ram usage:       14 bytes
 13733 ;; Hardware stack levels used: 1
 13734 ;; This function calls:
 13735 ;;		Nothing
 13736 ;; This function is called by:
 13737 ;;		_get_scale_val
 13738 ;; This function uses a non-reentrant model
 13739 ;;
 13740                           
 13741                           
 13742                           ;psect for function ___lldiv
 13743  12DC                     ___lldiv:
 13744  12DC                     l3050:	
 13745                           ;incstack = 0
 13746                           ; Regs used in ___lldiv: [wreg+status,2+status,0]
 13747                           
 13748  12DC  3000               	movlw	0
 13749  12DD  00FC               	movwf	___lldiv@quotient+3
 13750  12DE  3000               	movlw	0
 13751  12DF  00FB               	movwf	___lldiv@quotient+2
 13752  12E0  3000               	movlw	0
 13753  12E1  00FA               	movwf	___lldiv@quotient+1
 13754  12E2  3000               	movlw	0
 13755  12E3  00F9               	movwf	___lldiv@quotient
 13756  12E4  0873               	movf	___lldiv@divisor+3,w
 13757  12E5  0472               	iorwf	___lldiv@divisor+2,w
 13758  12E6  0471               	iorwf	___lldiv@divisor+1,w
 13759  12E7  0470               	iorwf	___lldiv@divisor,w
 13760  12E8  1903               	skipnz
 13761  12E9  2AEB               	goto	u3311
 13762  12EA  2AEC               	goto	u3310
 13763  12EB                     u3311:
 13764  12EB  2B2D               	goto	l3070
 13765  12EC                     u3310:
 13766  12EC                     l3052:
 13767  12EC  01FD               	clrf	___lldiv@counter
 13768  12ED  0AFD               	incf	___lldiv@counter,f
 13769  12EE  2AFA               	goto	l3056
 13770  12EF                     l3054:
 13771  12EF  3001               	movlw	1
 13772  12F0                     u3325:
 13773  12F0  35F0               	lslf	___lldiv@divisor,f
 13774  12F1  0DF1               	rlf	___lldiv@divisor+1,f
 13775  12F2  0DF2               	rlf	___lldiv@divisor+2,f
 13776  12F3  0DF3               	rlf	___lldiv@divisor+3,f
 13777  12F4  0B89               	decfsz	9,f
 13778  12F5  2AF0               	goto	u3325
 13779  12F6  3001               	movlw	1
 13780  12F7  00F8               	movwf	??___lldiv
 13781  12F8  0878               	movf	??___lldiv,w
 13782  12F9  07FD               	addwf	___lldiv@counter,f
 13783  12FA                     l3056:
 13784  12FA  1FF3               	btfss	___lldiv@divisor+3,7
 13785  12FB  2AFD               	goto	u3331
 13786  12FC  2AFE               	goto	u3330
 13787  12FD                     u3331:
 13788  12FD  2AEF               	goto	l3054
 13789  12FE                     u3330:
 13790  12FE                     l3058:
 13791  12FE  3001               	movlw	1
 13792  12FF                     u3345:
 13793  12FF  35F9               	lslf	___lldiv@quotient,f
 13794  1300  0DFA               	rlf	___lldiv@quotient+1,f
 13795  1301  0DFB               	rlf	___lldiv@quotient+2,f
 13796  1302  0DFC               	rlf	___lldiv@quotient+3,f
 13797  1303  0B89               	decfsz	9,f
 13798  1304  2AFF               	goto	u3345
 13799  1305                     l3060:
 13800  1305  0873               	movf	___lldiv@divisor+3,w
 13801  1306  0277               	subwf	___lldiv@dividend+3,w
 13802  1307  1D03               	skipz
 13803  1308  2B13               	goto	u3355
 13804  1309  0872               	movf	___lldiv@divisor+2,w
 13805  130A  0276               	subwf	___lldiv@dividend+2,w
 13806  130B  1D03               	skipz
 13807  130C  2B13               	goto	u3355
 13808  130D  0871               	movf	___lldiv@divisor+1,w
 13809  130E  0275               	subwf	___lldiv@dividend+1,w
 13810  130F  1D03               	skipz
 13811  1310  2B13               	goto	u3355
 13812  1311  0870               	movf	___lldiv@divisor,w
 13813  1312  0274               	subwf	___lldiv@dividend,w
 13814  1313                     u3355:
 13815  1313  1C03               	skipc
 13816  1314  2B16               	goto	u3351
 13817  1315  2B17               	goto	u3350
 13818  1316                     u3351:
 13819  1316  2B20               	goto	l3066
 13820  1317                     u3350:
 13821  1317                     l3062:
 13822  1317  0870               	movf	___lldiv@divisor,w
 13823  1318  02F4               	subwf	___lldiv@dividend,f
 13824  1319  0871               	movf	___lldiv@divisor+1,w
 13825  131A  3BF5               	subwfb	___lldiv@dividend+1,f
 13826  131B  0872               	movf	___lldiv@divisor+2,w
 13827  131C  3BF6               	subwfb	___lldiv@dividend+2,f
 13828  131D  0873               	movf	___lldiv@divisor+3,w
 13829  131E  3BF7               	subwfb	___lldiv@dividend+3,f
 13830  131F                     l3064:
 13831  131F  1479               	bsf	___lldiv@quotient,0
 13832  1320                     l3066:
 13833  1320  3001               	movlw	1
 13834  1321                     u3365:
 13835  1321  36F3               	lsrf	___lldiv@divisor+3,f
 13836  1322  0CF2               	rrf	___lldiv@divisor+2,f
 13837  1323  0CF1               	rrf	___lldiv@divisor+1,f
 13838  1324  0CF0               	rrf	___lldiv@divisor,f
 13839  1325  0B89               	decfsz	9,f
 13840  1326  2B21               	goto	u3365
 13841  1327                     l3068:
 13842  1327  3001               	movlw	1
 13843  1328  02FD               	subwf	___lldiv@counter,f
 13844  1329  1D03               	btfss	3,2
 13845  132A  2B2C               	goto	u3371
 13846  132B  2B2D               	goto	u3370
 13847  132C                     u3371:
 13848  132C  2AFE               	goto	l3058
 13849  132D                     u3370:
 13850  132D                     l3070:
 13851  132D  087C               	movf	___lldiv@quotient+3,w
 13852  132E  00F3               	movwf	?___lldiv+3
 13853  132F  087B               	movf	___lldiv@quotient+2,w
 13854  1330  00F2               	movwf	?___lldiv+2
 13855  1331  087A               	movf	___lldiv@quotient+1,w
 13856  1332  00F1               	movwf	?___lldiv+1
 13857  1333  0879               	movf	___lldiv@quotient,w
 13858  1334  00F0               	movwf	?___lldiv
 13859  1335                     l570:
 13860  1335  0008               	return
 13861  1336                     __end_of___lldiv:
 13862                           
 13863                           	psect	text63
 13864  1E3E                     __ptext63:	
 13865 ;; *************** function _SYSTEM_Initialize *****************
 13866 ;; Defined at:
 13867 ;;		line 50 in file "mcc_generated_files/mcc.c"
 13868 ;; Parameters:    Size  Location     Type
 13869 ;;		None
 13870 ;; Auto vars:     Size  Location     Type
 13871 ;;		None
 13872 ;; Return value:  Size  Location     Type
 13873 ;;                  1    wreg      void 
 13874 ;; Registers used:
 13875 ;;		wreg, status,2, status,0, pclath, cstack
 13876 ;; Tracked objects:
 13877 ;;		On entry : 0/0
 13878 ;;		On exit  : 0/0
 13879 ;;		Unchanged: 0/0
 13880 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 13881 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13882 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13883 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13884 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13885 ;;Total ram usage:        0 bytes
 13886 ;; Hardware stack levels used: 1
 13887 ;; Hardware stack levels required when called: 1
 13888 ;; This function calls:
 13889 ;;		_OSCILLATOR_Initialize
 13890 ;;		_PIN_MANAGER_Initialize
 13891 ;;		_WDT_Initialize
 13892 ;; This function is called by:
 13893 ;;		_main
 13894 ;; This function uses a non-reentrant model
 13895 ;;
 13896                           
 13897                           
 13898                           ;psect for function _SYSTEM_Initialize
 13899  1E3E                     _SYSTEM_Initialize:
 13900  1E3E                     l3858:	
 13901                           ;incstack = 0
 13902                           ; Regs used in _SYSTEM_Initialize: [wreg+status,2+status,0+pclath+cstack]
 13903                           
 13904                           
 13905                           ;mcc_generated_files/mcc.c: 53:     PIN_MANAGER_Initialize();
 13906  1E3E  319F  27A7  319E   	fcall	_PIN_MANAGER_Initialize
 13907                           
 13908                           ;mcc_generated_files/mcc.c: 54:     OSCILLATOR_Initialize();
 13909  1E41  319E  2628  319E   	fcall	_OSCILLATOR_Initialize
 13910                           
 13911                           ;mcc_generated_files/mcc.c: 55:     WDT_Initialize();
 13912  1E44  319E  2618  319E   	fcall	_WDT_Initialize
 13913  1E47                     l51:
 13914  1E47  0008               	return
 13915  1E48                     __end_of_SYSTEM_Initialize:
 13916                           
 13917                           	psect	text64
 13918  1E18                     __ptext64:	
 13919 ;; *************** function _WDT_Initialize *****************
 13920 ;; Defined at:
 13921 ;;		line 68 in file "mcc_generated_files/mcc.c"
 13922 ;; Parameters:    Size  Location     Type
 13923 ;;		None
 13924 ;; Auto vars:     Size  Location     Type
 13925 ;;		None
 13926 ;; Return value:  Size  Location     Type
 13927 ;;                  1    wreg      void 
 13928 ;; Registers used:
 13929 ;;		wreg
 13930 ;; Tracked objects:
 13931 ;;		On entry : 0/0
 13932 ;;		On exit  : 0/0
 13933 ;;		Unchanged: 0/0
 13934 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 13935 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13936 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13937 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13938 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13939 ;;Total ram usage:        0 bytes
 13940 ;; Hardware stack levels used: 1
 13941 ;; This function calls:
 13942 ;;		Nothing
 13943 ;; This function is called by:
 13944 ;;		_SYSTEM_Initialize
 13945 ;; This function uses a non-reentrant model
 13946 ;;
 13947                           
 13948                           
 13949                           ;psect for function _WDT_Initialize
 13950  1E18                     _WDT_Initialize:
 13951  1E18                     l3762:	
 13952                           ;incstack = 0
 13953                           ; Regs used in _WDT_Initialize: [wreg]
 13954                           
 13955                           
 13956                           ;mcc_generated_files/mcc.c: 71:     WDTCON = 0x16;
 13957  1E18  3016               	movlw	22
 13958  1E19  0021               	movlb	1	; select bank1
 13959  1E1A  0097               	movwf	23	;volatile
 13960  1E1B                     l57:
 13961  1E1B  0008               	return
 13962  1E1C                     __end_of_WDT_Initialize:
 13963                           
 13964                           	psect	text65
 13965  1FA7                     __ptext65:	
 13966 ;; *************** function _PIN_MANAGER_Initialize *****************
 13967 ;; Defined at:
 13968 ;;		line 55 in file "mcc_generated_files/pin_manager.c"
 13969 ;; Parameters:    Size  Location     Type
 13970 ;;		None
 13971 ;; Auto vars:     Size  Location     Type
 13972 ;;		None
 13973 ;; Return value:  Size  Location     Type
 13974 ;;                  1    wreg      void 
 13975 ;; Registers used:
 13976 ;;		wreg, status,2
 13977 ;; Tracked objects:
 13978 ;;		On entry : 0/0
 13979 ;;		On exit  : 0/0
 13980 ;;		Unchanged: 0/0
 13981 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 13982 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13983 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13984 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13985 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13986 ;;Total ram usage:        0 bytes
 13987 ;; Hardware stack levels used: 1
 13988 ;; This function calls:
 13989 ;;		Nothing
 13990 ;; This function is called by:
 13991 ;;		_SYSTEM_Initialize
 13992 ;; This function uses a non-reentrant model
 13993 ;;
 13994                           
 13995                           
 13996                           ;psect for function _PIN_MANAGER_Initialize
 13997  1FA7                     _PIN_MANAGER_Initialize:
 13998  1FA7                     l3740:	
 13999                           ;incstack = 0
 14000                           ; Regs used in _PIN_MANAGER_Initialize: [wreg+status,2]
 14001                           
 14002                           
 14003                           ;mcc_generated_files/pin_manager.c: 60:     LATE = 0x00;
 14004  1FA7  0022               	movlb	2	; select bank2
 14005  1FA8  0190               	clrf	16	;volatile
 14006                           
 14007                           ;mcc_generated_files/pin_manager.c: 61:     LATA = 0x00;
 14008  1FA9  018C               	clrf	12	;volatile
 14009                           
 14010                           ;mcc_generated_files/pin_manager.c: 62:     LATB = 0x00;
 14011  1FAA  018D               	clrf	13	;volatile
 14012                           
 14013                           ;mcc_generated_files/pin_manager.c: 63:     LATC = 0x00;
 14014  1FAB  018E               	clrf	14	;volatile
 14015  1FAC                     l3742:
 14016                           
 14017                           ;mcc_generated_files/pin_manager.c: 68:     TRISE = 0x08;
 14018  1FAC  3008               	movlw	8
 14019  1FAD  0021               	movlb	1	; select bank1
 14020  1FAE  0090               	movwf	16	;volatile
 14021  1FAF                     l3744:
 14022                           
 14023                           ;mcc_generated_files/pin_manager.c: 69:     TRISA = 0xFF;
 14024  1FAF  30FF               	movlw	255
 14025  1FB0  008C               	movwf	12	;volatile
 14026  1FB1                     l3746:
 14027                           
 14028                           ;mcc_generated_files/pin_manager.c: 70:     TRISB = 0xFF;
 14029  1FB1  30FF               	movlw	255
 14030  1FB2  008D               	movwf	13	;volatile
 14031  1FB3                     l3748:
 14032                           
 14033                           ;mcc_generated_files/pin_manager.c: 71:     TRISC = 0xFF;
 14034  1FB3  30FF               	movlw	255
 14035  1FB4  008E               	movwf	14	;volatile
 14036  1FB5                     l3750:
 14037                           
 14038                           ;mcc_generated_files/pin_manager.c: 76:     ANSELB = 0xFE;
 14039  1FB5  30FE               	movlw	254
 14040  1FB6  0023               	movlb	3	; select bank3
 14041  1FB7  008D               	movwf	13	;volatile
 14042  1FB8                     l3752:
 14043                           
 14044                           ;mcc_generated_files/pin_manager.c: 77:     ANSELA = 0x1F;
 14045  1FB8  301F               	movlw	31
 14046  1FB9  008C               	movwf	12	;volatile
 14047                           
 14048                           ;mcc_generated_files/pin_manager.c: 82:     WPUE = 0x00;
 14049  1FBA  0024               	movlb	4	; select bank4
 14050  1FBB  0190               	clrf	16	;volatile
 14051                           
 14052                           ;mcc_generated_files/pin_manager.c: 83:     WPUB = 0x00;
 14053  1FBC  018D               	clrf	13	;volatile
 14054  1FBD                     l3754:
 14055                           
 14056                           ;mcc_generated_files/pin_manager.c: 84:     OPTION_REGbits.nWPUEN = 1;
 14057  1FBD  0021               	movlb	1	; select bank1
 14058  1FBE  1795               	bsf	21,7	;volatile
 14059                           
 14060                           ;mcc_generated_files/pin_manager.c: 90:     APFCON = 0x00;
 14061  1FBF  0022               	movlb	2	; select bank2
 14062  1FC0  019D               	clrf	29	;volatile
 14063  1FC1                     l31:
 14064  1FC1  0008               	return
 14065  1FC2                     __end_of_PIN_MANAGER_Initialize:
 14066                           
 14067                           	psect	text66
 14068  1E28                     __ptext66:	
 14069 ;; *************** function _OSCILLATOR_Initialize *****************
 14070 ;; Defined at:
 14071 ;;		line 58 in file "mcc_generated_files/mcc.c"
 14072 ;; Parameters:    Size  Location     Type
 14073 ;;		None
 14074 ;; Auto vars:     Size  Location     Type
 14075 ;;		None
 14076 ;; Return value:  Size  Location     Type
 14077 ;;                  1    wreg      void 
 14078 ;; Registers used:
 14079 ;;		wreg, status,2
 14080 ;; Tracked objects:
 14081 ;;		On entry : 0/0
 14082 ;;		On exit  : 0/0
 14083 ;;		Unchanged: 0/0
 14084 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 14085 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14086 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14087 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14088 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14089 ;;Total ram usage:        0 bytes
 14090 ;; Hardware stack levels used: 1
 14091 ;; This function calls:
 14092 ;;		Nothing
 14093 ;; This function is called by:
 14094 ;;		_SYSTEM_Initialize
 14095 ;; This function uses a non-reentrant model
 14096 ;;
 14097                           
 14098                           
 14099                           ;psect for function _OSCILLATOR_Initialize
 14100  1E28                     _OSCILLATOR_Initialize:
 14101  1E28                     l3756:	
 14102                           ;incstack = 0
 14103                           ; Regs used in _OSCILLATOR_Initialize: [wreg+status,2]
 14104                           
 14105                           
 14106                           ;mcc_generated_files/mcc.c: 61:     OSCCON = 0x70;
 14107  1E28  3070               	movlw	112
 14108  1E29  0021               	movlb	1	; select bank1
 14109  1E2A  0099               	movwf	25	;volatile
 14110  1E2B                     l3758:
 14111                           
 14112                           ;mcc_generated_files/mcc.c: 63:     OSCTUNE = 0x00;
 14113  1E2B  0198               	clrf	24	;volatile
 14114  1E2C                     l3760:
 14115                           
 14116                           ;mcc_generated_files/mcc.c: 65:     BORCON = 0x00;
 14117  1E2C  0022               	movlb	2	; select bank2
 14118  1E2D  0196               	clrf	22	;volatile
 14119  1E2E                     l54:
 14120  1E2E  0008               	return
 14121  1E2F                     __end_of_OSCILLATOR_Initialize:
 14122  007E                     btemp	set	126	;btemp
 14123  007E                     wtemp0	set	126
 14124                           
 14125                           	psect	config
 14126                           
 14127                           ;Config register CONFIG1 @ 0x8007
 14128                           ;	Oscillator Selection
 14129                           ;	FOSC = INTOSC, INTOSC oscillator: I/O function on CLKIN pin
 14130                           ;	Watchdog Timer Enable
 14131                           ;	WDTE = OFF, WDT disabled
 14132                           ;	Power-up Timer Enable
 14133                           ;	PWRTE = OFF, PWRT disabled
 14134                           ;	MCLR Pin Function Select
 14135                           ;	MCLRE = ON, MCLR/VPP pin function is MCLR
 14136                           ;	Flash Program Memory Code Protection
 14137                           ;	CP = OFF, Program memory code protection is disabled
 14138                           ;	Data Memory Code Protection
 14139                           ;	CPD = OFF, Data memory code protection is disabled
 14140                           ;	Brown-out Reset Enable
 14141                           ;	BOREN = ON, Brown-out Reset enabled
 14142                           ;	Clock Out Enable
 14143                           ;	CLKOUTEN = OFF, CLKOUT function is disabled. I/O or oscillator function on the CLKOUT 
      +                          pin
 14144                           ;	Internal/External Switchover
 14145                           ;	IESO = ON, Internal/External Switchover mode is enabled
 14146                           ;	Fail-Safe Clock Monitor Enable
 14147                           ;	FCMEN = ON, Fail-Safe Clock Monitor is enabled
 14148  8007                     	org	32775
 14149  8007  3FE4               	dw	16356
 14150                           
 14151                           ;Config register CONFIG2 @ 0x8008
 14152                           ;	Flash Memory Self-Write Protection
 14153                           ;	WRT = OFF, Write protection off
 14154                           ;	Voltage Regulator Capacitor Enable
 14155                           ;	VCAPEN = OFF, All VCAP pin functionality is disabled
 14156                           ;	PLL Enable
 14157                           ;	PLLEN = OFF, 4x PLL disabled
 14158                           ;	Stack Overflow/Underflow Reset Enable
 14159                           ;	STVREN = ON, Stack Overflow or Underflow will cause a Reset
 14160                           ;	Brown-out Reset Voltage Selection
 14161                           ;	BORV = LO, Brown-out Reset Voltage (Vbor), low trip point selected.
 14162                           ;	Low-Voltage Programming Enable
 14163                           ;	LVP = OFF, High-voltage on MCLR/VPP must be used for programming
 14164  8008                     	org	32776
 14165  8008  1EFF               	dw	7935

Data Sizes:
    Strings     79
    Constant    0
    Data        36
    BSS         53
    Persistent  32
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14     14      14
    BANK0            80     80      80
    BANK1            80     56      77
    BANK2            80     26      62
    BANK3            80      0      32
    BANK4            80      0       0
    BANK5            80      0       0
    BANK6            80      0       0
    BANK7            80      0       0
    BANK8            80      0       0
    BANK9            80      0       0
    BANK10           80      0       0
    BANK11           80      0       0
    BANK12           48      0       0

Pointer List with Targets:

    encode_digit@p	PTR struct . size(1) Largest target is 2
		 -> NULL(NULL[0]), main@tm1637(BANK2[2]), 

    set_brigthness@p	PTR struct . size(1) Largest target is 2
		 -> NULL(NULL[0]), main@tm1637(BANK2[2]), 

    strncmp@_r	PTR const unsigned char  size(2) Largest target is 3
		 -> STR_19(CODE[3]), STR_14(CODE[3]), STR_10(CODE[3]), 

    strncmp@r	PTR const unsigned char  size(2) Largest target is 3
		 -> STR_19(CODE[3]), STR_14(CODE[3]), STR_10(CODE[3]), 

    strncmp@_l	PTR const unsigned char  size(2) Largest target is 14
		 -> STR_7(CODE[14]), STR_6(CODE[6]), STR_5(CODE[14]), STR_4(CODE[8]), 

    strncmp@l	PTR const unsigned char  size(2) Largest target is 14
		 -> STR_7(CODE[14]), STR_6(CODE[6]), STR_5(CODE[14]), STR_4(CODE[8]), 

    strlen@s	PTR const unsigned char  size(1) Largest target is 32
		 -> dbuf(BANK3[32]), 

    strlen@a	PTR const unsigned char  size(1) Largest target is 32
		 -> dbuf(BANK3[32]), 

    fputs@s	PTR const unsigned char  size(1) Largest target is 32
		 -> dbuf(BANK3[32]), 

    fputs@fp	PTR struct _IO_FILE size(1) Largest target is 6
		 -> sprintf@f(BANK1[5]), 

    fputc@fp.buffer	PTR unsigned char  size(1) Largest target is 16
		 -> set_max_gram@valstr(BANK1[16]), print_gram@row2(BANK1[16]), print_gram@row1(BANK1[16]), initialize@valstr(BANK1[16]), 

    fputc@fp	PTR struct _IO_FILE size(1) Largest target is 6
		 -> sprintf@f(BANK1[5]), 

    vfprintf@ap	PTR PTR void  size(1) Largest target is 1
		 -> sprintf@ap(BANK1[1]), 

    vfprintf@fp	PTR struct _IO_FILE size(1) Largest target is 6
		 -> sprintf@f(BANK1[5]), 

    vfprintf@fmt	PTR const unsigned char  size(2) Largest target is 14
		 -> STR_7(CODE[14]), STR_6(CODE[6]), STR_5(CODE[14]), STR_4(CODE[8]), 

    vfprintf@cfmt	PTR unsigned char  size(2) Largest target is 14
		 -> STR_7(CODE[14]), STR_6(CODE[6]), STR_5(CODE[14]), STR_4(CODE[8]), 

    vfpfcnvrt@fp	PTR struct _IO_FILE size(1) Largest target is 6
		 -> sprintf@f(BANK1[5]), 

    vfpfcnvrt@ap	PTR PTR void  size(1) Largest target is 1
		 -> sprintf@ap(BANK1[1]), 

    vfpfcnvrt@fmt	PTR PTR unsigned char  size(1) Largest target is 2
		 -> vfprintf@cfmt(BANK1[2]), 

    utoa@fp	PTR struct _IO_FILE size(1) Largest target is 6
		 -> sprintf@f(BANK1[5]), 

    dtoa@fp	PTR struct _IO_FILE size(1) Largest target is 6
		 -> sprintf@f(BANK1[5]), 

    pad@fp	PTR struct _IO_FILE size(1) Largest target is 6
		 -> sprintf@f(BANK1[5]), 

    pad@buf	PTR unsigned char  size(1) Largest target is 32
		 -> dbuf(BANK3[32]), 

    sprintf@fmt	PTR const unsigned char  size(2) Largest target is 14
		 -> STR_7(CODE[14]), STR_6(CODE[6]), STR_5(CODE[14]), STR_4(CODE[8]), 

    sprintf@s	PTR unsigned char  size(1) Largest target is 16
		 -> set_max_gram@valstr(BANK1[16]), print_gram@row2(BANK1[16]), print_gram@row1(BANK1[16]), initialize@valstr(BANK1[16]), 

    sprintf@ap	PTR void [1] size(1) Largest target is 2
		 -> ?_sprintf(BANK1[2]), 

    S1182_IO_FILE$buffer	PTR unsigned char  size(1) Largest target is 16
		 -> set_max_gram@valstr(BANK1[16]), print_gram@row2(BANK1[16]), print_gram@row1(BANK1[16]), initialize@valstr(BANK1[16]), 

    f.buffer	PTR unsigned char  size(1) Largest target is 16
		 -> set_max_gram@valstr(BANK1[16]), print_gram@row2(BANK1[16]), print_gram@row1(BANK1[16]), initialize@valstr(BANK1[16]), 

    set_max_gram@p.tm1637	PTR struct . size(1) Largest target is 2
		 -> NULL(NULL[0]), main@tm1637(BANK2[2]), 

    set_max_gram@p.lcd	PTR struct . size(1) Largest target is 4
		 -> NULL(NULL[0]), main@lcd(BANK2[4]), 

    set_max_gram@p.loadcell	PTR struct . size(1) Largest target is 12
		 -> NULL(NULL[0]), main@loadcell(BANK2[12]), 

    set_max_gram@p	PTR struct . size(1) Largest target is 11
		 -> main@drink(BANK2[8]), 

    print_gram@p.tm1637	PTR struct . size(1) Largest target is 2
		 -> NULL(NULL[0]), main@tm1637(BANK2[2]), 

    print_gram@p.lcd	PTR struct . size(1) Largest target is 4
		 -> NULL(NULL[0]), main@lcd(BANK2[4]), 

    print_gram@p.loadcell	PTR struct . size(1) Largest target is 12
		 -> NULL(NULL[0]), main@loadcell(BANK2[12]), 

    print_gram@p	PTR struct . size(1) Largest target is 11
		 -> main@drink(BANK2[8]), 

    calc_percentage@p.tm1637	PTR struct . size(1) Largest target is 2
		 -> NULL(NULL[0]), main@tm1637(BANK2[2]), 

    calc_percentage@p.lcd	PTR struct . size(1) Largest target is 4
		 -> NULL(NULL[0]), main@lcd(BANK2[4]), 

    calc_percentage@p.loadcell	PTR struct . size(1) Largest target is 12
		 -> NULL(NULL[0]), main@loadcell(BANK2[12]), 

    calc_percentage@p	PTR struct . size(1) Largest target is 11
		 -> main@drink(BANK2[8]), 

    initialize@p.tm1637	PTR struct . size(1) Largest target is 2
		 -> NULL(NULL[0]), main@tm1637(BANK2[2]), 

    initialize@p.lcd	PTR struct . size(1) Largest target is 4
		 -> NULL(NULL[0]), main@lcd(BANK2[4]), 

    initialize@p.loadcell	PTR struct . size(1) Largest target is 12
		 -> NULL(NULL[0]), main@loadcell(BANK2[12]), 

    initialize@p	PTR struct . size(1) Largest target is 11
		 -> main@drink(BANK2[8]), 

    write4bits@p	PTR struct . size(1) Largest target is 4
		 -> NULL(NULL[0]), main@lcd(BANK2[4]), 

    command@p	PTR struct . size(1) Largest target is 4
		 -> NULL(NULL[0]), main@lcd(BANK2[4]), 

    lcd_print_with@str	PTR unsigned char  size(2) Largest target is 16
		 -> print_gram@row2(BANK1[16]), print_gram@row1(BANK1[16]), STR_3(CODE[15]), STR_2(CODE[11]), 

    lcd_print_with@p	PTR struct . size(1) Largest target is 4
		 -> NULL(NULL[0]), main@lcd(BANK2[4]), 

    lcd_print@p	PTR struct . size(1) Largest target is 4
		 -> NULL(NULL[0]), main@lcd(BANK2[4]), 

    lcd_print@str	PTR unsigned char  size(2) Largest target is 16
		 -> set_max_gram@valstr(BANK1[16]), print_gram@row2(BANK1[16]), print_gram@row1(BANK1[16]), initialize@valstr(BANK1[16]), 
		 -> STR_3(CODE[15]), STR_2(CODE[11]), STR_1(CODE[2]), 

    lcd_set_cursor@p	PTR struct . size(1) Largest target is 4
		 -> NULL(NULL[0]), main@lcd(BANK2[4]), 

    lcd_clear@p	PTR struct . size(1) Largest target is 4
		 -> NULL(NULL[0]), main@lcd(BANK2[4]), 

    lcd_backlight@p	PTR struct . size(1) Largest target is 4
		 -> NULL(NULL[0]), main@lcd(BANK2[4]), 

    lcd_init@p	PTR struct . size(1) Largest target is 4
		 -> NULL(NULL[0]), main@lcd(BANK2[4]), 

    lcd_cmd@p	PTR struct . size(1) Largest target is 4
		 -> NULL(NULL[0]), main@lcd(BANK2[4]), 

    scale_convert_gram@p	PTR struct . size(1) Largest target is 12
		 -> NULL(NULL[0]), main@loadcell(BANK2[12]), 

    get_scale_val@p	PTR struct . size(1) Largest target is 12
		 -> NULL(NULL[0]), main@loadcell(BANK2[12]), 

    get_CELL_DAT_VAL@p	PTR struct . size(1) Largest target is 12
		 -> NULL(NULL[0]), main@loadcell(BANK2[12]), 

    set_CELL_CLK_HIGH@p	PTR struct . size(1) Largest target is 12
		 -> NULL(NULL[0]), main@loadcell(BANK2[12]), 

    set_CELL_CLK_LOW@p	PTR struct . size(1) Largest target is 12
		 -> NULL(NULL[0]), main@loadcell(BANK2[12]), 

    print_digit@p	PTR struct . size(1) Largest target is 2
		 -> NULL(NULL[0]), main@tm1637(BANK2[2]), 

    initialize_digit@p	PTR struct . size(1) Largest target is 2
		 -> NULL(NULL[0]), main@tm1637(BANK2[2]), 

    set_segments@segments	PTR const unsigned char  size(1) Largest target is 4
		 -> print_digit@data(BANK0[4]), clear_segment@data(COMMON[4]), 

    set_segments@p	PTR struct . size(1) Largest target is 2
		 -> NULL(NULL[0]), main@tm1637(BANK2[2]), 

    write_byte@p	PTR struct . size(1) Largest target is 2
		 -> NULL(NULL[0]), main@tm1637(BANK2[2]), 

    get_DIO_PIN_value@p	PTR struct . size(1) Largest target is 2
		 -> NULL(NULL[0]), main@tm1637(BANK2[2]), 

    stop_segment@p	PTR struct . size(1) Largest target is 2
		 -> NULL(NULL[0]), main@tm1637(BANK2[2]), 

    start_segment@p	PTR struct . size(1) Largest target is 2
		 -> NULL(NULL[0]), main@tm1637(BANK2[2]), 

    DIO_SET_LOW@p	PTR struct . size(1) Largest target is 2
		 -> NULL(NULL[0]), main@tm1637(BANK2[2]), 

    DIO_SET_HIGH@p	PTR struct . size(1) Largest target is 2
		 -> NULL(NULL[0]), main@tm1637(BANK2[2]), 

    DIO_SET_INPUT@p	PTR struct . size(1) Largest target is 2
		 -> NULL(NULL[0]), main@tm1637(BANK2[2]), 

    DIO_SET_OUTPUT@p	PTR struct . size(1) Largest target is 2
		 -> NULL(NULL[0]), main@tm1637(BANK2[2]), 

    CLK_SET_LOW@p	PTR struct . size(1) Largest target is 2
		 -> NULL(NULL[0]), main@tm1637(BANK2[2]), 

    CLK_SET_HIGH@p	PTR struct . size(1) Largest target is 2
		 -> NULL(NULL[0]), main@tm1637(BANK2[2]), 

    CLK_SET_OUTPUT@p	PTR struct . size(1) Largest target is 2
		 -> NULL(NULL[0]), main@tm1637(BANK2[2]), 

    drink.tm1637	PTR struct . size(1) Largest target is 2
		 -> NULL(NULL[0]), main@tm1637(BANK2[2]), 

    drink.lcd	PTR struct . size(1) Largest target is 4
		 -> NULL(NULL[0]), main@lcd(BANK2[4]), 

    drink.loadcell	PTR struct . size(1) Largest target is 12
		 -> NULL(NULL[0]), main@loadcell(BANK2[12]), 

    S225$tm1637	PTR struct . size(1) Largest target is 2
		 -> NULL(NULL[0]), main@tm1637(BANK2[2]), 

    F2855.tm1637	PTR struct . size(1) Largest target is 2
		 -> NULL(NULL[0]), main@tm1637(BANK2[2]), 

    S225$lcd	PTR struct . size(1) Largest target is 4
		 -> NULL(NULL[0]), main@lcd(BANK2[4]), 

    F2855.lcd	PTR struct . size(1) Largest target is 4
		 -> NULL(NULL[0]), main@lcd(BANK2[4]), 

    S225$loadcell	PTR struct . size(1) Largest target is 12
		 -> NULL(NULL[0]), main@loadcell(BANK2[12]), 

    F2855.loadcell	PTR struct . size(1) Largest target is 12
		 -> NULL(NULL[0]), main@loadcell(BANK2[12]), 


Critical Paths under _main in COMMON

    _calc_percentage->___xxtofl
    _scale_convert_gram->___xxtofl
    ___fltol->___xxtofl
    ___fldiv->___xxtofl
    ___flmul->___xxtofl
    _print_gram->_lcd_print_with
    _print_gram->_print_digit
    _initialize->_lcd_print_with
    _initialize->_print_digit
    _vfpfcnvrt->_utoa
    _utoa->_pad
    _dtoa->_pad
    _pad->_fputs
    _fputs->_fputc
    _abs->___aomod
    _lcd_print_with->_lcd_print
    _lcd_print_with->_lcd_set_cursor
    _lcd_init->_write4bits
    _write4bits->_lcd_cmd
    _lcd_clear->_lcd_print
    _lcd_clear->_lcd_set_cursor
    _lcd_set_cursor->_command
    _lcd_print->_command
    _command->_lcd_cmd
    _lcd_backlight->_lcd_cmd
    _lcd_cmd->_i2c_write
    _initialize_digit->_print_digit
    _print_digit->_set_segments
    _set_segments->_write_byte
    _write_byte->_CLK_SET_HIGH
    _write_byte->_CLK_SET_LOW
    _write_byte->_CLK_SET_OUTPUT
    _write_byte->_DIO_SET_HIGH
    _write_byte->_DIO_SET_INPUT
    _write_byte->_DIO_SET_LOW
    _write_byte->_DIO_SET_OUTPUT
    _write_byte->_get_DIO_PIN_value
    _stop_segment->_CLK_SET_HIGH
    _stop_segment->_CLK_SET_LOW
    _stop_segment->_CLK_SET_OUTPUT
    _stop_segment->_DIO_SET_HIGH
    _stop_segment->_DIO_SET_LOW
    _stop_segment->_DIO_SET_OUTPUT
    _start_segment->_CLK_SET_HIGH
    _start_segment->_CLK_SET_LOW
    _start_segment->_CLK_SET_OUTPUT
    _start_segment->_DIO_SET_HIGH
    _start_segment->_DIO_SET_LOW
    _start_segment->_DIO_SET_OUTPUT
    _encode_digit->___awdiv
    _get_scale_val->___lldiv

Critical Paths under _main in BANK0

    _main->_calc_percentage
    _set_max_gram->_calc_percentage
    _calc_percentage->_scale_convert_gram
    _scale_convert_gram->___fltol
    ___fltol->___flmul
    ___flmul->___fldiv
    _sprintf->_vfprintf
    _vfprintf->_vfpfcnvrt
    _vfpfcnvrt->_dtoa
    _utoa->___lodiv
    _utoa->___lomod
    _dtoa->___aodiv
    _dtoa->___aomod
    _pad->_fputs
    _abs->___aomod
    _lcd_print_with->_lcd_set_cursor
    _lcd_clear->_lcd_set_cursor
    _initialize_digit->_print_digit
    _print_digit->_set_segments

Critical Paths under _main in BANK1

    _main->_print_gram
    _set_max_gram->_sprintf
    _print_gram->_sprintf
    _initialize->_sprintf
    _sprintf->_vfprintf

Critical Paths under _main in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _main in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                28    28      0  119053
                                             54 BANK1      2     2      0
                                              0 BANK2     26    26      0
                  _SYSTEM_Initialize
                    _calc_percentage
                         _initialize
                         _print_gram
                       _set_max_gram
 ---------------------------------------------------------------------------------
 (1) _set_max_gram                                        21    17      4   29610
                                             19 BANK1     21    17      4
                    _calc_percentage
                          _lcd_clear
                          _lcd_print
                            _sprintf
 ---------------------------------------------------------------------------------
 (2) _calc_percentage                                      5     5      0    9118
                                             76 BANK0      4     4      0
                                              0 BANK1      1     1      0
                            ___fldiv
                            ___flmul
                            ___fltol
                           ___xxtofl
                      _get_scale_val
                 _scale_convert_gram
 ---------------------------------------------------------------------------------
 (3) _scale_convert_gram                                  13    13      0    2567
                                             63 BANK0     13    13      0
                            ___fldiv
                            ___fltol
                           ___xxtofl
 ---------------------------------------------------------------------------------
 (4) ___xxtofl                                            14    10      4     550
                                              0 COMMON    14    10      4
 ---------------------------------------------------------------------------------
 (4) ___fltol                                             11     7      4     381
                                             52 BANK0     11     7      4
                            ___fldiv (ARG)
                            ___flmul (ARG)
                           ___xxtofl (ARG)
 ---------------------------------------------------------------------------------
 (4) ___fldiv                                             26    18      8    1425
                                              0 BANK0     26    18      8
                           ___xxtofl (ARG)
 ---------------------------------------------------------------------------------
 (3) ___flmul                                             26    18      8    2417
                                             26 BANK0     26    18      8
                          __Umul8_16
                            ___fldiv (ARG)
                           ___xxtofl (ARG)
 ---------------------------------------------------------------------------------
 (4) __Umul8_16                                            9     7      2     799
                                              0 COMMON     9     7      2
 ---------------------------------------------------------------------------------
 (1) _print_gram                                          35    35      0   31699
                                             19 BANK1     35    35      0
                          _lcd_clear
                     _lcd_print_with
                        _print_digit
                            _sprintf
 ---------------------------------------------------------------------------------
 (1) _initialize                                          18    18      0   48212
                                             19 BANK1     18    18      0
                      _get_scale_val
                   _initialize_digit
                      _lcd_backlight
                          _lcd_clear
                           _lcd_init
                          _lcd_print
                     _lcd_print_with
                        _print_digit
                            _sprintf
 ---------------------------------------------------------------------------------
 (2) _sprintf                                             16    10      6   11851
                                              5 BANK1     14     8      6
                           _vfprintf
 ---------------------------------------------------------------------------------
 (3) _vfprintf                                             8     5      3   11210
                                             77 BANK0      3     0      3
                                              0 BANK1      5     5      0
                          _vfpfcnvrt
 ---------------------------------------------------------------------------------
 (4) _vfpfcnvrt                                           47    45      2   10889
                                             46 BANK0     31    29      2
                               _dtoa
                              _fputc
                            _strncmp
                               _utoa
 ---------------------------------------------------------------------------------
 (5) _utoa                                                24    16      8    3838
                                             13 COMMON     1     1      0
                                             16 BANK0     23    15      8
                            ___lodiv
                            ___lomod
                                _pad
 ---------------------------------------------------------------------------------
 (6) ___lomod                                             18     2     16     311
                                              0 COMMON     2     2      0
                                              0 BANK0     16     0     16
 ---------------------------------------------------------------------------------
 (6) ___lodiv                                             26    10     16     314
                                              0 COMMON    10    10      0
                                              0 BANK0     16     0     16
 ---------------------------------------------------------------------------------
 (5) _strncmp                                             11     5      6     909
                                              0 COMMON    11     5      6
 ---------------------------------------------------------------------------------
 (5) _dtoa                                                30    22      8    4437
                                             16 BANK0     30    22      8
                            ___aodiv
                            ___aomod
                                _abs
                                _pad
 ---------------------------------------------------------------------------------
 (6) _pad                                                  9     6      3    2722
                                             12 COMMON     1     1      0
                                              4 BANK0      8     5      3
                              _fputc
                              _fputs
                             _strlen
 ---------------------------------------------------------------------------------
 (7) _strlen                                               5     3      2     123
                                              0 COMMON     5     3      2
 ---------------------------------------------------------------------------------
 (7) _fputs                                                8     7      1    1149
                                              8 COMMON     4     3      1
                                              0 BANK0      4     4      0
                              _fputc
 ---------------------------------------------------------------------------------
 (8) _fputc                                                8     5      3     834
                                              0 COMMON     8     5      3
                              _putch
 ---------------------------------------------------------------------------------
 (9) _putch                                                1     1      0       0
 ---------------------------------------------------------------------------------
 (6) _abs                                                  4     2      2     142
                                              3 COMMON     4     2      2
                            ___aomod (ARG)
 ---------------------------------------------------------------------------------
 (6) ___aomod                                             19     3     16     448
                                              0 COMMON     3     3      0
                                              0 BANK0     16     0     16
 ---------------------------------------------------------------------------------
 (6) ___aodiv                                             27    11     16     452
                                              0 COMMON    11    11      0
                                              0 BANK0     16     0     16
 ---------------------------------------------------------------------------------
 (2) _lcd_print_with                                       7     3      4    6263
                                             13 COMMON     1     1      0
                                              6 BANK0      6     2      4
                          _lcd_print
                     _lcd_set_cursor
 ---------------------------------------------------------------------------------
 (2) _lcd_init                                             3     3      0    3155
                                              6 COMMON     3     3      0
                         _write4bits
 ---------------------------------------------------------------------------------
 (3) _write4bits                                           3     2      1    2814
                                              3 COMMON     3     2      1
                            _lcd_cmd
 ---------------------------------------------------------------------------------
 (2) _lcd_clear                                            5     5      0    5410
                                              6 BANK0      5     5      0
                          _lcd_print
                     _lcd_set_cursor
 ---------------------------------------------------------------------------------
 (3) _lcd_set_cursor                                       9     7      2    2659
                                             10 COMMON     3     1      2
                                              0 BANK0      6     6      0
                            _command
 ---------------------------------------------------------------------------------
 (2) _lcd_print                                            5     3      2    2450
                                             10 COMMON     3     1      2
                                              0 BANK0      2     2      0
                            _command
 ---------------------------------------------------------------------------------
 (3) _command                                              7     5      2    1924
                                              3 COMMON     7     5      2
                            _lcd_cmd
 ---------------------------------------------------------------------------------
 (2) _lcd_backlight                                        2     2      0    1233
                                              3 COMMON     2     2      0
                            _lcd_cmd
 ---------------------------------------------------------------------------------
 (4) _lcd_cmd                                              2     1      1    1156
                                              1 COMMON     2     1      1
                          _i2c_start
                           _i2c_stop
                          _i2c_write
 ---------------------------------------------------------------------------------
 (5) _i2c_write                                            1     1      0      22
                                              0 COMMON     1     1      0
                           _i2c_wait
 ---------------------------------------------------------------------------------
 (5) _i2c_stop                                             0     0      0       0
 ---------------------------------------------------------------------------------
 (5) _i2c_start                                            0     0      0       0
                           _i2c_wait
 ---------------------------------------------------------------------------------
 (6) _i2c_wait                                             0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _initialize_digit                                     2     2      0    8211
                                             12 BANK0      2     2      0
                        _print_digit
                     _set_brigthness
 ---------------------------------------------------------------------------------
 (3) _set_brigthness                                       4     2      2     268
                                              0 COMMON     4     2      2
 ---------------------------------------------------------------------------------
 (2) _print_digit                                         11    10      1    7866
                                             13 COMMON     1     0      1
                                              2 BANK0     10    10      0
                            ___awdiv
                            ___awmod
                       _encode_digit
                       _set_segments
 ---------------------------------------------------------------------------------
 (3) _set_segments                                         7     4      3    5118
                                              8 COMMON     5     2      3
                                              0 BANK0      2     2      0
                      _start_segment
                       _stop_segment
                         _write_byte
 ---------------------------------------------------------------------------------
 (4) _write_byte                                           6     5      1    2020
                                              2 COMMON     6     5      1
                       _CLK_SET_HIGH
                        _CLK_SET_LOW
                     _CLK_SET_OUTPUT
                       _DIO_SET_HIGH
                      _DIO_SET_INPUT
                        _DIO_SET_LOW
                     _DIO_SET_OUTPUT
                  _get_DIO_PIN_value
 ---------------------------------------------------------------------------------
 (5) _get_DIO_PIN_value                                    2     2      0     209
                                              0 COMMON     2     2      0
 ---------------------------------------------------------------------------------
 (5) _DIO_SET_INPUT                                        2     2      0      55
                                              0 COMMON     2     2      0
 ---------------------------------------------------------------------------------
 (4) _stop_segment                                         1     1      0    1122
                                              2 COMMON     1     1      0
                       _CLK_SET_HIGH
                        _CLK_SET_LOW
                     _CLK_SET_OUTPUT
                       _DIO_SET_HIGH
                        _DIO_SET_LOW
                     _DIO_SET_OUTPUT
 ---------------------------------------------------------------------------------
 (4) _start_segment                                        1     1      0    1122
                                              2 COMMON     1     1      0
                       _CLK_SET_HIGH
                        _CLK_SET_LOW
                     _CLK_SET_OUTPUT
                       _DIO_SET_HIGH
                        _DIO_SET_LOW
                     _DIO_SET_OUTPUT
 ---------------------------------------------------------------------------------
 (5) _DIO_SET_OUTPUT                                       2     2      0     154
                                              0 COMMON     2     2      0
 ---------------------------------------------------------------------------------
 (5) _DIO_SET_LOW                                          2     2      0     154
                                              0 COMMON     2     2      0
 ---------------------------------------------------------------------------------
 (5) _DIO_SET_HIGH                                         2     2      0     154
                                              0 COMMON     2     2      0
 ---------------------------------------------------------------------------------
 (5) _CLK_SET_OUTPUT                                       2     2      0     121
                                              0 COMMON     2     2      0
 ---------------------------------------------------------------------------------
 (5) _CLK_SET_LOW                                          2     2      0     154
                                              0 COMMON     2     2      0
 ---------------------------------------------------------------------------------
 (5) _CLK_SET_HIGH                                         2     2      0     154
                                              0 COMMON     2     2      0
 ---------------------------------------------------------------------------------
 (3) _encode_digit                                         2     1      1     526
                                              9 COMMON     2     1      1
                            ___awdiv (ARG)
 ---------------------------------------------------------------------------------
 (3) ___awmod                                              7     3      4     752
                                              0 COMMON     7     3      4
 ---------------------------------------------------------------------------------
 (3) ___awdiv                                              9     5      4     756
                                              0 COMMON     9     5      4
 ---------------------------------------------------------------------------------
 (3) _get_scale_val                                       19    15      4    1448
                                              0 BANK0     19    15      4
                            ___lldiv
                   _get_CELL_DAT_VAL
                  _set_CELL_CLK_HIGH
                   _set_CELL_CLK_LOW
 ---------------------------------------------------------------------------------
 (4) _set_CELL_CLK_LOW                                     2     2      0     121
                                              0 COMMON     2     2      0
 ---------------------------------------------------------------------------------
 (4) _set_CELL_CLK_HIGH                                    2     2      0      88
                                              0 COMMON     2     2      0
 ---------------------------------------------------------------------------------
 (4) _get_CELL_DAT_VAL                                     6     4      2     275
                                              0 COMMON     6     4      2
 ---------------------------------------------------------------------------------
 (4) ___lldiv                                             14     6      8     314
                                              0 COMMON    14     6      8
 ---------------------------------------------------------------------------------
 (1) _SYSTEM_Initialize                                    0     0      0       0
              _OSCILLATOR_Initialize
             _PIN_MANAGER_Initialize
                     _WDT_Initialize
 ---------------------------------------------------------------------------------
 (2) _WDT_Initialize                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _PIN_MANAGER_Initialize                               0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _OSCILLATOR_Initialize                                0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 9
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _SYSTEM_Initialize
     _OSCILLATOR_Initialize
     _PIN_MANAGER_Initialize
     _WDT_Initialize
   _calc_percentage
     ___fldiv
       ___xxtofl (ARG)
     ___flmul
       __Umul8_16
       ___fldiv (ARG)
       ___xxtofl (ARG)
     ___fltol
       ___fldiv (ARG)
       ___flmul (ARG)
       ___xxtofl (ARG)
     ___xxtofl
     _get_scale_val
       ___lldiv
       _get_CELL_DAT_VAL
       _set_CELL_CLK_HIGH
       _set_CELL_CLK_LOW
     _scale_convert_gram
       ___fldiv
       ___fltol
       ___xxtofl
   _initialize
     _get_scale_val
     _initialize_digit
       _print_digit
         ___awdiv
         ___awmod
         _encode_digit
           ___awdiv (ARG)
         _set_segments
           _start_segment
             _CLK_SET_HIGH
             _CLK_SET_LOW
             _CLK_SET_OUTPUT
             _DIO_SET_HIGH
             _DIO_SET_LOW
             _DIO_SET_OUTPUT
           _stop_segment
             _CLK_SET_HIGH
             _CLK_SET_LOW
             _CLK_SET_OUTPUT
             _DIO_SET_HIGH
             _DIO_SET_LOW
             _DIO_SET_OUTPUT
           _write_byte
             _CLK_SET_HIGH
             _CLK_SET_LOW
             _CLK_SET_OUTPUT
             _DIO_SET_HIGH
             _DIO_SET_INPUT
             _DIO_SET_LOW
             _DIO_SET_OUTPUT
             _get_DIO_PIN_value
       _set_brigthness
     _lcd_backlight
       _lcd_cmd
         _i2c_start
           _i2c_wait
         _i2c_stop
         _i2c_write
           _i2c_wait
     _lcd_clear
       _lcd_print
         _command
           _lcd_cmd
       _lcd_set_cursor
         _command
     _lcd_init
       _write4bits
         _lcd_cmd
     _lcd_print
     _lcd_print_with
       _lcd_print
       _lcd_set_cursor
     _print_digit
     _sprintf
       _vfprintf
         _vfpfcnvrt
           _dtoa
             ___aodiv
             ___aomod
             _abs
               ___aomod (ARG)
             _pad
               _fputc
                 _putch
               _fputs
                 _fputc
               _strlen
           _fputc
           _strncmp
           _utoa
             ___lodiv
             ___lomod
             _pad
   _print_gram
     _lcd_clear
     _lcd_print_with
     _print_digit
     _sprintf
   _set_max_gram
     _calc_percentage
     _lcd_clear
     _lcd_print
     _sprintf

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             3F0      0       0       0        0.0%
EEDATA             100      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
BITCOMMON            E      0       0       1        0.0%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
COMMON               E      E       E       2      100.0%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
BITSFR2              0      0       0       3        0.0%
SFR2                 0      0       0       3        0.0%
STACK                0      0       0       3        0.0%
BITBANK0            50      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
BANK0               50     50      50       5      100.0%
BITSFR4              0      0       0       5        0.0%
SFR4                 0      0       0       5        0.0%
BITBANK1            50      0       0       6        0.0%
BITSFR5              0      0       0       6        0.0%
SFR5                 0      0       0       6        0.0%
BANK1               50     38      4D       7       96.2%
BITSFR6              0      0       0       7        0.0%
SFR6                 0      0       0       7        0.0%
BITBANK2            50      0       0       8        0.0%
BITSFR7              0      0       0       8        0.0%
SFR7                 0      0       0       8        0.0%
BANK2               50     1A      3E       9       77.5%
BITSFR8              0      0       0       9        0.0%
SFR8                 0      0       0       9        0.0%
BITBANK3            50      0       0      10        0.0%
BITSFR9              0      0       0      10        0.0%
SFR9                 0      0       0      10        0.0%
BANK3               50      0      20      11       40.0%
BITSFR10             0      0       0      11        0.0%
SFR10                0      0       0      11        0.0%
BITBANK4            50      0       0      12        0.0%
BITSFR11             0      0       0      12        0.0%
SFR11                0      0       0      12        0.0%
BANK4               50      0       0      13        0.0%
BITSFR12             0      0       0      13        0.0%
SFR12                0      0       0      13        0.0%
BITBANK5            50      0       0      14        0.0%
BITSFR13             0      0       0      14        0.0%
SFR13                0      0       0      14        0.0%
BANK5               50      0       0      15        0.0%
BITSFR14             0      0       0      15        0.0%
SFR14                0      0       0      15        0.0%
BITBANK6            50      0       0      16        0.0%
BITSFR15             0      0       0      16        0.0%
SFR15                0      0       0      16        0.0%
BANK6               50      0       0      17        0.0%
BITSFR16             0      0       0      17        0.0%
SFR16                0      0       0      17        0.0%
BITBANK7            50      0       0      18        0.0%
BITSFR17             0      0       0      18        0.0%
SFR17                0      0       0      18        0.0%
BANK7               50      0       0      19        0.0%
BITSFR18             0      0       0      19        0.0%
SFR18                0      0       0      19        0.0%
BITSFR19             0      0       0      20        0.0%
SFR19                0      0       0      20        0.0%
ABS                  0      0     109      20        0.0%
BITBANK8            50      0       0      21        0.0%
BITSFR20             0      0       0      21        0.0%
SFR20                0      0       0      21        0.0%
BANK8               50      0       0      22        0.0%
BITSFR21             0      0       0      22        0.0%
SFR21                0      0       0      22        0.0%
BITBANK9            50      0       0      23        0.0%
BITSFR22             0      0       0      23        0.0%
SFR22                0      0       0      23        0.0%
BANK9               50      0       0      24        0.0%
BITSFR23             0      0       0      24        0.0%
SFR23                0      0       0      24        0.0%
BITBANK10           50      0       0      25        0.0%
BITSFR24             0      0       0      25        0.0%
SFR24                0      0       0      25        0.0%
BANK10              50      0       0      26        0.0%
BITSFR25             0      0       0      26        0.0%
SFR25                0      0       0      26        0.0%
BITBANK11           50      0       0      27        0.0%
BITSFR26             0      0       0      27        0.0%
SFR26                0      0       0      27        0.0%
BANK11              50      0       0      28        0.0%
BITSFR27             0      0       0      28        0.0%
SFR27                0      0       0      28        0.0%
BITBANK12           30      0       0      29        0.0%
BITSFR28             0      0       0      29        0.0%
SFR28                0      0       0      29        0.0%
BANK12              30      0       0      30        0.0%
BITSFR29             0      0       0      30        0.0%
SFR29                0      0       0      30        0.0%
BITSFR30             0      0       0      31        0.0%
SFR30                0      0       0      31        0.0%
DATA                 0      0     109      31        0.0%
BITSFR31             0      0       0      32        0.0%
SFR31                0      0       0      32        0.0%


Microchip Technology PIC Macro Assembler V2.32 build 20210201212658 
Symbol Table                                                                                   Sat Jan 01 20:02:45 2022

                   ___fldiv@aexp 0039                     ___fldiv@bexp 0038                     ___fldiv@sign 0031  
         __size_of_start_segment 001A                      _SSPSTATbits 0214                               l31 1FC1  
                             l51 1E47                               l54 1E2E                               l57 1E1B  
                             l81 1E51                               l75 1EC0                               l84 1E31  
                             l78 1E4D                               l87 1E35                               l96 1EC5  
                             l99 1EC9                     ___awdiv@sign 0076                     lcd_clear@col 0029  
            __Umul8_16@word_mpld 0076                     lcd_clear@row 0028                              l102 1ED0  
                            l200 1E9E                              l210 161A                              l203 1F58  
                            l206 1F72                              l230 1EF7                              l223 11EF  
                            l224 1225                              l320 1F0E                              l225 1229  
                            l314 1F26                              l244 1E3D                              l236 1390  
                            l252 0A9C                              l261 1E67                              l341 1042  
                            l317 17FF                              l182 1E88                              l334 10F1  
                            l350 1FDC                              l191 1EA9                              l247 1EE3  
                            l335 1104                              l264 1E5C                              l344 1F3E  
                            l185 1E72                              l329 1180                              l194 1EB4  
                            l291 0D27                              l347 1282                              l268 0936  
                            l700 11D3                              l188 1E7D                              l197 1E93  
                            l373 16B6                              l381 152D                              l295 1756  
                            l384 1140                              l377 0C44                              l570 1335  
                            l634 0FEE                              l635 0FFF                              l647 0E00  
                            l735 158D                              l648 0E11                              l912 0347  
                            l728 15A2                              l913 0361                              l738 15A2  
                            l931 07CC                              l915 0370                              l907 02FB  
                            l774 088B                              l950 1FEF                              l687 144B  
                            l767 087B                              l943 07C0                              l784 14BC  
                            l952 1FFF                              l777 14AC                              l937 0748  
                            l891 021D                              l893 0379                              l981 0994  
                            l975 0959                              l977 09E2                              l988 09AE  
                            l997 106A                              l989 09BA                              _RC5 0075  
                            _RC6 0076                              _RC7 0077                              _abs 1F73  
                            _pad 1283                     ___awmod@sign 0076                              wreg 0009  
                   ___flmul@aexp 004C                     ___flmul@bexp 004D                      command@mode 0074  
                   ___flmul@sign 0047                     ___flmul@temp 0052                     ___flmul@prod 004E  
      get_scale_val@weight_count 002D                  ?_lcd_set_cursor 007A                   ??_encode_digit 007A  
                   ___fltol@exp1 005E                             l1110 0055                             l1031 12DB  
                           l1040 00DD                             l1121 0006                             l1026 129F  
                           l1034 009F                             l1043 014E                             l1035 00A8  
                           l1131 13EC                             ?_abs 0073                             l1060 0E1D  
                           l1029 12C1                             l1118 1093                             l1127 1FA6  
                           l1039 00C5                             l3000 08C9                             l1072 0EFE  
                           l1064 0E38                             l1057 01C5                             l3002 08D3  
                           l1091 10C9                             l3020 0913                             l3012 08F4  
                           l3100 141E                             l3030 0934                             l3014 08FE  
                           l3006 08E0                             l3102 142D                             l3110 143D  
                           l1095 1F8C                             l1079 0575                             l3024 091F  
                           l3008 08EA                             l3112 1442                             l3104 1431  
                           l3120 1182                             l3040 125B                             l3200 01D5  
                           l3050 12DC                             l3026 0929                             l3018 0909  
                           l3114 1447                             l3106 1432                             l3130 1196  
                           l3122 1186                             l3042 1264                             l3034 122B  
                           l1098 1F8C                             l3202 01DA                             l3210 01EA  
                           l3060 1305                             l3052 12EC                             l3108 1437  
                           l3140 11AC                             l3132 119C                             l3124 118B  
                           l3044 1268                             l3036 124A                             l3220 0200  
                           l3212 01F2                             l3204 01DF                             l3062 1317  
                           l3054 12EF                             l3070 132D                             l3150 11CA  
                           l3142 11B6                             l3134 119F                             l3126 118D  
                           l3118 1181                             l3046 1270                             l3038 1252  
                           l3310 0329                             l3302 0300                             l3222 0205  
                           l3230 0215                             l3214 01F7                             l3206 01E7  
                           l3064 131F                             l3056 12FA                             l3080 13F7  
                           l3152 11CF                             l3144 11BA                             l3136 11A4  
                           l3128 1191                             l2600 1E2F                             l3048 1279  
                           l3400 03B0                             l3320 0360                             l3304 0305  
                           l3312 032D                             l3232 0225                             l3240 023E  
                           l3224 020A                             l3216 01FB                             l3208 01E8  
                           l3066 1320                             l3058 12FE                             l3090 1408  
                           l3082 13F9                             l3074 13ED                             l3146 11BF  
                           l3138 11A8                             l2610 1E74                             l2602 1EC2  
                           l3410 03FC                             l3402 03C1                             l3322 0366  
                           l3314 033A                             l3306 030D                             l3250 0264  
                           l3242 0243                             l3234 0231                             l3226 0212  
                           l3218 01FF                             l3170 1561                             l3162 1543  
                           l3068 1327                             l3500 0C69                             l3092 140E  
                           l3084 13FD                             l3076 13EE                             l3148 11C5  
                           l2612 1EA0                             l2620 15A4                             l2604 1ECD  
                           l2700 0FBD                             l3412 0414                             l3404 03C9  
                           l3340 1FF6                             l3332 1FDE                             l3324 036A  
                           l3316 0355                             l3308 0311                             l3260 0289  
                           l3252 026C                             l3236 0235                             l3228 0213  
                           l3172 1565                             l3180 157D                             l3164 1556  
                           l3156 152E                             l3510 0C7A                             l3502 0C74  
                           l3094 1411                             l3086 1402                             l3078 13F2  
                           l2606 1E7F                             l2614 1EAB                             l2622 15AD  
                           l2702 0FCB                             l2710 0D33                             l3422 046F  
                           l3414 042D                             l3406 03E2                             l3342 1FFB  
                           l3334 1FE0                             l3326 036C                             l3318 0358  
                           l3270 02A8                             l3262 028D                             l3254 0274  
                           l3246 024C                             l3190 1597                             l3166 1557  
                           l3158 153A                             l3350 0941                             l3520 0CA5  
                           l3512 0C81                             l3504 0C78                             l3096 1416  
                           l3088 1406                             l2608 1E69                             l2616 1E8A  
                           l2800 1F40                             l2640 15D8                             l2632 15BF  
                           l2704 0FD0                             l2720 0D8D                             l2712 0D54  
                           l2560 0011                             l3424 0481                             l3432 04B5  
                           l3416 0436                             l3336 1FE7                             l3600 058F  
                           l3280 02C4                             l3272 02B0                             l3264 028E  
                           l3256 0276                             l3248 025C                             l3192 01C6  
                           l3168 155F                             l3360 096F                             l3352 0951  
                           l3522 0CA9                             l3514 0C85                             l3098 141A  
                           l2618 1E95                             l2802 1F5A                             l2650 15ED  
                           l2634 15C9                             l2626 15B1                             l2730 0DCF  
                           l2722 0D95                             l2714 0D5E                             l2706 0D28  
                           l2562 0016                             l3434 04CD                             l3442 051C  
                           l3426 0489                             l3418 0455                             l3338 1FEB  
                           l3610 05AA                             l3602 0597                             l3282 02CB  
                           l3290 02DB                             l3258 027B                             l3266 0295  
                           l3274 02B4                             l3194 01CC                             l3186 1584  
                           l3178 156D                             l3370 099B                             l3362 097A  
                           l3354 0961                             l3346 0938                             l3540 0CCB  
                           l3532 0CB5                             l3524 0CAE                             l3516 0C89  
                           l2652 15F7                             l2644 15DF                             l2628 15BB  
                           l2820 11EB                             l2804 11D5                             l2572 1EB5  
                           l2724 0D99                             l2732 0DDD                             l2716 0D7D  
                           l2708 0D29                             l2564 0020                             l2556 0007  
                           l2580 1070                             l2900 01B2                             l2740 081F  
                           l3460 056B                             l3444 052E                             l3452 0547  
                           l3436 04D6                             l3428 049B                             l3700 075A  
                           l3620 05C1                             l3612 05AE                             l3604 0599  
                           l3292 02DF                             l3284 02CF                             l3276 02BA  
                           l3268 02A7                             l3196 01D0                             l3188 1592  
                           l3380 09D0                             l3372 09A4                             l3364 0981  
                           l3348 093D                             l3550 0D0B                             l3542 0CD0  
                           l3534 0CB9                             l3526 0CB4                             l3518 0C8E  
                           l2662 160C                             l2646 15E9                             l2638 15CE  
                           l2830 1218                             l2822 11F3                             l2814 11DE  
                           l2806 11D9                             l3470 1EF1                             l2574 1EB5  
                           l2670 0F00                             l2734 0DE2                             l2726 0D9D  
                           l2718 0D8A                             l2566 003D                             l2558 000C  
                           l2582 107E                             l2590 1F97                             l2750 083A  
                           l2742 0822                             l2910 0E30                             l3454 054F  
                           l3446 0536                             l3438 0502                             l3390 037C  
                           l3710 0791                             l3702 075E                             l3622 05C3  
                           l3614 05AF                             l3606 05A1                             l3294 02E0  
                           l3286 02D0                             l3278 02C2                             l3198 01D4  
                           l3382 09D5                             l3374 09A8                             l3366 0985  
                           l3358 096A                             l3552 0D1F                             l3544 0CE0  
                           l3536 0CBD                             l2664 1616                             l2656 15FC  
                           l2832 121D                             l2824 11F7                             l2816 11E2  
                           l2808 11DD                             l3480 0A42                             l3472 09E5  
                           l2576 1EBC                             l2840 1F1B                             l3800 17A5  
                           l2680 0F58                             l2672 0F0A                             l2728 0DBF  
                           l2568 004D                             l2584 1083                             l2592 1FA0  
                           l2752 085C                             l2744 082A                             l2736 0808  
                           l2760 1459                             l2920 0E83                             l2912 0E40  
                           l2904 0E14                             l3448 0541                             l3392 038D  
                           l3720 07BB                             l3712 079F                             l3704 0776  
                           l3640 061F                             l3632 05DE                             l3624 05CB  
                           l3616 05B4                             l3608 05A6                             l3296 02E4  
                           l3288 02D7                             l3384 09D9                             l3376 09B2  
                           l3368 098D                             l3538 0CC6                             l3546 0CE4  
                           l3490 0C47                             l2658 1606                             l2826 11FB  
                           l2818 11E6                             l3482 0A55                             l3474 09F9  
                           l3466 1EE4                             l2842 1F1F                             l3570 10CC  
                           l3810 17D6                             l3802 17AD                             l2690 0F7E  
                           l2682 0F62                             l2674 0F2B                             l2578 106D  
                           l2586 1F8E                             l2850 007B                             l2754 086C  
                           l2746 082E                             l2738 0812                             l2770 148E  
                           l2762 145C                             l2930 0ECB                             l2922 0E87  
                           l2914 0E54                             l2906 0E19                             l3394 0395  
                           l3458 0552                             l3730 109E                             l3722 07BC  
                           l3714 07A8                             l3706 077A                             l3650 0667  
                           l3642 0639                             l3634 05EB                             l3626 05D0  
                           l3618 05B9                             l3298 02F8                             l3386 09DA  
                           l3378 09BC                             l3562 16EE                             l3740 1FA7  
                           l3548 0CEA                             l3492 0C4B                             l2828 1201  
                           l3484 0A70                             l3476 0A14                             l3468 1EE9  
                           l2596 1E48                             l2844 1F22                             l2836 1F10  
                           l3820 1F01                             l3580 1022                             l3572 10DC  
                           l3812 17DB                             l3804 17B2                             l2692 0F82  
                           l2684 0F6F                             l2676 0F35                             l2668 0EFF  
                           l2588 1F93                             l2780 1298                             l2860 00CD  
                           l2852 0081                             l2940 1391                             l2756 086D  
                           l2748 0832                             l2772 149E                             l2764 1464  
                           l2932 0ED8                             l2924 0E8B                             l2916 0E57  
                           l2908 0E2A                             l3396 039A                             l3732 10A1  
                           l3724 07C4                             l3716 07AA                             l3708 0787  
                           l3660 069D                             l3652 066E                             l3644 0646  
                           l3636 05F8                             l3628 05D5                             l3564 1725  
                           l3556 16B9                             l3750 1FB5                             l3742 1FAC  
                           l3494 0C54                             l3486 0A83                             l3478 0A27  
                           l2598 1E4B                             l2838 1F13                             l3822 1F0A  
                           l3582 102B                             l3574 10E7                             l3830 1153  
                           l3814 17EC                             l3806 17C3                             l2694 0F8A  
                           l2686 0F72                             l2678 0F54                             l2790 12C6  
                           l2782 129D                             l2774 1285                             l2870 00EA  
                           l2862 00D3                             l2854 00A4                             l2846 0058  
                           l2950 13B4                             l2942 1399                             l2766 1468  
                           l2758 144C                             l2934 0EE6                             l2918 0E5C  
                           l2926 0EB8                             l3398 039E                             l3734 10B9  
                           l3718 07B7                             l3670 06FE                             l3662 06B1  
                           l3654 067B                             l3646 0653                             l3638 0612  
                           l3590 057C                             l3566 1741                             l3558 16E5  
                           l3910 0AA6                             l3902 0A9D                             ?_pad 0024  
                           l3760 1E2C                             l3752 1FB8                             l3744 1FAF  
                           l3496 0C5C                             l3488 0A8F                             l3584 102F  
                           l3576 10FB                             l3840 117A                             l3832 115C  
                           l3824 1143                             l3568 1FC3                             l3816 17F0  
                           l3808 17C7                             l2696 0FAC                             l2688 0F7A  
                           l2792 12CF                             l2784 12A2                             l2776 128A  
                           l2880 0169                             l2872 0119                             l2864 00D8  
                           l2856 00B7                             l2848 0068                             l2952 13BD  
                           l2944 13A5                             l2768 146C                             l2928 0EBF  
                           l2936 0EEB                             l3736 10C2                             l3728 1096  
                           l3680 071D                             l3672 0705                             l3664 06BE  
                           l3656 0682                             l3648 065A                             l3592 0580  
                           l3920 0AAF                             l3912 0AA8                             l3904 0AA0  
                           l3754 1FBD                             l3746 1FB1                             l3762 1E18  
                           l3498 0C5E                             l2970 1370                             l2962 1338  
                           l3818 1EF9                             l3586 1039                             l3578 1021  
                           l3834 1161                             l3826 1145                             l3842 1F28  
                           l2698 0FBC                             l2786 12AE                             l2778 1293  
                           l2890 0195                             l2882 0176                             l2874 011D  
                           l2866 00E2                             l2858 00BD                             l2954 13C6  
                           l3850 104F                             l3690 0731                             l3682 0724  
                           l3674 0711                             l3666 06D2                             l3658 0696  
                           l3594 0584                             l3930 0ACB                             l3922 0AB1  
                           l3914 0AAA                             l3906 0AA2                             l3756 1E28  
                           l3748 1FB3                             l2980 1E53                             l2972 1376  
                           l2964 135A                             l3780 1ED3                             l3836 116B  
                           l3828 1147                             l3844 1F35                             l2796 1F73  
                           l2788 12B3                             l2892 019A                             l2884 0184  
                           l2876 0121                             l2868 00E5                             l2956 13CC  
                           l2948 13A8                             l3852 1051                             l3860 161D  
                           l3692 0745                             l3676 0718                             l3684 0728  
                           l3668 06E7                             l3596 0585                             l3588 0576  
                           l3772 0BA7                             l3764 0B66                             l3940 0AEF  
                           l3932 0ACF                             l3924 0AB2                             l3916 0AAB  
                           l3908 0AA3                             l3758 1E2B                             l2990 08AA  
                           l2982 088D                             l2974 1E36                             l2966 135D  
                           l3782 1EDD                             l3838 116F                             l3790 177B  
                           l2798 1F80                             l2894 01A0                             l2878 015C  
                           l2886 0189                             l2958 13DC                             l3854 1062  
                           l3846 1045                             l3870 16A9                             l3862 162E  
                           l3686 072C                             l3678 071C                             l3598 058A  
                           l3774 0BCA                             l3766 0B90                             l3950 0B00  
                           l3942 0AF3                             l3934 0ADE                             l3926 0AB3  
                           l3918 0AAC                             l2984 0896                             l2968 136B  
                           l3792 1782                             l3784 1758                             l2896 01A5  
                           l2888 0190                             l3848 104D                             l3864 163E  
                           l3872 14BF                             l3696 074D                             l3688 072D  
                           l3768 0BA0                             l3880 1125                             l3960 0B28  
                           l3952 0B04                             l3944 0AF7                             l3936 0AE3  
                           l3928 0AC2                             l3858 1E3E                             l2994 08B4  
                           l2978 1E5E                             l3794 178D                             l3786 1764  
                           l2898 01A9                             l3866 1686                             l3874 151C  
                           l3698 0752                             l3778 0BD2                             l3882 112E  
                           l3962 0B35                             l3954 0B09                             l3946 0AF8  
                           l3938 0AE9                             l2996 08BE                             l2988 08A0  
                           l3796 1795                             l3788 176C                             l3868 16A0  
                           l3884 113B                             l3876 1107                             l3964 0B42  
                           l3956 0B16                             l3948 0AFC                             l3798 17A1  
                           l3878 1119                             l3966 0B47                             l3958 0B23  
                           l3968 0B54                             STR_1 204D                             STR_2 202B  
                           STR_3 2000                             STR_4 2036                             STR_5 201D  
                           STR_6 203E                             STR_7 200F                             STR_8 2044  
                           u3000 00D8                             u3001 00D7                             u3010 015C  
                           u3011 015B                             u3020 0169                             u3100 0E2A  
                           u3021 0168                             u3101 0E29                             _LATA 010C  
                           u3030 0176                             u3110 0EBF                             _LATB 010D  
                           u3031 0175                             u3015 0158                             u3111 0EBE  
                           _LATC 010E                             u2400 1EC0                             u3040 0184  
                           u3200 13DC                             u3120 0ECB                             u4000 0941  
                           u2401 1EBF                             u3041 0183                             u3201 13DB  
                           u3121 0ECA                             u3105 0E26                             u4001 0940  
                           _LATE 0110                             u3210 1376                             u2410 1093  
                           u3050 0189                             u3130 0ED8                             u4010 0961  
                           u3211 1375                             u2411 1092                             u3051 0188  
                           u3035 0172                             u3131 0ED7                             u4011 0960  
                           u3220 0896                             u2500 15D8                             u2420 1FA0  
                           u3060 0190                             u3140 0EE6                             u4100 09C6  
                           u3221 0895                             u2501 15D7                             u2421 1F9F  
                           u3061 018F                             u3045 0180                             u3141 0EE5  
                           u3310 12EC                             u3230 08AA                             u2510 15E9  
                           u2430 1E51                             u2350 000C                             u3070 0195  
                           u3150 0EEB                             u4110 09D5                             u4030 0980  
                           u3311 12EB                             u3231 08A9                             u2511 15E8  
                           u2431 1E50                             u2351 000B                             u3071 0194  
                           u3151 0EEA                             u3135 0ED4                             u4111 09D4  
                           u4031 097F                             u3240 08BE                             u3400 140E  
                           u2520 15F7                             u2440 1E35                             u2600 0F6F  
                           u2360 0011                             u3080 01A0                             u3160 13A5  
                           u4200 052E                             u4120 09D9                             u3241 08BD  
                           u3401 140D                             u2521 15F6                             u2441 1E34  
                           u3305 123F                             u2601 0F6E                             u2361 0010  
                           u3081 019F                             u3161 13A4                             u3145 0EE2  
                           u4201 052D                             u4121 09D8                             u4105 09C2  
                           u4025 0974                             u3330 12FE                             u3250 08D3  
                           u2530 1606                             u4210 1EE9                             u2450 1EC9  
                           u2610 0F82                             u2370 0020                             u3170 13BD  
                           u3090 0E19                             u4130 038D                             u4050 099A  
                           u3331 12FD                             u3251 08D2                             u2531 1605  
                           u4211 1EE8                             u2451 1EC8                             u2611 0F81  
                           u2371 001F                             u3171 13BC                             u3091 0E18  
                           u4131 038C                             u4051 0999                             u3260 08EA  
                           u4220 0C69                             u3420 141E                             u3500 119C  
                           u2540 1616                             u2460 1ECD                             u4300 1042  
                           u2620 0FAC                             u2700 0D8A                             u2380 003D  
                           u3180 13C6                             u4140 03B0                             u3325 12F0  
                           u3261 08E9                             u4221 0C68                             u3421 141D  
                           u3501 119B                             u2541 1615                             u2461 1ECC  
                           u4301 1041                             u2621 0FAB                             u2701 0D89  
                           u2381 003C                             u3181 13C5                             u4141 03AF  
                           u4045 098E                             u3350 1317                             u3270 08FE  
                           u4230 0C74                             u2470 15AD                             u2390 1EBC  
                           u2630 0FCB                             u2550 0F0A                             u2710 0D9D  
                           u3190 13CC                             u4150 03C1                             u4310 0584  
                           u4070 09A8                             u3351 1316                             u3271 08FD  
                           u4231 0C73                             u3415 1412                             u2471 15AC  
                           u2391 1EBB                             u2631 0FCA                             u2551 0F09  
                           u2711 0D9C                             u3191 13CB                             u4151 03C0  
                           u4311 0583                             u4071 09A7                             u3280 0913  
                           u3440 142D                             u3520 11AC                             u2480 15BB  
                           u2640 0FD0                             u2720 0DBF                             u2800 087B  
                           u4160 0414                             u4320 058A                             u3600 156C  
                           u4080 09AE                             u3345 12FF                             u3281 0912  
                           u3441 142C                             u3521 11AB                             u2481 15BA  
                           u2641 0FCF                             u2625 0FA8                             u2721 0DBE  
                           u2385 0039                             u2801 087A                             u4161 0413  
                           u4321 0589                             u3601 156B                             u4081 09AD  
                           u4065 099E                             u3370 132D                             u3290 0929  
                           u4250 0CB4                             u3530 11B6                             u2490 15C9  
                           u2570 0F35                             u2730 0DDD                             u2810 1459  
                           u4170 042D                             u4410 06DD                             u4330 058F  
                           u4090 09B2                             u3371 132C                             u3355 1313  
                           u3291 0928                             u4251 0CB3                             u3435 141F  
                           u3531 11B5                             u3515 11A0                             u2491 15C8  
                           u2571 0F34                             u2731 0DDC                             u2811 1458  
                           u4171 042C                             u4331 058E                             u4091 09B1  
                           u4260 0CD0                             u3460 143D                             u3380 13F2  
                           u2900 11E6                             u2740 0DE2                             u2660 0D33  
                           u2820 146C                             u4180 0481                             u4500 074C  
                           u4420 06F4                             u4340 05AE                             u3700 01FF  
                           u3620 157C                             u3365 1321                             u4261 0CCF  
                           u4245 0C7B                             u3461 143C                             u3445 1429  
                           u3381 13F1                             u2901 11E5                             u2741 0DE1  
                           u2725 0DBB                             u2661 0D32                             u2821 146B  
                           u4181 0480                             u4501 074B                             u4405 0683  
                           u4341 05AD                             u3701 01FE                             u3621 157B  
                           u4270 0CEA                             u3470 1442                             u3390 13FD  
                           u3550 11C5                             u2910 1201                             u2590 0F5F  
                           u2830 148E                             u4190 04CD                             u4510 0752  
                           u4350 05B4                             u3710 0205                             u3630 1583  
                           u4271 0CE9                             u3471 1441                             u3455 1433  
                           u3391 13FC                             u3551 11C4                             u3535 11B2  
                           u2911 1200                             u2831 148D                             u4191 04CC  
                           u4511 0751                             u4415 06D9                             u4351 05B3  
                           u3711 0204                             u3631 1582                             u3615 156E  
                           u3560 11CA                             u3480 1186                             u2920 121D  
                           u4600 116B                             u2680 0D5E                             u2760 080F  
                           u2840 14AC                             u4520 075E                             u4360 05B9  
                           u3800 02A7                             u3720 020A                             u4280 16E5  
                           u3561 11C9                             u3545 11BB                             u3481 1185  
                           u2921 121C                             u4601 116A                             u2681 0D5D  
                           u2841 14AB                             u4521 075D                             u4425 06F0  
                           u4361 05B8                             u3801 02A6                             u3721 0209  
                           u4281 16E4                             u3490 1191                             u4290 10E7  
                           u4610 117A                             u2850 128A                             u2930 0073  
                           u2770 081F                             u4530 076C                             u4450 071C  
                           u4370 05D0                             u3810 02BA                             u3730 0225  
                           u3650 1592                             u3570 153A                             u3491 1190  
                           u4291 10E6                             u4611 1179                             u2851 1289  
                           u2931 0071                             u2771 081E                             u2835 148A  
                           u4451 071B                             u4435 06FF                             u4371 05CF  
                           u3811 02B9                             u3731 0224                             u3651 1591  
                           u3571 1539                             u2860 1298                             u2940 0074  
                           u2780 0832                             u4540 0787                             u4380 05D5  
                           u3900 0305                             u3820 02C2                             u3740 0243  
                           u3660 1597                             u3580 1550                             u2861 1297  
                           u2781 0831                             u4541 0786                             u4445 0712  
                           u4381 05D4                             u3901 0304                             u3821 02C1  
                           u3805 02A3                             u3741 0242                             u3661 1596  
                           u3645 1585                             u4285 16E1                             u2870 12C1  
                           u2950 0081                             u2790 085C                             u4550 079F  
                           u4470 072C                             u3910 0311                             u3750 027B  
                           u3670 01D4                             u3590 1565                             u2871 12C0  
                           u2951 0080                             u2791 085B                             u4551 079E  
                           u4535 0768                             u4471 072B                             u3911 0310  
                           u3751 027A                             u3671 01D3                             u3591 1564  
                           u2880 12C6                             u4560 07BB                             u4480 0731  
                           u3920 031F                             u3840 02CF                             u3680 01DA  
                           u4640 0ABE                             u2881 12C5                             u4561 07BA  
                           u4545 0783                             u4481 0730                             u4465 071E  
                           u3841 02CE                             u3681 01D9                             u3585 154C  
                           u2890 1F80                             u2970 00A4                             u4570 10C2  
                           u4490 0745                             u3930 033A                             u3690 01DF  
                           u4650 0ADA                             u2891 1F7F                             u2875 12BD  
                           u2971 00A3                             u2795 0858                             u4571 10C1  
                           u4555 079B                             u4491 0744                             u4395 0654  
                           u3931 0339                             u3835 02C5                             u3691 01DE  
                           u4707 0B3B                             u2980 00B7                             u3940 0355  
                           u3860 02DF                             u3780 028D                             u4580 0BA0  
                           u4660 0B09                             u2981 00B6                             u3941 0354  
                           u3925 031B                             u3861 02DE                             u3781 028C  
                           u3765 027C                             u4581 0B9F                             u4717 0B5A  
                           u4661 0B08                             u2990 00D3                             u3950 036A  
                           u3870 02E4                             u4590 0BCA                             u4670 0B28  
                           u4807 17D2                             u4727 175D                             u2895 1F7C  
                           u2991 00D2                             u3951 0369                             u3935 0336  
                           u3871 02E3                             u3855 02D1                             u3775 0283  
                           u4591 0BC9                             u4671 0B27                             u3960 1FEB  
                           u3880 02F8                             u4680 0B47                             u4817 17DC  
                           u4737 176F                             u2985 00B3                             u3961 1FEA  
                           u3945 0351                             u3881 02F7                             u4681 0B46  
                           u3890 02FF                             u4907 0CBA                             u4827 17ED  
                           u4747 177E                             u3891 02FE                             u3795 028F  
                           u4595 0BC6                             u3980 1FFB                             u4917 0CC3  
                           u4837 17FB                             u4757 178B                             u3981 1FFA  
                           u3990 093D                             u4847 1265                             u4767 1796  
                           u3975 1FF0                             u3991 093C                             u4857 1F0B  
                           u4777 17A2                             u4697 0B1C                             u4867 1F23  
                           u4787 17B3                             u4877 0C75                             u4797 17C4  
                           u4887 0C86                             u4897 0CA6                    encode_digit@p 007A  
                           _WPUB 020D                             _WPUE 0210                             abs@a 0073  
                           _dbuf 01A0                  ??_lcd_backlight 0073                             _main 0A9D  
                           _dtoa 0056                             _prec 00E0                    write_byte@ack 0074  
                           _nout 00DC                             pad@i 0027                             pad@p 0025  
                           fsr0h 0005                             fsr1h 0007                             indf0 0000  
                           fsr0l 0004                             indf1 0001                             fsr1l 0006  
                           pad@w 0029                             btemp 007E                             _utoa 0E12  
                   print_digit@p 002A                             start 0002                  ___fldiv@new_exp 0032  
                ?_lcd_print_with 0026                initialize_digit@p 002D                            ??_abs 0075  
                          ??_pad 007C   __size_of_OSCILLATOR_Initialize 0007    __end_of_OSCILLATOR_Initialize 1E2F  
          __size_of_stop_segment 001A                    ___fltol@sign1 005D                  __end_of___aodiv 1000  
                          ?_main 0070                            ?_dtoa 0030                  __end_of___aomod 0E12  
                __end_of___fldiv 037A                  __end_of___awdiv 144C                            STR_10 2044  
                          STR_12 2047                            STR_14 2047                            STR_17 204A  
                          STR_19 204A                  __end_of___awmod 11D4                  __end_of___flmul 07CD  
                __end_of___fltol 15A3                  __end_of___lldiv 1336                            ?_utoa 0030  
                __end_of___lodiv 088C                  ___awdiv@divisor 0070                  __end_of___lomod 14BD  
                ___awdiv@counter 0075                     vfpfcnvrt@fmt 004E                     vfpfcnvrt@llu 0064  
                          _TRISA 008C                            _TRISB 008D                            _TRISC 008E  
                          _TRISE 0090                     main@loadcell 0142           scale_convert_gram@temp 0067  
                   lcd_print@cmd 0020                     lcd_print@str 007A                  __end_of_lcd_cmd 1F27  
                __end_of_command 1283                            _flags 00E2                   _WDT_Initialize 1E18  
                          _fputc 0007                            _fputs 106B                    _start_segment 1F3F  
                 write_byte@data 0075                            pad@fp 002B                            _width 00DE  
                          _putch 0006                            dtoa@d 0030                            dtoa@i 004C  
                          dtoa@n 0044                            dtoa@p 003D                            dtoa@s 0042  
                          dtoa@w 0040         __size_of_calc_percentage 00E1                            utoa@d 0030  
                          utoa@i 0045                            utoa@n 003D                            utoa@p 0038  
                          utoa@w 003B                            status 0003               _scale_convert_gram 16B7  
                          wtemp0 007E                  __end_of_sprintf 106B       __size_of_set_CELL_CLK_HIGH 000B  
                __end_of_strncmp 13ED                 ___lodiv@dividend 0028                  ??_get_scale_val 0024  
           __end_of_CLK_SET_HIGH 1E73                  __initialization 07CD                     _stop_segment 1F59  
            ?_scale_convert_gram 0070                     __end_of_main 0B64                     __end_of_dtoa 01C6  
                  command@lownib 0078                     __end_of_utoa 0EFF             __end_of_DIO_SET_HIGH 1E94  
               __end_of_i2c_wait 1EC1                 __end_of_i2c_stop 1E36                           ??_main 00D6  
                         ??_dtoa 0038                           ??_utoa 007D             __size_of_CLK_SET_LOW 000B  
               ___lodiv@quotient 0071           __end_of_WDT_Initialize 1E1C             __size_of_DIO_SET_LOW 000B  
           ??_scale_convert_gram 005F                  set_segments@pos 007A                   ?_start_segment 0070  
                DIO_SET_OUTPUT@p 0071                get_CELL_DAT_VAL@p 0075                           ?_fputc 0070  
                         ?_fputs 0078                 ___awdiv@dividend 0072                           _APFCON 011D  
                         _ANSELA 018C                           ?_putch 0070                           _ANSELB 018D  
                         _BORCON 0116                           _OSCCON 0099                set_CELL_CLK_LOW@p 0071  
                         u256lld 0F29                           u265lld 0FEE                           _WDTCON 0097  
                         u258lld 0F54                           u275lld 0E00                           u267lld 0D52  
                         u269lld 0D7D                           _SSPADD 0212                           u296lld 009F  
                         _SSPBUF 0211               __size_of_i2c_start 000A                 __end_of___xxtofl 09E3  
             __size_of_i2c_write 0010                ?_initialize_digit 0070         __end_of_get_CELL_DAT_VAL 0937  
             ??_initialize_digit 002C                     vfprintf@cfmt 00A3                 __end_of_lcd_init 1800  
                      ??___aodiv 0070                        ??___aomod 0070                        ??___fldiv 0028  
                      ??___awdiv 0074                        ??___awmod 0074                        ??___flmul 0042  
                      ??___fltol 0058                        ??___lldiv 0078                        ??___lodiv 0070  
                      ??___lomod 0070             __end_of_encode_digit 1E3E                 calc_percentage@p 00A0  
               ___awdiv@quotient 0077                  ___awmod@divisor 0070                  ___awmod@counter 0075  
                         pad@buf 0024                        ??_lcd_cmd 0072                           dtoa@fp 003F  
                      ??_command 0075                           _strlen 1F8D                           fputc@c 0070  
                         fputs@c 0020                           fputs@i 0021                           fputs@s 0023  
             __size_of__Umul8_16 0023                  ?_WDT_Initialize 0070                      initialize@p 00C4  
                         putch@c 0070                   print_digit@tmp 002B                 __end_of_vfprintf 10CA  
                         utoa@fp 003A                        ??_sprintf 00AB          __size_of_set_brigthness 0014  
                      ??_strncmp 0076                     ?_print_digit 007D                     ___xxtofl@arg 007A  
                   ___xxtofl@exp 0079                _SYSTEM_Initialize 1E3E                     ___xxtofl@val 0070  
        __end_of__initialization 07FD               ?_SYSTEM_Initialize 0070                   print_gram@row1 00B5  
                 print_gram@row2 00C5          __size_of_CLK_SET_OUTPUT 000B                       ___fltol@f1 0054  
      __size_of_set_CELL_CLK_LOW 000B                   command@highnib 0077         set_brigthness@brightness 0070  
                 __pcstackCOMMON 0070                ??_calc_percentage 006C                     __pidataBANK1 0800  
                   __pidataBANK2 1003              ??_SYSTEM_Initialize 0070                    __end_of_fputc 0056  
                  __end_of_fputs 1094                    __end_of_putch 0007                   get_scale_val@i 0031  
                 get_scale_val@j 002C                   get_scale_val@p 0032            __end_of_DIO_SET_INPUT 1EB5  
              __end_of_i2c_start 1E52                 ??_lcd_set_cursor 007C                __end_of_i2c_write 1ED1  
                 _OPTION_REGbits 0095                  ??_start_segment 0072               __size_of_lcd_clear 0040  
             __size_of_lcd_print 0024                          ??_fputc 0073        __end_of_SYSTEM_Initialize 1E48  
                        ??_fputs 0079                          ??_putch 0070                       __pbssBANK1 00D8  
                     __pbssBANK2 0156                       __pbssBANK3 01A0            __size_of_CLK_SET_HIGH 000B  
               ??_lcd_print_with 002A                        ?_i2c_wait 0070                        ?_i2c_stop 0070  
              lcd_print_with@col 0028                _get_DIO_PIN_value 15A3                lcd_print_with@row 0029  
              lcd_print_with@str 0026          __size_of_DIO_SET_OUTPUT 000B               ?_get_DIO_PIN_value 0070  
          __size_of_DIO_SET_HIGH 000B                __end_of__Umul8_16 2000                       __pmaintext 0A9D  
            ??_get_DIO_PIN_value 0070                          ?_strlen 0070               set_CELL_CLK_HIGH@p 0071  
             set_segments@length 0079                        ?___xxtofl 0070                     _CLK_SET_HIGH 1E68  
             __size_of_vfpfcnvrt 01FC                          _OSCTUNE 0098                          _SSPCON1 0215  
                        _SSPCON2 0216                        ?_lcd_init 0070                          _SSPSTAT 0214  
               ___lomod@dividend 0028        __end_of_get_DIO_PIN_value 161B                     _DIO_SET_HIGH 1E89  
                     ??_i2c_wait 0070                       ??_i2c_stop 0070             set_max_gram@max_gram 00B3  
          __end_of_lcd_backlight 1F0F            __size_of_encode_digit 0008                    ?_set_max_gram 00B3  
              __end_of_lcd_clear 1181                          ___aodiv 0EFF                __end_of_lcd_print 1043  
                        ___aomod 0D28                          ___fldiv 01C6                          ___awdiv 13ED  
                        ___awmod 1181                          ___flmul 0576                          ___fltol 152E  
                        ___lldiv 12DC                          ___lodiv 0808                          ___lomod 144C  
                      ?_vfprintf 006D                    ?_set_segments 0078                       _initialize 161B  
                        __ptext1 1105                          __ptext2 0B64                          __ptext3 16B7  
                        __ptext4 0937                          __ptext5 152E                          __ptext6 01C6  
                        __ptext7 0576                          __ptext8 1FDD                          __ptext9 14BD  
                        _lcd_cmd 1F0F                          _command 122A                  __size_of_strlen 001A  
          _OSCILLATOR_Initialize 1E28                     __size_of_abs 001A                     __size_of_pad 0059  
                     ??___xxtofl 0074                 ___awmod@dividend 0072                          _segdata 012C  
       ??_PIN_MANAGER_Initialize 0070                   _set_brigthness 1EE4                          main@lcd 013C  
     __size_of_SYSTEM_Initialize 000A                          _sprintf 1043                          clrloop0 1E1D  
                     ??_lcd_init 0076                          _strncmp 1391             end_of_initialization 07FD  
                   _encode_digit 1E36               clear_segment@F2810 00D8                          fputc@fp 0072  
                        init_ram 1E22                          fputs@fp 0078                          initloop 1E23  
                 _CLK_SET_OUTPUT 1E7E             __size_of_print_digit 00BA             set_segments@segments 0078  
                ___lldiv@divisor 0070                   ??_set_max_gram 007E                  ___lldiv@counter 007D  
          __end_of_get_scale_val 0D28                 _set_CELL_CLK_LOW 1E5D                ?_get_CELL_DAT_VAL 0070  
              __end_of_vfpfcnvrt 0576                  print_digit@data 0026               ??_get_CELL_DAT_VAL 0072  
                 ??_set_segments 007B                       ??_vfprintf 00A0                    ??_CLK_SET_LOW 0070  
                        strlen@a 0073                          strlen@s 0074                 ??_WDT_Initialize 0070  
                      _PORTBbits 000D                    ??_DIO_SET_LOW 0070        __size_of_initialize_digit 0013  
                   _m_brightness 00E4                       _print_gram 14BD                    i2c_write@data 0070  
         __end_of_set_brigthness 1EF8        lcd_set_cursor@row_offsets 0020                    ___xxtofl@sign 0078  
                     lcd_cmd@cmd 0071      __size_of_scale_convert_gram 00A0                      ___fldiv@grs 0034  
                    ___fldiv@rem 002D                       lcd_clear@p 002A                 initialize@valstr 00B4  
     __size_of_get_DIO_PIN_value 0078                  _calc_percentage 0B64           __end_of_CLK_SET_OUTPUT 1E89  
                     main@tm1637 0140                      ___flmul@grs 0048                       command@val 0073  
                 _DIO_SET_OUTPUT 1E9F                       lcd_print@p 0021                      print_gram@p 00D5  
                     _write4bits 1FC2           set_max_gram@empty_gram 00B5                      vfpfcnvrt@ap 004F  
                    vfpfcnvrt@fp 006C                      vfpfcnvrt@ll 005C                       _write_byte 11D4  
                    ?_initialize 0070           ?_OSCILLATOR_Initialize 0070                   __end_of_strlen 1FA7  
            start_initialization 07CD                  ___lodiv@divisor 0020                  ?_set_brigthness 0070  
            __end_of_CLK_SET_LOW 1E7E                  ___lodiv@counter 0079  __size_of_PIN_MANAGER_Initialize 001B  
                    __end_of_abs 1F8D                        _i2c_start 1E48                      __end_of_pad 12DC  
                      _i2c_write 1EC1              __end_of_DIO_SET_LOW 1E9F                   DIO_SET_INPUT@p 0071  
                ?_CLK_SET_OUTPUT 0070           __end_of_DIO_SET_OUTPUT 1EAA                __size_of_i2c_wait 000C  
              __size_of_i2c_stop 0007                      vfprintf@fmt 006D                        __Umul8_16 1FDD  
        get_scale_val@weight_add 0028                      __pdataBANK1 00E5                      __pdataBANK2 0120  
                       ??_strlen 0072                      ?_print_gram 0070                        ___fldiv@a 0020  
                      ___fldiv@b 0024              lcd_set_cursor@F2781 00E5                        ___flmul@a 003E  
                      ___flmul@b 003A                        ___latbits 0003          __end_of_calc_percentage 0C45  
                  __pcstackBANK0 0020                    __pcstackBANK1 00A0                    __pcstackBANK2 013C  
               ___aodiv@dividend 0028             __end_of_set_max_gram 1141                       ?_i2c_start 0070  
                     ?_i2c_write 0070            __end_of_start_segment 1F59                __size_of___xxtofl 00AC  
           __end_of_set_segments 1391                  ?_DIO_SET_OUTPUT 0070                __size_of_lcd_init 00A9  
            __size_of_initialize 009C           __size_of_DIO_SET_INPUT 000B                 set_brigthness@on 0071  
         _PIN_MANAGER_Initialize 1FA7                        _dtoa$1262 003B                    ?_stop_segment 0070  
                    ?_write4bits 0073                         ?___aodiv 0020                         ?___aomod 0020  
                       ?___fldiv 0020                         ?___awdiv 0070                 ___aodiv@quotient 0073  
                       ?___awmod 0070                         ?___flmul 003A                         ?___fltol 0054  
                       ?___lldiv 0070                         ?___lodiv 0020                         ?___lomod 0020  
                     ?__Umul8_16 0070                        _lcd_clear 1141                      _CLK_SET_LOW 1E73  
                    ?_write_byte 0072                        _lcd_print 101F                         ?_lcd_cmd 0071  
              __size_of_vfprintf 0036                 _initialize_digit 1ED1                         ?_command 0073  
                ___lomod@divisor 0020                      _DIO_SET_LOW 1E94                  ___lomod@counter 0071  
       __end_of_set_CELL_CLK_LOW 1E68                         ?_sprintf 00A5                   __size_of_fputc 004F  
                 __size_of_fputs 0029                         ?_strncmp 0070                   __size_of_putch 0001  
        __size_of_lcd_set_cursor 003B                      write4bits@p 0075     get_scale_val@scale_avg_count 0020  
                  CLK_SET_HIGH@p 0071                        clear_ram0 1E1C                  lcd_set_cursor@p 0025  
            __size_of_print_gram 0071                   ??_stop_segment 0072                        main@F2851 0136  
                      main@F2853 013A                        main@F2855 0156                        main@F2849 0120  
        __size_of_lcd_print_with 0018                    set_max_gram@p 00C7                       ?_lcd_clear 0070  
              encode_digit@digit 0079                        _vfpfcnvrt 037A                       ?_lcd_print 007A  
                      lcd_init@p 0078                    _DIO_SET_INPUT 1EAA                        main@drink 014E  
            scale_convert_gram@p 006B                      write_byte@b 0072                      write_byte@i 0076  
                    write_byte@p 0077        __size_of_get_CELL_DAT_VAL 00AB           __size_of_lcd_backlight 0017  
               ?_calc_percentage 0070                      ??_i2c_start 0070                      ??_i2c_write 0070  
            __size_of_write4bits 001B                    ??_print_digit 0022                         _i2c_wait 1EB5  
                  DIO_SET_HIGH@p 0071                         _i2c_stop 1E2F              __size_of_write_byte 0056  
                  set_segments@k 0020                    set_segments@p 0021                       vfprintf@ap 006F  
                     vfprintf@fp 00A2                    stop_segment@p 0072          ??_OSCILLATOR_Initialize 0070  
                    ??__Umul8_16 0072                 __size_of___aodiv 0101                 __size_of___aomod 00EA  
               __size_of___fldiv 01B4                 __size_of___awdiv 005F                 __size_of___awmod 0053  
               __size_of___flmul 0257                 __size_of___fltol 0075                 __size_of___lldiv 005A  
               __size_of___lodiv 0084                 __size_of___lomod 0071                       ?_vfpfcnvrt 004E  
                   ??_initialize 00B3                 ??_set_brigthness 0072                  ___aodiv@divisor 0020  
          __size_of_set_max_gram 003C                  ___aodiv@counter 0071                   ?_DIO_SET_INPUT 0070  
               __size_of_lcd_cmd 0018                 __size_of_command 0059                       sprintf@fmt 00A5  
     __end_of_scale_convert_gram 1757                         ___xxtofl 0937                  lcd_print_with@p 007D  
                set_brigthness@p 0073            __size_of_set_segments 005B                 ??_CLK_SET_OUTPUT 0070  
         __size_of_get_scale_val 00E3                         __ptext10 161B                         __ptext11 1043  
                       __ptext20 1F8D                         __ptext12 1094                         __ptext21 106B  
                       __ptext13 037A                         __ptext30 1141                         __ptext22 0007  
                       __ptext14 0E12                         __ptext31 10CA                         __ptext23 0006  
                       __ptext15 144C                         __ptext40 1ED1                         __ptext32 101F  
                       __ptext24 1F73                         __ptext16 0808                         __ptext41 1EE4  
                       __ptext33 122A                         __ptext25 0D28                         __ptext17 1391  
                       __ptext50 1E94                         __ptext42 09E3                         __ptext34 1EF8  
                       __ptext26 0EFF                         __ptext18 0056                         __ptext51 1E89  
                       __ptext43 1336                         __ptext35 1F0F                         __ptext27 1F27  
                       __ptext19 1283                         __ptext60 1E52                         __ptext52 1E7E  
                       __ptext44 11D4                         __ptext36 1EC1                         __ptext28 1757  
                       __ptext61 088C                         __ptext53 1E73                         __ptext45 15A3  
                       __ptext37 1E2F                         __ptext29 1FC2                         __ptext62 12DC  
                       __ptext54 1E68                         __ptext46 1EAA                         __ptext38 1E48  
                       __ptext63 1E3E                         __ptext55 1E36                         __ptext47 1F59  
                       __ptext39 1EB5                         __ptext64 1E18                         __ptext56 1181  
                       __ptext48 1F3F                         __ptext65 1FA7                         __ptext57 13ED  
                       __ptext49 1E9F                         __ptext66 1E28                         __ptext58 0C45  
                       __ptext59 1E5D                         _lcd_init 1757                 __size_of_sprintf 0028  
               __size_of_strncmp 005C               set_max_gram@valstr 00B7                    __size_of_main 00C7  
                  __size_of_dtoa 0170                    __size_of_utoa 00ED               __end_of_initialize 16B7  
                  write4bits@val 0073                     CLK_SET_LOW@p 0071              __end_of_print_digit 0A9D  
                  _lcd_backlight 1EF8                     _set_max_gram 1105                         lcd_cmd@p 0072  
                       _vfprintf 1094                         command@p 0079                      ??_lcd_clear 0026  
                   _set_segments 1336                      ??_lcd_print 007C                 ___aomod@dividend 0028  
                   ??_print_gram 00B3                    ?_CLK_SET_HIGH 0070                     DIO_SET_LOW@p 0071  
              print_digit@number 007D             __end_of_stop_segment 1F73                 ??_DIO_SET_OUTPUT 0070  
                CLK_SET_OUTPUT@p 0071                   __pstringtext10 204D                   __pstringtext11 0000  
        __size_of_WDT_Initialize 0004                    ?_DIO_SET_HIGH 0070                   _lcd_set_cursor 10CA  
              lcd_set_cursor@cmd 0024                lcd_set_cursor@col 007A                        sprintf@ap 00AC  
              lcd_set_cursor@row 007B                 ___lldiv@dividend 0074          ?_PIN_MANAGER_Initialize 0070  
             get_DIO_PIN_value@p 0071         __end_of_initialize_digit 1EE4                 print_digit@F2820 00E9  
                 ?_lcd_backlight 0070                        strncmp@_l 0070                        strncmp@_r 0072  
              _set_CELL_CLK_HIGH 1E52               __end_of_print_gram 152E                     ??_write4bits 0074  
                  _get_scale_val 0C45                   _lcd_print_with 1F27               ?_set_CELL_CLK_HIGH 0070  
                ___aomod@divisor 0020                      ??_vfpfcnvrt 0050                  ___aomod@counter 0071  
                   ?_CLK_SET_LOW 0070                     ??_write_byte 0073                  ??_DIO_SET_INPUT 0070  
                  __pstringtext1 2000                    __pstringtext2 200F                    __pstringtext3 201D  
                  __pstringtext4 202B                    __pstringtext5 2036                    __pstringtext6 203E  
                  __pstringtext7 2044                    __pstringtext8 2047                    __pstringtext9 204A  
            ??_set_CELL_CLK_HIGH 0070           __Umul8_16@multiplicand 0070                     ?_DIO_SET_LOW 0070  
                 ??_CLK_SET_HIGH 0070                         sprintf@f 00AE                         sprintf@s 00AD  
               ___lldiv@quotient 0079                 _get_CELL_DAT_VAL 088C                         strncmp@l 0077  
                       strncmp@n 0074                         strncmp@r 0079                      _SSPCON1bits 0215  
                    _SSPCON2bits 0216                ?_set_CELL_CLK_LOW 0070           __end_of_lcd_set_cursor 1105  
                 start_segment@p 0072                   ??_DIO_SET_HIGH 0070                    ?_encode_digit 0079  
             ??_set_CELL_CLK_LOW 0070               __end_of_write4bits 1FDD                     ___aodiv@sign 0072  
 __end_of_PIN_MANAGER_Initialize 1FC2                      _print_digit 09E3        __end_of_set_CELL_CLK_HIGH 1E5D  
           __Umul8_16@multiplier 0078               __end_of_write_byte 122A                   lcd_backlight@p 0074  
                   ___aomod@sign 0072           __end_of_lcd_print_with 1F3F                   ?_get_scale_val 0020  
              __Umul8_16@product 0074  



Microchip MPLAB XC8 Assembler V2.32 build 20210201212658 
                                                                                               Mon Oct 25 22:00:55 2021

Microchip MPLAB XC8 C Compiler v2.32 (Free license) build 20210201212658 Og1 
     1                           	processor	16F1827
     2                           	pagewidth 120
     3                           	opt	flic
     4                           	psect	idataBANK0,global,class=CODE,delta=2,noexec
     5                           	psect	cinit,global,class=CODE,merge=1,delta=2
     6                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,noexec
     7                           	psect	dataBANK0,global,class=BANK0,space=1,delta=1,noexec
     8                           	psect	inittext,global,class=CODE,delta=2
     9                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1,noexec
    10                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,noexec
    11                           	psect	maintext,global,class=CODE,merge=1,split=1,delta=2
    12                           	psect	text1,local,class=CODE,merge=1,delta=2
    13                           	psect	text2,local,class=CODE,merge=1,delta=2
    14                           	psect	text3,local,class=CODE,merge=1,delta=2
    15                           	psect	text4,local,class=CODE,merge=1,delta=2
    16                           	psect	text5,local,class=CODE,merge=1,delta=2
    17                           	psect	text6,local,class=CODE,merge=1,delta=2
    18                           	psect	text7,local,class=CODE,merge=1,delta=2
    19                           	psect	text8,local,class=CODE,merge=1,delta=2
    20                           	psect	text9,local,class=CODE,merge=1,delta=2
    21                           	psect	text10,local,class=CODE,merge=1,delta=2
    22                           	psect	text11,local,class=CODE,merge=1,delta=2
    23                           	psect	text12,local,class=CODE,merge=1,delta=2
    24                           	psect	text13,local,class=CODE,merge=1,delta=2
    25                           	psect	text14,local,class=CODE,merge=1,delta=2
    26                           	psect	text15,local,class=CODE,merge=1,delta=2
    27                           	psect	text16,local,class=CODE,merge=1,delta=2
    28                           	psect	text17,local,class=CODE,merge=1,delta=2
    29                           	psect	text18,local,class=CODE,merge=1,delta=2
    30                           	psect	text19,local,class=CODE,merge=1,delta=2
    31                           	psect	text20,local,class=CODE,merge=1,delta=2
    32                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=2,noexec
    33                           	dabs	1,0x7E,2
    34  0000                     
    35                           ; Version 2.32
    36                           ; Generated 02/02/2021 GMT
    37                           ; 
    38                           ; Copyright Â© 2021, Microchip Technology Inc. and its subsidiaries ("Microchip")
    39                           ; All rights reserved.
    40                           ; 
    41                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    42                           ; 
    43                           ; Redistribution and use in source and binary forms, with or without modification, are
    44                           ; permitted provided that the following conditions are met:
    45                           ; 
    46                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    47                           ;        conditions and the following disclaimer.
    48                           ; 
    49                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    50                           ;        of conditions and the following disclaimer in the documentation and/or other
    51                           ;        materials provided with the distribution. Publication is not required when
    52                           ;        this file is used in an embedded application.
    53                           ; 
    54                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    55                           ;        software without specific prior written permission.
    56                           ; 
    57                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    58                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    59                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    60                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    61                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    62                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    63                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    64                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    65                           ; 
    66                           ; 
    67                           ; Code-generator required, PIC16F1827 Definitions
    68                           ; 
    69                           ; SFR Addresses
    70  0000                     	;# 
    71  0001                     	;# 
    72  0002                     	;# 
    73  0003                     	;# 
    74  0004                     	;# 
    75  0005                     	;# 
    76  0006                     	;# 
    77  0007                     	;# 
    78  0008                     	;# 
    79  0009                     	;# 
    80  000A                     	;# 
    81  000B                     	;# 
    82  000C                     	;# 
    83  000D                     	;# 
    84  0011                     	;# 
    85  0012                     	;# 
    86  0013                     	;# 
    87  0014                     	;# 
    88  0015                     	;# 
    89  0016                     	;# 
    90  0016                     	;# 
    91  0017                     	;# 
    92  0018                     	;# 
    93  0019                     	;# 
    94  001A                     	;# 
    95  001B                     	;# 
    96  001C                     	;# 
    97  001E                     	;# 
    98  001F                     	;# 
    99  008C                     	;# 
   100  008D                     	;# 
   101  0091                     	;# 
   102  0092                     	;# 
   103  0093                     	;# 
   104  0094                     	;# 
   105  0095                     	;# 
   106  0096                     	;# 
   107  0097                     	;# 
   108  0098                     	;# 
   109  0099                     	;# 
   110  009A                     	;# 
   111  009B                     	;# 
   112  009B                     	;# 
   113  009C                     	;# 
   114  009D                     	;# 
   115  009E                     	;# 
   116  010C                     	;# 
   117  010D                     	;# 
   118  0111                     	;# 
   119  0112                     	;# 
   120  0113                     	;# 
   121  0114                     	;# 
   122  0115                     	;# 
   123  0116                     	;# 
   124  0117                     	;# 
   125  0118                     	;# 
   126  0119                     	;# 
   127  011A                     	;# 
   128  011B                     	;# 
   129  011D                     	;# 
   130  011E                     	;# 
   131  018C                     	;# 
   132  018D                     	;# 
   133  0191                     	;# 
   134  0191                     	;# 
   135  0192                     	;# 
   136  0193                     	;# 
   137  0193                     	;# 
   138  0193                     	;# 
   139  0194                     	;# 
   140  0195                     	;# 
   141  0196                     	;# 
   142  0199                     	;# 
   143  019A                     	;# 
   144  019B                     	;# 
   145  019B                     	;# 
   146  019B                     	;# 
   147  019B                     	;# 
   148  019C                     	;# 
   149  019C                     	;# 
   150  019D                     	;# 
   151  019E                     	;# 
   152  019F                     	;# 
   153  020C                     	;# 
   154  020D                     	;# 
   155  0211                     	;# 
   156  0211                     	;# 
   157  0212                     	;# 
   158  0212                     	;# 
   159  0213                     	;# 
   160  0213                     	;# 
   161  0214                     	;# 
   162  0214                     	;# 
   163  0215                     	;# 
   164  0215                     	;# 
   165  0215                     	;# 
   166  0216                     	;# 
   167  0216                     	;# 
   168  0217                     	;# 
   169  0217                     	;# 
   170  0219                     	;# 
   171  021A                     	;# 
   172  021B                     	;# 
   173  021C                     	;# 
   174  021D                     	;# 
   175  021E                     	;# 
   176  021F                     	;# 
   177  0291                     	;# 
   178  0291                     	;# 
   179  0292                     	;# 
   180  0293                     	;# 
   181  0294                     	;# 
   182  0295                     	;# 
   183  0295                     	;# 
   184  0296                     	;# 
   185  0298                     	;# 
   186  0298                     	;# 
   187  0299                     	;# 
   188  029A                     	;# 
   189  029B                     	;# 
   190  029C                     	;# 
   191  029C                     	;# 
   192  029D                     	;# 
   193  029E                     	;# 
   194  029E                     	;# 
   195  0311                     	;# 
   196  0311                     	;# 
   197  0312                     	;# 
   198  0313                     	;# 
   199  0318                     	;# 
   200  0318                     	;# 
   201  0319                     	;# 
   202  031A                     	;# 
   203  0394                     	;# 
   204  0395                     	;# 
   205  0396                     	;# 
   206  039A                     	;# 
   207  039C                     	;# 
   208  039D                     	;# 
   209  039E                     	;# 
   210  039F                     	;# 
   211  0415                     	;# 
   212  0416                     	;# 
   213  0417                     	;# 
   214  041C                     	;# 
   215  041D                     	;# 
   216  041E                     	;# 
   217  0FE4                     	;# 
   218  0FE5                     	;# 
   219  0FE6                     	;# 
   220  0FE7                     	;# 
   221  0FE8                     	;# 
   222  0FE9                     	;# 
   223  0FEA                     	;# 
   224  0FEB                     	;# 
   225  0FED                     	;# 
   226  0FEE                     	;# 
   227  0FEF                     	;# 
   228  0000                     	;# 
   229  0001                     	;# 
   230  0002                     	;# 
   231  0003                     	;# 
   232  0004                     	;# 
   233  0005                     	;# 
   234  0006                     	;# 
   235  0007                     	;# 
   236  0008                     	;# 
   237  0009                     	;# 
   238  000A                     	;# 
   239  000B                     	;# 
   240  000C                     	;# 
   241  000D                     	;# 
   242  0011                     	;# 
   243  0012                     	;# 
   244  0013                     	;# 
   245  0014                     	;# 
   246  0015                     	;# 
   247  0016                     	;# 
   248  0016                     	;# 
   249  0017                     	;# 
   250  0018                     	;# 
   251  0019                     	;# 
   252  001A                     	;# 
   253  001B                     	;# 
   254  001C                     	;# 
   255  001E                     	;# 
   256  001F                     	;# 
   257  008C                     	;# 
   258  008D                     	;# 
   259  0091                     	;# 
   260  0092                     	;# 
   261  0093                     	;# 
   262  0094                     	;# 
   263  0095                     	;# 
   264  0096                     	;# 
   265  0097                     	;# 
   266  0098                     	;# 
   267  0099                     	;# 
   268  009A                     	;# 
   269  009B                     	;# 
   270  009B                     	;# 
   271  009C                     	;# 
   272  009D                     	;# 
   273  009E                     	;# 
   274  010C                     	;# 
   275  010D                     	;# 
   276  0111                     	;# 
   277  0112                     	;# 
   278  0113                     	;# 
   279  0114                     	;# 
   280  0115                     	;# 
   281  0116                     	;# 
   282  0117                     	;# 
   283  0118                     	;# 
   284  0119                     	;# 
   285  011A                     	;# 
   286  011B                     	;# 
   287  011D                     	;# 
   288  011E                     	;# 
   289  018C                     	;# 
   290  018D                     	;# 
   291  0191                     	;# 
   292  0191                     	;# 
   293  0192                     	;# 
   294  0193                     	;# 
   295  0193                     	;# 
   296  0193                     	;# 
   297  0194                     	;# 
   298  0195                     	;# 
   299  0196                     	;# 
   300  0199                     	;# 
   301  019A                     	;# 
   302  019B                     	;# 
   303  019B                     	;# 
   304  019B                     	;# 
   305  019B                     	;# 
   306  019C                     	;# 
   307  019C                     	;# 
   308  019D                     	;# 
   309  019E                     	;# 
   310  019F                     	;# 
   311  020C                     	;# 
   312  020D                     	;# 
   313  0211                     	;# 
   314  0211                     	;# 
   315  0212                     	;# 
   316  0212                     	;# 
   317  0213                     	;# 
   318  0213                     	;# 
   319  0214                     	;# 
   320  0214                     	;# 
   321  0215                     	;# 
   322  0215                     	;# 
   323  0215                     	;# 
   324  0216                     	;# 
   325  0216                     	;# 
   326  0217                     	;# 
   327  0217                     	;# 
   328  0219                     	;# 
   329  021A                     	;# 
   330  021B                     	;# 
   331  021C                     	;# 
   332  021D                     	;# 
   333  021E                     	;# 
   334  021F                     	;# 
   335  0291                     	;# 
   336  0291                     	;# 
   337  0292                     	;# 
   338  0293                     	;# 
   339  0294                     	;# 
   340  0295                     	;# 
   341  0295                     	;# 
   342  0296                     	;# 
   343  0298                     	;# 
   344  0298                     	;# 
   345  0299                     	;# 
   346  029A                     	;# 
   347  029B                     	;# 
   348  029C                     	;# 
   349  029C                     	;# 
   350  029D                     	;# 
   351  029E                     	;# 
   352  029E                     	;# 
   353  0311                     	;# 
   354  0311                     	;# 
   355  0312                     	;# 
   356  0313                     	;# 
   357  0318                     	;# 
   358  0318                     	;# 
   359  0319                     	;# 
   360  031A                     	;# 
   361  0394                     	;# 
   362  0395                     	;# 
   363  0396                     	;# 
   364  039A                     	;# 
   365  039C                     	;# 
   366  039D                     	;# 
   367  039E                     	;# 
   368  039F                     	;# 
   369  0415                     	;# 
   370  0416                     	;# 
   371  0417                     	;# 
   372  041C                     	;# 
   373  041D                     	;# 
   374  041E                     	;# 
   375  0FE4                     	;# 
   376  0FE5                     	;# 
   377  0FE6                     	;# 
   378  0FE7                     	;# 
   379  0FE8                     	;# 
   380  0FE9                     	;# 
   381  0FEA                     	;# 
   382  0FEB                     	;# 
   383  0FED                     	;# 
   384  0FEE                     	;# 
   385  0FEF                     	;# 
   386  0000                     	;# 
   387  0001                     	;# 
   388  0002                     	;# 
   389  0003                     	;# 
   390  0004                     	;# 
   391  0005                     	;# 
   392  0006                     	;# 
   393  0007                     	;# 
   394  0008                     	;# 
   395  0009                     	;# 
   396  000A                     	;# 
   397  000B                     	;# 
   398  000C                     	;# 
   399  000D                     	;# 
   400  0011                     	;# 
   401  0012                     	;# 
   402  0013                     	;# 
   403  0014                     	;# 
   404  0015                     	;# 
   405  0016                     	;# 
   406  0016                     	;# 
   407  0017                     	;# 
   408  0018                     	;# 
   409  0019                     	;# 
   410  001A                     	;# 
   411  001B                     	;# 
   412  001C                     	;# 
   413  001E                     	;# 
   414  001F                     	;# 
   415  008C                     	;# 
   416  008D                     	;# 
   417  0091                     	;# 
   418  0092                     	;# 
   419  0093                     	;# 
   420  0094                     	;# 
   421  0095                     	;# 
   422  0096                     	;# 
   423  0097                     	;# 
   424  0098                     	;# 
   425  0099                     	;# 
   426  009A                     	;# 
   427  009B                     	;# 
   428  009B                     	;# 
   429  009C                     	;# 
   430  009D                     	;# 
   431  009E                     	;# 
   432  010C                     	;# 
   433  010D                     	;# 
   434  0111                     	;# 
   435  0112                     	;# 
   436  0113                     	;# 
   437  0114                     	;# 
   438  0115                     	;# 
   439  0116                     	;# 
   440  0117                     	;# 
   441  0118                     	;# 
   442  0119                     	;# 
   443  011A                     	;# 
   444  011B                     	;# 
   445  011D                     	;# 
   446  011E                     	;# 
   447  018C                     	;# 
   448  018D                     	;# 
   449  0191                     	;# 
   450  0191                     	;# 
   451  0192                     	;# 
   452  0193                     	;# 
   453  0193                     	;# 
   454  0193                     	;# 
   455  0194                     	;# 
   456  0195                     	;# 
   457  0196                     	;# 
   458  0199                     	;# 
   459  019A                     	;# 
   460  019B                     	;# 
   461  019B                     	;# 
   462  019B                     	;# 
   463  019B                     	;# 
   464  019C                     	;# 
   465  019C                     	;# 
   466  019D                     	;# 
   467  019E                     	;# 
   468  019F                     	;# 
   469  020C                     	;# 
   470  020D                     	;# 
   471  0211                     	;# 
   472  0211                     	;# 
   473  0212                     	;# 
   474  0212                     	;# 
   475  0213                     	;# 
   476  0213                     	;# 
   477  0214                     	;# 
   478  0214                     	;# 
   479  0215                     	;# 
   480  0215                     	;# 
   481  0215                     	;# 
   482  0216                     	;# 
   483  0216                     	;# 
   484  0217                     	;# 
   485  0217                     	;# 
   486  0219                     	;# 
   487  021A                     	;# 
   488  021B                     	;# 
   489  021C                     	;# 
   490  021D                     	;# 
   491  021E                     	;# 
   492  021F                     	;# 
   493  0291                     	;# 
   494  0291                     	;# 
   495  0292                     	;# 
   496  0293                     	;# 
   497  0294                     	;# 
   498  0295                     	;# 
   499  0295                     	;# 
   500  0296                     	;# 
   501  0298                     	;# 
   502  0298                     	;# 
   503  0299                     	;# 
   504  029A                     	;# 
   505  029B                     	;# 
   506  029C                     	;# 
   507  029C                     	;# 
   508  029D                     	;# 
   509  029E                     	;# 
   510  029E                     	;# 
   511  0311                     	;# 
   512  0311                     	;# 
   513  0312                     	;# 
   514  0313                     	;# 
   515  0318                     	;# 
   516  0318                     	;# 
   517  0319                     	;# 
   518  031A                     	;# 
   519  0394                     	;# 
   520  0395                     	;# 
   521  0396                     	;# 
   522  039A                     	;# 
   523  039C                     	;# 
   524  039D                     	;# 
   525  039E                     	;# 
   526  039F                     	;# 
   527  0415                     	;# 
   528  0416                     	;# 
   529  0417                     	;# 
   530  041C                     	;# 
   531  041D                     	;# 
   532  041E                     	;# 
   533  0FE4                     	;# 
   534  0FE5                     	;# 
   535  0FE6                     	;# 
   536  0FE7                     	;# 
   537  0FE8                     	;# 
   538  0FE9                     	;# 
   539  0FEA                     	;# 
   540  0FEB                     	;# 
   541  0FED                     	;# 
   542  0FEE                     	;# 
   543  0FEF                     	;# 
   544  0000                     	;# 
   545  0001                     	;# 
   546  0002                     	;# 
   547  0003                     	;# 
   548  0004                     	;# 
   549  0005                     	;# 
   550  0006                     	;# 
   551  0007                     	;# 
   552  0008                     	;# 
   553  0009                     	;# 
   554  000A                     	;# 
   555  000B                     	;# 
   556  000C                     	;# 
   557  000D                     	;# 
   558  0011                     	;# 
   559  0012                     	;# 
   560  0013                     	;# 
   561  0014                     	;# 
   562  0015                     	;# 
   563  0016                     	;# 
   564  0016                     	;# 
   565  0017                     	;# 
   566  0018                     	;# 
   567  0019                     	;# 
   568  001A                     	;# 
   569  001B                     	;# 
   570  001C                     	;# 
   571  001E                     	;# 
   572  001F                     	;# 
   573  008C                     	;# 
   574  008D                     	;# 
   575  0091                     	;# 
   576  0092                     	;# 
   577  0093                     	;# 
   578  0094                     	;# 
   579  0095                     	;# 
   580  0096                     	;# 
   581  0097                     	;# 
   582  0098                     	;# 
   583  0099                     	;# 
   584  009A                     	;# 
   585  009B                     	;# 
   586  009B                     	;# 
   587  009C                     	;# 
   588  009D                     	;# 
   589  009E                     	;# 
   590  010C                     	;# 
   591  010D                     	;# 
   592  0111                     	;# 
   593  0112                     	;# 
   594  0113                     	;# 
   595  0114                     	;# 
   596  0115                     	;# 
   597  0116                     	;# 
   598  0117                     	;# 
   599  0118                     	;# 
   600  0119                     	;# 
   601  011A                     	;# 
   602  011B                     	;# 
   603  011D                     	;# 
   604  011E                     	;# 
   605  018C                     	;# 
   606  018D                     	;# 
   607  0191                     	;# 
   608  0191                     	;# 
   609  0192                     	;# 
   610  0193                     	;# 
   611  0193                     	;# 
   612  0193                     	;# 
   613  0194                     	;# 
   614  0195                     	;# 
   615  0196                     	;# 
   616  0199                     	;# 
   617  019A                     	;# 
   618  019B                     	;# 
   619  019B                     	;# 
   620  019B                     	;# 
   621  019B                     	;# 
   622  019C                     	;# 
   623  019C                     	;# 
   624  019D                     	;# 
   625  019E                     	;# 
   626  019F                     	;# 
   627  020C                     	;# 
   628  020D                     	;# 
   629  0211                     	;# 
   630  0211                     	;# 
   631  0212                     	;# 
   632  0212                     	;# 
   633  0213                     	;# 
   634  0213                     	;# 
   635  0214                     	;# 
   636  0214                     	;# 
   637  0215                     	;# 
   638  0215                     	;# 
   639  0215                     	;# 
   640  0216                     	;# 
   641  0216                     	;# 
   642  0217                     	;# 
   643  0217                     	;# 
   644  0219                     	;# 
   645  021A                     	;# 
   646  021B                     	;# 
   647  021C                     	;# 
   648  021D                     	;# 
   649  021E                     	;# 
   650  021F                     	;# 
   651  0291                     	;# 
   652  0291                     	;# 
   653  0292                     	;# 
   654  0293                     	;# 
   655  0294                     	;# 
   656  0295                     	;# 
   657  0295                     	;# 
   658  0296                     	;# 
   659  0298                     	;# 
   660  0298                     	;# 
   661  0299                     	;# 
   662  029A                     	;# 
   663  029B                     	;# 
   664  029C                     	;# 
   665  029C                     	;# 
   666  029D                     	;# 
   667  029E                     	;# 
   668  029E                     	;# 
   669  0311                     	;# 
   670  0311                     	;# 
   671  0312                     	;# 
   672  0313                     	;# 
   673  0318                     	;# 
   674  0318                     	;# 
   675  0319                     	;# 
   676  031A                     	;# 
   677  0394                     	;# 
   678  0395                     	;# 
   679  0396                     	;# 
   680  039A                     	;# 
   681  039C                     	;# 
   682  039D                     	;# 
   683  039E                     	;# 
   684  039F                     	;# 
   685  0415                     	;# 
   686  0416                     	;# 
   687  0417                     	;# 
   688  041C                     	;# 
   689  041D                     	;# 
   690  041E                     	;# 
   691  0FE4                     	;# 
   692  0FE5                     	;# 
   693  0FE6                     	;# 
   694  0FE7                     	;# 
   695  0FE8                     	;# 
   696  0FE9                     	;# 
   697  0FEA                     	;# 
   698  0FEB                     	;# 
   699  0FED                     	;# 
   700  0FEE                     	;# 
   701  0FEF                     	;# 
   702  0000                     	;# 
   703  0001                     	;# 
   704  0002                     	;# 
   705  0003                     	;# 
   706  0004                     	;# 
   707  0005                     	;# 
   708  0006                     	;# 
   709  0007                     	;# 
   710  0008                     	;# 
   711  0009                     	;# 
   712  000A                     	;# 
   713  000B                     	;# 
   714  000C                     	;# 
   715  000D                     	;# 
   716  0011                     	;# 
   717  0012                     	;# 
   718  0013                     	;# 
   719  0014                     	;# 
   720  0015                     	;# 
   721  0016                     	;# 
   722  0016                     	;# 
   723  0017                     	;# 
   724  0018                     	;# 
   725  0019                     	;# 
   726  001A                     	;# 
   727  001B                     	;# 
   728  001C                     	;# 
   729  001E                     	;# 
   730  001F                     	;# 
   731  008C                     	;# 
   732  008D                     	;# 
   733  0091                     	;# 
   734  0092                     	;# 
   735  0093                     	;# 
   736  0094                     	;# 
   737  0095                     	;# 
   738  0096                     	;# 
   739  0097                     	;# 
   740  0098                     	;# 
   741  0099                     	;# 
   742  009A                     	;# 
   743  009B                     	;# 
   744  009B                     	;# 
   745  009C                     	;# 
   746  009D                     	;# 
   747  009E                     	;# 
   748  010C                     	;# 
   749  010D                     	;# 
   750  0111                     	;# 
   751  0112                     	;# 
   752  0113                     	;# 
   753  0114                     	;# 
   754  0115                     	;# 
   755  0116                     	;# 
   756  0117                     	;# 
   757  0118                     	;# 
   758  0119                     	;# 
   759  011A                     	;# 
   760  011B                     	;# 
   761  011D                     	;# 
   762  011E                     	;# 
   763  018C                     	;# 
   764  018D                     	;# 
   765  0191                     	;# 
   766  0191                     	;# 
   767  0192                     	;# 
   768  0193                     	;# 
   769  0193                     	;# 
   770  0193                     	;# 
   771  0194                     	;# 
   772  0195                     	;# 
   773  0196                     	;# 
   774  0199                     	;# 
   775  019A                     	;# 
   776  019B                     	;# 
   777  019B                     	;# 
   778  019B                     	;# 
   779  019B                     	;# 
   780  019C                     	;# 
   781  019C                     	;# 
   782  019D                     	;# 
   783  019E                     	;# 
   784  019F                     	;# 
   785  020C                     	;# 
   786  020D                     	;# 
   787  0211                     	;# 
   788  0211                     	;# 
   789  0212                     	;# 
   790  0212                     	;# 
   791  0213                     	;# 
   792  0213                     	;# 
   793  0214                     	;# 
   794  0214                     	;# 
   795  0215                     	;# 
   796  0215                     	;# 
   797  0215                     	;# 
   798  0216                     	;# 
   799  0216                     	;# 
   800  0217                     	;# 
   801  0217                     	;# 
   802  0219                     	;# 
   803  021A                     	;# 
   804  021B                     	;# 
   805  021C                     	;# 
   806  021D                     	;# 
   807  021E                     	;# 
   808  021F                     	;# 
   809  0291                     	;# 
   810  0291                     	;# 
   811  0292                     	;# 
   812  0293                     	;# 
   813  0294                     	;# 
   814  0295                     	;# 
   815  0295                     	;# 
   816  0296                     	;# 
   817  0298                     	;# 
   818  0298                     	;# 
   819  0299                     	;# 
   820  029A                     	;# 
   821  029B                     	;# 
   822  029C                     	;# 
   823  029C                     	;# 
   824  029D                     	;# 
   825  029E                     	;# 
   826  029E                     	;# 
   827  0311                     	;# 
   828  0311                     	;# 
   829  0312                     	;# 
   830  0313                     	;# 
   831  0318                     	;# 
   832  0318                     	;# 
   833  0319                     	;# 
   834  031A                     	;# 
   835  0394                     	;# 
   836  0395                     	;# 
   837  0396                     	;# 
   838  039A                     	;# 
   839  039C                     	;# 
   840  039D                     	;# 
   841  039E                     	;# 
   842  039F                     	;# 
   843  0415                     	;# 
   844  0416                     	;# 
   845  0417                     	;# 
   846  041C                     	;# 
   847  041D                     	;# 
   848  041E                     	;# 
   849  0FE4                     	;# 
   850  0FE5                     	;# 
   851  0FE6                     	;# 
   852  0FE7                     	;# 
   853  0FE8                     	;# 
   854  0FE9                     	;# 
   855  0FEA                     	;# 
   856  0FEB                     	;# 
   857  0FED                     	;# 
   858  0FEE                     	;# 
   859  0FEF                     	;# 
   860  0000                     	;# 
   861  0001                     	;# 
   862  0002                     	;# 
   863  0003                     	;# 
   864  0004                     	;# 
   865  0005                     	;# 
   866  0006                     	;# 
   867  0007                     	;# 
   868  0008                     	;# 
   869  0009                     	;# 
   870  000A                     	;# 
   871  000B                     	;# 
   872  000C                     	;# 
   873  000D                     	;# 
   874  0011                     	;# 
   875  0012                     	;# 
   876  0013                     	;# 
   877  0014                     	;# 
   878  0015                     	;# 
   879  0016                     	;# 
   880  0016                     	;# 
   881  0017                     	;# 
   882  0018                     	;# 
   883  0019                     	;# 
   884  001A                     	;# 
   885  001B                     	;# 
   886  001C                     	;# 
   887  001E                     	;# 
   888  001F                     	;# 
   889  008C                     	;# 
   890  008D                     	;# 
   891  0091                     	;# 
   892  0092                     	;# 
   893  0093                     	;# 
   894  0094                     	;# 
   895  0095                     	;# 
   896  0096                     	;# 
   897  0097                     	;# 
   898  0098                     	;# 
   899  0099                     	;# 
   900  009A                     	;# 
   901  009B                     	;# 
   902  009B                     	;# 
   903  009C                     	;# 
   904  009D                     	;# 
   905  009E                     	;# 
   906  010C                     	;# 
   907  010D                     	;# 
   908  0111                     	;# 
   909  0112                     	;# 
   910  0113                     	;# 
   911  0114                     	;# 
   912  0115                     	;# 
   913  0116                     	;# 
   914  0117                     	;# 
   915  0118                     	;# 
   916  0119                     	;# 
   917  011A                     	;# 
   918  011B                     	;# 
   919  011D                     	;# 
   920  011E                     	;# 
   921  018C                     	;# 
   922  018D                     	;# 
   923  0191                     	;# 
   924  0191                     	;# 
   925  0192                     	;# 
   926  0193                     	;# 
   927  0193                     	;# 
   928  0193                     	;# 
   929  0194                     	;# 
   930  0195                     	;# 
   931  0196                     	;# 
   932  0199                     	;# 
   933  019A                     	;# 
   934  019B                     	;# 
   935  019B                     	;# 
   936  019B                     	;# 
   937  019B                     	;# 
   938  019C                     	;# 
   939  019C                     	;# 
   940  019D                     	;# 
   941  019E                     	;# 
   942  019F                     	;# 
   943  020C                     	;# 
   944  020D                     	;# 
   945  0211                     	;# 
   946  0211                     	;# 
   947  0212                     	;# 
   948  0212                     	;# 
   949  0213                     	;# 
   950  0213                     	;# 
   951  0214                     	;# 
   952  0214                     	;# 
   953  0215                     	;# 
   954  0215                     	;# 
   955  0215                     	;# 
   956  0216                     	;# 
   957  0216                     	;# 
   958  0217                     	;# 
   959  0217                     	;# 
   960  0219                     	;# 
   961  021A                     	;# 
   962  021B                     	;# 
   963  021C                     	;# 
   964  021D                     	;# 
   965  021E                     	;# 
   966  021F                     	;# 
   967  0291                     	;# 
   968  0291                     	;# 
   969  0292                     	;# 
   970  0293                     	;# 
   971  0294                     	;# 
   972  0295                     	;# 
   973  0295                     	;# 
   974  0296                     	;# 
   975  0298                     	;# 
   976  0298                     	;# 
   977  0299                     	;# 
   978  029A                     	;# 
   979  029B                     	;# 
   980  029C                     	;# 
   981  029C                     	;# 
   982  029D                     	;# 
   983  029E                     	;# 
   984  029E                     	;# 
   985  0311                     	;# 
   986  0311                     	;# 
   987  0312                     	;# 
   988  0313                     	;# 
   989  0318                     	;# 
   990  0318                     	;# 
   991  0319                     	;# 
   992  031A                     	;# 
   993  0394                     	;# 
   994  0395                     	;# 
   995  0396                     	;# 
   996  039A                     	;# 
   997  039C                     	;# 
   998  039D                     	;# 
   999  039E                     	;# 
  1000  039F                     	;# 
  1001  0415                     	;# 
  1002  0416                     	;# 
  1003  0417                     	;# 
  1004  041C                     	;# 
  1005  041D                     	;# 
  1006  041E                     	;# 
  1007  0FE4                     	;# 
  1008  0FE5                     	;# 
  1009  0FE6                     	;# 
  1010  0FE7                     	;# 
  1011  0FE8                     	;# 
  1012  0FE9                     	;# 
  1013  0FEA                     	;# 
  1014  0FEB                     	;# 
  1015  0FED                     	;# 
  1016  0FEE                     	;# 
  1017  0FEF                     	;# 
  1018                           
  1019                           	psect	idataBANK0
  1020  0673                     __pidataBANK0:
  1021                           
  1022                           ;initializer for _segdata
  1023  0673  343F               	retlw	63
  1024  0674  3406               	retlw	6
  1025  0675  345B               	retlw	91
  1026  0676  344F               	retlw	79
  1027  0677  3466               	retlw	102
  1028  0678  346D               	retlw	109
  1029  0679  347D               	retlw	125
  1030  067A  3407               	retlw	7
  1031  067B  347F               	retlw	127
  1032  067C  346F               	retlw	111
  1033                           
  1034                           ;initializer for main@F2513
  1035  067D  34FF               	retlw	255
  1036  067E  34FF               	retlw	255
  1037  067F  34FF               	retlw	255
  1038  0680  34FF               	retlw	255
  1039  000C                     _PORTAbits	set	12
  1040  0097                     _WDTCON	set	151
  1041  0098                     _OSCTUNE	set	152
  1042  0099                     _OSCCON	set	153
  1043  0095                     _OPTION_REGbits	set	149
  1044  008D                     _TRISB	set	141
  1045  008C                     _TRISA	set	140
  1046  0116                     _BORCON	set	278
  1047  011E                     _APFCON1	set	286
  1048  011D                     _APFCON0	set	285
  1049  010D                     _LATB	set	269
  1050  010C                     _LATA	set	268
  1051  018C                     _ANSELA	set	396
  1052  018D                     _ANSELB	set	397
  1053  0215                     _SSPCON1bits	set	533
  1054  0214                     _SSPSTATbits	set	532
  1055  0211                     _SSPBUF	set	529
  1056  0216                     _SSPCON2bits	set	534
  1057  0214                     _SSPSTAT	set	532
  1058  0216                     _SSPCON2	set	534
  1059  020C                     _WPUA	set	524
  1060  020D                     _WPUB	set	525
  1061                           
  1062                           	psect	cinit
  1063  07EC                     start_initialization:	
  1064                           ; #config settings
  1065                           
  1066  07EC                     __initialization:
  1067                           
  1068                           ; Initialize objects allocated to BANK0
  1069  07EC  3073               	movlw	low __pidataBANK0
  1070  07ED  0084               	movwf	4
  1071  07EE  3086               	movlw	(high __pidataBANK0)| (0+128)
  1072  07EF  0085               	movwf	5
  1073  07F0  3020               	movlw	low __pdataBANK0
  1074  07F1  0086               	movwf	6
  1075  07F2  3000               	movlw	high __pdataBANK0
  1076  07F3  0087               	movwf	7
  1077  07F4  300E               	movlw	14
  1078  07F5  3186  2633  3187   	fcall	init_ram
  1079                           
  1080                           ; Clear objects allocated to BANK0
  1081  07F8  01B8               	clrf	__pbssBANK0& (0+127)
  1082  07F9  01B9               	clrf	(__pbssBANK0+1)& (0+127)
  1083  07FA  01BA               	clrf	(__pbssBANK0+2)& (0+127)
  1084  07FB  01BB               	clrf	(__pbssBANK0+3)& (0+127)
  1085  07FC  01BC               	clrf	(__pbssBANK0+4)& (0+127)
  1086  07FD                     end_of_initialization:	
  1087                           ;End of C runtime variable initialization code
  1088                           
  1089  07FD                     __end_of__initialization:
  1090  07FD  0020               	movlb	0
  1091  07FE  3187  2F69         	ljmp	_main	;jump to C main() function
  1092                           
  1093                           	psect	bssBANK0
  1094  0038                     __pbssBANK0:
  1095  0038                     clear_segment@F2532:
  1096  0038                     	ds	4
  1097  003C                     _m_brightness:
  1098  003C                     	ds	1
  1099                           
  1100                           	psect	dataBANK0
  1101  0020                     __pdataBANK0:
  1102  0020                     _segdata:
  1103  0020                     	ds	10
  1104  002A                     main@F2513:
  1105  002A                     	ds	4
  1106                           
  1107                           	psect	inittext
  1108  0633                     init_ram:
  1109  0633  00FE               	movwf	btemp
  1110  0634                     initloop:
  1111  0634  0012               	moviw fsr0++
  1112  0635  001E               	movwi fsr1++
  1113  0636  0BFE               	decfsz	btemp,f
  1114  0637  2E34               	goto	initloop
  1115  0638  3400               	retlw	0
  1116                           
  1117                           	psect	cstackCOMMON
  1118  0070                     __pcstackCOMMON:
  1119  0070                     ?_OSCILLATOR_Initialize:
  1120  0070                     ??_OSCILLATOR_Initialize:	
  1121                           ; 1 bytes @ 0x0
  1122                           
  1123  0070                     ?_WDT_Initialize:	
  1124                           ; 1 bytes @ 0x0
  1125                           
  1126  0070                     ??_WDT_Initialize:	
  1127                           ; 1 bytes @ 0x0
  1128                           
  1129  0070                     ?_clear_segment:	
  1130                           ; 1 bytes @ 0x0
  1131                           
  1132  0070                     ?_encode_digit:	
  1133                           ; 1 bytes @ 0x0
  1134                           
  1135  0070                     ??_encode_digit:	
  1136                           ; 1 bytes @ 0x0
  1137                           
  1138  0070                     ?_set_brigthness:	
  1139                           ; 1 bytes @ 0x0
  1140                           
  1141  0070                     ?_PIN_MANAGER_Initialize:	
  1142                           ; 1 bytes @ 0x0
  1143                           
  1144  0070                     ??_PIN_MANAGER_Initialize:	
  1145                           ; 1 bytes @ 0x0
  1146                           
  1147  0070                     ?_SYSTEM_Initialize:	
  1148                           ; 1 bytes @ 0x0
  1149                           
  1150  0070                     ??_SYSTEM_Initialize:	
  1151                           ; 1 bytes @ 0x0
  1152                           
  1153  0070                     ?_main:	
  1154                           ; 1 bytes @ 0x0
  1155                           
  1156  0070                     ?_bit_delay:	
  1157                           ; 1 bytes @ 0x0
  1158                           
  1159  0070                     ??_bit_delay:	
  1160                           ; 1 bytes @ 0x0
  1161                           
  1162  0070                     ?_CLK_SET_OUTPUT:	
  1163                           ; 1 bytes @ 0x0
  1164                           
  1165  0070                     ??_CLK_SET_OUTPUT:	
  1166                           ; 1 bytes @ 0x0
  1167                           
  1168  0070                     ?_CLK_SET_HIGH:	
  1169                           ; 1 bytes @ 0x0
  1170                           
  1171  0070                     ??_CLK_SET_HIGH:	
  1172                           ; 1 bytes @ 0x0
  1173                           
  1174  0070                     ?_CLK_SET_LOW:	
  1175                           ; 1 bytes @ 0x0
  1176                           
  1177  0070                     ??_CLK_SET_LOW:	
  1178                           ; 1 bytes @ 0x0
  1179                           
  1180  0070                     ?_DIO_SET_OUTPUT:	
  1181                           ; 1 bytes @ 0x0
  1182                           
  1183  0070                     ??_DIO_SET_OUTPUT:	
  1184                           ; 1 bytes @ 0x0
  1185                           
  1186  0070                     ?_DIO_SET_INPUT:	
  1187                           ; 1 bytes @ 0x0
  1188                           
  1189  0070                     ??_DIO_SET_INPUT:	
  1190                           ; 1 bytes @ 0x0
  1191                           
  1192  0070                     ?_DIO_SET_HIGH:	
  1193                           ; 1 bytes @ 0x0
  1194                           
  1195  0070                     ??_DIO_SET_HIGH:	
  1196                           ; 1 bytes @ 0x0
  1197                           
  1198  0070                     ?_DIO_SET_LOW:	
  1199                           ; 1 bytes @ 0x0
  1200                           
  1201  0070                     ??_DIO_SET_LOW:	
  1202                           ; 1 bytes @ 0x0
  1203                           
  1204  0070                     ?_start_segment:	
  1205                           ; 1 bytes @ 0x0
  1206                           
  1207  0070                     ?_stop_segment:	
  1208                           ; 1 bytes @ 0x0
  1209                           
  1210  0070                     ?_get_DIO_PIN_value:	
  1211                           ; 1 bytes @ 0x0
  1212                           
  1213  0070                     ??_get_DIO_PIN_value:	
  1214                           ; 1 bytes @ 0x0
  1215                           
  1216  0070                     ?_write_byte:	
  1217                           ; 1 bytes @ 0x0
  1218                           
  1219  0070                     set_brigthness@on:	
  1220                           ; 1 bytes @ 0x0
  1221                           
  1222  0070                     encode_digit@digit:	
  1223                           ; 1 bytes @ 0x0
  1224                           
  1225                           
  1226                           ; 1 bytes @ 0x0
  1227  0070                     	ds	1
  1228  0071                     ??_set_brigthness:
  1229  0071                     ??_start_segment:	
  1230                           ; 1 bytes @ 0x1
  1231                           
  1232  0071                     ??_stop_segment:	
  1233                           ; 1 bytes @ 0x1
  1234                           
  1235  0071                     ??_write_byte:	
  1236                           ; 1 bytes @ 0x1
  1237                           
  1238                           
  1239                           ; 1 bytes @ 0x1
  1240  0071                     	ds	1
  1241  0072                     write_byte@b:
  1242  0072                     set_brigthness@brightness:	
  1243                           ; 1 bytes @ 0x2
  1244                           
  1245                           
  1246                           ; 1 bytes @ 0x2
  1247  0072                     	ds	1
  1248  0073                     write_byte@ack:
  1249                           
  1250                           ; 1 bytes @ 0x3
  1251  0073                     	ds	1
  1252  0074                     write_byte@data:
  1253                           
  1254                           ; 1 bytes @ 0x4
  1255  0074                     	ds	1
  1256  0075                     write_byte@i:
  1257                           
  1258                           ; 1 bytes @ 0x5
  1259  0075                     	ds	1
  1260  0076                     ?_set_segments:
  1261  0076                     set_segments@length:	
  1262                           ; 1 bytes @ 0x6
  1263                           
  1264                           
  1265                           ; 1 bytes @ 0x6
  1266  0076                     	ds	1
  1267  0077                     set_segments@pos:
  1268                           
  1269                           ; 1 bytes @ 0x7
  1270  0077                     	ds	1
  1271  0078                     ??_set_segments:
  1272                           
  1273                           ; 1 bytes @ 0x8
  1274  0078                     	ds	1
  1275  0079                     set_segments@segments:
  1276                           
  1277                           ; 1 bytes @ 0x9
  1278  0079                     	ds	1
  1279  007A                     set_segments@k:
  1280                           
  1281                           ; 1 bytes @ 0xA
  1282  007A                     	ds	1
  1283  007B                     ??_clear_segment:
  1284                           
  1285                           ; 1 bytes @ 0xB
  1286  007B                     	ds	1
  1287  007C                     ??_main:
  1288                           
  1289                           ; 1 bytes @ 0xC
  1290  007C                     	ds	2
  1291                           
  1292                           	psect	cstackBANK0
  1293  002E                     __pcstackBANK0:
  1294  002E                     clear_segment@data:
  1295                           
  1296                           ; 4 bytes @ 0x0
  1297  002E                     	ds	4
  1298  0032                     main@k:
  1299                           
  1300                           ; 1 bytes @ 0x4
  1301  0032                     	ds	1
  1302  0033                     main@data:
  1303                           
  1304                           ; 4 bytes @ 0x5
  1305  0033                     	ds	4
  1306  0037                     main@i:
  1307                           
  1308                           ; 1 bytes @ 0x9
  1309  0037                     	ds	1
  1310                           
  1311                           	psect	maintext
  1312  0769                     __pmaintext:	
  1313 ;;
  1314 ;;Main: autosize = 0, tempsize = 2, incstack = 0, save=0
  1315 ;;
  1316 ;; *************** function _main *****************
  1317 ;; Defined at:
  1318 ;;		line 6 in file "main.c"
  1319 ;; Parameters:    Size  Location     Type
  1320 ;;		None
  1321 ;; Auto vars:     Size  Location     Type
  1322 ;;  i               1    9[BANK0 ] unsigned char 
  1323 ;;  data            4    5[BANK0 ] unsigned char [4]
  1324 ;;  k               1    4[BANK0 ] unsigned char 
  1325 ;; Return value:  Size  Location     Type
  1326 ;;                  1    wreg      void 
  1327 ;; Registers used:
  1328 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  1329 ;; Tracked objects:
  1330 ;;		On entry : B1F/0
  1331 ;;		On exit  : 0/0
  1332 ;;		Unchanged: 0/0
  1333 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  1334 ;;      Params:         0       0       0       0       0       0
  1335 ;;      Locals:         0       6       0       0       0       0
  1336 ;;      Temps:          2       0       0       0       0       0
  1337 ;;      Totals:         2       6       0       0       0       0
  1338 ;;Total ram usage:        8 bytes
  1339 ;; Hardware stack levels required when called: 5
  1340 ;; This function calls:
  1341 ;;		_SYSTEM_Initialize
  1342 ;;		_clear_segment
  1343 ;;		_encode_digit
  1344 ;;		_set_brigthness
  1345 ;;		_set_segments
  1346 ;; This function is called by:
  1347 ;;		Startup code after reset
  1348 ;; This function uses a non-reentrant model
  1349 ;;
  1350                           
  1351                           
  1352                           ;psect for function _main
  1353  0769                     _main:
  1354  0769                     l1223:	
  1355                           ;incstack = 0
  1356                           ; Regs used in _main: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
  1357                           
  1358                           
  1359                           ;main.c: 9:     SYSTEM_Initialize();
  1360  0769  3186  2651  3187   	fcall	_SYSTEM_Initialize
  1361  076C                     l1225:
  1362                           
  1363                           ;main.c: 11:     ANSELA = 0x00;
  1364  076C  0023               	movlb	3	; select bank3
  1365  076D  018C               	clrf	12	;volatile
  1366  076E                     l1227:
  1367                           
  1368                           ;main.c: 12:     TRISA = 0x00;
  1369  076E  0021               	movlb	1	; select bank1
  1370  076F  018C               	clrf	12	;volatile
  1371  0770                     l1229:
  1372                           
  1373                           ;main.c: 13:     LATA = 0x00;
  1374  0770  0022               	movlb	2	; select bank2
  1375  0771  018C               	clrf	12	;volatile
  1376  0772                     l1231:
  1377                           
  1378                           ;main.c: 15:     LATA |= 0x80;
  1379  0772  178C               	bsf	12,7	;volatile
  1380  0773                     l1233:
  1381                           
  1382                           ;main.c: 17:     uint8_t data[] = {0xff, 0xff, 0xff, 0xff};
  1383  0773  0020               	movlb	0	; select bank0
  1384  0774  082D               	movf	main@F2513+3,w
  1385  0775  00B6               	movwf	main@data+3
  1386  0776  082C               	movf	main@F2513+2,w
  1387  0777  00B5               	movwf	main@data+2
  1388  0778  082B               	movf	main@F2513+1,w
  1389  0779  00B4               	movwf	main@data+1
  1390  077A  082A               	movf	main@F2513,w
  1391  077B  00B3               	movwf	main@data
  1392  077C                     l1235:
  1393                           
  1394                           ;main.c: 19:     clear_segment();
  1395  077C  3186  26A7  3187   	fcall	_clear_segment
  1396  077F                     l1237:
  1397                           
  1398                           ;main.c: 21:     data[0] = encode_digit(1);
  1399  077F  3001               	movlw	1
  1400  0780  3186  2640  3187   	fcall	_encode_digit
  1401  0783  00FC               	movwf	??_main
  1402  0784  087C               	movf	??_main,w
  1403  0785  0020               	movlb	0	; select bank0
  1404  0786  00B3               	movwf	main@data
  1405  0787                     l1239:
  1406                           
  1407                           ;main.c: 22:     data[1] = encode_digit(9);
  1408  0787  3009               	movlw	9
  1409  0788  3186  2640  3187   	fcall	_encode_digit
  1410  078B  00FC               	movwf	??_main
  1411  078C  087C               	movf	??_main,w
  1412  078D  0020               	movlb	0	; select bank0
  1413  078E  00B4               	movwf	main@data+1
  1414  078F                     l1241:
  1415                           
  1416                           ;main.c: 23:     data[2] = encode_digit(8);
  1417  078F  3008               	movlw	8
  1418  0790  3186  2640  3187   	fcall	_encode_digit
  1419  0793  00FC               	movwf	??_main
  1420  0794  087C               	movf	??_main,w
  1421  0795  0020               	movlb	0	; select bank0
  1422  0796  00B5               	movwf	main@data+2
  1423  0797                     l1243:
  1424                           
  1425                           ;main.c: 24:     data[3] = encode_digit(4);
  1426  0797  3004               	movlw	4
  1427  0798  3186  2640  3187   	fcall	_encode_digit
  1428  079B  00FC               	movwf	??_main
  1429  079C  087C               	movf	??_main,w
  1430  079D  0020               	movlb	0	; select bank0
  1431  079E  00B6               	movwf	main@data+3
  1432  079F                     l1245:
  1433                           
  1434                           ;main.c: 27:     set_brigthness(0x0f, 1);
  1435  079F  01F0               	clrf	set_brigthness@on
  1436  07A0  0AF0               	incf	set_brigthness@on,f
  1437  07A1  300F               	movlw	15
  1438  07A2  3186  26BA  3187   	fcall	_set_brigthness
  1439  07A5                     l1247:
  1440                           
  1441                           ;main.c: 28:     set_segments(data, 4, 0);
  1442  07A5  3004               	movlw	4
  1443  07A6  00FC               	movwf	??_main
  1444  07A7  087C               	movf	??_main,w
  1445  07A8  00F6               	movwf	set_segments@length
  1446  07A9  01F7               	clrf	set_segments@pos
  1447  07AA  3033               	movlw	(low (main@data| 0))& (0+255)
  1448  07AB  3186  26E5  3187   	fcall	_set_segments
  1449  07AE                     l1249:
  1450                           
  1451                           ;main.c: 30:     uint8_t k = 0;
  1452  07AE  0020               	movlb	0	; select bank0
  1453  07AF  01B2               	clrf	main@k
  1454  07B0                     l1251:
  1455                           
  1456                           ;main.c: 34:     {;main.c: 35:         LATA |= 0x80;
  1457  07B0  0022               	movlb	2	; select bank2
  1458  07B1  178C               	bsf	12,7	;volatile
  1459  07B2                     l1253:
  1460                           
  1461                           ;main.c: 37:         for(uint8_t i = 0; i < 4; i++){
  1462  07B2  0020               	movlb	0	; select bank0
  1463  07B3  01B7               	clrf	main@i
  1464  07B4                     l1259:
  1465                           
  1466                           ;main.c: 38:             data[i] = encode_digit(i + k);
  1467  07B4  0837               	movf	main@i,w
  1468  07B5  0732               	addwf	main@k,w
  1469  07B6  3186  2640  3187   	fcall	_encode_digit
  1470  07B9  00FC               	movwf	??_main
  1471  07BA  0020               	movlb	0	; select bank0
  1472  07BB  0837               	movf	main@i,w
  1473  07BC  3E33               	addlw	(low (main@data| 0))& (0+255)
  1474  07BD  0086               	movwf	6
  1475  07BE  0187               	clrf	7
  1476  07BF  087C               	movf	??_main,w
  1477  07C0  0081               	movwf	1
  1478  07C1                     l1261:
  1479                           
  1480                           ;main.c: 39:         }
  1481  07C1  3001               	movlw	1
  1482  07C2  00FC               	movwf	??_main
  1483  07C3  087C               	movf	??_main,w
  1484  07C4  07B7               	addwf	main@i,f
  1485  07C5                     l1263:
  1486  07C5  3004               	movlw	4
  1487  07C6  0237               	subwf	main@i,w
  1488  07C7  1C03               	skipc
  1489  07C8  2FCA               	goto	u201
  1490  07C9  2FCB               	goto	u200
  1491  07CA                     u201:
  1492  07CA  2FB4               	goto	l1259
  1493  07CB                     u200:
  1494  07CB                     l1265:
  1495                           
  1496                           ;main.c: 41:         set_segments(data, 4, 0);
  1497  07CB  3004               	movlw	4
  1498  07CC  00FC               	movwf	??_main
  1499  07CD  087C               	movf	??_main,w
  1500  07CE  00F6               	movwf	set_segments@length
  1501  07CF  01F7               	clrf	set_segments@pos
  1502  07D0  3033               	movlw	(low (main@data| 0))& (0+255)
  1503  07D1  3186  26E5  3187   	fcall	_set_segments
  1504  07D4                     l1267:
  1505                           
  1506                           ;main.c: 42:         _delay((unsigned long)((1000)*(8000000/4000.0)));
  1507  07D4  300B               	movlw	11
  1508  07D5  00FD               	movwf	??_main+1
  1509  07D6  3026               	movlw	38
  1510  07D7  00FC               	movwf	??_main
  1511  07D8  305E               	movlw	94
  1512  07D9                     u217:
  1513  07D9  0B89               	decfsz	9,f
  1514  07DA  2FD9               	goto	u217
  1515  07DB  0BFC               	decfsz	??_main,f
  1516  07DC  2FD9               	goto	u217
  1517  07DD  0BFD               	decfsz	??_main+1,f
  1518  07DE  2FD9               	goto	u217
  1519  07DF                     l1269:
  1520                           
  1521                           ;main.c: 43:         k++;
  1522  07DF  3001               	movlw	1
  1523  07E0  00FC               	movwf	??_main
  1524  07E1  087C               	movf	??_main,w
  1525  07E2  0020               	movlb	0	; select bank0
  1526  07E3  07B2               	addwf	main@k,f
  1527  07E4                     l1271:
  1528                           
  1529                           ;main.c: 45:         LATA &= ~ 0x80;
  1530  07E4  307F               	movlw	127
  1531  07E5  00FC               	movwf	??_main
  1532  07E6  087C               	movf	??_main,w
  1533  07E7  0022               	movlb	2	; select bank2
  1534  07E8  058C               	andwf	12,f	;volatile
  1535  07E9  2FB0               	goto	l1251
  1536  07EA  3180  2802         	ljmp	start
  1537  07EC                     __end_of_main:
  1538                           
  1539                           	psect	text1
  1540  06BA                     __ptext1:	
  1541 ;; *************** function _set_brigthness *****************
  1542 ;; Defined at:
  1543 ;;		line 166 in file "tm1637.c"
  1544 ;; Parameters:    Size  Location     Type
  1545 ;;  brightness      1    wreg     unsigned char 
  1546 ;;  on              1    0[COMMON] unsigned char 
  1547 ;; Auto vars:     Size  Location     Type
  1548 ;;  brightness      1    2[COMMON] unsigned char 
  1549 ;; Return value:  Size  Location     Type
  1550 ;;                  1    wreg      void 
  1551 ;; Registers used:
  1552 ;;		wreg, status,2, status,0
  1553 ;; Tracked objects:
  1554 ;;		On entry : 0/0
  1555 ;;		On exit  : 0/0
  1556 ;;		Unchanged: 0/0
  1557 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  1558 ;;      Params:         1       0       0       0       0       0
  1559 ;;      Locals:         1       0       0       0       0       0
  1560 ;;      Temps:          1       0       0       0       0       0
  1561 ;;      Totals:         3       0       0       0       0       0
  1562 ;;Total ram usage:        3 bytes
  1563 ;; Hardware stack levels used: 1
  1564 ;; This function calls:
  1565 ;;		Nothing
  1566 ;; This function is called by:
  1567 ;;		_main
  1568 ;; This function uses a non-reentrant model
  1569 ;;
  1570                           
  1571                           
  1572                           ;psect for function _set_brigthness
  1573  06BA                     _set_brigthness:
  1574                           
  1575                           ;incstack = 0
  1576                           ; Regs used in _set_brigthness: [wreg+status,2+status,0]
  1577                           ;set_brigthness@brightness stored from wreg
  1578  06BA  00F2               	movwf	set_brigthness@brightness
  1579  06BB                     l1217:
  1580                           
  1581                           ;tm1637.c: 167:     if(on == 1){
  1582  06BB  0370               	decf	set_brigthness@on,w
  1583  06BC  1D03               	btfss	3,2
  1584  06BD  2EBF               	goto	u191
  1585  06BE  2EC0               	goto	u190
  1586  06BF                     u191:
  1587  06BF  2EC8               	goto	l1221
  1588  06C0                     u190:
  1589  06C0                     l1219:
  1590                           
  1591                           ;tm1637.c: 168:         m_brightness = (brightness & 0x7 | 0x08);
  1592  06C0  0872               	movf	set_brigthness@brightness,w
  1593  06C1  3907               	andlw	7
  1594  06C2  3808               	iorlw	8
  1595  06C3  00F1               	movwf	??_set_brigthness
  1596  06C4  0871               	movf	??_set_brigthness,w
  1597  06C5  0020               	movlb	0	; select bank0
  1598  06C6  00BC               	movwf	_m_brightness
  1599                           
  1600                           ;tm1637.c: 169:     }else{
  1601  06C7  2ECE               	goto	l199
  1602  06C8                     l1221:
  1603                           
  1604                           ;tm1637.c: 170:         m_brightness = (brightness & 0x7 | 0x00);
  1605  06C8  0872               	movf	set_brigthness@brightness,w
  1606  06C9  3907               	andlw	7
  1607  06CA  00F1               	movwf	??_set_brigthness
  1608  06CB  0871               	movf	??_set_brigthness,w
  1609  06CC  0020               	movlb	0	; select bank0
  1610  06CD  00BC               	movwf	_m_brightness
  1611  06CE                     l199:
  1612  06CE  0008               	return
  1613  06CF                     __end_of_set_brigthness:
  1614                           
  1615                           	psect	text2
  1616  0640                     __ptext2:	
  1617 ;; *************** function _encode_digit *****************
  1618 ;; Defined at:
  1619 ;;		line 217 in file "tm1637.c"
  1620 ;; Parameters:    Size  Location     Type
  1621 ;;  digit           1    wreg     unsigned char 
  1622 ;; Auto vars:     Size  Location     Type
  1623 ;;  digit           1    0[COMMON] unsigned char 
  1624 ;; Return value:  Size  Location     Type
  1625 ;;                  1    wreg      unsigned char 
  1626 ;; Registers used:
  1627 ;;		wreg, fsr1l, fsr1h, status,2, status,0
  1628 ;; Tracked objects:
  1629 ;;		On entry : 0/0
  1630 ;;		On exit  : 0/0
  1631 ;;		Unchanged: 0/0
  1632 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  1633 ;;      Params:         0       0       0       0       0       0
  1634 ;;      Locals:         1       0       0       0       0       0
  1635 ;;      Temps:          0       0       0       0       0       0
  1636 ;;      Totals:         1       0       0       0       0       0
  1637 ;;Total ram usage:        1 bytes
  1638 ;; Hardware stack levels used: 1
  1639 ;; This function calls:
  1640 ;;		Nothing
  1641 ;; This function is called by:
  1642 ;;		_main
  1643 ;; This function uses a non-reentrant model
  1644 ;;
  1645                           
  1646                           
  1647                           ;psect for function _encode_digit
  1648  0640                     _encode_digit:
  1649                           
  1650                           ;incstack = 0
  1651                           ; Regs used in _encode_digit: [wreg+fsr1l+fsr1h+status,2+status,0]
  1652                           ;encode_digit@digit stored from wreg
  1653  0640  00F0               	movwf	encode_digit@digit
  1654  0641                     l1213:
  1655                           
  1656                           ;tm1637.c: 218:     return segdata[digit & 0x0f];
  1657  0641  0870               	movf	encode_digit@digit,w
  1658  0642  390F               	andlw	15
  1659  0643  3E20               	addlw	(low (_segdata| 0))& (0+255)
  1660  0644  0086               	movwf	6
  1661  0645  0187               	clrf	7
  1662  0646  0801               	movf	1,w
  1663  0647                     l213:
  1664  0647  0008               	return
  1665  0648                     __end_of_encode_digit:
  1666                           
  1667                           	psect	text3
  1668  06A7                     __ptext3:	
  1669 ;; *************** function _clear_segment *****************
  1670 ;; Defined at:
  1671 ;;		line 207 in file "tm1637.c"
  1672 ;; Parameters:    Size  Location     Type
  1673 ;;		None
  1674 ;; Auto vars:     Size  Location     Type
  1675 ;;  data            4    0[BANK0 ] unsigned char [4]
  1676 ;; Return value:  Size  Location     Type
  1677 ;;                  1    wreg      void 
  1678 ;; Registers used:
  1679 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  1680 ;; Tracked objects:
  1681 ;;		On entry : 0/0
  1682 ;;		On exit  : 0/0
  1683 ;;		Unchanged: 0/0
  1684 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  1685 ;;      Params:         0       0       0       0       0       0
  1686 ;;      Locals:         0       4       0       0       0       0
  1687 ;;      Temps:          1       0       0       0       0       0
  1688 ;;      Totals:         1       4       0       0       0       0
  1689 ;;Total ram usage:        5 bytes
  1690 ;; Hardware stack levels used: 1
  1691 ;; Hardware stack levels required when called: 4
  1692 ;; This function calls:
  1693 ;;		_set_segments
  1694 ;; This function is called by:
  1695 ;;		_main
  1696 ;; This function uses a non-reentrant model
  1697 ;;
  1698                           
  1699                           
  1700                           ;psect for function _clear_segment
  1701  06A7                     _clear_segment:
  1702  06A7                     l1209:	
  1703                           ;incstack = 0
  1704                           ; Regs used in _clear_segment: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
  1705                           
  1706                           
  1707                           ;tm1637.c: 208:     uint8_t data[] = { 0, 0, 0, 0 };
  1708  06A7  3000               	movlw	0
  1709  06A8  0020               	movlb	0	; select bank0
  1710  06A9  00B1               	movwf	clear_segment@data+3
  1711  06AA  3000               	movlw	0
  1712  06AB  00B0               	movwf	clear_segment@data+2
  1713  06AC  3000               	movlw	0
  1714  06AD  00AF               	movwf	clear_segment@data+1
  1715  06AE  3000               	movlw	0
  1716  06AF  00AE               	movwf	clear_segment@data
  1717  06B0                     l1211:
  1718                           
  1719                           ;tm1637.c: 209:  set_segments(data, 4, 0);
  1720  06B0  3004               	movlw	4
  1721  06B1  00FB               	movwf	??_clear_segment
  1722  06B2  087B               	movf	??_clear_segment,w
  1723  06B3  00F6               	movwf	set_segments@length
  1724  06B4  01F7               	clrf	set_segments@pos
  1725  06B5  302E               	movlw	(low (clear_segment@data| 0))& (0+255)
  1726  06B6  3186  26E5  3186   	fcall	_set_segments
  1727  06B9                     l210:
  1728  06B9  0008               	return
  1729  06BA                     __end_of_clear_segment:
  1730                           
  1731                           	psect	text4
  1732  06E5                     __ptext4:	
  1733 ;; *************** function _set_segments *****************
  1734 ;; Defined at:
  1735 ;;		line 180 in file "tm1637.c"
  1736 ;; Parameters:    Size  Location     Type
  1737 ;;  segments        1    wreg     PTR const unsigned char 
  1738 ;;		 -> clear_segment@data(4), main@data(4), 
  1739 ;;  length          1    6[COMMON] unsigned char 
  1740 ;;  pos             1    7[COMMON] unsigned char 
  1741 ;; Auto vars:     Size  Location     Type
  1742 ;;  segments        1    9[COMMON] PTR const unsigned char 
  1743 ;;		 -> clear_segment@data(4), main@data(4), 
  1744 ;;  k               1   10[COMMON] unsigned char 
  1745 ;; Return value:  Size  Location     Type
  1746 ;;                  1    wreg      void 
  1747 ;; Registers used:
  1748 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  1749 ;; Tracked objects:
  1750 ;;		On entry : 0/0
  1751 ;;		On exit  : 0/0
  1752 ;;		Unchanged: 0/0
  1753 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  1754 ;;      Params:         2       0       0       0       0       0
  1755 ;;      Locals:         2       0       0       0       0       0
  1756 ;;      Temps:          1       0       0       0       0       0
  1757 ;;      Totals:         5       0       0       0       0       0
  1758 ;;Total ram usage:        5 bytes
  1759 ;; Hardware stack levels used: 1
  1760 ;; Hardware stack levels required when called: 3
  1761 ;; This function calls:
  1762 ;;		_start_segment
  1763 ;;		_stop_segment
  1764 ;;		_write_byte
  1765 ;; This function is called by:
  1766 ;;		_main
  1767 ;;		_clear_segment
  1768 ;; This function uses a non-reentrant model
  1769 ;;
  1770                           
  1771                           
  1772                           ;psect for function _set_segments
  1773  06E5                     _set_segments:
  1774                           
  1775                           ;incstack = 0
  1776                           ; Regs used in _set_segments: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
  1777                           ;set_segments@segments stored from wreg
  1778  06E5  00F9               	movwf	set_segments@segments
  1779  06E6                     l1195:
  1780                           
  1781                           ;tm1637.c: 183:     start_segment();
  1782  06E6  3186  2681  3186   	fcall	_start_segment
  1783                           
  1784                           ;tm1637.c: 184:     write_byte(0x40);
  1785  06E9  3040               	movlw	64
  1786  06EA  3187  2720  3186   	fcall	_write_byte
  1787                           
  1788                           ;tm1637.c: 185:     stop_segment();
  1789  06ED  3186  2694  3186   	fcall	_stop_segment
  1790                           
  1791                           ;tm1637.c: 188:     start_segment();
  1792  06F0  3186  2681  3186   	fcall	_start_segment
  1793                           
  1794                           ;tm1637.c: 189:     write_byte(0xC0 + (pos & 0x03));
  1795  06F3  0877               	movf	set_segments@pos,w
  1796  06F4  3903               	andlw	3
  1797  06F5  3EC0               	addlw	192
  1798  06F6  3187  2720  3186   	fcall	_write_byte
  1799  06F9                     l1197:
  1800                           
  1801                           ;tm1637.c: 192:     for(uint8_t k = 0; k < length; k++){
  1802  06F9  01FA               	clrf	set_segments@k
  1803  06FA  2F09               	goto	l1203
  1804  06FB                     l1199:
  1805                           
  1806                           ;tm1637.c: 193:         write_byte(segments[k]);
  1807  06FB  087A               	movf	set_segments@k,w
  1808  06FC  0779               	addwf	set_segments@segments,w
  1809  06FD  00F8               	movwf	??_set_segments
  1810  06FE  0878               	movf	??_set_segments,w
  1811  06FF  0086               	movwf	6
  1812  0700  0187               	clrf	7
  1813  0701  0801               	movf	1,w
  1814  0702  3187  2720  3186   	fcall	_write_byte
  1815  0705                     l1201:
  1816                           
  1817                           ;tm1637.c: 194:     }
  1818  0705  3001               	movlw	1
  1819  0706  00F8               	movwf	??_set_segments
  1820  0707  0878               	movf	??_set_segments,w
  1821  0708  07FA               	addwf	set_segments@k,f
  1822  0709                     l1203:
  1823  0709  0876               	movf	set_segments@length,w
  1824  070A  027A               	subwf	set_segments@k,w
  1825  070B  1C03               	skipc
  1826  070C  2F0E               	goto	u181
  1827  070D  2F0F               	goto	u180
  1828  070E                     u181:
  1829  070E  2EFB               	goto	l1199
  1830  070F                     u180:
  1831  070F                     l1205:
  1832                           
  1833                           ;tm1637.c: 196:     stop_segment();
  1834  070F  3186  2694  3186   	fcall	_stop_segment
  1835                           
  1836                           ;tm1637.c: 199:     start_segment();
  1837  0712  3186  2681  3186   	fcall	_start_segment
  1838                           
  1839                           ;tm1637.c: 200:     write_byte(0x80 + (m_brightness & 0x0f));
  1840  0715  0020               	movlb	0	; select bank0
  1841  0716  083C               	movf	_m_brightness,w
  1842  0717  390F               	andlw	15
  1843  0718  3E80               	addlw	128
  1844  0719  3187  2720  3186   	fcall	_write_byte
  1845                           
  1846                           ;tm1637.c: 201:     stop_segment();
  1847  071C  3186  2694  3186   	fcall	_stop_segment
  1848  071F                     l205:
  1849  071F  0008               	return
  1850  0720                     __end_of_set_segments:
  1851                           
  1852                           	psect	text5
  1853  0720                     __ptext5:	
  1854 ;; *************** function _write_byte *****************
  1855 ;; Defined at:
  1856 ;;		line 111 in file "tm1637.c"
  1857 ;; Parameters:    Size  Location     Type
  1858 ;;  b               1    wreg     unsigned char 
  1859 ;; Auto vars:     Size  Location     Type
  1860 ;;  b               1    2[COMMON] unsigned char 
  1861 ;;  i               1    5[COMMON] unsigned char 
  1862 ;;  data            1    4[COMMON] unsigned char 
  1863 ;;  ack             1    3[COMMON] unsigned char 
  1864 ;; Return value:  Size  Location     Type
  1865 ;;                  1    wreg      unsigned char 
  1866 ;; Registers used:
  1867 ;;		wreg, status,2, status,0, pclath, cstack
  1868 ;; Tracked objects:
  1869 ;;		On entry : 0/0
  1870 ;;		On exit  : 0/0
  1871 ;;		Unchanged: 0/0
  1872 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  1873 ;;      Params:         0       0       0       0       0       0
  1874 ;;      Locals:         4       0       0       0       0       0
  1875 ;;      Temps:          1       0       0       0       0       0
  1876 ;;      Totals:         5       0       0       0       0       0
  1877 ;;Total ram usage:        5 bytes
  1878 ;; Hardware stack levels used: 1
  1879 ;; Hardware stack levels required when called: 2
  1880 ;; This function calls:
  1881 ;;		_CLK_SET_HIGH
  1882 ;;		_CLK_SET_LOW
  1883 ;;		_CLK_SET_OUTPUT
  1884 ;;		_DIO_SET_HIGH
  1885 ;;		_DIO_SET_INPUT
  1886 ;;		_DIO_SET_LOW
  1887 ;;		_DIO_SET_OUTPUT
  1888 ;;		_get_DIO_PIN_value
  1889 ;; This function is called by:
  1890 ;;		_set_segments
  1891 ;; This function uses a non-reentrant model
  1892 ;;
  1893                           
  1894                           
  1895                           ;psect for function _write_byte
  1896  0720                     _write_byte:
  1897                           
  1898                           ;incstack = 0
  1899                           ; Regs used in _write_byte: [wreg+status,2+status,0+pclath+cstack]
  1900                           ;write_byte@b stored from wreg
  1901  0720  00F2               	movwf	write_byte@b
  1902  0721                     l1135:
  1903                           
  1904                           ;tm1637.c: 112:     uint8_t data = b;
  1905  0721  0872               	movf	write_byte@b,w
  1906  0722  00F1               	movwf	??_write_byte
  1907  0723  0871               	movf	??_write_byte,w
  1908  0724  00F4               	movwf	write_byte@data
  1909  0725                     l1137:
  1910                           
  1911                           ;tm1637.c: 115:     CLK_SET_OUTPUT();
  1912  0725  3186  265B  3187   	fcall	_CLK_SET_OUTPUT
  1913  0728                     l1139:
  1914                           
  1915                           ;tm1637.c: 116:     for(uint8_t i = 0; i < 8; i++){
  1916  0728  01F5               	clrf	write_byte@i
  1917  0729                     l1145:
  1918                           
  1919                           ;tm1637.c: 118:         CLK_SET_LOW();
  1920  0729  3186  2627  3187   	fcall	_CLK_SET_LOW
  1921  072C                     l1147:
  1922                           
  1923                           ;tm1637.c: 120:         if(data & 0x01){
  1924  072C  1C74               	btfss	write_byte@data,0
  1925  072D  2F2F               	goto	u151
  1926  072E  2F30               	goto	u150
  1927  072F                     u151:
  1928  072F  2F34               	goto	l1151
  1929  0730                     u150:
  1930  0730                     l1149:
  1931                           
  1932                           ;tm1637.c: 122:             DIO_SET_HIGH();
  1933  0730  3186  261B  3187   	fcall	_DIO_SET_HIGH
  1934                           
  1935                           ;tm1637.c: 123:         }else{
  1936  0733  2F37               	goto	l1153
  1937  0734                     l1151:
  1938                           
  1939                           ;tm1637.c: 125:             DIO_SET_LOW();
  1940  0734  3186  262D  3187   	fcall	_DIO_SET_LOW
  1941  0737                     l1153:
  1942                           
  1943                           ;tm1637.c: 129:         CLK_SET_HIGH();
  1944  0737  3186  2618  3187   	fcall	_CLK_SET_HIGH
  1945  073A                     l1155:
  1946                           
  1947                           ;tm1637.c: 131:         data = data >> 1;
  1948  073A  3674               	lsrf	write_byte@data,w
  1949  073B  00F1               	movwf	??_write_byte
  1950  073C  0871               	movf	??_write_byte,w
  1951  073D  00F4               	movwf	write_byte@data
  1952  073E                     l1157:
  1953                           
  1954                           ;tm1637.c: 132:     }
  1955  073E  3001               	movlw	1
  1956  073F  00F1               	movwf	??_write_byte
  1957  0740  0871               	movf	??_write_byte,w
  1958  0741  07F5               	addwf	write_byte@i,f
  1959  0742  3008               	movlw	8
  1960  0743  0275               	subwf	write_byte@i,w
  1961  0744  1C03               	skipc
  1962  0745  2F47               	goto	u161
  1963  0746  2F48               	goto	u160
  1964  0747                     u161:
  1965  0747  2F29               	goto	l1145
  1966  0748                     u160:
  1967  0748                     l1159:
  1968                           
  1969                           ;tm1637.c: 137:     CLK_SET_LOW();
  1970  0748  3186  2627  3187   	fcall	_CLK_SET_LOW
  1971  074B                     l1161:
  1972                           
  1973                           ;tm1637.c: 138:     DIO_SET_HIGH();
  1974  074B  3186  261B  3187   	fcall	_DIO_SET_HIGH
  1975  074E                     l1163:
  1976                           
  1977                           ;tm1637.c: 141:     CLK_SET_HIGH();
  1978  074E  3186  2618  3187   	fcall	_CLK_SET_HIGH
  1979  0751                     l1165:
  1980                           
  1981                           ;tm1637.c: 144:     DIO_SET_INPUT();
  1982  0751  3186  2648  3187   	fcall	_DIO_SET_INPUT
  1983  0754                     l1167:
  1984                           
  1985                           ;tm1637.c: 146:     uint8_t ack = get_DIO_PIN_value();
  1986  0754  3186  2622  3187   	fcall	_get_DIO_PIN_value
  1987  0757  00F1               	movwf	??_write_byte
  1988  0758  0871               	movf	??_write_byte,w
  1989  0759  00F3               	movwf	write_byte@ack
  1990  075A                     l1169:
  1991                           
  1992                           ;tm1637.c: 147:     if(ack == 0){
  1993  075A  0873               	movf	write_byte@ack,w
  1994  075B  1D03               	btfss	3,2
  1995  075C  2F5E               	goto	u171
  1996  075D  2F5F               	goto	u170
  1997  075E                     u171:
  1998  075E  2F65               	goto	l193
  1999  075F                     u170:
  2000  075F                     l1171:
  2001                           
  2002                           ;tm1637.c: 149:         DIO_SET_OUTPUT();
  2003  075F  3186  2667  3187   	fcall	_DIO_SET_OUTPUT
  2004                           
  2005                           ;tm1637.c: 152:         DIO_SET_LOW();
  2006  0762  3186  262D  3187   	fcall	_DIO_SET_LOW
  2007  0765                     l193:	
  2008                           ;tm1637.c: 153:     }
  2009                           
  2010                           
  2011                           ;tm1637.c: 156:     DIO_SET_OUTPUT();
  2012  0765  3186  2667  3187   	fcall	_DIO_SET_OUTPUT
  2013  0768                     l194:
  2014  0768  0008               	return
  2015  0769                     __end_of_write_byte:
  2016                           
  2017                           	psect	text6
  2018  0622                     __ptext6:	
  2019 ;; *************** function _get_DIO_PIN_value *****************
  2020 ;; Defined at:
  2021 ;;		line 100 in file "tm1637.c"
  2022 ;; Parameters:    Size  Location     Type
  2023 ;;		None
  2024 ;; Auto vars:     Size  Location     Type
  2025 ;;		None
  2026 ;; Return value:  Size  Location     Type
  2027 ;;                  1    wreg      unsigned char 
  2028 ;; Registers used:
  2029 ;;		wreg, status,2, status,0
  2030 ;; Tracked objects:
  2031 ;;		On entry : 0/0
  2032 ;;		On exit  : 0/0
  2033 ;;		Unchanged: 0/0
  2034 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  2035 ;;      Params:         0       0       0       0       0       0
  2036 ;;      Locals:         0       0       0       0       0       0
  2037 ;;      Temps:          0       0       0       0       0       0
  2038 ;;      Totals:         0       0       0       0       0       0
  2039 ;;Total ram usage:        0 bytes
  2040 ;; Hardware stack levels used: 1
  2041 ;; This function calls:
  2042 ;;		Nothing
  2043 ;; This function is called by:
  2044 ;;		_write_byte
  2045 ;; This function uses a non-reentrant model
  2046 ;;
  2047                           
  2048                           
  2049                           ;psect for function _get_DIO_PIN_value
  2050  0622                     _get_DIO_PIN_value:
  2051  0622                     l1089:	
  2052                           ;incstack = 0
  2053                           ; Regs used in _get_DIO_PIN_value: [wreg+status,2+status,0]
  2054                           
  2055  0622                     l1099:	
  2056                           ;tm1637.c: 101:     if(0x04 == 0x01){ return PORTAbits.RA0; }
  2057                           
  2058  0622  0020               	movlb	0	; select bank0
  2059  0623  0C0C               	rrf	12,w	;volatile
  2060  0624  0C89               	rrf	9,f
  2061  0625  3901               	andlw	1
  2062  0626                     l179:
  2063  0626  0008               	return
  2064  0627                     __end_of_get_DIO_PIN_value:
  2065                           
  2066                           	psect	text7
  2067  0648                     __ptext7:	
  2068 ;; *************** function _DIO_SET_INPUT *****************
  2069 ;; Defined at:
  2070 ;;		line 62 in file "tm1637.c"
  2071 ;; Parameters:    Size  Location     Type
  2072 ;;		None
  2073 ;; Auto vars:     Size  Location     Type
  2074 ;;		None
  2075 ;; Return value:  Size  Location     Type
  2076 ;;                  1    wreg      void 
  2077 ;; Registers used:
  2078 ;;		status,2, status,0, pclath, cstack
  2079 ;; Tracked objects:
  2080 ;;		On entry : 0/0
  2081 ;;		On exit  : 0/0
  2082 ;;		Unchanged: 0/0
  2083 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  2084 ;;      Params:         0       0       0       0       0       0
  2085 ;;      Locals:         0       0       0       0       0       0
  2086 ;;      Temps:          0       0       0       0       0       0
  2087 ;;      Totals:         0       0       0       0       0       0
  2088 ;;Total ram usage:        0 bytes
  2089 ;; Hardware stack levels used: 1
  2090 ;; Hardware stack levels required when called: 1
  2091 ;; This function calls:
  2092 ;;		_bit_delay
  2093 ;; This function is called by:
  2094 ;;		_write_byte
  2095 ;; This function uses a non-reentrant model
  2096 ;;
  2097                           
  2098                           
  2099                           ;psect for function _DIO_SET_INPUT
  2100  0648                     _DIO_SET_INPUT:
  2101  0648                     l1081:	
  2102                           ;incstack = 0
  2103                           ; Regs used in _DIO_SET_INPUT: [status,2+status,0+pclath+cstack]
  2104                           
  2105                           
  2106                           ;tm1637.c: 63:     bit_delay();
  2107  0648  3186  2617  3186   	fcall	_bit_delay
  2108  064B                     l1083:
  2109                           
  2110                           ;tm1637.c: 64:     TRISA |= 0x04;
  2111  064B  0021               	movlb	1	; select bank1
  2112  064C  150C               	bsf	12,2	;volatile
  2113                           
  2114                           ;tm1637.c: 65:     bit_delay();
  2115  064D  3186  2617  3186   	fcall	_bit_delay
  2116  0650                     l163:
  2117  0650  0008               	return
  2118  0651                     __end_of_DIO_SET_INPUT:
  2119                           
  2120                           	psect	text8
  2121  0694                     __ptext8:	
  2122 ;; *************** function _stop_segment *****************
  2123 ;; Defined at:
  2124 ;;		line 86 in file "tm1637.c"
  2125 ;; Parameters:    Size  Location     Type
  2126 ;;		None
  2127 ;; Auto vars:     Size  Location     Type
  2128 ;;		None
  2129 ;; Return value:  Size  Location     Type
  2130 ;;                  1    wreg      void 
  2131 ;; Registers used:
  2132 ;;		wreg, status,2, status,0, pclath, cstack
  2133 ;; Tracked objects:
  2134 ;;		On entry : 0/0
  2135 ;;		On exit  : 0/0
  2136 ;;		Unchanged: 0/0
  2137 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  2138 ;;      Params:         0       0       0       0       0       0
  2139 ;;      Locals:         0       0       0       0       0       0
  2140 ;;      Temps:          0       0       0       0       0       0
  2141 ;;      Totals:         0       0       0       0       0       0
  2142 ;;Total ram usage:        0 bytes
  2143 ;; Hardware stack levels used: 1
  2144 ;; Hardware stack levels required when called: 2
  2145 ;; This function calls:
  2146 ;;		_CLK_SET_HIGH
  2147 ;;		_CLK_SET_LOW
  2148 ;;		_CLK_SET_OUTPUT
  2149 ;;		_DIO_SET_HIGH
  2150 ;;		_DIO_SET_LOW
  2151 ;;		_DIO_SET_OUTPUT
  2152 ;; This function is called by:
  2153 ;;		_set_segments
  2154 ;; This function uses a non-reentrant model
  2155 ;;
  2156                           
  2157                           
  2158                           ;psect for function _stop_segment
  2159  0694                     _stop_segment:
  2160  0694                     l1129:	
  2161                           ;incstack = 0
  2162                           ; Regs used in _stop_segment: [wreg+status,2+status,0+pclath+cstack]
  2163                           
  2164                           
  2165                           ;tm1637.c: 88:     DIO_SET_OUTPUT();
  2166  0694  3186  2667  3186   	fcall	_DIO_SET_OUTPUT
  2167                           
  2168                           ;tm1637.c: 89:     CLK_SET_OUTPUT();
  2169  0697  3186  265B  3186   	fcall	_CLK_SET_OUTPUT
  2170                           
  2171                           ;tm1637.c: 92:     CLK_SET_LOW();
  2172  069A  3186  2627  3186   	fcall	_CLK_SET_LOW
  2173                           
  2174                           ;tm1637.c: 93:     DIO_SET_LOW();
  2175  069D  3186  262D  3186   	fcall	_DIO_SET_LOW
  2176  06A0                     l1131:
  2177                           
  2178                           ;tm1637.c: 96:     CLK_SET_HIGH();
  2179  06A0  3186  2618  3186   	fcall	_CLK_SET_HIGH
  2180  06A3                     l1133:
  2181                           
  2182                           ;tm1637.c: 97:     DIO_SET_HIGH();
  2183  06A3  3186  261B  3186   	fcall	_DIO_SET_HIGH
  2184  06A6                     l175:
  2185  06A6  0008               	return
  2186  06A7                     __end_of_stop_segment:
  2187                           
  2188                           	psect	text9
  2189  0681                     __ptext9:	
  2190 ;; *************** function _start_segment *****************
  2191 ;; Defined at:
  2192 ;;		line 72 in file "tm1637.c"
  2193 ;; Parameters:    Size  Location     Type
  2194 ;;		None
  2195 ;; Auto vars:     Size  Location     Type
  2196 ;;		None
  2197 ;; Return value:  Size  Location     Type
  2198 ;;                  1    wreg      void 
  2199 ;; Registers used:
  2200 ;;		wreg, status,2, status,0, pclath, cstack
  2201 ;; Tracked objects:
  2202 ;;		On entry : 0/0
  2203 ;;		On exit  : 0/0
  2204 ;;		Unchanged: 0/0
  2205 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  2206 ;;      Params:         0       0       0       0       0       0
  2207 ;;      Locals:         0       0       0       0       0       0
  2208 ;;      Temps:          0       0       0       0       0       0
  2209 ;;      Totals:         0       0       0       0       0       0
  2210 ;;Total ram usage:        0 bytes
  2211 ;; Hardware stack levels used: 1
  2212 ;; Hardware stack levels required when called: 2
  2213 ;; This function calls:
  2214 ;;		_CLK_SET_HIGH
  2215 ;;		_CLK_SET_LOW
  2216 ;;		_CLK_SET_OUTPUT
  2217 ;;		_DIO_SET_HIGH
  2218 ;;		_DIO_SET_LOW
  2219 ;;		_DIO_SET_OUTPUT
  2220 ;; This function is called by:
  2221 ;;		_set_segments
  2222 ;; This function uses a non-reentrant model
  2223 ;;
  2224                           
  2225                           
  2226                           ;psect for function _start_segment
  2227  0681                     _start_segment:
  2228  0681                     l1123:	
  2229                           ;incstack = 0
  2230                           ; Regs used in _start_segment: [wreg+status,2+status,0+pclath+cstack]
  2231                           
  2232                           
  2233                           ;tm1637.c: 74:     DIO_SET_OUTPUT();
  2234  0681  3186  2667  3186   	fcall	_DIO_SET_OUTPUT
  2235                           
  2236                           ;tm1637.c: 75:     CLK_SET_OUTPUT();
  2237  0684  3186  265B  3186   	fcall	_CLK_SET_OUTPUT
  2238  0687                     l1125:
  2239                           
  2240                           ;tm1637.c: 78:     DIO_SET_HIGH();
  2241  0687  3186  261B  3186   	fcall	_DIO_SET_HIGH
  2242  068A                     l1127:
  2243                           
  2244                           ;tm1637.c: 79:     CLK_SET_HIGH();
  2245  068A  3186  2618  3186   	fcall	_CLK_SET_HIGH
  2246                           
  2247                           ;tm1637.c: 82:     DIO_SET_LOW();
  2248  068D  3186  262D  3186   	fcall	_DIO_SET_LOW
  2249                           
  2250                           ;tm1637.c: 83:     CLK_SET_LOW();
  2251  0690  3186  2627  3186   	fcall	_CLK_SET_LOW
  2252  0693                     l172:
  2253  0693  0008               	return
  2254  0694                     __end_of_start_segment:
  2255                           
  2256                           	psect	text10
  2257  0667                     __ptext10:	
  2258 ;; *************** function _DIO_SET_OUTPUT *****************
  2259 ;; Defined at:
  2260 ;;		line 56 in file "tm1637.c"
  2261 ;; Parameters:    Size  Location     Type
  2262 ;;		None
  2263 ;; Auto vars:     Size  Location     Type
  2264 ;;		None
  2265 ;; Return value:  Size  Location     Type
  2266 ;;                  1    wreg      void 
  2267 ;; Registers used:
  2268 ;;		wreg, status,2, status,0, pclath, cstack
  2269 ;; Tracked objects:
  2270 ;;		On entry : 0/0
  2271 ;;		On exit  : 0/0
  2272 ;;		Unchanged: 0/0
  2273 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  2274 ;;      Params:         0       0       0       0       0       0
  2275 ;;      Locals:         0       0       0       0       0       0
  2276 ;;      Temps:          1       0       0       0       0       0
  2277 ;;      Totals:         1       0       0       0       0       0
  2278 ;;Total ram usage:        1 bytes
  2279 ;; Hardware stack levels used: 1
  2280 ;; Hardware stack levels required when called: 1
  2281 ;; This function calls:
  2282 ;;		_bit_delay
  2283 ;; This function is called by:
  2284 ;;		_start_segment
  2285 ;;		_stop_segment
  2286 ;;		_write_byte
  2287 ;; This function uses a non-reentrant model
  2288 ;;
  2289                           
  2290                           
  2291                           ;psect for function _DIO_SET_OUTPUT
  2292  0667                     _DIO_SET_OUTPUT:
  2293  0667                     l1075:	
  2294                           ;incstack = 0
  2295                           ; Regs used in _DIO_SET_OUTPUT: [wreg+status,2+status,0+pclath+cstack]
  2296                           
  2297                           
  2298                           ;tm1637.c: 57:     bit_delay();
  2299  0667  3186  2617  3186   	fcall	_bit_delay
  2300  066A                     l1077:
  2301                           
  2302                           ;tm1637.c: 58:     TRISA &= ~0x04;
  2303  066A  30FB               	movlw	251
  2304  066B  00F0               	movwf	??_DIO_SET_OUTPUT
  2305  066C  0870               	movf	??_DIO_SET_OUTPUT,w
  2306  066D  0021               	movlb	1	; select bank1
  2307  066E  058C               	andwf	12,f	;volatile
  2308  066F                     l1079:
  2309                           
  2310                           ;tm1637.c: 59:     bit_delay();
  2311  066F  3186  2617  3186   	fcall	_bit_delay
  2312  0672                     l160:
  2313  0672  0008               	return
  2314  0673                     __end_of_DIO_SET_OUTPUT:
  2315                           
  2316                           	psect	text11
  2317  062D                     __ptext11:	
  2318 ;; *************** function _DIO_SET_LOW *****************
  2319 ;; Defined at:
  2320 ;;		line 70 in file "tm1637.c"
  2321 ;; Parameters:    Size  Location     Type
  2322 ;;		None
  2323 ;; Auto vars:     Size  Location     Type
  2324 ;;		None
  2325 ;; Return value:  Size  Location     Type
  2326 ;;                  1    wreg      void 
  2327 ;; Registers used:
  2328 ;;		wreg, status,2, status,0
  2329 ;; Tracked objects:
  2330 ;;		On entry : 0/0
  2331 ;;		On exit  : 0/0
  2332 ;;		Unchanged: 0/0
  2333 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  2334 ;;      Params:         0       0       0       0       0       0
  2335 ;;      Locals:         0       0       0       0       0       0
  2336 ;;      Temps:          1       0       0       0       0       0
  2337 ;;      Totals:         1       0       0       0       0       0
  2338 ;;Total ram usage:        1 bytes
  2339 ;; Hardware stack levels used: 1
  2340 ;; This function calls:
  2341 ;;		Nothing
  2342 ;; This function is called by:
  2343 ;;		_start_segment
  2344 ;;		_stop_segment
  2345 ;;		_write_byte
  2346 ;; This function uses a non-reentrant model
  2347 ;;
  2348                           
  2349                           
  2350                           ;psect for function _DIO_SET_LOW
  2351  062D                     _DIO_SET_LOW:
  2352  062D                     l1087:	
  2353                           ;incstack = 0
  2354                           ; Regs used in _DIO_SET_LOW: [wreg+status,2+status,0]
  2355                           
  2356  062D  30FB               	movlw	251
  2357  062E  00F0               	movwf	??_DIO_SET_LOW
  2358  062F  0870               	movf	??_DIO_SET_LOW,w
  2359  0630  0022               	movlb	2	; select bank2
  2360  0631  058C               	andwf	12,f	;volatile
  2361  0632                     l169:
  2362  0632  0008               	return
  2363  0633                     __end_of_DIO_SET_LOW:
  2364                           
  2365                           	psect	text12
  2366  061B                     __ptext12:	
  2367 ;; *************** function _DIO_SET_HIGH *****************
  2368 ;; Defined at:
  2369 ;;		line 68 in file "tm1637.c"
  2370 ;; Parameters:    Size  Location     Type
  2371 ;;		None
  2372 ;; Auto vars:     Size  Location     Type
  2373 ;;		None
  2374 ;; Return value:  Size  Location     Type
  2375 ;;                  1    wreg      void 
  2376 ;; Registers used:
  2377 ;;		None
  2378 ;; Tracked objects:
  2379 ;;		On entry : 0/0
  2380 ;;		On exit  : 0/0
  2381 ;;		Unchanged: 0/0
  2382 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  2383 ;;      Params:         0       0       0       0       0       0
  2384 ;;      Locals:         0       0       0       0       0       0
  2385 ;;      Temps:          0       0       0       0       0       0
  2386 ;;      Totals:         0       0       0       0       0       0
  2387 ;;Total ram usage:        0 bytes
  2388 ;; Hardware stack levels used: 1
  2389 ;; This function calls:
  2390 ;;		Nothing
  2391 ;; This function is called by:
  2392 ;;		_start_segment
  2393 ;;		_stop_segment
  2394 ;;		_write_byte
  2395 ;; This function uses a non-reentrant model
  2396 ;;
  2397                           
  2398                           
  2399                           ;psect for function _DIO_SET_HIGH
  2400  061B                     _DIO_SET_HIGH:
  2401  061B                     l1085:	
  2402                           ;incstack = 0
  2403                           ; Regs used in _DIO_SET_HIGH: []
  2404                           
  2405  061B  0022               	movlb	2	; select bank2
  2406  061C  150C               	bsf	12,2	;volatile
  2407  061D                     l166:
  2408  061D  0008               	return
  2409  061E                     __end_of_DIO_SET_HIGH:
  2410                           
  2411                           	psect	text13
  2412  065B                     __ptext13:	
  2413 ;; *************** function _CLK_SET_OUTPUT *****************
  2414 ;; Defined at:
  2415 ;;		line 37 in file "tm1637.c"
  2416 ;; Parameters:    Size  Location     Type
  2417 ;;		None
  2418 ;; Auto vars:     Size  Location     Type
  2419 ;;		None
  2420 ;; Return value:  Size  Location     Type
  2421 ;;                  1    wreg      void 
  2422 ;; Registers used:
  2423 ;;		wreg, status,2, status,0, pclath, cstack
  2424 ;; Tracked objects:
  2425 ;;		On entry : 0/0
  2426 ;;		On exit  : 0/0
  2427 ;;		Unchanged: 0/0
  2428 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  2429 ;;      Params:         0       0       0       0       0       0
  2430 ;;      Locals:         0       0       0       0       0       0
  2431 ;;      Temps:          1       0       0       0       0       0
  2432 ;;      Totals:         1       0       0       0       0       0
  2433 ;;Total ram usage:        1 bytes
  2434 ;; Hardware stack levels used: 1
  2435 ;; Hardware stack levels required when called: 1
  2436 ;; This function calls:
  2437 ;;		_bit_delay
  2438 ;; This function is called by:
  2439 ;;		_start_segment
  2440 ;;		_stop_segment
  2441 ;;		_write_byte
  2442 ;; This function uses a non-reentrant model
  2443 ;;
  2444                           
  2445                           
  2446                           ;psect for function _CLK_SET_OUTPUT
  2447  065B                     _CLK_SET_OUTPUT:
  2448  065B                     l1065:	
  2449                           ;incstack = 0
  2450                           ; Regs used in _CLK_SET_OUTPUT: [wreg+status,2+status,0+pclath+cstack]
  2451                           
  2452                           
  2453                           ;tm1637.c: 38:     bit_delay();
  2454  065B  3186  2617  3186   	fcall	_bit_delay
  2455  065E                     l1067:
  2456                           
  2457                           ;tm1637.c: 39:     TRISA &= ~0x02;
  2458  065E  30FD               	movlw	253
  2459  065F  00F0               	movwf	??_CLK_SET_OUTPUT
  2460  0660  0870               	movf	??_CLK_SET_OUTPUT,w
  2461  0661  0021               	movlb	1	; select bank1
  2462  0662  058C               	andwf	12,f	;volatile
  2463  0663                     l1069:
  2464                           
  2465                           ;tm1637.c: 40:     bit_delay();
  2466  0663  3186  2617  3186   	fcall	_bit_delay
  2467  0666                     l148:
  2468  0666  0008               	return
  2469  0667                     __end_of_CLK_SET_OUTPUT:
  2470                           
  2471                           	psect	text14
  2472  0617                     __ptext14:	
  2473 ;; *************** function _bit_delay *****************
  2474 ;; Defined at:
  2475 ;;		line 32 in file "tm1637.c"
  2476 ;; Parameters:    Size  Location     Type
  2477 ;;		None
  2478 ;; Auto vars:     Size  Location     Type
  2479 ;;		None
  2480 ;; Return value:  Size  Location     Type
  2481 ;;                  1    wreg      void 
  2482 ;; Registers used:
  2483 ;;		None
  2484 ;; Tracked objects:
  2485 ;;		On entry : 0/0
  2486 ;;		On exit  : 0/0
  2487 ;;		Unchanged: 0/0
  2488 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  2489 ;;      Params:         0       0       0       0       0       0
  2490 ;;      Locals:         0       0       0       0       0       0
  2491 ;;      Temps:          0       0       0       0       0       0
  2492 ;;      Totals:         0       0       0       0       0       0
  2493 ;;Total ram usage:        0 bytes
  2494 ;; Hardware stack levels used: 1
  2495 ;; This function calls:
  2496 ;;		Nothing
  2497 ;; This function is called by:
  2498 ;;		_CLK_SET_OUTPUT
  2499 ;;		_DIO_SET_OUTPUT
  2500 ;;		_DIO_SET_INPUT
  2501 ;;		_CLK_SET_INPUT
  2502 ;; This function uses a non-reentrant model
  2503 ;;
  2504                           
  2505                           
  2506                           ;psect for function _bit_delay
  2507  0617                     _bit_delay:
  2508  0617                     l145:	
  2509                           ;incstack = 0
  2510                           ; Regs used in _bit_delay: []
  2511                           
  2512  0617  0008               	return
  2513  0618                     __end_of_bit_delay:
  2514                           
  2515                           	psect	text15
  2516  0627                     __ptext15:	
  2517 ;; *************** function _CLK_SET_LOW *****************
  2518 ;; Defined at:
  2519 ;;		line 53 in file "tm1637.c"
  2520 ;; Parameters:    Size  Location     Type
  2521 ;;		None
  2522 ;; Auto vars:     Size  Location     Type
  2523 ;;		None
  2524 ;; Return value:  Size  Location     Type
  2525 ;;                  1    wreg      void 
  2526 ;; Registers used:
  2527 ;;		wreg, status,2, status,0
  2528 ;; Tracked objects:
  2529 ;;		On entry : 0/0
  2530 ;;		On exit  : 0/0
  2531 ;;		Unchanged: 0/0
  2532 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  2533 ;;      Params:         0       0       0       0       0       0
  2534 ;;      Locals:         0       0       0       0       0       0
  2535 ;;      Temps:          1       0       0       0       0       0
  2536 ;;      Totals:         1       0       0       0       0       0
  2537 ;;Total ram usage:        1 bytes
  2538 ;; Hardware stack levels used: 1
  2539 ;; This function calls:
  2540 ;;		Nothing
  2541 ;; This function is called by:
  2542 ;;		_start_segment
  2543 ;;		_stop_segment
  2544 ;;		_write_byte
  2545 ;; This function uses a non-reentrant model
  2546 ;;
  2547                           
  2548                           
  2549                           ;psect for function _CLK_SET_LOW
  2550  0627                     _CLK_SET_LOW:
  2551  0627                     l1073:	
  2552                           ;incstack = 0
  2553                           ; Regs used in _CLK_SET_LOW: [wreg+status,2+status,0]
  2554                           
  2555  0627  30FD               	movlw	253
  2556  0628  00F0               	movwf	??_CLK_SET_LOW
  2557  0629  0870               	movf	??_CLK_SET_LOW,w
  2558  062A  0022               	movlb	2	; select bank2
  2559  062B  058C               	andwf	12,f	;volatile
  2560  062C                     l157:
  2561  062C  0008               	return
  2562  062D                     __end_of_CLK_SET_LOW:
  2563                           
  2564                           	psect	text16
  2565  0618                     __ptext16:	
  2566 ;; *************** function _CLK_SET_HIGH *****************
  2567 ;; Defined at:
  2568 ;;		line 51 in file "tm1637.c"
  2569 ;; Parameters:    Size  Location     Type
  2570 ;;		None
  2571 ;; Auto vars:     Size  Location     Type
  2572 ;;		None
  2573 ;; Return value:  Size  Location     Type
  2574 ;;                  1    wreg      void 
  2575 ;; Registers used:
  2576 ;;		None
  2577 ;; Tracked objects:
  2578 ;;		On entry : 0/0
  2579 ;;		On exit  : 0/0
  2580 ;;		Unchanged: 0/0
  2581 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  2582 ;;      Params:         0       0       0       0       0       0
  2583 ;;      Locals:         0       0       0       0       0       0
  2584 ;;      Temps:          0       0       0       0       0       0
  2585 ;;      Totals:         0       0       0       0       0       0
  2586 ;;Total ram usage:        0 bytes
  2587 ;; Hardware stack levels used: 1
  2588 ;; This function calls:
  2589 ;;		Nothing
  2590 ;; This function is called by:
  2591 ;;		_start_segment
  2592 ;;		_stop_segment
  2593 ;;		_write_byte
  2594 ;; This function uses a non-reentrant model
  2595 ;;
  2596                           
  2597                           
  2598                           ;psect for function _CLK_SET_HIGH
  2599  0618                     _CLK_SET_HIGH:
  2600  0618                     l1071:	
  2601                           ;incstack = 0
  2602                           ; Regs used in _CLK_SET_HIGH: []
  2603                           
  2604  0618  0022               	movlb	2	; select bank2
  2605  0619  148C               	bsf	12,1	;volatile
  2606  061A                     l154:
  2607  061A  0008               	return
  2608  061B                     __end_of_CLK_SET_HIGH:
  2609                           
  2610                           	psect	text17
  2611  0651                     __ptext17:	
  2612 ;; *************** function _SYSTEM_Initialize *****************
  2613 ;; Defined at:
  2614 ;;		line 50 in file "mcc_generated_files/mcc.c"
  2615 ;; Parameters:    Size  Location     Type
  2616 ;;		None
  2617 ;; Auto vars:     Size  Location     Type
  2618 ;;		None
  2619 ;; Return value:  Size  Location     Type
  2620 ;;                  1    wreg      void 
  2621 ;; Registers used:
  2622 ;;		wreg, status,2, status,0, pclath, cstack
  2623 ;; Tracked objects:
  2624 ;;		On entry : 0/0
  2625 ;;		On exit  : 0/0
  2626 ;;		Unchanged: 0/0
  2627 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  2628 ;;      Params:         0       0       0       0       0       0
  2629 ;;      Locals:         0       0       0       0       0       0
  2630 ;;      Temps:          0       0       0       0       0       0
  2631 ;;      Totals:         0       0       0       0       0       0
  2632 ;;Total ram usage:        0 bytes
  2633 ;; Hardware stack levels used: 1
  2634 ;; Hardware stack levels required when called: 1
  2635 ;; This function calls:
  2636 ;;		_OSCILLATOR_Initialize
  2637 ;;		_PIN_MANAGER_Initialize
  2638 ;;		_WDT_Initialize
  2639 ;; This function is called by:
  2640 ;;		_main
  2641 ;; This function uses a non-reentrant model
  2642 ;;
  2643                           
  2644                           
  2645                           ;psect for function _SYSTEM_Initialize
  2646  0651                     _SYSTEM_Initialize:
  2647  0651                     l1207:	
  2648                           ;incstack = 0
  2649                           ; Regs used in _SYSTEM_Initialize: [wreg+status,2+status,0+pclath+cstack]
  2650                           
  2651                           
  2652                           ;mcc_generated_files/mcc.c: 53:     PIN_MANAGER_Initialize();
  2653  0651  3186  26CF  3186   	fcall	_PIN_MANAGER_Initialize
  2654                           
  2655                           ;mcc_generated_files/mcc.c: 54:     OSCILLATOR_Initialize();
  2656  0654  3186  2639  3186   	fcall	_OSCILLATOR_Initialize
  2657                           
  2658                           ;mcc_generated_files/mcc.c: 55:     WDT_Initialize();
  2659  0657  3186  261E  3186   	fcall	_WDT_Initialize
  2660  065A                     l45:
  2661  065A  0008               	return
  2662  065B                     __end_of_SYSTEM_Initialize:
  2663                           
  2664                           	psect	text18
  2665  061E                     __ptext18:	
  2666 ;; *************** function _WDT_Initialize *****************
  2667 ;; Defined at:
  2668 ;;		line 68 in file "mcc_generated_files/mcc.c"
  2669 ;; Parameters:    Size  Location     Type
  2670 ;;		None
  2671 ;; Auto vars:     Size  Location     Type
  2672 ;;		None
  2673 ;; Return value:  Size  Location     Type
  2674 ;;                  1    wreg      void 
  2675 ;; Registers used:
  2676 ;;		wreg
  2677 ;; Tracked objects:
  2678 ;;		On entry : 0/0
  2679 ;;		On exit  : 0/0
  2680 ;;		Unchanged: 0/0
  2681 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  2682 ;;      Params:         0       0       0       0       0       0
  2683 ;;      Locals:         0       0       0       0       0       0
  2684 ;;      Temps:          0       0       0       0       0       0
  2685 ;;      Totals:         0       0       0       0       0       0
  2686 ;;Total ram usage:        0 bytes
  2687 ;; Hardware stack levels used: 1
  2688 ;; This function calls:
  2689 ;;		Nothing
  2690 ;; This function is called by:
  2691 ;;		_SYSTEM_Initialize
  2692 ;; This function uses a non-reentrant model
  2693 ;;
  2694                           
  2695                           
  2696                           ;psect for function _WDT_Initialize
  2697  061E                     _WDT_Initialize:
  2698  061E                     l1193:	
  2699                           ;incstack = 0
  2700                           ; Regs used in _WDT_Initialize: [wreg]
  2701                           
  2702                           
  2703                           ;mcc_generated_files/mcc.c: 71:     WDTCON = 0x16;
  2704  061E  3016               	movlw	22
  2705  061F  0021               	movlb	1	; select bank1
  2706  0620  0097               	movwf	23	;volatile
  2707  0621                     l51:
  2708  0621  0008               	return
  2709  0622                     __end_of_WDT_Initialize:
  2710                           
  2711                           	psect	text19
  2712  06CF                     __ptext19:	
  2713 ;; *************** function _PIN_MANAGER_Initialize *****************
  2714 ;; Defined at:
  2715 ;;		line 55 in file "mcc_generated_files/pin_manager.c"
  2716 ;; Parameters:    Size  Location     Type
  2717 ;;		None
  2718 ;; Auto vars:     Size  Location     Type
  2719 ;;		None
  2720 ;; Return value:  Size  Location     Type
  2721 ;;                  1    wreg      void 
  2722 ;; Registers used:
  2723 ;;		wreg, status,2
  2724 ;; Tracked objects:
  2725 ;;		On entry : 0/0
  2726 ;;		On exit  : 0/0
  2727 ;;		Unchanged: 0/0
  2728 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  2729 ;;      Params:         0       0       0       0       0       0
  2730 ;;      Locals:         0       0       0       0       0       0
  2731 ;;      Temps:          0       0       0       0       0       0
  2732 ;;      Totals:         0       0       0       0       0       0
  2733 ;;Total ram usage:        0 bytes
  2734 ;; Hardware stack levels used: 1
  2735 ;; This function calls:
  2736 ;;		Nothing
  2737 ;; This function is called by:
  2738 ;;		_SYSTEM_Initialize
  2739 ;; This function uses a non-reentrant model
  2740 ;;
  2741                           
  2742                           
  2743                           ;psect for function _PIN_MANAGER_Initialize
  2744  06CF                     _PIN_MANAGER_Initialize:
  2745  06CF                     l1175:	
  2746                           ;incstack = 0
  2747                           ; Regs used in _PIN_MANAGER_Initialize: [wreg+status,2]
  2748                           
  2749                           
  2750                           ;mcc_generated_files/pin_manager.c: 60:     LATA = 0x00;
  2751  06CF  0022               	movlb	2	; select bank2
  2752  06D0  018C               	clrf	12	;volatile
  2753                           
  2754                           ;mcc_generated_files/pin_manager.c: 61:     LATB = 0x00;
  2755  06D1  018D               	clrf	13	;volatile
  2756  06D2                     l1177:
  2757                           
  2758                           ;mcc_generated_files/pin_manager.c: 66:     TRISA = 0xFF;
  2759  06D2  30FF               	movlw	255
  2760  06D3  0021               	movlb	1	; select bank1
  2761  06D4  008C               	movwf	12	;volatile
  2762  06D5                     l1179:
  2763                           
  2764                           ;mcc_generated_files/pin_manager.c: 67:     TRISB = 0xFF;
  2765  06D5  30FF               	movlw	255
  2766  06D6  008D               	movwf	13	;volatile
  2767  06D7                     l1181:
  2768                           
  2769                           ;mcc_generated_files/pin_manager.c: 72:     ANSELB = 0xFE;
  2770  06D7  30FE               	movlw	254
  2771  06D8  0023               	movlb	3	; select bank3
  2772  06D9  008D               	movwf	13	;volatile
  2773  06DA                     l1183:
  2774                           
  2775                           ;mcc_generated_files/pin_manager.c: 73:     ANSELA = 0x1F;
  2776  06DA  301F               	movlw	31
  2777  06DB  008C               	movwf	12	;volatile
  2778                           
  2779                           ;mcc_generated_files/pin_manager.c: 78:     WPUB = 0x00;
  2780  06DC  0024               	movlb	4	; select bank4
  2781  06DD  018D               	clrf	13	;volatile
  2782                           
  2783                           ;mcc_generated_files/pin_manager.c: 79:     WPUA = 0x00;
  2784  06DE  018C               	clrf	12	;volatile
  2785  06DF                     l1185:
  2786                           
  2787                           ;mcc_generated_files/pin_manager.c: 80:     OPTION_REGbits.nWPUEN = 1;
  2788  06DF  0021               	movlb	1	; select bank1
  2789  06E0  1795               	bsf	21,7	;volatile
  2790                           
  2791                           ;mcc_generated_files/pin_manager.c: 86:     APFCON0 = 0x00;
  2792  06E1  0022               	movlb	2	; select bank2
  2793  06E2  019D               	clrf	29	;volatile
  2794                           
  2795                           ;mcc_generated_files/pin_manager.c: 87:     APFCON1 = 0x00;
  2796  06E3  019E               	clrf	30	;volatile
  2797  06E4                     l25:
  2798  06E4  0008               	return
  2799  06E5                     __end_of_PIN_MANAGER_Initialize:
  2800                           
  2801                           	psect	text20
  2802  0639                     __ptext20:	
  2803 ;; *************** function _OSCILLATOR_Initialize *****************
  2804 ;; Defined at:
  2805 ;;		line 58 in file "mcc_generated_files/mcc.c"
  2806 ;; Parameters:    Size  Location     Type
  2807 ;;		None
  2808 ;; Auto vars:     Size  Location     Type
  2809 ;;		None
  2810 ;; Return value:  Size  Location     Type
  2811 ;;                  1    wreg      void 
  2812 ;; Registers used:
  2813 ;;		wreg, status,2
  2814 ;; Tracked objects:
  2815 ;;		On entry : 0/0
  2816 ;;		On exit  : 0/0
  2817 ;;		Unchanged: 0/0
  2818 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  2819 ;;      Params:         0       0       0       0       0       0
  2820 ;;      Locals:         0       0       0       0       0       0
  2821 ;;      Temps:          0       0       0       0       0       0
  2822 ;;      Totals:         0       0       0       0       0       0
  2823 ;;Total ram usage:        0 bytes
  2824 ;; Hardware stack levels used: 1
  2825 ;; This function calls:
  2826 ;;		Nothing
  2827 ;; This function is called by:
  2828 ;;		_SYSTEM_Initialize
  2829 ;; This function uses a non-reentrant model
  2830 ;;
  2831                           
  2832                           
  2833                           ;psect for function _OSCILLATOR_Initialize
  2834  0639                     _OSCILLATOR_Initialize:
  2835  0639                     l1187:	
  2836                           ;incstack = 0
  2837                           ; Regs used in _OSCILLATOR_Initialize: [wreg+status,2]
  2838                           
  2839                           
  2840                           ;mcc_generated_files/mcc.c: 61:     OSCCON = 0x70;
  2841  0639  3070               	movlw	112
  2842  063A  0021               	movlb	1	; select bank1
  2843  063B  0099               	movwf	25	;volatile
  2844  063C                     l1189:
  2845                           
  2846                           ;mcc_generated_files/mcc.c: 63:     OSCTUNE = 0x00;
  2847  063C  0198               	clrf	24	;volatile
  2848  063D                     l1191:
  2849                           
  2850                           ;mcc_generated_files/mcc.c: 65:     BORCON = 0x00;
  2851  063D  0022               	movlb	2	; select bank2
  2852  063E  0196               	clrf	22	;volatile
  2853  063F                     l48:
  2854  063F  0008               	return
  2855  0640                     __end_of_OSCILLATOR_Initialize:
  2856  007E                     btemp	set	126	;btemp
  2857  007E                     wtemp0	set	126
  2858                           
  2859                           	psect	config
  2860                           
  2861                           ;Config register CONFIG1 @ 0x8007
  2862                           ;	Oscillator Selection
  2863                           ;	FOSC = INTOSC, INTOSC oscillator: I/O function on CLKIN pin
  2864                           ;	Watchdog Timer Enable
  2865                           ;	WDTE = OFF, WDT disabled
  2866                           ;	Power-up Timer Enable
  2867                           ;	PWRTE = OFF, PWRT disabled
  2868                           ;	MCLR Pin Function Select
  2869                           ;	MCLRE = ON, MCLR/VPP pin function is MCLR
  2870                           ;	Flash Program Memory Code Protection
  2871                           ;	CP = OFF, Program memory code protection is disabled
  2872                           ;	Data Memory Code Protection
  2873                           ;	CPD = OFF, Data memory code protection is disabled
  2874                           ;	Brown-out Reset Enable
  2875                           ;	BOREN = ON, Brown-out Reset enabled
  2876                           ;	Clock Out Enable
  2877                           ;	CLKOUTEN = OFF, CLKOUT function is disabled. I/O or oscillator function on the CLKOUT 
      +                          pin
  2878                           ;	Internal/External Switchover
  2879                           ;	IESO = ON, Internal/External Switchover mode is enabled
  2880                           ;	Fail-Safe Clock Monitor Enable
  2881                           ;	FCMEN = ON, Fail-Safe Clock Monitor is enabled
  2882  8007                     	org	32775
  2883  8007  3FE4               	dw	16356
  2884                           
  2885                           ;Config register CONFIG2 @ 0x8008
  2886                           ;	Flash Memory Self-Write Protection
  2887                           ;	WRT = OFF, Write protection off
  2888                           ;	PLL Enable
  2889                           ;	PLLEN = OFF, 4x PLL disabled
  2890                           ;	Stack Overflow/Underflow Reset Enable
  2891                           ;	STVREN = ON, Stack Overflow or Underflow will cause a Reset
  2892                           ;	Brown-out Reset Voltage Selection
  2893                           ;	BORV = LO, Brown-out Reset Voltage (Vbor), low trip point selected.
  2894                           ;	Low-Voltage Programming Enable
  2895                           ;	LVP = OFF, High-voltage on MCLR/VPP must be used for programming
  2896  8008                     	org	32776
  2897  8008  1EFF               	dw	7935

Data Sizes:
    Strings     0
    Constant    0
    Data        14
    BSS         5
    Persistent  32
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14     14      14
    BANK0            80     10      29
    BANK1            80      0       0
    BANK2            80      0       0
    BANK3            80      0       0
    BANK4            48      0       0

Pointer List with Targets:

    set_segments@segments	PTR const unsigned char  size(1) Largest target is 4
		 -> clear_segment@data(BANK0[4]), main@data(BANK0[4]), 


Critical Paths under _main in COMMON

    _main->_clear_segment
    _clear_segment->_set_segments
    _set_segments->_write_byte
    _write_byte->_CLK_SET_LOW
    _write_byte->_CLK_SET_OUTPUT
    _write_byte->_DIO_SET_LOW
    _write_byte->_DIO_SET_OUTPUT
    _stop_segment->_CLK_SET_LOW
    _stop_segment->_CLK_SET_OUTPUT
    _stop_segment->_DIO_SET_LOW
    _stop_segment->_DIO_SET_OUTPUT
    _start_segment->_CLK_SET_LOW
    _start_segment->_CLK_SET_OUTPUT
    _start_segment->_DIO_SET_LOW
    _start_segment->_DIO_SET_OUTPUT

Critical Paths under _main in BANK0

    _main->_clear_segment

Critical Paths under _main in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 8     8      0    2065
                                             12 COMMON     2     2      0
                                              4 BANK0      6     6      0
                  _SYSTEM_Initialize
                      _clear_segment
                       _encode_digit
                     _set_brigthness
                       _set_segments
 ---------------------------------------------------------------------------------
 (1) _set_brigthness                                       3     2      1     142
                                              0 COMMON     3     2      1
 ---------------------------------------------------------------------------------
 (1) _encode_digit                                         1     1      0      22
                                              0 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (1) _clear_segment                                        5     5      0     834
                                             11 COMMON     1     1      0
                                              0 BANK0      4     4      0
                       _set_segments
 ---------------------------------------------------------------------------------
 (1) _set_segments                                         5     3      2     810
                                              6 COMMON     5     3      2
                      _start_segment
                       _stop_segment
                         _write_byte
 ---------------------------------------------------------------------------------
 (2) _write_byte                                           5     5      0     143
                                              1 COMMON     5     5      0
                       _CLK_SET_HIGH
                        _CLK_SET_LOW
                     _CLK_SET_OUTPUT
                       _DIO_SET_HIGH
                      _DIO_SET_INPUT
                        _DIO_SET_LOW
                     _DIO_SET_OUTPUT
                  _get_DIO_PIN_value
 ---------------------------------------------------------------------------------
 (3) _get_DIO_PIN_value                                    0     0      0       0
 ---------------------------------------------------------------------------------
 (3) _DIO_SET_INPUT                                        0     0      0       0
                          _bit_delay
 ---------------------------------------------------------------------------------
 (2) _stop_segment                                         0     0      0       0
                       _CLK_SET_HIGH
                        _CLK_SET_LOW
                     _CLK_SET_OUTPUT
                       _DIO_SET_HIGH
                        _DIO_SET_LOW
                     _DIO_SET_OUTPUT
 ---------------------------------------------------------------------------------
 (2) _start_segment                                        0     0      0       0
                       _CLK_SET_HIGH
                        _CLK_SET_LOW
                     _CLK_SET_OUTPUT
                       _DIO_SET_HIGH
                        _DIO_SET_LOW
                     _DIO_SET_OUTPUT
 ---------------------------------------------------------------------------------
 (3) _DIO_SET_OUTPUT                                       1     1      0       0
                                              0 COMMON     1     1      0
                          _bit_delay
 ---------------------------------------------------------------------------------
 (3) _DIO_SET_LOW                                          1     1      0       0
                                              0 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (3) _DIO_SET_HIGH                                         0     0      0       0
 ---------------------------------------------------------------------------------
 (3) _CLK_SET_OUTPUT                                       1     1      0       0
                                              0 COMMON     1     1      0
                          _bit_delay
 ---------------------------------------------------------------------------------
 (4) _bit_delay                                            0     0      0       0
 ---------------------------------------------------------------------------------
 (3) _CLK_SET_LOW                                          1     1      0       0
                                              0 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (3) _CLK_SET_HIGH                                         0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _SYSTEM_Initialize                                    0     0      0       0
              _OSCILLATOR_Initialize
             _PIN_MANAGER_Initialize
                     _WDT_Initialize
 ---------------------------------------------------------------------------------
 (2) _WDT_Initialize                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _PIN_MANAGER_Initialize                               0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _OSCILLATOR_Initialize                                0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 4
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _SYSTEM_Initialize
     _OSCILLATOR_Initialize
     _PIN_MANAGER_Initialize
     _WDT_Initialize
   _clear_segment
     _set_segments
       _start_segment
         _CLK_SET_HIGH
         _CLK_SET_LOW
         _CLK_SET_OUTPUT
           _bit_delay
         _DIO_SET_HIGH
         _DIO_SET_LOW
         _DIO_SET_OUTPUT
           _bit_delay
       _stop_segment
         _CLK_SET_HIGH
         _CLK_SET_LOW
         _CLK_SET_OUTPUT
         _DIO_SET_HIGH
         _DIO_SET_LOW
         _DIO_SET_OUTPUT
       _write_byte
         _CLK_SET_HIGH
         _CLK_SET_LOW
         _CLK_SET_OUTPUT
         _DIO_SET_HIGH
         _DIO_SET_INPUT
           _bit_delay
         _DIO_SET_LOW
         _DIO_SET_OUTPUT
         _get_DIO_PIN_value
   _encode_digit
   _set_brigthness
   _set_segments

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             170      0       0       0        0.0%
EEDATA             100      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
BITCOMMON            E      0       0       1        0.0%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
COMMON               E      E       E       2      100.0%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
BITSFR2              0      0       0       3        0.0%
SFR2                 0      0       0       3        0.0%
STACK                0      0       0       3        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
ABS                  0      0      2B       4        0.0%
BITBANK0            50      0       0       5        0.0%
BITSFR4              0      0       0       5        0.0%
SFR4                 0      0       0       5        0.0%
BANK0               50      A      1D       6       36.2%
BITSFR5              0      0       0       6        0.0%
SFR5                 0      0       0       6        0.0%
BITBANK1            50      0       0       7        0.0%
BITSFR6              0      0       0       7        0.0%
SFR6                 0      0       0       7        0.0%
BANK1               50      0       0       8        0.0%
BITSFR7              0      0       0       8        0.0%
SFR7                 0      0       0       8        0.0%
BITBANK2            50      0       0       9        0.0%
BITSFR8              0      0       0       9        0.0%
SFR8                 0      0       0       9        0.0%
BANK2               50      0       0      10        0.0%
BITSFR9              0      0       0      10        0.0%
SFR9                 0      0       0      10        0.0%
BITBANK3            50      0       0      11        0.0%
BITSFR10             0      0       0      11        0.0%
SFR10                0      0       0      11        0.0%
BANK3               50      0       0      12        0.0%
BITSFR11             0      0       0      12        0.0%
SFR11                0      0       0      12        0.0%
BITBANK4            30      0       0      13        0.0%
BITSFR12             0      0       0      13        0.0%
SFR12                0      0       0      13        0.0%
BANK4               30      0       0      14        0.0%
BITSFR13             0      0       0      14        0.0%
SFR13                0      0       0      14        0.0%
BITSFR14             0      0       0      15        0.0%
SFR14                0      0       0      15        0.0%
DATA                 0      0      2B      15        0.0%
BITSFR15             0      0       0      16        0.0%
SFR15                0      0       0      16        0.0%
BITSFR16             0      0       0      17        0.0%
SFR16                0      0       0      17        0.0%
BITSFR17             0      0       0      18        0.0%
SFR17                0      0       0      18        0.0%
BITSFR18             0      0       0      19        0.0%
SFR18                0      0       0      19        0.0%
BITSFR19             0      0       0      20        0.0%
SFR19                0      0       0      20        0.0%
BITSFR20             0      0       0      21        0.0%
SFR20                0      0       0      21        0.0%
BITSFR21             0      0       0      22        0.0%
SFR21                0      0       0      22        0.0%
BITSFR22             0      0       0      23        0.0%
SFR22                0      0       0      23        0.0%
BITSFR23             0      0       0      24        0.0%
SFR23                0      0       0      24        0.0%
BITSFR24             0      0       0      25        0.0%
SFR24                0      0       0      25        0.0%
BITSFR25             0      0       0      26        0.0%
SFR25                0      0       0      26        0.0%
BITSFR26             0      0       0      27        0.0%
SFR26                0      0       0      27        0.0%
BITSFR27             0      0       0      28        0.0%
SFR27                0      0       0      28        0.0%
BITSFR28             0      0       0      29        0.0%
SFR28                0      0       0      29        0.0%
BITSFR29             0      0       0      30        0.0%
SFR29                0      0       0      30        0.0%
BITSFR30             0      0       0      31        0.0%
SFR30                0      0       0      31        0.0%
BITSFR31             0      0       0      32        0.0%
SFR31                0      0       0      32        0.0%


Microchip Technology PIC Macro Assembler V2.32 build 20210201212658 
Symbol Table                                                                                   Mon Oct 25 22:00:55 2021

         __size_of_start_segment 0013                      _SSPSTATbits 0214                               l25 06E4  
                             l51 0621                               l45 065A                               l48 063F  
                            l210 06B9                              l205 071F                              l213 0647  
                            l160 0672                              l145 0617                              l154 061A  
                            l163 0650                              l148 0666                              l172 0693  
                            l157 062C                              l166 061D                              l175 06A6  
                            l169 0632                              l193 0765                              l194 0768  
                            l179 0626                              l199 06CE                              u200 07CB  
                            u201 07CA                              u150 0730                              u151 072F  
                            u160 0748                              u161 0747                              u217 07D9  
                            u170 075F                              u171 075E                              u180 070F  
                            u181 070E                              u190 06C0                              u191 06BF  
                            wreg 0009                   ??_encode_digit 0070                             l1201 0705  
                           l1123 0681                             l1131 06A0                             l1203 0709  
                           l1211 06B0                             l1125 0687                             l1133 06A3  
                           l1205 070F                             l1213 0641                             l1221 06C8  
                           l1207 0651                             l1071 0618                             l1127 068A  
                           l1151 0734                             l1135 0721                             l1231 0772  
                           l1223 0769                             l1073 0627                             l1065 065B  
                           l1129 0694                             l1081 0648                             l1161 074B  
                           l1153 0737                             l1145 0729                             l1137 0725  
                           l1209 06A7                             l1217 06BB                             l1241 078F  
                           l1233 0773                             l1225 076C                             l1067 065E  
                           l1075 0667                             l1083 064B                             l1171 075F  
                           l1163 074E                             l1155 073A                             l1147 072C  
                           l1139 0728                             l1219 06C0                             l1251 07B0  
                           l1243 0797                             l1235 077C                             l1227 076E  
                           l1181 06D7                             l1069 0663                             l1085 061B  
                           l1077 066A                             l1165 0751                             l1157 073E  
                           l1149 0730                             l1261 07C1                             l1253 07B2  
                           l1245 079F                             l1237 077F                             l1229 0770  
                           l1191 063D                             l1183 06DA                             l1175 06CF  
                           l1087 062D                             l1079 066F                             l1167 0754  
                           l1159 0748                             l1271 07E4                             l1263 07C5  
                           l1247 07A5                             l1239 0787                             l1185 06DF  
                           l1177 06D2                             l1193 061E                             l1089 0622  
                           l1169 075A                             l1265 07CB                             l1249 07AE  
                           l1187 0639                             l1179 06D5                             l1099 0622  
                           l1195 06E6                             l1267 07D4                             l1259 07B4  
                           l1189 063C                             l1197 06F9                             l1269 07DF  
                           l1199 06FB                             _LATA 010C                             _LATB 010D  
                           _WPUA 020C                             _WPUB 020D                             _main 0769  
                  write_byte@ack 0073                             fsr0h 0005                             fsr1h 0007  
                           fsr0l 0004                             indf1 0001                             fsr1l 0006  
                           btemp 007E                             start 0002   __size_of_OSCILLATOR_Initialize 0007  
  __end_of_OSCILLATOR_Initialize 0640            __size_of_stop_segment 0013                            ?_main 0070  
                          _TRISA 008C                            _TRISB 008D                   _WDT_Initialize 061E  
                  _start_segment 0681                   write_byte@data 0074                            main@i 0037  
                          main@k 0032                            status 0003                            wtemp0 007E  
           __end_of_CLK_SET_HIGH 061B                  __initialization 07EC                     _stop_segment 0694  
                   __end_of_main 07EC             __end_of_DIO_SET_HIGH 061E                           ??_main 007C  
           __size_of_CLK_SET_LOW 0006           __end_of_WDT_Initialize 0622             __size_of_DIO_SET_LOW 0006  
                set_segments@pos 0077                   ?_start_segment 0070                           _ANSELA 018C  
                         _ANSELB 018D                           _BORCON 0116                           _OSCCON 0099  
                         _WDTCON 0097                           _SSPBUF 0211            __end_of_clear_segment 06BA  
           __end_of_encode_digit 0648                  ?_WDT_Initialize 0070          __size_of_set_brigthness 0015  
              _SYSTEM_Initialize 0651          __end_of__initialization 07FD               ?_SYSTEM_Initialize 0070  
        __size_of_CLK_SET_OUTPUT 000C         set_brigthness@brightness 0072                   __pcstackCOMMON 0070  
                   __pidataBANK0 0673              ??_SYSTEM_Initialize 0070               __size_of_bit_delay 0001  
          __end_of_DIO_SET_INPUT 0651                   _OPTION_REGbits 0095                  ??_start_segment 0071  
      __end_of_SYSTEM_Initialize 065B                       __pbssBANK0 0038            __size_of_CLK_SET_HIGH 0003  
              _get_DIO_PIN_value 0622          __size_of_DIO_SET_OUTPUT 000C               ?_get_DIO_PIN_value 0070  
          __size_of_DIO_SET_HIGH 0003                       __pmaintext 0769              ??_get_DIO_PIN_value 0070  
                        _APFCON0 011D                          _APFCON1 011E               set_segments@length 0076  
                   _CLK_SET_HIGH 0618                          _OSCTUNE 0098                          _SSPCON2 0216  
                        _SSPSTAT 0214        __end_of_get_DIO_PIN_value 0627                     _DIO_SET_HIGH 061B  
              __end_of_bit_delay 0618            __size_of_encode_digit 0008                    ?_set_segments 0076  
                        __ptext1 06BA                          __ptext2 0640                          __ptext3 06A7  
                        __ptext4 06E5                          __ptext5 0720                          __ptext6 0622  
                        __ptext7 0648                          __ptext8 0694                          __ptext9 0681  
          _OSCILLATOR_Initialize 0639                          _segdata 0020         ??_PIN_MANAGER_Initialize 0070  
                 _set_brigthness 06BA       __size_of_SYSTEM_Initialize 000A             end_of_initialization 07FD  
                   _encode_digit 0640               clear_segment@F2532 0038                          init_ram 0633  
                        initloop 0634                   _CLK_SET_OUTPUT 065B             set_segments@segments 0079  
                 ??_set_segments 0078                    ??_CLK_SET_LOW 0070                 ??_WDT_Initialize 0070  
                      _PORTAbits 000C                    ??_DIO_SET_LOW 0070                     _m_brightness 003C  
         __end_of_set_brigthness 06CF       __size_of_get_DIO_PIN_value 0005           __end_of_CLK_SET_OUTPUT 0667  
                 _DIO_SET_OUTPUT 0667                       _write_byte 0720           ?_OSCILLATOR_Initialize 0070  
            start_initialization 07EC                  ?_set_brigthness 0070              __end_of_CLK_SET_LOW 062D  
__size_of_PIN_MANAGER_Initialize 0016           __size_of_clear_segment 0013              __end_of_DIO_SET_LOW 0633  
                ?_CLK_SET_OUTPUT 0070           __end_of_DIO_SET_OUTPUT 0673                      __pdataBANK0 0020  
                      ___latbits 0001                    __pcstackBANK0 002E            __end_of_start_segment 0694  
           __end_of_set_segments 0720                  ?_DIO_SET_OUTPUT 0070           __size_of_DIO_SET_INPUT 0009  
               set_brigthness@on 0070           _PIN_MANAGER_Initialize 06CF                    ?_stop_segment 0070  
                      _bit_delay 0617                    _clear_segment 06A7                      _CLK_SET_LOW 0627  
                    ?_write_byte 0070                      _DIO_SET_LOW 062D                   ??_stop_segment 0071  
                 ?_clear_segment 0070                clear_segment@data 002E                       ?_bit_delay 0070  
                      main@F2513 002A                encode_digit@digit 0070                    _DIO_SET_INPUT 0648  
                    write_byte@b 0072                      write_byte@i 0075              __size_of_write_byte 0049  
                  set_segments@k 007A          ??_OSCILLATOR_Initialize 0070                 ??_set_brigthness 0071  
                 ?_DIO_SET_INPUT 0070            __size_of_set_segments 003B                 ??_CLK_SET_OUTPUT 0070  
                       __ptext10 0667                         __ptext11 062D                         __ptext20 0639  
                       __ptext12 061B                         __ptext13 065B                         __ptext14 0617  
                       __ptext15 0627                         __ptext16 0618                         __ptext17 0651  
                       __ptext18 061E                         __ptext19 06CF                    __size_of_main 0083  
                ??_clear_segment 007B                      ??_bit_delay 0070                         main@data 0033  
                   _set_segments 06E5                    ?_CLK_SET_HIGH 0070             __end_of_stop_segment 06A7  
               ??_DIO_SET_OUTPUT 0070          __size_of_WDT_Initialize 0004                    ?_DIO_SET_HIGH 0070  
        ?_PIN_MANAGER_Initialize 0070                     ?_CLK_SET_LOW 0070                     ??_write_byte 0071  
                ??_DIO_SET_INPUT 0070                     ?_DIO_SET_LOW 0070                   ??_CLK_SET_HIGH 0070  
                    _SSPCON1bits 0215                      _SSPCON2bits 0216                   ??_DIO_SET_HIGH 0070  
                  ?_encode_digit 0070   __end_of_PIN_MANAGER_Initialize 06E5               __end_of_write_byte 0769  

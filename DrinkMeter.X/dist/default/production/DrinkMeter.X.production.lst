

Microchip MPLAB XC8 Assembler V2.32 build 20210201212658 
                                                                                               Sun Dec 19 13:46:01 2021

Microchip MPLAB XC8 C Compiler v2.32 (Free license) build 20210201212658 Og1 
     1                           	processor	16F1938
     2                           	pagewidth 120
     3                           	opt	flic
     4                           	psect	idataBANK2,global,class=CODE,delta=2,noexec
     5                           	psect	stringtext1,global,class=STRCODE,delta=2,noexec
     6                           	psect	stringtext2,global,class=STRCODE,delta=2,noexec
     7                           	psect	stringtext3,global,class=STRCODE,delta=2,noexec
     8                           	psect	stringtext4,global,class=STRCODE,delta=2,noexec
     9                           	psect	stringtext5,global,class=STRCODE,delta=2,noexec
    10                           	psect	stringtext6,global,class=STRCODE,delta=2,noexec
    11                           	psect	stringtext7,global,class=STRCODE,delta=2,noexec
    12                           	psect	stringtext8,global,class=STRCODE,delta=2,noexec
    13                           	psect	stringtext9,global,class=STRCODE,delta=2,noexec
    14                           	psect	stringtext10,global,class=STRCODE,delta=2,noexec
    15                           	psect	cinit,global,class=CODE,merge=1,delta=2
    16                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1,noexec
    17                           	psect	bssBANK2,global,class=BANK2,space=1,delta=1,noexec
    18                           	psect	dataBANK2,global,class=BANK2,space=1,delta=1,noexec
    19                           	psect	inittext,global,class=CODE,delta=2
    20                           	psect	clrtext,global,class=CODE,delta=2
    21                           	psect	cstackBANK1,global,class=BANK1,space=1,delta=1,noexec
    22                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1,noexec
    23                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,noexec
    24                           	psect	maintext,global,class=CODE,merge=1,split=1,delta=2
    25                           	psect	text1,local,class=CODE,merge=1,delta=2
    26                           	psect	text2,local,class=CODE,merge=1,delta=2
    27                           	psect	text3,local,class=CODE,merge=1,delta=2,group=3
    28                           	psect	text4,local,class=CODE,merge=1,delta=2,group=1
    29                           	psect	text5,local,class=CODE,merge=1,delta=2,group=1
    30                           	psect	text6,local,class=CODE,merge=1,delta=2,group=1
    31                           	psect	text7,local,class=CODE,merge=1,delta=2,group=2
    32                           	psect	text8,local,class=CODE,merge=1,delta=2,group=2
    33                           	psect	text9,local,class=CODE,merge=1,delta=2,group=3
    34                           	psect	text10,local,class=CODE,merge=1,delta=2,group=1
    35                           	psect	text11,local,class=CODE,merge=1,delta=2,group=1
    36                           	psect	text12,local,class=CODE,merge=1,delta=2,group=3
    37                           	psect	text13,local,class=CODE,merge=1,delta=2,group=3
    38                           	psect	text14,local,class=CODE,merge=1,delta=2,group=3
    39                           	psect	text15,local,class=CODE,merge=1,delta=2,group=3
    40                           	psect	text16,local,class=CODE,merge=1,delta=2,group=3
    41                           	psect	text17,local,class=CODE,merge=1,delta=2,group=2
    42                           	psect	text18,local,class=CODE,merge=1,delta=2,group=2
    43                           	psect	text19,local,class=CODE,merge=1,delta=2
    44                           	psect	text20,local,class=CODE,merge=1,delta=2
    45                           	psect	text21,local,class=CODE,merge=1,delta=2
    46                           	psect	text22,local,class=CODE,merge=1,delta=2
    47                           	psect	text23,local,class=CODE,merge=1,delta=2
    48                           	psect	text24,local,class=CODE,merge=1,delta=2
    49                           	psect	text25,local,class=CODE,merge=1,delta=2
    50                           	psect	text26,local,class=CODE,merge=1,delta=2
    51                           	psect	text27,local,class=CODE,merge=1,delta=2
    52                           	psect	text28,local,class=CODE,merge=1,delta=2
    53                           	psect	text29,local,class=CODE,merge=1,delta=2
    54                           	psect	text30,local,class=CODE,merge=1,delta=2
    55                           	psect	text31,local,class=CODE,merge=1,delta=2
    56                           	psect	text32,local,class=CODE,merge=1,delta=2
    57                           	psect	text33,local,class=CODE,merge=1,delta=2
    58                           	psect	text34,local,class=CODE,merge=1,delta=2,group=2
    59                           	psect	text35,local,class=CODE,merge=1,delta=2,group=2
    60                           	psect	text36,local,class=CODE,merge=1,delta=2,group=2
    61                           	psect	text37,local,class=CODE,merge=1,delta=2
    62                           	psect	text38,local,class=CODE,merge=1,delta=2
    63                           	psect	text39,local,class=CODE,merge=1,delta=2
    64                           	psect	text40,local,class=CODE,merge=1,delta=2
    65                           	psect	text41,local,class=CODE,merge=1,delta=2,group=2
    66                           	psect	text42,local,class=CODE,merge=1,delta=2,group=2
    67                           	psect	text43,local,class=CODE,merge=1,delta=2,group=2
    68                           	psect	text44,local,class=CODE,merge=1,delta=2
    69                           	psect	text45,local,class=CODE,merge=1,delta=2
    70                           	psect	text46,local,class=CODE,merge=1,delta=2
    71                           	psect	text47,local,class=CODE,merge=1,delta=2
    72                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=2,noexec
    73                           	dabs	1,0x7E,2
    74  0000                     
    75                           ; Version 2.32
    76                           ; Generated 02/02/2021 GMT
    77                           ; 
    78                           ; Copyright Â© 2021, Microchip Technology Inc. and its subsidiaries ("Microchip")
    79                           ; All rights reserved.
    80                           ; 
    81                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    82                           ; 
    83                           ; Redistribution and use in source and binary forms, with or without modification, are
    84                           ; permitted provided that the following conditions are met:
    85                           ; 
    86                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    87                           ;        conditions and the following disclaimer.
    88                           ; 
    89                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    90                           ;        of conditions and the following disclaimer in the documentation and/or other
    91                           ;        materials provided with the distribution. Publication is not required when
    92                           ;        this file is used in an embedded application.
    93                           ; 
    94                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    95                           ;        software without specific prior written permission.
    96                           ; 
    97                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    98                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    99                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
   100                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
   101                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
   102                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
   103                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
   104                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
   105                           ; 
   106                           ; 
   107                           ; Code-generator required, PIC16F1938 Definitions
   108                           ; 
   109                           ; SFR Addresses
   110  0000                     	;# 
   111  0001                     	;# 
   112  0002                     	;# 
   113  0003                     	;# 
   114  0004                     	;# 
   115  0005                     	;# 
   116  0006                     	;# 
   117  0007                     	;# 
   118  0008                     	;# 
   119  0009                     	;# 
   120  000A                     	;# 
   121  000B                     	;# 
   122  000C                     	;# 
   123  000D                     	;# 
   124  000E                     	;# 
   125  0010                     	;# 
   126  0011                     	;# 
   127  0012                     	;# 
   128  0013                     	;# 
   129  0015                     	;# 
   130  0016                     	;# 
   131  0016                     	;# 
   132  0017                     	;# 
   133  0018                     	;# 
   134  0019                     	;# 
   135  001A                     	;# 
   136  001B                     	;# 
   137  001C                     	;# 
   138  001E                     	;# 
   139  001F                     	;# 
   140  008C                     	;# 
   141  008D                     	;# 
   142  008E                     	;# 
   143  0090                     	;# 
   144  0091                     	;# 
   145  0092                     	;# 
   146  0093                     	;# 
   147  0095                     	;# 
   148  0096                     	;# 
   149  0097                     	;# 
   150  0098                     	;# 
   151  0099                     	;# 
   152  009A                     	;# 
   153  009B                     	;# 
   154  009B                     	;# 
   155  009C                     	;# 
   156  009D                     	;# 
   157  009E                     	;# 
   158  010C                     	;# 
   159  010D                     	;# 
   160  010E                     	;# 
   161  0110                     	;# 
   162  0111                     	;# 
   163  0112                     	;# 
   164  0113                     	;# 
   165  0114                     	;# 
   166  0115                     	;# 
   167  0116                     	;# 
   168  0117                     	;# 
   169  0118                     	;# 
   170  0119                     	;# 
   171  011A                     	;# 
   172  011B                     	;# 
   173  011D                     	;# 
   174  018C                     	;# 
   175  018D                     	;# 
   176  0191                     	;# 
   177  0191                     	;# 
   178  0192                     	;# 
   179  0193                     	;# 
   180  0193                     	;# 
   181  0193                     	;# 
   182  0194                     	;# 
   183  0195                     	;# 
   184  0196                     	;# 
   185  0199                     	;# 
   186  019A                     	;# 
   187  019B                     	;# 
   188  019B                     	;# 
   189  019B                     	;# 
   190  019B                     	;# 
   191  019C                     	;# 
   192  019C                     	;# 
   193  019D                     	;# 
   194  019E                     	;# 
   195  019F                     	;# 
   196  020D                     	;# 
   197  0210                     	;# 
   198  0211                     	;# 
   199  0212                     	;# 
   200  0213                     	;# 
   201  0214                     	;# 
   202  0215                     	;# 
   203  0215                     	;# 
   204  0216                     	;# 
   205  0217                     	;# 
   206  0291                     	;# 
   207  0291                     	;# 
   208  0292                     	;# 
   209  0293                     	;# 
   210  0294                     	;# 
   211  0295                     	;# 
   212  0295                     	;# 
   213  0296                     	;# 
   214  0298                     	;# 
   215  0298                     	;# 
   216  0299                     	;# 
   217  029A                     	;# 
   218  029B                     	;# 
   219  029C                     	;# 
   220  029C                     	;# 
   221  029D                     	;# 
   222  029E                     	;# 
   223  029F                     	;# 
   224  0311                     	;# 
   225  0311                     	;# 
   226  0312                     	;# 
   227  0313                     	;# 
   228  0314                     	;# 
   229  0315                     	;# 
   230  0315                     	;# 
   231  0316                     	;# 
   232  0318                     	;# 
   233  0318                     	;# 
   234  0319                     	;# 
   235  031A                     	;# 
   236  031C                     	;# 
   237  031C                     	;# 
   238  031D                     	;# 
   239  031E                     	;# 
   240  0394                     	;# 
   241  0395                     	;# 
   242  0396                     	;# 
   243  0415                     	;# 
   244  0416                     	;# 
   245  0417                     	;# 
   246  041C                     	;# 
   247  041D                     	;# 
   248  041E                     	;# 
   249  0791                     	;# 
   250  0792                     	;# 
   251  0793                     	;# 
   252  0794                     	;# 
   253  0795                     	;# 
   254  0798                     	;# 
   255  0799                     	;# 
   256  07A0                     	;# 
   257  07A1                     	;# 
   258  07A3                     	;# 
   259  07A4                     	;# 
   260  07A6                     	;# 
   261  07A7                     	;# 
   262  07A9                     	;# 
   263  07AA                     	;# 
   264  0FE4                     	;# 
   265  0FE5                     	;# 
   266  0FE6                     	;# 
   267  0FE7                     	;# 
   268  0FE8                     	;# 
   269  0FE9                     	;# 
   270  0FEA                     	;# 
   271  0FEB                     	;# 
   272  0FED                     	;# 
   273  0FEE                     	;# 
   274  0FEF                     	;# 
   275  0000                     	;# 
   276  0001                     	;# 
   277  0002                     	;# 
   278  0003                     	;# 
   279  0004                     	;# 
   280  0005                     	;# 
   281  0006                     	;# 
   282  0007                     	;# 
   283  0008                     	;# 
   284  0009                     	;# 
   285  000A                     	;# 
   286  000B                     	;# 
   287  000C                     	;# 
   288  000D                     	;# 
   289  000E                     	;# 
   290  0010                     	;# 
   291  0011                     	;# 
   292  0012                     	;# 
   293  0013                     	;# 
   294  0015                     	;# 
   295  0016                     	;# 
   296  0016                     	;# 
   297  0017                     	;# 
   298  0018                     	;# 
   299  0019                     	;# 
   300  001A                     	;# 
   301  001B                     	;# 
   302  001C                     	;# 
   303  001E                     	;# 
   304  001F                     	;# 
   305  008C                     	;# 
   306  008D                     	;# 
   307  008E                     	;# 
   308  0090                     	;# 
   309  0091                     	;# 
   310  0092                     	;# 
   311  0093                     	;# 
   312  0095                     	;# 
   313  0096                     	;# 
   314  0097                     	;# 
   315  0098                     	;# 
   316  0099                     	;# 
   317  009A                     	;# 
   318  009B                     	;# 
   319  009B                     	;# 
   320  009C                     	;# 
   321  009D                     	;# 
   322  009E                     	;# 
   323  010C                     	;# 
   324  010D                     	;# 
   325  010E                     	;# 
   326  0110                     	;# 
   327  0111                     	;# 
   328  0112                     	;# 
   329  0113                     	;# 
   330  0114                     	;# 
   331  0115                     	;# 
   332  0116                     	;# 
   333  0117                     	;# 
   334  0118                     	;# 
   335  0119                     	;# 
   336  011A                     	;# 
   337  011B                     	;# 
   338  011D                     	;# 
   339  018C                     	;# 
   340  018D                     	;# 
   341  0191                     	;# 
   342  0191                     	;# 
   343  0192                     	;# 
   344  0193                     	;# 
   345  0193                     	;# 
   346  0193                     	;# 
   347  0194                     	;# 
   348  0195                     	;# 
   349  0196                     	;# 
   350  0199                     	;# 
   351  019A                     	;# 
   352  019B                     	;# 
   353  019B                     	;# 
   354  019B                     	;# 
   355  019B                     	;# 
   356  019C                     	;# 
   357  019C                     	;# 
   358  019D                     	;# 
   359  019E                     	;# 
   360  019F                     	;# 
   361  020D                     	;# 
   362  0210                     	;# 
   363  0211                     	;# 
   364  0212                     	;# 
   365  0213                     	;# 
   366  0214                     	;# 
   367  0215                     	;# 
   368  0215                     	;# 
   369  0216                     	;# 
   370  0217                     	;# 
   371  0291                     	;# 
   372  0291                     	;# 
   373  0292                     	;# 
   374  0293                     	;# 
   375  0294                     	;# 
   376  0295                     	;# 
   377  0295                     	;# 
   378  0296                     	;# 
   379  0298                     	;# 
   380  0298                     	;# 
   381  0299                     	;# 
   382  029A                     	;# 
   383  029B                     	;# 
   384  029C                     	;# 
   385  029C                     	;# 
   386  029D                     	;# 
   387  029E                     	;# 
   388  029F                     	;# 
   389  0311                     	;# 
   390  0311                     	;# 
   391  0312                     	;# 
   392  0313                     	;# 
   393  0314                     	;# 
   394  0315                     	;# 
   395  0315                     	;# 
   396  0316                     	;# 
   397  0318                     	;# 
   398  0318                     	;# 
   399  0319                     	;# 
   400  031A                     	;# 
   401  031C                     	;# 
   402  031C                     	;# 
   403  031D                     	;# 
   404  031E                     	;# 
   405  0394                     	;# 
   406  0395                     	;# 
   407  0396                     	;# 
   408  0415                     	;# 
   409  0416                     	;# 
   410  0417                     	;# 
   411  041C                     	;# 
   412  041D                     	;# 
   413  041E                     	;# 
   414  0791                     	;# 
   415  0792                     	;# 
   416  0793                     	;# 
   417  0794                     	;# 
   418  0795                     	;# 
   419  0798                     	;# 
   420  0799                     	;# 
   421  07A0                     	;# 
   422  07A1                     	;# 
   423  07A3                     	;# 
   424  07A4                     	;# 
   425  07A6                     	;# 
   426  07A7                     	;# 
   427  07A9                     	;# 
   428  07AA                     	;# 
   429  0FE4                     	;# 
   430  0FE5                     	;# 
   431  0FE6                     	;# 
   432  0FE7                     	;# 
   433  0FE8                     	;# 
   434  0FE9                     	;# 
   435  0FEA                     	;# 
   436  0FEB                     	;# 
   437  0FED                     	;# 
   438  0FEE                     	;# 
   439  0FEF                     	;# 
   440  0000                     	;# 
   441  0001                     	;# 
   442  0002                     	;# 
   443  0003                     	;# 
   444  0004                     	;# 
   445  0005                     	;# 
   446  0006                     	;# 
   447  0007                     	;# 
   448  0008                     	;# 
   449  0009                     	;# 
   450  000A                     	;# 
   451  000B                     	;# 
   452  000C                     	;# 
   453  000D                     	;# 
   454  000E                     	;# 
   455  0010                     	;# 
   456  0011                     	;# 
   457  0012                     	;# 
   458  0013                     	;# 
   459  0015                     	;# 
   460  0016                     	;# 
   461  0016                     	;# 
   462  0017                     	;# 
   463  0018                     	;# 
   464  0019                     	;# 
   465  001A                     	;# 
   466  001B                     	;# 
   467  001C                     	;# 
   468  001E                     	;# 
   469  001F                     	;# 
   470  008C                     	;# 
   471  008D                     	;# 
   472  008E                     	;# 
   473  0090                     	;# 
   474  0091                     	;# 
   475  0092                     	;# 
   476  0093                     	;# 
   477  0095                     	;# 
   478  0096                     	;# 
   479  0097                     	;# 
   480  0098                     	;# 
   481  0099                     	;# 
   482  009A                     	;# 
   483  009B                     	;# 
   484  009B                     	;# 
   485  009C                     	;# 
   486  009D                     	;# 
   487  009E                     	;# 
   488  010C                     	;# 
   489  010D                     	;# 
   490  010E                     	;# 
   491  0110                     	;# 
   492  0111                     	;# 
   493  0112                     	;# 
   494  0113                     	;# 
   495  0114                     	;# 
   496  0115                     	;# 
   497  0116                     	;# 
   498  0117                     	;# 
   499  0118                     	;# 
   500  0119                     	;# 
   501  011A                     	;# 
   502  011B                     	;# 
   503  011D                     	;# 
   504  018C                     	;# 
   505  018D                     	;# 
   506  0191                     	;# 
   507  0191                     	;# 
   508  0192                     	;# 
   509  0193                     	;# 
   510  0193                     	;# 
   511  0193                     	;# 
   512  0194                     	;# 
   513  0195                     	;# 
   514  0196                     	;# 
   515  0199                     	;# 
   516  019A                     	;# 
   517  019B                     	;# 
   518  019B                     	;# 
   519  019B                     	;# 
   520  019B                     	;# 
   521  019C                     	;# 
   522  019C                     	;# 
   523  019D                     	;# 
   524  019E                     	;# 
   525  019F                     	;# 
   526  020D                     	;# 
   527  0210                     	;# 
   528  0211                     	;# 
   529  0212                     	;# 
   530  0213                     	;# 
   531  0214                     	;# 
   532  0215                     	;# 
   533  0215                     	;# 
   534  0216                     	;# 
   535  0217                     	;# 
   536  0291                     	;# 
   537  0291                     	;# 
   538  0292                     	;# 
   539  0293                     	;# 
   540  0294                     	;# 
   541  0295                     	;# 
   542  0295                     	;# 
   543  0296                     	;# 
   544  0298                     	;# 
   545  0298                     	;# 
   546  0299                     	;# 
   547  029A                     	;# 
   548  029B                     	;# 
   549  029C                     	;# 
   550  029C                     	;# 
   551  029D                     	;# 
   552  029E                     	;# 
   553  029F                     	;# 
   554  0311                     	;# 
   555  0311                     	;# 
   556  0312                     	;# 
   557  0313                     	;# 
   558  0314                     	;# 
   559  0315                     	;# 
   560  0315                     	;# 
   561  0316                     	;# 
   562  0318                     	;# 
   563  0318                     	;# 
   564  0319                     	;# 
   565  031A                     	;# 
   566  031C                     	;# 
   567  031C                     	;# 
   568  031D                     	;# 
   569  031E                     	;# 
   570  0394                     	;# 
   571  0395                     	;# 
   572  0396                     	;# 
   573  0415                     	;# 
   574  0416                     	;# 
   575  0417                     	;# 
   576  041C                     	;# 
   577  041D                     	;# 
   578  041E                     	;# 
   579  0791                     	;# 
   580  0792                     	;# 
   581  0793                     	;# 
   582  0794                     	;# 
   583  0795                     	;# 
   584  0798                     	;# 
   585  0799                     	;# 
   586  07A0                     	;# 
   587  07A1                     	;# 
   588  07A3                     	;# 
   589  07A4                     	;# 
   590  07A6                     	;# 
   591  07A7                     	;# 
   592  07A9                     	;# 
   593  07AA                     	;# 
   594  0FE4                     	;# 
   595  0FE5                     	;# 
   596  0FE6                     	;# 
   597  0FE7                     	;# 
   598  0FE8                     	;# 
   599  0FE9                     	;# 
   600  0FEA                     	;# 
   601  0FEB                     	;# 
   602  0FED                     	;# 
   603  0FEE                     	;# 
   604  0FEF                     	;# 
   605  0000                     	;# 
   606  0001                     	;# 
   607  0002                     	;# 
   608  0003                     	;# 
   609  0004                     	;# 
   610  0005                     	;# 
   611  0006                     	;# 
   612  0007                     	;# 
   613  0008                     	;# 
   614  0009                     	;# 
   615  000A                     	;# 
   616  000B                     	;# 
   617  000C                     	;# 
   618  000D                     	;# 
   619  000E                     	;# 
   620  0010                     	;# 
   621  0011                     	;# 
   622  0012                     	;# 
   623  0013                     	;# 
   624  0015                     	;# 
   625  0016                     	;# 
   626  0016                     	;# 
   627  0017                     	;# 
   628  0018                     	;# 
   629  0019                     	;# 
   630  001A                     	;# 
   631  001B                     	;# 
   632  001C                     	;# 
   633  001E                     	;# 
   634  001F                     	;# 
   635  008C                     	;# 
   636  008D                     	;# 
   637  008E                     	;# 
   638  0090                     	;# 
   639  0091                     	;# 
   640  0092                     	;# 
   641  0093                     	;# 
   642  0095                     	;# 
   643  0096                     	;# 
   644  0097                     	;# 
   645  0098                     	;# 
   646  0099                     	;# 
   647  009A                     	;# 
   648  009B                     	;# 
   649  009B                     	;# 
   650  009C                     	;# 
   651  009D                     	;# 
   652  009E                     	;# 
   653  010C                     	;# 
   654  010D                     	;# 
   655  010E                     	;# 
   656  0110                     	;# 
   657  0111                     	;# 
   658  0112                     	;# 
   659  0113                     	;# 
   660  0114                     	;# 
   661  0115                     	;# 
   662  0116                     	;# 
   663  0117                     	;# 
   664  0118                     	;# 
   665  0119                     	;# 
   666  011A                     	;# 
   667  011B                     	;# 
   668  011D                     	;# 
   669  018C                     	;# 
   670  018D                     	;# 
   671  0191                     	;# 
   672  0191                     	;# 
   673  0192                     	;# 
   674  0193                     	;# 
   675  0193                     	;# 
   676  0193                     	;# 
   677  0194                     	;# 
   678  0195                     	;# 
   679  0196                     	;# 
   680  0199                     	;# 
   681  019A                     	;# 
   682  019B                     	;# 
   683  019B                     	;# 
   684  019B                     	;# 
   685  019B                     	;# 
   686  019C                     	;# 
   687  019C                     	;# 
   688  019D                     	;# 
   689  019E                     	;# 
   690  019F                     	;# 
   691  020D                     	;# 
   692  0210                     	;# 
   693  0211                     	;# 
   694  0212                     	;# 
   695  0213                     	;# 
   696  0214                     	;# 
   697  0215                     	;# 
   698  0215                     	;# 
   699  0216                     	;# 
   700  0217                     	;# 
   701  0291                     	;# 
   702  0291                     	;# 
   703  0292                     	;# 
   704  0293                     	;# 
   705  0294                     	;# 
   706  0295                     	;# 
   707  0295                     	;# 
   708  0296                     	;# 
   709  0298                     	;# 
   710  0298                     	;# 
   711  0299                     	;# 
   712  029A                     	;# 
   713  029B                     	;# 
   714  029C                     	;# 
   715  029C                     	;# 
   716  029D                     	;# 
   717  029E                     	;# 
   718  029F                     	;# 
   719  0311                     	;# 
   720  0311                     	;# 
   721  0312                     	;# 
   722  0313                     	;# 
   723  0314                     	;# 
   724  0315                     	;# 
   725  0315                     	;# 
   726  0316                     	;# 
   727  0318                     	;# 
   728  0318                     	;# 
   729  0319                     	;# 
   730  031A                     	;# 
   731  031C                     	;# 
   732  031C                     	;# 
   733  031D                     	;# 
   734  031E                     	;# 
   735  0394                     	;# 
   736  0395                     	;# 
   737  0396                     	;# 
   738  0415                     	;# 
   739  0416                     	;# 
   740  0417                     	;# 
   741  041C                     	;# 
   742  041D                     	;# 
   743  041E                     	;# 
   744  0791                     	;# 
   745  0792                     	;# 
   746  0793                     	;# 
   747  0794                     	;# 
   748  0795                     	;# 
   749  0798                     	;# 
   750  0799                     	;# 
   751  07A0                     	;# 
   752  07A1                     	;# 
   753  07A3                     	;# 
   754  07A4                     	;# 
   755  07A6                     	;# 
   756  07A7                     	;# 
   757  07A9                     	;# 
   758  07AA                     	;# 
   759  0FE4                     	;# 
   760  0FE5                     	;# 
   761  0FE6                     	;# 
   762  0FE7                     	;# 
   763  0FE8                     	;# 
   764  0FE9                     	;# 
   765  0FEA                     	;# 
   766  0FEB                     	;# 
   767  0FED                     	;# 
   768  0FEE                     	;# 
   769  0FEF                     	;# 
   770  0000                     	;# 
   771  0001                     	;# 
   772  0002                     	;# 
   773  0003                     	;# 
   774  0004                     	;# 
   775  0005                     	;# 
   776  0006                     	;# 
   777  0007                     	;# 
   778  0008                     	;# 
   779  0009                     	;# 
   780  000A                     	;# 
   781  000B                     	;# 
   782  000C                     	;# 
   783  000D                     	;# 
   784  000E                     	;# 
   785  0010                     	;# 
   786  0011                     	;# 
   787  0012                     	;# 
   788  0013                     	;# 
   789  0015                     	;# 
   790  0016                     	;# 
   791  0016                     	;# 
   792  0017                     	;# 
   793  0018                     	;# 
   794  0019                     	;# 
   795  001A                     	;# 
   796  001B                     	;# 
   797  001C                     	;# 
   798  001E                     	;# 
   799  001F                     	;# 
   800  008C                     	;# 
   801  008D                     	;# 
   802  008E                     	;# 
   803  0090                     	;# 
   804  0091                     	;# 
   805  0092                     	;# 
   806  0093                     	;# 
   807  0095                     	;# 
   808  0096                     	;# 
   809  0097                     	;# 
   810  0098                     	;# 
   811  0099                     	;# 
   812  009A                     	;# 
   813  009B                     	;# 
   814  009B                     	;# 
   815  009C                     	;# 
   816  009D                     	;# 
   817  009E                     	;# 
   818  010C                     	;# 
   819  010D                     	;# 
   820  010E                     	;# 
   821  0110                     	;# 
   822  0111                     	;# 
   823  0112                     	;# 
   824  0113                     	;# 
   825  0114                     	;# 
   826  0115                     	;# 
   827  0116                     	;# 
   828  0117                     	;# 
   829  0118                     	;# 
   830  0119                     	;# 
   831  011A                     	;# 
   832  011B                     	;# 
   833  011D                     	;# 
   834  018C                     	;# 
   835  018D                     	;# 
   836  0191                     	;# 
   837  0191                     	;# 
   838  0192                     	;# 
   839  0193                     	;# 
   840  0193                     	;# 
   841  0193                     	;# 
   842  0194                     	;# 
   843  0195                     	;# 
   844  0196                     	;# 
   845  0199                     	;# 
   846  019A                     	;# 
   847  019B                     	;# 
   848  019B                     	;# 
   849  019B                     	;# 
   850  019B                     	;# 
   851  019C                     	;# 
   852  019C                     	;# 
   853  019D                     	;# 
   854  019E                     	;# 
   855  019F                     	;# 
   856  020D                     	;# 
   857  0210                     	;# 
   858  0211                     	;# 
   859  0212                     	;# 
   860  0213                     	;# 
   861  0214                     	;# 
   862  0215                     	;# 
   863  0215                     	;# 
   864  0216                     	;# 
   865  0217                     	;# 
   866  0291                     	;# 
   867  0291                     	;# 
   868  0292                     	;# 
   869  0293                     	;# 
   870  0294                     	;# 
   871  0295                     	;# 
   872  0295                     	;# 
   873  0296                     	;# 
   874  0298                     	;# 
   875  0298                     	;# 
   876  0299                     	;# 
   877  029A                     	;# 
   878  029B                     	;# 
   879  029C                     	;# 
   880  029C                     	;# 
   881  029D                     	;# 
   882  029E                     	;# 
   883  029F                     	;# 
   884  0311                     	;# 
   885  0311                     	;# 
   886  0312                     	;# 
   887  0313                     	;# 
   888  0314                     	;# 
   889  0315                     	;# 
   890  0315                     	;# 
   891  0316                     	;# 
   892  0318                     	;# 
   893  0318                     	;# 
   894  0319                     	;# 
   895  031A                     	;# 
   896  031C                     	;# 
   897  031C                     	;# 
   898  031D                     	;# 
   899  031E                     	;# 
   900  0394                     	;# 
   901  0395                     	;# 
   902  0396                     	;# 
   903  0415                     	;# 
   904  0416                     	;# 
   905  0417                     	;# 
   906  041C                     	;# 
   907  041D                     	;# 
   908  041E                     	;# 
   909  0791                     	;# 
   910  0792                     	;# 
   911  0793                     	;# 
   912  0794                     	;# 
   913  0795                     	;# 
   914  0798                     	;# 
   915  0799                     	;# 
   916  07A0                     	;# 
   917  07A1                     	;# 
   918  07A3                     	;# 
   919  07A4                     	;# 
   920  07A6                     	;# 
   921  07A7                     	;# 
   922  07A9                     	;# 
   923  07AA                     	;# 
   924  0FE4                     	;# 
   925  0FE5                     	;# 
   926  0FE6                     	;# 
   927  0FE7                     	;# 
   928  0FE8                     	;# 
   929  0FE9                     	;# 
   930  0FEA                     	;# 
   931  0FEB                     	;# 
   932  0FED                     	;# 
   933  0FEE                     	;# 
   934  0FEF                     	;# 
   935  0000                     	;# 
   936  0001                     	;# 
   937  0002                     	;# 
   938  0003                     	;# 
   939  0004                     	;# 
   940  0005                     	;# 
   941  0006                     	;# 
   942  0007                     	;# 
   943  0008                     	;# 
   944  0009                     	;# 
   945  000A                     	;# 
   946  000B                     	;# 
   947  000C                     	;# 
   948  000D                     	;# 
   949  000E                     	;# 
   950  0010                     	;# 
   951  0011                     	;# 
   952  0012                     	;# 
   953  0013                     	;# 
   954  0015                     	;# 
   955  0016                     	;# 
   956  0016                     	;# 
   957  0017                     	;# 
   958  0018                     	;# 
   959  0019                     	;# 
   960  001A                     	;# 
   961  001B                     	;# 
   962  001C                     	;# 
   963  001E                     	;# 
   964  001F                     	;# 
   965  008C                     	;# 
   966  008D                     	;# 
   967  008E                     	;# 
   968  0090                     	;# 
   969  0091                     	;# 
   970  0092                     	;# 
   971  0093                     	;# 
   972  0095                     	;# 
   973  0096                     	;# 
   974  0097                     	;# 
   975  0098                     	;# 
   976  0099                     	;# 
   977  009A                     	;# 
   978  009B                     	;# 
   979  009B                     	;# 
   980  009C                     	;# 
   981  009D                     	;# 
   982  009E                     	;# 
   983  010C                     	;# 
   984  010D                     	;# 
   985  010E                     	;# 
   986  0110                     	;# 
   987  0111                     	;# 
   988  0112                     	;# 
   989  0113                     	;# 
   990  0114                     	;# 
   991  0115                     	;# 
   992  0116                     	;# 
   993  0117                     	;# 
   994  0118                     	;# 
   995  0119                     	;# 
   996  011A                     	;# 
   997  011B                     	;# 
   998  011D                     	;# 
   999  018C                     	;# 
  1000  018D                     	;# 
  1001  0191                     	;# 
  1002  0191                     	;# 
  1003  0192                     	;# 
  1004  0193                     	;# 
  1005  0193                     	;# 
  1006  0193                     	;# 
  1007  0194                     	;# 
  1008  0195                     	;# 
  1009  0196                     	;# 
  1010  0199                     	;# 
  1011  019A                     	;# 
  1012  019B                     	;# 
  1013  019B                     	;# 
  1014  019B                     	;# 
  1015  019B                     	;# 
  1016  019C                     	;# 
  1017  019C                     	;# 
  1018  019D                     	;# 
  1019  019E                     	;# 
  1020  019F                     	;# 
  1021  020D                     	;# 
  1022  0210                     	;# 
  1023  0211                     	;# 
  1024  0212                     	;# 
  1025  0213                     	;# 
  1026  0214                     	;# 
  1027  0215                     	;# 
  1028  0215                     	;# 
  1029  0216                     	;# 
  1030  0217                     	;# 
  1031  0291                     	;# 
  1032  0291                     	;# 
  1033  0292                     	;# 
  1034  0293                     	;# 
  1035  0294                     	;# 
  1036  0295                     	;# 
  1037  0295                     	;# 
  1038  0296                     	;# 
  1039  0298                     	;# 
  1040  0298                     	;# 
  1041  0299                     	;# 
  1042  029A                     	;# 
  1043  029B                     	;# 
  1044  029C                     	;# 
  1045  029C                     	;# 
  1046  029D                     	;# 
  1047  029E                     	;# 
  1048  029F                     	;# 
  1049  0311                     	;# 
  1050  0311                     	;# 
  1051  0312                     	;# 
  1052  0313                     	;# 
  1053  0314                     	;# 
  1054  0315                     	;# 
  1055  0315                     	;# 
  1056  0316                     	;# 
  1057  0318                     	;# 
  1058  0318                     	;# 
  1059  0319                     	;# 
  1060  031A                     	;# 
  1061  031C                     	;# 
  1062  031C                     	;# 
  1063  031D                     	;# 
  1064  031E                     	;# 
  1065  0394                     	;# 
  1066  0395                     	;# 
  1067  0396                     	;# 
  1068  0415                     	;# 
  1069  0416                     	;# 
  1070  0417                     	;# 
  1071  041C                     	;# 
  1072  041D                     	;# 
  1073  041E                     	;# 
  1074  0791                     	;# 
  1075  0792                     	;# 
  1076  0793                     	;# 
  1077  0794                     	;# 
  1078  0795                     	;# 
  1079  0798                     	;# 
  1080  0799                     	;# 
  1081  07A0                     	;# 
  1082  07A1                     	;# 
  1083  07A3                     	;# 
  1084  07A4                     	;# 
  1085  07A6                     	;# 
  1086  07A7                     	;# 
  1087  07A9                     	;# 
  1088  07AA                     	;# 
  1089  0FE4                     	;# 
  1090  0FE5                     	;# 
  1091  0FE6                     	;# 
  1092  0FE7                     	;# 
  1093  0FE8                     	;# 
  1094  0FE9                     	;# 
  1095  0FEA                     	;# 
  1096  0FEB                     	;# 
  1097  0FED                     	;# 
  1098  0FEE                     	;# 
  1099  0FEF                     	;# 
  1100  0000                     	;# 
  1101  0001                     	;# 
  1102  0002                     	;# 
  1103  0003                     	;# 
  1104  0004                     	;# 
  1105  0005                     	;# 
  1106  0006                     	;# 
  1107  0007                     	;# 
  1108  0008                     	;# 
  1109  0009                     	;# 
  1110  000A                     	;# 
  1111  000B                     	;# 
  1112  000C                     	;# 
  1113  000D                     	;# 
  1114  000E                     	;# 
  1115  0010                     	;# 
  1116  0011                     	;# 
  1117  0012                     	;# 
  1118  0013                     	;# 
  1119  0015                     	;# 
  1120  0016                     	;# 
  1121  0016                     	;# 
  1122  0017                     	;# 
  1123  0018                     	;# 
  1124  0019                     	;# 
  1125  001A                     	;# 
  1126  001B                     	;# 
  1127  001C                     	;# 
  1128  001E                     	;# 
  1129  001F                     	;# 
  1130  008C                     	;# 
  1131  008D                     	;# 
  1132  008E                     	;# 
  1133  0090                     	;# 
  1134  0091                     	;# 
  1135  0092                     	;# 
  1136  0093                     	;# 
  1137  0095                     	;# 
  1138  0096                     	;# 
  1139  0097                     	;# 
  1140  0098                     	;# 
  1141  0099                     	;# 
  1142  009A                     	;# 
  1143  009B                     	;# 
  1144  009B                     	;# 
  1145  009C                     	;# 
  1146  009D                     	;# 
  1147  009E                     	;# 
  1148  010C                     	;# 
  1149  010D                     	;# 
  1150  010E                     	;# 
  1151  0110                     	;# 
  1152  0111                     	;# 
  1153  0112                     	;# 
  1154  0113                     	;# 
  1155  0114                     	;# 
  1156  0115                     	;# 
  1157  0116                     	;# 
  1158  0117                     	;# 
  1159  0118                     	;# 
  1160  0119                     	;# 
  1161  011A                     	;# 
  1162  011B                     	;# 
  1163  011D                     	;# 
  1164  018C                     	;# 
  1165  018D                     	;# 
  1166  0191                     	;# 
  1167  0191                     	;# 
  1168  0192                     	;# 
  1169  0193                     	;# 
  1170  0193                     	;# 
  1171  0193                     	;# 
  1172  0194                     	;# 
  1173  0195                     	;# 
  1174  0196                     	;# 
  1175  0199                     	;# 
  1176  019A                     	;# 
  1177  019B                     	;# 
  1178  019B                     	;# 
  1179  019B                     	;# 
  1180  019B                     	;# 
  1181  019C                     	;# 
  1182  019C                     	;# 
  1183  019D                     	;# 
  1184  019E                     	;# 
  1185  019F                     	;# 
  1186  020D                     	;# 
  1187  0210                     	;# 
  1188  0211                     	;# 
  1189  0212                     	;# 
  1190  0213                     	;# 
  1191  0214                     	;# 
  1192  0215                     	;# 
  1193  0215                     	;# 
  1194  0216                     	;# 
  1195  0217                     	;# 
  1196  0291                     	;# 
  1197  0291                     	;# 
  1198  0292                     	;# 
  1199  0293                     	;# 
  1200  0294                     	;# 
  1201  0295                     	;# 
  1202  0295                     	;# 
  1203  0296                     	;# 
  1204  0298                     	;# 
  1205  0298                     	;# 
  1206  0299                     	;# 
  1207  029A                     	;# 
  1208  029B                     	;# 
  1209  029C                     	;# 
  1210  029C                     	;# 
  1211  029D                     	;# 
  1212  029E                     	;# 
  1213  029F                     	;# 
  1214  0311                     	;# 
  1215  0311                     	;# 
  1216  0312                     	;# 
  1217  0313                     	;# 
  1218  0314                     	;# 
  1219  0315                     	;# 
  1220  0315                     	;# 
  1221  0316                     	;# 
  1222  0318                     	;# 
  1223  0318                     	;# 
  1224  0319                     	;# 
  1225  031A                     	;# 
  1226  031C                     	;# 
  1227  031C                     	;# 
  1228  031D                     	;# 
  1229  031E                     	;# 
  1230  0394                     	;# 
  1231  0395                     	;# 
  1232  0396                     	;# 
  1233  0415                     	;# 
  1234  0416                     	;# 
  1235  0417                     	;# 
  1236  041C                     	;# 
  1237  041D                     	;# 
  1238  041E                     	;# 
  1239  0791                     	;# 
  1240  0792                     	;# 
  1241  0793                     	;# 
  1242  0794                     	;# 
  1243  0795                     	;# 
  1244  0798                     	;# 
  1245  0799                     	;# 
  1246  07A0                     	;# 
  1247  07A1                     	;# 
  1248  07A3                     	;# 
  1249  07A4                     	;# 
  1250  07A6                     	;# 
  1251  07A7                     	;# 
  1252  07A9                     	;# 
  1253  07AA                     	;# 
  1254  0FE4                     	;# 
  1255  0FE5                     	;# 
  1256  0FE6                     	;# 
  1257  0FE7                     	;# 
  1258  0FE8                     	;# 
  1259  0FE9                     	;# 
  1260  0FEA                     	;# 
  1261  0FEB                     	;# 
  1262  0FED                     	;# 
  1263  0FEE                     	;# 
  1264  0FEF                     	;# 
  1265  0000                     	;# 
  1266  0001                     	;# 
  1267  0002                     	;# 
  1268  0003                     	;# 
  1269  0004                     	;# 
  1270  0005                     	;# 
  1271  0006                     	;# 
  1272  0007                     	;# 
  1273  0008                     	;# 
  1274  0009                     	;# 
  1275  000A                     	;# 
  1276  000B                     	;# 
  1277  000C                     	;# 
  1278  000D                     	;# 
  1279  000E                     	;# 
  1280  0010                     	;# 
  1281  0011                     	;# 
  1282  0012                     	;# 
  1283  0013                     	;# 
  1284  0015                     	;# 
  1285  0016                     	;# 
  1286  0016                     	;# 
  1287  0017                     	;# 
  1288  0018                     	;# 
  1289  0019                     	;# 
  1290  001A                     	;# 
  1291  001B                     	;# 
  1292  001C                     	;# 
  1293  001E                     	;# 
  1294  001F                     	;# 
  1295  008C                     	;# 
  1296  008D                     	;# 
  1297  008E                     	;# 
  1298  0090                     	;# 
  1299  0091                     	;# 
  1300  0092                     	;# 
  1301  0093                     	;# 
  1302  0095                     	;# 
  1303  0096                     	;# 
  1304  0097                     	;# 
  1305  0098                     	;# 
  1306  0099                     	;# 
  1307  009A                     	;# 
  1308  009B                     	;# 
  1309  009B                     	;# 
  1310  009C                     	;# 
  1311  009D                     	;# 
  1312  009E                     	;# 
  1313  010C                     	;# 
  1314  010D                     	;# 
  1315  010E                     	;# 
  1316  0110                     	;# 
  1317  0111                     	;# 
  1318  0112                     	;# 
  1319  0113                     	;# 
  1320  0114                     	;# 
  1321  0115                     	;# 
  1322  0116                     	;# 
  1323  0117                     	;# 
  1324  0118                     	;# 
  1325  0119                     	;# 
  1326  011A                     	;# 
  1327  011B                     	;# 
  1328  011D                     	;# 
  1329  018C                     	;# 
  1330  018D                     	;# 
  1331  0191                     	;# 
  1332  0191                     	;# 
  1333  0192                     	;# 
  1334  0193                     	;# 
  1335  0193                     	;# 
  1336  0193                     	;# 
  1337  0194                     	;# 
  1338  0195                     	;# 
  1339  0196                     	;# 
  1340  0199                     	;# 
  1341  019A                     	;# 
  1342  019B                     	;# 
  1343  019B                     	;# 
  1344  019B                     	;# 
  1345  019B                     	;# 
  1346  019C                     	;# 
  1347  019C                     	;# 
  1348  019D                     	;# 
  1349  019E                     	;# 
  1350  019F                     	;# 
  1351  020D                     	;# 
  1352  0210                     	;# 
  1353  0211                     	;# 
  1354  0212                     	;# 
  1355  0213                     	;# 
  1356  0214                     	;# 
  1357  0215                     	;# 
  1358  0215                     	;# 
  1359  0216                     	;# 
  1360  0217                     	;# 
  1361  0291                     	;# 
  1362  0291                     	;# 
  1363  0292                     	;# 
  1364  0293                     	;# 
  1365  0294                     	;# 
  1366  0295                     	;# 
  1367  0295                     	;# 
  1368  0296                     	;# 
  1369  0298                     	;# 
  1370  0298                     	;# 
  1371  0299                     	;# 
  1372  029A                     	;# 
  1373  029B                     	;# 
  1374  029C                     	;# 
  1375  029C                     	;# 
  1376  029D                     	;# 
  1377  029E                     	;# 
  1378  029F                     	;# 
  1379  0311                     	;# 
  1380  0311                     	;# 
  1381  0312                     	;# 
  1382  0313                     	;# 
  1383  0314                     	;# 
  1384  0315                     	;# 
  1385  0315                     	;# 
  1386  0316                     	;# 
  1387  0318                     	;# 
  1388  0318                     	;# 
  1389  0319                     	;# 
  1390  031A                     	;# 
  1391  031C                     	;# 
  1392  031C                     	;# 
  1393  031D                     	;# 
  1394  031E                     	;# 
  1395  0394                     	;# 
  1396  0395                     	;# 
  1397  0396                     	;# 
  1398  0415                     	;# 
  1399  0416                     	;# 
  1400  0417                     	;# 
  1401  041C                     	;# 
  1402  041D                     	;# 
  1403  041E                     	;# 
  1404  0791                     	;# 
  1405  0792                     	;# 
  1406  0793                     	;# 
  1407  0794                     	;# 
  1408  0795                     	;# 
  1409  0798                     	;# 
  1410  0799                     	;# 
  1411  07A0                     	;# 
  1412  07A1                     	;# 
  1413  07A3                     	;# 
  1414  07A4                     	;# 
  1415  07A6                     	;# 
  1416  07A7                     	;# 
  1417  07A9                     	;# 
  1418  07AA                     	;# 
  1419  0FE4                     	;# 
  1420  0FE5                     	;# 
  1421  0FE6                     	;# 
  1422  0FE7                     	;# 
  1423  0FE8                     	;# 
  1424  0FE9                     	;# 
  1425  0FEA                     	;# 
  1426  0FEB                     	;# 
  1427  0FED                     	;# 
  1428  0FEE                     	;# 
  1429  0FEF                     	;# 
  1430  0000                     	;# 
  1431  0001                     	;# 
  1432  0002                     	;# 
  1433  0003                     	;# 
  1434  0004                     	;# 
  1435  0005                     	;# 
  1436  0006                     	;# 
  1437  0007                     	;# 
  1438  0008                     	;# 
  1439  0009                     	;# 
  1440  000A                     	;# 
  1441  000B                     	;# 
  1442  000C                     	;# 
  1443  000D                     	;# 
  1444  000E                     	;# 
  1445  0010                     	;# 
  1446  0011                     	;# 
  1447  0012                     	;# 
  1448  0013                     	;# 
  1449  0015                     	;# 
  1450  0016                     	;# 
  1451  0016                     	;# 
  1452  0017                     	;# 
  1453  0018                     	;# 
  1454  0019                     	;# 
  1455  001A                     	;# 
  1456  001B                     	;# 
  1457  001C                     	;# 
  1458  001E                     	;# 
  1459  001F                     	;# 
  1460  008C                     	;# 
  1461  008D                     	;# 
  1462  008E                     	;# 
  1463  0090                     	;# 
  1464  0091                     	;# 
  1465  0092                     	;# 
  1466  0093                     	;# 
  1467  0095                     	;# 
  1468  0096                     	;# 
  1469  0097                     	;# 
  1470  0098                     	;# 
  1471  0099                     	;# 
  1472  009A                     	;# 
  1473  009B                     	;# 
  1474  009B                     	;# 
  1475  009C                     	;# 
  1476  009D                     	;# 
  1477  009E                     	;# 
  1478  010C                     	;# 
  1479  010D                     	;# 
  1480  010E                     	;# 
  1481  0110                     	;# 
  1482  0111                     	;# 
  1483  0112                     	;# 
  1484  0113                     	;# 
  1485  0114                     	;# 
  1486  0115                     	;# 
  1487  0116                     	;# 
  1488  0117                     	;# 
  1489  0118                     	;# 
  1490  0119                     	;# 
  1491  011A                     	;# 
  1492  011B                     	;# 
  1493  011D                     	;# 
  1494  018C                     	;# 
  1495  018D                     	;# 
  1496  0191                     	;# 
  1497  0191                     	;# 
  1498  0192                     	;# 
  1499  0193                     	;# 
  1500  0193                     	;# 
  1501  0193                     	;# 
  1502  0194                     	;# 
  1503  0195                     	;# 
  1504  0196                     	;# 
  1505  0199                     	;# 
  1506  019A                     	;# 
  1507  019B                     	;# 
  1508  019B                     	;# 
  1509  019B                     	;# 
  1510  019B                     	;# 
  1511  019C                     	;# 
  1512  019C                     	;# 
  1513  019D                     	;# 
  1514  019E                     	;# 
  1515  019F                     	;# 
  1516  020D                     	;# 
  1517  0210                     	;# 
  1518  0211                     	;# 
  1519  0212                     	;# 
  1520  0213                     	;# 
  1521  0214                     	;# 
  1522  0215                     	;# 
  1523  0215                     	;# 
  1524  0216                     	;# 
  1525  0217                     	;# 
  1526  0291                     	;# 
  1527  0291                     	;# 
  1528  0292                     	;# 
  1529  0293                     	;# 
  1530  0294                     	;# 
  1531  0295                     	;# 
  1532  0295                     	;# 
  1533  0296                     	;# 
  1534  0298                     	;# 
  1535  0298                     	;# 
  1536  0299                     	;# 
  1537  029A                     	;# 
  1538  029B                     	;# 
  1539  029C                     	;# 
  1540  029C                     	;# 
  1541  029D                     	;# 
  1542  029E                     	;# 
  1543  029F                     	;# 
  1544  0311                     	;# 
  1545  0311                     	;# 
  1546  0312                     	;# 
  1547  0313                     	;# 
  1548  0314                     	;# 
  1549  0315                     	;# 
  1550  0315                     	;# 
  1551  0316                     	;# 
  1552  0318                     	;# 
  1553  0318                     	;# 
  1554  0319                     	;# 
  1555  031A                     	;# 
  1556  031C                     	;# 
  1557  031C                     	;# 
  1558  031D                     	;# 
  1559  031E                     	;# 
  1560  0394                     	;# 
  1561  0395                     	;# 
  1562  0396                     	;# 
  1563  0415                     	;# 
  1564  0416                     	;# 
  1565  0417                     	;# 
  1566  041C                     	;# 
  1567  041D                     	;# 
  1568  041E                     	;# 
  1569  0791                     	;# 
  1570  0792                     	;# 
  1571  0793                     	;# 
  1572  0794                     	;# 
  1573  0795                     	;# 
  1574  0798                     	;# 
  1575  0799                     	;# 
  1576  07A0                     	;# 
  1577  07A1                     	;# 
  1578  07A3                     	;# 
  1579  07A4                     	;# 
  1580  07A6                     	;# 
  1581  07A7                     	;# 
  1582  07A9                     	;# 
  1583  07AA                     	;# 
  1584  0FE4                     	;# 
  1585  0FE5                     	;# 
  1586  0FE6                     	;# 
  1587  0FE7                     	;# 
  1588  0FE8                     	;# 
  1589  0FE9                     	;# 
  1590  0FEA                     	;# 
  1591  0FEB                     	;# 
  1592  0FED                     	;# 
  1593  0FEE                     	;# 
  1594  0FEF                     	;# 
  1595                           
  1596                           	psect	idataBANK2
  1597  1399                     __pidataBANK2:
  1598                           
  1599                           ;initializer for main@F2800
  1600  1399  3402               	retlw	2
  1601  139A  3404               	retlw	4
  1602  139B  3400               	retlw	0
  1603  139C  3400               	retlw	0
  1604  139D  3400               	retlw	0
  1605  139E  3400               	retlw	0
  1606  139F  3400               	retlw	0
  1607  13A0  3400               	retlw	0
  1608  13A1  3400               	retlw	0
  1609  13A2  3400               	retlw	0
  1610  13A3  34F4               	retlw	244
  1611  13A4  3401               	retlw	1
  1612                           
  1613                           ;initializer for _segdata
  1614  13A5  343F               	retlw	63
  1615  13A6  3406               	retlw	6
  1616  13A7  345B               	retlw	91
  1617  13A8  344F               	retlw	79
  1618  13A9  3466               	retlw	102
  1619  13AA  346D               	retlw	109
  1620  13AB  347D               	retlw	125
  1621  13AC  3407               	retlw	7
  1622  13AD  347F               	retlw	127
  1623  13AE  346F               	retlw	111
  1624                           
  1625                           ;initializer for lcd_set_cursor@F2781
  1626  13AF  3400               	retlw	0
  1627  13B0  3440               	retlw	64
  1628  13B1  3414               	retlw	20
  1629  13B2  3454               	retlw	84
  1630                           
  1631                           ;initializer for main@F2802
  1632  13B3  3427               	retlw	39
  1633  13B4  3410               	retlw	16
  1634  13B5  3402               	retlw	2
  1635  13B6  3400               	retlw	0
  1636  000D                     _PORTBbits	set	13
  1637  000C                     _PORTAbits	set	12
  1638  0097                     _WDTCON	set	151
  1639  0098                     _OSCTUNE	set	152
  1640  0099                     _OSCCON	set	153
  1641  0095                     _OPTION_REGbits	set	149
  1642  008E                     _TRISC	set	142
  1643  008D                     _TRISB	set	141
  1644  008C                     _TRISA	set	140
  1645  0090                     _TRISE	set	144
  1646  0116                     _BORCON	set	278
  1647  011D                     _APFCON	set	285
  1648  010E                     _LATC	set	270
  1649  010D                     _LATB	set	269
  1650  010C                     _LATA	set	268
  1651  0110                     _LATE	set	272
  1652  018C                     _ANSELA	set	396
  1653  018D                     _ANSELB	set	397
  1654  0215                     _SSPCON1	set	533
  1655  0212                     _SSPADD	set	530
  1656  0215                     _SSPCON1bits	set	533
  1657  0214                     _SSPSTATbits	set	532
  1658  0211                     _SSPBUF	set	529
  1659  0216                     _SSPCON2bits	set	534
  1660  0214                     _SSPSTAT	set	532
  1661  0216                     _SSPCON2	set	534
  1662  020D                     _WPUB	set	525
  1663  0210                     _WPUE	set	528
  1664                           
  1665                           	psect	stringtext1
  1666  1800                     __pstringtext1:
  1667  1800                     STR_3:
  1668  1800  344C               	retlw	76	;'L'
  1669  1801  346F               	retlw	111	;'o'
  1670  1802  3461               	retlw	97	;'a'
  1671  1803  3464               	retlw	100	;'d'
  1672  1804  3420               	retlw	32	;' '
  1673  1805  3463               	retlw	99	;'c'
  1674  1806  3465               	retlw	101	;'e'
  1675  1807  346C               	retlw	108	;'l'
  1676  1808  346C               	retlw	108	;'l'
  1677  1809  3420               	retlw	32	;' '
  1678  180A  3455               	retlw	85	;'U'
  1679  180B  346E               	retlw	110	;'n'
  1680  180C  3469               	retlw	105	;'i'
  1681  180D  3474               	retlw	116	;'t'
  1682  180E  3400               	retlw	0
  1683                           
  1684                           	psect	stringtext2
  1685  180F                     __pstringtext2:
  1686  180F                     STR_2:
  1687  180F  3449               	retlw	73	;'I'
  1688  1810  346E               	retlw	110	;'n'
  1689  1811  3469               	retlw	105	;'i'
  1690  1812  3474               	retlw	116	;'t'
  1691  1813  3469               	retlw	105	;'i'
  1692  1814  3461               	retlw	97	;'a'
  1693  1815  346C               	retlw	108	;'l'
  1694  1816  3469               	retlw	105	;'i'
  1695  1817  347A               	retlw	122	;'z'
  1696  1818  3465               	retlw	101	;'e'
  1697  1819  3400               	retlw	0
  1698                           
  1699                           	psect	stringtext3
  1700  181A                     __pstringtext3:
  1701  181A                     STR_5:
  1702  181A  3425               	retlw	37	;'%'
  1703  181B  3464               	retlw	100	;'d'
  1704  181C  3467               	retlw	103	;'g'
  1705  181D  3420               	retlw	32	;' '
  1706  181E  342F               	retlw	47	;'/'
  1707  181F  3420               	retlw	32	;' '
  1708  1820  3425               	retlw	37	;'%'
  1709  1821  3464               	retlw	100	;'d'
  1710  1822  3467               	retlw	103	;'g'
  1711  1823  3400               	retlw	0
  1712                           
  1713                           	psect	stringtext4
  1714  1824                     __pstringtext4:
  1715  1824                     STR_4:
  1716  1824  3425               	retlw	37	;'%'
  1717  1825  346C               	retlw	108	;'l'
  1718  1826  3475               	retlw	117	;'u'
  1719  1827  3420               	retlw	32	;' '
  1720  1828  3476               	retlw	118	;'v'
  1721  1829  3461               	retlw	97	;'a'
  1722  182A  346C               	retlw	108	;'l'
  1723  182B  3400               	retlw	0
  1724                           
  1725                           	psect	stringtext5
  1726  182C                     __pstringtext5:
  1727  182C                     STR_6:
  1728  182C  3425               	retlw	37	;'%'
  1729  182D  3464               	retlw	100	;'d'
  1730  182E  3420               	retlw	32	;' '
  1731  182F  3425               	retlw	37	;'%'
  1732  1830  3425               	retlw	37	;'%'
  1733  1831  3400               	retlw	0
  1734                           
  1735                           	psect	stringtext6
  1736  1832                     __pstringtext6:
  1737  1832                     STR_7:
  1738  1832  346C               	retlw	108	;'l'
  1739  1833  3464               	retlw	100	;'d'
  1740  1834  3400               	retlw	0
  1741                           
  1742                           	psect	stringtext7
  1743  1835                     __pstringtext7:
  1744  1835                     STR_11:
  1745  1835  346C               	retlw	108	;'l'
  1746  1836  3469               	retlw	105	;'i'
  1747  1837  3400               	retlw	0
  1748                           
  1749                           	psect	stringtext8
  1750  1838                     __pstringtext8:
  1751  1838                     STR_16:
  1752  1838  346C               	retlw	108	;'l'
  1753  1839  3475               	retlw	117	;'u'
  1754  183A  3400               	retlw	0
  1755                           
  1756                           	psect	stringtext9
  1757  183B                     __pstringtext9:
  1758  183B                     STR_1:
  1759  183B  3420               	retlw	32	;' '
  1760  183C  3400               	retlw	0
  1761                           
  1762                           	psect	stringtext10
  1763  0000                     __pstringtext10:
  1764  1832                     
  1765                           	psect	cinit
  1766  07E5                     start_initialization:	
  1767                           ; #config settings
  1768                           
  1769  07E5                     __initialization:
  1770                           
  1771                           ; Initialize objects allocated to BANK2
  1772  07E5  3099               	movlw	low __pidataBANK2
  1773  07E6  0084               	movwf	4
  1774  07E7  3093               	movlw	(high __pidataBANK2)| (0+128)
  1775  07E8  0085               	movwf	5
  1776  07E9  304F               	movlw	low __pdataBANK2
  1777  07EA  0086               	movwf	6
  1778  07EB  3001               	movlw	high __pdataBANK2
  1779  07EC  0087               	movwf	7
  1780  07ED  301E               	movlw	30
  1781  07EE  3192  22A8  3187   	fcall	init_ram
  1782                           
  1783                           ; Clear objects allocated to BANK1
  1784  07F1  0021               	movlb	1	; select bank1
  1785  07F2  01ED               	clrf	__pbssBANK1& (0+127)
  1786  07F3  01EE               	clrf	(__pbssBANK1+1)& (0+127)
  1787  07F4  01EF               	clrf	(__pbssBANK1+2)& (0+127)
  1788                           
  1789                           ; Clear objects allocated to BANK2
  1790  07F5  3020               	movlw	low __pbssBANK2
  1791  07F6  0084               	movwf	4
  1792  07F7  3001               	movlw	high __pbssBANK2
  1793  07F8  0085               	movwf	5
  1794  07F9  302F               	movlw	47
  1795  07FA  3192  22A2  3187   	fcall	clear_ram0
  1796  07FD                     end_of_initialization:	
  1797                           ;End of C runtime variable initialization code
  1798                           
  1799  07FD                     __end_of__initialization:
  1800  07FD  0020               	movlb	0
  1801  07FE  3196  2EB1         	ljmp	_main	;jump to C main() function
  1802                           
  1803                           	psect	bssBANK1
  1804  00ED                     __pbssBANK1:
  1805  00ED                     _flags:
  1806  00ED                     	ds	2
  1807  00EF                     _m_brightness:
  1808  00EF                     	ds	1
  1809                           
  1810                           	psect	bssBANK2
  1811  0120                     __pbssBANK2:
  1812  0120                     main@F2804:
  1813  0120                     	ds	5
  1814  0125                     clear_segment@F2765:
  1815  0125                     	ds	4
  1816  0129                     _nout:
  1817  0129                     	ds	2
  1818  012B                     _width:
  1819  012B                     	ds	2
  1820  012D                     _prec:
  1821  012D                     	ds	2
  1822  012F                     _dbuf:
  1823  012F                     	ds	32
  1824                           
  1825                           	psect	dataBANK2
  1826  014F                     __pdataBANK2:
  1827  014F                     main@F2800:
  1828  014F                     	ds	12
  1829  015B                     _segdata:
  1830  015B                     	ds	10
  1831  0165                     lcd_set_cursor@F2781:
  1832  0165                     	ds	4
  1833  0169                     main@F2802:
  1834  0169                     	ds	4
  1835                           
  1836                           	psect	inittext
  1837  12A8                     init_ram:
  1838  12A8  00FE               	movwf	btemp
  1839  12A9                     initloop:
  1840  12A9  0012               	moviw fsr0++
  1841  12AA  001E               	movwi fsr1++
  1842  12AB  0BFE               	decfsz	btemp,f
  1843  12AC  2AA9               	goto	initloop
  1844  12AD  3400               	retlw	0
  1845                           
  1846                           	psect	clrtext
  1847  12A2                     clear_ram0:	
  1848                           ;	Called with FSR0 containing the base address, and
  1849                           ;	WREG with the size to clear
  1850                           
  1851  12A2  0064               	clrwdt	;clear the watchdog before getting into this loop
  1852  12A3                     clrloop0:
  1853  12A3  0180               	clrf	0	;clear RAM location pointed to by FSR
  1854  12A4  3101               	addfsr 0,1
  1855  12A5  0B89               	decfsz	9,f	;Have we reached the end of clearing yet?
  1856  12A6  2AA3               	goto	clrloop0	;have we reached the end yet?
  1857  12A7  3400               	retlw	0	;all done for this memory range, return
  1858                           
  1859                           	psect	cstackBANK1
  1860  00A0                     __pcstackBANK1:
  1861  00A0                     ??_calc_percentage:
  1862  00A0                     ??_vfprintf:	
  1863                           ; 1 bytes @ 0x0
  1864                           
  1865                           
  1866                           ; 1 bytes @ 0x0
  1867  00A0                     	ds	2
  1868  00A2                     vfprintf@fp:
  1869                           
  1870                           ; 1 bytes @ 0x2
  1871  00A2                     	ds	1
  1872  00A3                     vfprintf@cfmt:
  1873                           
  1874                           ; 2 bytes @ 0x3
  1875  00A3                     	ds	2
  1876  00A5                     ?_sprintf:
  1877  00A5                     sprintf@fmt:	
  1878                           ; 2 bytes @ 0x5
  1879                           
  1880                           
  1881                           ; 2 bytes @ 0x5
  1882  00A5                     	ds	6
  1883  00AB                     ??_sprintf:
  1884                           
  1885                           ; 1 bytes @ 0xB
  1886  00AB                     	ds	1
  1887  00AC                     sprintf@s:
  1888                           
  1889                           ; 1 bytes @ 0xC
  1890  00AC                     	ds	1
  1891  00AD                     sprintf@ap:
  1892                           
  1893                           ; 1 bytes @ 0xD
  1894  00AD                     	ds	1
  1895  00AE                     sprintf@f:
  1896                           
  1897                           ; 5 bytes @ 0xE
  1898  00AE                     	ds	5
  1899  00B3                     ??_initialize:
  1900  00B3                     ??_print_gram:	
  1901                           ; 1 bytes @ 0x13
  1902                           
  1903                           
  1904                           ; 1 bytes @ 0x13
  1905  00B3                     	ds	1
  1906  00B4                     initialize@valstr:
  1907                           
  1908                           ; 16 bytes @ 0x14
  1909  00B4                     	ds	1
  1910  00B5                     print_gram@row1:
  1911                           
  1912                           ; 16 bytes @ 0x15
  1913  00B5                     	ds	15
  1914  00C4                     initialize@p:
  1915                           
  1916                           ; 1 bytes @ 0x24
  1917  00C4                     	ds	1
  1918  00C5                     print_gram@row2:
  1919                           
  1920                           ; 16 bytes @ 0x25
  1921  00C5                     	ds	16
  1922  00D5                     print_gram@p:
  1923                           
  1924                           ; 1 bytes @ 0x35
  1925  00D5                     	ds	1
  1926  00D6                     ??_main:
  1927                           
  1928                           ; 1 bytes @ 0x36
  1929  00D6                     	ds	2
  1930  00D8                     main@lcd:
  1931                           
  1932                           ; 4 bytes @ 0x38
  1933  00D8                     	ds	4
  1934  00DC                     main@loadcell:
  1935                           
  1936                           ; 12 bytes @ 0x3C
  1937  00DC                     	ds	12
  1938  00E8                     main@drink:
  1939                           
  1940                           ; 5 bytes @ 0x48
  1941  00E8                     	ds	5
  1942                           
  1943                           	psect	cstackCOMMON
  1944  0070                     __pcstackCOMMON:
  1945  0070                     ?_OSCILLATOR_Initialize:
  1946  0070                     ??_OSCILLATOR_Initialize:	
  1947                           ; 1 bytes @ 0x0
  1948                           
  1949  0070                     ?_WDT_Initialize:	
  1950                           ; 1 bytes @ 0x0
  1951                           
  1952  0070                     ??_WDT_Initialize:	
  1953                           ; 1 bytes @ 0x0
  1954                           
  1955  0070                     ?_initialize:	
  1956                           ; 1 bytes @ 0x0
  1957                           
  1958  0070                     ?_calc_percentage:	
  1959                           ; 1 bytes @ 0x0
  1960                           
  1961  0070                     ?_print_gram:	
  1962                           ; 1 bytes @ 0x0
  1963                           
  1964  0070                     ?_putch:	
  1965                           ; 1 bytes @ 0x0
  1966                           
  1967  0070                     ??_putch:	
  1968                           ; 1 bytes @ 0x0
  1969                           
  1970  0070                     ?_PIN_MANAGER_Initialize:	
  1971                           ; 1 bytes @ 0x0
  1972                           
  1973  0070                     ??_PIN_MANAGER_Initialize:	
  1974                           ; 1 bytes @ 0x0
  1975                           
  1976  0070                     ?_SYSTEM_Initialize:	
  1977                           ; 1 bytes @ 0x0
  1978                           
  1979  0070                     ??_SYSTEM_Initialize:	
  1980                           ; 1 bytes @ 0x0
  1981                           
  1982  0070                     ?_i2c_wait:	
  1983                           ; 1 bytes @ 0x0
  1984                           
  1985  0070                     ??_i2c_wait:	
  1986                           ; 1 bytes @ 0x0
  1987                           
  1988  0070                     ?_i2c_start:	
  1989                           ; 1 bytes @ 0x0
  1990                           
  1991  0070                     ??_i2c_start:	
  1992                           ; 1 bytes @ 0x0
  1993                           
  1994  0070                     ?_i2c_stop:	
  1995                           ; 1 bytes @ 0x0
  1996                           
  1997  0070                     ??_i2c_stop:	
  1998                           ; 1 bytes @ 0x0
  1999                           
  2000  0070                     ?_i2c_write:	
  2001                           ; 1 bytes @ 0x0
  2002                           
  2003  0070                     ??_i2c_write:	
  2004                           ; 1 bytes @ 0x0
  2005                           
  2006  0070                     ?_main:	
  2007                           ; 1 bytes @ 0x0
  2008                           
  2009  0070                     ?_set_CELL_CLK_LOW:	
  2010                           ; 1 bytes @ 0x0
  2011                           
  2012  0070                     ??_set_CELL_CLK_LOW:	
  2013                           ; 1 bytes @ 0x0
  2014                           
  2015  0070                     ?_set_CELL_CLK_HIGH:	
  2016                           ; 1 bytes @ 0x0
  2017                           
  2018  0070                     ??_set_CELL_CLK_HIGH:	
  2019                           ; 1 bytes @ 0x0
  2020                           
  2021  0070                     ?_scale_convert_gram:	
  2022                           ; 1 bytes @ 0x0
  2023                           
  2024  0070                     ?_lcd_init:	
  2025                           ; 1 bytes @ 0x0
  2026                           
  2027  0070                     ?_lcd_backlight:	
  2028                           ; 1 bytes @ 0x0
  2029                           
  2030  0070                     ?_lcd_clear:	
  2031                           ; 1 bytes @ 0x0
  2032                           
  2033  0070                     ??___aodiv:	
  2034                           ; 1 bytes @ 0x0
  2035                           
  2036  0070                     ??___aomod:	
  2037                           ; 1 bytes @ 0x0
  2038                           
  2039  0070                     ??___lodiv:	
  2040                           ; 1 bytes @ 0x0
  2041                           
  2042  0070                     ??___lomod:	
  2043                           ; 1 bytes @ 0x0
  2044                           
  2045  0070                     ?__Umul8_16:	
  2046                           ; 1 bytes @ 0x0
  2047                           
  2048  0070                     ?_fputc:	
  2049                           ; 2 bytes @ 0x0
  2050                           
  2051  0070                     ?_strlen:	
  2052                           ; 2 bytes @ 0x0
  2053                           
  2054  0070                     ?_strncmp:	
  2055                           ; 2 bytes @ 0x0
  2056                           
  2057  0070                     ?_get_CELL_DAT_VAL:	
  2058                           ; 2 bytes @ 0x0
  2059                           
  2060  0070                     ?___lldiv:	
  2061                           ; 2 bytes @ 0x0
  2062                           
  2063  0070                     ?___xxtofl:	
  2064                           ; 4 bytes @ 0x0
  2065                           
  2066  0070                     i2c_write@data:	
  2067                           ; 4 bytes @ 0x0
  2068                           
  2069  0070                     __Umul8_16@multiplicand:	
  2070                           ; 1 bytes @ 0x0
  2071                           
  2072  0070                     putch@c:	
  2073                           ; 1 bytes @ 0x0
  2074                           
  2075  0070                     fputc@c:	
  2076                           ; 1 bytes @ 0x0
  2077                           
  2078  0070                     strncmp@_l:	
  2079                           ; 2 bytes @ 0x0
  2080                           
  2081  0070                     ___lldiv@divisor:	
  2082                           ; 2 bytes @ 0x0
  2083                           
  2084  0070                     ___xxtofl@val:	
  2085                           ; 4 bytes @ 0x0
  2086                           
  2087                           
  2088                           ; 4 bytes @ 0x0
  2089  0070                     	ds	1
  2090  0071                     ?_lcd_cmd:
  2091  0071                     set_CELL_CLK_LOW@p:	
  2092                           ; 1 bytes @ 0x1
  2093                           
  2094  0071                     set_CELL_CLK_HIGH@p:	
  2095                           ; 1 bytes @ 0x1
  2096                           
  2097  0071                     lcd_cmd@cmd:	
  2098                           ; 1 bytes @ 0x1
  2099                           
  2100  0071                     ___aodiv@counter:	
  2101                           ; 1 bytes @ 0x1
  2102                           
  2103  0071                     ___aomod@counter:	
  2104                           ; 1 bytes @ 0x1
  2105                           
  2106  0071                     ___lomod@counter:	
  2107                           ; 1 bytes @ 0x1
  2108                           
  2109  0071                     ___lodiv@quotient:	
  2110                           ; 1 bytes @ 0x1
  2111                           
  2112                           
  2113                           ; 8 bytes @ 0x1
  2114  0071                     	ds	1
  2115  0072                     ??__Umul8_16:
  2116  0072                     ??_strlen:	
  2117                           ; 1 bytes @ 0x2
  2118                           
  2119  0072                     ??_get_CELL_DAT_VAL:	
  2120                           ; 1 bytes @ 0x2
  2121                           
  2122  0072                     ??_lcd_cmd:	
  2123                           ; 1 bytes @ 0x2
  2124                           
  2125  0072                     lcd_cmd@p:	
  2126                           ; 1 bytes @ 0x2
  2127                           
  2128  0072                     ___aodiv@sign:	
  2129                           ; 1 bytes @ 0x2
  2130                           
  2131  0072                     ___aomod@sign:	
  2132                           ; 1 bytes @ 0x2
  2133                           
  2134  0072                     fputc@fp:	
  2135                           ; 1 bytes @ 0x2
  2136                           
  2137  0072                     strncmp@_r:	
  2138                           ; 1 bytes @ 0x2
  2139                           
  2140                           
  2141                           ; 2 bytes @ 0x2
  2142  0072                     	ds	1
  2143  0073                     ?_write4bits:
  2144  0073                     ?_command:	
  2145                           ; 1 bytes @ 0x3
  2146                           
  2147  0073                     ??_fputc:	
  2148                           ; 1 bytes @ 0x3
  2149                           
  2150  0073                     ??_lcd_backlight:	
  2151                           ; 1 bytes @ 0x3
  2152                           
  2153  0073                     ?_abs:	
  2154                           ; 1 bytes @ 0x3
  2155                           
  2156  0073                     command@val:	
  2157                           ; 2 bytes @ 0x3
  2158                           
  2159  0073                     write4bits@val:	
  2160                           ; 1 bytes @ 0x3
  2161                           
  2162  0073                     strlen@a:	
  2163                           ; 1 bytes @ 0x3
  2164                           
  2165  0073                     abs@a:	
  2166                           ; 1 bytes @ 0x3
  2167                           
  2168  0073                     ___aodiv@quotient:	
  2169                           ; 2 bytes @ 0x3
  2170                           
  2171                           
  2172                           ; 8 bytes @ 0x3
  2173  0073                     	ds	1
  2174  0074                     ??_write4bits:
  2175  0074                     ??___xxtofl:	
  2176                           ; 1 bytes @ 0x4
  2177                           
  2178  0074                     lcd_backlight@p:	
  2179                           ; 1 bytes @ 0x4
  2180                           
  2181  0074                     command@mode:	
  2182                           ; 1 bytes @ 0x4
  2183                           
  2184  0074                     strlen@s:	
  2185                           ; 1 bytes @ 0x4
  2186                           
  2187  0074                     __Umul8_16@product:	
  2188                           ; 1 bytes @ 0x4
  2189                           
  2190  0074                     strncmp@n:	
  2191                           ; 2 bytes @ 0x4
  2192                           
  2193  0074                     ___lldiv@dividend:	
  2194                           ; 2 bytes @ 0x4
  2195                           
  2196                           
  2197                           ; 4 bytes @ 0x4
  2198  0074                     	ds	1
  2199  0075                     ??_command:
  2200  0075                     ??_abs:	
  2201                           ; 1 bytes @ 0x5
  2202                           
  2203  0075                     get_CELL_DAT_VAL@p:	
  2204                           ; 1 bytes @ 0x5
  2205                           
  2206  0075                     write4bits@p:	
  2207                           ; 1 bytes @ 0x5
  2208                           
  2209                           
  2210                           ; 1 bytes @ 0x5
  2211  0075                     	ds	1
  2212  0076                     ??_strncmp:
  2213  0076                     ??_lcd_init:	
  2214                           ; 1 bytes @ 0x6
  2215                           
  2216  0076                     __Umul8_16@word_mpld:	
  2217                           ; 1 bytes @ 0x6
  2218                           
  2219                           
  2220                           ; 2 bytes @ 0x6
  2221  0076                     	ds	1
  2222  0077                     command@highnib:
  2223  0077                     strncmp@l:	
  2224                           ; 1 bytes @ 0x7
  2225                           
  2226                           
  2227                           ; 2 bytes @ 0x7
  2228  0077                     	ds	1
  2229  0078                     ??___lldiv:
  2230  0078                     ?_fputs:	
  2231                           ; 1 bytes @ 0x8
  2232                           
  2233  0078                     lcd_init@p:	
  2234                           ; 2 bytes @ 0x8
  2235                           
  2236  0078                     command@lownib:	
  2237                           ; 1 bytes @ 0x8
  2238                           
  2239  0078                     __Umul8_16@multiplier:	
  2240                           ; 1 bytes @ 0x8
  2241                           
  2242  0078                     ___xxtofl@sign:	
  2243                           ; 1 bytes @ 0x8
  2244                           
  2245  0078                     fputs@fp:	
  2246                           ; 1 bytes @ 0x8
  2247                           
  2248                           
  2249                           ; 1 bytes @ 0x8
  2250  0078                     	ds	1
  2251  0079                     ??_fputs:
  2252  0079                     command@p:	
  2253                           ; 1 bytes @ 0x9
  2254                           
  2255  0079                     ___lodiv@counter:	
  2256                           ; 1 bytes @ 0x9
  2257                           
  2258  0079                     ___xxtofl@exp:	
  2259                           ; 1 bytes @ 0x9
  2260                           
  2261  0079                     strncmp@r:	
  2262                           ; 1 bytes @ 0x9
  2263                           
  2264  0079                     ___lldiv@quotient:	
  2265                           ; 2 bytes @ 0x9
  2266                           
  2267                           
  2268                           ; 4 bytes @ 0x9
  2269  0079                     	ds	1
  2270  007A                     ?_lcd_set_cursor:
  2271  007A                     ?_lcd_print:	
  2272                           ; 1 bytes @ 0xA
  2273                           
  2274  007A                     lcd_set_cursor@col:	
  2275                           ; 1 bytes @ 0xA
  2276                           
  2277  007A                     lcd_print@str:	
  2278                           ; 1 bytes @ 0xA
  2279                           
  2280  007A                     ___xxtofl@arg:	
  2281                           ; 2 bytes @ 0xA
  2282                           
  2283                           
  2284                           ; 4 bytes @ 0xA
  2285  007A                     	ds	1
  2286  007B                     lcd_set_cursor@row:
  2287                           
  2288                           ; 1 bytes @ 0xB
  2289  007B                     	ds	1
  2290  007C                     ??_lcd_set_cursor:
  2291  007C                     ??_lcd_print:	
  2292                           ; 1 bytes @ 0xC
  2293                           
  2294  007C                     ??_pad:	
  2295                           ; 1 bytes @ 0xC
  2296                           
  2297                           
  2298                           ; 1 bytes @ 0xC
  2299  007C                     	ds	1
  2300  007D                     ??_utoa:
  2301  007D                     lcd_print_with@p:	
  2302                           ; 1 bytes @ 0xD
  2303                           
  2304  007D                     ___lldiv@counter:	
  2305                           ; 1 bytes @ 0xD
  2306                           
  2307                           
  2308                           ; 1 bytes @ 0xD
  2309  007D                     	ds	1
  2310                           
  2311                           	psect	cstackBANK0
  2312  0020                     __pcstackBANK0:
  2313  0020                     ?_get_scale_val:
  2314  0020                     ?___fldiv:	
  2315                           ; 4 bytes @ 0x0
  2316                           
  2317  0020                     ?___aodiv:	
  2318                           ; 4 bytes @ 0x0
  2319                           
  2320  0020                     ?___aomod:	
  2321                           ; 8 bytes @ 0x0
  2322                           
  2323  0020                     ?___lodiv:	
  2324                           ; 8 bytes @ 0x0
  2325                           
  2326  0020                     ?___lomod:	
  2327                           ; 8 bytes @ 0x0
  2328                           
  2329  0020                     get_scale_val@scale_avg_count:	
  2330                           ; 8 bytes @ 0x0
  2331                           
  2332  0020                     lcd_print@cmd:	
  2333                           ; 1 bytes @ 0x0
  2334                           
  2335  0020                     fputs@c:	
  2336                           ; 1 bytes @ 0x0
  2337                           
  2338  0020                     lcd_set_cursor@row_offsets:	
  2339                           ; 1 bytes @ 0x0
  2340                           
  2341  0020                     ___fldiv@a:	
  2342                           ; 4 bytes @ 0x0
  2343                           
  2344  0020                     ___aodiv@divisor:	
  2345                           ; 4 bytes @ 0x0
  2346                           
  2347  0020                     ___aomod@divisor:	
  2348                           ; 8 bytes @ 0x0
  2349                           
  2350  0020                     ___lodiv@divisor:	
  2351                           ; 8 bytes @ 0x0
  2352                           
  2353  0020                     ___lomod@divisor:	
  2354                           ; 8 bytes @ 0x0
  2355                           
  2356                           
  2357                           ; 8 bytes @ 0x0
  2358  0020                     	ds	1
  2359  0021                     lcd_print@p:
  2360  0021                     fputs@i:	
  2361                           ; 1 bytes @ 0x1
  2362                           
  2363                           
  2364                           ; 2 bytes @ 0x1
  2365  0021                     	ds	2
  2366  0023                     fputs@s:
  2367                           
  2368                           ; 1 bytes @ 0x3
  2369  0023                     	ds	1
  2370  0024                     ??_get_scale_val:
  2371  0024                     ?_pad:	
  2372                           ; 1 bytes @ 0x4
  2373                           
  2374  0024                     lcd_set_cursor@cmd:	
  2375                           ; 2 bytes @ 0x4
  2376                           
  2377  0024                     pad@buf:	
  2378                           ; 1 bytes @ 0x4
  2379                           
  2380  0024                     ___fldiv@b:	
  2381                           ; 1 bytes @ 0x4
  2382                           
  2383                           
  2384                           ; 4 bytes @ 0x4
  2385  0024                     	ds	1
  2386  0025                     lcd_set_cursor@p:
  2387  0025                     pad@p:	
  2388                           ; 1 bytes @ 0x5
  2389                           
  2390                           
  2391                           ; 2 bytes @ 0x5
  2392  0025                     	ds	1
  2393  0026                     ??_lcd_clear:
  2394  0026                     ?_lcd_print_with:	
  2395                           ; 1 bytes @ 0x6
  2396                           
  2397  0026                     lcd_print_with@str:	
  2398                           ; 1 bytes @ 0x6
  2399                           
  2400                           
  2401                           ; 2 bytes @ 0x6
  2402  0026                     	ds	1
  2403  0027                     pad@i:
  2404                           
  2405                           ; 2 bytes @ 0x7
  2406  0027                     	ds	1
  2407  0028                     ??___fldiv:
  2408  0028                     lcd_clear@row:	
  2409                           ; 1 bytes @ 0x8
  2410                           
  2411  0028                     lcd_print_with@col:	
  2412                           ; 1 bytes @ 0x8
  2413                           
  2414  0028                     get_scale_val@weight_add:	
  2415                           ; 1 bytes @ 0x8
  2416                           
  2417  0028                     ___aodiv@dividend:	
  2418                           ; 4 bytes @ 0x8
  2419                           
  2420  0028                     ___aomod@dividend:	
  2421                           ; 8 bytes @ 0x8
  2422                           
  2423  0028                     ___lodiv@dividend:	
  2424                           ; 8 bytes @ 0x8
  2425                           
  2426  0028                     ___lomod@dividend:	
  2427                           ; 8 bytes @ 0x8
  2428                           
  2429                           
  2430                           ; 8 bytes @ 0x8
  2431  0028                     	ds	1
  2432  0029                     lcd_clear@col:
  2433  0029                     lcd_print_with@row:	
  2434                           ; 1 bytes @ 0x9
  2435                           
  2436  0029                     pad@w:	
  2437                           ; 1 bytes @ 0x9
  2438                           
  2439                           
  2440                           ; 2 bytes @ 0x9
  2441  0029                     	ds	1
  2442  002A                     ??_lcd_print_with:
  2443  002A                     lcd_clear@p:	
  2444                           ; 1 bytes @ 0xA
  2445                           
  2446                           
  2447                           ; 1 bytes @ 0xA
  2448  002A                     	ds	1
  2449  002B                     pad@fp:
  2450                           
  2451                           ; 1 bytes @ 0xB
  2452  002B                     	ds	1
  2453  002C                     get_scale_val@j:
  2454                           
  2455                           ; 1 bytes @ 0xC
  2456  002C                     	ds	1
  2457  002D                     get_scale_val@weight_count:
  2458  002D                     ___fldiv@rem:	
  2459                           ; 4 bytes @ 0xD
  2460                           
  2461                           
  2462                           ; 4 bytes @ 0xD
  2463  002D                     	ds	3
  2464  0030                     ?_dtoa:
  2465  0030                     ?_utoa:	
  2466                           ; 2 bytes @ 0x10
  2467                           
  2468  0030                     dtoa@d:	
  2469                           ; 2 bytes @ 0x10
  2470                           
  2471  0030                     utoa@d:	
  2472                           ; 8 bytes @ 0x10
  2473                           
  2474                           
  2475                           ; 8 bytes @ 0x10
  2476  0030                     	ds	1
  2477  0031                     get_scale_val@i:
  2478  0031                     ___fldiv@sign:	
  2479                           ; 1 bytes @ 0x11
  2480                           
  2481                           
  2482                           ; 1 bytes @ 0x11
  2483  0031                     	ds	1
  2484  0032                     get_scale_val@p:
  2485  0032                     ___fldiv@new_exp:	
  2486                           ; 1 bytes @ 0x12
  2487                           
  2488                           
  2489                           ; 2 bytes @ 0x12
  2490  0032                     	ds	2
  2491  0034                     ___fldiv@grs:
  2492                           
  2493                           ; 4 bytes @ 0x14
  2494  0034                     	ds	4
  2495  0038                     ??_dtoa:
  2496  0038                     ___fldiv@bexp:	
  2497                           ; 1 bytes @ 0x18
  2498                           
  2499  0038                     utoa@p:	
  2500                           ; 1 bytes @ 0x18
  2501                           
  2502                           
  2503                           ; 2 bytes @ 0x18
  2504  0038                     	ds	1
  2505  0039                     ___fldiv@aexp:
  2506                           
  2507                           ; 1 bytes @ 0x19
  2508  0039                     	ds	1
  2509  003A                     ?___flmul:
  2510  003A                     utoa@fp:	
  2511                           ; 4 bytes @ 0x1A
  2512                           
  2513  003A                     ___flmul@b:	
  2514                           ; 1 bytes @ 0x1A
  2515                           
  2516                           
  2517                           ; 4 bytes @ 0x1A
  2518  003A                     	ds	1
  2519  003B                     _dtoa$1179:
  2520  003B                     utoa@w:	
  2521                           ; 2 bytes @ 0x1B
  2522                           
  2523                           
  2524                           ; 2 bytes @ 0x1B
  2525  003B                     	ds	2
  2526  003D                     dtoa@p:
  2527  003D                     utoa@n:	
  2528                           ; 2 bytes @ 0x1D
  2529                           
  2530                           
  2531                           ; 8 bytes @ 0x1D
  2532  003D                     	ds	1
  2533  003E                     ___flmul@a:
  2534                           
  2535                           ; 4 bytes @ 0x1E
  2536  003E                     	ds	1
  2537  003F                     dtoa@fp:
  2538                           
  2539                           ; 1 bytes @ 0x1F
  2540  003F                     	ds	1
  2541  0040                     dtoa@w:
  2542                           
  2543                           ; 2 bytes @ 0x20
  2544  0040                     	ds	2
  2545  0042                     ??___flmul:
  2546  0042                     dtoa@s:	
  2547                           ; 1 bytes @ 0x22
  2548                           
  2549                           
  2550                           ; 2 bytes @ 0x22
  2551  0042                     	ds	2
  2552  0044                     dtoa@n:
  2553                           
  2554                           ; 8 bytes @ 0x24
  2555  0044                     	ds	1
  2556  0045                     utoa@i:
  2557                           
  2558                           ; 2 bytes @ 0x25
  2559  0045                     	ds	2
  2560  0047                     ___flmul@sign:
  2561                           
  2562                           ; 1 bytes @ 0x27
  2563  0047                     	ds	1
  2564  0048                     ___flmul@grs:
  2565                           
  2566                           ; 4 bytes @ 0x28
  2567  0048                     	ds	4
  2568  004C                     ___flmul@aexp:
  2569  004C                     dtoa@i:	
  2570                           ; 1 bytes @ 0x2C
  2571                           
  2572                           
  2573                           ; 2 bytes @ 0x2C
  2574  004C                     	ds	1
  2575  004D                     ___flmul@bexp:
  2576                           
  2577                           ; 1 bytes @ 0x2D
  2578  004D                     	ds	1
  2579  004E                     ?_vfpfcnvrt:
  2580  004E                     vfpfcnvrt@fmt:	
  2581                           ; 2 bytes @ 0x2E
  2582                           
  2583  004E                     ___flmul@prod:	
  2584                           ; 1 bytes @ 0x2E
  2585                           
  2586                           
  2587                           ; 4 bytes @ 0x2E
  2588  004E                     	ds	1
  2589  004F                     vfpfcnvrt@ap:
  2590                           
  2591                           ; 1 bytes @ 0x2F
  2592  004F                     	ds	1
  2593  0050                     ??_vfpfcnvrt:
  2594                           
  2595                           ; 1 bytes @ 0x30
  2596  0050                     	ds	2
  2597  0052                     ___flmul@temp:
  2598                           
  2599                           ; 2 bytes @ 0x32
  2600  0052                     	ds	2
  2601  0054                     ?___fltol:
  2602  0054                     ___fltol@f1:	
  2603                           ; 4 bytes @ 0x34
  2604                           
  2605                           
  2606                           ; 4 bytes @ 0x34
  2607  0054                     	ds	4
  2608  0058                     ??___fltol:
  2609                           
  2610                           ; 1 bytes @ 0x38
  2611  0058                     	ds	4
  2612  005C                     vfpfcnvrt@ll:
  2613                           
  2614                           ; 8 bytes @ 0x3C
  2615  005C                     	ds	1
  2616  005D                     ___fltol@sign1:
  2617                           
  2618                           ; 1 bytes @ 0x3D
  2619  005D                     	ds	1
  2620  005E                     ___fltol@exp1:
  2621                           
  2622                           ; 1 bytes @ 0x3E
  2623  005E                     	ds	1
  2624  005F                     ??_scale_convert_gram:
  2625                           
  2626                           ; 1 bytes @ 0x3F
  2627  005F                     	ds	5
  2628  0064                     vfpfcnvrt@llu:
  2629                           
  2630                           ; 8 bytes @ 0x44
  2631  0064                     	ds	3
  2632  0067                     scale_convert_gram@temp:
  2633                           
  2634                           ; 4 bytes @ 0x47
  2635  0067                     	ds	4
  2636  006B                     scale_convert_gram@p:
  2637                           
  2638                           ; 1 bytes @ 0x4B
  2639  006B                     	ds	1
  2640  006C                     calc_percentage@p:
  2641  006C                     vfpfcnvrt@fp:	
  2642                           ; 1 bytes @ 0x4C
  2643                           
  2644                           
  2645                           ; 1 bytes @ 0x4C
  2646  006C                     	ds	1
  2647  006D                     ?_vfprintf:
  2648  006D                     vfprintf@fmt:	
  2649                           ; 2 bytes @ 0x4D
  2650                           
  2651                           
  2652                           ; 2 bytes @ 0x4D
  2653  006D                     	ds	2
  2654  006F                     vfprintf@ap:
  2655                           
  2656                           ; 1 bytes @ 0x4F
  2657  006F                     	ds	1
  2658                           
  2659                           	psect	maintext
  2660  16B1                     __pmaintext:	
  2661 ;;
  2662 ;;Main: autosize = 0, tempsize = 2, incstack = 0, save=0
  2663 ;;
  2664 ;; *************** function _main *****************
  2665 ;; Defined at:
  2666 ;;		line 8 in file "main.c"
  2667 ;; Parameters:    Size  Location     Type
  2668 ;;		None
  2669 ;; Auto vars:     Size  Location     Type
  2670 ;;  loadcell       12   60[BANK1 ] struct .
  2671 ;;  drink           5   72[BANK1 ] struct .
  2672 ;;  lcd             4   56[BANK1 ] struct .
  2673 ;; Return value:  Size  Location     Type
  2674 ;;                  1    wreg      void 
  2675 ;; Registers used:
  2676 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  2677 ;; Tracked objects:
  2678 ;;		On entry : B1F/0
  2679 ;;		On exit  : 0/0
  2680 ;;		Unchanged: 0/0
  2681 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  2682 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2683 ;;      Locals:         0       0      21       0       0       0       0       0       0       0       0       0       
      +0       0
  2684 ;;      Temps:          0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0
  2685 ;;      Totals:         0       0      23       0       0       0       0       0       0       0       0       0       
      +0       0
  2686 ;;Total ram usage:       23 bytes
  2687 ;; Hardware stack levels required when called: 9
  2688 ;; This function calls:
  2689 ;;		_SYSTEM_Initialize
  2690 ;;		_calc_percentage
  2691 ;;		_initialize
  2692 ;;		_print_gram
  2693 ;; This function is called by:
  2694 ;;		Startup code after reset
  2695 ;; This function uses a non-reentrant model
  2696 ;;
  2697                           
  2698                           
  2699                           ;psect for function _main
  2700  16B1                     _main:
  2701  16B1                     l3591:	
  2702                           ;incstack = 0
  2703                           ; Regs used in _main: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  2704                           
  2705                           
  2706                           ;main.c: 10:     SYSTEM_Initialize();
  2707  16B1  3192  22BC  3196   	fcall	_SYSTEM_Initialize
  2708  16B4                     l3593:
  2709                           
  2710                           ;main.c: 13:     ANSELA = 0x00;
  2711  16B4  0023               	movlb	3	; select bank3
  2712  16B5  018C               	clrf	12	;volatile
  2713  16B6                     l3595:
  2714                           
  2715                           ;main.c: 14:     ANSELB = 0x00;
  2716  16B6  018D               	clrf	13	;volatile
  2717  16B7                     l3597:
  2718                           
  2719                           ;main.c: 18:     TRISB = 0x04;
  2720  16B7  3004               	movlw	4
  2721  16B8  0021               	movlb	1	; select bank1
  2722  16B9  008D               	movwf	13	;volatile
  2723  16BA                     l3599:
  2724                           
  2725                           ;main.c: 20:     LATA = 0x00;
  2726  16BA  0022               	movlb	2	; select bank2
  2727  16BB  018C               	clrf	12	;volatile
  2728  16BC                     l3601:
  2729                           
  2730                           ;main.c: 21:     LATB = 0x00;
  2731  16BC  018D               	clrf	13	;volatile
  2732  16BD                     l3603:
  2733                           
  2734                           ;main.c: 24:     SSPADD = 0x13;
  2735  16BD  3013               	movlw	19
  2736  16BE  0024               	movlb	4	; select bank4
  2737  16BF  0092               	movwf	18	;volatile
  2738  16C0                     l3605:
  2739                           
  2740                           ;main.c: 25:     SSPCON1 = 0x28;
  2741  16C0  3028               	movlw	40
  2742  16C1  0095               	movwf	21	;volatile
  2743  16C2                     l3607:
  2744                           
  2745                           ;main.c: 26:     SSPCON2 = 0x0;
  2746  16C2  0196               	clrf	22	;volatile
  2747  16C3                     l3609:
  2748                           
  2749                           ;main.c: 27:     SSPSTAT = 0;
  2750  16C3  0194               	clrf	20	;volatile
  2751  16C4                     l3611:
  2752                           
  2753                           ;main.c: 30:     LoadCell loadcell = {0x02, 0x04, 0, 0, 500};
  2754  16C4  304F               	movlw	low main@F2800
  2755  16C5  0086               	movwf	6
  2756  16C6  3001               	movlw	high main@F2800
  2757  16C7  0087               	movwf	7
  2758  16C8  30DC               	movlw	low main@loadcell
  2759  16C9  0084               	movwf	4
  2760  16CA  3000               	movlw	high main@loadcell
  2761  16CB  0085               	movwf	5
  2762  16CC  300C               	movlw	12
  2763  16CD  0021               	movlb	1	; select bank1
  2764  16CE  00D6               	movwf	??_main^(0+128)
  2765  16CF                     u4040:
  2766  16CF  0016               	moviw fsr1++
  2767  16D0  001A               	movwi fsr0++
  2768  16D1  0BD6               	decfsz	??_main^(0+128),f
  2769  16D2  2ECF               	goto	u4040
  2770  16D3                     l3613:
  2771                           
  2772                           ;main.c: 31:     Lcd lcd = {0x27, 16, 2, 0};
  2773  16D3  0022               	movlb	2	; select bank2
  2774  16D4  086C               	movf	(main@F2802+3)^(0+256),w
  2775  16D5  0021               	movlb	1	; select bank1
  2776  16D6  00DB               	movwf	(main@lcd+3)^(0+128)
  2777  16D7  0022               	movlb	2	; select bank2
  2778  16D8  086B               	movf	(main@F2802+2)^(0+256),w
  2779  16D9  0021               	movlb	1	; select bank1
  2780  16DA  00DA               	movwf	(main@lcd+2)^(0+128)
  2781  16DB  0022               	movlb	2	; select bank2
  2782  16DC  086A               	movf	(main@F2802+1)^(0+256),w
  2783  16DD  0021               	movlb	1	; select bank1
  2784  16DE  00D9               	movwf	(main@lcd+1)^(0+128)
  2785  16DF  0022               	movlb	2	; select bank2
  2786  16E0  0869               	movf	main@F2802^(0+256),w
  2787  16E1  0021               	movlb	1	; select bank1
  2788  16E2  00D8               	movwf	main@lcd^(0+128)
  2789  16E3                     l3615:
  2790                           
  2791                           ;main.c: 33:     DrinkMeter drink = {&loadcell, &lcd, 500, 0};
  2792  16E3  3020               	movlw	low main@F2804
  2793  16E4  0086               	movwf	6
  2794  16E5  3001               	movlw	high main@F2804
  2795  16E6  0087               	movwf	7
  2796  16E7  30E8               	movlw	low main@drink
  2797  16E8  0084               	movwf	4
  2798  16E9  3000               	movlw	high main@drink
  2799  16EA  0085               	movwf	5
  2800  16EB  3005               	movlw	5
  2801  16EC  00D6               	movwf	??_main^(0+128)
  2802  16ED                     u4050:
  2803  16ED  0016               	moviw fsr1++
  2804  16EE  001A               	movwi fsr0++
  2805  16EF  0BD6               	decfsz	??_main^(0+128),f
  2806  16F0  2EED               	goto	u4050
  2807  16F1                     l3617:
  2808  16F1  30DC               	movlw	(low (main@loadcell| 0))& (0+255)
  2809  16F2  00D6               	movwf	??_main^(0+128)
  2810  16F3  0856               	movf	??_main^(0+128),w
  2811  16F4  00E8               	movwf	main@drink^(0+128)
  2812  16F5                     l3619:
  2813  16F5  30D8               	movlw	(low (main@lcd| 0))& (0+255)
  2814  16F6  00D6               	movwf	??_main^(0+128)
  2815  16F7  0856               	movf	??_main^(0+128),w
  2816  16F8  00E9               	movwf	(low ((main@drink| 0+1)))^(0+128)
  2817  16F9                     l3621:
  2818  16F9  30F4               	movlw	244
  2819  16FA  00EA               	movwf	(main@drink^(0+128)+2)
  2820  16FB  3001               	movlw	1
  2821  16FC  00EB               	movwf	(main@drink^(0+128)+3)
  2822  16FD                     l3623:
  2823  16FD  01EC               	clrf	(main@drink^(0+128)+4)
  2824  16FE                     l3625:
  2825                           
  2826                           ;main.c: 35:     initialize(&drink);
  2827  16FE  30E8               	movlw	(low (main@drink| 0))& (0+255)
  2828  16FF  3188  200C  3196   	fcall	_initialize
  2829  1702                     l3627:
  2830                           
  2831                           ;main.c: 49:         calc_percentage(&drink);
  2832  1702  30E8               	movlw	(low (main@drink| 0))& (0+255)
  2833  1703  318A  2249  3196   	fcall	_calc_percentage
  2834  1706                     l3629:
  2835                           
  2836                           ;main.c: 50:         print_gram(&drink);
  2837  1706  30E8               	movlw	(low (main@drink| 0))& (0+255)
  2838  1707  3195  25FE  3196   	fcall	_print_gram
  2839  170A                     l3631:
  2840                           
  2841                           ;main.c: 52:         _delay((unsigned long)((500)*(8000000/4000.0)));
  2842  170A  3006               	movlw	6
  2843  170B  0021               	movlb	1	; select bank1
  2844  170C  00D7               	movwf	(??_main^(0+128)+1)
  2845  170D  3013               	movlw	19
  2846  170E  00D6               	movwf	??_main^(0+128)
  2847  170F  30AD               	movlw	173
  2848  1710                     u4077:
  2849  1710  0B89               	decfsz	9,f
  2850  1711  2F10               	goto	u4077
  2851  1712  0BD6               	decfsz	??_main^(0+128),f
  2852  1713  2F10               	goto	u4077
  2853  1714  0BD7               	decfsz	(??_main^(0+128)+1),f
  2854  1715  2F10               	goto	u4077
  2855  1716  3200               	nop2
  2856  1717  2F02               	goto	l3627
  2857  1718  3180  2802         	ljmp	start
  2858  171A                     __end_of_main:
  2859                           
  2860                           	psect	text1
  2861  15FE                     __ptext1:	
  2862 ;; *************** function _print_gram *****************
  2863 ;; Defined at:
  2864 ;;		line 36 in file "drink_meter.c"
  2865 ;; Parameters:    Size  Location     Type
  2866 ;;  p               1    wreg     PTR struct .
  2867 ;;		 -> main@drink(5), 
  2868 ;; Auto vars:     Size  Location     Type
  2869 ;;  p               1   53[BANK1 ] PTR struct .
  2870 ;;		 -> main@drink(5), 
  2871 ;;  row2           16   37[BANK1 ] unsigned char [16]
  2872 ;;  row1           16   21[BANK1 ] unsigned char [16]
  2873 ;; Return value:  Size  Location     Type
  2874 ;;                  1    wreg      void 
  2875 ;; Registers used:
  2876 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  2877 ;; Tracked objects:
  2878 ;;		On entry : 0/0
  2879 ;;		On exit  : 0/0
  2880 ;;		Unchanged: 0/0
  2881 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  2882 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2883 ;;      Locals:         0       0      33       0       0       0       0       0       0       0       0       0       
      +0       0
  2884 ;;      Temps:          0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0
  2885 ;;      Totals:         0       0      35       0       0       0       0       0       0       0       0       0       
      +0       0
  2886 ;;Total ram usage:       35 bytes
  2887 ;; Hardware stack levels used: 1
  2888 ;; Hardware stack levels required when called: 8
  2889 ;; This function calls:
  2890 ;;		_lcd_clear
  2891 ;;		_lcd_print_with
  2892 ;;		_sprintf
  2893 ;; This function is called by:
  2894 ;;		_main
  2895 ;; This function uses a non-reentrant model
  2896 ;;
  2897                           
  2898                           
  2899                           ;psect for function _print_gram
  2900  15FE                     _print_gram:
  2901                           
  2902                           ;incstack = 0
  2903                           ; Regs used in _print_gram: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  2904                           ;print_gram@p stored from wreg
  2905  15FE  0021               	movlb	1	; select bank1
  2906  15FF  00D5               	movwf	print_gram@p^(0+128)
  2907  1600                     l3561:
  2908                           
  2909                           ;drink_meter.c: 37:     char row1[16];;drink_meter.c: 38:     char row2[16];;drink_meter
      +                          .c: 40:     sprintf(row1, "%dg / %dg", p->loadcell->gram, p->max_gram);
  2910  1600  301A               	movlw	low (STR_5| (0+32768))
  2911  1601  00A5               	movwf	sprintf@fmt^(0+128)
  2912  1602  3098               	movlw	high (STR_5| (0+32768))
  2913  1603  00A6               	movwf	(sprintf@fmt^(0+128)+1)
  2914  1604  0855               	movf	print_gram@p^(0+128),w
  2915  1605  0086               	movwf	6
  2916  1606  0187               	clrf	7
  2917  1607  0801               	movf	1,w
  2918  1608  3E0A               	addlw	10
  2919  1609  0086               	movwf	6
  2920  160A  0187               	clrf	7
  2921  160B  3F40               	moviw [0]fsr1
  2922  160C  00A7               	movwf	(?_sprintf^(0+128)+2)
  2923  160D  3F41               	moviw [1]fsr1
  2924  160E  00A8               	movwf	((?_sprintf+1)^(0+128)+2)
  2925  160F  0855               	movf	print_gram@p^(0+128),w
  2926  1610  3E02               	addlw	2
  2927  1611  0086               	movwf	6
  2928  1612  0187               	clrf	7
  2929  1613  3F40               	moviw [0]fsr1
  2930  1614  00A9               	movwf	(?_sprintf^(0+128)+4)
  2931  1615  3F41               	moviw [1]fsr1
  2932  1616  00AA               	movwf	((?_sprintf+1)^(0+128)+4)
  2933  1617  30B5               	movlw	(low (print_gram@row1| 0))& (0+255)
  2934  1618  3193  23FE  3195   	fcall	_sprintf
  2935                           
  2936                           ;drink_meter.c: 41:     sprintf(row2, "%d %%", p->percentage);
  2937  161B  302C               	movlw	low (STR_6| (0+32768))
  2938  161C  0021               	movlb	1	; select bank1
  2939  161D  00A5               	movwf	sprintf@fmt^(0+128)
  2940  161E  3098               	movlw	high (STR_6| (0+32768))
  2941  161F  00A6               	movwf	(sprintf@fmt^(0+128)+1)
  2942  1620  0855               	movf	print_gram@p^(0+128),w
  2943  1621  3E04               	addlw	4
  2944  1622  0086               	movwf	6
  2945  1623  0187               	clrf	7
  2946  1624  0801               	movf	1,w
  2947  1625  00B3               	movwf	??_print_gram^(0+128)
  2948  1626  01B4               	clrf	(??_print_gram^(0+128)+1)
  2949  1627  0833               	movf	??_print_gram^(0+128),w
  2950  1628  00A7               	movwf	(?_sprintf^(0+128)+2)
  2951  1629  0834               	movf	(??_print_gram+1)^(0+128),w
  2952  162A  00A8               	movwf	((?_sprintf+1)^(0+128)+2)
  2953  162B  30C5               	movlw	(low (print_gram@row2| 0))& (0+255)
  2954  162C  3193  23FE  3195   	fcall	_sprintf
  2955                           
  2956                           ;drink_meter.c: 43:     lcd_clear(p->lcd);
  2957  162F  0021               	movlb	1	; select bank1
  2958  1630  0A55               	incf	print_gram@p^(0+128),w
  2959  1631  0086               	movwf	6
  2960  1632  0187               	clrf	7
  2961  1633  0801               	movf	1,w
  2962  1634  3194  24C1  3195   	fcall	_lcd_clear
  2963                           
  2964                           ;drink_meter.c: 45:     lcd_print_with(p->lcd, row1, 0, 0);
  2965  1637  30B5               	movlw	low print_gram@row1
  2966  1638  0020               	movlb	0	; select bank0
  2967  1639  00A6               	movwf	lcd_print_with@str
  2968  163A  3000               	movlw	high print_gram@row1
  2969  163B  00A7               	movwf	lcd_print_with@str+1
  2970  163C  01A8               	clrf	lcd_print_with@col
  2971  163D  01A9               	clrf	lcd_print_with@row
  2972  163E  0021               	movlb	1	; select bank1
  2973  163F  0A55               	incf	print_gram@p^(0+128),w
  2974  1640  0086               	movwf	6
  2975  1641  0187               	clrf	7
  2976  1642  0801               	movf	1,w
  2977  1643  3193  2317  3195   	fcall	_lcd_print_with
  2978                           
  2979                           ;drink_meter.c: 46:     lcd_print_with(p->lcd, row2, 0, 1);
  2980  1646  30C5               	movlw	low print_gram@row2
  2981  1647  0020               	movlb	0	; select bank0
  2982  1648  00A6               	movwf	lcd_print_with@str
  2983  1649  3000               	movlw	high print_gram@row2
  2984  164A  00A7               	movwf	lcd_print_with@str+1
  2985  164B  01A8               	clrf	lcd_print_with@col
  2986  164C  01A9               	clrf	lcd_print_with@row
  2987  164D  0AA9               	incf	lcd_print_with@row,f
  2988  164E  0021               	movlb	1	; select bank1
  2989  164F  0A55               	incf	print_gram@p^(0+128),w
  2990  1650  0086               	movwf	6
  2991  1651  0187               	clrf	7
  2992  1652  0801               	movf	1,w
  2993  1653  3193  2317  3195   	fcall	_lcd_print_with
  2994  1656                     l350:
  2995  1656  0008               	return
  2996  1657                     __end_of_print_gram:
  2997                           
  2998                           	psect	text2
  2999  080C                     __ptext2:	
  3000 ;; *************** function _initialize *****************
  3001 ;; Defined at:
  3002 ;;		line 5 in file "drink_meter.c"
  3003 ;; Parameters:    Size  Location     Type
  3004 ;;  p               1    wreg     PTR struct .
  3005 ;;		 -> main@drink(5), 
  3006 ;; Auto vars:     Size  Location     Type
  3007 ;;  p               1   36[BANK1 ] PTR struct .
  3008 ;;		 -> main@drink(5), 
  3009 ;;  valstr         16   20[BANK1 ] unsigned char [16]
  3010 ;; Return value:  Size  Location     Type
  3011 ;;                  1    wreg      void 
  3012 ;; Registers used:
  3013 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  3014 ;; Tracked objects:
  3015 ;;		On entry : 0/0
  3016 ;;		On exit  : 0/0
  3017 ;;		Unchanged: 0/0
  3018 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  3019 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3020 ;;      Locals:         0       0      17       0       0       0       0       0       0       0       0       0       
      +0       0
  3021 ;;      Temps:          0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0
  3022 ;;      Totals:         0       0      18       0       0       0       0       0       0       0       0       0       
      +0       0
  3023 ;;Total ram usage:       18 bytes
  3024 ;; Hardware stack levels used: 1
  3025 ;; Hardware stack levels required when called: 8
  3026 ;; This function calls:
  3027 ;;		_get_scale_val
  3028 ;;		_lcd_backlight
  3029 ;;		_lcd_clear
  3030 ;;		_lcd_init
  3031 ;;		_lcd_print
  3032 ;;		_lcd_print_with
  3033 ;;		_sprintf
  3034 ;; This function is called by:
  3035 ;;		_main
  3036 ;; This function uses a non-reentrant model
  3037 ;;
  3038                           
  3039                           
  3040                           ;psect for function _initialize
  3041  080C                     _initialize:
  3042                           
  3043                           ;incstack = 0
  3044                           ; Regs used in _initialize: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  3045                           ;initialize@p stored from wreg
  3046  080C  0021               	movlb	1	; select bank1
  3047  080D  00C4               	movwf	initialize@p^(0+128)
  3048  080E                     l3541:
  3049                           
  3050                           ;drink_meter.c: 6:     lcd_init(p->lcd);
  3051  080E  0A44               	incf	initialize@p^(0+128),w
  3052  080F  0086               	movwf	6
  3053  0810  0187               	clrf	7
  3054  0811  0801               	movf	1,w
  3055  0812  318A  22EE  3188   	fcall	_lcd_init
  3056                           
  3057                           ;drink_meter.c: 7:     lcd_backlight(p->lcd);
  3058  0815  0021               	movlb	1	; select bank1
  3059  0816  0A44               	incf	initialize@p^(0+128),w
  3060  0817  0086               	movwf	6
  3061  0818  0187               	clrf	7
  3062  0819  0801               	movf	1,w
  3063  081A  3192  22EA  3188   	fcall	_lcd_backlight
  3064  081D                     l3543:
  3065                           
  3066                           ;drink_meter.c: 9:     lcd_print_with(p->lcd, "Initialize", 0, 0);
  3067  081D  300F               	movlw	low (STR_2| (0+32768))
  3068  081E  0020               	movlb	0	; select bank0
  3069  081F  00A6               	movwf	lcd_print_with@str
  3070  0820  3098               	movlw	high (STR_2| (0+32768))
  3071  0821  00A7               	movwf	lcd_print_with@str+1
  3072  0822  01A8               	clrf	lcd_print_with@col
  3073  0823  01A9               	clrf	lcd_print_with@row
  3074  0824  0021               	movlb	1	; select bank1
  3075  0825  0A44               	incf	initialize@p^(0+128),w
  3076  0826  0086               	movwf	6
  3077  0827  0187               	clrf	7
  3078  0828  0801               	movf	1,w
  3079  0829  3193  2317  3188   	fcall	_lcd_print_with
  3080  082C                     l3545:
  3081                           
  3082                           ;drink_meter.c: 10:     lcd_print_with(p->lcd, "Load cell Unit", 0, 1);
  3083  082C  3000               	movlw	low (STR_3| (0+32768))
  3084  082D  0020               	movlb	0	; select bank0
  3085  082E  00A6               	movwf	lcd_print_with@str
  3086  082F  3098               	movlw	high (STR_3| (0+32768))
  3087  0830  00A7               	movwf	lcd_print_with@str+1
  3088  0831  01A8               	clrf	lcd_print_with@col
  3089  0832  01A9               	clrf	lcd_print_with@row
  3090  0833  0AA9               	incf	lcd_print_with@row,f
  3091  0834  0021               	movlb	1	; select bank1
  3092  0835  0A44               	incf	initialize@p^(0+128),w
  3093  0836  0086               	movwf	6
  3094  0837  0187               	clrf	7
  3095  0838  0801               	movf	1,w
  3096  0839  3193  2317  3188   	fcall	_lcd_print_with
  3097                           
  3098                           ;drink_meter.c: 13:     p->loadcell->weight_zero = get_scale_val(p->loadcell, 50);
  3099  083C  3032               	movlw	50
  3100  083D  0021               	movlb	1	; select bank1
  3101  083E  00B3               	movwf	??_initialize^(0+128)
  3102  083F  0833               	movf	??_initialize^(0+128),w
  3103  0840  0020               	movlb	0	; select bank0
  3104  0841  00A0               	movwf	get_scale_val@scale_avg_count
  3105  0842  0021               	movlb	1	; select bank1
  3106  0843  0844               	movf	initialize@p^(0+128),w
  3107  0844  0086               	movwf	6
  3108  0845  0187               	clrf	7
  3109  0846  0801               	movf	1,w
  3110  0847  318C  2443  3188   	fcall	_get_scale_val
  3111  084A  0021               	movlb	1	; select bank1
  3112  084B  0844               	movf	initialize@p^(0+128),w
  3113  084C  0086               	movwf	6
  3114  084D  0187               	clrf	7
  3115  084E  0801               	movf	1,w
  3116  084F  3E02               	addlw	2
  3117  0850  0086               	movwf	6
  3118  0851  0187               	clrf	7
  3119  0852  0020               	movlb	0	; select bank0
  3120  0853  0820               	movf	?_get_scale_val,w
  3121  0854  3FC0               	movwi [0]fsr1
  3122  0855  0821               	movf	?_get_scale_val+1,w
  3123  0856  3FC1               	movwi [1]fsr1
  3124  0857  0822               	movf	?_get_scale_val+2,w
  3125  0858  3FC2               	movwi [2]fsr1
  3126  0859  0823               	movf	?_get_scale_val+3,w
  3127  085A  3FC3               	movwi [3]fsr1
  3128  085B                     l3547:
  3129                           
  3130                           ;drink_meter.c: 15:     char valstr[16];;drink_meter.c: 16:     sprintf(valstr, "%lu val
      +                          ", p->loadcell->weight_dat);
  3131  085B  3024               	movlw	low (STR_4| (0+32768))
  3132  085C  0021               	movlb	1	; select bank1
  3133  085D  00A5               	movwf	sprintf@fmt^(0+128)
  3134  085E  3098               	movlw	high (STR_4| (0+32768))
  3135  085F  00A6               	movwf	(sprintf@fmt^(0+128)+1)
  3136  0860  0844               	movf	initialize@p^(0+128),w
  3137  0861  0086               	movwf	6
  3138  0862  0187               	clrf	7
  3139  0863  0801               	movf	1,w
  3140  0864  3E06               	addlw	6
  3141  0865  0086               	movwf	6
  3142  0866  0187               	clrf	7
  3143  0867  3F40               	moviw [0]fsr1
  3144  0868  00A7               	movwf	(?_sprintf^(0+128)+2)
  3145  0869  3F41               	moviw [1]fsr1
  3146  086A  00A8               	movwf	((?_sprintf+1)^(0+128)+2)
  3147  086B  3F42               	moviw [2]fsr1
  3148  086C  00A9               	movwf	((?_sprintf+2)^(0+128)+2)
  3149  086D  3F43               	moviw [3]fsr1
  3150  086E  00AA               	movwf	((?_sprintf+3)^(0+128)+2)
  3151  086F  30B4               	movlw	(low (initialize@valstr| 0))& (0+255)
  3152  0870  3193  23FE  3188   	fcall	_sprintf
  3153  0873                     l3549:
  3154                           
  3155                           ;drink_meter.c: 18:     lcd_clear(p->lcd);
  3156  0873  0021               	movlb	1	; select bank1
  3157  0874  0A44               	incf	initialize@p^(0+128),w
  3158  0875  0086               	movwf	6
  3159  0876  0187               	clrf	7
  3160  0877  0801               	movf	1,w
  3161  0878  3194  24C1  3188   	fcall	_lcd_clear
  3162  087B                     l3551:
  3163                           
  3164                           ;drink_meter.c: 19:     lcd_print(p->lcd, valstr);
  3165  087B  30B4               	movlw	low initialize@valstr
  3166  087C  00FA               	movwf	lcd_print@str
  3167  087D  3000               	movlw	high initialize@valstr
  3168  087E  00FB               	movwf	lcd_print@str+1
  3169  087F  0021               	movlb	1	; select bank1
  3170  0880  0A44               	incf	initialize@p^(0+128),w
  3171  0881  0086               	movwf	6
  3172  0882  0187               	clrf	7
  3173  0883  0801               	movf	1,w
  3174  0884  3193  23DA  3188   	fcall	_lcd_print
  3175  0887                     l342:
  3176  0887  0008               	return
  3177  0888                     __end_of_initialize:
  3178                           
  3179                           	psect	text3
  3180  13FE                     __ptext3:	
  3181 ;; *************** function _sprintf *****************
  3182 ;; Defined at:
  3183 ;;		line 9 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\nf_sprintf.c"
  3184 ;; Parameters:    Size  Location     Type
  3185 ;;  s               1    wreg     PTR unsigned char 
  3186 ;;		 -> print_gram@row2(16), print_gram@row1(16), initialize@valstr(16), 
  3187 ;;  fmt             2    5[BANK1 ] PTR const unsigned char 
  3188 ;;		 -> STR_6(6), STR_5(10), STR_4(8), 
  3189 ;; Auto vars:     Size  Location     Type
  3190 ;;  s               1   12[BANK1 ] PTR unsigned char 
  3191 ;;		 -> print_gram@row2(16), print_gram@row1(16), initialize@valstr(16), 
  3192 ;;  f               5   14[BANK1 ] struct _IO_FILE
  3193 ;;  ret             2    0        int 
  3194 ;;  ap              1   13[BANK1 ] PTR void [1]
  3195 ;;		 -> ?_sprintf(2), 
  3196 ;; Return value:  Size  Location     Type
  3197 ;;                  2    5[BANK1 ] int 
  3198 ;; Registers used:
  3199 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  3200 ;; Tracked objects:
  3201 ;;		On entry : 0/0
  3202 ;;		On exit  : 0/0
  3203 ;;		Unchanged: 0/0
  3204 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  3205 ;;      Params:         0       0       6       0       0       0       0       0       0       0       0       0       
      +0       0
  3206 ;;      Locals:         0       0       7       0       0       0       0       0       0       0       0       0       
      +0       0
  3207 ;;      Temps:          0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0
  3208 ;;      Totals:         0       0      14       0       0       0       0       0       0       0       0       0       
      +0       0
  3209 ;;Total ram usage:       14 bytes
  3210 ;; Hardware stack levels used: 1
  3211 ;; Hardware stack levels required when called: 7
  3212 ;; This function calls:
  3213 ;;		_vfprintf
  3214 ;; This function is called by:
  3215 ;;		_initialize
  3216 ;;		_print_gram
  3217 ;; This function uses a non-reentrant model
  3218 ;;
  3219                           
  3220                           
  3221                           ;psect for function _sprintf
  3222  13FE                     _sprintf:
  3223                           
  3224                           ;incstack = 0
  3225                           ; Regs used in _sprintf: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  3226                           ;sprintf@s stored from wreg
  3227  13FE  0021               	movlb	1	; select bank1
  3228  13FF  00AC               	movwf	sprintf@s^(0+128)
  3229  1400                     l3387:
  3230  1400  30A7               	movlw	(low ((?_sprintf| 0+2)))& (0+255)
  3231  1401  00AB               	movwf	??_sprintf^(0+128)
  3232  1402  082B               	movf	??_sprintf^(0+128),w
  3233  1403  00AD               	movwf	sprintf@ap^(0+128)
  3234  1404  082C               	movf	sprintf@s^(0+128),w
  3235  1405  00AB               	movwf	??_sprintf^(0+128)
  3236  1406  082B               	movf	??_sprintf^(0+128),w
  3237  1407  00AE               	movwf	sprintf@f^(0+128)
  3238  1408                     l3389:
  3239  1408  01AF               	clrf	(sprintf@f^(0+128)+1)
  3240  1409  01B0               	clrf	((sprintf@f+1)^(0+128)+1)
  3241  140A                     l3391:
  3242  140A  01B1               	clrf	(sprintf@f^(0+128)+3)
  3243  140B  01B2               	clrf	((sprintf@f+1)^(0+128)+3)
  3244  140C                     l3393:
  3245  140C  0826               	movf	(sprintf@fmt+1)^(0+128),w
  3246  140D  0020               	movlb	0	; select bank0
  3247  140E  00EE               	movwf	vfprintf@fmt+1
  3248  140F  0021               	movlb	1	; select bank1
  3249  1410  0825               	movf	sprintf@fmt^(0+128),w
  3250  1411  0020               	movlb	0	; select bank0
  3251  1412  00ED               	movwf	vfprintf@fmt
  3252  1413  30AD               	movlw	(low (sprintf@ap| 0))& (0+255)
  3253  1414  0021               	movlb	1	; select bank1
  3254  1415  00AB               	movwf	??_sprintf^(0+128)
  3255  1416  082B               	movf	??_sprintf^(0+128),w
  3256  1417  0020               	movlb	0	; select bank0
  3257  1418  00EF               	movwf	vfprintf@ap
  3258  1419  30AE               	movlw	(low (sprintf@f| 0))& (0+255)
  3259  141A  3194  2488  3193   	fcall	_vfprintf
  3260  141D                     l3395:
  3261  141D  0021               	movlb	1	; select bank1
  3262  141E  082F               	movf	(sprintf@f^(0+128)+1),w
  3263  141F  072C               	addwf	sprintf@s^(0+128),w
  3264  1420  00AB               	movwf	??_sprintf^(0+128)
  3265  1421  082B               	movf	??_sprintf^(0+128),w
  3266  1422  0086               	movwf	6
  3267  1423  0187               	clrf	7
  3268  1424  0181               	clrf	1
  3269  1425                     l966:
  3270  1425  0008               	return
  3271  1426                     __end_of_sprintf:
  3272                           
  3273                           	psect	text4
  3274  1488                     __ptext4:	
  3275 ;; *************** function _vfprintf *****************
  3276 ;; Defined at:
  3277 ;;		line 1390 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c"
  3278 ;; Parameters:    Size  Location     Type
  3279 ;;  fp              1    wreg     PTR struct _IO_FILE
  3280 ;;		 -> sprintf@f(5), 
  3281 ;;  fmt             2   77[BANK0 ] PTR const unsigned char 
  3282 ;;		 -> STR_6(6), STR_5(10), STR_4(8), 
  3283 ;;  ap              1   79[BANK0 ] PTR PTR void 
  3284 ;;		 -> sprintf@ap(1), 
  3285 ;; Auto vars:     Size  Location     Type
  3286 ;;  fp              1    2[BANK1 ] PTR struct _IO_FILE
  3287 ;;		 -> sprintf@f(5), 
  3288 ;;  cfmt            2    3[BANK1 ] PTR unsigned char 
  3289 ;;		 -> STR_6(6), STR_5(10), STR_4(8), 
  3290 ;; Return value:  Size  Location     Type
  3291 ;;                  2   77[BANK0 ] int 
  3292 ;; Registers used:
  3293 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  3294 ;; Tracked objects:
  3295 ;;		On entry : 0/0
  3296 ;;		On exit  : 0/0
  3297 ;;		Unchanged: 0/0
  3298 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  3299 ;;      Params:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3300 ;;      Locals:         0       0       3       0       0       0       0       0       0       0       0       0       
      +0       0
  3301 ;;      Temps:          0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0
  3302 ;;      Totals:         0       3       5       0       0       0       0       0       0       0       0       0       
      +0       0
  3303 ;;Total ram usage:        8 bytes
  3304 ;; Hardware stack levels used: 1
  3305 ;; Hardware stack levels required when called: 6
  3306 ;; This function calls:
  3307 ;;		_vfpfcnvrt
  3308 ;; This function is called by:
  3309 ;;		_sprintf
  3310 ;; This function uses a non-reentrant model
  3311 ;;
  3312                           
  3313                           
  3314                           ;psect for function _vfprintf
  3315  1488                     _vfprintf:
  3316                           
  3317                           ;incstack = 0
  3318                           ; Regs used in _vfprintf: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  3319                           ;vfprintf@fp stored from wreg
  3320  1488  0021               	movlb	1	; select bank1
  3321  1489  00A2               	movwf	vfprintf@fp^(0+128)
  3322  148A                     l3159:
  3323                           
  3324                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 1390: int vfprint
      +                          f(FILE *fp, const char *fmt, va_list ap);C:\Program Files\Microchip\xc8\v2.32\pic\source
      +                          s\c99\common\doprnt.c: 1391: {;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\comm
      +                          on\doprnt.c: 1393:     char *cfmt;;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\
      +                          common\doprnt.c: 1395:     cfmt = (char *)fmt;
  3325  148A  0020               	movlb	0	; select bank0
  3326  148B  086E               	movf	vfprintf@fmt+1,w
  3327  148C  0021               	movlb	1	; select bank1
  3328  148D  00A4               	movwf	(vfprintf@cfmt+1)^(0+128)
  3329  148E  0020               	movlb	0	; select bank0
  3330  148F  086D               	movf	vfprintf@fmt,w
  3331  1490  0021               	movlb	1	; select bank1
  3332  1491  00A3               	movwf	vfprintf@cfmt^(0+128)
  3333  1492                     l3161:
  3334                           
  3335                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 1396:     nout = 
      +                          0;
  3336  1492  0022               	movlb	2	; select bank2
  3337  1493  01A9               	clrf	_nout^(0+256)
  3338  1494  01AA               	clrf	(_nout+1)^(0+256)
  3339                           
  3340                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 1397:     while (
      +                          *cfmt) {
  3341  1495  2CAE               	goto	l3165
  3342  1496                     l3163:
  3343                           
  3344                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 1398:         nou
      +                          t += vfpfcnvrt(fp, &cfmt, ap);
  3345  1496  30A3               	movlw	(low (vfprintf@cfmt| 0))& (0+255)
  3346  1497  00A0               	movwf	??_vfprintf^(0+128)
  3347  1498  0820               	movf	??_vfprintf^(0+128),w
  3348  1499  0020               	movlb	0	; select bank0
  3349  149A  00CE               	movwf	vfpfcnvrt@fmt
  3350  149B  086F               	movf	vfprintf@ap,w
  3351  149C  0021               	movlb	1	; select bank1
  3352  149D  00A1               	movwf	(??_vfprintf+1)^(0+128)
  3353  149E  0821               	movf	(??_vfprintf+1)^(0+128),w
  3354  149F  0020               	movlb	0	; select bank0
  3355  14A0  00CF               	movwf	vfpfcnvrt@ap
  3356  14A1  0021               	movlb	1	; select bank1
  3357  14A2  0822               	movf	vfprintf@fp^(0+128),w
  3358  14A3  3183  2390  3194   	fcall	_vfpfcnvrt
  3359  14A6  0020               	movlb	0	; select bank0
  3360  14A7  084E               	movf	?_vfpfcnvrt,w
  3361  14A8  0022               	movlb	2	; select bank2
  3362  14A9  07A9               	addwf	_nout^(0+256),f
  3363  14AA  0020               	movlb	0	; select bank0
  3364  14AB  084F               	movf	?_vfpfcnvrt+1,w
  3365  14AC  0022               	movlb	2	; select bank2
  3366  14AD  3DAA               	addwfc	(_nout+1)^(0+256),f
  3367  14AE                     l3165:
  3368                           
  3369                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 1397:     while (
      +                          *cfmt) {
  3370  14AE  0021               	movlb	1	; select bank1
  3371  14AF  0823               	movf	vfprintf@cfmt^(0+128),w
  3372  14B0  0084               	movwf	4
  3373  14B1  0824               	movf	(vfprintf@cfmt+1)^(0+128),w
  3374  14B2  0085               	movwf	5
  3375  14B3  0012               	moviw fsr0++
  3376  14B4  1D03               	btfss	3,2
  3377  14B5  2CB7               	goto	u3611
  3378  14B6  2CB8               	goto	u3610
  3379  14B7                     u3611:
  3380  14B7  2C96               	goto	l3163
  3381  14B8                     u3610:
  3382  14B8                     l3167:
  3383                           
  3384                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 1400:     return 
      +                          nout;
  3385  14B8  0022               	movlb	2	; select bank2
  3386  14B9  082A               	movf	(_nout+1)^(0+256),w
  3387  14BA  0020               	movlb	0	; select bank0
  3388  14BB  00EE               	movwf	?_vfprintf+1
  3389  14BC  0022               	movlb	2	; select bank2
  3390  14BD  0829               	movf	_nout^(0+256),w
  3391  14BE  0020               	movlb	0	; select bank0
  3392  14BF  00ED               	movwf	?_vfprintf
  3393  14C0                     l1060:
  3394  14C0  0008               	return
  3395  14C1                     __end_of_vfprintf:
  3396                           
  3397                           	psect	text5
  3398  0390                     __ptext5:	
  3399 ;; *************** function _vfpfcnvrt *****************
  3400 ;; Defined at:
  3401 ;;		line 692 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c"
  3402 ;; Parameters:    Size  Location     Type
  3403 ;;  fp              1    wreg     PTR struct _IO_FILE
  3404 ;;		 -> sprintf@f(5), 
  3405 ;;  fmt             1   46[BANK0 ] PTR PTR unsigned char 
  3406 ;;		 -> vfprintf@cfmt(2), 
  3407 ;;  ap              1   47[BANK0 ] PTR PTR void 
  3408 ;;		 -> sprintf@ap(1), 
  3409 ;; Auto vars:     Size  Location     Type
  3410 ;;  fp              1   76[BANK0 ] PTR struct _IO_FILE
  3411 ;;		 -> sprintf@f(5), 
  3412 ;;  llu             8   68[BANK0 ] unsigned long long 
  3413 ;;  ll              8   60[BANK0 ] long long 
  3414 ;;  f               4    0        long long 
  3415 ;;  ct              3    0        unsigned char [3]
  3416 ;;  vp              2    0        PTR void 
  3417 ;;  i               2    0        int 
  3418 ;;  done            2    0        int 
  3419 ;;  cp              2    0        PTR unsigned char 
  3420 ;;  c               1    0        unsigned char 
  3421 ;; Return value:  Size  Location     Type
  3422 ;;                  2   46[BANK0 ] int 
  3423 ;; Registers used:
  3424 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  3425 ;; Tracked objects:
  3426 ;;		On entry : 0/0
  3427 ;;		On exit  : 0/0
  3428 ;;		Unchanged: 0/0
  3429 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  3430 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3431 ;;      Locals:         0      17       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3432 ;;      Temps:          0      12       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3433 ;;      Totals:         0      31       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3434 ;;Total ram usage:       31 bytes
  3435 ;; Hardware stack levels used: 1
  3436 ;; Hardware stack levels required when called: 5
  3437 ;; This function calls:
  3438 ;;		_dtoa
  3439 ;;		_fputc
  3440 ;;		_strncmp
  3441 ;;		_utoa
  3442 ;; This function is called by:
  3443 ;;		_vfprintf
  3444 ;; This function uses a non-reentrant model
  3445 ;;
  3446                           
  3447                           
  3448                           ;psect for function _vfpfcnvrt
  3449  0390                     _vfpfcnvrt:
  3450                           
  3451                           ;incstack = 0
  3452                           ; Regs used in _vfpfcnvrt: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  3453                           ;vfpfcnvrt@fp stored from wreg
  3454  0390  0020               	movlb	0	; select bank0
  3455  0391  00EC               	movwf	vfpfcnvrt@fp
  3456  0392                     l2701:
  3457                           
  3458                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 692: static int v
      +                          fpfcnvrt(FILE *fp, char *fmt[], va_list ap);C:\Program Files\Microchip\xc8\v2.32\pic\sou
      +                          rces\c99\common\doprnt.c: 693: {;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\co
      +                          mmon\doprnt.c: 694:     char c, *cp, ct[3];;C:\Program Files\Microchip\xc8\v2.32\pic\sou
      +                          rces\c99\common\doprnt.c: 695:     int done, i;;C:\Program Files\Microchip\xc8\v2.32\pic
      +                          \sources\c99\common\doprnt.c: 696:     long long ll;;C:\Program Files\Microchip\xc8\v2.3
      +                          2\pic\sources\c99\common\doprnt.c: 697:     unsigned long long llu;
  3459  0392  084E               	movf	vfpfcnvrt@fmt,w
  3460  0393  0086               	movwf	6
  3461  0394  0187               	clrf	7
  3462  0395  3F40               	moviw [0]fsr1
  3463  0396  00D0               	movwf	??_vfpfcnvrt
  3464  0397  3F41               	moviw [1]fsr1
  3465  0398  00D1               	movwf	??_vfpfcnvrt+1
  3466  0399  0850               	movf	??_vfpfcnvrt,w
  3467  039A  0084               	movwf	4
  3468  039B  0851               	movf	??_vfpfcnvrt+1,w
  3469  039C  0085               	movwf	5
  3470  039D  0012               	moviw fsr0++
  3471  039E  3A25               	xorlw	37
  3472  039F  1D03               	btfss	3,2
  3473  03A0  2BA2               	goto	u2801
  3474  03A1  2BA3               	goto	u2800
  3475  03A2                     u2801:
  3476  03A2  2D6A               	goto	l2769
  3477  03A3                     u2800:
  3478  03A3                     l2703:
  3479                           
  3480                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 703:         ++*f
      +                          mt;
  3481  03A3  084E               	movf	vfpfcnvrt@fmt,w
  3482  03A4  0086               	movwf	6
  3483  03A5  0187               	clrf	7
  3484  03A6  3001               	movlw	1
  3485  03A7  0781               	addwf	1,f
  3486  03A8  3141               	addfsr 1,1
  3487  03A9  1803               	skipnc
  3488  03AA  0A81               	incf	1,f
  3489  03AB                     l2705:
  3490                           
  3491                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 705:         flag
      +                          s = width = 0;
  3492  03AB  0022               	movlb	2	; select bank2
  3493  03AC  01AB               	clrf	_width^(0+256)
  3494  03AD  01AC               	clrf	(_width+1)^(0+256)
  3495  03AE  0021               	movlb	1	; select bank1
  3496  03AF  01ED               	clrf	_flags^(0+128)
  3497  03B0  01EE               	clrf	(_flags+1)^(0+128)
  3498  03B1                     l2707:
  3499                           
  3500                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 706:         prec
      +                           = -1;
  3501  03B1  30FF               	movlw	255
  3502  03B2  0022               	movlb	2	; select bank2
  3503  03B3  00AD               	movwf	_prec^(0+256)
  3504  03B4  30FF               	movlw	255
  3505  03B5  00AE               	movwf	(_prec^(0+256)+1)
  3506  03B6                     l2709:
  3507                           
  3508                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 847:         if (
      +                          (*fmt[0] == 'd') || (*fmt[0] == 'i')) {
  3509  03B6  0020               	movlb	0	; select bank0
  3510  03B7  084E               	movf	vfpfcnvrt@fmt,w
  3511  03B8  0086               	movwf	6
  3512  03B9  0187               	clrf	7
  3513  03BA  3F40               	moviw [0]fsr1
  3514  03BB  00D0               	movwf	??_vfpfcnvrt
  3515  03BC  3F41               	moviw [1]fsr1
  3516  03BD  00D1               	movwf	??_vfpfcnvrt+1
  3517  03BE  0850               	movf	??_vfpfcnvrt,w
  3518  03BF  0084               	movwf	4
  3519  03C0  0851               	movf	??_vfpfcnvrt+1,w
  3520  03C1  0085               	movwf	5
  3521  03C2  0012               	moviw fsr0++
  3522  03C3  3A64               	xorlw	100
  3523  03C4  1903               	btfsc	3,2
  3524  03C5  2BC7               	goto	u2811
  3525  03C6  2BC8               	goto	u2810
  3526  03C7                     u2811:
  3527  03C7  2BD9               	goto	l2713
  3528  03C8                     u2810:
  3529  03C8                     l2711:
  3530  03C8  084E               	movf	vfpfcnvrt@fmt,w
  3531  03C9  0086               	movwf	6
  3532  03CA  0187               	clrf	7
  3533  03CB  3F40               	moviw [0]fsr1
  3534  03CC  00D0               	movwf	??_vfpfcnvrt
  3535  03CD  3F41               	moviw [1]fsr1
  3536  03CE  00D1               	movwf	??_vfpfcnvrt+1
  3537  03CF  0850               	movf	??_vfpfcnvrt,w
  3538  03D0  0084               	movwf	4
  3539  03D1  0851               	movf	??_vfpfcnvrt+1,w
  3540  03D2  0085               	movwf	5
  3541  03D3  0012               	moviw fsr0++
  3542  03D4  3A69               	xorlw	105
  3543  03D5  1D03               	btfss	3,2
  3544  03D6  2BD8               	goto	u2821
  3545  03D7  2BD9               	goto	u2820
  3546  03D8                     u2821:
  3547  03D8  2C14               	goto	l2721
  3548  03D9                     u2820:
  3549  03D9                     l2713:
  3550                           
  3551                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 849:             
      +                          ++*fmt;
  3552  03D9  084E               	movf	vfpfcnvrt@fmt,w
  3553  03DA  0086               	movwf	6
  3554  03DB  0187               	clrf	7
  3555  03DC  3001               	movlw	1
  3556  03DD  0781               	addwf	1,f
  3557  03DE  3141               	addfsr 1,1
  3558  03DF  1803               	skipnc
  3559  03E0  0A81               	incf	1,f
  3560  03E1                     l2715:
  3561                           
  3562                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 850:             
      +                          ll = (long long)(*(int *)__va_arg(*(int **)ap, (int)0));
  3563  03E1  084F               	movf	vfpfcnvrt@ap,w
  3564  03E2  0086               	movwf	6
  3565  03E3  0187               	clrf	7
  3566  03E4  0801               	movf	1,w
  3567  03E5  0084               	movwf	4
  3568  03E6  0185               	clrf	5
  3569  03E7  3002               	movlw	2
  3570  03E8  0781               	addwf	1,f
  3571  03E9  3F00               	moviw [0]fsr0
  3572  03EA  00D0               	movwf	??_vfpfcnvrt
  3573  03EB  3F01               	moviw [1]fsr0
  3574  03EC  00D1               	movwf	??_vfpfcnvrt+1
  3575  03ED  0850               	movf	??_vfpfcnvrt,w
  3576  03EE  00DC               	movwf	vfpfcnvrt@ll
  3577  03EF  0851               	movf	??_vfpfcnvrt+1,w
  3578  03F0  00DD               	movwf	vfpfcnvrt@ll+1
  3579  03F1  0D89               	rlf	9,f
  3580  03F2  3B89               	subwfb	9,f
  3581  03F3  0989               	comf	9,f
  3582  03F4  00DE               	movwf	vfpfcnvrt@ll+2
  3583  03F5  00DF               	movwf	vfpfcnvrt@ll+3
  3584  03F6  00E0               	movwf	vfpfcnvrt@ll+4
  3585  03F7  00E1               	movwf	vfpfcnvrt@ll+5
  3586  03F8  00E2               	movwf	vfpfcnvrt@ll+6
  3587  03F9  00E3               	movwf	vfpfcnvrt@ll+7
  3588  03FA                     l2717:
  3589                           
  3590                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 852:             
      +                          return dtoa(fp, ll);
  3591  03FA  085C               	movf	vfpfcnvrt@ll,w
  3592  03FB  00B0               	movwf	dtoa@d
  3593  03FC  085D               	movf	vfpfcnvrt@ll+1,w
  3594  03FD  00B1               	movwf	dtoa@d+1
  3595  03FE  085E               	movf	vfpfcnvrt@ll+2,w
  3596  03FF  00B2               	movwf	dtoa@d+2
  3597  0400  085F               	movf	vfpfcnvrt@ll+3,w
  3598  0401  00B3               	movwf	dtoa@d+3
  3599  0402  0860               	movf	vfpfcnvrt@ll+4,w
  3600  0403  00B4               	movwf	dtoa@d+4
  3601  0404  0861               	movf	vfpfcnvrt@ll+5,w
  3602  0405  00B5               	movwf	dtoa@d+5
  3603  0406  0862               	movf	vfpfcnvrt@ll+6,w
  3604  0407  00B6               	movwf	dtoa@d+6
  3605  0408  0863               	movf	vfpfcnvrt@ll+7,w
  3606  0409  00B7               	movwf	dtoa@d+7
  3607  040A  086C               	movf	vfpfcnvrt@fp,w
  3608  040B  3180  206A  3183   	fcall	_dtoa
  3609  040E  0020               	movlb	0	; select bank0
  3610  040F  0831               	movf	?_dtoa+1,w
  3611  0410  00CF               	movwf	?_vfpfcnvrt+1
  3612  0411  0830               	movf	?_dtoa,w
  3613  0412  00CE               	movwf	?_vfpfcnvrt
  3614  0413  2D8D               	goto	l1048
  3615  0414                     l2721:
  3616                           
  3617                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 857:         if (
      +                          !strncmp(*fmt, "ld", ((sizeof("ld")/sizeof("ld"[0]))-1)) || !strncmp(*fmt, "li", ((sizeo
      +                          f("li")/sizeof("li"[0]))-1))) {
  3618  0414  084E               	movf	vfpfcnvrt@fmt,w
  3619  0415  0086               	movwf	6
  3620  0416  0187               	clrf	7
  3621  0417  3F40               	moviw [0]fsr1
  3622  0418  00F0               	movwf	strncmp@_l
  3623  0419  3F41               	moviw [1]fsr1
  3624  041A  00F1               	movwf	strncmp@_l+1
  3625  041B  3032               	movlw	low (STR_7| (0+32768))
  3626  041C  00F2               	movwf	strncmp@_r
  3627  041D  3098               	movlw	high (STR_7| (0+32768))
  3628  041E  00F3               	movwf	strncmp@_r+1
  3629  041F  3002               	movlw	2
  3630  0420  00F4               	movwf	strncmp@n
  3631  0421  3000               	movlw	0
  3632  0422  00F5               	movwf	strncmp@n+1
  3633  0423  3180  200E  3183   	fcall	_strncmp
  3634  0426  0870               	movf	?_strncmp,w
  3635  0427  0471               	iorwf	?_strncmp+1,w
  3636  0428  1903               	btfsc	3,2
  3637  0429  2C2B               	goto	u2831
  3638  042A  2C2C               	goto	u2830
  3639  042B                     u2831:
  3640  042B  2C45               	goto	l2725
  3641  042C                     u2830:
  3642  042C                     l2723:
  3643  042C  0020               	movlb	0	; select bank0
  3644  042D  084E               	movf	vfpfcnvrt@fmt,w
  3645  042E  0086               	movwf	6
  3646  042F  0187               	clrf	7
  3647  0430  3F40               	moviw [0]fsr1
  3648  0431  00F0               	movwf	strncmp@_l
  3649  0432  3F41               	moviw [1]fsr1
  3650  0433  00F1               	movwf	strncmp@_l+1
  3651  0434  3035               	movlw	low (STR_11| (0+32768))
  3652  0435  00F2               	movwf	strncmp@_r
  3653  0436  3098               	movlw	high (STR_11| (0+32768))
  3654  0437  00F3               	movwf	strncmp@_r+1
  3655  0438  3002               	movlw	2
  3656  0439  00F4               	movwf	strncmp@n
  3657  043A  3000               	movlw	0
  3658  043B  00F5               	movwf	strncmp@n+1
  3659  043C  3180  200E  3183   	fcall	_strncmp
  3660  043F  0870               	movf	?_strncmp,w
  3661  0440  0471               	iorwf	?_strncmp+1,w
  3662  0441  1D03               	btfss	3,2
  3663  0442  2C44               	goto	u2841
  3664  0443  2C45               	goto	u2840
  3665  0444                     u2841:
  3666  0444  2C87               	goto	l2733
  3667  0445                     u2840:
  3668  0445                     l2725:
  3669                           
  3670                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 858: ;C:\Program 
      +                          Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 860:             *fmt += ((si
      +                          zeof("ld")/sizeof("ld"[0]))-1);
  3671  0445  0020               	movlb	0	; select bank0
  3672  0446  084E               	movf	vfpfcnvrt@fmt,w
  3673  0447  0086               	movwf	6
  3674  0448  0187               	clrf	7
  3675  0449  3002               	movlw	2
  3676  044A  0781               	addwf	1,f
  3677  044B  3141               	addfsr 1,1
  3678  044C  1803               	skipnc
  3679  044D  0A81               	incf	1,f
  3680  044E                     l2727:
  3681                           
  3682                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 861:             
      +                          ll = (long long)(*(long *)__va_arg(*(long **)ap, (long)0));
  3683  044E  084F               	movf	vfpfcnvrt@ap,w
  3684  044F  0086               	movwf	6
  3685  0450  0187               	clrf	7
  3686  0451  0801               	movf	1,w
  3687  0452  0084               	movwf	4
  3688  0453  0185               	clrf	5
  3689  0454  3004               	movlw	4
  3690  0455  0781               	addwf	1,f
  3691  0456  3F00               	moviw [0]fsr0
  3692  0457  00D0               	movwf	??_vfpfcnvrt
  3693  0458  3F01               	moviw [1]fsr0
  3694  0459  00D1               	movwf	??_vfpfcnvrt+1
  3695  045A  3F02               	moviw [2]fsr0
  3696  045B  00D2               	movwf	??_vfpfcnvrt+2
  3697  045C  3F03               	moviw [3]fsr0
  3698  045D  00D3               	movwf	??_vfpfcnvrt+3
  3699  045E  0850               	movf	??_vfpfcnvrt,w
  3700  045F  00DC               	movwf	vfpfcnvrt@ll
  3701  0460  0851               	movf	??_vfpfcnvrt+1,w
  3702  0461  00DD               	movwf	vfpfcnvrt@ll+1
  3703  0462  0852               	movf	??_vfpfcnvrt+2,w
  3704  0463  00DE               	movwf	vfpfcnvrt@ll+2
  3705  0464  0853               	movf	??_vfpfcnvrt+3,w
  3706  0465  00DF               	movwf	vfpfcnvrt@ll+3
  3707  0466  3000               	movlw	0
  3708  0467  1BDF               	btfsc	vfpfcnvrt@ll+3,7
  3709  0468  30FF               	movlw	255
  3710  0469  00E0               	movwf	vfpfcnvrt@ll+4
  3711  046A  00E1               	movwf	vfpfcnvrt@ll+5
  3712  046B  00E2               	movwf	vfpfcnvrt@ll+6
  3713  046C  00E3               	movwf	vfpfcnvrt@ll+7
  3714  046D                     l2729:
  3715                           
  3716                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 863:             
      +                          return dtoa(fp, ll);
  3717  046D  085C               	movf	vfpfcnvrt@ll,w
  3718  046E  00B0               	movwf	dtoa@d
  3719  046F  085D               	movf	vfpfcnvrt@ll+1,w
  3720  0470  00B1               	movwf	dtoa@d+1
  3721  0471  085E               	movf	vfpfcnvrt@ll+2,w
  3722  0472  00B2               	movwf	dtoa@d+2
  3723  0473  085F               	movf	vfpfcnvrt@ll+3,w
  3724  0474  00B3               	movwf	dtoa@d+3
  3725  0475  0860               	movf	vfpfcnvrt@ll+4,w
  3726  0476  00B4               	movwf	dtoa@d+4
  3727  0477  0861               	movf	vfpfcnvrt@ll+5,w
  3728  0478  00B5               	movwf	dtoa@d+5
  3729  0479  0862               	movf	vfpfcnvrt@ll+6,w
  3730  047A  00B6               	movwf	dtoa@d+6
  3731  047B  0863               	movf	vfpfcnvrt@ll+7,w
  3732  047C  00B7               	movwf	dtoa@d+7
  3733  047D  086C               	movf	vfpfcnvrt@fp,w
  3734  047E  3180  206A  3183   	fcall	_dtoa
  3735  0481  0020               	movlb	0	; select bank0
  3736  0482  0831               	movf	?_dtoa+1,w
  3737  0483  00CF               	movwf	?_vfpfcnvrt+1
  3738  0484  0830               	movf	?_dtoa,w
  3739  0485  00CE               	movwf	?_vfpfcnvrt
  3740  0486  2D8D               	goto	l1048
  3741  0487                     l2733:
  3742                           
  3743                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 1204:         if 
      +                          (*fmt[0] == 'u') {
  3744  0487  0020               	movlb	0	; select bank0
  3745  0488  084E               	movf	vfpfcnvrt@fmt,w
  3746  0489  0086               	movwf	6
  3747  048A  0187               	clrf	7
  3748  048B  3F40               	moviw [0]fsr1
  3749  048C  00D0               	movwf	??_vfpfcnvrt
  3750  048D  3F41               	moviw [1]fsr1
  3751  048E  00D1               	movwf	??_vfpfcnvrt+1
  3752  048F  0850               	movf	??_vfpfcnvrt,w
  3753  0490  0084               	movwf	4
  3754  0491  0851               	movf	??_vfpfcnvrt+1,w
  3755  0492  0085               	movwf	5
  3756  0493  0012               	moviw fsr0++
  3757  0494  3A75               	xorlw	117
  3758  0495  1D03               	btfss	3,2
  3759  0496  2C98               	goto	u2851
  3760  0497  2C99               	goto	u2850
  3761  0498                     u2851:
  3762  0498  2CCD               	goto	l2743
  3763  0499                     u2850:
  3764  0499                     l2735:
  3765                           
  3766                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 1206:            
      +                           ++*fmt;
  3767  0499  084E               	movf	vfpfcnvrt@fmt,w
  3768  049A  0086               	movwf	6
  3769  049B  0187               	clrf	7
  3770  049C  3001               	movlw	1
  3771  049D  0781               	addwf	1,f
  3772  049E  3141               	addfsr 1,1
  3773  049F  1803               	skipnc
  3774  04A0  0A81               	incf	1,f
  3775  04A1                     l2737:
  3776                           
  3777                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 1207:            
      +                           llu = (unsigned long long)(*(unsigned int *)__va_arg(*(unsigned int **)ap, (unsigned in
      +                          t)0));
  3778  04A1  084F               	movf	vfpfcnvrt@ap,w
  3779  04A2  0086               	movwf	6
  3780  04A3  0187               	clrf	7
  3781  04A4  0801               	movf	1,w
  3782  04A5  0084               	movwf	4
  3783  04A6  0185               	clrf	5
  3784  04A7  3002               	movlw	2
  3785  04A8  0781               	addwf	1,f
  3786  04A9  3F00               	moviw [0]fsr0
  3787  04AA  00E4               	movwf	vfpfcnvrt@llu
  3788  04AB  3F01               	moviw [1]fsr0
  3789  04AC  00E5               	movwf	vfpfcnvrt@llu+1
  3790  04AD  01E6               	clrf	vfpfcnvrt@llu+2
  3791  04AE  01E7               	clrf	vfpfcnvrt@llu+3
  3792  04AF  01E8               	clrf	vfpfcnvrt@llu+4
  3793  04B0  01E9               	clrf	vfpfcnvrt@llu+5
  3794  04B1  01EA               	clrf	vfpfcnvrt@llu+6
  3795  04B2  01EB               	clrf	vfpfcnvrt@llu+7
  3796  04B3                     l2739:
  3797                           
  3798                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 1209:            
      +                           return utoa(fp, llu);
  3799  04B3  0864               	movf	vfpfcnvrt@llu,w
  3800  04B4  00B0               	movwf	utoa@d
  3801  04B5  0865               	movf	vfpfcnvrt@llu+1,w
  3802  04B6  00B1               	movwf	utoa@d+1
  3803  04B7  0866               	movf	vfpfcnvrt@llu+2,w
  3804  04B8  00B2               	movwf	utoa@d+2
  3805  04B9  0867               	movf	vfpfcnvrt@llu+3,w
  3806  04BA  00B3               	movwf	utoa@d+3
  3807  04BB  0868               	movf	vfpfcnvrt@llu+4,w
  3808  04BC  00B4               	movwf	utoa@d+4
  3809  04BD  0869               	movf	vfpfcnvrt@llu+5,w
  3810  04BE  00B5               	movwf	utoa@d+5
  3811  04BF  086A               	movf	vfpfcnvrt@llu+6,w
  3812  04C0  00B6               	movwf	utoa@d+6
  3813  04C1  086B               	movf	vfpfcnvrt@llu+7,w
  3814  04C2  00B7               	movwf	utoa@d+7
  3815  04C3  086C               	movf	vfpfcnvrt@fp,w
  3816  04C4  318E  2610  3183   	fcall	_utoa
  3817  04C7  0020               	movlb	0	; select bank0
  3818  04C8  0831               	movf	?_utoa+1,w
  3819  04C9  00CF               	movwf	?_vfpfcnvrt+1
  3820  04CA  0830               	movf	?_utoa,w
  3821  04CB  00CE               	movwf	?_vfpfcnvrt
  3822  04CC  2D8D               	goto	l1048
  3823  04CD                     l2743:
  3824                           
  3825                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 1214:         if 
      +                          (!strncmp(*fmt, "lu", ((sizeof("lu")/sizeof("lu"[0]))-1))) {
  3826  04CD  084E               	movf	vfpfcnvrt@fmt,w
  3827  04CE  0086               	movwf	6
  3828  04CF  0187               	clrf	7
  3829  04D0  3F40               	moviw [0]fsr1
  3830  04D1  00F0               	movwf	strncmp@_l
  3831  04D2  3F41               	moviw [1]fsr1
  3832  04D3  00F1               	movwf	strncmp@_l+1
  3833  04D4  3038               	movlw	low (STR_16| (0+32768))
  3834  04D5  00F2               	movwf	strncmp@_r
  3835  04D6  3098               	movlw	high (STR_16| (0+32768))
  3836  04D7  00F3               	movwf	strncmp@_r+1
  3837  04D8  3002               	movlw	2
  3838  04D9  00F4               	movwf	strncmp@n
  3839  04DA  3000               	movlw	0
  3840  04DB  00F5               	movwf	strncmp@n+1
  3841  04DC  3180  200E  3183   	fcall	_strncmp
  3842  04DF  0870               	movf	?_strncmp,w
  3843  04E0  0471               	iorwf	?_strncmp+1,w
  3844  04E1  1D03               	btfss	3,2
  3845  04E2  2CE4               	goto	u2861
  3846  04E3  2CE5               	goto	u2860
  3847  04E4                     u2861:
  3848  04E4  2D34               	goto	l2753
  3849  04E5                     u2860:
  3850  04E5                     l2745:
  3851                           
  3852                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 1216:            
      +                           *fmt += ((sizeof("lu")/sizeof("lu"[0]))-1);
  3853  04E5  0020               	movlb	0	; select bank0
  3854  04E6  084E               	movf	vfpfcnvrt@fmt,w
  3855  04E7  0086               	movwf	6
  3856  04E8  0187               	clrf	7
  3857  04E9  3002               	movlw	2
  3858  04EA  0781               	addwf	1,f
  3859  04EB  3141               	addfsr 1,1
  3860  04EC  1803               	skipnc
  3861  04ED  0A81               	incf	1,f
  3862  04EE                     l2747:
  3863                           
  3864                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 1217:            
      +                           llu = (unsigned long long)(*(unsigned long *)__va_arg(*(unsigned long **)ap, (unsigned 
      +                          long)0));
  3865  04EE  084F               	movf	vfpfcnvrt@ap,w
  3866  04EF  0086               	movwf	6
  3867  04F0  0187               	clrf	7
  3868  04F1  0801               	movf	1,w
  3869  04F2  0084               	movwf	4
  3870  04F3  0185               	clrf	5
  3871  04F4  3004               	movlw	4
  3872  04F5  0781               	addwf	1,f
  3873  04F6  3F00               	moviw [0]fsr0
  3874  04F7  00D0               	movwf	??_vfpfcnvrt
  3875  04F8  3F01               	moviw [1]fsr0
  3876  04F9  00D1               	movwf	??_vfpfcnvrt+1
  3877  04FA  3F02               	moviw [2]fsr0
  3878  04FB  00D2               	movwf	??_vfpfcnvrt+2
  3879  04FC  3F03               	moviw [3]fsr0
  3880  04FD  00D3               	movwf	??_vfpfcnvrt+3
  3881  04FE  0850               	movf	??_vfpfcnvrt,w
  3882  04FF  00D4               	movwf	??_vfpfcnvrt+4
  3883  0500  0851               	movf	??_vfpfcnvrt+1,w
  3884  0501  00D5               	movwf	??_vfpfcnvrt+5
  3885  0502  0852               	movf	??_vfpfcnvrt+2,w
  3886  0503  00D6               	movwf	??_vfpfcnvrt+6
  3887  0504  0853               	movf	??_vfpfcnvrt+3,w
  3888  0505  00D7               	movwf	??_vfpfcnvrt+7
  3889  0506  01D8               	clrf	??_vfpfcnvrt+8
  3890  0507  01D9               	clrf	??_vfpfcnvrt+9
  3891  0508  01DA               	clrf	??_vfpfcnvrt+10
  3892  0509  01DB               	clrf	??_vfpfcnvrt+11
  3893  050A  085B               	movf	??_vfpfcnvrt+11,w
  3894  050B  00EB               	movwf	vfpfcnvrt@llu+7
  3895  050C  085A               	movf	??_vfpfcnvrt+10,w
  3896  050D  00EA               	movwf	vfpfcnvrt@llu+6
  3897  050E  0859               	movf	??_vfpfcnvrt+9,w
  3898  050F  00E9               	movwf	vfpfcnvrt@llu+5
  3899  0510  0858               	movf	??_vfpfcnvrt+8,w
  3900  0511  00E8               	movwf	vfpfcnvrt@llu+4
  3901  0512  0857               	movf	??_vfpfcnvrt+7,w
  3902  0513  00E7               	movwf	vfpfcnvrt@llu+3
  3903  0514  0856               	movf	??_vfpfcnvrt+6,w
  3904  0515  00E6               	movwf	vfpfcnvrt@llu+2
  3905  0516  0855               	movf	??_vfpfcnvrt+5,w
  3906  0517  00E5               	movwf	vfpfcnvrt@llu+1
  3907  0518  0854               	movf	??_vfpfcnvrt+4,w
  3908  0519  00E4               	movwf	vfpfcnvrt@llu
  3909  051A                     l2749:
  3910                           
  3911                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 1219:            
      +                           return utoa(fp, llu);
  3912  051A  0864               	movf	vfpfcnvrt@llu,w
  3913  051B  00B0               	movwf	utoa@d
  3914  051C  0865               	movf	vfpfcnvrt@llu+1,w
  3915  051D  00B1               	movwf	utoa@d+1
  3916  051E  0866               	movf	vfpfcnvrt@llu+2,w
  3917  051F  00B2               	movwf	utoa@d+2
  3918  0520  0867               	movf	vfpfcnvrt@llu+3,w
  3919  0521  00B3               	movwf	utoa@d+3
  3920  0522  0868               	movf	vfpfcnvrt@llu+4,w
  3921  0523  00B4               	movwf	utoa@d+4
  3922  0524  0869               	movf	vfpfcnvrt@llu+5,w
  3923  0525  00B5               	movwf	utoa@d+5
  3924  0526  086A               	movf	vfpfcnvrt@llu+6,w
  3925  0527  00B6               	movwf	utoa@d+6
  3926  0528  086B               	movf	vfpfcnvrt@llu+7,w
  3927  0529  00B7               	movwf	utoa@d+7
  3928  052A  086C               	movf	vfpfcnvrt@fp,w
  3929  052B  318E  2610  3183   	fcall	_utoa
  3930  052E  0020               	movlb	0	; select bank0
  3931  052F  0831               	movf	?_utoa+1,w
  3932  0530  00CF               	movwf	?_vfpfcnvrt+1
  3933  0531  0830               	movf	?_utoa,w
  3934  0532  00CE               	movwf	?_vfpfcnvrt
  3935  0533  2D8D               	goto	l1048
  3936  0534                     l2753:
  3937                           
  3938                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 1372:         if 
      +                          ((*fmt)[0] == '%') {
  3939  0534  0020               	movlb	0	; select bank0
  3940  0535  084E               	movf	vfpfcnvrt@fmt,w
  3941  0536  0086               	movwf	6
  3942  0537  0187               	clrf	7
  3943  0538  3F40               	moviw [0]fsr1
  3944  0539  00D0               	movwf	??_vfpfcnvrt
  3945  053A  3F41               	moviw [1]fsr1
  3946  053B  00D1               	movwf	??_vfpfcnvrt+1
  3947  053C  0850               	movf	??_vfpfcnvrt,w
  3948  053D  0084               	movwf	4
  3949  053E  0851               	movf	??_vfpfcnvrt+1,w
  3950  053F  0085               	movwf	5
  3951  0540  0012               	moviw fsr0++
  3952  0541  3A25               	xorlw	37
  3953  0542  1D03               	btfss	3,2
  3954  0543  2D45               	goto	u2871
  3955  0544  2D46               	goto	u2870
  3956  0545                     u2871:
  3957  0545  2D5F               	goto	l2763
  3958  0546                     u2870:
  3959  0546                     l2755:
  3960                           
  3961                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 1373:            
      +                           ++*fmt;
  3962  0546  084E               	movf	vfpfcnvrt@fmt,w
  3963  0547  0086               	movwf	6
  3964  0548  0187               	clrf	7
  3965  0549  3001               	movlw	1
  3966  054A  0781               	addwf	1,f
  3967  054B  3141               	addfsr 1,1
  3968  054C  1803               	skipnc
  3969  054D  0A81               	incf	1,f
  3970  054E                     l2757:
  3971                           
  3972                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 1374:            
      +                           fputc((int)'%', fp);
  3973  054E  3025               	movlw	37
  3974  054F  00F0               	movwf	fputc@c
  3975  0550  3000               	movlw	0
  3976  0551  00F1               	movwf	fputc@c+1
  3977  0552  086C               	movf	vfpfcnvrt@fp,w
  3978  0553  00D0               	movwf	??_vfpfcnvrt
  3979  0554  0850               	movf	??_vfpfcnvrt,w
  3980  0555  00F2               	movwf	fputc@fp
  3981  0556  3194  24FF  3183   	fcall	_fputc
  3982  0559                     l2759:
  3983                           
  3984                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 1375:            
      +                           return 1;
  3985  0559  3001               	movlw	1
  3986  055A  0020               	movlb	0	; select bank0
  3987  055B  00CE               	movwf	?_vfpfcnvrt
  3988  055C  3000               	movlw	0
  3989  055D  00CF               	movwf	?_vfpfcnvrt+1
  3990  055E  2D8D               	goto	l1048
  3991  055F                     l2763:
  3992                           
  3993                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 1379:         ++*
      +                          fmt;
  3994  055F  084E               	movf	vfpfcnvrt@fmt,w
  3995  0560  0086               	movwf	6
  3996  0561  0187               	clrf	7
  3997  0562  3001               	movlw	1
  3998  0563  0781               	addwf	1,f
  3999  0564  3141               	addfsr 1,1
  4000  0565  1803               	skipnc
  4001  0566  0A81               	incf	1,f
  4002  0567                     l2765:
  4003                           
  4004                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 1380:         ret
      +                          urn 0;
  4005  0567  01CE               	clrf	?_vfpfcnvrt
  4006  0568  01CF               	clrf	?_vfpfcnvrt+1
  4007  0569  2D8D               	goto	l1048
  4008  056A                     l2769:
  4009                           
  4010                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 1384:     fputc((
      +                          int)(*fmt)[0], fp);
  4011  056A  084E               	movf	vfpfcnvrt@fmt,w
  4012  056B  0086               	movwf	6
  4013  056C  0187               	clrf	7
  4014  056D  3F40               	moviw [0]fsr1
  4015  056E  00D0               	movwf	??_vfpfcnvrt
  4016  056F  3F41               	moviw [1]fsr1
  4017  0570  00D1               	movwf	??_vfpfcnvrt+1
  4018  0571  0850               	movf	??_vfpfcnvrt,w
  4019  0572  0084               	movwf	4
  4020  0573  0851               	movf	??_vfpfcnvrt+1,w
  4021  0574  0085               	movwf	5
  4022  0575  0800               	movf	0,w	;code access
  4023  0576  00D2               	movwf	??_vfpfcnvrt+2
  4024  0577  01D3               	clrf	??_vfpfcnvrt+3
  4025  0578  0852               	movf	??_vfpfcnvrt+2,w
  4026  0579  00F0               	movwf	fputc@c
  4027  057A  0853               	movf	??_vfpfcnvrt+3,w
  4028  057B  00F1               	movwf	fputc@c+1
  4029  057C  086C               	movf	vfpfcnvrt@fp,w
  4030  057D  00D4               	movwf	??_vfpfcnvrt+4
  4031  057E  0854               	movf	??_vfpfcnvrt+4,w
  4032  057F  00F2               	movwf	fputc@fp
  4033  0580  3194  24FF  3183   	fcall	_fputc
  4034  0583                     l2771:
  4035                           
  4036                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 1385:     ++*fmt;
  4037  0583  0020               	movlb	0	; select bank0
  4038  0584  084E               	movf	vfpfcnvrt@fmt,w
  4039  0585  0086               	movwf	6
  4040  0586  0187               	clrf	7
  4041  0587  3001               	movlw	1
  4042  0588  0781               	addwf	1,f
  4043  0589  3141               	addfsr 1,1
  4044  058A  1803               	skipnc
  4045  058B  0A81               	incf	1,f
  4046  058C  2D59               	goto	l2759
  4047  058D                     l1048:
  4048  058D  0008               	return
  4049  058E                     __end_of_vfpfcnvrt:
  4050                           
  4051                           	psect	text6
  4052  0E10                     __ptext6:	
  4053 ;; *************** function _utoa *****************
  4054 ;; Defined at:
  4055 ;;		line 615 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c"
  4056 ;; Parameters:    Size  Location     Type
  4057 ;;  fp              1    wreg     PTR struct _IO_FILE
  4058 ;;		 -> sprintf@f(5), 
  4059 ;;  d               8   16[BANK0 ] unsigned long long 
  4060 ;; Auto vars:     Size  Location     Type
  4061 ;;  fp              1   26[BANK0 ] PTR struct _IO_FILE
  4062 ;;		 -> sprintf@f(5), 
  4063 ;;  n               8   29[BANK0 ] unsigned long long 
  4064 ;;  i               2   37[BANK0 ] int 
  4065 ;;  w               2   27[BANK0 ] int 
  4066 ;;  p               2   24[BANK0 ] int 
  4067 ;; Return value:  Size  Location     Type
  4068 ;;                  2   16[BANK0 ] int 
  4069 ;; Registers used:
  4070 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  4071 ;; Tracked objects:
  4072 ;;		On entry : 0/0
  4073 ;;		On exit  : 0/0
  4074 ;;		Unchanged: 0/0
  4075 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  4076 ;;      Params:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4077 ;;      Locals:         0      15       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4078 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4079 ;;      Totals:         1      23       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4080 ;;Total ram usage:       24 bytes
  4081 ;; Hardware stack levels used: 1
  4082 ;; Hardware stack levels required when called: 4
  4083 ;; This function calls:
  4084 ;;		___lodiv
  4085 ;;		___lomod
  4086 ;;		_pad
  4087 ;; This function is called by:
  4088 ;;		_vfpfcnvrt
  4089 ;; This function uses a non-reentrant model
  4090 ;;
  4091                           
  4092                           
  4093                           ;psect for function _utoa
  4094  0E10                     _utoa:
  4095                           
  4096                           ;incstack = 0
  4097                           ; Regs used in _utoa: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  4098                           ;utoa@fp stored from wreg
  4099  0E10  0020               	movlb	0	; select bank0
  4100  0E11  00BA               	movwf	utoa@fp
  4101  0E12                     l2627:
  4102                           
  4103                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 615: static int u
      +                          toa(FILE *fp, unsigned long long d);C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99
      +                          \common\doprnt.c: 616: {;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\dop
      +                          rnt.c: 617:     int i, p, w;;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common
      +                          \doprnt.c: 618:     unsigned long long n;;C:\Program Files\Microchip\xc8\v2.32\pic\sourc
      +                          es\c99\common\doprnt.c: 621:     if (!(prec < 0)) {
  4104  0E12  0022               	movlb	2	; select bank2
  4105  0E13  1BAE               	btfsc	(_prec+1)^(0+256),7
  4106  0E14  2E16               	goto	u2671
  4107  0E15  2E17               	goto	u2670
  4108  0E16                     u2671:
  4109  0E16  2E1C               	goto	l1029
  4110  0E17                     u2670:
  4111  0E17                     l2629:
  4112                           
  4113                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 622:         flag
      +                          s &= ~(1 << 1);
  4114  0E17  30FD               	movlw	253
  4115  0E18  0021               	movlb	1	; select bank1
  4116  0E19  05ED               	andwf	_flags^(0+128),f
  4117  0E1A  30FF               	movlw	255
  4118  0E1B  05EE               	andwf	(_flags+1)^(0+128),f
  4119  0E1C                     l1029:	
  4120                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 623:     }
  4121                           
  4122                           
  4123                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 624:     p = (0 <
      +                           prec) ? prec : 1;
  4124  0E1C  0022               	movlb	2	; select bank2
  4125  0E1D  082E               	movf	(_prec+1)^(0+256),w
  4126  0E1E  3A80               	xorlw	128
  4127  0E1F  00FD               	movwf	??_utoa
  4128  0E20  3080               	movlw	128
  4129  0E21  027D               	subwf	??_utoa,w
  4130  0E22  1D03               	skipz
  4131  0E23  2E26               	goto	u2685
  4132  0E24  3001               	movlw	1
  4133  0E25  022D               	subwf	_prec^(0+256),w
  4134  0E26                     u2685:
  4135  0E26  1803               	skipnc
  4136  0E27  2E29               	goto	u2681
  4137  0E28  2E2A               	goto	u2680
  4138  0E29                     u2681:
  4139  0E29  2E30               	goto	l2633
  4140  0E2A                     u2680:
  4141  0E2A                     l2631:
  4142  0E2A  3001               	movlw	1
  4143  0E2B  0020               	movlb	0	; select bank0
  4144  0E2C  00B8               	movwf	utoa@p
  4145  0E2D  3000               	movlw	0
  4146  0E2E  00B9               	movwf	utoa@p+1
  4147  0E2F  2E38               	goto	l1033
  4148  0E30                     l2633:
  4149  0E30  0022               	movlb	2	; select bank2
  4150  0E31  082E               	movf	(_prec+1)^(0+256),w
  4151  0E32  0020               	movlb	0	; select bank0
  4152  0E33  00B9               	movwf	utoa@p+1
  4153  0E34  0022               	movlb	2	; select bank2
  4154  0E35  082D               	movf	_prec^(0+256),w
  4155  0E36  0020               	movlb	0	; select bank0
  4156  0E37  00B8               	movwf	utoa@p
  4157  0E38                     l1033:
  4158                           
  4159                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 625:     w = widt
      +                          h;
  4160  0E38  0022               	movlb	2	; select bank2
  4161  0E39  082C               	movf	(_width+1)^(0+256),w
  4162  0E3A  0020               	movlb	0	; select bank0
  4163  0E3B  00BC               	movwf	utoa@w+1
  4164  0E3C  0022               	movlb	2	; select bank2
  4165  0E3D  082B               	movf	_width^(0+256),w
  4166  0E3E  0020               	movlb	0	; select bank0
  4167  0E3F  00BB               	movwf	utoa@w
  4168  0E40                     l2635:
  4169                           
  4170                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 628:     n = d;
  4171  0E40  0830               	movf	utoa@d,w
  4172  0E41  00BD               	movwf	utoa@n
  4173  0E42  0831               	movf	utoa@d+1,w
  4174  0E43  00BE               	movwf	utoa@n+1
  4175  0E44  0832               	movf	utoa@d+2,w
  4176  0E45  00BF               	movwf	utoa@n+2
  4177  0E46  0833               	movf	utoa@d+3,w
  4178  0E47  00C0               	movwf	utoa@n+3
  4179  0E48  0834               	movf	utoa@d+4,w
  4180  0E49  00C1               	movwf	utoa@n+4
  4181  0E4A  0835               	movf	utoa@d+5,w
  4182  0E4B  00C2               	movwf	utoa@n+5
  4183  0E4C  0836               	movf	utoa@d+6,w
  4184  0E4D  00C3               	movwf	utoa@n+6
  4185  0E4E  0837               	movf	utoa@d+7,w
  4186  0E4F  00C4               	movwf	utoa@n+7
  4187                           
  4188                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 629:     i = size
      +                          of(dbuf) - 1;
  4189  0E50  301F               	movlw	31
  4190  0E51  00C5               	movwf	utoa@i
  4191  0E52  3000               	movlw	0
  4192  0E53  00C6               	movwf	utoa@i+1
  4193  0E54                     l2637:
  4194                           
  4195                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 630:     dbuf[i] 
      +                          = '\0';
  4196  0E54  0022               	movlb	2	; select bank2
  4197  0E55  01CE               	clrf	(_dbuf^(0+256)+31)
  4198                           
  4199                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 631:     while (i
      +                           && (n || (0 < p) || ((0 < w) && (flags & (1 << 1))))) {
  4200  0E56  2EB8               	goto	l2649
  4201  0E57                     l2639:
  4202                           
  4203                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 632:         --i;
  4204  0E57  30FF               	movlw	255
  4205  0E58  0020               	movlb	0	; select bank0
  4206  0E59  07C5               	addwf	utoa@i,f
  4207  0E5A  30FF               	movlw	255
  4208  0E5B  3DC6               	addwfc	utoa@i+1,f
  4209  0E5C                     l2641:
  4210                           
  4211                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 633:         dbuf
      +                          [i] = '0' + (n % 10);
  4212  0E5C  300A               	movlw	10
  4213  0E5D  00A0               	movwf	___lomod@divisor
  4214  0E5E  01A1               	clrf	___lomod@divisor+1
  4215  0E5F  01A2               	clrf	___lomod@divisor+2
  4216  0E60  01A3               	clrf	___lomod@divisor+3
  4217  0E61  01A4               	clrf	___lomod@divisor+4
  4218  0E62  01A5               	clrf	___lomod@divisor+5
  4219  0E63  01A6               	clrf	___lomod@divisor+6
  4220  0E64  01A7               	clrf	___lomod@divisor+7
  4221  0E65  083D               	movf	utoa@n,w
  4222  0E66  00A8               	movwf	___lomod@dividend
  4223  0E67  083E               	movf	utoa@n+1,w
  4224  0E68  00A9               	movwf	___lomod@dividend+1
  4225  0E69  083F               	movf	utoa@n+2,w
  4226  0E6A  00AA               	movwf	___lomod@dividend+2
  4227  0E6B  0840               	movf	utoa@n+3,w
  4228  0E6C  00AB               	movwf	___lomod@dividend+3
  4229  0E6D  0841               	movf	utoa@n+4,w
  4230  0E6E  00AC               	movwf	___lomod@dividend+4
  4231  0E6F  0842               	movf	utoa@n+5,w
  4232  0E70  00AD               	movwf	___lomod@dividend+5
  4233  0E71  0843               	movf	utoa@n+6,w
  4234  0E72  00AE               	movwf	___lomod@dividend+6
  4235  0E73  0844               	movf	utoa@n+7,w
  4236  0E74  00AF               	movwf	___lomod@dividend+7
  4237  0E75  3197  271A  318E   	fcall	___lomod
  4238  0E78  0020               	movlb	0	; select bank0
  4239  0E79  0820               	movf	?___lomod,w
  4240  0E7A  3E30               	addlw	48
  4241  0E7B  00FD               	movwf	??_utoa
  4242  0E7C  0845               	movf	utoa@i,w
  4243  0E7D  3E2F               	addlw	(low (_dbuf| (0+256)))& (0+255)
  4244  0E7E  0086               	movwf	6
  4245  0E7F  3001               	movlw	1	; select bank2/3
  4246  0E80  0087               	movwf	7
  4247  0E81  087D               	movf	??_utoa,w
  4248  0E82  0081               	movwf	1
  4249  0E83                     l2643:
  4250                           
  4251                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 634:         --p;
  4252  0E83  30FF               	movlw	255
  4253  0E84  07B8               	addwf	utoa@p,f
  4254  0E85  30FF               	movlw	255
  4255  0E86  3DB9               	addwfc	utoa@p+1,f
  4256  0E87                     l2645:
  4257                           
  4258                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 635:         --w;
  4259  0E87  30FF               	movlw	255
  4260  0E88  07BB               	addwf	utoa@w,f
  4261  0E89  30FF               	movlw	255
  4262  0E8A  3DBC               	addwfc	utoa@w+1,f
  4263  0E8B                     l2647:
  4264                           
  4265                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 636:         n = 
      +                          n / 10;
  4266  0E8B  300A               	movlw	10
  4267  0E8C  00A0               	movwf	___lodiv@divisor
  4268  0E8D  01A1               	clrf	___lodiv@divisor+1
  4269  0E8E  01A2               	clrf	___lodiv@divisor+2
  4270  0E8F  01A3               	clrf	___lodiv@divisor+3
  4271  0E90  01A4               	clrf	___lodiv@divisor+4
  4272  0E91  01A5               	clrf	___lodiv@divisor+5
  4273  0E92  01A6               	clrf	___lodiv@divisor+6
  4274  0E93  01A7               	clrf	___lodiv@divisor+7
  4275  0E94  083D               	movf	utoa@n,w
  4276  0E95  00A8               	movwf	___lodiv@dividend
  4277  0E96  083E               	movf	utoa@n+1,w
  4278  0E97  00A9               	movwf	___lodiv@dividend+1
  4279  0E98  083F               	movf	utoa@n+2,w
  4280  0E99  00AA               	movwf	___lodiv@dividend+2
  4281  0E9A  0840               	movf	utoa@n+3,w
  4282  0E9B  00AB               	movwf	___lodiv@dividend+3
  4283  0E9C  0841               	movf	utoa@n+4,w
  4284  0E9D  00AC               	movwf	___lodiv@dividend+4
  4285  0E9E  0842               	movf	utoa@n+5,w
  4286  0E9F  00AD               	movwf	___lodiv@dividend+5
  4287  0EA0  0843               	movf	utoa@n+6,w
  4288  0EA1  00AE               	movwf	___lodiv@dividend+6
  4289  0EA2  0844               	movf	utoa@n+7,w
  4290  0EA3  00AF               	movwf	___lodiv@dividend+7
  4291  0EA4  3188  2088  318E   	fcall	___lodiv
  4292  0EA7  0020               	movlb	0	; select bank0
  4293  0EA8  0820               	movf	?___lodiv,w
  4294  0EA9  00BD               	movwf	utoa@n
  4295  0EAA  0821               	movf	?___lodiv+1,w
  4296  0EAB  00BE               	movwf	utoa@n+1
  4297  0EAC  0822               	movf	?___lodiv+2,w
  4298  0EAD  00BF               	movwf	utoa@n+2
  4299  0EAE  0823               	movf	?___lodiv+3,w
  4300  0EAF  00C0               	movwf	utoa@n+3
  4301  0EB0  0824               	movf	?___lodiv+4,w
  4302  0EB1  00C1               	movwf	utoa@n+4
  4303  0EB2  0825               	movf	?___lodiv+5,w
  4304  0EB3  00C2               	movwf	utoa@n+5
  4305  0EB4  0826               	movf	?___lodiv+6,w
  4306  0EB5  00C3               	movwf	utoa@n+6
  4307  0EB6  0827               	movf	?___lodiv+7,w
  4308  0EB7  00C4               	movwf	utoa@n+7
  4309  0EB8                     l2649:
  4310                           
  4311                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 631:     while (i
      +                           && (n || (0 < p) || ((0 < w) && (flags & (1 << 1))))) {
  4312  0EB8  0020               	movlb	0	; select bank0
  4313  0EB9  0845               	movf	utoa@i,w
  4314  0EBA  0446               	iorwf	utoa@i+1,w
  4315  0EBB  1903               	btfsc	3,2
  4316  0EBC  2EBE               	goto	u2691
  4317  0EBD  2EBF               	goto	u2690
  4318  0EBE                     u2691:
  4319  0EBE  2EEB               	goto	l2659
  4320  0EBF                     u2690:
  4321  0EBF                     l2651:
  4322  0EBF  083D               	movf	utoa@n,w
  4323  0EC0  043E               	iorwf	utoa@n+1,w
  4324  0EC1  043F               	iorwf	utoa@n+2,w
  4325  0EC2  0440               	iorwf	utoa@n+3,w
  4326  0EC3  0441               	iorwf	utoa@n+4,w
  4327  0EC4  0442               	iorwf	utoa@n+5,w
  4328  0EC5  0443               	iorwf	utoa@n+6,w
  4329  0EC6  0444               	iorwf	utoa@n+7,w
  4330  0EC7  1D03               	skipz
  4331  0EC8  2ECA               	goto	u2701
  4332  0EC9  2ECB               	goto	u2700
  4333  0ECA                     u2701:
  4334  0ECA  2E57               	goto	l2639
  4335  0ECB                     u2700:
  4336  0ECB                     l2653:
  4337  0ECB  0839               	movf	utoa@p+1,w
  4338  0ECC  3A80               	xorlw	128
  4339  0ECD  00FD               	movwf	??_utoa
  4340  0ECE  3080               	movlw	128
  4341  0ECF  027D               	subwf	??_utoa,w
  4342  0ED0  1D03               	skipz
  4343  0ED1  2ED4               	goto	u2715
  4344  0ED2  3001               	movlw	1
  4345  0ED3  0238               	subwf	utoa@p,w
  4346  0ED4                     u2715:
  4347  0ED4  1803               	skipnc
  4348  0ED5  2ED7               	goto	u2711
  4349  0ED6  2ED8               	goto	u2710
  4350  0ED7                     u2711:
  4351  0ED7  2E57               	goto	l2639
  4352  0ED8                     u2710:
  4353  0ED8                     l2655:
  4354  0ED8  0020               	movlb	0	; select bank0
  4355  0ED9  083C               	movf	utoa@w+1,w
  4356  0EDA  3A80               	xorlw	128
  4357  0EDB  00FD               	movwf	??_utoa
  4358  0EDC  3080               	movlw	128
  4359  0EDD  027D               	subwf	??_utoa,w
  4360  0EDE  1D03               	skipz
  4361  0EDF  2EE2               	goto	u2725
  4362  0EE0  3001               	movlw	1
  4363  0EE1  023B               	subwf	utoa@w,w
  4364  0EE2                     u2725:
  4365  0EE2  1C03               	skipc
  4366  0EE3  2EE5               	goto	u2721
  4367  0EE4  2EE6               	goto	u2720
  4368  0EE5                     u2721:
  4369  0EE5  2EEB               	goto	l2659
  4370  0EE6                     u2720:
  4371  0EE6                     l2657:
  4372  0EE6  0021               	movlb	1	; select bank1
  4373  0EE7  18ED               	btfsc	_flags^(0+128),1
  4374  0EE8  2EEA               	goto	u2731
  4375  0EE9  2EEB               	goto	u2730
  4376  0EEA                     u2731:
  4377  0EEA  2E57               	goto	l2639
  4378  0EEB                     u2730:
  4379  0EEB                     l2659:
  4380                           
  4381                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 640:     return p
      +                          ad(fp, &dbuf[i], w);
  4382  0EEB  0020               	movlb	0	; select bank0
  4383  0EEC  0845               	movf	utoa@i,w
  4384  0EED  3E2F               	addlw	(low (_dbuf| (0+256)))& (0+255)
  4385  0EEE  00FD               	movwf	??_utoa
  4386  0EEF  087D               	movf	??_utoa,w
  4387  0EF0  00A4               	movwf	pad@buf
  4388  0EF1  083C               	movf	utoa@w+1,w
  4389  0EF2  00A6               	movwf	pad@p+1
  4390  0EF3  083B               	movf	utoa@w,w
  4391  0EF4  00A5               	movwf	pad@p
  4392  0EF5  083A               	movf	utoa@fp,w
  4393  0EF6  3195  25A5  318E   	fcall	_pad
  4394  0EF9  0020               	movlb	0	; select bank0
  4395  0EFA  0825               	movf	?_pad+1,w
  4396  0EFB  00B1               	movwf	?_utoa+1
  4397  0EFC  0824               	movf	?_pad,w
  4398  0EFD  00B0               	movwf	?_utoa
  4399  0EFE                     l1041:
  4400  0EFE  0008               	return
  4401  0EFF                     __end_of_utoa:
  4402                           
  4403                           	psect	text7
  4404  171A                     __ptext7:	
  4405 ;; *************** function ___lomod *****************
  4406 ;; Defined at:
  4407 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\lomod.c"
  4408 ;; Parameters:    Size  Location     Type
  4409 ;;  divisor         8    0[BANK0 ] unsigned long long 
  4410 ;;  dividend        8    8[BANK0 ] unsigned long long 
  4411 ;; Auto vars:     Size  Location     Type
  4412 ;;  counter         1    1[COMMON] unsigned char 
  4413 ;; Return value:  Size  Location     Type
  4414 ;;                  8    0[BANK0 ] unsigned long long 
  4415 ;; Registers used:
  4416 ;;		wreg, status,2, status,0
  4417 ;; Tracked objects:
  4418 ;;		On entry : 0/0
  4419 ;;		On exit  : 0/0
  4420 ;;		Unchanged: 0/0
  4421 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  4422 ;;      Params:         0      16       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4423 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4424 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4425 ;;      Totals:         2      16       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4426 ;;Total ram usage:       18 bytes
  4427 ;; Hardware stack levels used: 1
  4428 ;; This function calls:
  4429 ;;		Nothing
  4430 ;; This function is called by:
  4431 ;;		_utoa
  4432 ;; This function uses a non-reentrant model
  4433 ;;
  4434                           
  4435                           
  4436                           ;psect for function ___lomod
  4437  171A                     ___lomod:
  4438  171A                     l2517:	
  4439                           ;incstack = 0
  4440                           ; Regs used in ___lomod: [wreg+status,2+status,0]
  4441                           
  4442  171A  0020               	movlb	0	; select bank0
  4443  171B  0820               	movf	___lomod@divisor,w
  4444  171C  0421               	iorwf	___lomod@divisor+1,w
  4445  171D  0422               	iorwf	___lomod@divisor+2,w
  4446  171E  0423               	iorwf	___lomod@divisor+3,w
  4447  171F  0424               	iorwf	___lomod@divisor+4,w
  4448  1720  0425               	iorwf	___lomod@divisor+5,w
  4449  1721  0426               	iorwf	___lomod@divisor+6,w
  4450  1722  0427               	iorwf	___lomod@divisor+7,w
  4451  1723  1903               	skipnz
  4452  1724  2F26               	goto	u2421
  4453  1725  2F27               	goto	u2420
  4454  1726                     u2421:
  4455  1726  2F7A               	goto	l746
  4456  1727                     u2420:
  4457  1727                     l2519:
  4458  1727  01F1               	clrf	___lomod@counter
  4459  1728  0AF1               	incf	___lomod@counter,f
  4460  1729  2F36               	goto	l2525
  4461  172A                     l2521:
  4462  172A  35A0               	lslf	___lomod@divisor,f
  4463  172B  0DA1               	rlf	___lomod@divisor+1,f
  4464  172C  0DA2               	rlf	___lomod@divisor+2,f
  4465  172D  0DA3               	rlf	___lomod@divisor+3,f
  4466  172E  0DA4               	rlf	___lomod@divisor+4,f
  4467  172F  0DA5               	rlf	___lomod@divisor+5,f
  4468  1730  0DA6               	rlf	___lomod@divisor+6,f
  4469  1731  0DA7               	rlf	___lomod@divisor+7,f
  4470  1732                     l2523:
  4471  1732  3001               	movlw	1
  4472  1733  00F0               	movwf	??___lomod
  4473  1734  0870               	movf	??___lomod,w
  4474  1735  07F1               	addwf	___lomod@counter,f
  4475  1736                     l2525:
  4476  1736  1FA7               	btfss	___lomod@divisor+7,7
  4477  1737  2F39               	goto	u2431
  4478  1738  2F3A               	goto	u2430
  4479  1739                     u2431:
  4480  1739  2F2A               	goto	l2521
  4481  173A                     u2430:
  4482  173A                     l2527:
  4483  173A  0827               	movf	___lomod@divisor+7,w
  4484  173B  022F               	subwf	___lomod@dividend+7,w
  4485  173C  1D03               	skipz
  4486  173D  2F58               	goto	u2445
  4487  173E  0826               	movf	___lomod@divisor+6,w
  4488  173F  022E               	subwf	___lomod@dividend+6,w
  4489  1740  1D03               	skipz
  4490  1741  2F58               	goto	u2445
  4491  1742  0825               	movf	___lomod@divisor+5,w
  4492  1743  022D               	subwf	___lomod@dividend+5,w
  4493  1744  1D03               	skipz
  4494  1745  2F58               	goto	u2445
  4495  1746  0824               	movf	___lomod@divisor+4,w
  4496  1747  022C               	subwf	___lomod@dividend+4,w
  4497  1748  1D03               	skipz
  4498  1749  2F58               	goto	u2445
  4499  174A  0823               	movf	___lomod@divisor+3,w
  4500  174B  022B               	subwf	___lomod@dividend+3,w
  4501  174C  1D03               	skipz
  4502  174D  2F58               	goto	u2445
  4503  174E  0822               	movf	___lomod@divisor+2,w
  4504  174F  022A               	subwf	___lomod@dividend+2,w
  4505  1750  1D03               	skipz
  4506  1751  2F58               	goto	u2445
  4507  1752  0821               	movf	___lomod@divisor+1,w
  4508  1753  0229               	subwf	___lomod@dividend+1,w
  4509  1754  1D03               	skipz
  4510  1755  2F58               	goto	u2445
  4511  1756  0820               	movf	___lomod@divisor,w
  4512  1757  0228               	subwf	___lomod@dividend,w
  4513  1758                     u2445:
  4514  1758  1C03               	skipc
  4515  1759  2F5B               	goto	u2441
  4516  175A  2F5C               	goto	u2440
  4517  175B                     u2441:
  4518  175B  2F6C               	goto	l2531
  4519  175C                     u2440:
  4520  175C                     l2529:
  4521  175C  0820               	movf	___lomod@divisor,w
  4522  175D  02A8               	subwf	___lomod@dividend,f
  4523  175E  0821               	movf	___lomod@divisor+1,w
  4524  175F  3BA9               	subwfb	___lomod@dividend+1,f
  4525  1760  0822               	movf	___lomod@divisor+2,w
  4526  1761  3BAA               	subwfb	___lomod@dividend+2,f
  4527  1762  0823               	movf	___lomod@divisor+3,w
  4528  1763  3BAB               	subwfb	___lomod@dividend+3,f
  4529  1764  0824               	movf	___lomod@divisor+4,w
  4530  1765  3BAC               	subwfb	___lomod@dividend+4,f
  4531  1766  0825               	movf	___lomod@divisor+5,w
  4532  1767  3BAD               	subwfb	___lomod@dividend+5,f
  4533  1768  0826               	movf	___lomod@divisor+6,w
  4534  1769  3BAE               	subwfb	___lomod@dividend+6,f
  4535  176A  0827               	movf	___lomod@divisor+7,w
  4536  176B  3BAF               	subwfb	___lomod@dividend+7,f
  4537  176C                     l2531:
  4538  176C  36A7               	lsrf	___lomod@divisor+7,f
  4539  176D  0CA6               	rrf	___lomod@divisor+6,f
  4540  176E  0CA5               	rrf	___lomod@divisor+5,f
  4541  176F  0CA4               	rrf	___lomod@divisor+4,f
  4542  1770  0CA3               	rrf	___lomod@divisor+3,f
  4543  1771  0CA2               	rrf	___lomod@divisor+2,f
  4544  1772  0CA1               	rrf	___lomod@divisor+1,f
  4545  1773  0CA0               	rrf	___lomod@divisor,f
  4546  1774  3001               	movlw	1
  4547  1775  02F1               	subwf	___lomod@counter,f
  4548  1776  1D03               	btfss	3,2
  4549  1777  2F79               	goto	u2451
  4550  1778  2F7A               	goto	u2450
  4551  1779                     u2451:
  4552  1779  2F3A               	goto	l2527
  4553  177A                     u2450:
  4554  177A                     l746:
  4555  177A  0828               	movf	___lomod@dividend,w
  4556  177B  00A0               	movwf	?___lomod
  4557  177C  0829               	movf	___lomod@dividend+1,w
  4558  177D  00A1               	movwf	?___lomod+1
  4559  177E  082A               	movf	___lomod@dividend+2,w
  4560  177F  00A2               	movwf	?___lomod+2
  4561  1780  082B               	movf	___lomod@dividend+3,w
  4562  1781  00A3               	movwf	?___lomod+3
  4563  1782  082C               	movf	___lomod@dividend+4,w
  4564  1783  00A4               	movwf	?___lomod+4
  4565  1784  082D               	movf	___lomod@dividend+5,w
  4566  1785  00A5               	movwf	?___lomod+5
  4567  1786  082E               	movf	___lomod@dividend+6,w
  4568  1787  00A6               	movwf	?___lomod+6
  4569  1788  082F               	movf	___lomod@dividend+7,w
  4570  1789  00A7               	movwf	?___lomod+7
  4571  178A                     l753:
  4572  178A  0008               	return
  4573  178B                     __end_of___lomod:
  4574                           
  4575                           	psect	text8
  4576  0888                     __ptext8:	
  4577 ;; *************** function ___lodiv *****************
  4578 ;; Defined at:
  4579 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\lodiv.c"
  4580 ;; Parameters:    Size  Location     Type
  4581 ;;  divisor         8    0[BANK0 ] unsigned long long 
  4582 ;;  dividend        8    8[BANK0 ] unsigned long long 
  4583 ;; Auto vars:     Size  Location     Type
  4584 ;;  quotient        8    1[COMMON] unsigned long long 
  4585 ;;  counter         1    9[COMMON] unsigned char 
  4586 ;; Return value:  Size  Location     Type
  4587 ;;                  8    0[BANK0 ] unsigned long long 
  4588 ;; Registers used:
  4589 ;;		wreg, fsr1l, fsr1h, status,2, status,0
  4590 ;; Tracked objects:
  4591 ;;		On entry : 0/0
  4592 ;;		On exit  : 0/0
  4593 ;;		Unchanged: 0/0
  4594 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  4595 ;;      Params:         0      16       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4596 ;;      Locals:         9       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4597 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4598 ;;      Totals:        10      16       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4599 ;;Total ram usage:       26 bytes
  4600 ;; Hardware stack levels used: 1
  4601 ;; This function calls:
  4602 ;;		Nothing
  4603 ;; This function is called by:
  4604 ;;		_utoa
  4605 ;; This function uses a non-reentrant model
  4606 ;;
  4607                           
  4608                           
  4609                           ;psect for function ___lodiv
  4610  0888                     ___lodiv:
  4611  0888                     l2495:	
  4612                           ;incstack = 0
  4613                           ; Regs used in ___lodiv: [wreg+fsr1l+fsr1h+status,2+status,0]
  4614                           
  4615  0888  3071               	movlw	low ___lodiv@quotient
  4616  0889  0086               	movwf	6
  4617  088A  3000               	movlw	high ___lodiv@quotient
  4618  088B  0087               	movwf	7
  4619  088C  3008               	movlw	8
  4620  088D  00F0               	movwf	??___lodiv
  4621  088E  3000               	movlw	0
  4622  088F                     u2370:
  4623  088F  001E               	movwi fsr1++
  4624  0890  0BF0               	decfsz	??___lodiv,f
  4625  0891  288F               	goto	u2370
  4626  0892                     l2497:
  4627  0892  0020               	movlb	0	; select bank0
  4628  0893  0820               	movf	___lodiv@divisor,w
  4629  0894  0421               	iorwf	___lodiv@divisor+1,w
  4630  0895  0422               	iorwf	___lodiv@divisor+2,w
  4631  0896  0423               	iorwf	___lodiv@divisor+3,w
  4632  0897  0424               	iorwf	___lodiv@divisor+4,w
  4633  0898  0425               	iorwf	___lodiv@divisor+5,w
  4634  0899  0426               	iorwf	___lodiv@divisor+6,w
  4635  089A  0427               	iorwf	___lodiv@divisor+7,w
  4636  089B  1903               	skipnz
  4637  089C  289E               	goto	u2381
  4638  089D  289F               	goto	u2380
  4639  089E                     u2381:
  4640  089E  28FB               	goto	l736
  4641  089F                     u2380:
  4642  089F                     l2499:
  4643  089F  01F9               	clrf	___lodiv@counter
  4644  08A0  0AF9               	incf	___lodiv@counter,f
  4645  08A1  28AE               	goto	l2505
  4646  08A2                     l2501:
  4647  08A2  35A0               	lslf	___lodiv@divisor,f
  4648  08A3  0DA1               	rlf	___lodiv@divisor+1,f
  4649  08A4  0DA2               	rlf	___lodiv@divisor+2,f
  4650  08A5  0DA3               	rlf	___lodiv@divisor+3,f
  4651  08A6  0DA4               	rlf	___lodiv@divisor+4,f
  4652  08A7  0DA5               	rlf	___lodiv@divisor+5,f
  4653  08A8  0DA6               	rlf	___lodiv@divisor+6,f
  4654  08A9  0DA7               	rlf	___lodiv@divisor+7,f
  4655  08AA                     l2503:
  4656  08AA  3001               	movlw	1
  4657  08AB  00F0               	movwf	??___lodiv
  4658  08AC  0870               	movf	??___lodiv,w
  4659  08AD  07F9               	addwf	___lodiv@counter,f
  4660  08AE                     l2505:
  4661  08AE  1FA7               	btfss	___lodiv@divisor+7,7
  4662  08AF  28B1               	goto	u2391
  4663  08B0  28B2               	goto	u2390
  4664  08B1                     u2391:
  4665  08B1  28A2               	goto	l2501
  4666  08B2                     u2390:
  4667  08B2                     l2507:
  4668  08B2  35F1               	lslf	___lodiv@quotient,f
  4669  08B3  0DF2               	rlf	___lodiv@quotient+1,f
  4670  08B4  0DF3               	rlf	___lodiv@quotient+2,f
  4671  08B5  0DF4               	rlf	___lodiv@quotient+3,f
  4672  08B6  0DF5               	rlf	___lodiv@quotient+4,f
  4673  08B7  0DF6               	rlf	___lodiv@quotient+5,f
  4674  08B8  0DF7               	rlf	___lodiv@quotient+6,f
  4675  08B9  0DF8               	rlf	___lodiv@quotient+7,f
  4676  08BA                     l2509:
  4677  08BA  0827               	movf	___lodiv@divisor+7,w
  4678  08BB  022F               	subwf	___lodiv@dividend+7,w
  4679  08BC  1D03               	skipz
  4680  08BD  28D8               	goto	u2405
  4681  08BE  0826               	movf	___lodiv@divisor+6,w
  4682  08BF  022E               	subwf	___lodiv@dividend+6,w
  4683  08C0  1D03               	skipz
  4684  08C1  28D8               	goto	u2405
  4685  08C2  0825               	movf	___lodiv@divisor+5,w
  4686  08C3  022D               	subwf	___lodiv@dividend+5,w
  4687  08C4  1D03               	skipz
  4688  08C5  28D8               	goto	u2405
  4689  08C6  0824               	movf	___lodiv@divisor+4,w
  4690  08C7  022C               	subwf	___lodiv@dividend+4,w
  4691  08C8  1D03               	skipz
  4692  08C9  28D8               	goto	u2405
  4693  08CA  0823               	movf	___lodiv@divisor+3,w
  4694  08CB  022B               	subwf	___lodiv@dividend+3,w
  4695  08CC  1D03               	skipz
  4696  08CD  28D8               	goto	u2405
  4697  08CE  0822               	movf	___lodiv@divisor+2,w
  4698  08CF  022A               	subwf	___lodiv@dividend+2,w
  4699  08D0  1D03               	skipz
  4700  08D1  28D8               	goto	u2405
  4701  08D2  0821               	movf	___lodiv@divisor+1,w
  4702  08D3  0229               	subwf	___lodiv@dividend+1,w
  4703  08D4  1D03               	skipz
  4704  08D5  28D8               	goto	u2405
  4705  08D6  0820               	movf	___lodiv@divisor,w
  4706  08D7  0228               	subwf	___lodiv@dividend,w
  4707  08D8                     u2405:
  4708  08D8  1C03               	skipc
  4709  08D9  28DB               	goto	u2401
  4710  08DA  28DC               	goto	u2400
  4711  08DB                     u2401:
  4712  08DB  28ED               	goto	l2515
  4713  08DC                     u2400:
  4714  08DC                     l2511:
  4715  08DC  0820               	movf	___lodiv@divisor,w
  4716  08DD  02A8               	subwf	___lodiv@dividend,f
  4717  08DE  0821               	movf	___lodiv@divisor+1,w
  4718  08DF  3BA9               	subwfb	___lodiv@dividend+1,f
  4719  08E0  0822               	movf	___lodiv@divisor+2,w
  4720  08E1  3BAA               	subwfb	___lodiv@dividend+2,f
  4721  08E2  0823               	movf	___lodiv@divisor+3,w
  4722  08E3  3BAB               	subwfb	___lodiv@dividend+3,f
  4723  08E4  0824               	movf	___lodiv@divisor+4,w
  4724  08E5  3BAC               	subwfb	___lodiv@dividend+4,f
  4725  08E6  0825               	movf	___lodiv@divisor+5,w
  4726  08E7  3BAD               	subwfb	___lodiv@dividend+5,f
  4727  08E8  0826               	movf	___lodiv@divisor+6,w
  4728  08E9  3BAE               	subwfb	___lodiv@dividend+6,f
  4729  08EA  0827               	movf	___lodiv@divisor+7,w
  4730  08EB  3BAF               	subwfb	___lodiv@dividend+7,f
  4731  08EC                     l2513:
  4732  08EC  1471               	bsf	___lodiv@quotient,0
  4733  08ED                     l2515:
  4734  08ED  36A7               	lsrf	___lodiv@divisor+7,f
  4735  08EE  0CA6               	rrf	___lodiv@divisor+6,f
  4736  08EF  0CA5               	rrf	___lodiv@divisor+5,f
  4737  08F0  0CA4               	rrf	___lodiv@divisor+4,f
  4738  08F1  0CA3               	rrf	___lodiv@divisor+3,f
  4739  08F2  0CA2               	rrf	___lodiv@divisor+2,f
  4740  08F3  0CA1               	rrf	___lodiv@divisor+1,f
  4741  08F4  0CA0               	rrf	___lodiv@divisor,f
  4742  08F5  3001               	movlw	1
  4743  08F6  02F9               	subwf	___lodiv@counter,f
  4744  08F7  1D03               	btfss	3,2
  4745  08F8  28FA               	goto	u2411
  4746  08F9  28FB               	goto	u2410
  4747  08FA                     u2411:
  4748  08FA  28B2               	goto	l2507
  4749  08FB                     u2410:
  4750  08FB                     l736:
  4751  08FB  0871               	movf	___lodiv@quotient,w
  4752  08FC  00A0               	movwf	?___lodiv
  4753  08FD  0872               	movf	___lodiv@quotient+1,w
  4754  08FE  00A1               	movwf	?___lodiv+1
  4755  08FF  0873               	movf	___lodiv@quotient+2,w
  4756  0900  00A2               	movwf	?___lodiv+2
  4757  0901  0874               	movf	___lodiv@quotient+3,w
  4758  0902  00A3               	movwf	?___lodiv+3
  4759  0903  0875               	movf	___lodiv@quotient+4,w
  4760  0904  00A4               	movwf	?___lodiv+4
  4761  0905  0876               	movf	___lodiv@quotient+5,w
  4762  0906  00A5               	movwf	?___lodiv+5
  4763  0907  0877               	movf	___lodiv@quotient+6,w
  4764  0908  00A6               	movwf	?___lodiv+6
  4765  0909  0878               	movf	___lodiv@quotient+7,w
  4766  090A  00A7               	movwf	?___lodiv+7
  4767  090B                     l743:
  4768  090B  0008               	return
  4769  090C                     __end_of___lodiv:
  4770                           
  4771                           	psect	text9
  4772  000E                     __ptext9:	
  4773 ;; *************** function _strncmp *****************
  4774 ;; Defined at:
  4775 ;;		line 3 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\strncmp.c"
  4776 ;; Parameters:    Size  Location     Type
  4777 ;;  _l              2    0[COMMON] PTR const unsigned char 
  4778 ;;		 -> STR_6(6), STR_5(10), STR_4(8), 
  4779 ;;  _r              2    2[COMMON] PTR const unsigned char 
  4780 ;;		 -> STR_18(3), STR_13(3), STR_9(3), 
  4781 ;;  n               2    4[COMMON] unsigned int 
  4782 ;; Auto vars:     Size  Location     Type
  4783 ;;  r               2    9[COMMON] PTR const unsigned char 
  4784 ;;		 -> STR_18(3), STR_13(3), STR_9(3), 
  4785 ;;  l               2    7[COMMON] PTR const unsigned char 
  4786 ;;		 -> STR_6(6), STR_5(10), STR_4(8), 
  4787 ;; Return value:  Size  Location     Type
  4788 ;;                  2    0[COMMON] int 
  4789 ;; Registers used:
  4790 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath
  4791 ;; Tracked objects:
  4792 ;;		On entry : 0/0
  4793 ;;		On exit  : 0/0
  4794 ;;		Unchanged: 0/0
  4795 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  4796 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4797 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4798 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4799 ;;      Totals:        11       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4800 ;;Total ram usage:       11 bytes
  4801 ;; Hardware stack levels used: 1
  4802 ;; This function calls:
  4803 ;;		Nothing
  4804 ;; This function is called by:
  4805 ;;		_vfpfcnvrt
  4806 ;; This function uses a non-reentrant model
  4807 ;;
  4808                           
  4809                           
  4810                           ;psect for function _strncmp
  4811  000E                     _strncmp:
  4812  000E                     l2663:	
  4813                           ;incstack = 0
  4814                           ; Regs used in _strncmp: [wreg-fsr0h+status,2+status,0+pclath]
  4815                           
  4816  000E  0871               	movf	strncmp@_l+1,w
  4817  000F  00F8               	movwf	strncmp@l+1
  4818  0010  0870               	movf	strncmp@_l,w
  4819  0011  00F7               	movwf	strncmp@l
  4820  0012  0873               	movf	strncmp@_r+1,w
  4821  0013  00FA               	movwf	strncmp@r+1
  4822  0014  0872               	movf	strncmp@_r,w
  4823  0015  00F9               	movwf	strncmp@r
  4824  0016                     l2665:
  4825  0016  3001               	movlw	1
  4826  0017  02F4               	subwf	strncmp@n,f
  4827  0018  3000               	movlw	0
  4828  0019  3BF5               	subwfb	strncmp@n+1,f
  4829  001A  0A74               	incf	strncmp@n,w
  4830  001B  1D03               	skipz
  4831  001C  2821               	goto	u2741
  4832  001D  0A75               	incf	strncmp@n+1,w
  4833  001E  1D03               	btfss	3,2
  4834  001F  2821               	goto	u2741
  4835  0020  2822               	goto	u2740
  4836  0021                     u2741:
  4837  0021  2831               	goto	l2673
  4838  0022                     u2740:
  4839  0022                     l2667:
  4840  0022  01F0               	clrf	?_strncmp
  4841  0023  01F1               	clrf	?_strncmp+1
  4842  0024  2869               	goto	l1100
  4843  0025                     l2671:
  4844  0025  3001               	movlw	1
  4845  0026  07F7               	addwf	strncmp@l,f
  4846  0027  3000               	movlw	0
  4847  0028  3DF8               	addwfc	strncmp@l+1,f
  4848  0029  3001               	movlw	1
  4849  002A  07F9               	addwf	strncmp@r,f
  4850  002B  3000               	movlw	0
  4851  002C  3DFA               	addwfc	strncmp@r+1,f
  4852  002D  3001               	movlw	1
  4853  002E  02F4               	subwf	strncmp@n,f
  4854  002F  3000               	movlw	0
  4855  0030  3BF5               	subwfb	strncmp@n+1,f
  4856  0031                     l2673:
  4857  0031  0877               	movf	strncmp@l,w
  4858  0032  0084               	movwf	4
  4859  0033  0878               	movf	strncmp@l+1,w
  4860  0034  0085               	movwf	5
  4861  0035  0012               	moviw fsr0++
  4862  0036  1903               	btfsc	3,2
  4863  0037  2839               	goto	u2751
  4864  0038  283A               	goto	u2750
  4865  0039                     u2751:
  4866  0039  2859               	goto	l2681
  4867  003A                     u2750:
  4868  003A                     l2675:
  4869  003A  0879               	movf	strncmp@r,w
  4870  003B  0084               	movwf	4
  4871  003C  087A               	movf	strncmp@r+1,w
  4872  003D  0085               	movwf	5
  4873  003E  0012               	moviw fsr0++
  4874  003F  1903               	btfsc	3,2
  4875  0040  2842               	goto	u2761
  4876  0041  2843               	goto	u2760
  4877  0042                     u2761:
  4878  0042  2859               	goto	l2681
  4879  0043                     u2760:
  4880  0043                     l2677:
  4881  0043  0874               	movf	strncmp@n,w
  4882  0044  0475               	iorwf	strncmp@n+1,w
  4883  0045  1903               	btfsc	3,2
  4884  0046  2848               	goto	u2771
  4885  0047  2849               	goto	u2770
  4886  0048                     u2771:
  4887  0048  2859               	goto	l2681
  4888  0049                     u2770:
  4889  0049                     l2679:
  4890  0049  0879               	movf	strncmp@r,w
  4891  004A  0084               	movwf	4
  4892  004B  087A               	movf	strncmp@r+1,w
  4893  004C  0085               	movwf	5
  4894  004D  0800               	movf	0,w	;code access
  4895  004E  00F6               	movwf	??_strncmp
  4896  004F  0877               	movf	strncmp@l,w
  4897  0050  0084               	movwf	4
  4898  0051  0878               	movf	strncmp@l+1,w
  4899  0052  0085               	movwf	5
  4900  0053  0800               	movf	0,w	;code access
  4901  0054  0676               	xorwf	??_strncmp,w
  4902  0055  1903               	skipnz
  4903  0056  2858               	goto	u2781
  4904  0057  2859               	goto	u2780
  4905  0058                     u2781:
  4906  0058  2825               	goto	l2671
  4907  0059                     u2780:
  4908  0059                     l2681:
  4909  0059  0877               	movf	strncmp@l,w
  4910  005A  0084               	movwf	4
  4911  005B  0878               	movf	strncmp@l+1,w
  4912  005C  0085               	movwf	5
  4913  005D  0800               	movf	0,w	;code access
  4914  005E  00F6               	movwf	??_strncmp
  4915  005F  0879               	movf	strncmp@r,w
  4916  0060  0084               	movwf	4
  4917  0061  087A               	movf	strncmp@r+1,w
  4918  0062  0085               	movwf	5
  4919  0063  0800               	movf	0,w	;code access
  4920  0064  0276               	subwf	??_strncmp,w
  4921  0065  00F0               	movwf	?_strncmp
  4922  0066  01F1               	clrf	?_strncmp+1
  4923  0067  1C03               	skipc
  4924  0068  03F1               	decf	?_strncmp+1,f
  4925  0069                     l1100:
  4926  0069  0008               	return
  4927  006A                     __end_of_strncmp:
  4928                           
  4929                           	psect	text10
  4930  006A                     __ptext10:	
  4931 ;; *************** function _dtoa *****************
  4932 ;; Defined at:
  4933 ;;		line 287 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c"
  4934 ;; Parameters:    Size  Location     Type
  4935 ;;  fp              1    wreg     PTR struct _IO_FILE
  4936 ;;		 -> sprintf@f(5), 
  4937 ;;  d               8   16[BANK0 ] long long 
  4938 ;; Auto vars:     Size  Location     Type
  4939 ;;  fp              1   31[BANK0 ] PTR struct _IO_FILE
  4940 ;;		 -> sprintf@f(5), 
  4941 ;;  n               8   36[BANK0 ] long long 
  4942 ;;  i               2   44[BANK0 ] int 
  4943 ;;  s               2   34[BANK0 ] int 
  4944 ;;  w               2   32[BANK0 ] int 
  4945 ;;  p               2   29[BANK0 ] int 
  4946 ;; Return value:  Size  Location     Type
  4947 ;;                  2   16[BANK0 ] int 
  4948 ;; Registers used:
  4949 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  4950 ;; Tracked objects:
  4951 ;;		On entry : 0/0
  4952 ;;		On exit  : 0/0
  4953 ;;		Unchanged: 0/0
  4954 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  4955 ;;      Params:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4956 ;;      Locals:         0      19       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4957 ;;      Temps:          0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4958 ;;      Totals:         0      30       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4959 ;;Total ram usage:       30 bytes
  4960 ;; Hardware stack levels used: 1
  4961 ;; Hardware stack levels required when called: 4
  4962 ;; This function calls:
  4963 ;;		___aodiv
  4964 ;;		___aomod
  4965 ;;		_abs
  4966 ;;		_pad
  4967 ;; This function is called by:
  4968 ;;		_vfpfcnvrt
  4969 ;; This function uses a non-reentrant model
  4970 ;;
  4971                           
  4972                           
  4973                           ;psect for function _dtoa
  4974  006A                     _dtoa:
  4975                           
  4976                           ;incstack = 0
  4977                           ; Regs used in _dtoa: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  4978                           ;dtoa@fp stored from wreg
  4979  006A  0020               	movlb	0	; select bank0
  4980  006B  00BF               	movwf	dtoa@fp
  4981  006C                     l2569:
  4982                           
  4983                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 287: static int d
      +                          toa(FILE *fp, long long d);C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\d
      +                          oprnt.c: 288: {;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 28
      +                          9:     int i, p, s, w;;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprn
      +                          t.c: 290:     long long n;;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\d
      +                          oprnt.c: 293:     n = d;
  4984  006C  0830               	movf	dtoa@d,w
  4985  006D  00C4               	movwf	dtoa@n
  4986  006E  0831               	movf	dtoa@d+1,w
  4987  006F  00C5               	movwf	dtoa@n+1
  4988  0070  0832               	movf	dtoa@d+2,w
  4989  0071  00C6               	movwf	dtoa@n+2
  4990  0072  0833               	movf	dtoa@d+3,w
  4991  0073  00C7               	movwf	dtoa@n+3
  4992  0074  0834               	movf	dtoa@d+4,w
  4993  0075  00C8               	movwf	dtoa@n+4
  4994  0076  0835               	movf	dtoa@d+5,w
  4995  0077  00C9               	movwf	dtoa@n+5
  4996  0078  0836               	movf	dtoa@d+6,w
  4997  0079  00CA               	movwf	dtoa@n+6
  4998  007A  0837               	movf	dtoa@d+7,w
  4999  007B  00CB               	movwf	dtoa@n+7
  5000  007C                     l2571:
  5001                           
  5002                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 294:     s = n < 
      +                          0 ? 1 : 0;
  5003  007C  3044               	movlw	low dtoa@n
  5004  007D  0086               	movwf	6
  5005  007E  3000               	movlw	high dtoa@n
  5006  007F  0087               	movwf	7
  5007  0080  3F47               	moviw [7]fsr1
  5008  0081  00B8               	movwf	??_dtoa
  5009  0082  1BB8               	btfsc	??_dtoa,7
  5010  0083  2885               	goto	u2511
  5011  0084  2887               	goto	u2510
  5012  0085                     u2511:
  5013  0085  3001               	movlw	1
  5014  0086  2888               	goto	u2520
  5015  0087                     u2510:
  5016  0087  3000               	movlw	0
  5017  0088                     u2520:
  5018  0088  0020               	movlb	0	; select bank0
  5019  0089  00B9               	movwf	??_dtoa+1
  5020  008A  01BA               	clrf	??_dtoa+2
  5021  008B  0839               	movf	??_dtoa+1,w
  5022  008C  00C2               	movwf	dtoa@s
  5023  008D  083A               	movf	??_dtoa+2,w
  5024  008E  00C3               	movwf	dtoa@s+1
  5025  008F                     l2573:
  5026                           
  5027                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 295:     if (s) {
  5028  008F  0842               	movf	dtoa@s,w
  5029  0090  0443               	iorwf	dtoa@s+1,w
  5030  0091  1903               	btfsc	3,2
  5031  0092  2894               	goto	u2531
  5032  0093  2895               	goto	u2530
  5033  0094                     u2531:
  5034  0094  28B3               	goto	l1003
  5035  0095                     u2530:
  5036  0095                     l2575:
  5037                           
  5038                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 296:         n = 
      +                          -n;
  5039  0095  09C4               	comf	dtoa@n,f
  5040  0096  09C5               	comf	dtoa@n+1,f
  5041  0097  09C6               	comf	dtoa@n+2,f
  5042  0098  09C7               	comf	dtoa@n+3,f
  5043  0099  09C8               	comf	dtoa@n+4,f
  5044  009A  09C9               	comf	dtoa@n+5,f
  5045  009B  09CA               	comf	dtoa@n+6,f
  5046  009C  09CB               	comf	dtoa@n+7,f
  5047  009D  0AC4               	incf	dtoa@n,f
  5048  009E  1D03               	skipz
  5049  009F  28B3               	goto	u254lld
  5050  00A0  0AC5               	incf	dtoa@n+1,f
  5051  00A1  1D03               	skipz
  5052  00A2  28B3               	goto	u254lld
  5053  00A3  0AC6               	incf	dtoa@n+2,f
  5054  00A4  1D03               	skipz
  5055  00A5  28B3               	goto	u254lld
  5056  00A6  0AC7               	incf	dtoa@n+3,f
  5057  00A7  1D03               	skipz
  5058  00A8  28B3               	goto	u254lld
  5059  00A9  0AC8               	incf	dtoa@n+4,f
  5060  00AA  1D03               	skipz
  5061  00AB  28B3               	goto	u254lld
  5062  00AC  0AC9               	incf	dtoa@n+5,f
  5063  00AD  1D03               	skipz
  5064  00AE  28B3               	goto	u254lld
  5065  00AF  0ACA               	incf	dtoa@n+6,f
  5066  00B0  1D03               	skipz
  5067  00B1  28B3               	goto	u254lld
  5068  00B2  0ACB               	incf	dtoa@n+7,f
  5069  00B3                     u254lld:
  5070  00B3                     l1003:	
  5071                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 297:     }
  5072                           
  5073                           
  5074                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 300:     if (!(pr
      +                          ec < 0)) {
  5075  00B3  0022               	movlb	2	; select bank2
  5076  00B4  1BAE               	btfsc	(_prec+1)^(0+256),7
  5077  00B5  28B7               	goto	u2551
  5078  00B6  28B8               	goto	u2550
  5079  00B7                     u2551:
  5080  00B7  28BD               	goto	l1004
  5081  00B8                     u2550:
  5082  00B8                     l2577:
  5083                           
  5084                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 301:         flag
      +                          s &= ~(1 << 1);
  5085  00B8  30FD               	movlw	253
  5086  00B9  0021               	movlb	1	; select bank1
  5087  00BA  05ED               	andwf	_flags^(0+128),f
  5088  00BB  30FF               	movlw	255
  5089  00BC  05EE               	andwf	(_flags+1)^(0+128),f
  5090  00BD                     l1004:	
  5091                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 302:     }
  5092                           
  5093                           
  5094                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 303:     p = (0 <
      +                           prec) ? prec : 1;
  5095  00BD  0022               	movlb	2	; select bank2
  5096  00BE  082E               	movf	(_prec+1)^(0+256),w
  5097  00BF  3A80               	xorlw	128
  5098  00C0  0020               	movlb	0	; select bank0
  5099  00C1  00B8               	movwf	??_dtoa
  5100  00C2  3080               	movlw	128
  5101  00C3  0238               	subwf	??_dtoa,w
  5102  00C4  1D03               	skipz
  5103  00C5  28C9               	goto	u2565
  5104  00C6  3001               	movlw	1
  5105  00C7  0022               	movlb	2	; select bank2
  5106  00C8  022D               	subwf	_prec^(0+256),w
  5107  00C9                     u2565:
  5108  00C9  1803               	skipnc
  5109  00CA  28CC               	goto	u2561
  5110  00CB  28CD               	goto	u2560
  5111  00CC                     u2561:
  5112  00CC  28D3               	goto	l2581
  5113  00CD                     u2560:
  5114  00CD                     l2579:
  5115  00CD  3001               	movlw	1
  5116  00CE  0020               	movlb	0	; select bank0
  5117  00CF  00BD               	movwf	dtoa@p
  5118  00D0  3000               	movlw	0
  5119  00D1  00BE               	movwf	dtoa@p+1
  5120  00D2  28DB               	goto	l1008
  5121  00D3                     l2581:
  5122  00D3  0022               	movlb	2	; select bank2
  5123  00D4  082E               	movf	(_prec+1)^(0+256),w
  5124  00D5  0020               	movlb	0	; select bank0
  5125  00D6  00BE               	movwf	dtoa@p+1
  5126  00D7  0022               	movlb	2	; select bank2
  5127  00D8  082D               	movf	_prec^(0+256),w
  5128  00D9  0020               	movlb	0	; select bank0
  5129  00DA  00BD               	movwf	dtoa@p
  5130  00DB                     l1008:
  5131                           
  5132                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 304:     w = widt
      +                          h;
  5133  00DB  0022               	movlb	2	; select bank2
  5134  00DC  082C               	movf	(_width+1)^(0+256),w
  5135  00DD  0020               	movlb	0	; select bank0
  5136  00DE  00C1               	movwf	dtoa@w+1
  5137  00DF  0022               	movlb	2	; select bank2
  5138  00E0  082B               	movf	_width^(0+256),w
  5139  00E1  0020               	movlb	0	; select bank0
  5140  00E2  00C0               	movwf	dtoa@w
  5141  00E3                     l2583:
  5142                           
  5143                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 305:     if (s ||
      +                           (flags & (1 << 2))) {
  5144  00E3  0842               	movf	dtoa@s,w
  5145  00E4  0443               	iorwf	dtoa@s+1,w
  5146  00E5  1D03               	btfss	3,2
  5147  00E6  28E8               	goto	u2571
  5148  00E7  28E9               	goto	u2570
  5149  00E8                     u2571:
  5150  00E8  28EE               	goto	l2587
  5151  00E9                     u2570:
  5152  00E9                     l2585:
  5153  00E9  0021               	movlb	1	; select bank1
  5154  00EA  1D6D               	btfss	_flags^(0+128),2
  5155  00EB  28ED               	goto	u2581
  5156  00EC  28EE               	goto	u2580
  5157  00ED                     u2581:
  5158  00ED  28F3               	goto	l1009
  5159  00EE                     u2580:
  5160  00EE                     l2587:
  5161                           
  5162                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 306:         --w;
  5163  00EE  30FF               	movlw	255
  5164  00EF  0020               	movlb	0	; select bank0
  5165  00F0  07C0               	addwf	dtoa@w,f
  5166  00F1  30FF               	movlw	255
  5167  00F2  3DC1               	addwfc	dtoa@w+1,f
  5168  00F3                     l1009:	
  5169                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 307:     }
  5170                           
  5171                           
  5172                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 310:     i = size
      +                          of(dbuf) - 1;
  5173  00F3  301F               	movlw	31
  5174  00F4  0020               	movlb	0	; select bank0
  5175  00F5  00CC               	movwf	dtoa@i
  5176  00F6  3000               	movlw	0
  5177  00F7  00CD               	movwf	dtoa@i+1
  5178  00F8                     l2589:
  5179                           
  5180                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 311:     dbuf[i] 
      +                          = '\0';
  5181  00F8  0022               	movlb	2	; select bank2
  5182  00F9  01CE               	clrf	(_dbuf^(0+256)+31)
  5183                           
  5184                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 312:     while (!
      +                          (i < 1) && (n || (0 < p) || ((0 < w) && (flags & (1 << 1))))) {
  5185  00FA  2964               	goto	l1012
  5186  00FB                     l2591:
  5187                           
  5188                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 313:         --i;
  5189  00FB  30FF               	movlw	255
  5190  00FC  0020               	movlb	0	; select bank0
  5191  00FD  07CC               	addwf	dtoa@i,f
  5192  00FE  30FF               	movlw	255
  5193  00FF  3DCD               	addwfc	dtoa@i+1,f
  5194  0100                     l2593:
  5195                           
  5196                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 314:         dbuf
      +                          [i] = (char)((int)'0' + abs(n % 10));
  5197  0100  300A               	movlw	10
  5198  0101  00A0               	movwf	___aomod@divisor
  5199  0102  01A1               	clrf	___aomod@divisor+1
  5200  0103  01A2               	clrf	___aomod@divisor+2
  5201  0104  01A3               	clrf	___aomod@divisor+3
  5202  0105  01A4               	clrf	___aomod@divisor+4
  5203  0106  01A5               	clrf	___aomod@divisor+5
  5204  0107  01A6               	clrf	___aomod@divisor+6
  5205  0108  01A7               	clrf	___aomod@divisor+7
  5206  0109  0844               	movf	dtoa@n,w
  5207  010A  00A8               	movwf	___aomod@dividend
  5208  010B  0845               	movf	dtoa@n+1,w
  5209  010C  00A9               	movwf	___aomod@dividend+1
  5210  010D  0846               	movf	dtoa@n+2,w
  5211  010E  00AA               	movwf	___aomod@dividend+2
  5212  010F  0847               	movf	dtoa@n+3,w
  5213  0110  00AB               	movwf	___aomod@dividend+3
  5214  0111  0848               	movf	dtoa@n+4,w
  5215  0112  00AC               	movwf	___aomod@dividend+4
  5216  0113  0849               	movf	dtoa@n+5,w
  5217  0114  00AD               	movwf	___aomod@dividend+5
  5218  0115  084A               	movf	dtoa@n+6,w
  5219  0116  00AE               	movwf	___aomod@dividend+6
  5220  0117  084B               	movf	dtoa@n+7,w
  5221  0118  00AF               	movwf	___aomod@dividend+7
  5222  0119  318D  2526  3180   	fcall	___aomod
  5223  011C  0020               	movlb	0	; select bank0
  5224  011D  0821               	movf	?___aomod+1,w
  5225  011E  00F4               	movwf	abs@a+1
  5226  011F  0820               	movf	?___aomod,w
  5227  0120  00F3               	movwf	abs@a
  5228  0121  3193  232F  3180   	fcall	_abs
  5229  0124  0873               	movf	?_abs,w
  5230  0125  3E30               	addlw	48
  5231  0126  0020               	movlb	0	; select bank0
  5232  0127  00B8               	movwf	??_dtoa
  5233  0128  084C               	movf	dtoa@i,w
  5234  0129  3E2F               	addlw	(low (_dbuf| (0+256)))& (0+255)
  5235  012A  0086               	movwf	6
  5236  012B  3001               	movlw	1	; select bank2/3
  5237  012C  0087               	movwf	7
  5238  012D  0838               	movf	??_dtoa,w
  5239  012E  0081               	movwf	1
  5240  012F                     l2595:
  5241                           
  5242                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 315:         --p;
  5243  012F  30FF               	movlw	255
  5244  0130  07BD               	addwf	dtoa@p,f
  5245  0131  30FF               	movlw	255
  5246  0132  3DBE               	addwfc	dtoa@p+1,f
  5247  0133                     l2597:
  5248                           
  5249                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 316:         --w;
  5250  0133  30FF               	movlw	255
  5251  0134  07C0               	addwf	dtoa@w,f
  5252  0135  30FF               	movlw	255
  5253  0136  3DC1               	addwfc	dtoa@w+1,f
  5254  0137                     l2599:
  5255                           
  5256                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 317:         n = 
      +                          n / 10;
  5257  0137  300A               	movlw	10
  5258  0138  00A0               	movwf	___aodiv@divisor
  5259  0139  01A1               	clrf	___aodiv@divisor+1
  5260  013A  01A2               	clrf	___aodiv@divisor+2
  5261  013B  01A3               	clrf	___aodiv@divisor+3
  5262  013C  01A4               	clrf	___aodiv@divisor+4
  5263  013D  01A5               	clrf	___aodiv@divisor+5
  5264  013E  01A6               	clrf	___aodiv@divisor+6
  5265  013F  01A7               	clrf	___aodiv@divisor+7
  5266  0140  0844               	movf	dtoa@n,w
  5267  0141  00A8               	movwf	___aodiv@dividend
  5268  0142  0845               	movf	dtoa@n+1,w
  5269  0143  00A9               	movwf	___aodiv@dividend+1
  5270  0144  0846               	movf	dtoa@n+2,w
  5271  0145  00AA               	movwf	___aodiv@dividend+2
  5272  0146  0847               	movf	dtoa@n+3,w
  5273  0147  00AB               	movwf	___aodiv@dividend+3
  5274  0148  0848               	movf	dtoa@n+4,w
  5275  0149  00AC               	movwf	___aodiv@dividend+4
  5276  014A  0849               	movf	dtoa@n+5,w
  5277  014B  00AD               	movwf	___aodiv@dividend+5
  5278  014C  084A               	movf	dtoa@n+6,w
  5279  014D  00AE               	movwf	___aodiv@dividend+6
  5280  014E  084B               	movf	dtoa@n+7,w
  5281  014F  00AF               	movwf	___aodiv@dividend+7
  5282  0150  318E  26FF  3180   	fcall	___aodiv
  5283  0153  0020               	movlb	0	; select bank0
  5284  0154  0820               	movf	?___aodiv,w
  5285  0155  00C4               	movwf	dtoa@n
  5286  0156  0821               	movf	?___aodiv+1,w
  5287  0157  00C5               	movwf	dtoa@n+1
  5288  0158  0822               	movf	?___aodiv+2,w
  5289  0159  00C6               	movwf	dtoa@n+2
  5290  015A  0823               	movf	?___aodiv+3,w
  5291  015B  00C7               	movwf	dtoa@n+3
  5292  015C  0824               	movf	?___aodiv+4,w
  5293  015D  00C8               	movwf	dtoa@n+4
  5294  015E  0825               	movf	?___aodiv+5,w
  5295  015F  00C9               	movwf	dtoa@n+5
  5296  0160  0826               	movf	?___aodiv+6,w
  5297  0161  00CA               	movwf	dtoa@n+6
  5298  0162  0827               	movf	?___aodiv+7,w
  5299  0163  00CB               	movwf	dtoa@n+7
  5300  0164                     l1012:	
  5301                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 318:     }
  5302                           
  5303                           
  5304                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 312:     while (!
      +                          (i < 1) && (n || (0 < p) || ((0 < w) && (flags & (1 << 1))))) {
  5305  0164  0020               	movlb	0	; select bank0
  5306  0165  084D               	movf	dtoa@i+1,w
  5307  0166  3A80               	xorlw	128
  5308  0167  00B8               	movwf	??_dtoa
  5309  0168  3080               	movlw	128
  5310  0169  0238               	subwf	??_dtoa,w
  5311  016A  1D03               	skipz
  5312  016B  296E               	goto	u2595
  5313  016C  3001               	movlw	1
  5314  016D  024C               	subwf	dtoa@i,w
  5315  016E                     u2595:
  5316  016E  1C03               	skipc
  5317  016F  2971               	goto	u2591
  5318  0170  2972               	goto	u2590
  5319  0171                     u2591:
  5320  0171  299F               	goto	l2609
  5321  0172                     u2590:
  5322  0172                     l2601:
  5323  0172  0020               	movlb	0	; select bank0
  5324  0173  0844               	movf	dtoa@n,w
  5325  0174  0445               	iorwf	dtoa@n+1,w
  5326  0175  0446               	iorwf	dtoa@n+2,w
  5327  0176  0447               	iorwf	dtoa@n+3,w
  5328  0177  0448               	iorwf	dtoa@n+4,w
  5329  0178  0449               	iorwf	dtoa@n+5,w
  5330  0179  044A               	iorwf	dtoa@n+6,w
  5331  017A  044B               	iorwf	dtoa@n+7,w
  5332  017B  1D03               	skipz
  5333  017C  297E               	goto	u2601
  5334  017D  297F               	goto	u2600
  5335  017E                     u2601:
  5336  017E  28FB               	goto	l2591
  5337  017F                     u2600:
  5338  017F                     l2603:
  5339  017F  083E               	movf	dtoa@p+1,w
  5340  0180  3A80               	xorlw	128
  5341  0181  00B8               	movwf	??_dtoa
  5342  0182  3080               	movlw	128
  5343  0183  0238               	subwf	??_dtoa,w
  5344  0184  1D03               	skipz
  5345  0185  2988               	goto	u2615
  5346  0186  3001               	movlw	1
  5347  0187  023D               	subwf	dtoa@p,w
  5348  0188                     u2615:
  5349  0188  1803               	skipnc
  5350  0189  298B               	goto	u2611
  5351  018A  298C               	goto	u2610
  5352  018B                     u2611:
  5353  018B  28FB               	goto	l2591
  5354  018C                     u2610:
  5355  018C                     l2605:
  5356  018C  0020               	movlb	0	; select bank0
  5357  018D  0841               	movf	dtoa@w+1,w
  5358  018E  3A80               	xorlw	128
  5359  018F  00B8               	movwf	??_dtoa
  5360  0190  3080               	movlw	128
  5361  0191  0238               	subwf	??_dtoa,w
  5362  0192  1D03               	skipz
  5363  0193  2996               	goto	u2625
  5364  0194  3001               	movlw	1
  5365  0195  0240               	subwf	dtoa@w,w
  5366  0196                     u2625:
  5367  0196  1C03               	skipc
  5368  0197  2999               	goto	u2621
  5369  0198  299A               	goto	u2620
  5370  0199                     u2621:
  5371  0199  299F               	goto	l2609
  5372  019A                     u2620:
  5373  019A                     l2607:
  5374  019A  0021               	movlb	1	; select bank1
  5375  019B  18ED               	btfsc	_flags^(0+128),1
  5376  019C  299E               	goto	u2631
  5377  019D  299F               	goto	u2630
  5378  019E                     u2631:
  5379  019E  28FB               	goto	l2591
  5380  019F                     u2630:
  5381  019F                     l2609:
  5382                           
  5383                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 321:     if (s ||
      +                           (flags & (1 << 2))) {
  5384  019F  0020               	movlb	0	; select bank0
  5385  01A0  0842               	movf	dtoa@s,w
  5386  01A1  0443               	iorwf	dtoa@s+1,w
  5387  01A2  1D03               	btfss	3,2
  5388  01A3  29A5               	goto	u2641
  5389  01A4  29A6               	goto	u2640
  5390  01A5                     u2641:
  5391  01A5  29AB               	goto	l2613
  5392  01A6                     u2640:
  5393  01A6                     l2611:
  5394  01A6  0021               	movlb	1	; select bank1
  5395  01A7  1D6D               	btfss	_flags^(0+128),2
  5396  01A8  29AA               	goto	u2651
  5397  01A9  29AB               	goto	u2650
  5398  01AA                     u2651:
  5399  01AA  29C8               	goto	l2623
  5400  01AB                     u2650:
  5401  01AB                     l2613:
  5402                           
  5403                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 322:         --i;
  5404  01AB  30FF               	movlw	255
  5405  01AC  0020               	movlb	0	; select bank0
  5406  01AD  07CC               	addwf	dtoa@i,f
  5407  01AE  30FF               	movlw	255
  5408  01AF  3DCD               	addwfc	dtoa@i+1,f
  5409  01B0                     l2615:
  5410                           
  5411                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 323:         dbuf
      +                          [i] = s ? '-' : '+';
  5412  01B0  0842               	movf	dtoa@s,w
  5413  01B1  0443               	iorwf	dtoa@s+1,w
  5414  01B2  1D03               	btfss	3,2
  5415  01B3  29B5               	goto	u2661
  5416  01B4  29B6               	goto	u2660
  5417  01B5                     u2661:
  5418  01B5  29BB               	goto	l2619
  5419  01B6                     u2660:
  5420  01B6                     l2617:
  5421  01B6  302B               	movlw	43
  5422  01B7  00BB               	movwf	_dtoa$1179
  5423  01B8  3000               	movlw	0
  5424  01B9  00BC               	movwf	_dtoa$1179+1
  5425  01BA  29BF               	goto	l2621
  5426  01BB                     l2619:
  5427  01BB  302D               	movlw	45
  5428  01BC  00BB               	movwf	_dtoa$1179
  5429  01BD  3000               	movlw	0
  5430  01BE  00BC               	movwf	_dtoa$1179+1
  5431  01BF                     l2621:
  5432  01BF  083B               	movf	_dtoa$1179,w
  5433  01C0  00B8               	movwf	??_dtoa
  5434  01C1  084C               	movf	dtoa@i,w
  5435  01C2  3E2F               	addlw	(low (_dbuf| (0+256)))& (0+255)
  5436  01C3  0086               	movwf	6
  5437  01C4  3001               	movlw	1	; select bank2/3
  5438  01C5  0087               	movwf	7
  5439  01C6  0838               	movf	??_dtoa,w
  5440  01C7  0081               	movwf	1
  5441  01C8                     l2623:
  5442                           
  5443                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 327:     return p
      +                          ad(fp, &dbuf[i], w);
  5444  01C8  0020               	movlb	0	; select bank0
  5445  01C9  084C               	movf	dtoa@i,w
  5446  01CA  3E2F               	addlw	(low (_dbuf| (0+256)))& (0+255)
  5447  01CB  00B8               	movwf	??_dtoa
  5448  01CC  0838               	movf	??_dtoa,w
  5449  01CD  00A4               	movwf	pad@buf
  5450  01CE  0841               	movf	dtoa@w+1,w
  5451  01CF  00A6               	movwf	pad@p+1
  5452  01D0  0840               	movf	dtoa@w,w
  5453  01D1  00A5               	movwf	pad@p
  5454  01D2  083F               	movf	dtoa@fp,w
  5455  01D3  3195  25A5  3180   	fcall	_pad
  5456  01D6  0020               	movlb	0	; select bank0
  5457  01D7  0825               	movf	?_pad+1,w
  5458  01D8  00B1               	movwf	?_dtoa+1
  5459  01D9  0824               	movf	?_pad,w
  5460  01DA  00B0               	movwf	?_dtoa
  5461  01DB                     l1026:
  5462  01DB  0008               	return
  5463  01DC                     __end_of_dtoa:
  5464                           
  5465                           	psect	text11
  5466  15A5                     __ptext11:	
  5467 ;; *************** function _pad *****************
  5468 ;; Defined at:
  5469 ;;		line 72 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c"
  5470 ;; Parameters:    Size  Location     Type
  5471 ;;  fp              1    wreg     PTR struct _IO_FILE
  5472 ;;		 -> sprintf@f(5), 
  5473 ;;  buf             1    4[BANK0 ] PTR unsigned char 
  5474 ;;		 -> dbuf(32), 
  5475 ;;  p               2    5[BANK0 ] int 
  5476 ;; Auto vars:     Size  Location     Type
  5477 ;;  fp              1   11[BANK0 ] PTR struct _IO_FILE
  5478 ;;		 -> sprintf@f(5), 
  5479 ;;  w               2    9[BANK0 ] int 
  5480 ;;  i               2    7[BANK0 ] int 
  5481 ;; Return value:  Size  Location     Type
  5482 ;;                  2    4[BANK0 ] int 
  5483 ;; Registers used:
  5484 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  5485 ;; Tracked objects:
  5486 ;;		On entry : 0/0
  5487 ;;		On exit  : 0/0
  5488 ;;		Unchanged: 0/0
  5489 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  5490 ;;      Params:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5491 ;;      Locals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5492 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5493 ;;      Totals:         1       8       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5494 ;;Total ram usage:        9 bytes
  5495 ;; Hardware stack levels used: 1
  5496 ;; Hardware stack levels required when called: 3
  5497 ;; This function calls:
  5498 ;;		_fputc
  5499 ;;		_fputs
  5500 ;;		_strlen
  5501 ;; This function is called by:
  5502 ;;		_dtoa
  5503 ;;		_utoa
  5504 ;; This function uses a non-reentrant model
  5505 ;;
  5506                           
  5507                           
  5508                           ;psect for function _pad
  5509  15A5                     _pad:
  5510                           
  5511                           ;incstack = 0
  5512                           ; Regs used in _pad: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  5513                           ;pad@fp stored from wreg
  5514  15A5  0020               	movlb	0	; select bank0
  5515  15A6  00AB               	movwf	pad@fp
  5516  15A7                     l2533:
  5517                           
  5518                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 72: static int pa
      +                          d(FILE *fp, char *buf, int p);C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\commo
      +                          n\doprnt.c: 73: {;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 
      +                          74:     int i, w;;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 
      +                          77:     if (flags & (1 << 0)) {
  5519  15A7  0021               	movlb	1	; select bank1
  5520  15A8  1C6D               	btfss	_flags^(0+128),0
  5521  15A9  2DAB               	goto	u2461
  5522  15AA  2DAC               	goto	u2460
  5523  15AB                     u2461:
  5524  15AB  2DB5               	goto	l2537
  5525  15AC                     u2460:
  5526  15AC                     l2535:
  5527                           
  5528                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 78:         fputs
      +                          ((const char *)buf, fp);
  5529  15AC  0020               	movlb	0	; select bank0
  5530  15AD  082B               	movf	pad@fp,w
  5531  15AE  00FC               	movwf	??_pad
  5532  15AF  087C               	movf	??_pad,w
  5533  15B0  00F8               	movwf	fputs@fp
  5534  15B1  0824               	movf	pad@buf,w
  5535  15B2  3194  2426  3195   	fcall	_fputs
  5536  15B5                     l2537:
  5537                           
  5538                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 82:     w = (p < 
      +                          0) ? 0 : p;
  5539  15B5  0020               	movlb	0	; select bank0
  5540  15B6  1BA6               	btfsc	pad@p+1,7
  5541  15B7  2DB9               	goto	u2471
  5542  15B8  2DBA               	goto	u2470
  5543  15B9                     u2471:
  5544  15B9  2DBF               	goto	l2541
  5545  15BA                     u2470:
  5546  15BA                     l2539:
  5547  15BA  0826               	movf	pad@p+1,w
  5548  15BB  00AA               	movwf	pad@w+1
  5549  15BC  0825               	movf	pad@p,w
  5550  15BD  00A9               	movwf	pad@w
  5551  15BE  2DC1               	goto	l995
  5552  15BF                     l2541:
  5553  15BF  01A9               	clrf	pad@w
  5554  15C0  01AA               	clrf	pad@w+1
  5555  15C1                     l995:
  5556                           
  5557                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 83:     i = 0;
  5558  15C1  01A7               	clrf	pad@i
  5559  15C2  01A8               	clrf	pad@i+1
  5560                           
  5561                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 84:     while (i 
      +                          < w) {
  5562  15C3  2DD5               	goto	l2547
  5563  15C4                     l2543:
  5564                           
  5565                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 85:         fputc
      +                          (' ', fp);
  5566  15C4  3020               	movlw	32
  5567  15C5  00F0               	movwf	fputc@c
  5568  15C6  3000               	movlw	0
  5569  15C7  00F1               	movwf	fputc@c+1
  5570  15C8  0020               	movlb	0	; select bank0
  5571  15C9  082B               	movf	pad@fp,w
  5572  15CA  00FC               	movwf	??_pad
  5573  15CB  087C               	movf	??_pad,w
  5574  15CC  00F2               	movwf	fputc@fp
  5575  15CD  3194  24FF  3195   	fcall	_fputc
  5576  15D0                     l2545:
  5577                           
  5578                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 86:         ++i;
  5579  15D0  3001               	movlw	1
  5580  15D1  0020               	movlb	0	; select bank0
  5581  15D2  07A7               	addwf	pad@i,f
  5582  15D3  3000               	movlw	0
  5583  15D4  3DA8               	addwfc	pad@i+1,f
  5584  15D5                     l2547:
  5585                           
  5586                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 84:     while (i 
      +                          < w) {
  5587  15D5  0828               	movf	pad@i+1,w
  5588  15D6  3A80               	xorlw	128
  5589  15D7  00FC               	movwf	??_pad
  5590  15D8  082A               	movf	pad@w+1,w
  5591  15D9  3A80               	xorlw	128
  5592  15DA  027C               	subwf	??_pad,w
  5593  15DB  1D03               	skipz
  5594  15DC  2DDF               	goto	u2485
  5595  15DD  0829               	movf	pad@w,w
  5596  15DE  0227               	subwf	pad@i,w
  5597  15DF                     u2485:
  5598  15DF  1C03               	skipc
  5599  15E0  2DE2               	goto	u2481
  5600  15E1  2DE3               	goto	u2480
  5601  15E2                     u2481:
  5602  15E2  2DC4               	goto	l2543
  5603  15E3                     u2480:
  5604  15E3                     l998:
  5605                           
  5606                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 90:     if (!(fla
      +                          gs & (1 << 0))) {
  5607  15E3  0021               	movlb	1	; select bank1
  5608  15E4  186D               	btfsc	_flags^(0+128),0
  5609  15E5  2DE7               	goto	u2491
  5610  15E6  2DE8               	goto	u2490
  5611  15E7                     u2491:
  5612  15E7  2DF1               	goto	l2551
  5613  15E8                     u2490:
  5614  15E8                     l2549:
  5615                           
  5616                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 91:         fputs
      +                          ((const char *)buf, fp);
  5617  15E8  0020               	movlb	0	; select bank0
  5618  15E9  082B               	movf	pad@fp,w
  5619  15EA  00FC               	movwf	??_pad
  5620  15EB  087C               	movf	??_pad,w
  5621  15EC  00F8               	movwf	fputs@fp
  5622  15ED  0824               	movf	pad@buf,w
  5623  15EE  3194  2426  3195   	fcall	_fputs
  5624  15F1                     l2551:
  5625                           
  5626                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 94:     return (i
      +                          nt)(strlen(buf) + (size_t)w);
  5627  15F1  0020               	movlb	0	; select bank0
  5628  15F2  0824               	movf	pad@buf,w
  5629  15F3  3193  2349  3195   	fcall	_strlen
  5630  15F6  0020               	movlb	0	; select bank0
  5631  15F7  0829               	movf	pad@w,w
  5632  15F8  0770               	addwf	?_strlen,w
  5633  15F9  00A4               	movwf	?_pad
  5634  15FA  082A               	movf	pad@w+1,w
  5635  15FB  3D71               	addwfc	?_strlen+1,w
  5636  15FC  00A5               	movwf	?_pad+1
  5637  15FD                     l1000:
  5638  15FD  0008               	return
  5639  15FE                     __end_of_pad:
  5640                           
  5641                           	psect	text12
  5642  1349                     __ptext12:	
  5643 ;; *************** function _strlen *****************
  5644 ;; Defined at:
  5645 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\strlen.c"
  5646 ;; Parameters:    Size  Location     Type
  5647 ;;  s               1    wreg     PTR const unsigned char 
  5648 ;;		 -> dbuf(32), 
  5649 ;; Auto vars:     Size  Location     Type
  5650 ;;  s               1    4[COMMON] PTR const unsigned char 
  5651 ;;		 -> dbuf(32), 
  5652 ;;  a               1    3[COMMON] PTR const unsigned char 
  5653 ;;		 -> dbuf(32), 
  5654 ;; Return value:  Size  Location     Type
  5655 ;;                  2    0[COMMON] unsigned int 
  5656 ;; Registers used:
  5657 ;;		wreg, fsr1l, fsr1h, status,2, status,0
  5658 ;; Tracked objects:
  5659 ;;		On entry : 0/0
  5660 ;;		On exit  : 0/0
  5661 ;;		Unchanged: 0/0
  5662 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  5663 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5664 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5665 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5666 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5667 ;;Total ram usage:        5 bytes
  5668 ;; Hardware stack levels used: 1
  5669 ;; This function calls:
  5670 ;;		Nothing
  5671 ;; This function is called by:
  5672 ;;		_pad
  5673 ;; This function uses a non-reentrant model
  5674 ;;
  5675                           
  5676                           
  5677                           ;psect for function _strlen
  5678  1349                     _strlen:
  5679                           
  5680                           ;incstack = 0
  5681                           ; Regs used in _strlen: [wreg+fsr1l+fsr1h+status,2+status,0]
  5682                           ;strlen@s stored from wreg
  5683  1349  00F4               	movwf	strlen@s
  5684  134A                     l2407:
  5685  134A  0874               	movf	strlen@s,w
  5686  134B  00F2               	movwf	??_strlen
  5687  134C  0872               	movf	??_strlen,w
  5688  134D  00F3               	movwf	strlen@a
  5689  134E  2B53               	goto	l2411
  5690  134F                     l2409:
  5691  134F  3001               	movlw	1
  5692  1350  00F2               	movwf	??_strlen
  5693  1351  0872               	movf	??_strlen,w
  5694  1352  07F4               	addwf	strlen@s,f
  5695  1353                     l2411:
  5696  1353  0874               	movf	strlen@s,w
  5697  1354  0086               	movwf	6
  5698  1355  3001               	movlw	1	; select bank2/3
  5699  1356  0087               	movwf	7
  5700  1357  0801               	movf	1,w
  5701  1358  1D03               	btfss	3,2
  5702  1359  2B5B               	goto	u2111
  5703  135A  2B5C               	goto	u2110
  5704  135B                     u2111:
  5705  135B  2B4F               	goto	l2409
  5706  135C                     u2110:
  5707  135C                     l2413:
  5708  135C  0873               	movf	strlen@a,w
  5709  135D  0274               	subwf	strlen@s,w
  5710  135E  00F0               	movwf	?_strlen
  5711  135F  01F1               	clrf	?_strlen+1
  5712  1360  1BF0               	btfsc	?_strlen,7
  5713  1361  03F1               	decf	?_strlen+1,f
  5714  1362                     l1096:
  5715  1362  0008               	return
  5716  1363                     __end_of_strlen:
  5717                           
  5718                           	psect	text13
  5719  1426                     __ptext13:	
  5720 ;; *************** function _fputs *****************
  5721 ;; Defined at:
  5722 ;;		line 8 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\nf_fputs.c"
  5723 ;; Parameters:    Size  Location     Type
  5724 ;;  s               1    wreg     PTR const unsigned char 
  5725 ;;		 -> dbuf(32), 
  5726 ;;  fp              1    8[COMMON] PTR struct _IO_FILE
  5727 ;;		 -> sprintf@f(5), 
  5728 ;; Auto vars:     Size  Location     Type
  5729 ;;  s               1    3[BANK0 ] PTR const unsigned char 
  5730 ;;		 -> dbuf(32), 
  5731 ;;  i               2    1[BANK0 ] int 
  5732 ;;  c               1    0[BANK0 ] unsigned char 
  5733 ;; Return value:  Size  Location     Type
  5734 ;;                  2    8[COMMON] int 
  5735 ;; Registers used:
  5736 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  5737 ;; Tracked objects:
  5738 ;;		On entry : 0/0
  5739 ;;		On exit  : 0/0
  5740 ;;		Unchanged: 0/0
  5741 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  5742 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5743 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5744 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5745 ;;      Totals:         4       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5746 ;;Total ram usage:        8 bytes
  5747 ;; Hardware stack levels used: 1
  5748 ;; Hardware stack levels required when called: 2
  5749 ;; This function calls:
  5750 ;;		_fputc
  5751 ;; This function is called by:
  5752 ;;		_pad
  5753 ;; This function uses a non-reentrant model
  5754 ;;
  5755                           
  5756                           
  5757                           ;psect for function _fputs
  5758  1426                     _fputs:
  5759                           
  5760                           ;incstack = 0
  5761                           ; Regs used in _fputs: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  5762                           ;fputs@s stored from wreg
  5763  1426  0020               	movlb	0	; select bank0
  5764  1427  00A3               	movwf	fputs@s
  5765  1428                     l2399:
  5766  1428  01A1               	clrf	fputs@i
  5767  1429  01A2               	clrf	fputs@i+1
  5768  142A  2C3E               	goto	l2405
  5769  142B                     l2401:
  5770  142B  0820               	movf	fputs@c,w
  5771  142C  00F9               	movwf	??_fputs
  5772  142D  01FA               	clrf	??_fputs+1
  5773  142E  0879               	movf	??_fputs,w
  5774  142F  00F0               	movwf	fputc@c
  5775  1430  087A               	movf	??_fputs+1,w
  5776  1431  00F1               	movwf	fputc@c+1
  5777  1432  0878               	movf	fputs@fp,w
  5778  1433  00FB               	movwf	??_fputs+2
  5779  1434  087B               	movf	??_fputs+2,w
  5780  1435  00F2               	movwf	fputc@fp
  5781  1436  3194  24FF  3194   	fcall	_fputc
  5782  1439                     l2403:
  5783  1439  3001               	movlw	1
  5784  143A  0020               	movlb	0	; select bank0
  5785  143B  07A1               	addwf	fputs@i,f
  5786  143C  3000               	movlw	0
  5787  143D  3DA2               	addwfc	fputs@i+1,f
  5788  143E                     l2405:
  5789  143E  0821               	movf	fputs@i,w
  5790  143F  0723               	addwf	fputs@s,w
  5791  1440  00F9               	movwf	??_fputs
  5792  1441  0879               	movf	??_fputs,w
  5793  1442  0086               	movwf	6
  5794  1443  3001               	movlw	1	; select bank2/3
  5795  1444  0087               	movwf	7
  5796  1445  0801               	movf	1,w
  5797  1446  00FA               	movwf	??_fputs+1
  5798  1447  087A               	movf	??_fputs+1,w
  5799  1448  00A0               	movwf	fputs@c
  5800  1449  0820               	movf	fputs@c,w
  5801  144A  1D03               	btfss	3,2
  5802  144B  2C4D               	goto	u2101
  5803  144C  2C4E               	goto	u2100
  5804  144D                     u2101:
  5805  144D  2C2B               	goto	l2401
  5806  144E                     u2100:
  5807  144E                     l1087:
  5808  144E  0008               	return
  5809  144F                     __end_of_fputs:
  5810                           
  5811                           	psect	text14
  5812  14FF                     __ptext14:	
  5813 ;; *************** function _fputc *****************
  5814 ;; Defined at:
  5815 ;;		line 8 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\nf_fputc.c"
  5816 ;; Parameters:    Size  Location     Type
  5817 ;;  c               2    0[COMMON] int 
  5818 ;;  fp              1    2[COMMON] PTR struct _IO_FILE
  5819 ;;		 -> sprintf@f(5), 
  5820 ;; Auto vars:     Size  Location     Type
  5821 ;;		None
  5822 ;; Return value:  Size  Location     Type
  5823 ;;                  2    0[COMMON] int 
  5824 ;; Registers used:
  5825 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  5826 ;; Tracked objects:
  5827 ;;		On entry : 0/0
  5828 ;;		On exit  : 0/0
  5829 ;;		Unchanged: 0/0
  5830 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  5831 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5832 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5833 ;;      Temps:          5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5834 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5835 ;;Total ram usage:        8 bytes
  5836 ;; Hardware stack levels used: 1
  5837 ;; Hardware stack levels required when called: 1
  5838 ;; This function calls:
  5839 ;;		_putch
  5840 ;; This function is called by:
  5841 ;;		_pad
  5842 ;;		_vfpfcnvrt
  5843 ;;		_fputs
  5844 ;; This function uses a non-reentrant model
  5845 ;;
  5846                           
  5847                           
  5848                           ;psect for function _fputc
  5849  14FF                     _fputc:
  5850  14FF                     l2377:	
  5851                           ;incstack = 0
  5852                           ; Regs used in _fputc: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  5853                           
  5854  14FF  0872               	movf	fputc@fp,w
  5855  1500  1903               	btfsc	3,2
  5856  1501  2D03               	goto	u2041
  5857  1502  2D04               	goto	u2040
  5858  1503                     u2041:
  5859  1503  2D09               	goto	l2381
  5860  1504                     u2040:
  5861  1504                     l2379:
  5862  1504  0872               	movf	fputc@fp,w
  5863  1505  1D03               	btfss	3,2
  5864  1506  2D08               	goto	u2051
  5865  1507  2D09               	goto	u2050
  5866  1508                     u2051:
  5867  1508  2D0E               	goto	l2383
  5868  1509                     u2050:
  5869  1509                     l2381:
  5870  1509  0870               	movf	fputc@c,w
  5871  150A  3192  229D  3194   	fcall	_putch
  5872  150D  2D4D               	goto	l1079
  5873  150E                     l2383:
  5874  150E  0872               	movf	fputc@fp,w
  5875  150F  3E03               	addlw	3
  5876  1510  0086               	movwf	6
  5877  1511  0187               	clrf	7
  5878  1512  0016               	moviw fsr1++
  5879  1513  0401               	iorwf	1,w
  5880  1514  1903               	btfsc	3,2
  5881  1515  2D17               	goto	u2061
  5882  1516  2D18               	goto	u2060
  5883  1517                     u2061:
  5884  1517  2D35               	goto	l2387
  5885  1518                     u2060:
  5886  1518                     l2385:
  5887  1518  0872               	movf	fputc@fp,w
  5888  1519  3E03               	addlw	3
  5889  151A  0086               	movwf	6
  5890  151B  0187               	clrf	7
  5891  151C  3F40               	moviw [0]fsr1
  5892  151D  00F3               	movwf	??_fputc
  5893  151E  3F41               	moviw [1]fsr1
  5894  151F  00F4               	movwf	??_fputc+1
  5895  1520  0A72               	incf	fputc@fp,w
  5896  1521  0086               	movwf	6
  5897  1522  0187               	clrf	7
  5898  1523  3F40               	moviw [0]fsr1
  5899  1524  00F5               	movwf	??_fputc+2
  5900  1525  3F41               	moviw [1]fsr1
  5901  1526  00F6               	movwf	??_fputc+3
  5902  1527  0876               	movf	??_fputc+3,w
  5903  1528  3A80               	xorlw	128
  5904  1529  00F7               	movwf	??_fputc+4
  5905  152A  0874               	movf	??_fputc+1,w
  5906  152B  3A80               	xorlw	128
  5907  152C  0277               	subwf	??_fputc+4,w
  5908  152D  1D03               	skipz
  5909  152E  2D31               	goto	u2075
  5910  152F  0873               	movf	??_fputc,w
  5911  1530  0275               	subwf	??_fputc+2,w
  5912  1531                     u2075:
  5913  1531  1803               	skipnc
  5914  1532  2D34               	goto	u2071
  5915  1533  2D35               	goto	u2070
  5916  1534                     u2071:
  5917  1534  2D4D               	goto	l1079
  5918  1535                     u2070:
  5919  1535                     l2387:
  5920  1535  0870               	movf	fputc@c,w
  5921  1536  00F3               	movwf	??_fputc
  5922  1537  0872               	movf	fputc@fp,w
  5923  1538  0086               	movwf	6
  5924  1539  0187               	clrf	7
  5925  153A  0A72               	incf	fputc@fp,w
  5926  153B  0084               	movwf	4
  5927  153C  0185               	clrf	5
  5928  153D  0800               	movf	0,w
  5929  153E  0701               	addwf	1,w
  5930  153F  00F4               	movwf	??_fputc+1
  5931  1540  0874               	movf	??_fputc+1,w
  5932  1541  0086               	movwf	6
  5933  1542  0187               	clrf	7
  5934  1543  0873               	movf	??_fputc,w
  5935  1544  0081               	movwf	1
  5936  1545                     l2389:
  5937  1545  0A72               	incf	fputc@fp,w
  5938  1546  0086               	movwf	6
  5939  1547  0187               	clrf	7
  5940  1548  3001               	movlw	1
  5941  1549  0781               	addwf	1,f
  5942  154A  3141               	addfsr 1,1
  5943  154B  1803               	skipnc
  5944  154C  0A81               	incf	1,f
  5945  154D                     l1079:
  5946  154D  0008               	return
  5947  154E                     __end_of_fputc:
  5948                           
  5949                           	psect	text15
  5950  129D                     __ptext15:	
  5951 ;; *************** function _putch *****************
  5952 ;; Defined at:
  5953 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\putch.c"
  5954 ;; Parameters:    Size  Location     Type
  5955 ;;  c               1    wreg     unsigned char 
  5956 ;; Auto vars:     Size  Location     Type
  5957 ;;  c               1    0[COMMON] unsigned char 
  5958 ;; Return value:  Size  Location     Type
  5959 ;;                  1    wreg      void 
  5960 ;; Registers used:
  5961 ;;		wreg
  5962 ;; Tracked objects:
  5963 ;;		On entry : 0/0
  5964 ;;		On exit  : 0/0
  5965 ;;		Unchanged: 0/0
  5966 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  5967 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5968 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5969 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5970 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5971 ;;Total ram usage:        0 bytes
  5972 ;; Hardware stack levels used: 1
  5973 ;; This function calls:
  5974 ;;		Nothing
  5975 ;; This function is called by:
  5976 ;;		_fputc
  5977 ;; This function uses a non-reentrant model
  5978 ;;
  5979                           
  5980                           
  5981                           ;psect for function _putch
  5982  129D                     _putch:
  5983  129D                     l1090:	
  5984                           ;incstack = 0
  5985                           ; Regs used in _putch: [wreg]
  5986                           
  5987  129D  0008               	return
  5988  129E                     __end_of_putch:
  5989                           
  5990                           	psect	text16
  5991  132F                     __ptext16:	
  5992 ;; *************** function _abs *****************
  5993 ;; Defined at:
  5994 ;;		line 1 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\abs.c"
  5995 ;; Parameters:    Size  Location     Type
  5996 ;;  a               2    3[COMMON] int 
  5997 ;; Auto vars:     Size  Location     Type
  5998 ;;		None
  5999 ;; Return value:  Size  Location     Type
  6000 ;;                  2    3[COMMON] int 
  6001 ;; Registers used:
  6002 ;;		wreg, status,2, status,0
  6003 ;; Tracked objects:
  6004 ;;		On entry : 0/0
  6005 ;;		On exit  : 0/0
  6006 ;;		Unchanged: 0/0
  6007 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  6008 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6009 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6010 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6011 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6012 ;;Total ram usage:        4 bytes
  6013 ;; Hardware stack levels used: 1
  6014 ;; This function calls:
  6015 ;;		Nothing
  6016 ;; This function is called by:
  6017 ;;		_dtoa
  6018 ;; This function uses a non-reentrant model
  6019 ;;
  6020                           
  6021                           
  6022                           ;psect for function _abs
  6023  132F                     _abs:
  6024  132F                     l2555:	
  6025                           ;incstack = 0
  6026                           ; Regs used in _abs: [wreg+status,2+status,0]
  6027                           
  6028  132F  0874               	movf	abs@a+1,w
  6029  1330  3A80               	xorlw	128
  6030  1331  00F5               	movwf	??_abs
  6031  1332  3080               	movlw	128
  6032  1333  0275               	subwf	??_abs,w
  6033  1334  1D03               	skipz
  6034  1335  2B38               	goto	u2505
  6035  1336  3001               	movlw	1
  6036  1337  0273               	subwf	abs@a,w
  6037  1338                     u2505:
  6038  1338  1803               	skipnc
  6039  1339  2B3B               	goto	u2501
  6040  133A  2B3C               	goto	u2500
  6041  133B                     u2501:
  6042  133B  2B48               	goto	l1064
  6043  133C                     u2500:
  6044  133C                     l2557:
  6045  133C  0973               	comf	abs@a,w
  6046  133D  00F5               	movwf	??_abs
  6047  133E  0974               	comf	abs@a+1,w
  6048  133F  00F6               	movwf	??_abs+1
  6049  1340  0AF5               	incf	??_abs,f
  6050  1341  1903               	skipnz
  6051  1342  0AF6               	incf	??_abs+1,f
  6052  1343  0875               	movf	??_abs,w
  6053  1344  00F3               	movwf	?_abs
  6054  1345  0876               	movf	??_abs+1,w
  6055  1346  00F4               	movwf	?_abs+1
  6056  1347  2B48               	goto	l1067
  6057  1348                     l1064:
  6058  1348                     l1067:
  6059  1348  0008               	return
  6060  1349                     __end_of_abs:
  6061                           
  6062                           	psect	text17
  6063  0D26                     __ptext17:	
  6064 ;; *************** function ___aomod *****************
  6065 ;; Defined at:
  6066 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\aomod.c"
  6067 ;; Parameters:    Size  Location     Type
  6068 ;;  divisor         8    0[BANK0 ] long long 
  6069 ;;  dividend        8    8[BANK0 ] long long 
  6070 ;; Auto vars:     Size  Location     Type
  6071 ;;  sign            1    2[COMMON] unsigned char 
  6072 ;;  counter         1    1[COMMON] unsigned char 
  6073 ;; Return value:  Size  Location     Type
  6074 ;;                  8    0[BANK0 ] long long 
  6075 ;; Registers used:
  6076 ;;		wreg, fsr1l, fsr1h, status,2, status,0
  6077 ;; Tracked objects:
  6078 ;;		On entry : 0/0
  6079 ;;		On exit  : 0/0
  6080 ;;		Unchanged: 0/0
  6081 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  6082 ;;      Params:         0      16       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6083 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6084 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6085 ;;      Totals:         3      16       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6086 ;;Total ram usage:       19 bytes
  6087 ;; Hardware stack levels used: 1
  6088 ;; This function calls:
  6089 ;;		Nothing
  6090 ;; This function is called by:
  6091 ;;		_dtoa
  6092 ;; This function uses a non-reentrant model
  6093 ;;
  6094                           
  6095                           
  6096                           ;psect for function ___aomod
  6097  0D26                     ___aomod:
  6098  0D26                     l2465:	
  6099                           ;incstack = 0
  6100                           ; Regs used in ___aomod: [wreg+fsr1l+fsr1h+status,2+status,0]
  6101                           
  6102  0D26  01F2               	clrf	___aomod@sign
  6103  0D27                     l2467:
  6104  0D27  3028               	movlw	low ___aomod@dividend
  6105  0D28  0086               	movwf	6
  6106  0D29  3000               	movlw	high ___aomod@dividend
  6107  0D2A  0087               	movwf	7
  6108  0D2B  3F47               	moviw [7]fsr1
  6109  0D2C  00F0               	movwf	??___aomod
  6110  0D2D  1FF0               	btfss	??___aomod,7
  6111  0D2E  2D30               	goto	u2271
  6112  0D2F  2D31               	goto	u2270
  6113  0D30                     u2271:
  6114  0D30  2D52               	goto	l2471
  6115  0D31                     u2270:
  6116  0D31                     l2469:
  6117  0D31  0020               	movlb	0	; select bank0
  6118  0D32  09A8               	comf	___aomod@dividend,f
  6119  0D33  09A9               	comf	___aomod@dividend+1,f
  6120  0D34  09AA               	comf	___aomod@dividend+2,f
  6121  0D35  09AB               	comf	___aomod@dividend+3,f
  6122  0D36  09AC               	comf	___aomod@dividend+4,f
  6123  0D37  09AD               	comf	___aomod@dividend+5,f
  6124  0D38  09AE               	comf	___aomod@dividend+6,f
  6125  0D39  09AF               	comf	___aomod@dividend+7,f
  6126  0D3A  0AA8               	incf	___aomod@dividend,f
  6127  0D3B  1D03               	skipz
  6128  0D3C  2D50               	goto	u228lld
  6129  0D3D  0AA9               	incf	___aomod@dividend+1,f
  6130  0D3E  1D03               	skipz
  6131  0D3F  2D50               	goto	u228lld
  6132  0D40  0AAA               	incf	___aomod@dividend+2,f
  6133  0D41  1D03               	skipz
  6134  0D42  2D50               	goto	u228lld
  6135  0D43  0AAB               	incf	___aomod@dividend+3,f
  6136  0D44  1D03               	skipz
  6137  0D45  2D50               	goto	u228lld
  6138  0D46  0AAC               	incf	___aomod@dividend+4,f
  6139  0D47  1D03               	skipz
  6140  0D48  2D50               	goto	u228lld
  6141  0D49  0AAD               	incf	___aomod@dividend+5,f
  6142  0D4A  1D03               	skipz
  6143  0D4B  2D50               	goto	u228lld
  6144  0D4C  0AAE               	incf	___aomod@dividend+6,f
  6145  0D4D  1D03               	skipz
  6146  0D4E  2D50               	goto	u228lld
  6147  0D4F  0AAF               	incf	___aomod@dividend+7,f
  6148  0D50                     u228lld:
  6149  0D50  01F2               	clrf	___aomod@sign
  6150  0D51  0AF2               	incf	___aomod@sign,f
  6151  0D52                     l2471:
  6152  0D52  3020               	movlw	low ___aomod@divisor
  6153  0D53  0086               	movwf	6
  6154  0D54  3000               	movlw	high ___aomod@divisor
  6155  0D55  0087               	movwf	7
  6156  0D56  3F47               	moviw [7]fsr1
  6157  0D57  00F0               	movwf	??___aomod
  6158  0D58  1FF0               	btfss	??___aomod,7
  6159  0D59  2D5B               	goto	u2291
  6160  0D5A  2D5C               	goto	u2290
  6161  0D5B                     u2291:
  6162  0D5B  2D7B               	goto	l2475
  6163  0D5C                     u2290:
  6164  0D5C                     l2473:
  6165  0D5C  0020               	movlb	0	; select bank0
  6166  0D5D  09A0               	comf	___aomod@divisor,f
  6167  0D5E  09A1               	comf	___aomod@divisor+1,f
  6168  0D5F  09A2               	comf	___aomod@divisor+2,f
  6169  0D60  09A3               	comf	___aomod@divisor+3,f
  6170  0D61  09A4               	comf	___aomod@divisor+4,f
  6171  0D62  09A5               	comf	___aomod@divisor+5,f
  6172  0D63  09A6               	comf	___aomod@divisor+6,f
  6173  0D64  09A7               	comf	___aomod@divisor+7,f
  6174  0D65  0AA0               	incf	___aomod@divisor,f
  6175  0D66  1D03               	skipz
  6176  0D67  2D7B               	goto	u230lld
  6177  0D68  0AA1               	incf	___aomod@divisor+1,f
  6178  0D69  1D03               	skipz
  6179  0D6A  2D7B               	goto	u230lld
  6180  0D6B  0AA2               	incf	___aomod@divisor+2,f
  6181  0D6C  1D03               	skipz
  6182  0D6D  2D7B               	goto	u230lld
  6183  0D6E  0AA3               	incf	___aomod@divisor+3,f
  6184  0D6F  1D03               	skipz
  6185  0D70  2D7B               	goto	u230lld
  6186  0D71  0AA4               	incf	___aomod@divisor+4,f
  6187  0D72  1D03               	skipz
  6188  0D73  2D7B               	goto	u230lld
  6189  0D74  0AA5               	incf	___aomod@divisor+5,f
  6190  0D75  1D03               	skipz
  6191  0D76  2D7B               	goto	u230lld
  6192  0D77  0AA6               	incf	___aomod@divisor+6,f
  6193  0D78  1D03               	skipz
  6194  0D79  2D7B               	goto	u230lld
  6195  0D7A  0AA7               	incf	___aomod@divisor+7,f
  6196  0D7B                     u230lld:
  6197  0D7B                     l2475:
  6198  0D7B  0020               	movlb	0	; select bank0
  6199  0D7C  0820               	movf	___aomod@divisor,w
  6200  0D7D  0421               	iorwf	___aomod@divisor+1,w
  6201  0D7E  0422               	iorwf	___aomod@divisor+2,w
  6202  0D7F  0423               	iorwf	___aomod@divisor+3,w
  6203  0D80  0424               	iorwf	___aomod@divisor+4,w
  6204  0D81  0425               	iorwf	___aomod@divisor+5,w
  6205  0D82  0426               	iorwf	___aomod@divisor+6,w
  6206  0D83  0427               	iorwf	___aomod@divisor+7,w
  6207  0D84  1903               	skipnz
  6208  0D85  2D87               	goto	u2311
  6209  0D86  2D88               	goto	u2310
  6210  0D87                     u2311:
  6211  0D87  2DDB               	goto	l2491
  6212  0D88                     u2310:
  6213  0D88                     l2477:
  6214  0D88  01F1               	clrf	___aomod@counter
  6215  0D89  0AF1               	incf	___aomod@counter,f
  6216  0D8A  2D97               	goto	l2483
  6217  0D8B                     l2479:
  6218  0D8B  35A0               	lslf	___aomod@divisor,f
  6219  0D8C  0DA1               	rlf	___aomod@divisor+1,f
  6220  0D8D  0DA2               	rlf	___aomod@divisor+2,f
  6221  0D8E  0DA3               	rlf	___aomod@divisor+3,f
  6222  0D8F  0DA4               	rlf	___aomod@divisor+4,f
  6223  0D90  0DA5               	rlf	___aomod@divisor+5,f
  6224  0D91  0DA6               	rlf	___aomod@divisor+6,f
  6225  0D92  0DA7               	rlf	___aomod@divisor+7,f
  6226  0D93                     l2481:
  6227  0D93  3001               	movlw	1
  6228  0D94  00F0               	movwf	??___aomod
  6229  0D95  0870               	movf	??___aomod,w
  6230  0D96  07F1               	addwf	___aomod@counter,f
  6231  0D97                     l2483:
  6232  0D97  1FA7               	btfss	___aomod@divisor+7,7
  6233  0D98  2D9A               	goto	u2321
  6234  0D99  2D9B               	goto	u2320
  6235  0D9A                     u2321:
  6236  0D9A  2D8B               	goto	l2479
  6237  0D9B                     u2320:
  6238  0D9B                     l2485:
  6239  0D9B  0827               	movf	___aomod@divisor+7,w
  6240  0D9C  022F               	subwf	___aomod@dividend+7,w
  6241  0D9D  1D03               	skipz
  6242  0D9E  2DB9               	goto	u2335
  6243  0D9F  0826               	movf	___aomod@divisor+6,w
  6244  0DA0  022E               	subwf	___aomod@dividend+6,w
  6245  0DA1  1D03               	skipz
  6246  0DA2  2DB9               	goto	u2335
  6247  0DA3  0825               	movf	___aomod@divisor+5,w
  6248  0DA4  022D               	subwf	___aomod@dividend+5,w
  6249  0DA5  1D03               	skipz
  6250  0DA6  2DB9               	goto	u2335
  6251  0DA7  0824               	movf	___aomod@divisor+4,w
  6252  0DA8  022C               	subwf	___aomod@dividend+4,w
  6253  0DA9  1D03               	skipz
  6254  0DAA  2DB9               	goto	u2335
  6255  0DAB  0823               	movf	___aomod@divisor+3,w
  6256  0DAC  022B               	subwf	___aomod@dividend+3,w
  6257  0DAD  1D03               	skipz
  6258  0DAE  2DB9               	goto	u2335
  6259  0DAF  0822               	movf	___aomod@divisor+2,w
  6260  0DB0  022A               	subwf	___aomod@dividend+2,w
  6261  0DB1  1D03               	skipz
  6262  0DB2  2DB9               	goto	u2335
  6263  0DB3  0821               	movf	___aomod@divisor+1,w
  6264  0DB4  0229               	subwf	___aomod@dividend+1,w
  6265  0DB5  1D03               	skipz
  6266  0DB6  2DB9               	goto	u2335
  6267  0DB7  0820               	movf	___aomod@divisor,w
  6268  0DB8  0228               	subwf	___aomod@dividend,w
  6269  0DB9                     u2335:
  6270  0DB9  1C03               	skipc
  6271  0DBA  2DBC               	goto	u2331
  6272  0DBB  2DBD               	goto	u2330
  6273  0DBC                     u2331:
  6274  0DBC  2DCD               	goto	l2489
  6275  0DBD                     u2330:
  6276  0DBD                     l2487:
  6277  0DBD  0820               	movf	___aomod@divisor,w
  6278  0DBE  02A8               	subwf	___aomod@dividend,f
  6279  0DBF  0821               	movf	___aomod@divisor+1,w
  6280  0DC0  3BA9               	subwfb	___aomod@dividend+1,f
  6281  0DC1  0822               	movf	___aomod@divisor+2,w
  6282  0DC2  3BAA               	subwfb	___aomod@dividend+2,f
  6283  0DC3  0823               	movf	___aomod@divisor+3,w
  6284  0DC4  3BAB               	subwfb	___aomod@dividend+3,f
  6285  0DC5  0824               	movf	___aomod@divisor+4,w
  6286  0DC6  3BAC               	subwfb	___aomod@dividend+4,f
  6287  0DC7  0825               	movf	___aomod@divisor+5,w
  6288  0DC8  3BAD               	subwfb	___aomod@dividend+5,f
  6289  0DC9  0826               	movf	___aomod@divisor+6,w
  6290  0DCA  3BAE               	subwfb	___aomod@dividend+6,f
  6291  0DCB  0827               	movf	___aomod@divisor+7,w
  6292  0DCC  3BAF               	subwfb	___aomod@dividend+7,f
  6293  0DCD                     l2489:
  6294  0DCD  36A7               	lsrf	___aomod@divisor+7,f
  6295  0DCE  0CA6               	rrf	___aomod@divisor+6,f
  6296  0DCF  0CA5               	rrf	___aomod@divisor+5,f
  6297  0DD0  0CA4               	rrf	___aomod@divisor+4,f
  6298  0DD1  0CA3               	rrf	___aomod@divisor+3,f
  6299  0DD2  0CA2               	rrf	___aomod@divisor+2,f
  6300  0DD3  0CA1               	rrf	___aomod@divisor+1,f
  6301  0DD4  0CA0               	rrf	___aomod@divisor,f
  6302  0DD5  3001               	movlw	1
  6303  0DD6  02F1               	subwf	___aomod@counter,f
  6304  0DD7  1D03               	btfss	3,2
  6305  0DD8  2DDA               	goto	u2341
  6306  0DD9  2DDB               	goto	u2340
  6307  0DDA                     u2341:
  6308  0DDA  2D9B               	goto	l2485
  6309  0DDB                     u2340:
  6310  0DDB                     l2491:
  6311  0DDB  0872               	movf	___aomod@sign,w
  6312  0DDC  1903               	btfsc	3,2
  6313  0DDD  2DDF               	goto	u2351
  6314  0DDE  2DE0               	goto	u2350
  6315  0DDF                     u2351:
  6316  0DDF  2DFE               	goto	l616
  6317  0DE0                     u2350:
  6318  0DE0                     l2493:
  6319  0DE0  09A8               	comf	___aomod@dividend,f
  6320  0DE1  09A9               	comf	___aomod@dividend+1,f
  6321  0DE2  09AA               	comf	___aomod@dividend+2,f
  6322  0DE3  09AB               	comf	___aomod@dividend+3,f
  6323  0DE4  09AC               	comf	___aomod@dividend+4,f
  6324  0DE5  09AD               	comf	___aomod@dividend+5,f
  6325  0DE6  09AE               	comf	___aomod@dividend+6,f
  6326  0DE7  09AF               	comf	___aomod@dividend+7,f
  6327  0DE8  0AA8               	incf	___aomod@dividend,f
  6328  0DE9  1D03               	skipz
  6329  0DEA  2DFE               	goto	u236lld
  6330  0DEB  0AA9               	incf	___aomod@dividend+1,f
  6331  0DEC  1D03               	skipz
  6332  0DED  2DFE               	goto	u236lld
  6333  0DEE  0AAA               	incf	___aomod@dividend+2,f
  6334  0DEF  1D03               	skipz
  6335  0DF0  2DFE               	goto	u236lld
  6336  0DF1  0AAB               	incf	___aomod@dividend+3,f
  6337  0DF2  1D03               	skipz
  6338  0DF3  2DFE               	goto	u236lld
  6339  0DF4  0AAC               	incf	___aomod@dividend+4,f
  6340  0DF5  1D03               	skipz
  6341  0DF6  2DFE               	goto	u236lld
  6342  0DF7  0AAD               	incf	___aomod@dividend+5,f
  6343  0DF8  1D03               	skipz
  6344  0DF9  2DFE               	goto	u236lld
  6345  0DFA  0AAE               	incf	___aomod@dividend+6,f
  6346  0DFB  1D03               	skipz
  6347  0DFC  2DFE               	goto	u236lld
  6348  0DFD  0AAF               	incf	___aomod@dividend+7,f
  6349  0DFE                     u236lld:
  6350  0DFE                     l616:
  6351  0DFE  0020               	movlb	0	; select bank0
  6352  0DFF  0828               	movf	___aomod@dividend,w
  6353  0E00  00A0               	movwf	?___aomod
  6354  0E01  0829               	movf	___aomod@dividend+1,w
  6355  0E02  00A1               	movwf	?___aomod+1
  6356  0E03  082A               	movf	___aomod@dividend+2,w
  6357  0E04  00A2               	movwf	?___aomod+2
  6358  0E05  082B               	movf	___aomod@dividend+3,w
  6359  0E06  00A3               	movwf	?___aomod+3
  6360  0E07  082C               	movf	___aomod@dividend+4,w
  6361  0E08  00A4               	movwf	?___aomod+4
  6362  0E09  082D               	movf	___aomod@dividend+5,w
  6363  0E0A  00A5               	movwf	?___aomod+5
  6364  0E0B  082E               	movf	___aomod@dividend+6,w
  6365  0E0C  00A6               	movwf	?___aomod+6
  6366  0E0D  082F               	movf	___aomod@dividend+7,w
  6367  0E0E  00A7               	movwf	?___aomod+7
  6368  0E0F                     l617:
  6369  0E0F  0008               	return
  6370  0E10                     __end_of___aomod:
  6371                           
  6372                           	psect	text18
  6373  0EFF                     __ptext18:	
  6374 ;; *************** function ___aodiv *****************
  6375 ;; Defined at:
  6376 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\aodiv.c"
  6377 ;; Parameters:    Size  Location     Type
  6378 ;;  divisor         8    0[BANK0 ] long long 
  6379 ;;  dividend        8    8[BANK0 ] long long 
  6380 ;; Auto vars:     Size  Location     Type
  6381 ;;  quotient        8    3[COMMON] long long 
  6382 ;;  sign            1    2[COMMON] unsigned char 
  6383 ;;  counter         1    1[COMMON] unsigned char 
  6384 ;; Return value:  Size  Location     Type
  6385 ;;                  8    0[BANK0 ] long long 
  6386 ;; Registers used:
  6387 ;;		wreg, fsr1l, fsr1h, status,2, status,0
  6388 ;; Tracked objects:
  6389 ;;		On entry : 0/0
  6390 ;;		On exit  : 0/0
  6391 ;;		Unchanged: 0/0
  6392 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  6393 ;;      Params:         0      16       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6394 ;;      Locals:        10       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6395 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6396 ;;      Totals:        11      16       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6397 ;;Total ram usage:       27 bytes
  6398 ;; Hardware stack levels used: 1
  6399 ;; This function calls:
  6400 ;;		Nothing
  6401 ;; This function is called by:
  6402 ;;		_dtoa
  6403 ;; This function uses a non-reentrant model
  6404 ;;
  6405                           
  6406                           
  6407                           ;psect for function ___aodiv
  6408  0EFF                     ___aodiv:
  6409  0EFF                     l2427:	
  6410                           ;incstack = 0
  6411                           ; Regs used in ___aodiv: [wreg+fsr1l+fsr1h+status,2+status,0]
  6412                           
  6413  0EFF  01F2               	clrf	___aodiv@sign
  6414  0F00                     l2429:
  6415  0F00  3020               	movlw	low ___aodiv@divisor
  6416  0F01  0086               	movwf	6
  6417  0F02  3000               	movlw	high ___aodiv@divisor
  6418  0F03  0087               	movwf	7
  6419  0F04  3F47               	moviw [7]fsr1
  6420  0F05  00F0               	movwf	??___aodiv
  6421  0F06  1FF0               	btfss	??___aodiv,7
  6422  0F07  2F09               	goto	u2161
  6423  0F08  2F0A               	goto	u2160
  6424  0F09                     u2161:
  6425  0F09  2F2B               	goto	l2433
  6426  0F0A                     u2160:
  6427  0F0A                     l2431:
  6428  0F0A  0020               	movlb	0	; select bank0
  6429  0F0B  09A0               	comf	___aodiv@divisor,f
  6430  0F0C  09A1               	comf	___aodiv@divisor+1,f
  6431  0F0D  09A2               	comf	___aodiv@divisor+2,f
  6432  0F0E  09A3               	comf	___aodiv@divisor+3,f
  6433  0F0F  09A4               	comf	___aodiv@divisor+4,f
  6434  0F10  09A5               	comf	___aodiv@divisor+5,f
  6435  0F11  09A6               	comf	___aodiv@divisor+6,f
  6436  0F12  09A7               	comf	___aodiv@divisor+7,f
  6437  0F13  0AA0               	incf	___aodiv@divisor,f
  6438  0F14  1D03               	skipz
  6439  0F15  2F29               	goto	u217lld
  6440  0F16  0AA1               	incf	___aodiv@divisor+1,f
  6441  0F17  1D03               	skipz
  6442  0F18  2F29               	goto	u217lld
  6443  0F19  0AA2               	incf	___aodiv@divisor+2,f
  6444  0F1A  1D03               	skipz
  6445  0F1B  2F29               	goto	u217lld
  6446  0F1C  0AA3               	incf	___aodiv@divisor+3,f
  6447  0F1D  1D03               	skipz
  6448  0F1E  2F29               	goto	u217lld
  6449  0F1F  0AA4               	incf	___aodiv@divisor+4,f
  6450  0F20  1D03               	skipz
  6451  0F21  2F29               	goto	u217lld
  6452  0F22  0AA5               	incf	___aodiv@divisor+5,f
  6453  0F23  1D03               	skipz
  6454  0F24  2F29               	goto	u217lld
  6455  0F25  0AA6               	incf	___aodiv@divisor+6,f
  6456  0F26  1D03               	skipz
  6457  0F27  2F29               	goto	u217lld
  6458  0F28  0AA7               	incf	___aodiv@divisor+7,f
  6459  0F29                     u217lld:
  6460  0F29  01F2               	clrf	___aodiv@sign
  6461  0F2A  0AF2               	incf	___aodiv@sign,f
  6462  0F2B                     l2433:
  6463  0F2B  3028               	movlw	low ___aodiv@dividend
  6464  0F2C  0086               	movwf	6
  6465  0F2D  3000               	movlw	high ___aodiv@dividend
  6466  0F2E  0087               	movwf	7
  6467  0F2F  3F47               	moviw [7]fsr1
  6468  0F30  00F0               	movwf	??___aodiv
  6469  0F31  1FF0               	btfss	??___aodiv,7
  6470  0F32  2F34               	goto	u2181
  6471  0F33  2F35               	goto	u2180
  6472  0F34                     u2181:
  6473  0F34  2F58               	goto	l2439
  6474  0F35                     u2180:
  6475  0F35                     l2435:
  6476  0F35  0020               	movlb	0	; select bank0
  6477  0F36  09A8               	comf	___aodiv@dividend,f
  6478  0F37  09A9               	comf	___aodiv@dividend+1,f
  6479  0F38  09AA               	comf	___aodiv@dividend+2,f
  6480  0F39  09AB               	comf	___aodiv@dividend+3,f
  6481  0F3A  09AC               	comf	___aodiv@dividend+4,f
  6482  0F3B  09AD               	comf	___aodiv@dividend+5,f
  6483  0F3C  09AE               	comf	___aodiv@dividend+6,f
  6484  0F3D  09AF               	comf	___aodiv@dividend+7,f
  6485  0F3E  0AA8               	incf	___aodiv@dividend,f
  6486  0F3F  1D03               	skipz
  6487  0F40  2F54               	goto	u219lld
  6488  0F41  0AA9               	incf	___aodiv@dividend+1,f
  6489  0F42  1D03               	skipz
  6490  0F43  2F54               	goto	u219lld
  6491  0F44  0AAA               	incf	___aodiv@dividend+2,f
  6492  0F45  1D03               	skipz
  6493  0F46  2F54               	goto	u219lld
  6494  0F47  0AAB               	incf	___aodiv@dividend+3,f
  6495  0F48  1D03               	skipz
  6496  0F49  2F54               	goto	u219lld
  6497  0F4A  0AAC               	incf	___aodiv@dividend+4,f
  6498  0F4B  1D03               	skipz
  6499  0F4C  2F54               	goto	u219lld
  6500  0F4D  0AAD               	incf	___aodiv@dividend+5,f
  6501  0F4E  1D03               	skipz
  6502  0F4F  2F54               	goto	u219lld
  6503  0F50  0AAE               	incf	___aodiv@dividend+6,f
  6504  0F51  1D03               	skipz
  6505  0F52  2F54               	goto	u219lld
  6506  0F53  0AAF               	incf	___aodiv@dividend+7,f
  6507  0F54                     u219lld:
  6508  0F54                     l2437:
  6509  0F54  3001               	movlw	1
  6510  0F55  00F0               	movwf	??___aodiv
  6511  0F56  0870               	movf	??___aodiv,w
  6512  0F57  06F2               	xorwf	___aodiv@sign,f
  6513  0F58                     l2439:
  6514  0F58  3073               	movlw	low ___aodiv@quotient
  6515  0F59  0086               	movwf	6
  6516  0F5A  3000               	movlw	high ___aodiv@quotient
  6517  0F5B  0087               	movwf	7
  6518  0F5C  3008               	movlw	8
  6519  0F5D  00F0               	movwf	??___aodiv
  6520  0F5E  3000               	movlw	0
  6521  0F5F                     u2200:
  6522  0F5F  001E               	movwi fsr1++
  6523  0F60  0BF0               	decfsz	??___aodiv,f
  6524  0F61  2F5F               	goto	u2200
  6525  0F62                     l2441:
  6526  0F62  0020               	movlb	0	; select bank0
  6527  0F63  0820               	movf	___aodiv@divisor,w
  6528  0F64  0421               	iorwf	___aodiv@divisor+1,w
  6529  0F65  0422               	iorwf	___aodiv@divisor+2,w
  6530  0F66  0423               	iorwf	___aodiv@divisor+3,w
  6531  0F67  0424               	iorwf	___aodiv@divisor+4,w
  6532  0F68  0425               	iorwf	___aodiv@divisor+5,w
  6533  0F69  0426               	iorwf	___aodiv@divisor+6,w
  6534  0F6A  0427               	iorwf	___aodiv@divisor+7,w
  6535  0F6B  1903               	skipnz
  6536  0F6C  2F6E               	goto	u2211
  6537  0F6D  2F6F               	goto	u2210
  6538  0F6E                     u2211:
  6539  0F6E  2FCB               	goto	l2461
  6540  0F6F                     u2210:
  6541  0F6F                     l2443:
  6542  0F6F  01F1               	clrf	___aodiv@counter
  6543  0F70  0AF1               	incf	___aodiv@counter,f
  6544  0F71  2F7E               	goto	l2449
  6545  0F72                     l2445:
  6546  0F72  35A0               	lslf	___aodiv@divisor,f
  6547  0F73  0DA1               	rlf	___aodiv@divisor+1,f
  6548  0F74  0DA2               	rlf	___aodiv@divisor+2,f
  6549  0F75  0DA3               	rlf	___aodiv@divisor+3,f
  6550  0F76  0DA4               	rlf	___aodiv@divisor+4,f
  6551  0F77  0DA5               	rlf	___aodiv@divisor+5,f
  6552  0F78  0DA6               	rlf	___aodiv@divisor+6,f
  6553  0F79  0DA7               	rlf	___aodiv@divisor+7,f
  6554  0F7A                     l2447:
  6555  0F7A  3001               	movlw	1
  6556  0F7B  00F0               	movwf	??___aodiv
  6557  0F7C  0870               	movf	??___aodiv,w
  6558  0F7D  07F1               	addwf	___aodiv@counter,f
  6559  0F7E                     l2449:
  6560  0F7E  1FA7               	btfss	___aodiv@divisor+7,7
  6561  0F7F  2F81               	goto	u2221
  6562  0F80  2F82               	goto	u2220
  6563  0F81                     u2221:
  6564  0F81  2F72               	goto	l2445
  6565  0F82                     u2220:
  6566  0F82                     l2451:
  6567  0F82  35F3               	lslf	___aodiv@quotient,f
  6568  0F83  0DF4               	rlf	___aodiv@quotient+1,f
  6569  0F84  0DF5               	rlf	___aodiv@quotient+2,f
  6570  0F85  0DF6               	rlf	___aodiv@quotient+3,f
  6571  0F86  0DF7               	rlf	___aodiv@quotient+4,f
  6572  0F87  0DF8               	rlf	___aodiv@quotient+5,f
  6573  0F88  0DF9               	rlf	___aodiv@quotient+6,f
  6574  0F89  0DFA               	rlf	___aodiv@quotient+7,f
  6575  0F8A                     l2453:
  6576  0F8A  0827               	movf	___aodiv@divisor+7,w
  6577  0F8B  022F               	subwf	___aodiv@dividend+7,w
  6578  0F8C  1D03               	skipz
  6579  0F8D  2FA8               	goto	u2235
  6580  0F8E  0826               	movf	___aodiv@divisor+6,w
  6581  0F8F  022E               	subwf	___aodiv@dividend+6,w
  6582  0F90  1D03               	skipz
  6583  0F91  2FA8               	goto	u2235
  6584  0F92  0825               	movf	___aodiv@divisor+5,w
  6585  0F93  022D               	subwf	___aodiv@dividend+5,w
  6586  0F94  1D03               	skipz
  6587  0F95  2FA8               	goto	u2235
  6588  0F96  0824               	movf	___aodiv@divisor+4,w
  6589  0F97  022C               	subwf	___aodiv@dividend+4,w
  6590  0F98  1D03               	skipz
  6591  0F99  2FA8               	goto	u2235
  6592  0F9A  0823               	movf	___aodiv@divisor+3,w
  6593  0F9B  022B               	subwf	___aodiv@dividend+3,w
  6594  0F9C  1D03               	skipz
  6595  0F9D  2FA8               	goto	u2235
  6596  0F9E  0822               	movf	___aodiv@divisor+2,w
  6597  0F9F  022A               	subwf	___aodiv@dividend+2,w
  6598  0FA0  1D03               	skipz
  6599  0FA1  2FA8               	goto	u2235
  6600  0FA2  0821               	movf	___aodiv@divisor+1,w
  6601  0FA3  0229               	subwf	___aodiv@dividend+1,w
  6602  0FA4  1D03               	skipz
  6603  0FA5  2FA8               	goto	u2235
  6604  0FA6  0820               	movf	___aodiv@divisor,w
  6605  0FA7  0228               	subwf	___aodiv@dividend,w
  6606  0FA8                     u2235:
  6607  0FA8  1C03               	skipc
  6608  0FA9  2FAB               	goto	u2231
  6609  0FAA  2FAC               	goto	u2230
  6610  0FAB                     u2231:
  6611  0FAB  2FBD               	goto	l2459
  6612  0FAC                     u2230:
  6613  0FAC                     l2455:
  6614  0FAC  0820               	movf	___aodiv@divisor,w
  6615  0FAD  02A8               	subwf	___aodiv@dividend,f
  6616  0FAE  0821               	movf	___aodiv@divisor+1,w
  6617  0FAF  3BA9               	subwfb	___aodiv@dividend+1,f
  6618  0FB0  0822               	movf	___aodiv@divisor+2,w
  6619  0FB1  3BAA               	subwfb	___aodiv@dividend+2,f
  6620  0FB2  0823               	movf	___aodiv@divisor+3,w
  6621  0FB3  3BAB               	subwfb	___aodiv@dividend+3,f
  6622  0FB4  0824               	movf	___aodiv@divisor+4,w
  6623  0FB5  3BAC               	subwfb	___aodiv@dividend+4,f
  6624  0FB6  0825               	movf	___aodiv@divisor+5,w
  6625  0FB7  3BAD               	subwfb	___aodiv@dividend+5,f
  6626  0FB8  0826               	movf	___aodiv@divisor+6,w
  6627  0FB9  3BAE               	subwfb	___aodiv@dividend+6,f
  6628  0FBA  0827               	movf	___aodiv@divisor+7,w
  6629  0FBB  3BAF               	subwfb	___aodiv@dividend+7,f
  6630  0FBC                     l2457:
  6631  0FBC  1473               	bsf	___aodiv@quotient,0
  6632  0FBD                     l2459:
  6633  0FBD  36A7               	lsrf	___aodiv@divisor+7,f
  6634  0FBE  0CA6               	rrf	___aodiv@divisor+6,f
  6635  0FBF  0CA5               	rrf	___aodiv@divisor+5,f
  6636  0FC0  0CA4               	rrf	___aodiv@divisor+4,f
  6637  0FC1  0CA3               	rrf	___aodiv@divisor+3,f
  6638  0FC2  0CA2               	rrf	___aodiv@divisor+2,f
  6639  0FC3  0CA1               	rrf	___aodiv@divisor+1,f
  6640  0FC4  0CA0               	rrf	___aodiv@divisor,f
  6641  0FC5  3001               	movlw	1
  6642  0FC6  02F1               	subwf	___aodiv@counter,f
  6643  0FC7  1D03               	btfss	3,2
  6644  0FC8  2FCA               	goto	u2241
  6645  0FC9  2FCB               	goto	u2240
  6646  0FCA                     u2241:
  6647  0FCA  2F82               	goto	l2451
  6648  0FCB                     u2240:
  6649  0FCB                     l2461:
  6650  0FCB  0872               	movf	___aodiv@sign,w
  6651  0FCC  1903               	btfsc	3,2
  6652  0FCD  2FCF               	goto	u2251
  6653  0FCE  2FD0               	goto	u2250
  6654  0FCF                     u2251:
  6655  0FCF  2FEE               	goto	l603
  6656  0FD0                     u2250:
  6657  0FD0                     l2463:
  6658  0FD0  09F3               	comf	___aodiv@quotient,f
  6659  0FD1  09F4               	comf	___aodiv@quotient+1,f
  6660  0FD2  09F5               	comf	___aodiv@quotient+2,f
  6661  0FD3  09F6               	comf	___aodiv@quotient+3,f
  6662  0FD4  09F7               	comf	___aodiv@quotient+4,f
  6663  0FD5  09F8               	comf	___aodiv@quotient+5,f
  6664  0FD6  09F9               	comf	___aodiv@quotient+6,f
  6665  0FD7  09FA               	comf	___aodiv@quotient+7,f
  6666  0FD8  0AF3               	incf	___aodiv@quotient,f
  6667  0FD9  1D03               	skipz
  6668  0FDA  2FEE               	goto	u226lld
  6669  0FDB  0AF4               	incf	___aodiv@quotient+1,f
  6670  0FDC  1D03               	skipz
  6671  0FDD  2FEE               	goto	u226lld
  6672  0FDE  0AF5               	incf	___aodiv@quotient+2,f
  6673  0FDF  1D03               	skipz
  6674  0FE0  2FEE               	goto	u226lld
  6675  0FE1  0AF6               	incf	___aodiv@quotient+3,f
  6676  0FE2  1D03               	skipz
  6677  0FE3  2FEE               	goto	u226lld
  6678  0FE4  0AF7               	incf	___aodiv@quotient+4,f
  6679  0FE5  1D03               	skipz
  6680  0FE6  2FEE               	goto	u226lld
  6681  0FE7  0AF8               	incf	___aodiv@quotient+5,f
  6682  0FE8  1D03               	skipz
  6683  0FE9  2FEE               	goto	u226lld
  6684  0FEA  0AF9               	incf	___aodiv@quotient+6,f
  6685  0FEB  1D03               	skipz
  6686  0FEC  2FEE               	goto	u226lld
  6687  0FED  0AFA               	incf	___aodiv@quotient+7,f
  6688  0FEE                     u226lld:
  6689  0FEE                     l603:
  6690  0FEE  0873               	movf	___aodiv@quotient,w
  6691  0FEF  0020               	movlb	0	; select bank0
  6692  0FF0  00A0               	movwf	?___aodiv
  6693  0FF1  0874               	movf	___aodiv@quotient+1,w
  6694  0FF2  00A1               	movwf	?___aodiv+1
  6695  0FF3  0875               	movf	___aodiv@quotient+2,w
  6696  0FF4  00A2               	movwf	?___aodiv+2
  6697  0FF5  0876               	movf	___aodiv@quotient+3,w
  6698  0FF6  00A3               	movwf	?___aodiv+3
  6699  0FF7  0877               	movf	___aodiv@quotient+4,w
  6700  0FF8  00A4               	movwf	?___aodiv+4
  6701  0FF9  0878               	movf	___aodiv@quotient+5,w
  6702  0FFA  00A5               	movwf	?___aodiv+5
  6703  0FFB  0879               	movf	___aodiv@quotient+6,w
  6704  0FFC  00A6               	movwf	?___aodiv+6
  6705  0FFD  087A               	movf	___aodiv@quotient+7,w
  6706  0FFE  00A7               	movwf	?___aodiv+7
  6707  0FFF                     l604:
  6708  0FFF  0008               	return
  6709  1000                     __end_of___aodiv:
  6710                           
  6711                           	psect	text19
  6712  1317                     __ptext19:	
  6713 ;; *************** function _lcd_print_with *****************
  6714 ;; Defined at:
  6715 ;;		line 135 in file "lcd_lib.c"
  6716 ;; Parameters:    Size  Location     Type
  6717 ;;  p               1    wreg     PTR struct .
  6718 ;;		 -> NULL(0), main@lcd(4), 
  6719 ;;  str             2    6[BANK0 ] PTR unsigned char 
  6720 ;;		 -> print_gram@row2(16), print_gram@row1(16), STR_3(15), STR_2(11), 
  6721 ;;  col             1    8[BANK0 ] unsigned char 
  6722 ;;  row             1    9[BANK0 ] unsigned char 
  6723 ;; Auto vars:     Size  Location     Type
  6724 ;;  p               1   13[COMMON] PTR struct .
  6725 ;;		 -> NULL(0), main@lcd(4), 
  6726 ;; Return value:  Size  Location     Type
  6727 ;;                  1    wreg      void 
  6728 ;; Registers used:
  6729 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  6730 ;; Tracked objects:
  6731 ;;		On entry : 0/0
  6732 ;;		On exit  : 0/0
  6733 ;;		Unchanged: 0/0
  6734 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  6735 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6736 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6737 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6738 ;;      Totals:         1       6       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6739 ;;Total ram usage:        7 bytes
  6740 ;; Hardware stack levels used: 1
  6741 ;; Hardware stack levels required when called: 5
  6742 ;; This function calls:
  6743 ;;		_lcd_print
  6744 ;;		_lcd_set_cursor
  6745 ;; This function is called by:
  6746 ;;		_initialize
  6747 ;;		_print_gram
  6748 ;; This function uses a non-reentrant model
  6749 ;;
  6750                           
  6751                           
  6752                           ;psect for function _lcd_print_with
  6753  1317                     _lcd_print_with:
  6754                           
  6755                           ;incstack = 0
  6756                           ; Regs used in _lcd_print_with: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  6757                           ;lcd_print_with@p stored from wreg
  6758  1317  00FD               	movwf	lcd_print_with@p
  6759  1318                     l3383:
  6760                           
  6761                           ;lcd_lib.c: 136:     lcd_set_cursor(p, col, row);
  6762  1318  0020               	movlb	0	; select bank0
  6763  1319  0828               	movf	lcd_print_with@col,w
  6764  131A  00AA               	movwf	??_lcd_print_with
  6765  131B  082A               	movf	??_lcd_print_with,w
  6766  131C  00FA               	movwf	lcd_set_cursor@col
  6767  131D  0829               	movf	lcd_print_with@row,w
  6768  131E  00AB               	movwf	??_lcd_print_with+1
  6769  131F  082B               	movf	??_lcd_print_with+1,w
  6770  1320  00FB               	movwf	lcd_set_cursor@row
  6771  1321  087D               	movf	lcd_print_with@p,w
  6772  1322  3194  244F  3193   	fcall	_lcd_set_cursor
  6773  1325                     l3385:
  6774                           
  6775                           ;lcd_lib.c: 137:     lcd_print(p, str);
  6776  1325  0020               	movlb	0	; select bank0
  6777  1326  0827               	movf	lcd_print_with@str+1,w
  6778  1327  00FB               	movwf	lcd_print@str+1
  6779  1328  0826               	movf	lcd_print_with@str,w
  6780  1329  00FA               	movwf	lcd_print@str
  6781  132A  087D               	movf	lcd_print_with@p,w
  6782  132B  3193  23DA  3193   	fcall	_lcd_print
  6783  132E                     l317:
  6784  132E  0008               	return
  6785  132F                     __end_of_lcd_print_with:
  6786                           
  6787                           	psect	text20
  6788  0AEE                     __ptext20:	
  6789 ;; *************** function _lcd_init *****************
  6790 ;; Defined at:
  6791 ;;		line 18 in file "lcd_lib.c"
  6792 ;; Parameters:    Size  Location     Type
  6793 ;;  p               1    wreg     PTR struct .
  6794 ;;		 -> NULL(0), main@lcd(4), 
  6795 ;; Auto vars:     Size  Location     Type
  6796 ;;  p               1    8[COMMON] PTR struct .
  6797 ;;		 -> NULL(0), main@lcd(4), 
  6798 ;; Return value:  Size  Location     Type
  6799 ;;                  1    wreg      void 
  6800 ;; Registers used:
  6801 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  6802 ;; Tracked objects:
  6803 ;;		On entry : 0/0
  6804 ;;		On exit  : 0/0
  6805 ;;		Unchanged: 0/0
  6806 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  6807 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6808 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6809 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6810 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6811 ;;Total ram usage:        3 bytes
  6812 ;; Hardware stack levels used: 1
  6813 ;; Hardware stack levels required when called: 4
  6814 ;; This function calls:
  6815 ;;		_write4bits
  6816 ;; This function is called by:
  6817 ;;		_initialize
  6818 ;; This function uses a non-reentrant model
  6819 ;;
  6820                           
  6821                           
  6822                           ;psect for function _lcd_init
  6823  0AEE                     _lcd_init:
  6824                           
  6825                           ;incstack = 0
  6826                           ; Regs used in _lcd_init: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
  6827                           ;lcd_init@p stored from wreg
  6828  0AEE  00F8               	movwf	lcd_init@p
  6829  0AEF                     l3325:
  6830                           
  6831                           ;lcd_lib.c: 19:     _delay((unsigned long)((400)*(8000000/4000.0)));
  6832  0AEF  3005               	movlw	5
  6833  0AF0  00F7               	movwf	??_lcd_init+1
  6834  0AF1  300F               	movlw	15
  6835  0AF2  00F6               	movwf	??_lcd_init
  6836  0AF3  30F1               	movlw	241
  6837  0AF4                     u4087:
  6838  0AF4  0B89               	decfsz	9,f
  6839  0AF5  2AF4               	goto	u4087
  6840  0AF6  0BF6               	decfsz	??_lcd_init,f
  6841  0AF7  2AF4               	goto	u4087
  6842  0AF8  0BF7               	decfsz	??_lcd_init+1,f
  6843  0AF9  2AF4               	goto	u4087
  6844  0AFA  0000               	nop
  6845  0AFB                     l3327:
  6846                           
  6847                           ;lcd_lib.c: 21:     write4bits(p, 0x30);
  6848  0AFB  3030               	movlw	48
  6849  0AFC  00F6               	movwf	??_lcd_init
  6850  0AFD  0876               	movf	??_lcd_init,w
  6851  0AFE  00F3               	movwf	write4bits@val
  6852  0AFF  0878               	movf	lcd_init@p,w
  6853  0B00  3193  237E  318A   	fcall	_write4bits
  6854  0B03                     l3329:
  6855                           
  6856                           ;lcd_lib.c: 22:     _delay((unsigned long)((5)*(8000000/4000.0)));
  6857  0B03  300D               	movlw	13
  6858  0B04  00F6               	movwf	??_lcd_init
  6859  0B05  30FC               	movlw	252
  6860  0B06                     u4097:
  6861  0B06  0B89               	decfsz	9,f
  6862  0B07  2B06               	goto	u4097
  6863  0B08  0BF6               	decfsz	??_lcd_init,f
  6864  0B09  2B06               	goto	u4097
  6865                           
  6866                           ;lcd_lib.c: 24:     write4bits(p, 0x30);
  6867  0B0A  3030               	movlw	48
  6868  0B0B  00F6               	movwf	??_lcd_init
  6869  0B0C  0876               	movf	??_lcd_init,w
  6870  0B0D  00F3               	movwf	write4bits@val
  6871  0B0E  0878               	movf	lcd_init@p,w
  6872  0B0F  3193  237E  318A   	fcall	_write4bits
  6873  0B12                     l3331:
  6874                           
  6875                           ;lcd_lib.c: 25:     _delay((unsigned long)((5)*(8000000/4000.0)));
  6876  0B12  300D               	movlw	13
  6877  0B13  00F6               	movwf	??_lcd_init
  6878  0B14  30FC               	movlw	252
  6879  0B15                     u4107:
  6880  0B15  0B89               	decfsz	9,f
  6881  0B16  2B15               	goto	u4107
  6882  0B17  0BF6               	decfsz	??_lcd_init,f
  6883  0B18  2B15               	goto	u4107
  6884  0B19                     l3333:
  6885                           
  6886                           ;lcd_lib.c: 27:     write4bits(p, 0x30);
  6887  0B19  3030               	movlw	48
  6888  0B1A  00F6               	movwf	??_lcd_init
  6889  0B1B  0876               	movf	??_lcd_init,w
  6890  0B1C  00F3               	movwf	write4bits@val
  6891  0B1D  0878               	movf	lcd_init@p,w
  6892  0B1E  3193  237E  318A   	fcall	_write4bits
  6893                           
  6894                           ;lcd_lib.c: 28:     _delay((unsigned long)((300)*(8000000/4000000.0)));
  6895  0B21  30C8               	movlw	200
  6896  0B22                     u4117:
  6897  0B22  0B89               	decfsz	9,f
  6898  0B23  2B22               	goto	u4117
  6899  0B24                     l3335:
  6900                           
  6901                           ;lcd_lib.c: 30:     write4bits(p, 0x20);
  6902  0B24  3020               	movlw	32
  6903  0B25  00F6               	movwf	??_lcd_init
  6904  0B26  0876               	movf	??_lcd_init,w
  6905  0B27  00F3               	movwf	write4bits@val
  6906  0B28  0878               	movf	lcd_init@p,w
  6907  0B29  3193  237E  318A   	fcall	_write4bits
  6908  0B2C                     l3337:
  6909                           
  6910                           ;lcd_lib.c: 31:     _delay((unsigned long)((10)*(8000000/4000000.0)));
  6911  0B2C  3006               	movlw	6
  6912  0B2D                     u4127:
  6913  0B2D  0B89               	decfsz	9,f
  6914  0B2E  2B2D               	goto	u4127
  6915  0B2F  3200               	nop2
  6916                           
  6917                           ;lcd_lib.c: 34:     write4bits(p, 0x20);
  6918  0B30  3020               	movlw	32
  6919  0B31  00F6               	movwf	??_lcd_init
  6920  0B32  0876               	movf	??_lcd_init,w
  6921  0B33  00F3               	movwf	write4bits@val
  6922  0B34  0878               	movf	lcd_init@p,w
  6923  0B35  3193  237E  318A   	fcall	_write4bits
  6924  0B38                     l3339:
  6925                           
  6926                           ;lcd_lib.c: 36:     _delay((unsigned long)((100)*(8000000/4000000.0)));
  6927  0B38  3042               	movlw	66
  6928  0B39                     u4137:
  6929  0B39  0B89               	decfsz	9,f
  6930  0B3A  2B39               	goto	u4137
  6931  0B3B  3200               	nop2
  6932  0B3C                     l3341:
  6933                           
  6934                           ;lcd_lib.c: 38:     write4bits(p, 0x80);
  6935  0B3C  3080               	movlw	128
  6936  0B3D  00F6               	movwf	??_lcd_init
  6937  0B3E  0876               	movf	??_lcd_init,w
  6938  0B3F  00F3               	movwf	write4bits@val
  6939  0B40  0878               	movf	lcd_init@p,w
  6940  0B41  3193  237E  318A   	fcall	_write4bits
  6941  0B44                     l3343:
  6942                           
  6943                           ;lcd_lib.c: 43:     write4bits(p, 0x00);
  6944  0B44  01F3               	clrf	write4bits@val
  6945  0B45  0878               	movf	lcd_init@p,w
  6946  0B46  3193  237E  318A   	fcall	_write4bits
  6947  0B49                     l3345:
  6948                           
  6949                           ;lcd_lib.c: 45:     _delay((unsigned long)((100)*(8000000/4000000.0)));
  6950  0B49  3042               	movlw	66
  6951  0B4A                     u4147:
  6952  0B4A  0B89               	decfsz	9,f
  6953  0B4B  2B4A               	goto	u4147
  6954  0B4C  3200               	nop2
  6955                           
  6956                           ;lcd_lib.c: 47:     write4bits(p, 0xC0);
  6957  0B4D  30C0               	movlw	192
  6958  0B4E  00F6               	movwf	??_lcd_init
  6959  0B4F  0876               	movf	??_lcd_init,w
  6960  0B50  00F3               	movwf	write4bits@val
  6961  0B51  0878               	movf	lcd_init@p,w
  6962  0B52  3193  237E  318A   	fcall	_write4bits
  6963                           
  6964                           ;lcd_lib.c: 51:     write4bits(p, 0x00);
  6965  0B55  01F3               	clrf	write4bits@val
  6966  0B56  0878               	movf	lcd_init@p,w
  6967  0B57  3193  237E  318A   	fcall	_write4bits
  6968  0B5A                     l3347:
  6969                           
  6970                           ;lcd_lib.c: 53:     _delay((unsigned long)((100)*(8000000/4000000.0)));
  6971  0B5A  3042               	movlw	66
  6972  0B5B                     u4157:
  6973  0B5B  0B89               	decfsz	9,f
  6974  0B5C  2B5B               	goto	u4157
  6975  0B5D  3200               	nop2
  6976  0B5E                     l3349:
  6977                           
  6978                           ;lcd_lib.c: 55:     write4bits(p, 0x10);
  6979  0B5E  3010               	movlw	16
  6980  0B5F  00F6               	movwf	??_lcd_init
  6981  0B60  0876               	movf	??_lcd_init,w
  6982  0B61  00F3               	movwf	write4bits@val
  6983  0B62  0878               	movf	lcd_init@p,w
  6984  0B63  3193  237E  318A   	fcall	_write4bits
  6985                           
  6986                           ;lcd_lib.c: 57:     _delay((unsigned long)((5)*(8000000/4000.0)));
  6987  0B66  300D               	movlw	13
  6988  0B67  00F6               	movwf	??_lcd_init
  6989  0B68  30FC               	movlw	252
  6990  0B69                     u4167:
  6991  0B69  0B89               	decfsz	9,f
  6992  0B6A  2B69               	goto	u4167
  6993  0B6B  0BF6               	decfsz	??_lcd_init,f
  6994  0B6C  2B69               	goto	u4167
  6995  0B6D                     l3351:
  6996                           
  6997                           ;lcd_lib.c: 60:     write4bits(p, 0x00);
  6998  0B6D  01F3               	clrf	write4bits@val
  6999  0B6E  0878               	movf	lcd_init@p,w
  7000  0B6F  3193  237E  318A   	fcall	_write4bits
  7001  0B72                     l3353:
  7002                           
  7003                           ;lcd_lib.c: 62:     _delay((unsigned long)((100)*(8000000/4000000.0)));
  7004  0B72  3042               	movlw	66
  7005  0B73                     u4177:
  7006  0B73  0B89               	decfsz	9,f
  7007  0B74  2B73               	goto	u4177
  7008  0B75  3200               	nop2
  7009                           
  7010                           ;lcd_lib.c: 64:     write4bits(p, 0x60);
  7011  0B76  3060               	movlw	96
  7012  0B77  00F6               	movwf	??_lcd_init
  7013  0B78  0876               	movf	??_lcd_init,w
  7014  0B79  00F3               	movwf	write4bits@val
  7015  0B7A  0878               	movf	lcd_init@p,w
  7016  0B7B  3193  237E  318A   	fcall	_write4bits
  7017                           
  7018                           ;lcd_lib.c: 68:     write4bits(p, 0x00);
  7019  0B7E  01F3               	clrf	write4bits@val
  7020  0B7F  0878               	movf	lcd_init@p,w
  7021  0B80  3193  237E  318A   	fcall	_write4bits
  7022  0B83                     l3355:
  7023                           
  7024                           ;lcd_lib.c: 70:     _delay((unsigned long)((100)*(8000000/4000000.0)));
  7025  0B83  3042               	movlw	66
  7026  0B84                     u4187:
  7027  0B84  0B89               	decfsz	9,f
  7028  0B85  2B84               	goto	u4187
  7029  0B86  3200               	nop2
  7030  0B87                     l3357:
  7031                           
  7032                           ;lcd_lib.c: 72:     write4bits(p, 0x20);
  7033  0B87  3020               	movlw	32
  7034  0B88  00F6               	movwf	??_lcd_init
  7035  0B89  0876               	movf	??_lcd_init,w
  7036  0B8A  00F3               	movwf	write4bits@val
  7037  0B8B  0878               	movf	lcd_init@p,w
  7038  0B8C  3193  237E  318A   	fcall	_write4bits
  7039                           
  7040                           ;lcd_lib.c: 74:     _delay((unsigned long)((3)*(8000000/4000.0)));
  7041  0B8F  3008               	movlw	8
  7042  0B90  00F6               	movwf	??_lcd_init
  7043  0B91  30CA               	movlw	202
  7044  0B92                     u4197:
  7045  0B92  0B89               	decfsz	9,f
  7046  0B93  2B92               	goto	u4197
  7047  0B94  0BF6               	decfsz	??_lcd_init,f
  7048  0B95  2B92               	goto	u4197
  7049  0B96                     l290:
  7050  0B96  0008               	return
  7051  0B97                     __end_of_lcd_init:
  7052                           
  7053                           	psect	text21
  7054  137E                     __ptext21:	
  7055 ;; *************** function _write4bits *****************
  7056 ;; Defined at:
  7057 ;;		line 155 in file "lcd_lib.c"
  7058 ;; Parameters:    Size  Location     Type
  7059 ;;  p               1    wreg     PTR struct .
  7060 ;;		 -> NULL(0), main@lcd(4), 
  7061 ;;  val             1    3[COMMON] unsigned char 
  7062 ;; Auto vars:     Size  Location     Type
  7063 ;;  p               1    5[COMMON] PTR struct .
  7064 ;;		 -> NULL(0), main@lcd(4), 
  7065 ;; Return value:  Size  Location     Type
  7066 ;;                  1    wreg      void 
  7067 ;; Registers used:
  7068 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  7069 ;; Tracked objects:
  7070 ;;		On entry : 0/0
  7071 ;;		On exit  : 0/0
  7072 ;;		Unchanged: 0/0
  7073 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  7074 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7075 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7076 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7077 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7078 ;;Total ram usage:        3 bytes
  7079 ;; Hardware stack levels used: 1
  7080 ;; Hardware stack levels required when called: 3
  7081 ;; This function calls:
  7082 ;;		_lcd_cmd
  7083 ;; This function is called by:
  7084 ;;		_lcd_init
  7085 ;; This function uses a non-reentrant model
  7086 ;;
  7087                           
  7088                           
  7089                           ;psect for function _write4bits
  7090  137E                     _write4bits:
  7091                           
  7092                           ;incstack = 0
  7093                           ; Regs used in _write4bits: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
  7094                           ;write4bits@p stored from wreg
  7095  137E  00F5               	movwf	write4bits@p
  7096  137F                     l2881:
  7097                           
  7098                           ;lcd_lib.c: 156:     lcd_cmd(p, val);
  7099  137F  0873               	movf	write4bits@val,w
  7100  1380  00F4               	movwf	??_write4bits
  7101  1381  0874               	movf	??_write4bits,w
  7102  1382  00F1               	movwf	lcd_cmd@cmd
  7103  1383  0875               	movf	write4bits@p,w
  7104  1384  3193  2300  3193   	fcall	_lcd_cmd
  7105                           
  7106                           ;lcd_lib.c: 157:     lcd_cmd(p, val | 0b00000100);
  7107  1387  0873               	movf	write4bits@val,w
  7108  1388  3804               	iorlw	4
  7109  1389  00F4               	movwf	??_write4bits
  7110  138A  0874               	movf	??_write4bits,w
  7111  138B  00F1               	movwf	lcd_cmd@cmd
  7112  138C  0875               	movf	write4bits@p,w
  7113  138D  3193  2300  3193   	fcall	_lcd_cmd
  7114                           
  7115                           ;lcd_lib.c: 158:     lcd_cmd(p, val);
  7116  1390  0873               	movf	write4bits@val,w
  7117  1391  00F4               	movwf	??_write4bits
  7118  1392  0874               	movf	??_write4bits,w
  7119  1393  00F1               	movwf	lcd_cmd@cmd
  7120  1394  0875               	movf	write4bits@p,w
  7121  1395  3193  2300  3193   	fcall	_lcd_cmd
  7122  1398                     l323:
  7123  1398  0008               	return
  7124  1399                     __end_of_write4bits:
  7125                           
  7126                           	psect	text22
  7127  14C1                     __ptext22:	
  7128 ;; *************** function _lcd_clear *****************
  7129 ;; Defined at:
  7130 ;;		line 91 in file "lcd_lib.c"
  7131 ;; Parameters:    Size  Location     Type
  7132 ;;  p               1    wreg     PTR struct .
  7133 ;;		 -> NULL(0), main@lcd(4), 
  7134 ;; Auto vars:     Size  Location     Type
  7135 ;;  p               1   10[BANK0 ] PTR struct .
  7136 ;;		 -> NULL(0), main@lcd(4), 
  7137 ;;  col             1    9[BANK0 ] unsigned char 
  7138 ;;  row             1    8[BANK0 ] unsigned char 
  7139 ;; Return value:  Size  Location     Type
  7140 ;;                  1    wreg      void 
  7141 ;; Registers used:
  7142 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  7143 ;; Tracked objects:
  7144 ;;		On entry : 0/0
  7145 ;;		On exit  : 0/0
  7146 ;;		Unchanged: 0/0
  7147 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  7148 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7149 ;;      Locals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7150 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7151 ;;      Totals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7152 ;;Total ram usage:        5 bytes
  7153 ;; Hardware stack levels used: 1
  7154 ;; Hardware stack levels required when called: 5
  7155 ;; This function calls:
  7156 ;;		_lcd_print
  7157 ;;		_lcd_set_cursor
  7158 ;; This function is called by:
  7159 ;;		_initialize
  7160 ;;		_print_gram
  7161 ;; This function uses a non-reentrant model
  7162 ;;
  7163                           
  7164                           
  7165                           ;psect for function _lcd_clear
  7166  14C1                     _lcd_clear:
  7167                           
  7168                           ;incstack = 0
  7169                           ; Regs used in _lcd_clear: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  7170                           ;lcd_clear@p stored from wreg
  7171  14C1  0020               	movlb	0	; select bank0
  7172  14C2  00AA               	movwf	lcd_clear@p
  7173  14C3                     l3365:
  7174                           
  7175                           ;lcd_lib.c: 92:     for(uint8_t row = 0; row < (p->ROW); row++){
  7176  14C3  01A8               	clrf	lcd_clear@row
  7177  14C4  2CEE               	goto	l3379
  7178  14C5                     l3367:
  7179                           
  7180                           ;lcd_lib.c: 93:         for(uint8_t col = 0; col < (p->COL); col++){
  7181  14C5  01A9               	clrf	lcd_clear@col
  7182  14C6  2CE1               	goto	l3375
  7183  14C7                     l3369:
  7184                           
  7185                           ;lcd_lib.c: 94:             lcd_set_cursor(p, col, row);
  7186  14C7  0829               	movf	lcd_clear@col,w
  7187  14C8  00A6               	movwf	??_lcd_clear
  7188  14C9  0826               	movf	??_lcd_clear,w
  7189  14CA  00FA               	movwf	lcd_set_cursor@col
  7190  14CB  0828               	movf	lcd_clear@row,w
  7191  14CC  00A7               	movwf	??_lcd_clear+1
  7192  14CD  0827               	movf	??_lcd_clear+1,w
  7193  14CE  00FB               	movwf	lcd_set_cursor@row
  7194  14CF  082A               	movf	lcd_clear@p,w
  7195  14D0  3194  244F  3194   	fcall	_lcd_set_cursor
  7196  14D3                     l3371:
  7197                           
  7198                           ;lcd_lib.c: 95:             lcd_print(p, " ");
  7199  14D3  303B               	movlw	low (STR_1| (0+32768))
  7200  14D4  00FA               	movwf	lcd_print@str
  7201  14D5  3098               	movlw	high (STR_1| (0+32768))
  7202  14D6  00FB               	movwf	lcd_print@str+1
  7203  14D7  0020               	movlb	0	; select bank0
  7204  14D8  082A               	movf	lcd_clear@p,w
  7205  14D9  3193  23DA  3194   	fcall	_lcd_print
  7206  14DC                     l3373:
  7207                           
  7208                           ;lcd_lib.c: 96:         }
  7209  14DC  3001               	movlw	1
  7210  14DD  0020               	movlb	0	; select bank0
  7211  14DE  00A6               	movwf	??_lcd_clear
  7212  14DF  0826               	movf	??_lcd_clear,w
  7213  14E0  07A9               	addwf	lcd_clear@col,f
  7214  14E1                     l3375:
  7215  14E1  0A2A               	incf	lcd_clear@p,w
  7216  14E2  0086               	movwf	6
  7217  14E3  0187               	clrf	7
  7218  14E4  0801               	movf	1,w
  7219  14E5  0229               	subwf	lcd_clear@col,w
  7220  14E6  1C03               	skipc
  7221  14E7  2CE9               	goto	u3721
  7222  14E8  2CEA               	goto	u3720
  7223  14E9                     u3721:
  7224  14E9  2CC7               	goto	l3369
  7225  14EA                     u3720:
  7226  14EA                     l3377:
  7227                           
  7228                           ;lcd_lib.c: 97:     }
  7229  14EA  3001               	movlw	1
  7230  14EB  00A6               	movwf	??_lcd_clear
  7231  14EC  0826               	movf	??_lcd_clear,w
  7232  14ED  07A8               	addwf	lcd_clear@row,f
  7233  14EE                     l3379:
  7234  14EE  082A               	movf	lcd_clear@p,w
  7235  14EF  3E02               	addlw	2
  7236  14F0  0086               	movwf	6
  7237  14F1  0187               	clrf	7
  7238  14F2  0801               	movf	1,w
  7239  14F3  0228               	subwf	lcd_clear@row,w
  7240  14F4  1C03               	skipc
  7241  14F5  2CF7               	goto	u3731
  7242  14F6  2CF8               	goto	u3730
  7243  14F7                     u3731:
  7244  14F7  2CC5               	goto	l3367
  7245  14F8                     u3730:
  7246  14F8                     l3381:
  7247                           
  7248                           ;lcd_lib.c: 99:     lcd_set_cursor(p, 0, 0);
  7249  14F8  01FA               	clrf	lcd_set_cursor@col
  7250  14F9  01FB               	clrf	lcd_set_cursor@row
  7251  14FA  082A               	movf	lcd_clear@p,w
  7252  14FB  3194  244F  3194   	fcall	_lcd_set_cursor
  7253  14FE                     l302:
  7254  14FE  0008               	return
  7255  14FF                     __end_of_lcd_clear:
  7256                           
  7257                           	psect	text23
  7258  144F                     __ptext23:	
  7259 ;; *************** function _lcd_set_cursor *****************
  7260 ;; Defined at:
  7261 ;;		line 107 in file "lcd_lib.c"
  7262 ;; Parameters:    Size  Location     Type
  7263 ;;  p               1    wreg     PTR struct .
  7264 ;;		 -> NULL(0), main@lcd(4), 
  7265 ;;  col             1   10[COMMON] unsigned char 
  7266 ;;  row             1   11[COMMON] unsigned char 
  7267 ;; Auto vars:     Size  Location     Type
  7268 ;;  p               1    5[BANK0 ] PTR struct .
  7269 ;;		 -> NULL(0), main@lcd(4), 
  7270 ;;  row_offsets     4    0[BANK0 ] unsigned char [4]
  7271 ;;  cmd             1    4[BANK0 ] unsigned char 
  7272 ;; Return value:  Size  Location     Type
  7273 ;;                  1    wreg      void 
  7274 ;; Registers used:
  7275 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  7276 ;; Tracked objects:
  7277 ;;		On entry : 0/0
  7278 ;;		On exit  : 0/0
  7279 ;;		Unchanged: 0/0
  7280 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  7281 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7282 ;;      Locals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7283 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7284 ;;      Totals:         3       6       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7285 ;;Total ram usage:        9 bytes
  7286 ;; Hardware stack levels used: 1
  7287 ;; Hardware stack levels required when called: 4
  7288 ;; This function calls:
  7289 ;;		_command
  7290 ;; This function is called by:
  7291 ;;		_lcd_clear
  7292 ;;		_lcd_print_with
  7293 ;; This function uses a non-reentrant model
  7294 ;;
  7295                           
  7296                           
  7297                           ;psect for function _lcd_set_cursor
  7298  144F                     _lcd_set_cursor:
  7299                           
  7300                           ;incstack = 0
  7301                           ; Regs used in _lcd_set_cursor: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
  7302                           ;lcd_set_cursor@p stored from wreg
  7303  144F  0020               	movlb	0	; select bank0
  7304  1450  00A5               	movwf	lcd_set_cursor@p
  7305  1451                     l2883:
  7306                           
  7307                           ;lcd_lib.c: 108:     uint8_t row_offsets[] = {0x00, 0x40, 0x14, 0x54};
  7308  1451  0022               	movlb	2	; select bank2
  7309  1452  0868               	movf	(lcd_set_cursor@F2781+3)^(0+256),w
  7310  1453  0020               	movlb	0	; select bank0
  7311  1454  00A3               	movwf	lcd_set_cursor@row_offsets+3
  7312  1455  0022               	movlb	2	; select bank2
  7313  1456  0867               	movf	(lcd_set_cursor@F2781+2)^(0+256),w
  7314  1457  0020               	movlb	0	; select bank0
  7315  1458  00A2               	movwf	lcd_set_cursor@row_offsets+2
  7316  1459  0022               	movlb	2	; select bank2
  7317  145A  0866               	movf	(lcd_set_cursor@F2781+1)^(0+256),w
  7318  145B  0020               	movlb	0	; select bank0
  7319  145C  00A1               	movwf	lcd_set_cursor@row_offsets+1
  7320  145D  0022               	movlb	2	; select bank2
  7321  145E  0865               	movf	lcd_set_cursor@F2781^(0+256),w
  7322  145F  0020               	movlb	0	; select bank0
  7323  1460  00A0               	movwf	lcd_set_cursor@row_offsets
  7324  1461                     l2885:
  7325                           
  7326                           ;lcd_lib.c: 109:     if(row > p->ROW){
  7327  1461  0825               	movf	lcd_set_cursor@p,w
  7328  1462  3E02               	addlw	2
  7329  1463  0086               	movwf	6
  7330  1464  0187               	clrf	7
  7331  1465  087B               	movf	lcd_set_cursor@row,w
  7332  1466  0201               	subwf	1,w
  7333  1467  1803               	skipnc
  7334  1468  2C6A               	goto	u2961
  7335  1469  2C6B               	goto	u2960
  7336  146A                     u2961:
  7337  146A  2C74               	goto	l307
  7338  146B                     u2960:
  7339  146B                     l2887:
  7340                           
  7341                           ;lcd_lib.c: 110:         row = p->ROW - 1;
  7342  146B  0825               	movf	lcd_set_cursor@p,w
  7343  146C  3E02               	addlw	2
  7344  146D  0086               	movwf	6
  7345  146E  0187               	clrf	7
  7346  146F  0801               	movf	1,w
  7347  1470  3EFF               	addlw	255
  7348  1471  00FC               	movwf	??_lcd_set_cursor
  7349  1472  087C               	movf	??_lcd_set_cursor,w
  7350  1473  00FB               	movwf	lcd_set_cursor@row
  7351  1474                     l307:	
  7352                           ;lcd_lib.c: 111:     }
  7353                           
  7354                           
  7355                           ;lcd_lib.c: 112:     uint8_t cmd = 0x80 | (col + row_offsets[row]);
  7356  1474  087B               	movf	lcd_set_cursor@row,w
  7357  1475  3E20               	addlw	(low (lcd_set_cursor@row_offsets| 0))& (0+255)
  7358  1476  0086               	movwf	6
  7359  1477  0187               	clrf	7
  7360  1478  0801               	movf	1,w
  7361  1479  077A               	addwf	lcd_set_cursor@col,w
  7362  147A  3880               	iorlw	128
  7363  147B  00FC               	movwf	??_lcd_set_cursor
  7364  147C  087C               	movf	??_lcd_set_cursor,w
  7365  147D  00A4               	movwf	lcd_set_cursor@cmd
  7366  147E                     l2889:
  7367                           
  7368                           ;lcd_lib.c: 113:     command(p, cmd, 0);
  7369  147E  0824               	movf	lcd_set_cursor@cmd,w
  7370  147F  00FC               	movwf	??_lcd_set_cursor
  7371  1480  087C               	movf	??_lcd_set_cursor,w
  7372  1481  00F3               	movwf	command@val
  7373  1482  01F4               	clrf	command@mode
  7374  1483  0825               	movf	lcd_set_cursor@p,w
  7375  1484  3195  254E  3194   	fcall	_command
  7376  1487                     l308:
  7377  1487  0008               	return
  7378  1488                     __end_of_lcd_set_cursor:
  7379                           
  7380                           	psect	text24
  7381  13DA                     __ptext24:	
  7382 ;; *************** function _lcd_print *****************
  7383 ;; Defined at:
  7384 ;;		line 121 in file "lcd_lib.c"
  7385 ;; Parameters:    Size  Location     Type
  7386 ;;  p               1    wreg     PTR struct .
  7387 ;;		 -> NULL(0), main@lcd(4), 
  7388 ;;  str             2   10[COMMON] PTR unsigned char 
  7389 ;;		 -> print_gram@row2(16), print_gram@row1(16), initialize@valstr(16), STR_3(15), 
  7390 ;;		 -> STR_2(11), STR_1(2), 
  7391 ;; Auto vars:     Size  Location     Type
  7392 ;;  p               1    1[BANK0 ] PTR struct .
  7393 ;;		 -> NULL(0), main@lcd(4), 
  7394 ;;  cmd             1    0[BANK0 ] unsigned char 
  7395 ;; Return value:  Size  Location     Type
  7396 ;;                  1    wreg      void 
  7397 ;; Registers used:
  7398 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  7399 ;; Tracked objects:
  7400 ;;		On entry : 0/0
  7401 ;;		On exit  : 0/0
  7402 ;;		Unchanged: 0/0
  7403 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  7404 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7405 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7406 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7407 ;;      Totals:         3       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7408 ;;Total ram usage:        5 bytes
  7409 ;; Hardware stack levels used: 1
  7410 ;; Hardware stack levels required when called: 4
  7411 ;; This function calls:
  7412 ;;		_command
  7413 ;; This function is called by:
  7414 ;;		_lcd_clear
  7415 ;;		_lcd_print_with
  7416 ;;		_initialize
  7417 ;; This function uses a non-reentrant model
  7418 ;;
  7419                           
  7420                           
  7421                           ;psect for function _lcd_print
  7422  13DA                     _lcd_print:
  7423                           
  7424                           ;incstack = 0
  7425                           ; Regs used in _lcd_print: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  7426                           ;lcd_print@p stored from wreg
  7427  13DA  0020               	movlb	0	; select bank0
  7428  13DB  00A1               	movwf	lcd_print@p
  7429  13DC                     l2891:
  7430                           
  7431                           ;lcd_lib.c: 122:     while (*str) {
  7432  13DC  2BF4               	goto	l2899
  7433  13DD                     l2893:
  7434                           
  7435                           ;lcd_lib.c: 123:         uint8_t cmd = *str++;
  7436  13DD  087A               	movf	lcd_print@str,w
  7437  13DE  0084               	movwf	4
  7438  13DF  087B               	movf	lcd_print@str+1,w
  7439  13E0  0085               	movwf	5
  7440  13E1  0800               	movf	0,w	;code access
  7441  13E2  00FC               	movwf	??_lcd_print
  7442  13E3  087C               	movf	??_lcd_print,w
  7443  13E4  0020               	movlb	0	; select bank0
  7444  13E5  00A0               	movwf	lcd_print@cmd
  7445  13E6                     l2895:
  7446  13E6  3001               	movlw	1
  7447  13E7  07FA               	addwf	lcd_print@str,f
  7448  13E8  3000               	movlw	0
  7449  13E9  3DFB               	addwfc	lcd_print@str+1,f
  7450  13EA                     l2897:
  7451                           
  7452                           ;lcd_lib.c: 124:         command(p, cmd, 0b00000001);
  7453  13EA  0820               	movf	lcd_print@cmd,w
  7454  13EB  00FC               	movwf	??_lcd_print
  7455  13EC  087C               	movf	??_lcd_print,w
  7456  13ED  00F3               	movwf	command@val
  7457  13EE  01F4               	clrf	command@mode
  7458  13EF  0AF4               	incf	command@mode,f
  7459  13F0  0821               	movf	lcd_print@p,w
  7460  13F1  3195  254E  3193   	fcall	_command
  7461  13F4                     l2899:
  7462                           
  7463                           ;lcd_lib.c: 122:     while (*str) {
  7464  13F4  087A               	movf	lcd_print@str,w
  7465  13F5  0084               	movwf	4
  7466  13F6  087B               	movf	lcd_print@str+1,w
  7467  13F7  0085               	movwf	5
  7468  13F8  0012               	moviw fsr0++
  7469  13F9  1D03               	btfss	3,2
  7470  13FA  2BFC               	goto	u2971
  7471  13FB  2BFD               	goto	u2970
  7472  13FC                     u2971:
  7473  13FC  2BDD               	goto	l2893
  7474  13FD                     u2970:
  7475  13FD                     l314:
  7476  13FD  0008               	return
  7477  13FE                     __end_of_lcd_print:
  7478                           
  7479                           	psect	text25
  7480  154E                     __ptext25:	
  7481 ;; *************** function _command *****************
  7482 ;; Defined at:
  7483 ;;		line 140 in file "lcd_lib.c"
  7484 ;; Parameters:    Size  Location     Type
  7485 ;;  p               1    wreg     PTR struct .
  7486 ;;		 -> NULL(0), main@lcd(4), 
  7487 ;;  val             1    3[COMMON] unsigned char 
  7488 ;;  mode            1    4[COMMON] unsigned char 
  7489 ;; Auto vars:     Size  Location     Type
  7490 ;;  p               1    9[COMMON] PTR struct .
  7491 ;;		 -> NULL(0), main@lcd(4), 
  7492 ;;  lownib          1    8[COMMON] unsigned char 
  7493 ;;  highnib         1    7[COMMON] unsigned char 
  7494 ;; Return value:  Size  Location     Type
  7495 ;;                  1    wreg      void 
  7496 ;; Registers used:
  7497 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  7498 ;; Tracked objects:
  7499 ;;		On entry : 0/0
  7500 ;;		On exit  : 0/0
  7501 ;;		Unchanged: 0/0
  7502 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  7503 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7504 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7505 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7506 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7507 ;;Total ram usage:        7 bytes
  7508 ;; Hardware stack levels used: 1
  7509 ;; Hardware stack levels required when called: 3
  7510 ;; This function calls:
  7511 ;;		_lcd_cmd
  7512 ;; This function is called by:
  7513 ;;		_lcd_set_cursor
  7514 ;;		_lcd_print
  7515 ;; This function uses a non-reentrant model
  7516 ;;
  7517                           
  7518                           
  7519                           ;psect for function _command
  7520  154E                     _command:
  7521                           
  7522                           ;incstack = 0
  7523                           ; Regs used in _command: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
  7524                           ;command@p stored from wreg
  7525  154E  00F9               	movwf	command@p
  7526  154F                     l2685:
  7527                           
  7528                           ;lcd_lib.c: 141:     uint8_t highnib = (val & 0xf0) | p->_backlightval | mode;
  7529  154F  0879               	movf	command@p,w
  7530  1550  3E03               	addlw	3
  7531  1551  0086               	movwf	6
  7532  1552  0187               	clrf	7
  7533  1553  0873               	movf	command@val,w
  7534  1554  39F0               	andlw	240
  7535  1555  0401               	iorwf	1,w
  7536  1556  0474               	iorwf	command@mode,w
  7537  1557  00F5               	movwf	??_command
  7538  1558  0875               	movf	??_command,w
  7539  1559  00F7               	movwf	command@highnib
  7540                           
  7541                           ;lcd_lib.c: 142:  uint8_t lownib = ((val << 4) & 0xf0) | p->_backlightval | mode;
  7542  155A  0879               	movf	command@p,w
  7543  155B  3E03               	addlw	3
  7544  155C  0086               	movwf	6
  7545  155D  0187               	clrf	7
  7546  155E  0873               	movf	command@val,w
  7547  155F  00F5               	movwf	??_command
  7548  1560  3003               	movlw	3
  7549  1561                     u2795:
  7550  1561  35F5               	lslf	??_command,f
  7551  1562  3EFF               	addlw	-1
  7552  1563  1D03               	skipz
  7553  1564  2D61               	goto	u2795
  7554  1565  3575               	lslf	??_command,w
  7555  1566  39F0               	andlw	240
  7556  1567  0401               	iorwf	1,w
  7557  1568  0474               	iorwf	command@mode,w
  7558  1569  00F6               	movwf	??_command+1
  7559  156A  0876               	movf	??_command+1,w
  7560  156B  00F8               	movwf	command@lownib
  7561  156C                     l2687:
  7562                           
  7563                           ;lcd_lib.c: 144:  lcd_cmd(p, highnib);
  7564  156C  0877               	movf	command@highnib,w
  7565  156D  00F5               	movwf	??_command
  7566  156E  0875               	movf	??_command,w
  7567  156F  00F1               	movwf	lcd_cmd@cmd
  7568  1570  0879               	movf	command@p,w
  7569  1571  3193  2300  3195   	fcall	_lcd_cmd
  7570  1574                     l2689:
  7571                           
  7572                           ;lcd_lib.c: 145:     lcd_cmd(p, highnib | 0b00000100);
  7573  1574  0877               	movf	command@highnib,w
  7574  1575  3804               	iorlw	4
  7575  1576  00F5               	movwf	??_command
  7576  1577  0875               	movf	??_command,w
  7577  1578  00F1               	movwf	lcd_cmd@cmd
  7578  1579  0879               	movf	command@p,w
  7579  157A  3193  2300  3195   	fcall	_lcd_cmd
  7580  157D                     l2691:
  7581                           
  7582                           ;lcd_lib.c: 146:     lcd_cmd(p, highnib & ~0b00000100);
  7583  157D  0877               	movf	command@highnib,w
  7584  157E  39FB               	andlw	251
  7585  157F  00F5               	movwf	??_command
  7586  1580  0875               	movf	??_command,w
  7587  1581  00F1               	movwf	lcd_cmd@cmd
  7588  1582  0879               	movf	command@p,w
  7589  1583  3193  2300  3195   	fcall	_lcd_cmd
  7590  1586                     l2693:
  7591                           
  7592                           ;lcd_lib.c: 148:     _delay((unsigned long)((100)*(8000000/4000000.0)));
  7593  1586  3042               	movlw	66
  7594  1587                     u4207:
  7595  1587  0B89               	decfsz	9,f
  7596  1588  2D87               	goto	u4207
  7597  1589  3200               	nop2
  7598  158A                     l2695:
  7599                           
  7600                           ;lcd_lib.c: 150:  lcd_cmd(p, lownib);
  7601  158A  0878               	movf	command@lownib,w
  7602  158B  00F5               	movwf	??_command
  7603  158C  0875               	movf	??_command,w
  7604  158D  00F1               	movwf	lcd_cmd@cmd
  7605  158E  0879               	movf	command@p,w
  7606  158F  3193  2300  3195   	fcall	_lcd_cmd
  7607  1592                     l2697:
  7608                           
  7609                           ;lcd_lib.c: 151:     lcd_cmd(p, lownib | 0b00000100);
  7610  1592  0878               	movf	command@lownib,w
  7611  1593  3804               	iorlw	4
  7612  1594  00F5               	movwf	??_command
  7613  1595  0875               	movf	??_command,w
  7614  1596  00F1               	movwf	lcd_cmd@cmd
  7615  1597  0879               	movf	command@p,w
  7616  1598  3193  2300  3195   	fcall	_lcd_cmd
  7617  159B                     l2699:
  7618                           
  7619                           ;lcd_lib.c: 152:     lcd_cmd(p, lownib & ~0b00000100);
  7620  159B  0878               	movf	command@lownib,w
  7621  159C  39FB               	andlw	251
  7622  159D  00F5               	movwf	??_command
  7623  159E  0875               	movf	??_command,w
  7624  159F  00F1               	movwf	lcd_cmd@cmd
  7625  15A0  0879               	movf	command@p,w
  7626  15A1  3193  2300  3195   	fcall	_lcd_cmd
  7627  15A4                     l320:
  7628  15A4  0008               	return
  7629  15A5                     __end_of_command:
  7630                           
  7631                           	psect	text26
  7632  12EA                     __ptext26:	
  7633 ;; *************** function _lcd_backlight *****************
  7634 ;; Defined at:
  7635 ;;		line 81 in file "lcd_lib.c"
  7636 ;; Parameters:    Size  Location     Type
  7637 ;;  p               1    wreg     PTR struct .
  7638 ;;		 -> NULL(0), main@lcd(4), 
  7639 ;; Auto vars:     Size  Location     Type
  7640 ;;  p               1    4[COMMON] PTR struct .
  7641 ;;		 -> NULL(0), main@lcd(4), 
  7642 ;; Return value:  Size  Location     Type
  7643 ;;                  1    wreg      void 
  7644 ;; Registers used:
  7645 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  7646 ;; Tracked objects:
  7647 ;;		On entry : 0/0
  7648 ;;		On exit  : 0/0
  7649 ;;		Unchanged: 0/0
  7650 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  7651 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7652 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7653 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7654 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7655 ;;Total ram usage:        2 bytes
  7656 ;; Hardware stack levels used: 1
  7657 ;; Hardware stack levels required when called: 3
  7658 ;; This function calls:
  7659 ;;		_lcd_cmd
  7660 ;; This function is called by:
  7661 ;;		_initialize
  7662 ;; This function uses a non-reentrant model
  7663 ;;
  7664                           
  7665                           
  7666                           ;psect for function _lcd_backlight
  7667  12EA                     _lcd_backlight:
  7668                           
  7669                           ;incstack = 0
  7670                           ; Regs used in _lcd_backlight: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
  7671                           ;lcd_backlight@p stored from wreg
  7672  12EA  00F4               	movwf	lcd_backlight@p
  7673  12EB                     l3359:
  7674                           
  7675                           ;lcd_lib.c: 82:     lcd_cmd(p, 0x08);
  7676  12EB  3008               	movlw	8
  7677  12EC  00F3               	movwf	??_lcd_backlight
  7678  12ED  0873               	movf	??_lcd_backlight,w
  7679  12EE  00F1               	movwf	lcd_cmd@cmd
  7680  12EF  0874               	movf	lcd_backlight@p,w
  7681  12F0  3193  2300  3192   	fcall	_lcd_cmd
  7682  12F3                     l3361:
  7683                           
  7684                           ;lcd_lib.c: 83:     p->_backlightval = 0x08;
  7685  12F3  3008               	movlw	8
  7686  12F4  00F3               	movwf	??_lcd_backlight
  7687  12F5  0874               	movf	lcd_backlight@p,w
  7688  12F6  3E03               	addlw	3
  7689  12F7  0086               	movwf	6
  7690  12F8  0187               	clrf	7
  7691  12F9  0873               	movf	??_lcd_backlight,w
  7692  12FA  0081               	movwf	1
  7693  12FB                     l3363:
  7694                           
  7695                           ;lcd_lib.c: 84:     _delay((unsigned long)((10)*(8000000/4000000.0)));
  7696  12FB  3006               	movlw	6
  7697  12FC                     u4217:
  7698  12FC  0B89               	decfsz	9,f
  7699  12FD  2AFC               	goto	u4217
  7700  12FE  3200               	nop2
  7701  12FF                     l293:
  7702  12FF  0008               	return
  7703  1300                     __end_of_lcd_backlight:
  7704                           
  7705                           	psect	text27
  7706  1300                     __ptext27:	
  7707 ;; *************** function _lcd_cmd *****************
  7708 ;; Defined at:
  7709 ;;		line 6 in file "lcd_lib.c"
  7710 ;; Parameters:    Size  Location     Type
  7711 ;;  p               1    wreg     PTR struct .
  7712 ;;		 -> NULL(0), main@lcd(4), 
  7713 ;;  cmd             1    1[COMMON] unsigned char 
  7714 ;; Auto vars:     Size  Location     Type
  7715 ;;  p               1    2[COMMON] PTR struct .
  7716 ;;		 -> NULL(0), main@lcd(4), 
  7717 ;; Return value:  Size  Location     Type
  7718 ;;                  1    wreg      void 
  7719 ;; Registers used:
  7720 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  7721 ;; Tracked objects:
  7722 ;;		On entry : 0/0
  7723 ;;		On exit  : 0/0
  7724 ;;		Unchanged: 0/0
  7725 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  7726 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7727 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7728 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7729 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7730 ;;Total ram usage:        2 bytes
  7731 ;; Hardware stack levels used: 1
  7732 ;; Hardware stack levels required when called: 2
  7733 ;; This function calls:
  7734 ;;		_i2c_start
  7735 ;;		_i2c_stop
  7736 ;;		_i2c_write
  7737 ;; This function is called by:
  7738 ;;		_lcd_backlight
  7739 ;;		_command
  7740 ;;		_write4bits
  7741 ;; This function uses a non-reentrant model
  7742 ;;
  7743                           
  7744                           
  7745                           ;psect for function _lcd_cmd
  7746  1300                     _lcd_cmd:
  7747                           
  7748                           ;incstack = 0
  7749                           ; Regs used in _lcd_cmd: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
  7750                           ;lcd_cmd@p stored from wreg
  7751  1300  00F2               	movwf	lcd_cmd@p
  7752  1301                     l2559:
  7753                           
  7754                           ;lcd_lib.c: 7:     i2c_start();
  7755  1301  3180  2004  3193   	fcall	_i2c_start
  7756  1304                     l2561:
  7757                           
  7758                           ;lcd_lib.c: 8:     i2c_write(p->lcd_address << 1);
  7759  1304  0872               	movf	lcd_cmd@p,w
  7760  1305  0086               	movwf	6
  7761  1306  0187               	clrf	7
  7762  1307  3501               	lslf	1,w
  7763  1308  3192  22DA  3193   	fcall	_i2c_write
  7764  130B                     l2563:
  7765                           
  7766                           ;lcd_lib.c: 9:     i2c_write(cmd);
  7767  130B  0871               	movf	lcd_cmd@cmd,w
  7768  130C  3192  22DA  3193   	fcall	_i2c_write
  7769  130F                     l2565:
  7770                           
  7771                           ;lcd_lib.c: 10:     i2c_stop();
  7772  130F  3192  22B5  3193   	fcall	_i2c_stop
  7773  1312                     l2567:
  7774                           
  7775                           ;lcd_lib.c: 11:     _delay((unsigned long)((10)*(8000000/4000000.0)));
  7776  1312  3006               	movlw	6
  7777  1313                     u4227:
  7778  1313  0B89               	decfsz	9,f
  7779  1314  2B13               	goto	u4227
  7780  1315  3200               	nop2
  7781  1316                     l287:
  7782  1316  0008               	return
  7783  1317                     __end_of_lcd_cmd:
  7784                           
  7785                           	psect	text28
  7786  12DA                     __ptext28:	
  7787 ;; *************** function _i2c_write *****************
  7788 ;; Defined at:
  7789 ;;		line 25 in file "i2c.c"
  7790 ;; Parameters:    Size  Location     Type
  7791 ;;  data            1    wreg     unsigned char 
  7792 ;; Auto vars:     Size  Location     Type
  7793 ;;  data            1    0[COMMON] unsigned char 
  7794 ;; Return value:  Size  Location     Type
  7795 ;;                  1    wreg      void 
  7796 ;; Registers used:
  7797 ;;		wreg, status,2, status,0, pclath, cstack
  7798 ;; Tracked objects:
  7799 ;;		On entry : 0/0
  7800 ;;		On exit  : 0/0
  7801 ;;		Unchanged: 0/0
  7802 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  7803 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7804 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7805 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7806 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7807 ;;Total ram usage:        1 bytes
  7808 ;; Hardware stack levels used: 1
  7809 ;; Hardware stack levels required when called: 1
  7810 ;; This function calls:
  7811 ;;		_i2c_wait
  7812 ;; This function is called by:
  7813 ;;		_lcd_cmd
  7814 ;; This function uses a non-reentrant model
  7815 ;;
  7816                           
  7817                           
  7818                           ;psect for function _i2c_write
  7819  12DA                     _i2c_write:
  7820                           
  7821                           ;incstack = 0
  7822                           ; Regs used in _i2c_write: [wreg+status,2+status,0+pclath+cstack]
  7823                           ;i2c_write@data stored from wreg
  7824  12DA  00F0               	movwf	i2c_write@data
  7825  12DB                     l2423:
  7826                           
  7827                           ;i2c.c: 26:     SSPBUF = data;
  7828  12DB  0870               	movf	i2c_write@data,w
  7829  12DC  0024               	movlb	4	; select bank4
  7830  12DD  0091               	movwf	17	;volatile
  7831  12DE                     l96:	
  7832                           ;i2c.c: 27:     while(SSPSTATbits.BF);
  7833                           
  7834  12DE  1814               	btfsc	20,0	;volatile
  7835  12DF  2AE1               	goto	u2141
  7836  12E0  2AE2               	goto	u2140
  7837  12E1                     u2141:
  7838  12E1  2ADE               	goto	l96
  7839  12E2                     u2140:
  7840  12E2                     l99:
  7841  12E2  1B16               	btfsc	22,6	;volatile
  7842  12E3  2AE5               	goto	u2151
  7843  12E4  2AE6               	goto	u2150
  7844  12E5                     u2151:
  7845  12E5  2AE2               	goto	l99
  7846  12E6                     u2150:
  7847  12E6                     l2425:
  7848                           
  7849                           ;i2c.c: 29:     i2c_wait();
  7850  12E6  3188  2000  3192   	fcall	_i2c_wait
  7851  12E9                     l102:
  7852  12E9  0008               	return
  7853  12EA                     __end_of_i2c_write:
  7854                           
  7855                           	psect	text29
  7856  12B5                     __ptext29:	
  7857 ;; *************** function _i2c_stop *****************
  7858 ;; Defined at:
  7859 ;;		line 14 in file "i2c.c"
  7860 ;; Parameters:    Size  Location     Type
  7861 ;;		None
  7862 ;; Auto vars:     Size  Location     Type
  7863 ;;		None
  7864 ;; Return value:  Size  Location     Type
  7865 ;;                  1    wreg      void 
  7866 ;; Registers used:
  7867 ;;		None
  7868 ;; Tracked objects:
  7869 ;;		On entry : 0/0
  7870 ;;		On exit  : 0/0
  7871 ;;		Unchanged: 0/0
  7872 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  7873 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7874 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7875 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7876 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7877 ;;Total ram usage:        0 bytes
  7878 ;; Hardware stack levels used: 1
  7879 ;; This function calls:
  7880 ;;		Nothing
  7881 ;; This function is called by:
  7882 ;;		_lcd_cmd
  7883 ;; This function uses a non-reentrant model
  7884 ;;
  7885                           
  7886                           
  7887                           ;psect for function _i2c_stop
  7888  12B5                     _i2c_stop:
  7889  12B5                     l2421:	
  7890                           ;incstack = 0
  7891                           ; Regs used in _i2c_stop: []
  7892                           
  7893                           
  7894                           ;i2c.c: 15:     SSPCON2bits.PEN = 1;
  7895  12B5  0024               	movlb	4	; select bank4
  7896  12B6  1516               	bsf	22,2	;volatile
  7897  12B7                     l84:	
  7898                           ;i2c.c: 16:     while(SSPCON2bits.PEN);
  7899                           
  7900  12B7  1916               	btfsc	22,2	;volatile
  7901  12B8  2ABA               	goto	u2131
  7902  12B9  2ABB               	goto	u2130
  7903  12BA                     u2131:
  7904  12BA  2AB7               	goto	l84
  7905  12BB                     u2130:
  7906  12BB                     l87:
  7907  12BB  0008               	return
  7908  12BC                     __end_of_i2c_stop:
  7909                           
  7910                           	psect	text30
  7911  0004                     __ptext30:	
  7912 ;; *************** function _i2c_start *****************
  7913 ;; Defined at:
  7914 ;;		line 8 in file "i2c.c"
  7915 ;; Parameters:    Size  Location     Type
  7916 ;;		None
  7917 ;; Auto vars:     Size  Location     Type
  7918 ;;		None
  7919 ;; Return value:  Size  Location     Type
  7920 ;;                  1    wreg      void 
  7921 ;; Registers used:
  7922 ;;		wreg, status,2, status,0, pclath, cstack
  7923 ;; Tracked objects:
  7924 ;;		On entry : 0/0
  7925 ;;		On exit  : 0/0
  7926 ;;		Unchanged: 0/0
  7927 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  7928 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7929 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7930 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7931 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7932 ;;Total ram usage:        0 bytes
  7933 ;; Hardware stack levels used: 1
  7934 ;; Hardware stack levels required when called: 1
  7935 ;; This function calls:
  7936 ;;		_i2c_wait
  7937 ;; This function is called by:
  7938 ;;		_lcd_cmd
  7939 ;; This function uses a non-reentrant model
  7940 ;;
  7941                           
  7942                           
  7943                           ;psect for function _i2c_start
  7944  0004                     _i2c_start:
  7945  0004                     l2417:	
  7946                           ;incstack = 0
  7947                           ; Regs used in _i2c_start: [wreg+status,2+status,0+pclath+cstack]
  7948                           
  7949                           
  7950                           ;i2c.c: 9:     i2c_wait();
  7951  0004  3188  2000  3180   	fcall	_i2c_wait
  7952  0007                     l2419:
  7953                           
  7954                           ;i2c.c: 10:     SSPCON2bits.SEN = 1;
  7955  0007  0024               	movlb	4	; select bank4
  7956  0008  1416               	bsf	22,0	;volatile
  7957  0009                     l78:	
  7958                           ;i2c.c: 11:     while(SSPCON2bits.SEN);
  7959                           
  7960  0009  1816               	btfsc	22,0	;volatile
  7961  000A  280C               	goto	u2121
  7962  000B  280D               	goto	u2120
  7963  000C                     u2121:
  7964  000C  2809               	goto	l78
  7965  000D                     u2120:
  7966  000D                     l81:
  7967  000D  0008               	return
  7968  000E                     __end_of_i2c_start:
  7969                           
  7970                           	psect	text31
  7971  0800                     __ptext31:	
  7972 ;; *************** function _i2c_wait *****************
  7973 ;; Defined at:
  7974 ;;		line 4 in file "i2c.c"
  7975 ;; Parameters:    Size  Location     Type
  7976 ;;		None
  7977 ;; Auto vars:     Size  Location     Type
  7978 ;;		None
  7979 ;; Return value:  Size  Location     Type
  7980 ;;                  1    wreg      void 
  7981 ;; Registers used:
  7982 ;;		wreg, status,2
  7983 ;; Tracked objects:
  7984 ;;		On entry : 0/0
  7985 ;;		On exit  : 0/0
  7986 ;;		Unchanged: 0/0
  7987 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  7988 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7989 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7990 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7991 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7992 ;;Total ram usage:        0 bytes
  7993 ;; Hardware stack levels used: 1
  7994 ;; This function calls:
  7995 ;;		Nothing
  7996 ;; This function is called by:
  7997 ;;		_i2c_start
  7998 ;;		_i2c_write
  7999 ;;		_i2c_repeated_start
  8000 ;;		_i2c_read
  8001 ;; This function uses a non-reentrant model
  8002 ;;
  8003                           
  8004                           
  8005                           ;psect for function _i2c_wait
  8006  0800                     _i2c_wait:
  8007  0800                     l2393:	
  8008                           ;incstack = 0
  8009                           ; Regs used in _i2c_wait: [wreg+status,2]
  8010                           
  8011  0800                     l2395:	
  8012                           ;i2c.c: 5:     while((SSPCON2 & 0x1F) || (SSPSTAT & 0x04));
  8013                           
  8014  0800  0024               	movlb	4	; select bank4
  8015  0801  0816               	movf	22,w	;volatile
  8016  0802  391F               	andlw	31
  8017  0803  1D03               	btfss	3,2
  8018  0804  2806               	goto	u2081
  8019  0805  2807               	goto	u2080
  8020  0806                     u2081:
  8021  0806  2800               	goto	l2395
  8022  0807                     u2080:
  8023  0807                     l2397:
  8024  0807  1914               	btfsc	20,2	;volatile
  8025  0808  280A               	goto	u2091
  8026  0809  280B               	goto	u2090
  8027  080A                     u2091:
  8028  080A  2800               	goto	l2395
  8029  080B                     u2090:
  8030  080B                     l75:
  8031  080B  0008               	return
  8032  080C                     __end_of_i2c_wait:
  8033                           
  8034                           	psect	text32
  8035  0A49                     __ptext32:	
  8036 ;; *************** function _calc_percentage *****************
  8037 ;; Defined at:
  8038 ;;		line 22 in file "drink_meter.c"
  8039 ;; Parameters:    Size  Location     Type
  8040 ;;  p               1    wreg     PTR struct .
  8041 ;;		 -> main@drink(5), 
  8042 ;; Auto vars:     Size  Location     Type
  8043 ;;  p               1   76[BANK0 ] PTR struct .
  8044 ;;		 -> main@drink(5), 
  8045 ;; Return value:  Size  Location     Type
  8046 ;;                  1    wreg      void 
  8047 ;; Registers used:
  8048 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  8049 ;; Tracked objects:
  8050 ;;		On entry : 0/0
  8051 ;;		On exit  : 0/0
  8052 ;;		Unchanged: 0/0
  8053 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  8054 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8055 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8056 ;;      Temps:          0       0       5       0       0       0       0       0       0       0       0       0       
      +0       0
  8057 ;;      Totals:         0       1       5       0       0       0       0       0       0       0       0       0       
      +0       0
  8058 ;;Total ram usage:        6 bytes
  8059 ;; Hardware stack levels used: 1
  8060 ;; Hardware stack levels required when called: 2
  8061 ;; This function calls:
  8062 ;;		___fldiv
  8063 ;;		___flmul
  8064 ;;		___fltol
  8065 ;;		___xxtofl
  8066 ;;		_get_scale_val
  8067 ;;		_scale_convert_gram
  8068 ;; This function is called by:
  8069 ;;		_main
  8070 ;;		_set_max_gram
  8071 ;; This function uses a non-reentrant model
  8072 ;;
  8073                           
  8074                           
  8075                           ;psect for function _calc_percentage
  8076  0A49                     _calc_percentage:
  8077                           
  8078                           ;incstack = 0
  8079                           ; Regs used in _calc_percentage: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
  8080                           ;calc_percentage@p stored from wreg
  8081  0A49  0020               	movlb	0	; select bank0
  8082  0A4A  00EC               	movwf	calc_percentage@p
  8083  0A4B                     l3553:
  8084                           
  8085                           ;drink_meter.c: 24:     p->loadcell->weight_dat = get_scale_val(p->loadcell, 16);
  8086  0A4B  3010               	movlw	16
  8087  0A4C  0021               	movlb	1	; select bank1
  8088  0A4D  00A0               	movwf	??_calc_percentage^(0+128)
  8089  0A4E  0820               	movf	??_calc_percentage^(0+128),w
  8090  0A4F  0020               	movlb	0	; select bank0
  8091  0A50  00A0               	movwf	get_scale_val@scale_avg_count
  8092  0A51  086C               	movf	calc_percentage@p,w
  8093  0A52  0086               	movwf	6
  8094  0A53  0187               	clrf	7
  8095  0A54  0801               	movf	1,w
  8096  0A55  318C  2443  318A   	fcall	_get_scale_val
  8097  0A58  0020               	movlb	0	; select bank0
  8098  0A59  086C               	movf	calc_percentage@p,w
  8099  0A5A  0086               	movwf	6
  8100  0A5B  0187               	clrf	7
  8101  0A5C  0801               	movf	1,w
  8102  0A5D  3E06               	addlw	6
  8103  0A5E  0086               	movwf	6
  8104  0A5F  0187               	clrf	7
  8105  0A60  0820               	movf	?_get_scale_val,w
  8106  0A61  3FC0               	movwi [0]fsr1
  8107  0A62  0821               	movf	?_get_scale_val+1,w
  8108  0A63  3FC1               	movwi [1]fsr1
  8109  0A64  0822               	movf	?_get_scale_val+2,w
  8110  0A65  3FC2               	movwi [2]fsr1
  8111  0A66  0823               	movf	?_get_scale_val+3,w
  8112  0A67  3FC3               	movwi [3]fsr1
  8113                           
  8114                           ;drink_meter.c: 25:     scale_convert_gram(p->loadcell);
  8115  0A68  086C               	movf	calc_percentage@p,w
  8116  0A69  0086               	movwf	6
  8117  0A6A  0187               	clrf	7
  8118  0A6B  0801               	movf	1,w
  8119  0A6C  3189  210C  318A   	fcall	_scale_convert_gram
  8120  0A6F                     l3555:
  8121                           
  8122                           ;drink_meter.c: 28:     if(p->loadcell->gram == 0){
  8123  0A6F  0020               	movlb	0	; select bank0
  8124  0A70  086C               	movf	calc_percentage@p,w
  8125  0A71  0086               	movwf	6
  8126  0A72  0187               	clrf	7
  8127  0A73  0801               	movf	1,w
  8128  0A74  3E0A               	addlw	10
  8129  0A75  0086               	movwf	6
  8130  0A76  0187               	clrf	7
  8131  0A77  0016               	moviw fsr1++
  8132  0A78  0401               	iorwf	1,w
  8133  0A79  1D03               	btfss	3,2
  8134  0A7A  2A7C               	goto	u4001
  8135  0A7B  2A7D               	goto	u4000
  8136  0A7C                     u4001:
  8137  0A7C  2A83               	goto	l3559
  8138  0A7D                     u4000:
  8139  0A7D                     l3557:
  8140                           
  8141                           ;drink_meter.c: 29:         p->percentage = 0;
  8142  0A7D  086C               	movf	calc_percentage@p,w
  8143  0A7E  3E04               	addlw	4
  8144  0A7F  0086               	movwf	6
  8145  0A80  0187               	clrf	7
  8146  0A81  0181               	clrf	1
  8147                           
  8148                           ;drink_meter.c: 30:     }else{
  8149  0A82  2AED               	goto	l347
  8150  0A83                     l3559:
  8151                           
  8152                           ;drink_meter.c: 32:         p->percentage = ((float)p->loadcell->gram / (float)p->max_gr
      +                          am) * 100;
  8153  0A83  086C               	movf	calc_percentage@p,w
  8154  0A84  0086               	movwf	6
  8155  0A85  0187               	clrf	7
  8156  0A86  0801               	movf	1,w
  8157  0A87  3E0A               	addlw	10
  8158  0A88  0086               	movwf	6
  8159  0A89  0187               	clrf	7
  8160  0A8A  3F40               	moviw [0]fsr1
  8161  0A8B  0021               	movlb	1	; select bank1
  8162  0A8C  00A0               	movwf	??_calc_percentage^(0+128)
  8163  0A8D  3F41               	moviw [1]fsr1
  8164  0A8E  00A1               	movwf	(??_calc_percentage^(0+128)+1)
  8165  0A8F  0820               	movf	??_calc_percentage^(0+128),w
  8166  0A90  00F0               	movwf	___xxtofl@val
  8167  0A91  0821               	movf	(??_calc_percentage+1)^(0+128),w
  8168  0A92  00F1               	movwf	___xxtofl@val+1
  8169  0A93  01F2               	clrf	___xxtofl@val+2
  8170  0A94  01F3               	clrf	___xxtofl@val+3
  8171  0A95  3000               	movlw	0
  8172  0A96  318B  2397  318A   	fcall	___xxtofl
  8173  0A99  0873               	movf	?___xxtofl+3,w
  8174  0A9A  0020               	movlb	0	; select bank0
  8175  0A9B  00A7               	movwf	___fldiv@b+3
  8176  0A9C  0872               	movf	?___xxtofl+2,w
  8177  0A9D  00A6               	movwf	___fldiv@b+2
  8178  0A9E  0871               	movf	?___xxtofl+1,w
  8179  0A9F  00A5               	movwf	___fldiv@b+1
  8180  0AA0  0870               	movf	?___xxtofl,w
  8181  0AA1  00A4               	movwf	___fldiv@b
  8182  0AA2  086C               	movf	calc_percentage@p,w
  8183  0AA3  3E02               	addlw	2
  8184  0AA4  0086               	movwf	6
  8185  0AA5  0187               	clrf	7
  8186  0AA6  3F40               	moviw [0]fsr1
  8187  0AA7  0021               	movlb	1	; select bank1
  8188  0AA8  00A2               	movwf	(??_calc_percentage+2)^(0+128)
  8189  0AA9  3F41               	moviw [1]fsr1
  8190  0AAA  00A3               	movwf	((??_calc_percentage+2)^(0+128)+1)
  8191  0AAB  0822               	movf	(??_calc_percentage+2)^(0+128),w
  8192  0AAC  00F0               	movwf	___xxtofl@val
  8193  0AAD  0823               	movf	(??_calc_percentage+3)^(0+128),w
  8194  0AAE  00F1               	movwf	___xxtofl@val+1
  8195  0AAF  01F2               	clrf	___xxtofl@val+2
  8196  0AB0  01F3               	clrf	___xxtofl@val+3
  8197  0AB1  3000               	movlw	0
  8198  0AB2  318B  2397  318A   	fcall	___xxtofl
  8199  0AB5  0873               	movf	?___xxtofl+3,w
  8200  0AB6  0020               	movlb	0	; select bank0
  8201  0AB7  00A3               	movwf	___fldiv@a+3
  8202  0AB8  0872               	movf	?___xxtofl+2,w
  8203  0AB9  00A2               	movwf	___fldiv@a+2
  8204  0ABA  0871               	movf	?___xxtofl+1,w
  8205  0ABB  00A1               	movwf	___fldiv@a+1
  8206  0ABC  0870               	movf	?___xxtofl,w
  8207  0ABD  00A0               	movwf	___fldiv@a
  8208  0ABE  3181  21DC  318A   	fcall	___fldiv
  8209  0AC1  0020               	movlb	0	; select bank0
  8210  0AC2  0823               	movf	?___fldiv+3,w
  8211  0AC3  00C1               	movwf	___flmul@a+3
  8212  0AC4  0822               	movf	?___fldiv+2,w
  8213  0AC5  00C0               	movwf	___flmul@a+2
  8214  0AC6  0821               	movf	?___fldiv+1,w
  8215  0AC7  00BF               	movwf	___flmul@a+1
  8216  0AC8  0820               	movf	?___fldiv,w
  8217  0AC9  00BE               	movwf	___flmul@a
  8218  0ACA  3042               	movlw	66
  8219  0ACB  00BD               	movwf	___flmul@b+3
  8220  0ACC  30C8               	movlw	200
  8221  0ACD  00BC               	movwf	___flmul@b+2
  8222  0ACE  3000               	movlw	0
  8223  0ACF  00BB               	movwf	___flmul@b+1
  8224  0AD0  3000               	movlw	0
  8225  0AD1  00BA               	movwf	___flmul@b
  8226  0AD2  3185  258E  318A   	fcall	___flmul
  8227  0AD5  0020               	movlb	0	; select bank0
  8228  0AD6  083D               	movf	?___flmul+3,w
  8229  0AD7  00D7               	movwf	___fltol@f1+3
  8230  0AD8  083C               	movf	?___flmul+2,w
  8231  0AD9  00D6               	movwf	___fltol@f1+2
  8232  0ADA  083B               	movf	?___flmul+1,w
  8233  0ADB  00D5               	movwf	___fltol@f1+1
  8234  0ADC  083A               	movf	?___flmul,w
  8235  0ADD  00D4               	movwf	___fltol@f1
  8236  0ADE  3197  278B  318A   	fcall	___fltol
  8237  0AE1  0020               	movlb	0	; select bank0
  8238  0AE2  0854               	movf	?___fltol,w
  8239  0AE3  0021               	movlb	1	; select bank1
  8240  0AE4  00A4               	movwf	(??_calc_percentage+4)^(0+128)
  8241  0AE5  0020               	movlb	0	; select bank0
  8242  0AE6  086C               	movf	calc_percentage@p,w
  8243  0AE7  3E04               	addlw	4
  8244  0AE8  0086               	movwf	6
  8245  0AE9  0187               	clrf	7
  8246  0AEA  0021               	movlb	1	; select bank1
  8247  0AEB  0824               	movf	(??_calc_percentage+4)^(0+128),w
  8248  0AEC  0081               	movwf	1
  8249  0AED                     l347:
  8250  0AED  0008               	return
  8251  0AEE                     __end_of_calc_percentage:
  8252                           
  8253                           	psect	text33
  8254  090C                     __ptext33:	
  8255 ;; *************** function _scale_convert_gram *****************
  8256 ;; Defined at:
  8257 ;;		line 75 in file "loadcell.c"
  8258 ;; Parameters:    Size  Location     Type
  8259 ;;  p               1    wreg     PTR struct .
  8260 ;;		 -> NULL(0), main@loadcell(12), 
  8261 ;; Auto vars:     Size  Location     Type
  8262 ;;  p               1   75[BANK0 ] PTR struct .
  8263 ;;		 -> NULL(0), main@loadcell(12), 
  8264 ;;  temp            4   71[BANK0 ] float 
  8265 ;; Return value:  Size  Location     Type
  8266 ;;                  1    wreg      void 
  8267 ;; Registers used:
  8268 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  8269 ;; Tracked objects:
  8270 ;;		On entry : 0/0
  8271 ;;		On exit  : 0/0
  8272 ;;		Unchanged: 0/0
  8273 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  8274 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8275 ;;      Locals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8276 ;;      Temps:          0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8277 ;;      Totals:         0      13       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8278 ;;Total ram usage:       13 bytes
  8279 ;; Hardware stack levels used: 1
  8280 ;; Hardware stack levels required when called: 1
  8281 ;; This function calls:
  8282 ;;		___fldiv
  8283 ;;		___fltol
  8284 ;;		___xxtofl
  8285 ;; This function is called by:
  8286 ;;		_calc_percentage
  8287 ;; This function uses a non-reentrant model
  8288 ;;
  8289                           
  8290                           
  8291                           ;psect for function _scale_convert_gram
  8292  090C                     _scale_convert_gram:
  8293                           
  8294                           ;incstack = 0
  8295                           ; Regs used in _scale_convert_gram: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
  8296                           ;scale_convert_gram@p stored from wreg
  8297  090C  0020               	movlb	0	; select bank0
  8298  090D  00EB               	movwf	scale_convert_gram@p
  8299  090E                     l3313:
  8300                           
  8301                           ;loadcell.c: 77:     if(p->weight_dat < p->weight_zero){
  8302  090E  086B               	movf	scale_convert_gram@p,w
  8303  090F  3E02               	addlw	2
  8304  0910  0086               	movwf	6
  8305  0911  0187               	clrf	7
  8306  0912  3F40               	moviw [0]fsr1
  8307  0913  00DF               	movwf	??_scale_convert_gram
  8308  0914  3F41               	moviw [1]fsr1
  8309  0915  00E0               	movwf	??_scale_convert_gram+1
  8310  0916  3F42               	moviw [2]fsr1
  8311  0917  00E1               	movwf	??_scale_convert_gram+2
  8312  0918  3F43               	moviw [3]fsr1
  8313  0919  00E2               	movwf	??_scale_convert_gram+3
  8314  091A  086B               	movf	scale_convert_gram@p,w
  8315  091B  3E06               	addlw	6
  8316  091C  0086               	movwf	6
  8317  091D  0187               	clrf	7
  8318  091E  3F40               	moviw [0]fsr1
  8319  091F  00E3               	movwf	??_scale_convert_gram+4
  8320  0920  3F41               	moviw [1]fsr1
  8321  0921  00E4               	movwf	??_scale_convert_gram+5
  8322  0922  3F42               	moviw [2]fsr1
  8323  0923  00E5               	movwf	??_scale_convert_gram+6
  8324  0924  3F43               	moviw [3]fsr1
  8325  0925  00E6               	movwf	??_scale_convert_gram+7
  8326  0926  0862               	movf	??_scale_convert_gram+3,w
  8327  0927  0266               	subwf	??_scale_convert_gram+7,w
  8328  0928  1D03               	skipz
  8329  0929  2934               	goto	u3715
  8330  092A  0861               	movf	??_scale_convert_gram+2,w
  8331  092B  0265               	subwf	??_scale_convert_gram+6,w
  8332  092C  1D03               	skipz
  8333  092D  2934               	goto	u3715
  8334  092E  0860               	movf	??_scale_convert_gram+1,w
  8335  092F  0264               	subwf	??_scale_convert_gram+5,w
  8336  0930  1D03               	skipz
  8337  0931  2934               	goto	u3715
  8338  0932  085F               	movf	??_scale_convert_gram,w
  8339  0933  0263               	subwf	??_scale_convert_gram+4,w
  8340  0934                     u3715:
  8341  0934  1803               	skipnc
  8342  0935  2937               	goto	u3711
  8343  0936  2938               	goto	u3710
  8344  0937                     u3711:
  8345  0937  2940               	goto	l3319
  8346  0938                     u3710:
  8347  0938                     l3315:
  8348                           
  8349                           ;loadcell.c: 78:         p->gram = 0;
  8350  0938  086B               	movf	scale_convert_gram@p,w
  8351  0939  3E0A               	addlw	10
  8352  093A  0086               	movwf	6
  8353  093B  0187               	clrf	7
  8354  093C  3000               	movlw	0
  8355  093D  3FC0               	movwi [0]fsr1
  8356  093E  3FC1               	movwi [1]fsr1
  8357  093F  29A5               	goto	l268
  8358  0940                     l3319:
  8359                           
  8360                           ;loadcell.c: 82:     float temp = p->weight_dat - p->weight_zero;
  8361  0940  086B               	movf	scale_convert_gram@p,w
  8362  0941  3E02               	addlw	2
  8363  0942  0086               	movwf	6
  8364  0943  0187               	clrf	7
  8365  0944  3F40               	moviw [0]fsr1
  8366  0945  00DF               	movwf	??_scale_convert_gram
  8367  0946  3F41               	moviw [1]fsr1
  8368  0947  00E0               	movwf	??_scale_convert_gram+1
  8369  0948  3F42               	moviw [2]fsr1
  8370  0949  00E1               	movwf	??_scale_convert_gram+2
  8371  094A  3F43               	moviw [3]fsr1
  8372  094B  00E2               	movwf	??_scale_convert_gram+3
  8373  094C  086B               	movf	scale_convert_gram@p,w
  8374  094D  3E06               	addlw	6
  8375  094E  0086               	movwf	6
  8376  094F  0187               	clrf	7
  8377  0950  3F40               	moviw [0]fsr1
  8378  0951  00E3               	movwf	??_scale_convert_gram+4
  8379  0952  3F41               	moviw [1]fsr1
  8380  0953  00E4               	movwf	??_scale_convert_gram+5
  8381  0954  3F42               	moviw [2]fsr1
  8382  0955  00E5               	movwf	??_scale_convert_gram+6
  8383  0956  3F43               	moviw [3]fsr1
  8384  0957  00E6               	movwf	??_scale_convert_gram+7
  8385  0958  085F               	movf	??_scale_convert_gram,w
  8386  0959  02E3               	subwf	??_scale_convert_gram+4,f
  8387  095A  0860               	movf	??_scale_convert_gram+1,w
  8388  095B  3BE4               	subwfb	??_scale_convert_gram+5,f
  8389  095C  0861               	movf	??_scale_convert_gram+2,w
  8390  095D  3BE5               	subwfb	??_scale_convert_gram+6,f
  8391  095E  0862               	movf	??_scale_convert_gram+3,w
  8392  095F  3BE6               	subwfb	??_scale_convert_gram+7,f
  8393  0960  0866               	movf	??_scale_convert_gram+7,w
  8394  0961  00F3               	movwf	___xxtofl@val+3
  8395  0962  0865               	movf	??_scale_convert_gram+6,w
  8396  0963  00F2               	movwf	___xxtofl@val+2
  8397  0964  0864               	movf	??_scale_convert_gram+5,w
  8398  0965  00F1               	movwf	___xxtofl@val+1
  8399  0966  0863               	movf	??_scale_convert_gram+4,w
  8400  0967  00F0               	movwf	___xxtofl@val
  8401  0968  3000               	movlw	0
  8402  0969  318B  2397  3189   	fcall	___xxtofl
  8403  096C  0873               	movf	?___xxtofl+3,w
  8404  096D  0020               	movlb	0	; select bank0
  8405  096E  00EA               	movwf	scale_convert_gram@temp+3
  8406  096F  0872               	movf	?___xxtofl+2,w
  8407  0970  00E9               	movwf	scale_convert_gram@temp+2
  8408  0971  0871               	movf	?___xxtofl+1,w
  8409  0972  00E8               	movwf	scale_convert_gram@temp+1
  8410  0973  0870               	movf	?___xxtofl,w
  8411  0974  00E7               	movwf	scale_convert_gram@temp
  8412  0975                     l3321:
  8413                           
  8414                           ;loadcell.c: 83:     temp = temp / 493;
  8415  0975  3043               	movlw	67
  8416  0976  00A3               	movwf	___fldiv@a+3
  8417  0977  30F6               	movlw	246
  8418  0978  00A2               	movwf	___fldiv@a+2
  8419  0979  3080               	movlw	128
  8420  097A  00A1               	movwf	___fldiv@a+1
  8421  097B  3000               	movlw	0
  8422  097C  00A0               	movwf	___fldiv@a
  8423  097D  086A               	movf	scale_convert_gram@temp+3,w
  8424  097E  00A7               	movwf	___fldiv@b+3
  8425  097F  0869               	movf	scale_convert_gram@temp+2,w
  8426  0980  00A6               	movwf	___fldiv@b+2
  8427  0981  0868               	movf	scale_convert_gram@temp+1,w
  8428  0982  00A5               	movwf	___fldiv@b+1
  8429  0983  0867               	movf	scale_convert_gram@temp,w
  8430  0984  00A4               	movwf	___fldiv@b
  8431  0985  3181  21DC  3189   	fcall	___fldiv
  8432  0988  0020               	movlb	0	; select bank0
  8433  0989  0823               	movf	?___fldiv+3,w
  8434  098A  00EA               	movwf	scale_convert_gram@temp+3
  8435  098B  0822               	movf	?___fldiv+2,w
  8436  098C  00E9               	movwf	scale_convert_gram@temp+2
  8437  098D  0821               	movf	?___fldiv+1,w
  8438  098E  00E8               	movwf	scale_convert_gram@temp+1
  8439  098F  0820               	movf	?___fldiv,w
  8440  0990  00E7               	movwf	scale_convert_gram@temp
  8441  0991                     l3323:
  8442                           
  8443                           ;loadcell.c: 84:     p->gram = (uint16_t)temp;
  8444  0991  086A               	movf	scale_convert_gram@temp+3,w
  8445  0992  00D7               	movwf	___fltol@f1+3
  8446  0993  0869               	movf	scale_convert_gram@temp+2,w
  8447  0994  00D6               	movwf	___fltol@f1+2
  8448  0995  0868               	movf	scale_convert_gram@temp+1,w
  8449  0996  00D5               	movwf	___fltol@f1+1
  8450  0997  0867               	movf	scale_convert_gram@temp,w
  8451  0998  00D4               	movwf	___fltol@f1
  8452  0999  3197  278B  3189   	fcall	___fltol
  8453  099C  0020               	movlb	0	; select bank0
  8454  099D  086B               	movf	scale_convert_gram@p,w
  8455  099E  3E0A               	addlw	10
  8456  099F  0086               	movwf	6
  8457  09A0  0187               	clrf	7
  8458  09A1  0854               	movf	?___fltol,w
  8459  09A2  3FC0               	movwi [0]fsr1
  8460  09A3  0855               	movf	?___fltol+1,w
  8461  09A4  3FC1               	movwi [1]fsr1
  8462  09A5                     l268:
  8463  09A5  0008               	return
  8464  09A6                     __end_of_scale_convert_gram:
  8465                           
  8466                           	psect	text34
  8467  0B97                     __ptext34:	
  8468 ;; *************** function ___xxtofl *****************
  8469 ;; Defined at:
  8470 ;;		line 10 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\xxtofl.c"
  8471 ;; Parameters:    Size  Location     Type
  8472 ;;  sign            1    wreg     unsigned char 
  8473 ;;  val             4    0[COMMON] long 
  8474 ;; Auto vars:     Size  Location     Type
  8475 ;;  sign            1    8[COMMON] unsigned char 
  8476 ;;  arg             4   10[COMMON] unsigned long 
  8477 ;;  exp             1    9[COMMON] unsigned char 
  8478 ;; Return value:  Size  Location     Type
  8479 ;;                  4    0[COMMON] unsigned char 
  8480 ;; Registers used:
  8481 ;;		wreg, status,2, status,0
  8482 ;; Tracked objects:
  8483 ;;		On entry : 0/0
  8484 ;;		On exit  : 0/0
  8485 ;;		Unchanged: 0/0
  8486 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  8487 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8488 ;;      Locals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8489 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8490 ;;      Totals:        14       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8491 ;;Total ram usage:       14 bytes
  8492 ;; Hardware stack levels used: 1
  8493 ;; This function calls:
  8494 ;;		Nothing
  8495 ;; This function is called by:
  8496 ;;		_scale_convert_gram
  8497 ;;		_calc_percentage
  8498 ;; This function uses a non-reentrant model
  8499 ;;
  8500                           
  8501                           
  8502                           ;psect for function ___xxtofl
  8503  0B97                     ___xxtofl:
  8504                           
  8505                           ;incstack = 0
  8506                           ; Regs used in ___xxtofl: [wreg+status,2+status,0]
  8507                           ;___xxtofl@sign stored from wreg
  8508  0B97  00F8               	movwf	___xxtofl@sign
  8509  0B98                     l3115:
  8510  0B98  0878               	movf	___xxtofl@sign,w
  8511  0B99  1903               	btfsc	3,2
  8512  0B9A  2B9C               	goto	u3471
  8513  0B9B  2B9D               	goto	u3470
  8514  0B9C                     u3471:
  8515  0B9C  2BB1               	goto	l3121
  8516  0B9D                     u3470:
  8517  0B9D                     l3117:
  8518  0B9D  1FF3               	btfss	___xxtofl@val+3,7
  8519  0B9E  2BA0               	goto	u3481
  8520  0B9F  2BA1               	goto	u3480
  8521  0BA0                     u3481:
  8522  0BA0  2BB1               	goto	l3121
  8523  0BA1                     u3480:
  8524  0BA1                     l3119:
  8525  0BA1  0970               	comf	___xxtofl@val,w
  8526  0BA2  00FA               	movwf	___xxtofl@arg
  8527  0BA3  0971               	comf	___xxtofl@val+1,w
  8528  0BA4  00FB               	movwf	___xxtofl@arg+1
  8529  0BA5  0972               	comf	___xxtofl@val+2,w
  8530  0BA6  00FC               	movwf	___xxtofl@arg+2
  8531  0BA7  0973               	comf	___xxtofl@val+3,w
  8532  0BA8  00FD               	movwf	___xxtofl@arg+3
  8533  0BA9  0AFA               	incf	___xxtofl@arg,f
  8534  0BAA  1903               	skipnz
  8535  0BAB  0AFB               	incf	___xxtofl@arg+1,f
  8536  0BAC  1903               	skipnz
  8537  0BAD  0AFC               	incf	___xxtofl@arg+2,f
  8538  0BAE  1903               	skipnz
  8539  0BAF  0AFD               	incf	___xxtofl@arg+3,f
  8540  0BB0  2BB9               	goto	l944
  8541  0BB1                     l3121:
  8542  0BB1  0873               	movf	___xxtofl@val+3,w
  8543  0BB2  00FD               	movwf	___xxtofl@arg+3
  8544  0BB3  0872               	movf	___xxtofl@val+2,w
  8545  0BB4  00FC               	movwf	___xxtofl@arg+2
  8546  0BB5  0871               	movf	___xxtofl@val+1,w
  8547  0BB6  00FB               	movwf	___xxtofl@arg+1
  8548  0BB7  0870               	movf	___xxtofl@val,w
  8549  0BB8  00FA               	movwf	___xxtofl@arg
  8550  0BB9                     l944:
  8551  0BB9  0873               	movf	___xxtofl@val+3,w
  8552  0BBA  0472               	iorwf	___xxtofl@val+2,w
  8553  0BBB  0471               	iorwf	___xxtofl@val+1,w
  8554  0BBC  0470               	iorwf	___xxtofl@val,w
  8555  0BBD  1D03               	skipz
  8556  0BBE  2BC0               	goto	u3491
  8557  0BBF  2BC1               	goto	u3490
  8558  0BC0                     u3491:
  8559  0BC0  2BCA               	goto	l3127
  8560  0BC1                     u3490:
  8561  0BC1                     l3123:
  8562  0BC1  3000               	movlw	0
  8563  0BC2  00F3               	movwf	?___xxtofl+3
  8564  0BC3  3000               	movlw	0
  8565  0BC4  00F2               	movwf	?___xxtofl+2
  8566  0BC5  3000               	movlw	0
  8567  0BC6  00F1               	movwf	?___xxtofl+1
  8568  0BC7  3000               	movlw	0
  8569  0BC8  00F0               	movwf	?___xxtofl
  8570  0BC9  2C42               	goto	l946
  8571  0BCA                     l3127:
  8572  0BCA  3096               	movlw	150
  8573  0BCB  00F4               	movwf	??___xxtofl
  8574  0BCC  0874               	movf	??___xxtofl,w
  8575  0BCD  00F9               	movwf	___xxtofl@exp
  8576  0BCE  2BDA               	goto	l3131
  8577  0BCF                     l3129:
  8578  0BCF  3001               	movlw	1
  8579  0BD0  00F4               	movwf	??___xxtofl
  8580  0BD1  0874               	movf	??___xxtofl,w
  8581  0BD2  07F9               	addwf	___xxtofl@exp,f
  8582  0BD3  3001               	movlw	1
  8583  0BD4                     u3505:
  8584  0BD4  36FD               	lsrf	___xxtofl@arg+3,f
  8585  0BD5  0CFC               	rrf	___xxtofl@arg+2,f
  8586  0BD6  0CFB               	rrf	___xxtofl@arg+1,f
  8587  0BD7  0CFA               	rrf	___xxtofl@arg,f
  8588  0BD8  0B89               	decfsz	9,f
  8589  0BD9  2BD4               	goto	u3505
  8590  0BDA                     l3131:
  8591  0BDA  30FE               	movlw	254
  8592  0BDB  057D               	andwf	___xxtofl@arg+3,w
  8593  0BDC  1D03               	btfss	3,2
  8594  0BDD  2BDF               	goto	u3511
  8595  0BDE  2BE0               	goto	u3510
  8596  0BDF                     u3511:
  8597  0BDF  2BCF               	goto	l3129
  8598  0BE0                     u3510:
  8599  0BE0  2BF4               	goto	l950
  8600  0BE1                     l3133:
  8601  0BE1  3001               	movlw	1
  8602  0BE2  00F4               	movwf	??___xxtofl
  8603  0BE3  0874               	movf	??___xxtofl,w
  8604  0BE4  07F9               	addwf	___xxtofl@exp,f
  8605  0BE5                     l3135:
  8606  0BE5  3001               	movlw	1
  8607  0BE6  07FA               	addwf	___xxtofl@arg,f
  8608  0BE7  3000               	movlw	0
  8609  0BE8  3DFB               	addwfc	___xxtofl@arg+1,f
  8610  0BE9  3000               	movlw	0
  8611  0BEA  3DFC               	addwfc	___xxtofl@arg+2,f
  8612  0BEB  3000               	movlw	0
  8613  0BEC  3DFD               	addwfc	___xxtofl@arg+3,f
  8614  0BED                     l3137:
  8615  0BED  3001               	movlw	1
  8616  0BEE                     u3525:
  8617  0BEE  36FD               	lsrf	___xxtofl@arg+3,f
  8618  0BEF  0CFC               	rrf	___xxtofl@arg+2,f
  8619  0BF0  0CFB               	rrf	___xxtofl@arg+1,f
  8620  0BF1  0CFA               	rrf	___xxtofl@arg,f
  8621  0BF2  0B89               	decfsz	9,f
  8622  0BF3  2BEE               	goto	u3525
  8623  0BF4                     l950:
  8624  0BF4  30FF               	movlw	255
  8625  0BF5  057D               	andwf	___xxtofl@arg+3,w
  8626  0BF6  1D03               	btfss	3,2
  8627  0BF7  2BF9               	goto	u3531
  8628  0BF8  2BFA               	goto	u3530
  8629  0BF9                     u3531:
  8630  0BF9  2BE1               	goto	l3133
  8631  0BFA                     u3530:
  8632  0BFA  2C04               	goto	l3141
  8633  0BFB                     l3139:
  8634  0BFB  3001               	movlw	1
  8635  0BFC  02F9               	subwf	___xxtofl@exp,f
  8636  0BFD  3001               	movlw	1
  8637  0BFE                     u3545:
  8638  0BFE  35FA               	lslf	___xxtofl@arg,f
  8639  0BFF  0DFB               	rlf	___xxtofl@arg+1,f
  8640  0C00  0DFC               	rlf	___xxtofl@arg+2,f
  8641  0C01  0DFD               	rlf	___xxtofl@arg+3,f
  8642  0C02  0B89               	decfsz	9,f
  8643  0C03  2BFE               	goto	u3545
  8644  0C04                     l3141:
  8645  0C04  1BFC               	btfsc	___xxtofl@arg+2,7
  8646  0C05  2C07               	goto	u3551
  8647  0C06  2C08               	goto	u3550
  8648  0C07                     u3551:
  8649  0C07  2C0E               	goto	l957
  8650  0C08                     u3550:
  8651  0C08                     l3143:
  8652  0C08  3002               	movlw	2
  8653  0C09  0279               	subwf	___xxtofl@exp,w
  8654  0C0A  1803               	skipnc
  8655  0C0B  2C0D               	goto	u3561
  8656  0C0C  2C0E               	goto	u3560
  8657  0C0D                     u3561:
  8658  0C0D  2BFB               	goto	l3139
  8659  0C0E                     u3560:
  8660  0C0E                     l957:
  8661  0C0E  1879               	btfsc	___xxtofl@exp,0
  8662  0C0F  2C11               	goto	u3571
  8663  0C10  2C12               	goto	u3570
  8664  0C11                     u3571:
  8665  0C11  2C1A               	goto	l958
  8666  0C12                     u3570:
  8667  0C12                     l3145:
  8668  0C12  30FF               	movlw	255
  8669  0C13  05FA               	andwf	___xxtofl@arg,f
  8670  0C14  30FF               	movlw	255
  8671  0C15  05FB               	andwf	___xxtofl@arg+1,f
  8672  0C16  307F               	movlw	127
  8673  0C17  05FC               	andwf	___xxtofl@arg+2,f
  8674  0C18  30FF               	movlw	255
  8675  0C19  05FD               	andwf	___xxtofl@arg+3,f
  8676  0C1A                     l958:
  8677  0C1A  1003               	clrc
  8678  0C1B  0CF9               	rrf	___xxtofl@exp,f
  8679  0C1C                     l3147:
  8680  0C1C  0879               	movf	___xxtofl@exp,w
  8681  0C1D  00F4               	movwf	??___xxtofl
  8682  0C1E  01F5               	clrf	??___xxtofl+1
  8683  0C1F  01F6               	clrf	??___xxtofl+2
  8684  0C20  01F7               	clrf	??___xxtofl+3
  8685  0C21  3018               	movlw	24
  8686  0C22                     u3585:
  8687  0C22  35F4               	lslf	??___xxtofl,f
  8688  0C23  0DF5               	rlf	??___xxtofl+1,f
  8689  0C24  0DF6               	rlf	??___xxtofl+2,f
  8690  0C25  0DF7               	rlf	??___xxtofl+3,f
  8691  0C26                     u3580:
  8692  0C26  0B89               	decfsz	9,f
  8693  0C27  2C22               	goto	u3585
  8694  0C28  0874               	movf	??___xxtofl,w
  8695  0C29  04FA               	iorwf	___xxtofl@arg,f
  8696  0C2A  0875               	movf	??___xxtofl+1,w
  8697  0C2B  04FB               	iorwf	___xxtofl@arg+1,f
  8698  0C2C  0876               	movf	??___xxtofl+2,w
  8699  0C2D  04FC               	iorwf	___xxtofl@arg+2,f
  8700  0C2E  0877               	movf	??___xxtofl+3,w
  8701  0C2F  04FD               	iorwf	___xxtofl@arg+3,f
  8702  0C30                     l3149:
  8703  0C30  0878               	movf	___xxtofl@sign,w
  8704  0C31  1903               	btfsc	3,2
  8705  0C32  2C34               	goto	u3591
  8706  0C33  2C35               	goto	u3590
  8707  0C34                     u3591:
  8708  0C34  2C3A               	goto	l3155
  8709  0C35                     u3590:
  8710  0C35                     l3151:
  8711  0C35  1FF3               	btfss	___xxtofl@val+3,7
  8712  0C36  2C38               	goto	u3601
  8713  0C37  2C39               	goto	u3600
  8714  0C38                     u3601:
  8715  0C38  2C3A               	goto	l3155
  8716  0C39                     u3600:
  8717  0C39                     l3153:
  8718  0C39  17FD               	bsf	___xxtofl@arg+3,7
  8719  0C3A                     l3155:
  8720  0C3A  087D               	movf	___xxtofl@arg+3,w
  8721  0C3B  00F3               	movwf	?___xxtofl+3
  8722  0C3C  087C               	movf	___xxtofl@arg+2,w
  8723  0C3D  00F2               	movwf	?___xxtofl+2
  8724  0C3E  087B               	movf	___xxtofl@arg+1,w
  8725  0C3F  00F1               	movwf	?___xxtofl+1
  8726  0C40  087A               	movf	___xxtofl@arg,w
  8727  0C41  00F0               	movwf	?___xxtofl
  8728  0C42                     l946:
  8729  0C42  0008               	return
  8730  0C43                     __end_of___xxtofl:
  8731                           
  8732                           	psect	text35
  8733  178B                     __ptext35:	
  8734 ;; *************** function ___fltol *****************
  8735 ;; Defined at:
  8736 ;;		line 43 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\fltol.c"
  8737 ;; Parameters:    Size  Location     Type
  8738 ;;  f1              4   52[BANK0 ] unsigned char 
  8739 ;; Auto vars:     Size  Location     Type
  8740 ;;  exp1            1   62[BANK0 ] unsigned char 
  8741 ;;  sign1           1   61[BANK0 ] unsigned char 
  8742 ;; Return value:  Size  Location     Type
  8743 ;;                  4   52[BANK0 ] long 
  8744 ;; Registers used:
  8745 ;;		wreg, status,2, status,0
  8746 ;; Tracked objects:
  8747 ;;		On entry : 0/0
  8748 ;;		On exit  : 0/0
  8749 ;;		Unchanged: 0/0
  8750 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  8751 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8752 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8753 ;;      Temps:          0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8754 ;;      Totals:         0      11       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8755 ;;Total ram usage:       11 bytes
  8756 ;; Hardware stack levels used: 1
  8757 ;; This function calls:
  8758 ;;		Nothing
  8759 ;; This function is called by:
  8760 ;;		_scale_convert_gram
  8761 ;;		_calc_percentage
  8762 ;; This function uses a non-reentrant model
  8763 ;;
  8764                           
  8765                           
  8766                           ;psect for function ___fltol
  8767  178B                     ___fltol:
  8768  178B                     l2925:	
  8769                           ;incstack = 0
  8770                           ; Regs used in ___fltol: [wreg+status,2+status,0]
  8771                           
  8772  178B  1003               	clrc
  8773  178C  0020               	movlb	0	; select bank0
  8774  178D  0D56               	rlf	___fltol@f1+2,w
  8775  178E  0D57               	rlf	___fltol@f1+3,w
  8776  178F  00D8               	movwf	??___fltol
  8777  1790  0858               	movf	??___fltol,w
  8778  1791  00DE               	movwf	___fltol@exp1
  8779  1792  085E               	movf	___fltol@exp1,w
  8780  1793  1D03               	btfss	3,2
  8781  1794  2F96               	goto	u3051
  8782  1795  2F97               	goto	u3050
  8783  1796                     u3051:
  8784  1796  2FA0               	goto	l2931
  8785  1797                     u3050:
  8786  1797                     l2927:
  8787  1797  3000               	movlw	0
  8788  1798  00D7               	movwf	?___fltol+3
  8789  1799  3000               	movlw	0
  8790  179A  00D6               	movwf	?___fltol+2
  8791  179B  3000               	movlw	0
  8792  179C  00D5               	movwf	?___fltol+1
  8793  179D  3000               	movlw	0
  8794  179E  00D4               	movwf	?___fltol
  8795  179F  2FFF               	goto	l697
  8796  17A0                     l2931:
  8797  17A0  0854               	movf	___fltol@f1,w
  8798  17A1  00D8               	movwf	??___fltol
  8799  17A2  0855               	movf	___fltol@f1+1,w
  8800  17A3  00D9               	movwf	??___fltol+1
  8801  17A4  0856               	movf	___fltol@f1+2,w
  8802  17A5  00DA               	movwf	??___fltol+2
  8803  17A6  0857               	movf	___fltol@f1+3,w
  8804  17A7  00DB               	movwf	??___fltol+3
  8805  17A8  301F               	movlw	31
  8806  17A9                     u3065:
  8807  17A9  36DB               	lsrf	??___fltol+3,f
  8808  17AA  0CDA               	rrf	??___fltol+2,f
  8809  17AB  0CD9               	rrf	??___fltol+1,f
  8810  17AC  0CD8               	rrf	??___fltol,f
  8811  17AD                     u3060:
  8812  17AD  0B89               	decfsz	9,f
  8813  17AE  2FA9               	goto	u3065
  8814  17AF  0858               	movf	??___fltol,w
  8815  17B0  00DC               	movwf	??___fltol+4
  8816  17B1  085C               	movf	??___fltol+4,w
  8817  17B2  00DD               	movwf	___fltol@sign1
  8818  17B3                     l2933:
  8819  17B3  17D6               	bsf	___fltol@f1+2,7
  8820  17B4                     l2935:
  8821  17B4  30FF               	movlw	255
  8822  17B5  05D4               	andwf	___fltol@f1,f
  8823  17B6  30FF               	movlw	255
  8824  17B7  05D5               	andwf	___fltol@f1+1,f
  8825  17B8  30FF               	movlw	255
  8826  17B9  05D6               	andwf	___fltol@f1+2,f
  8827  17BA  3000               	movlw	0
  8828  17BB  05D7               	andwf	___fltol@f1+3,f
  8829  17BC                     l2937:
  8830  17BC  3096               	movlw	150
  8831  17BD  02DE               	subwf	___fltol@exp1,f
  8832  17BE                     l2939:
  8833  17BE  1FDE               	btfss	___fltol@exp1,7
  8834  17BF  2FC1               	goto	u3071
  8835  17C0  2FC2               	goto	u3070
  8836  17C1                     u3071:
  8837  17C1  2FDA               	goto	l2949
  8838  17C2                     u3070:
  8839  17C2                     l2941:
  8840  17C2  085E               	movf	___fltol@exp1,w
  8841  17C3  3A80               	xorlw	128
  8842  17C4  3E97               	addlw	151
  8843  17C5  1803               	skipnc
  8844  17C6  2FC8               	goto	u3081
  8845  17C7  2FC9               	goto	u3080
  8846  17C8                     u3081:
  8847  17C8  2FCA               	goto	l2947
  8848  17C9                     u3080:
  8849  17C9  2F97               	goto	l2927
  8850  17CA                     l2947:
  8851  17CA  3001               	movlw	1
  8852  17CB                     u3095:
  8853  17CB  36D7               	lsrf	___fltol@f1+3,f
  8854  17CC  0CD6               	rrf	___fltol@f1+2,f
  8855  17CD  0CD5               	rrf	___fltol@f1+1,f
  8856  17CE  0CD4               	rrf	___fltol@f1,f
  8857  17CF  0B89               	decfsz	9,f
  8858  17D0  2FCB               	goto	u3095
  8859  17D1  3001               	movlw	1
  8860  17D2  00D8               	movwf	??___fltol
  8861  17D3  0858               	movf	??___fltol,w
  8862  17D4  07DE               	addwf	___fltol@exp1,f
  8863  17D5  1D03               	btfss	3,2
  8864  17D6  2FD8               	goto	u3101
  8865  17D7  2FD9               	goto	u3100
  8866  17D8                     u3101:
  8867  17D8  2FCA               	goto	l2947
  8868  17D9                     u3100:
  8869  17D9  2FEF               	goto	l2957
  8870  17DA                     l2949:
  8871  17DA  3020               	movlw	32
  8872  17DB  025E               	subwf	___fltol@exp1,w
  8873  17DC  1C03               	skipc
  8874  17DD  2FDF               	goto	u3111
  8875  17DE  2FE0               	goto	u3110
  8876  17DF                     u3111:
  8877  17DF  2FEA               	goto	l704
  8878  17E0                     u3110:
  8879  17E0  2F97               	goto	l2927
  8880  17E1                     l2955:
  8881  17E1  3001               	movlw	1
  8882  17E2                     u3125:
  8883  17E2  35D4               	lslf	___fltol@f1,f
  8884  17E3  0DD5               	rlf	___fltol@f1+1,f
  8885  17E4  0DD6               	rlf	___fltol@f1+2,f
  8886  17E5  0DD7               	rlf	___fltol@f1+3,f
  8887  17E6  0B89               	decfsz	9,f
  8888  17E7  2FE2               	goto	u3125
  8889  17E8  3001               	movlw	1
  8890  17E9  02DE               	subwf	___fltol@exp1,f
  8891  17EA                     l704:
  8892  17EA  085E               	movf	___fltol@exp1,w
  8893  17EB  1D03               	btfss	3,2
  8894  17EC  2FEE               	goto	u3131
  8895  17ED  2FEF               	goto	u3130
  8896  17EE                     u3131:
  8897  17EE  2FE1               	goto	l2955
  8898  17EF                     u3130:
  8899  17EF                     l2957:
  8900  17EF  085D               	movf	___fltol@sign1,w
  8901  17F0  1903               	btfsc	3,2
  8902  17F1  2FF3               	goto	u3141
  8903  17F2  2FF4               	goto	u3140
  8904  17F3                     u3141:
  8905  17F3  2FFF               	goto	l707
  8906  17F4                     u3140:
  8907  17F4                     l2959:
  8908  17F4  09D4               	comf	___fltol@f1,f
  8909  17F5  09D5               	comf	___fltol@f1+1,f
  8910  17F6  09D6               	comf	___fltol@f1+2,f
  8911  17F7  09D7               	comf	___fltol@f1+3,f
  8912  17F8  0AD4               	incf	___fltol@f1,f
  8913  17F9  1903               	skipnz
  8914  17FA  0AD5               	incf	___fltol@f1+1,f
  8915  17FB  1903               	skipnz
  8916  17FC  0AD6               	incf	___fltol@f1+2,f
  8917  17FD  1903               	skipnz
  8918  17FE  0AD7               	incf	___fltol@f1+3,f
  8919  17FF                     l707:
  8920  17FF                     l697:
  8921  17FF  0008               	return
  8922  1800                     __end_of___fltol:
  8923                           
  8924                           	psect	text36
  8925  01DC                     __ptext36:	
  8926 ;; *************** function ___fldiv *****************
  8927 ;; Defined at:
  8928 ;;		line 8 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\sprcdiv.c"
  8929 ;; Parameters:    Size  Location     Type
  8930 ;;  a               4    0[BANK0 ] long 
  8931 ;;  b               4    4[BANK0 ] long 
  8932 ;; Auto vars:     Size  Location     Type
  8933 ;;  grs             4   20[BANK0 ] unsigned long 
  8934 ;;  rem             4   13[BANK0 ] unsigned long 
  8935 ;;  new_exp         2   18[BANK0 ] int 
  8936 ;;  aexp            1   25[BANK0 ] unsigned char 
  8937 ;;  bexp            1   24[BANK0 ] unsigned char 
  8938 ;;  sign            1   17[BANK0 ] unsigned char 
  8939 ;; Return value:  Size  Location     Type
  8940 ;;                  4    0[BANK0 ] unsigned char 
  8941 ;; Registers used:
  8942 ;;		wreg, status,2, status,0
  8943 ;; Tracked objects:
  8944 ;;		On entry : 0/0
  8945 ;;		On exit  : 0/0
  8946 ;;		Unchanged: 0/0
  8947 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  8948 ;;      Params:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8949 ;;      Locals:         0      13       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8950 ;;      Temps:          0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8951 ;;      Totals:         0      26       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8952 ;;Total ram usage:       26 bytes
  8953 ;; Hardware stack levels used: 1
  8954 ;; This function calls:
  8955 ;;		Nothing
  8956 ;; This function is called by:
  8957 ;;		_scale_convert_gram
  8958 ;;		_calc_percentage
  8959 ;; This function uses a non-reentrant model
  8960 ;;
  8961                           
  8962                           
  8963                           ;psect for function ___fldiv
  8964  01DC                     ___fldiv:
  8965  01DC                     l2961:	
  8966                           ;incstack = 0
  8967                           ; Regs used in ___fldiv: [wreg+status,2+status,0]
  8968                           
  8969  01DC  0020               	movlb	0	; select bank0
  8970  01DD  0827               	movf	___fldiv@b+3,w
  8971  01DE  3980               	andlw	128
  8972  01DF  00A8               	movwf	??___fldiv
  8973  01E0  0828               	movf	??___fldiv,w
  8974  01E1  00B1               	movwf	___fldiv@sign
  8975  01E2                     l2963:
  8976  01E2  3527               	lslf	___fldiv@b+3,w
  8977  01E3  00A8               	movwf	??___fldiv
  8978  01E4  0828               	movf	??___fldiv,w
  8979  01E5  00B8               	movwf	___fldiv@bexp
  8980  01E6                     l2965:
  8981  01E6  1FA6               	btfss	___fldiv@b+2,7
  8982  01E7  29E9               	goto	u3151
  8983  01E8  29EA               	goto	u3150
  8984  01E9                     u3151:
  8985  01E9  29EB               	goto	l2969
  8986  01EA                     u3150:
  8987  01EA                     l2967:
  8988  01EA  1438               	bsf	___fldiv@bexp,0
  8989  01EB                     l2969:
  8990  01EB  0838               	movf	___fldiv@bexp,w
  8991  01EC  1903               	btfsc	3,2
  8992  01ED  29EF               	goto	u3161
  8993  01EE  29F0               	goto	u3160
  8994  01EF                     u3161:
  8995  01EF  2A00               	goto	l2979
  8996  01F0                     u3160:
  8997  01F0                     l2971:
  8998  01F0  0A38               	incf	___fldiv@bexp,w
  8999  01F1  1D03               	btfss	3,2
  9000  01F2  29F4               	goto	u3171
  9001  01F3  29F5               	goto	u3170
  9002  01F4                     u3171:
  9003  01F4  29FD               	goto	l2975
  9004  01F5                     u3170:
  9005  01F5                     l2973:
  9006  01F5  3000               	movlw	0
  9007  01F6  00A7               	movwf	___fldiv@b+3
  9008  01F7  3000               	movlw	0
  9009  01F8  00A6               	movwf	___fldiv@b+2
  9010  01F9  3000               	movlw	0
  9011  01FA  00A5               	movwf	___fldiv@b+1
  9012  01FB  3000               	movlw	0
  9013  01FC  00A4               	movwf	___fldiv@b
  9014  01FD                     l2975:
  9015  01FD  17A6               	bsf	___fldiv@b+2,7
  9016  01FE                     l2977:
  9017  01FE  01A7               	clrf	___fldiv@b+3
  9018  01FF  2A08               	goto	l2981
  9019  0200                     l2979:
  9020  0200  3000               	movlw	0
  9021  0201  00A7               	movwf	___fldiv@b+3
  9022  0202  3000               	movlw	0
  9023  0203  00A6               	movwf	___fldiv@b+2
  9024  0204  3000               	movlw	0
  9025  0205  00A5               	movwf	___fldiv@b+1
  9026  0206  3000               	movlw	0
  9027  0207  00A4               	movwf	___fldiv@b
  9028  0208                     l2981:
  9029  0208  0823               	movf	___fldiv@a+3,w
  9030  0209  3980               	andlw	128
  9031  020A  00A8               	movwf	??___fldiv
  9032  020B  0828               	movf	??___fldiv,w
  9033  020C  06B1               	xorwf	___fldiv@sign,f
  9034  020D                     l2983:
  9035  020D  3523               	lslf	___fldiv@a+3,w
  9036  020E  00A8               	movwf	??___fldiv
  9037  020F  0828               	movf	??___fldiv,w
  9038  0210  00B9               	movwf	___fldiv@aexp
  9039  0211                     l2985:
  9040  0211  1FA2               	btfss	___fldiv@a+2,7
  9041  0212  2A14               	goto	u3181
  9042  0213  2A15               	goto	u3180
  9043  0214                     u3181:
  9044  0214  2A16               	goto	l2989
  9045  0215                     u3180:
  9046  0215                     l2987:
  9047  0215  1439               	bsf	___fldiv@aexp,0
  9048  0216                     l2989:
  9049  0216  0839               	movf	___fldiv@aexp,w
  9050  0217  1903               	btfsc	3,2
  9051  0218  2A1A               	goto	u3191
  9052  0219  2A1B               	goto	u3190
  9053  021A                     u3191:
  9054  021A  2A2B               	goto	l2999
  9055  021B                     u3190:
  9056  021B                     l2991:
  9057  021B  0A39               	incf	___fldiv@aexp,w
  9058  021C  1D03               	btfss	3,2
  9059  021D  2A1F               	goto	u3201
  9060  021E  2A20               	goto	u3200
  9061  021F                     u3201:
  9062  021F  2A28               	goto	l2995
  9063  0220                     u3200:
  9064  0220                     l2993:
  9065  0220  3000               	movlw	0
  9066  0221  00A3               	movwf	___fldiv@a+3
  9067  0222  3000               	movlw	0
  9068  0223  00A2               	movwf	___fldiv@a+2
  9069  0224  3000               	movlw	0
  9070  0225  00A1               	movwf	___fldiv@a+1
  9071  0226  3000               	movlw	0
  9072  0227  00A0               	movwf	___fldiv@a
  9073  0228                     l2995:
  9074  0228  17A2               	bsf	___fldiv@a+2,7
  9075  0229                     l2997:
  9076  0229  01A3               	clrf	___fldiv@a+3
  9077  022A  2A33               	goto	l860
  9078  022B                     l2999:
  9079  022B  3000               	movlw	0
  9080  022C  00A3               	movwf	___fldiv@a+3
  9081  022D  3000               	movlw	0
  9082  022E  00A2               	movwf	___fldiv@a+2
  9083  022F  3000               	movlw	0
  9084  0230  00A1               	movwf	___fldiv@a+1
  9085  0231  3000               	movlw	0
  9086  0232  00A0               	movwf	___fldiv@a
  9087  0233                     l860:
  9088  0233  0823               	movf	___fldiv@a+3,w
  9089  0234  0422               	iorwf	___fldiv@a+2,w
  9090  0235  0421               	iorwf	___fldiv@a+1,w
  9091  0236  0420               	iorwf	___fldiv@a,w
  9092  0237  1D03               	skipz
  9093  0238  2A3A               	goto	u3211
  9094  0239  2A3B               	goto	u3210
  9095  023A                     u3211:
  9096  023A  2A54               	goto	l3009
  9097  023B                     u3210:
  9098  023B                     l3001:
  9099  023B  3000               	movlw	0
  9100  023C  00A7               	movwf	___fldiv@b+3
  9101  023D  3000               	movlw	0
  9102  023E  00A6               	movwf	___fldiv@b+2
  9103  023F  3000               	movlw	0
  9104  0240  00A5               	movwf	___fldiv@b+1
  9105  0241  3000               	movlw	0
  9106  0242  00A4               	movwf	___fldiv@b
  9107  0243  3080               	movlw	128
  9108  0244  04A6               	iorwf	___fldiv@b+2,f
  9109  0245  307F               	movlw	127
  9110  0246  04A7               	iorwf	___fldiv@b+3,f
  9111  0247                     l3003:
  9112  0247  0831               	movf	___fldiv@sign,w
  9113  0248  00A8               	movwf	??___fldiv
  9114  0249  0828               	movf	??___fldiv,w
  9115  024A  04A7               	iorwf	___fldiv@b+3,f
  9116  024B                     l3005:
  9117  024B  0827               	movf	___fldiv@b+3,w
  9118  024C  00A3               	movwf	?___fldiv+3
  9119  024D  0826               	movf	___fldiv@b+2,w
  9120  024E  00A2               	movwf	?___fldiv+2
  9121  024F  0825               	movf	___fldiv@b+1,w
  9122  0250  00A1               	movwf	?___fldiv+1
  9123  0251  0824               	movf	___fldiv@b,w
  9124  0252  00A0               	movwf	?___fldiv
  9125  0253  2B8F               	goto	l862
  9126  0254                     l3009:
  9127  0254  0838               	movf	___fldiv@bexp,w
  9128  0255  1D03               	btfss	3,2
  9129  0256  2A58               	goto	u3221
  9130  0257  2A59               	goto	u3220
  9131  0258                     u3221:
  9132  0258  2A62               	goto	l3015
  9133  0259                     u3220:
  9134  0259                     l3011:
  9135  0259  3000               	movlw	0
  9136  025A  00A3               	movwf	?___fldiv+3
  9137  025B  3000               	movlw	0
  9138  025C  00A2               	movwf	?___fldiv+2
  9139  025D  3000               	movlw	0
  9140  025E  00A1               	movwf	?___fldiv+1
  9141  025F  3000               	movlw	0
  9142  0260  00A0               	movwf	?___fldiv
  9143  0261  2B8F               	goto	l862
  9144  0262                     l3015:
  9145  0262  0838               	movf	___fldiv@bexp,w
  9146  0263  00A8               	movwf	??___fldiv
  9147  0264  01A9               	clrf	??___fldiv+1
  9148  0265  0829               	movf	??___fldiv+1,w
  9149  0266  00AB               	movwf	??___fldiv+3
  9150  0267  0839               	movf	___fldiv@aexp,w
  9151  0268  0228               	subwf	??___fldiv,w
  9152  0269  00AA               	movwf	??___fldiv+2
  9153  026A  1C03               	skipc
  9154  026B  03AB               	decf	??___fldiv+3,f
  9155  026C  082A               	movf	??___fldiv+2,w
  9156  026D  3E7F               	addlw	127
  9157  026E  00B2               	movwf	___fldiv@new_exp
  9158  026F  3000               	movlw	0
  9159  0270  3D2B               	addwfc	??___fldiv+3,w
  9160  0271  00B3               	movwf	___fldiv@new_exp+1
  9161  0272                     l3017:
  9162  0272  0827               	movf	___fldiv@b+3,w
  9163  0273  00B0               	movwf	___fldiv@rem+3
  9164  0274  0826               	movf	___fldiv@b+2,w
  9165  0275  00AF               	movwf	___fldiv@rem+2
  9166  0276  0825               	movf	___fldiv@b+1,w
  9167  0277  00AE               	movwf	___fldiv@rem+1
  9168  0278  0824               	movf	___fldiv@b,w
  9169  0279  00AD               	movwf	___fldiv@rem
  9170  027A                     l3019:
  9171  027A  3000               	movlw	0
  9172  027B  00A7               	movwf	___fldiv@b+3
  9173  027C  3000               	movlw	0
  9174  027D  00A6               	movwf	___fldiv@b+2
  9175  027E  3000               	movlw	0
  9176  027F  00A5               	movwf	___fldiv@b+1
  9177  0280  3000               	movlw	0
  9178  0281  00A4               	movwf	___fldiv@b
  9179  0282                     l3021:
  9180  0282  3000               	movlw	0
  9181  0283  00B7               	movwf	___fldiv@grs+3
  9182  0284  3000               	movlw	0
  9183  0285  00B6               	movwf	___fldiv@grs+2
  9184  0286  3000               	movlw	0
  9185  0287  00B5               	movwf	___fldiv@grs+1
  9186  0288  3000               	movlw	0
  9187  0289  00B4               	movwf	___fldiv@grs
  9188  028A                     l3023:
  9189  028A  01B9               	clrf	___fldiv@aexp
  9190  028B  2ACA               	goto	l3043
  9191  028C                     l3025:
  9192  028C  0839               	movf	___fldiv@aexp,w
  9193  028D  1903               	btfsc	3,2
  9194  028E  2A90               	goto	u3231
  9195  028F  2A91               	goto	u3230
  9196  0290                     u3231:
  9197  0290  2AAB               	goto	l3035
  9198  0291                     u3230:
  9199  0291                     l3027:
  9200  0291  3001               	movlw	1
  9201  0292                     u3245:
  9202  0292  35AD               	lslf	___fldiv@rem,f
  9203  0293  0DAE               	rlf	___fldiv@rem+1,f
  9204  0294  0DAF               	rlf	___fldiv@rem+2,f
  9205  0295  0DB0               	rlf	___fldiv@rem+3,f
  9206  0296  0B89               	decfsz	9,f
  9207  0297  2A92               	goto	u3245
  9208  0298  3001               	movlw	1
  9209  0299                     u3255:
  9210  0299  35A4               	lslf	___fldiv@b,f
  9211  029A  0DA5               	rlf	___fldiv@b+1,f
  9212  029B  0DA6               	rlf	___fldiv@b+2,f
  9213  029C  0DA7               	rlf	___fldiv@b+3,f
  9214  029D  0B89               	decfsz	9,f
  9215  029E  2A99               	goto	u3255
  9216  029F                     l3029:
  9217  029F  1FB7               	btfss	___fldiv@grs+3,7
  9218  02A0  2AA2               	goto	u3261
  9219  02A1  2AA3               	goto	u3260
  9220  02A2                     u3261:
  9221  02A2  2AA4               	goto	l3033
  9222  02A3                     u3260:
  9223  02A3                     l3031:
  9224  02A3  1424               	bsf	___fldiv@b,0
  9225  02A4                     l3033:
  9226  02A4  3001               	movlw	1
  9227  02A5                     u3275:
  9228  02A5  35B4               	lslf	___fldiv@grs,f
  9229  02A6  0DB5               	rlf	___fldiv@grs+1,f
  9230  02A7  0DB6               	rlf	___fldiv@grs+2,f
  9231  02A8  0DB7               	rlf	___fldiv@grs+3,f
  9232  02A9  0B89               	decfsz	9,f
  9233  02AA  2AA5               	goto	u3275
  9234  02AB                     l3035:
  9235  02AB  0823               	movf	___fldiv@a+3,w
  9236  02AC  0230               	subwf	___fldiv@rem+3,w
  9237  02AD  1D03               	skipz
  9238  02AE  2AB9               	goto	u3285
  9239  02AF  0822               	movf	___fldiv@a+2,w
  9240  02B0  022F               	subwf	___fldiv@rem+2,w
  9241  02B1  1D03               	skipz
  9242  02B2  2AB9               	goto	u3285
  9243  02B3  0821               	movf	___fldiv@a+1,w
  9244  02B4  022E               	subwf	___fldiv@rem+1,w
  9245  02B5  1D03               	skipz
  9246  02B6  2AB9               	goto	u3285
  9247  02B7  0820               	movf	___fldiv@a,w
  9248  02B8  022D               	subwf	___fldiv@rem,w
  9249  02B9                     u3285:
  9250  02B9  1C03               	skipc
  9251  02BA  2ABC               	goto	u3281
  9252  02BB  2ABD               	goto	u3280
  9253  02BC                     u3281:
  9254  02BC  2AC6               	goto	l3041
  9255  02BD                     u3280:
  9256  02BD                     l3037:
  9257  02BD  1737               	bsf	___fldiv@grs+3,6
  9258  02BE                     l3039:
  9259  02BE  0820               	movf	___fldiv@a,w
  9260  02BF  02AD               	subwf	___fldiv@rem,f
  9261  02C0  0821               	movf	___fldiv@a+1,w
  9262  02C1  3BAE               	subwfb	___fldiv@rem+1,f
  9263  02C2  0822               	movf	___fldiv@a+2,w
  9264  02C3  3BAF               	subwfb	___fldiv@rem+2,f
  9265  02C4  0823               	movf	___fldiv@a+3,w
  9266  02C5  3BB0               	subwfb	___fldiv@rem+3,f
  9267  02C6                     l3041:
  9268  02C6  3001               	movlw	1
  9269  02C7  00A8               	movwf	??___fldiv
  9270  02C8  0828               	movf	??___fldiv,w
  9271  02C9  07B9               	addwf	___fldiv@aexp,f
  9272  02CA                     l3043:
  9273  02CA  301A               	movlw	26
  9274  02CB  0239               	subwf	___fldiv@aexp,w
  9275  02CC  1C03               	skipc
  9276  02CD  2ACF               	goto	u3291
  9277  02CE  2AD0               	goto	u3290
  9278  02CF                     u3291:
  9279  02CF  2A8C               	goto	l3025
  9280  02D0                     u3290:
  9281  02D0                     l3045:
  9282  02D0  0830               	movf	___fldiv@rem+3,w
  9283  02D1  042F               	iorwf	___fldiv@rem+2,w
  9284  02D2  042E               	iorwf	___fldiv@rem+1,w
  9285  02D3  042D               	iorwf	___fldiv@rem,w
  9286  02D4  1903               	skipnz
  9287  02D5  2AD7               	goto	u3301
  9288  02D6  2AD8               	goto	u3300
  9289  02D7                     u3301:
  9290  02D7  2AF1               	goto	l3059
  9291  02D8                     u3300:
  9292  02D8                     l3047:
  9293  02D8  1434               	bsf	___fldiv@grs,0
  9294  02D9  2AF1               	goto	l3059
  9295  02DA                     l3049:
  9296  02DA  3001               	movlw	1
  9297  02DB                     u3315:
  9298  02DB  35A4               	lslf	___fldiv@b,f
  9299  02DC  0DA5               	rlf	___fldiv@b+1,f
  9300  02DD  0DA6               	rlf	___fldiv@b+2,f
  9301  02DE  0DA7               	rlf	___fldiv@b+3,f
  9302  02DF  0B89               	decfsz	9,f
  9303  02E0  2ADB               	goto	u3315
  9304  02E1                     l3051:
  9305  02E1  1FB7               	btfss	___fldiv@grs+3,7
  9306  02E2  2AE4               	goto	u3321
  9307  02E3  2AE5               	goto	u3320
  9308  02E4                     u3321:
  9309  02E4  2AE6               	goto	l3055
  9310  02E5                     u3320:
  9311  02E5                     l3053:
  9312  02E5  1424               	bsf	___fldiv@b,0
  9313  02E6                     l3055:
  9314  02E6  3001               	movlw	1
  9315  02E7                     u3335:
  9316  02E7  35B4               	lslf	___fldiv@grs,f
  9317  02E8  0DB5               	rlf	___fldiv@grs+1,f
  9318  02E9  0DB6               	rlf	___fldiv@grs+2,f
  9319  02EA  0DB7               	rlf	___fldiv@grs+3,f
  9320  02EB  0B89               	decfsz	9,f
  9321  02EC  2AE7               	goto	u3335
  9322  02ED                     l3057:
  9323  02ED  30FF               	movlw	255
  9324  02EE  07B2               	addwf	___fldiv@new_exp,f
  9325  02EF  30FF               	movlw	255
  9326  02F0  3DB3               	addwfc	___fldiv@new_exp+1,f
  9327  02F1                     l3059:
  9328  02F1  1FA6               	btfss	___fldiv@b+2,7
  9329  02F2  2AF4               	goto	u3341
  9330  02F3  2AF5               	goto	u3340
  9331  02F4                     u3341:
  9332  02F4  2ADA               	goto	l3049
  9333  02F5                     u3340:
  9334  02F5                     l3061:
  9335  02F5  01B9               	clrf	___fldiv@aexp
  9336  02F6                     l3063:
  9337  02F6  1FB7               	btfss	___fldiv@grs+3,7
  9338  02F7  2AF9               	goto	u3351
  9339  02F8  2AFA               	goto	u3350
  9340  02F9                     u3351:
  9341  02F9  2B16               	goto	l3071
  9342  02FA                     u3350:
  9343  02FA                     l3065:
  9344  02FA  30FF               	movlw	255
  9345  02FB  0534               	andwf	___fldiv@grs,w
  9346  02FC  00A8               	movwf	??___fldiv
  9347  02FD  30FF               	movlw	255
  9348  02FE  0535               	andwf	___fldiv@grs+1,w
  9349  02FF  00A9               	movwf	??___fldiv+1
  9350  0300  30FF               	movlw	255
  9351  0301  0536               	andwf	___fldiv@grs+2,w
  9352  0302  00AA               	movwf	??___fldiv+2
  9353  0303  307F               	movlw	127
  9354  0304  0537               	andwf	___fldiv@grs+3,w
  9355  0305  00AB               	movwf	??___fldiv+3
  9356  0306  082B               	movf	??___fldiv+3,w
  9357  0307  042A               	iorwf	??___fldiv+2,w
  9358  0308  0429               	iorwf	??___fldiv+1,w
  9359  0309  0428               	iorwf	??___fldiv,w
  9360  030A  1903               	skipnz
  9361  030B  2B0D               	goto	u3361
  9362  030C  2B0E               	goto	u3360
  9363  030D                     u3361:
  9364  030D  2B11               	goto	l876
  9365  030E                     u3360:
  9366  030E                     l3067:
  9367  030E  01B9               	clrf	___fldiv@aexp
  9368  030F  0AB9               	incf	___fldiv@aexp,f
  9369  0310  2B16               	goto	l3071
  9370  0311                     l876:
  9371  0311  1C24               	btfss	___fldiv@b,0
  9372  0312  2B14               	goto	u3371
  9373  0313  2B15               	goto	u3370
  9374  0314                     u3371:
  9375  0314  2B16               	goto	l3071
  9376  0315                     u3370:
  9377  0315  2B0E               	goto	l3067
  9378  0316                     l3071:
  9379  0316  0839               	movf	___fldiv@aexp,w
  9380  0317  1903               	btfsc	3,2
  9381  0318  2B1A               	goto	u3381
  9382  0319  2B1B               	goto	u3380
  9383  031A                     u3381:
  9384  031A  2B43               	goto	l3081
  9385  031B                     u3380:
  9386  031B                     l3073:
  9387  031B  3001               	movlw	1
  9388  031C  07A4               	addwf	___fldiv@b,f
  9389  031D  3000               	movlw	0
  9390  031E  3DA5               	addwfc	___fldiv@b+1,f
  9391  031F  3000               	movlw	0
  9392  0320  3DA6               	addwfc	___fldiv@b+2,f
  9393  0321  3000               	movlw	0
  9394  0322  3DA7               	addwfc	___fldiv@b+3,f
  9395  0323                     l3075:
  9396  0323  1C27               	btfss	___fldiv@b+3,0
  9397  0324  2B26               	goto	u3391
  9398  0325  2B27               	goto	u3390
  9399  0326                     u3391:
  9400  0326  2B43               	goto	l3081
  9401  0327                     u3390:
  9402  0327                     l3077:
  9403  0327  0824               	movf	___fldiv@b,w
  9404  0328  00A8               	movwf	??___fldiv
  9405  0329  0825               	movf	___fldiv@b+1,w
  9406  032A  00A9               	movwf	??___fldiv+1
  9407  032B  0826               	movf	___fldiv@b+2,w
  9408  032C  00AA               	movwf	??___fldiv+2
  9409  032D  0827               	movf	___fldiv@b+3,w
  9410  032E  00AB               	movwf	??___fldiv+3
  9411  032F  3001               	movlw	1
  9412  0330  00AC               	movwf	??___fldiv+4
  9413  0331                     u3405:
  9414  0331  37AB               	asrf	??___fldiv+3,f
  9415  0332  0CAA               	rrf	??___fldiv+2,f
  9416  0333  0CA9               	rrf	??___fldiv+1,f
  9417  0334  0CA8               	rrf	??___fldiv,f
  9418  0335                     u3400:
  9419  0335  0BAC               	decfsz	??___fldiv+4,f
  9420  0336  2B31               	goto	u3405
  9421  0337  082B               	movf	??___fldiv+3,w
  9422  0338  00A7               	movwf	___fldiv@b+3
  9423  0339  082A               	movf	??___fldiv+2,w
  9424  033A  00A6               	movwf	___fldiv@b+2
  9425  033B  0829               	movf	??___fldiv+1,w
  9426  033C  00A5               	movwf	___fldiv@b+1
  9427  033D  0828               	movf	??___fldiv,w
  9428  033E  00A4               	movwf	___fldiv@b
  9429  033F                     l3079:
  9430  033F  3001               	movlw	1
  9431  0340  07B2               	addwf	___fldiv@new_exp,f
  9432  0341  3000               	movlw	0
  9433  0342  3DB3               	addwfc	___fldiv@new_exp+1,f
  9434  0343                     l3081:
  9435  0343  0833               	movf	___fldiv@new_exp+1,w
  9436  0344  3A80               	xorlw	128
  9437  0345  00A8               	movwf	??___fldiv
  9438  0346  3080               	movlw	128
  9439  0347  0228               	subwf	??___fldiv,w
  9440  0348  1D03               	skipz
  9441  0349  2B4C               	goto	u3415
  9442  034A  30FF               	movlw	255
  9443  034B  0232               	subwf	___fldiv@new_exp,w
  9444  034C                     u3415:
  9445  034C  1C03               	skipc
  9446  034D  2B4F               	goto	u3411
  9447  034E  2B50               	goto	u3410
  9448  034F                     u3411:
  9449  034F  2B5D               	goto	l881
  9450  0350                     u3410:
  9451  0350                     l3083:
  9452  0350  30FF               	movlw	255
  9453  0351  0020               	movlb	0	; select bank0
  9454  0352  00B2               	movwf	___fldiv@new_exp
  9455  0353  3000               	movlw	0
  9456  0354  00B3               	movwf	___fldiv@new_exp+1
  9457  0355  3000               	movlw	0
  9458  0356  00A7               	movwf	___fldiv@b+3
  9459  0357  3000               	movlw	0
  9460  0358  00A6               	movwf	___fldiv@b+2
  9461  0359  3000               	movlw	0
  9462  035A  00A5               	movwf	___fldiv@b+1
  9463  035B  3000               	movlw	0
  9464  035C  00A4               	movwf	___fldiv@b
  9465  035D                     l881:
  9466  035D  0020               	movlb	0	; select bank0
  9467  035E  0833               	movf	___fldiv@new_exp+1,w
  9468  035F  3A80               	xorlw	128
  9469  0360  00A8               	movwf	??___fldiv
  9470  0361  3080               	movlw	128
  9471  0362  0228               	subwf	??___fldiv,w
  9472  0363  1D03               	skipz
  9473  0364  2B67               	goto	u3425
  9474  0365  3001               	movlw	1
  9475  0366  0232               	subwf	___fldiv@new_exp,w
  9476  0367                     u3425:
  9477  0367  1803               	skipnc
  9478  0368  2B6A               	goto	u3421
  9479  0369  2B6B               	goto	u3420
  9480  036A                     u3421:
  9481  036A  2B77               	goto	l882
  9482  036B                     u3420:
  9483  036B                     l3085:
  9484  036B  0020               	movlb	0	; select bank0
  9485  036C  01B2               	clrf	___fldiv@new_exp
  9486  036D  01B3               	clrf	___fldiv@new_exp+1
  9487  036E                     l3087:
  9488  036E  3000               	movlw	0
  9489  036F  00A7               	movwf	___fldiv@b+3
  9490  0370  3000               	movlw	0
  9491  0371  00A6               	movwf	___fldiv@b+2
  9492  0372  3000               	movlw	0
  9493  0373  00A5               	movwf	___fldiv@b+1
  9494  0374  3000               	movlw	0
  9495  0375  00A4               	movwf	___fldiv@b
  9496  0376                     l3089:
  9497  0376  01B1               	clrf	___fldiv@sign
  9498  0377                     l882:
  9499  0377  0020               	movlb	0	; select bank0
  9500  0378  0832               	movf	___fldiv@new_exp,w
  9501  0379  00A8               	movwf	??___fldiv
  9502  037A  0828               	movf	??___fldiv,w
  9503  037B  00B8               	movwf	___fldiv@bexp
  9504  037C                     l3091:
  9505  037C  1C38               	btfss	___fldiv@bexp,0
  9506  037D  2B7F               	goto	u3431
  9507  037E  2B80               	goto	u3430
  9508  037F                     u3431:
  9509  037F  2B82               	goto	l3095
  9510  0380                     u3430:
  9511  0380                     l3093:
  9512  0380  17A6               	bsf	___fldiv@b+2,7
  9513  0381  2B86               	goto	l884
  9514  0382                     l3095:
  9515  0382  307F               	movlw	127
  9516  0383  00A8               	movwf	??___fldiv
  9517  0384  0828               	movf	??___fldiv,w
  9518  0385  05A6               	andwf	___fldiv@b+2,f
  9519  0386                     l884:
  9520  0386  3638               	lsrf	___fldiv@bexp,w
  9521  0387  00A8               	movwf	??___fldiv
  9522  0388  0828               	movf	??___fldiv,w
  9523  0389  00A7               	movwf	___fldiv@b+3
  9524  038A  0831               	movf	___fldiv@sign,w
  9525  038B  00A8               	movwf	??___fldiv
  9526  038C  0828               	movf	??___fldiv,w
  9527  038D  04A7               	iorwf	___fldiv@b+3,f
  9528  038E  2A4B               	goto	l3005
  9529  038F                     l862:
  9530  038F  0008               	return
  9531  0390                     __end_of___fldiv:
  9532                           
  9533                           	psect	text37
  9534  0C43                     __ptext37:	
  9535 ;; *************** function _get_scale_val *****************
  9536 ;; Defined at:
  9537 ;;		line 34 in file "loadcell.c"
  9538 ;; Parameters:    Size  Location     Type
  9539 ;;  p               1    wreg     PTR struct .
  9540 ;;		 -> NULL(0), main@loadcell(12), 
  9541 ;;  scale_avg_co    1    0[BANK0 ] unsigned char 
  9542 ;; Auto vars:     Size  Location     Type
  9543 ;;  p               1   18[BANK0 ] PTR struct .
  9544 ;;		 -> NULL(0), main@loadcell(12), 
  9545 ;;  i               1   17[BANK0 ] unsigned char 
  9546 ;;  j               1   12[BANK0 ] unsigned char 
  9547 ;;  weight_count    4   13[BANK0 ] unsigned long 
  9548 ;;  weight_add      4    8[BANK0 ] unsigned long 
  9549 ;; Return value:  Size  Location     Type
  9550 ;;                  4    0[BANK0 ] unsigned long 
  9551 ;; Registers used:
  9552 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  9553 ;; Tracked objects:
  9554 ;;		On entry : 0/0
  9555 ;;		On exit  : 0/0
  9556 ;;		Unchanged: 0/0
  9557 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  9558 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9559 ;;      Locals:         0      11       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9560 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9561 ;;      Totals:         0      19       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9562 ;;Total ram usage:       19 bytes
  9563 ;; Hardware stack levels used: 1
  9564 ;; Hardware stack levels required when called: 1
  9565 ;; This function calls:
  9566 ;;		___lldiv
  9567 ;;		_get_CELL_DAT_VAL
  9568 ;;		_set_CELL_CLK_HIGH
  9569 ;;		_set_CELL_CLK_LOW
  9570 ;; This function is called by:
  9571 ;;		_initialize
  9572 ;;		_calc_percentage
  9573 ;; This function uses a non-reentrant model
  9574 ;;
  9575                           
  9576                           
  9577                           ;psect for function _get_scale_val
  9578  0C43                     _get_scale_val:
  9579                           
  9580                           ;incstack = 0
  9581                           ; Regs used in _get_scale_val: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
  9582                           ;get_scale_val@p stored from wreg
  9583  0C43  0020               	movlb	0	; select bank0
  9584  0C44  00B2               	movwf	get_scale_val@p
  9585  0C45                     l3247:
  9586                           
  9587                           ;loadcell.c: 35:     set_CELL_CLK_LOW(p);
  9588  0C45  0832               	movf	get_scale_val@p,w
  9589  0C46  3192  22D0  318C   	fcall	_set_CELL_CLK_LOW
  9590  0C49                     l3249:
  9591                           
  9592                           ;loadcell.c: 36:     unsigned long weight_count = 0;
  9593  0C49  3000               	movlw	0
  9594  0C4A  0020               	movlb	0	; select bank0
  9595  0C4B  00B0               	movwf	get_scale_val@weight_count+3
  9596  0C4C  3000               	movlw	0
  9597  0C4D  00AF               	movwf	get_scale_val@weight_count+2
  9598  0C4E  3000               	movlw	0
  9599  0C4F  00AE               	movwf	get_scale_val@weight_count+1
  9600  0C50  3000               	movlw	0
  9601  0C51  00AD               	movwf	get_scale_val@weight_count
  9602  0C52                     l3251:
  9603                           
  9604                           ;loadcell.c: 37:     unsigned long weight_add = 0;
  9605  0C52  3000               	movlw	0
  9606  0C53  00AB               	movwf	get_scale_val@weight_add+3
  9607  0C54  3000               	movlw	0
  9608  0C55  00AA               	movwf	get_scale_val@weight_add+2
  9609  0C56  3000               	movlw	0
  9610  0C57  00A9               	movwf	get_scale_val@weight_add+1
  9611  0C58  3000               	movlw	0
  9612  0C59  00A8               	movwf	get_scale_val@weight_add
  9613  0C5A                     l3253:
  9614                           
  9615                           ;loadcell.c: 38:     for (uint8_t j = 0; j < scale_avg_count; j++)
  9616  0C5A  01AC               	clrf	get_scale_val@j
  9617  0C5B  2CE2               	goto	l3303
  9618  0C5C                     l3255:
  9619  0C5C  0020               	movlb	0	; select bank0
  9620  0C5D  0832               	movf	get_scale_val@p,w
  9621  0C5E  3189  21A6  318C   	fcall	_get_CELL_DAT_VAL
  9622  0C61  0870               	movf	?_get_CELL_DAT_VAL,w
  9623  0C62  0471               	iorwf	?_get_CELL_DAT_VAL+1,w
  9624  0C63  1903               	btfsc	3,2
  9625  0C64  2C66               	goto	u3651
  9626  0C65  2C67               	goto	u3650
  9627  0C66                     u3651:
  9628  0C66  2C5C               	goto	l3255
  9629  0C67                     u3650:
  9630  0C67                     l3257:
  9631  0C67  0020               	movlb	0	; select bank0
  9632  0C68  0832               	movf	get_scale_val@p,w
  9633  0C69  3189  21A6  318C   	fcall	_get_CELL_DAT_VAL
  9634  0C6C  0370               	decf	?_get_CELL_DAT_VAL,w
  9635  0C6D  0471               	iorwf	?_get_CELL_DAT_VAL+1,w
  9636  0C6E  1903               	btfsc	3,2
  9637  0C6F  2C71               	goto	u3661
  9638  0C70  2C72               	goto	u3660
  9639  0C71                     u3661:
  9640  0C71  2C67               	goto	l3257
  9641  0C72                     u3660:
  9642  0C72                     l3259:
  9643                           
  9644                           ;loadcell.c: 42:         _delay((unsigned long)((10)*(8000000/4000000.0)));
  9645  0C72  3006               	movlw	6
  9646  0C73                     u4237:
  9647  0C73  0B89               	decfsz	9,f
  9648  0C74  2C73               	goto	u4237
  9649  0C75  3200               	nop2
  9650  0C76                     l3261:
  9651                           
  9652                           ;loadcell.c: 44:         uint8_t i;;loadcell.c: 45:         for (i = 0; i < 24; i++){
  9653  0C76  0020               	movlb	0	; select bank0
  9654  0C77  01B1               	clrf	get_scale_val@i
  9655  0C78                     l3267:
  9656                           
  9657                           ;loadcell.c: 46:             weight_count <<= 1;
  9658  0C78  3001               	movlw	1
  9659  0C79                     u3675:
  9660  0C79  35AD               	lslf	get_scale_val@weight_count,f
  9661  0C7A  0DAE               	rlf	get_scale_val@weight_count+1,f
  9662  0C7B  0DAF               	rlf	get_scale_val@weight_count+2,f
  9663  0C7C  0DB0               	rlf	get_scale_val@weight_count+3,f
  9664  0C7D  0B89               	decfsz	9,f
  9665  0C7E  2C79               	goto	u3675
  9666  0C7F                     l3269:
  9667                           
  9668                           ;loadcell.c: 47:             set_CELL_CLK_HIGH(p);
  9669  0C7F  0832               	movf	get_scale_val@p,w
  9670  0C80  3192  22C6  318C   	fcall	_set_CELL_CLK_HIGH
  9671  0C83                     l3271:
  9672                           
  9673                           ;loadcell.c: 48:             _delay((unsigned long)((10)*(8000000/4000000.0)));
  9674  0C83  3006               	movlw	6
  9675  0C84                     u4247:
  9676  0C84  0B89               	decfsz	9,f
  9677  0C85  2C84               	goto	u4247
  9678  0C86  3200               	nop2
  9679  0C87                     l3273:
  9680                           
  9681                           ;loadcell.c: 49:             set_CELL_CLK_LOW(p);
  9682  0C87  0020               	movlb	0	; select bank0
  9683  0C88  0832               	movf	get_scale_val@p,w
  9684  0C89  3192  22D0  318C   	fcall	_set_CELL_CLK_LOW
  9685  0C8C                     l3275:
  9686                           
  9687                           ;loadcell.c: 50:             weight_count += get_CELL_DAT_VAL(p);
  9688  0C8C  0020               	movlb	0	; select bank0
  9689  0C8D  0832               	movf	get_scale_val@p,w
  9690  0C8E  3189  21A6  318C   	fcall	_get_CELL_DAT_VAL
  9691  0C91  0870               	movf	?_get_CELL_DAT_VAL,w
  9692  0C92  0020               	movlb	0	; select bank0
  9693  0C93  00A4               	movwf	??_get_scale_val
  9694  0C94  0871               	movf	?_get_CELL_DAT_VAL+1,w
  9695  0C95  00A5               	movwf	??_get_scale_val+1
  9696  0C96  3000               	movlw	0
  9697  0C97  1BA5               	btfsc	??_get_scale_val+1,7
  9698  0C98  30FF               	movlw	255
  9699  0C99  00A6               	movwf	??_get_scale_val+2
  9700  0C9A  00A7               	movwf	??_get_scale_val+3
  9701  0C9B  0824               	movf	??_get_scale_val,w
  9702  0C9C  07AD               	addwf	get_scale_val@weight_count,f
  9703  0C9D  0825               	movf	??_get_scale_val+1,w
  9704  0C9E  3DAE               	addwfc	get_scale_val@weight_count+1,f
  9705  0C9F  0826               	movf	??_get_scale_val+2,w
  9706  0CA0  3DAF               	addwfc	get_scale_val@weight_count+2,f
  9707  0CA1  0827               	movf	??_get_scale_val+3,w
  9708  0CA2  3DB0               	addwfc	get_scale_val@weight_count+3,f
  9709  0CA3                     l3277:
  9710                           
  9711                           ;loadcell.c: 51:             _delay((unsigned long)((10)*(8000000/4000000.0)));
  9712  0CA3  3006               	movlw	6
  9713  0CA4                     u4257:
  9714  0CA4  0B89               	decfsz	9,f
  9715  0CA5  2CA4               	goto	u4257
  9716  0CA6  3200               	nop2
  9717  0CA7                     l3279:
  9718                           
  9719                           ;loadcell.c: 52:         }
  9720  0CA7  3001               	movlw	1
  9721  0CA8  0020               	movlb	0	; select bank0
  9722  0CA9  00A4               	movwf	??_get_scale_val
  9723  0CAA  0824               	movf	??_get_scale_val,w
  9724  0CAB  07B1               	addwf	get_scale_val@i,f
  9725  0CAC                     l3281:
  9726  0CAC  3018               	movlw	24
  9727  0CAD  0231               	subwf	get_scale_val@i,w
  9728  0CAE  1C03               	skipc
  9729  0CAF  2CB1               	goto	u3681
  9730  0CB0  2CB2               	goto	u3680
  9731  0CB1                     u3681:
  9732  0CB1  2C78               	goto	l3267
  9733  0CB2                     u3680:
  9734  0CB2                     l3283:
  9735                           
  9736                           ;loadcell.c: 54:         for (i = 0; i < 1; i++){
  9737  0CB2  01B1               	clrf	get_scale_val@i
  9738  0CB3                     l3289:
  9739                           
  9740                           ;loadcell.c: 55:             set_CELL_CLK_HIGH(p);
  9741  0CB3  0832               	movf	get_scale_val@p,w
  9742  0CB4  3192  22C6  318C   	fcall	_set_CELL_CLK_HIGH
  9743  0CB7                     l3291:
  9744                           
  9745                           ;loadcell.c: 56:             _delay((unsigned long)((10)*(8000000/4000000.0)));
  9746  0CB7  3006               	movlw	6
  9747  0CB8                     u4267:
  9748  0CB8  0B89               	decfsz	9,f
  9749  0CB9  2CB8               	goto	u4267
  9750  0CBA  3200               	nop2
  9751  0CBB                     l3293:
  9752                           
  9753                           ;loadcell.c: 57:             set_CELL_CLK_LOW(p);
  9754  0CBB  0020               	movlb	0	; select bank0
  9755  0CBC  0832               	movf	get_scale_val@p,w
  9756  0CBD  3192  22D0  318C   	fcall	_set_CELL_CLK_LOW
  9757                           
  9758                           ;loadcell.c: 58:             _delay((unsigned long)((10)*(8000000/4000000.0)));
  9759  0CC0  3006               	movlw	6
  9760  0CC1                     u4277:
  9761  0CC1  0B89               	decfsz	9,f
  9762  0CC2  2CC1               	goto	u4277
  9763  0CC3  3200               	nop2
  9764  0CC4                     l3295:
  9765                           
  9766                           ;loadcell.c: 59:         };
  9767  0CC4  3001               	movlw	1
  9768  0CC5  0020               	movlb	0	; select bank0
  9769  0CC6  00A4               	movwf	??_get_scale_val
  9770  0CC7  0824               	movf	??_get_scale_val,w
  9771  0CC8  07B1               	addwf	get_scale_val@i,f
  9772  0CC9                     l3297:
  9773  0CC9  0831               	movf	get_scale_val@i,w
  9774  0CCA  1903               	btfsc	3,2
  9775  0CCB  2CCD               	goto	u3691
  9776  0CCC  2CCE               	goto	u3690
  9777  0CCD                     u3691:
  9778  0CCD  2CB3               	goto	l3289
  9779  0CCE                     u3690:
  9780  0CCE                     l3299:
  9781                           
  9782                           ;loadcell.c: 60:         weight_add += weight_count;
  9783  0CCE  082D               	movf	get_scale_val@weight_count,w
  9784  0CCF  07A8               	addwf	get_scale_val@weight_add,f
  9785  0CD0  082E               	movf	get_scale_val@weight_count+1,w
  9786  0CD1  3DA9               	addwfc	get_scale_val@weight_add+1,f
  9787  0CD2  082F               	movf	get_scale_val@weight_count+2,w
  9788  0CD3  3DAA               	addwfc	get_scale_val@weight_add+2,f
  9789  0CD4  0830               	movf	get_scale_val@weight_count+3,w
  9790  0CD5  3DAB               	addwfc	get_scale_val@weight_add+3,f
  9791                           
  9792                           ;loadcell.c: 61:         weight_count = 0;
  9793  0CD6  3000               	movlw	0
  9794  0CD7  00B0               	movwf	get_scale_val@weight_count+3
  9795  0CD8  3000               	movlw	0
  9796  0CD9  00AF               	movwf	get_scale_val@weight_count+2
  9797  0CDA  3000               	movlw	0
  9798  0CDB  00AE               	movwf	get_scale_val@weight_count+1
  9799  0CDC  3000               	movlw	0
  9800  0CDD  00AD               	movwf	get_scale_val@weight_count
  9801  0CDE                     l3301:
  9802                           
  9803                           ;loadcell.c: 62:     }
  9804  0CDE  3001               	movlw	1
  9805  0CDF  00A4               	movwf	??_get_scale_val
  9806  0CE0  0824               	movf	??_get_scale_val,w
  9807  0CE1  07AC               	addwf	get_scale_val@j,f
  9808  0CE2                     l3303:
  9809  0CE2  0820               	movf	get_scale_val@scale_avg_count,w
  9810  0CE3  022C               	subwf	get_scale_val@j,w
  9811  0CE4  1C03               	skipc
  9812  0CE5  2CE7               	goto	u3701
  9813  0CE6  2CE8               	goto	u3700
  9814  0CE7                     u3701:
  9815  0CE7  2C5C               	goto	l3255
  9816  0CE8                     u3700:
  9817  0CE8                     l3305:
  9818                           
  9819                           ;loadcell.c: 63:     weight_count = weight_add / scale_avg_count;
  9820  0CE8  0820               	movf	get_scale_val@scale_avg_count,w
  9821  0CE9  00A4               	movwf	??_get_scale_val
  9822  0CEA  01A5               	clrf	??_get_scale_val+1
  9823  0CEB  01A6               	clrf	??_get_scale_val+2
  9824  0CEC  01A7               	clrf	??_get_scale_val+3
  9825  0CED  0827               	movf	??_get_scale_val+3,w
  9826  0CEE  00F3               	movwf	___lldiv@divisor+3
  9827  0CEF  0826               	movf	??_get_scale_val+2,w
  9828  0CF0  00F2               	movwf	___lldiv@divisor+2
  9829  0CF1  0825               	movf	??_get_scale_val+1,w
  9830  0CF2  00F1               	movwf	___lldiv@divisor+1
  9831  0CF3  0824               	movf	??_get_scale_val,w
  9832  0CF4  00F0               	movwf	___lldiv@divisor
  9833  0CF5  082B               	movf	get_scale_val@weight_add+3,w
  9834  0CF6  00F7               	movwf	___lldiv@dividend+3
  9835  0CF7  082A               	movf	get_scale_val@weight_add+2,w
  9836  0CF8  00F6               	movwf	___lldiv@dividend+2
  9837  0CF9  0829               	movf	get_scale_val@weight_add+1,w
  9838  0CFA  00F5               	movwf	___lldiv@dividend+1
  9839  0CFB  0828               	movf	get_scale_val@weight_add,w
  9840  0CFC  00F4               	movwf	___lldiv@dividend
  9841  0CFD  3196  2657  318C   	fcall	___lldiv
  9842  0D00  0873               	movf	?___lldiv+3,w
  9843  0D01  0020               	movlb	0	; select bank0
  9844  0D02  00B0               	movwf	get_scale_val@weight_count+3
  9845  0D03  0872               	movf	?___lldiv+2,w
  9846  0D04  00AF               	movwf	get_scale_val@weight_count+2
  9847  0D05  0871               	movf	?___lldiv+1,w
  9848  0D06  00AE               	movwf	get_scale_val@weight_count+1
  9849  0D07  0870               	movf	?___lldiv,w
  9850  0D08  00AD               	movwf	get_scale_val@weight_count
  9851  0D09                     l3307:
  9852                           
  9853                           ;loadcell.c: 66:     weight_count = weight_count ^ 0x800000;
  9854  0D09  3000               	movlw	0
  9855  0D0A  062D               	xorwf	get_scale_val@weight_count,w
  9856  0D0B  00A4               	movwf	??_get_scale_val
  9857  0D0C  3000               	movlw	0
  9858  0D0D  062E               	xorwf	get_scale_val@weight_count+1,w
  9859  0D0E  00A5               	movwf	??_get_scale_val+1
  9860  0D0F  3080               	movlw	128
  9861  0D10  062F               	xorwf	get_scale_val@weight_count+2,w
  9862  0D11  00A6               	movwf	??_get_scale_val+2
  9863  0D12  3000               	movlw	0
  9864  0D13  0630               	xorwf	get_scale_val@weight_count+3,w
  9865  0D14  00A7               	movwf	??_get_scale_val+3
  9866  0D15  0827               	movf	??_get_scale_val+3,w
  9867  0D16  00B0               	movwf	get_scale_val@weight_count+3
  9868  0D17  0826               	movf	??_get_scale_val+2,w
  9869  0D18  00AF               	movwf	get_scale_val@weight_count+2
  9870  0D19  0825               	movf	??_get_scale_val+1,w
  9871  0D1A  00AE               	movwf	get_scale_val@weight_count+1
  9872  0D1B  0824               	movf	??_get_scale_val,w
  9873  0D1C  00AD               	movwf	get_scale_val@weight_count
  9874  0D1D                     l3309:
  9875                           
  9876                           ;loadcell.c: 67:     return weight_count;
  9877  0D1D  0830               	movf	get_scale_val@weight_count+3,w
  9878  0D1E  00A3               	movwf	?_get_scale_val+3
  9879  0D1F  082F               	movf	get_scale_val@weight_count+2,w
  9880  0D20  00A2               	movwf	?_get_scale_val+2
  9881  0D21  082E               	movf	get_scale_val@weight_count+1,w
  9882  0D22  00A1               	movwf	?_get_scale_val+1
  9883  0D23  082D               	movf	get_scale_val@weight_count,w
  9884  0D24  00A0               	movwf	?_get_scale_val
  9885  0D25                     l264:
  9886  0D25  0008               	return
  9887  0D26                     __end_of_get_scale_val:
  9888                           
  9889                           	psect	text38
  9890  12D0                     __ptext38:	
  9891 ;; *************** function _set_CELL_CLK_LOW *****************
  9892 ;; Defined at:
  9893 ;;		line 7 in file "loadcell.c"
  9894 ;; Parameters:    Size  Location     Type
  9895 ;;  p               1    wreg     PTR struct .
  9896 ;;		 -> NULL(0), main@loadcell(12), 
  9897 ;; Auto vars:     Size  Location     Type
  9898 ;;  p               1    1[COMMON] PTR struct .
  9899 ;;		 -> NULL(0), main@loadcell(12), 
  9900 ;; Return value:  Size  Location     Type
  9901 ;;                  1    wreg      void 
  9902 ;; Registers used:
  9903 ;;		wreg, fsr1l, fsr1h, status,2, status,0
  9904 ;; Tracked objects:
  9905 ;;		On entry : 0/0
  9906 ;;		On exit  : 0/0
  9907 ;;		Unchanged: 0/0
  9908 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  9909 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9910 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9911 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9912 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9913 ;;Total ram usage:        2 bytes
  9914 ;; Hardware stack levels used: 1
  9915 ;; This function calls:
  9916 ;;		Nothing
  9917 ;; This function is called by:
  9918 ;;		_get_scale_val
  9919 ;; This function uses a non-reentrant model
  9920 ;;
  9921                           
  9922                           
  9923                           ;psect for function _set_CELL_CLK_LOW
  9924  12D0                     _set_CELL_CLK_LOW:
  9925                           
  9926                           ;incstack = 0
  9927                           ; Regs used in _set_CELL_CLK_LOW: [wreg+fsr1l+fsr1h+status,2+status,0]
  9928                           ;set_CELL_CLK_LOW@p stored from wreg
  9929  12D0  00F1               	movwf	set_CELL_CLK_LOW@p
  9930  12D1                     l2825:
  9931  12D1  0871               	movf	set_CELL_CLK_LOW@p,w
  9932  12D2  0086               	movwf	6
  9933  12D3  0187               	clrf	7
  9934  12D4  0901               	comf	1,w
  9935  12D5  00F0               	movwf	??_set_CELL_CLK_LOW
  9936  12D6  0870               	movf	??_set_CELL_CLK_LOW,w
  9937  12D7  0022               	movlb	2	; select bank2
  9938  12D8  058D               	andwf	13,f	;volatile
  9939  12D9                     l234:
  9940  12D9  0008               	return
  9941  12DA                     __end_of_set_CELL_CLK_LOW:
  9942                           
  9943                           	psect	text39
  9944  12C6                     __ptext39:	
  9945 ;; *************** function _set_CELL_CLK_HIGH *****************
  9946 ;; Defined at:
  9947 ;;		line 12 in file "loadcell.c"
  9948 ;; Parameters:    Size  Location     Type
  9949 ;;  p               1    wreg     PTR struct .
  9950 ;;		 -> NULL(0), main@loadcell(12), 
  9951 ;; Auto vars:     Size  Location     Type
  9952 ;;  p               1    1[COMMON] PTR struct .
  9953 ;;		 -> NULL(0), main@loadcell(12), 
  9954 ;; Return value:  Size  Location     Type
  9955 ;;                  1    wreg      void 
  9956 ;; Registers used:
  9957 ;;		wreg, fsr1l, fsr1h, status,2, status,0
  9958 ;; Tracked objects:
  9959 ;;		On entry : 0/0
  9960 ;;		On exit  : 0/0
  9961 ;;		Unchanged: 0/0
  9962 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  9963 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9964 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9965 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9966 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9967 ;;Total ram usage:        2 bytes
  9968 ;; Hardware stack levels used: 1
  9969 ;; This function calls:
  9970 ;;		Nothing
  9971 ;; This function is called by:
  9972 ;;		_get_scale_val
  9973 ;; This function uses a non-reentrant model
  9974 ;;
  9975                           
  9976                           
  9977                           ;psect for function _set_CELL_CLK_HIGH
  9978  12C6                     _set_CELL_CLK_HIGH:
  9979                           
  9980                           ;incstack = 0
  9981                           ; Regs used in _set_CELL_CLK_HIGH: [wreg+fsr1l+fsr1h+status,2+status,0]
  9982                           ;set_CELL_CLK_HIGH@p stored from wreg
  9983  12C6  00F1               	movwf	set_CELL_CLK_HIGH@p
  9984  12C7                     l2827:
  9985  12C7  0871               	movf	set_CELL_CLK_HIGH@p,w
  9986  12C8  0086               	movwf	6
  9987  12C9  0187               	clrf	7
  9988  12CA  0801               	movf	1,w
  9989  12CB  00F0               	movwf	??_set_CELL_CLK_HIGH
  9990  12CC  0870               	movf	??_set_CELL_CLK_HIGH,w
  9991  12CD  0022               	movlb	2	; select bank2
  9992  12CE  048D               	iorwf	13,f	;volatile
  9993  12CF                     l237:
  9994  12CF  0008               	return
  9995  12D0                     __end_of_set_CELL_CLK_HIGH:
  9996                           
  9997                           	psect	text40
  9998  09A6                     __ptext40:	
  9999 ;; *************** function _get_CELL_DAT_VAL *****************
 10000 ;; Defined at:
 10001 ;;		line 15 in file "loadcell.c"
 10002 ;; Parameters:    Size  Location     Type
 10003 ;;  p               1    wreg     PTR struct .
 10004 ;;		 -> NULL(0), main@loadcell(12), 
 10005 ;; Auto vars:     Size  Location     Type
 10006 ;;  p               1    5[COMMON] PTR struct .
 10007 ;;		 -> NULL(0), main@loadcell(12), 
 10008 ;; Return value:  Size  Location     Type
 10009 ;;                  2    0[COMMON] int 
 10010 ;; Registers used:
 10011 ;;		wreg, fsr1l, fsr1h, status,2, status,0
 10012 ;; Tracked objects:
 10013 ;;		On entry : 0/0
 10014 ;;		On exit  : 0/0
 10015 ;;		Unchanged: 0/0
 10016 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 10017 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10018 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10019 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10020 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10021 ;;Total ram usage:        6 bytes
 10022 ;; Hardware stack levels used: 1
 10023 ;; This function calls:
 10024 ;;		Nothing
 10025 ;; This function is called by:
 10026 ;;		_get_scale_val
 10027 ;; This function uses a non-reentrant model
 10028 ;;
 10029                           
 10030                           
 10031                           ;psect for function _get_CELL_DAT_VAL
 10032  09A6                     _get_CELL_DAT_VAL:
 10033                           
 10034                           ;incstack = 0
 10035                           ; Regs used in _get_CELL_DAT_VAL: [wreg+fsr1l+fsr1h+status,2+status,0]
 10036                           ;get_CELL_DAT_VAL@p stored from wreg
 10037  09A6  00F5               	movwf	get_CELL_DAT_VAL@p
 10038  09A7                     l2829:
 10039                           
 10040                           ;loadcell.c: 16:     if(p->cell_dat == 0x01){ return PORTBbits.RB0; }
 10041  09A7  0A75               	incf	get_CELL_DAT_VAL@p,w
 10042  09A8  0086               	movwf	6
 10043  09A9  0187               	clrf	7
 10044  09AA  0301               	decf	1,w
 10045  09AB  1D03               	btfss	3,2
 10046  09AC  29AE               	goto	u2881
 10047  09AD  29AF               	goto	u2880
 10048  09AE                     u2881:
 10049  09AE  29B9               	goto	l2835
 10050  09AF                     u2880:
 10051  09AF                     l2831:
 10052  09AF  0020               	movlb	0	; select bank0
 10053  09B0  080D               	movf	13,w	;volatile
 10054  09B1  3901               	andlw	1
 10055  09B2  00F2               	movwf	??_get_CELL_DAT_VAL
 10056  09B3  01F3               	clrf	??_get_CELL_DAT_VAL+1
 10057  09B4  0872               	movf	??_get_CELL_DAT_VAL,w
 10058  09B5  00F0               	movwf	?_get_CELL_DAT_VAL
 10059  09B6  0873               	movf	??_get_CELL_DAT_VAL+1,w
 10060  09B7  00F1               	movwf	?_get_CELL_DAT_VAL+1
 10061  09B8  2A48               	goto	l241
 10062  09B9                     l2835:
 10063                           
 10064                           ;loadcell.c: 17:     if(p->cell_dat == 0x02){ return PORTBbits.RB1; }
 10065  09B9  0A75               	incf	get_CELL_DAT_VAL@p,w
 10066  09BA  0086               	movwf	6
 10067  09BB  0187               	clrf	7
 10068  09BC  3002               	movlw	2
 10069  09BD  0601               	xorwf	1,w
 10070  09BE  1D03               	btfss	3,2
 10071  09BF  29C1               	goto	u2891
 10072  09C0  29C2               	goto	u2890
 10073  09C1                     u2891:
 10074  09C1  29CC               	goto	l2841
 10075  09C2                     u2890:
 10076  09C2                     l2837:
 10077  09C2  0020               	movlb	0	; select bank0
 10078  09C3  0C0D               	rrf	13,w	;volatile
 10079  09C4  3901               	andlw	1
 10080  09C5  00F2               	movwf	??_get_CELL_DAT_VAL
 10081  09C6  01F3               	clrf	??_get_CELL_DAT_VAL+1
 10082  09C7  0872               	movf	??_get_CELL_DAT_VAL,w
 10083  09C8  00F0               	movwf	?_get_CELL_DAT_VAL
 10084  09C9  0873               	movf	??_get_CELL_DAT_VAL+1,w
 10085  09CA  00F1               	movwf	?_get_CELL_DAT_VAL+1
 10086  09CB  2A48               	goto	l241
 10087  09CC                     l2841:
 10088                           
 10089                           ;loadcell.c: 18:     if(p->cell_dat == 0x04){ return PORTBbits.RB2; }
 10090  09CC  0A75               	incf	get_CELL_DAT_VAL@p,w
 10091  09CD  0086               	movwf	6
 10092  09CE  0187               	clrf	7
 10093  09CF  3004               	movlw	4
 10094  09D0  0601               	xorwf	1,w
 10095  09D1  1D03               	btfss	3,2
 10096  09D2  29D4               	goto	u2901
 10097  09D3  29D5               	goto	u2900
 10098  09D4                     u2901:
 10099  09D4  29E0               	goto	l2847
 10100  09D5                     u2900:
 10101  09D5                     l2843:
 10102  09D5  0020               	movlb	0	; select bank0
 10103  09D6  0C0D               	rrf	13,w	;volatile
 10104  09D7  0C89               	rrf	9,f
 10105  09D8  3901               	andlw	1
 10106  09D9  00F2               	movwf	??_get_CELL_DAT_VAL
 10107  09DA  01F3               	clrf	??_get_CELL_DAT_VAL+1
 10108  09DB  0872               	movf	??_get_CELL_DAT_VAL,w
 10109  09DC  00F0               	movwf	?_get_CELL_DAT_VAL
 10110  09DD  0873               	movf	??_get_CELL_DAT_VAL+1,w
 10111  09DE  00F1               	movwf	?_get_CELL_DAT_VAL+1
 10112  09DF  2A48               	goto	l241
 10113  09E0                     l2847:
 10114                           
 10115                           ;loadcell.c: 19:     if(p->cell_dat == 0x08){ return PORTBbits.RB3; }
 10116  09E0  0A75               	incf	get_CELL_DAT_VAL@p,w
 10117  09E1  0086               	movwf	6
 10118  09E2  0187               	clrf	7
 10119  09E3  3008               	movlw	8
 10120  09E4  0601               	xorwf	1,w
 10121  09E5  1D03               	btfss	3,2
 10122  09E6  29E8               	goto	u2911
 10123  09E7  29E9               	goto	u2910
 10124  09E8                     u2911:
 10125  09E8  29F6               	goto	l2853
 10126  09E9                     u2910:
 10127  09E9                     l2849:
 10128  09E9  0020               	movlb	0	; select bank0
 10129  09EA  0C0D               	rrf	13,w	;volatile
 10130  09EB  00F2               	movwf	??_get_CELL_DAT_VAL
 10131  09EC  0CF2               	rrf	??_get_CELL_DAT_VAL,f
 10132  09ED  0C72               	rrf	??_get_CELL_DAT_VAL,w
 10133  09EE  3901               	andlw	1
 10134  09EF  00F3               	movwf	??_get_CELL_DAT_VAL+1
 10135  09F0  01F4               	clrf	??_get_CELL_DAT_VAL+2
 10136  09F1  0873               	movf	??_get_CELL_DAT_VAL+1,w
 10137  09F2  00F0               	movwf	?_get_CELL_DAT_VAL
 10138  09F3  0874               	movf	??_get_CELL_DAT_VAL+2,w
 10139  09F4  00F1               	movwf	?_get_CELL_DAT_VAL+1
 10140  09F5  2A48               	goto	l241
 10141  09F6                     l2853:
 10142                           
 10143                           ;loadcell.c: 20:     if(p->cell_dat == 0x10){ return PORTBbits.RB4; }
 10144  09F6  0A75               	incf	get_CELL_DAT_VAL@p,w
 10145  09F7  0086               	movwf	6
 10146  09F8  0187               	clrf	7
 10147  09F9  3010               	movlw	16
 10148  09FA  0601               	xorwf	1,w
 10149  09FB  1D03               	btfss	3,2
 10150  09FC  29FE               	goto	u2921
 10151  09FD  29FF               	goto	u2920
 10152  09FE                     u2921:
 10153  09FE  2A09               	goto	l2859
 10154  09FF                     u2920:
 10155  09FF                     l2855:
 10156  09FF  0020               	movlb	0	; select bank0
 10157  0A00  0E0D               	swapf	13,w	;volatile
 10158  0A01  3901               	andlw	1
 10159  0A02  00F2               	movwf	??_get_CELL_DAT_VAL
 10160  0A03  01F3               	clrf	??_get_CELL_DAT_VAL+1
 10161  0A04  0872               	movf	??_get_CELL_DAT_VAL,w
 10162  0A05  00F0               	movwf	?_get_CELL_DAT_VAL
 10163  0A06  0873               	movf	??_get_CELL_DAT_VAL+1,w
 10164  0A07  00F1               	movwf	?_get_CELL_DAT_VAL+1
 10165  0A08  2A48               	goto	l241
 10166  0A09                     l2859:
 10167                           
 10168                           ;loadcell.c: 21:     if(p->cell_dat == 0x20){ return PORTBbits.RB5; }
 10169  0A09  0A75               	incf	get_CELL_DAT_VAL@p,w
 10170  0A0A  0086               	movwf	6
 10171  0A0B  0187               	clrf	7
 10172  0A0C  3020               	movlw	32
 10173  0A0D  0601               	xorwf	1,w
 10174  0A0E  1D03               	btfss	3,2
 10175  0A0F  2A11               	goto	u2931
 10176  0A10  2A12               	goto	u2930
 10177  0A11                     u2931:
 10178  0A11  2A1D               	goto	l2865
 10179  0A12                     u2930:
 10180  0A12                     l2861:
 10181  0A12  0020               	movlb	0	; select bank0
 10182  0A13  0E0D               	swapf	13,w	;volatile
 10183  0A14  0C89               	rrf	9,f
 10184  0A15  3901               	andlw	1
 10185  0A16  00F2               	movwf	??_get_CELL_DAT_VAL
 10186  0A17  01F3               	clrf	??_get_CELL_DAT_VAL+1
 10187  0A18  0872               	movf	??_get_CELL_DAT_VAL,w
 10188  0A19  00F0               	movwf	?_get_CELL_DAT_VAL
 10189  0A1A  0873               	movf	??_get_CELL_DAT_VAL+1,w
 10190  0A1B  00F1               	movwf	?_get_CELL_DAT_VAL+1
 10191  0A1C  2A48               	goto	l241
 10192  0A1D                     l2865:
 10193                           
 10194                           ;loadcell.c: 22:     if(p->cell_dat == 0x40){ return PORTBbits.RB6; }
 10195  0A1D  0A75               	incf	get_CELL_DAT_VAL@p,w
 10196  0A1E  0086               	movwf	6
 10197  0A1F  0187               	clrf	7
 10198  0A20  3040               	movlw	64
 10199  0A21  0601               	xorwf	1,w
 10200  0A22  1D03               	btfss	3,2
 10201  0A23  2A25               	goto	u2941
 10202  0A24  2A26               	goto	u2940
 10203  0A25                     u2941:
 10204  0A25  2A32               	goto	l2871
 10205  0A26                     u2940:
 10206  0A26                     l2867:
 10207  0A26  0020               	movlb	0	; select bank0
 10208  0A27  0E0D               	swapf	13,w	;volatile
 10209  0A28  0C89               	rrf	9,f
 10210  0A29  0C89               	rrf	9,f
 10211  0A2A  3901               	andlw	1
 10212  0A2B  00F2               	movwf	??_get_CELL_DAT_VAL
 10213  0A2C  01F3               	clrf	??_get_CELL_DAT_VAL+1
 10214  0A2D  0872               	movf	??_get_CELL_DAT_VAL,w
 10215  0A2E  00F0               	movwf	?_get_CELL_DAT_VAL
 10216  0A2F  0873               	movf	??_get_CELL_DAT_VAL+1,w
 10217  0A30  00F1               	movwf	?_get_CELL_DAT_VAL+1
 10218  0A31  2A48               	goto	l241
 10219  0A32                     l2871:
 10220                           
 10221                           ;loadcell.c: 23:     if(p->cell_dat == 0x80){ return PORTBbits.RB7; }
 10222  0A32  0A75               	incf	get_CELL_DAT_VAL@p,w
 10223  0A33  0086               	movwf	6
 10224  0A34  0187               	clrf	7
 10225  0A35  3080               	movlw	128
 10226  0A36  0601               	xorwf	1,w
 10227  0A37  1D03               	btfss	3,2
 10228  0A38  2A3A               	goto	u2951
 10229  0A39  2A3B               	goto	u2950
 10230  0A3A                     u2951:
 10231  0A3A  2A46               	goto	l2877
 10232  0A3B                     u2950:
 10233  0A3B                     l2873:
 10234  0A3B  0020               	movlb	0	; select bank0
 10235  0A3C  0D0D               	rlf	13,w	;volatile
 10236  0A3D  0D0D               	rlf	13,w	;volatile
 10237  0A3E  3901               	andlw	1
 10238  0A3F  00F2               	movwf	??_get_CELL_DAT_VAL
 10239  0A40  01F3               	clrf	??_get_CELL_DAT_VAL+1
 10240  0A41  0872               	movf	??_get_CELL_DAT_VAL,w
 10241  0A42  00F0               	movwf	?_get_CELL_DAT_VAL
 10242  0A43  0873               	movf	??_get_CELL_DAT_VAL+1,w
 10243  0A44  00F1               	movwf	?_get_CELL_DAT_VAL+1
 10244  0A45  2A48               	goto	l241
 10245  0A46                     l2877:
 10246                           
 10247                           ;loadcell.c: 25:     return 0;
 10248  0A46  01F0               	clrf	?_get_CELL_DAT_VAL
 10249  0A47  01F1               	clrf	?_get_CELL_DAT_VAL+1
 10250  0A48                     l241:
 10251  0A48  0008               	return
 10252  0A49                     __end_of_get_CELL_DAT_VAL:
 10253                           
 10254                           	psect	text41
 10255  1657                     __ptext41:	
 10256 ;; *************** function ___lldiv *****************
 10257 ;; Defined at:
 10258 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\__lldiv.c"
 10259 ;; Parameters:    Size  Location     Type
 10260 ;;  divisor         4    0[COMMON] unsigned long 
 10261 ;;  dividend        4    4[COMMON] unsigned long 
 10262 ;; Auto vars:     Size  Location     Type
 10263 ;;  quotient        4    9[COMMON] unsigned long 
 10264 ;;  counter         1   13[COMMON] unsigned char 
 10265 ;; Return value:  Size  Location     Type
 10266 ;;                  4    0[COMMON] unsigned long 
 10267 ;; Registers used:
 10268 ;;		wreg, status,2, status,0
 10269 ;; Tracked objects:
 10270 ;;		On entry : 0/0
 10271 ;;		On exit  : 0/0
 10272 ;;		Unchanged: 0/0
 10273 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 10274 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10275 ;;      Locals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10276 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10277 ;;      Totals:        14       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10278 ;;Total ram usage:       14 bytes
 10279 ;; Hardware stack levels used: 1
 10280 ;; This function calls:
 10281 ;;		Nothing
 10282 ;; This function is called by:
 10283 ;;		_get_scale_val
 10284 ;; This function uses a non-reentrant model
 10285 ;;
 10286                           
 10287                           
 10288                           ;psect for function ___lldiv
 10289  1657                     ___lldiv:
 10290  1657                     l2901:	
 10291                           ;incstack = 0
 10292                           ; Regs used in ___lldiv: [wreg+status,2+status,0]
 10293                           
 10294  1657  3000               	movlw	0
 10295  1658  00FC               	movwf	___lldiv@quotient+3
 10296  1659  3000               	movlw	0
 10297  165A  00FB               	movwf	___lldiv@quotient+2
 10298  165B  3000               	movlw	0
 10299  165C  00FA               	movwf	___lldiv@quotient+1
 10300  165D  3000               	movlw	0
 10301  165E  00F9               	movwf	___lldiv@quotient
 10302  165F  0873               	movf	___lldiv@divisor+3,w
 10303  1660  0472               	iorwf	___lldiv@divisor+2,w
 10304  1661  0471               	iorwf	___lldiv@divisor+1,w
 10305  1662  0470               	iorwf	___lldiv@divisor,w
 10306  1663  1903               	skipnz
 10307  1664  2E66               	goto	u2981
 10308  1665  2E67               	goto	u2980
 10309  1666                     u2981:
 10310  1666  2EA8               	goto	l2921
 10311  1667                     u2980:
 10312  1667                     l2903:
 10313  1667  01FD               	clrf	___lldiv@counter
 10314  1668  0AFD               	incf	___lldiv@counter,f
 10315  1669  2E75               	goto	l2907
 10316  166A                     l2905:
 10317  166A  3001               	movlw	1
 10318  166B                     u2995:
 10319  166B  35F0               	lslf	___lldiv@divisor,f
 10320  166C  0DF1               	rlf	___lldiv@divisor+1,f
 10321  166D  0DF2               	rlf	___lldiv@divisor+2,f
 10322  166E  0DF3               	rlf	___lldiv@divisor+3,f
 10323  166F  0B89               	decfsz	9,f
 10324  1670  2E6B               	goto	u2995
 10325  1671  3001               	movlw	1
 10326  1672  00F8               	movwf	??___lldiv
 10327  1673  0878               	movf	??___lldiv,w
 10328  1674  07FD               	addwf	___lldiv@counter,f
 10329  1675                     l2907:
 10330  1675  1FF3               	btfss	___lldiv@divisor+3,7
 10331  1676  2E78               	goto	u3001
 10332  1677  2E79               	goto	u3000
 10333  1678                     u3001:
 10334  1678  2E6A               	goto	l2905
 10335  1679                     u3000:
 10336  1679                     l2909:
 10337  1679  3001               	movlw	1
 10338  167A                     u3015:
 10339  167A  35F9               	lslf	___lldiv@quotient,f
 10340  167B  0DFA               	rlf	___lldiv@quotient+1,f
 10341  167C  0DFB               	rlf	___lldiv@quotient+2,f
 10342  167D  0DFC               	rlf	___lldiv@quotient+3,f
 10343  167E  0B89               	decfsz	9,f
 10344  167F  2E7A               	goto	u3015
 10345  1680                     l2911:
 10346  1680  0873               	movf	___lldiv@divisor+3,w
 10347  1681  0277               	subwf	___lldiv@dividend+3,w
 10348  1682  1D03               	skipz
 10349  1683  2E8E               	goto	u3025
 10350  1684  0872               	movf	___lldiv@divisor+2,w
 10351  1685  0276               	subwf	___lldiv@dividend+2,w
 10352  1686  1D03               	skipz
 10353  1687  2E8E               	goto	u3025
 10354  1688  0871               	movf	___lldiv@divisor+1,w
 10355  1689  0275               	subwf	___lldiv@dividend+1,w
 10356  168A  1D03               	skipz
 10357  168B  2E8E               	goto	u3025
 10358  168C  0870               	movf	___lldiv@divisor,w
 10359  168D  0274               	subwf	___lldiv@dividend,w
 10360  168E                     u3025:
 10361  168E  1C03               	skipc
 10362  168F  2E91               	goto	u3021
 10363  1690  2E92               	goto	u3020
 10364  1691                     u3021:
 10365  1691  2E9B               	goto	l2917
 10366  1692                     u3020:
 10367  1692                     l2913:
 10368  1692  0870               	movf	___lldiv@divisor,w
 10369  1693  02F4               	subwf	___lldiv@dividend,f
 10370  1694  0871               	movf	___lldiv@divisor+1,w
 10371  1695  3BF5               	subwfb	___lldiv@dividend+1,f
 10372  1696  0872               	movf	___lldiv@divisor+2,w
 10373  1697  3BF6               	subwfb	___lldiv@dividend+2,f
 10374  1698  0873               	movf	___lldiv@divisor+3,w
 10375  1699  3BF7               	subwfb	___lldiv@dividend+3,f
 10376  169A                     l2915:
 10377  169A  1479               	bsf	___lldiv@quotient,0
 10378  169B                     l2917:
 10379  169B  3001               	movlw	1
 10380  169C                     u3035:
 10381  169C  36F3               	lsrf	___lldiv@divisor+3,f
 10382  169D  0CF2               	rrf	___lldiv@divisor+2,f
 10383  169E  0CF1               	rrf	___lldiv@divisor+1,f
 10384  169F  0CF0               	rrf	___lldiv@divisor,f
 10385  16A0  0B89               	decfsz	9,f
 10386  16A1  2E9C               	goto	u3035
 10387  16A2                     l2919:
 10388  16A2  3001               	movlw	1
 10389  16A3  02FD               	subwf	___lldiv@counter,f
 10390  16A4  1D03               	btfss	3,2
 10391  16A5  2EA7               	goto	u3041
 10392  16A6  2EA8               	goto	u3040
 10393  16A7                     u3041:
 10394  16A7  2E79               	goto	l2909
 10395  16A8                     u3040:
 10396  16A8                     l2921:
 10397  16A8  087C               	movf	___lldiv@quotient+3,w
 10398  16A9  00F3               	movwf	?___lldiv+3
 10399  16AA  087B               	movf	___lldiv@quotient+2,w
 10400  16AB  00F2               	movwf	?___lldiv+2
 10401  16AC  087A               	movf	___lldiv@quotient+1,w
 10402  16AD  00F1               	movwf	?___lldiv+1
 10403  16AE  0879               	movf	___lldiv@quotient,w
 10404  16AF  00F0               	movwf	?___lldiv
 10405  16B0                     l539:
 10406  16B0  0008               	return
 10407  16B1                     __end_of___lldiv:
 10408                           
 10409                           	psect	text42
 10410  058E                     __ptext42:	
 10411 ;; *************** function ___flmul *****************
 10412 ;; Defined at:
 10413 ;;		line 8 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\sprcmul.c"
 10414 ;; Parameters:    Size  Location     Type
 10415 ;;  b               4   26[BANK0 ] unsigned long 
 10416 ;;  a               4   30[BANK0 ] unsigned long 
 10417 ;; Auto vars:     Size  Location     Type
 10418 ;;  prod            4   46[BANK0 ] struct .
 10419 ;;  grs             4   40[BANK0 ] unsigned long 
 10420 ;;  temp            2   50[BANK0 ] struct .
 10421 ;;  bexp            1   45[BANK0 ] unsigned char 
 10422 ;;  aexp            1   44[BANK0 ] unsigned char 
 10423 ;;  sign            1   39[BANK0 ] unsigned char 
 10424 ;; Return value:  Size  Location     Type
 10425 ;;                  4   26[BANK0 ] unsigned char 
 10426 ;; Registers used:
 10427 ;;		wreg, status,2, status,0, pclath, cstack
 10428 ;; Tracked objects:
 10429 ;;		On entry : 0/0
 10430 ;;		On exit  : 0/0
 10431 ;;		Unchanged: 0/0
 10432 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 10433 ;;      Params:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10434 ;;      Locals:         0      13       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10435 ;;      Temps:          0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10436 ;;      Totals:         0      26       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10437 ;;Total ram usage:       26 bytes
 10438 ;; Hardware stack levels used: 1
 10439 ;; Hardware stack levels required when called: 1
 10440 ;; This function calls:
 10441 ;;		__Umul8_16
 10442 ;; This function is called by:
 10443 ;;		_calc_percentage
 10444 ;; This function uses a non-reentrant model
 10445 ;;
 10446                           
 10447                           
 10448                           ;psect for function ___flmul
 10449  058E                     ___flmul:
 10450  058E                     l3399:	
 10451                           ;incstack = 0
 10452                           ; Regs used in ___flmul: [wreg+status,2+status,0+pclath+cstack]
 10453                           
 10454  058E  0020               	movlb	0	; select bank0
 10455  058F  083D               	movf	___flmul@b+3,w
 10456  0590  3980               	andlw	128
 10457  0591  00C2               	movwf	??___flmul
 10458  0592  0842               	movf	??___flmul,w
 10459  0593  00C7               	movwf	___flmul@sign
 10460  0594                     l3401:
 10461  0594  353D               	lslf	___flmul@b+3,w
 10462  0595  00C2               	movwf	??___flmul
 10463  0596  0842               	movf	??___flmul,w
 10464  0597  00CD               	movwf	___flmul@bexp
 10465  0598                     l3403:
 10466  0598  1FBC               	btfss	___flmul@b+2,7
 10467  0599  2D9B               	goto	u3741
 10468  059A  2D9C               	goto	u3740
 10469  059B                     u3741:
 10470  059B  2D9D               	goto	l3407
 10471  059C                     u3740:
 10472  059C                     l3405:
 10473  059C  144D               	bsf	___flmul@bexp,0
 10474  059D                     l3407:
 10475  059D  084D               	movf	___flmul@bexp,w
 10476  059E  1903               	btfsc	3,2
 10477  059F  2DA1               	goto	u3751
 10478  05A0  2DA2               	goto	u3750
 10479  05A1                     u3751:
 10480  05A1  2DB1               	goto	l3415
 10481  05A2                     u3750:
 10482  05A2                     l3409:
 10483  05A2  0A4D               	incf	___flmul@bexp,w
 10484  05A3  1D03               	btfss	3,2
 10485  05A4  2DA6               	goto	u3761
 10486  05A5  2DA7               	goto	u3760
 10487  05A6                     u3761:
 10488  05A6  2DAF               	goto	l3413
 10489  05A7                     u3760:
 10490  05A7                     l3411:
 10491  05A7  3000               	movlw	0
 10492  05A8  00BD               	movwf	___flmul@b+3
 10493  05A9  3000               	movlw	0
 10494  05AA  00BC               	movwf	___flmul@b+2
 10495  05AB  3000               	movlw	0
 10496  05AC  00BB               	movwf	___flmul@b+1
 10497  05AD  3000               	movlw	0
 10498  05AE  00BA               	movwf	___flmul@b
 10499  05AF                     l3413:
 10500  05AF  17BC               	bsf	___flmul@b+2,7
 10501  05B0  2DB9               	goto	l3417
 10502  05B1                     l3415:
 10503  05B1  3000               	movlw	0
 10504  05B2  00BD               	movwf	___flmul@b+3
 10505  05B3  3000               	movlw	0
 10506  05B4  00BC               	movwf	___flmul@b+2
 10507  05B5  3000               	movlw	0
 10508  05B6  00BB               	movwf	___flmul@b+1
 10509  05B7  3000               	movlw	0
 10510  05B8  00BA               	movwf	___flmul@b
 10511  05B9                     l3417:
 10512  05B9  0841               	movf	___flmul@a+3,w
 10513  05BA  3980               	andlw	128
 10514  05BB  00C2               	movwf	??___flmul
 10515  05BC  0842               	movf	??___flmul,w
 10516  05BD  06C7               	xorwf	___flmul@sign,f
 10517  05BE                     l3419:
 10518  05BE  3541               	lslf	___flmul@a+3,w
 10519  05BF  00C2               	movwf	??___flmul
 10520  05C0  0842               	movf	??___flmul,w
 10521  05C1  00CC               	movwf	___flmul@aexp
 10522  05C2                     l3421:
 10523  05C2  1FC0               	btfss	___flmul@a+2,7
 10524  05C3  2DC5               	goto	u3771
 10525  05C4  2DC6               	goto	u3770
 10526  05C5                     u3771:
 10527  05C5  2DC7               	goto	l3425
 10528  05C6                     u3770:
 10529  05C6                     l3423:
 10530  05C6  144C               	bsf	___flmul@aexp,0
 10531  05C7                     l3425:
 10532  05C7  084C               	movf	___flmul@aexp,w
 10533  05C8  1903               	btfsc	3,2
 10534  05C9  2DCB               	goto	u3781
 10535  05CA  2DCC               	goto	u3780
 10536  05CB                     u3781:
 10537  05CB  2DDB               	goto	l3433
 10538  05CC                     u3780:
 10539  05CC                     l3427:
 10540  05CC  0A4C               	incf	___flmul@aexp,w
 10541  05CD  1D03               	btfss	3,2
 10542  05CE  2DD0               	goto	u3791
 10543  05CF  2DD1               	goto	u3790
 10544  05D0                     u3791:
 10545  05D0  2DD9               	goto	l3431
 10546  05D1                     u3790:
 10547  05D1                     l3429:
 10548  05D1  3000               	movlw	0
 10549  05D2  00C1               	movwf	___flmul@a+3
 10550  05D3  3000               	movlw	0
 10551  05D4  00C0               	movwf	___flmul@a+2
 10552  05D5  3000               	movlw	0
 10553  05D6  00BF               	movwf	___flmul@a+1
 10554  05D7  3000               	movlw	0
 10555  05D8  00BE               	movwf	___flmul@a
 10556  05D9                     l3431:
 10557  05D9  17C0               	bsf	___flmul@a+2,7
 10558  05DA  2DE3               	goto	l3435
 10559  05DB                     l3433:
 10560  05DB  3000               	movlw	0
 10561  05DC  00C1               	movwf	___flmul@a+3
 10562  05DD  3000               	movlw	0
 10563  05DE  00C0               	movwf	___flmul@a+2
 10564  05DF  3000               	movlw	0
 10565  05E0  00BF               	movwf	___flmul@a+1
 10566  05E1  3000               	movlw	0
 10567  05E2  00BE               	movwf	___flmul@a
 10568  05E3                     l3435:
 10569  05E3  084C               	movf	___flmul@aexp,w
 10570  05E4  1903               	btfsc	3,2
 10571  05E5  2DE7               	goto	u3801
 10572  05E6  2DE8               	goto	u3800
 10573  05E7                     u3801:
 10574  05E7  2DED               	goto	l3439
 10575  05E8                     u3800:
 10576  05E8                     l3437:
 10577  05E8  084D               	movf	___flmul@bexp,w
 10578  05E9  1D03               	btfss	3,2
 10579  05EA  2DEC               	goto	u3811
 10580  05EB  2DED               	goto	u3810
 10581  05EC                     u3811:
 10582  05EC  2DF6               	goto	l3443
 10583  05ED                     u3810:
 10584  05ED                     l3439:
 10585  05ED  3000               	movlw	0
 10586  05EE  00BD               	movwf	?___flmul+3
 10587  05EF  3000               	movlw	0
 10588  05F0  00BC               	movwf	?___flmul+2
 10589  05F1  3000               	movlw	0
 10590  05F2  00BB               	movwf	?___flmul+1
 10591  05F3  3000               	movlw	0
 10592  05F4  00BA               	movwf	?___flmul
 10593  05F5  2FE4               	goto	l900
 10594  05F6                     l3443:
 10595  05F6  083A               	movf	___flmul@b,w
 10596  05F7  00C2               	movwf	??___flmul
 10597  05F8  0842               	movf	??___flmul,w
 10598  05F9  00F0               	movwf	__Umul8_16@multiplicand
 10599  05FA  0840               	movf	___flmul@a+2,w
 10600  05FB  3193  23B7  3185   	fcall	__Umul8_16
 10601  05FE  0871               	movf	?__Umul8_16+1,w
 10602  05FF  0020               	movlb	0	; select bank0
 10603  0600  00D3               	movwf	___flmul@temp+1
 10604  0601  0870               	movf	?__Umul8_16,w
 10605  0602  00D2               	movwf	___flmul@temp
 10606  0603                     l3445:
 10607  0603  0852               	movf	___flmul@temp,w
 10608  0604  00C2               	movwf	??___flmul
 10609  0605  01C3               	clrf	??___flmul+1
 10610  0606  01C4               	clrf	??___flmul+2
 10611  0607  01C5               	clrf	??___flmul+3
 10612  0608  0845               	movf	??___flmul+3,w
 10613  0609  00CB               	movwf	___flmul@grs+3
 10614  060A  0844               	movf	??___flmul+2,w
 10615  060B  00CA               	movwf	___flmul@grs+2
 10616  060C  0843               	movf	??___flmul+1,w
 10617  060D  00C9               	movwf	___flmul@grs+1
 10618  060E  0842               	movf	??___flmul,w
 10619  060F  00C8               	movwf	___flmul@grs
 10620  0610                     l3447:
 10621  0610  0853               	movf	___flmul@temp+1,w
 10622  0611  00C2               	movwf	??___flmul
 10623  0612  01C3               	clrf	??___flmul+1
 10624  0613  01C4               	clrf	??___flmul+2
 10625  0614  01C5               	clrf	??___flmul+3
 10626  0615  0845               	movf	??___flmul+3,w
 10627  0616  00D1               	movwf	___flmul@prod+3
 10628  0617  0844               	movf	??___flmul+2,w
 10629  0618  00D0               	movwf	___flmul@prod+2
 10630  0619  0843               	movf	??___flmul+1,w
 10631  061A  00CF               	movwf	___flmul@prod+1
 10632  061B  0842               	movf	??___flmul,w
 10633  061C  00CE               	movwf	___flmul@prod
 10634  061D  083B               	movf	___flmul@b+1,w
 10635  061E  00C2               	movwf	??___flmul
 10636  061F  0842               	movf	??___flmul,w
 10637  0620  00F0               	movwf	__Umul8_16@multiplicand
 10638  0621  083F               	movf	___flmul@a+1,w
 10639  0622  3193  23B7  3185   	fcall	__Umul8_16
 10640  0625  0871               	movf	?__Umul8_16+1,w
 10641  0626  0020               	movlb	0	; select bank0
 10642  0627  00D3               	movwf	___flmul@temp+1
 10643  0628  0870               	movf	?__Umul8_16,w
 10644  0629  00D2               	movwf	___flmul@temp
 10645  062A                     l3449:
 10646  062A  0852               	movf	___flmul@temp,w
 10647  062B  00C2               	movwf	??___flmul
 10648  062C  01C3               	clrf	??___flmul+1
 10649  062D  01C4               	clrf	??___flmul+2
 10650  062E  01C5               	clrf	??___flmul+3
 10651  062F  0842               	movf	??___flmul,w
 10652  0630  07C8               	addwf	___flmul@grs,f
 10653  0631  0843               	movf	??___flmul+1,w
 10654  0632  3DC9               	addwfc	___flmul@grs+1,f
 10655  0633  0844               	movf	??___flmul+2,w
 10656  0634  3DCA               	addwfc	___flmul@grs+2,f
 10657  0635  0845               	movf	??___flmul+3,w
 10658  0636  3DCB               	addwfc	___flmul@grs+3,f
 10659  0637                     l3451:
 10660  0637  0853               	movf	___flmul@temp+1,w
 10661  0638  00C2               	movwf	??___flmul
 10662  0639  01C3               	clrf	??___flmul+1
 10663  063A  01C4               	clrf	??___flmul+2
 10664  063B  01C5               	clrf	??___flmul+3
 10665  063C  0842               	movf	??___flmul,w
 10666  063D  07CE               	addwf	___flmul@prod,f
 10667  063E  0843               	movf	??___flmul+1,w
 10668  063F  3DCF               	addwfc	___flmul@prod+1,f
 10669  0640  0844               	movf	??___flmul+2,w
 10670  0641  3DD0               	addwfc	___flmul@prod+2,f
 10671  0642  0845               	movf	??___flmul+3,w
 10672  0643  3DD1               	addwfc	___flmul@prod+3,f
 10673  0644  083C               	movf	___flmul@b+2,w
 10674  0645  00C2               	movwf	??___flmul
 10675  0646  0842               	movf	??___flmul,w
 10676  0647  00F0               	movwf	__Umul8_16@multiplicand
 10677  0648  083E               	movf	___flmul@a,w
 10678  0649  3193  23B7  3185   	fcall	__Umul8_16
 10679  064C  0871               	movf	?__Umul8_16+1,w
 10680  064D  0020               	movlb	0	; select bank0
 10681  064E  00D3               	movwf	___flmul@temp+1
 10682  064F  0870               	movf	?__Umul8_16,w
 10683  0650  00D2               	movwf	___flmul@temp
 10684  0651                     l3453:
 10685  0651  0852               	movf	___flmul@temp,w
 10686  0652  00C2               	movwf	??___flmul
 10687  0653  01C3               	clrf	??___flmul+1
 10688  0654  01C4               	clrf	??___flmul+2
 10689  0655  01C5               	clrf	??___flmul+3
 10690  0656  0842               	movf	??___flmul,w
 10691  0657  07C8               	addwf	___flmul@grs,f
 10692  0658  0843               	movf	??___flmul+1,w
 10693  0659  3DC9               	addwfc	___flmul@grs+1,f
 10694  065A  0844               	movf	??___flmul+2,w
 10695  065B  3DCA               	addwfc	___flmul@grs+2,f
 10696  065C  0845               	movf	??___flmul+3,w
 10697  065D  3DCB               	addwfc	___flmul@grs+3,f
 10698  065E                     l3455:
 10699  065E  0853               	movf	___flmul@temp+1,w
 10700  065F  00C2               	movwf	??___flmul
 10701  0660  01C3               	clrf	??___flmul+1
 10702  0661  01C4               	clrf	??___flmul+2
 10703  0662  01C5               	clrf	??___flmul+3
 10704  0663  0842               	movf	??___flmul,w
 10705  0664  07CE               	addwf	___flmul@prod,f
 10706  0665  0843               	movf	??___flmul+1,w
 10707  0666  3DCF               	addwfc	___flmul@prod+1,f
 10708  0667  0844               	movf	??___flmul+2,w
 10709  0668  3DD0               	addwfc	___flmul@prod+2,f
 10710  0669  0845               	movf	??___flmul+3,w
 10711  066A  3DD1               	addwfc	___flmul@prod+3,f
 10712  066B                     l3457:
 10713  066B  3008               	movlw	8
 10714  066C                     u3825:
 10715  066C  35C8               	lslf	___flmul@grs,f
 10716  066D  0DC9               	rlf	___flmul@grs+1,f
 10717  066E  0DCA               	rlf	___flmul@grs+2,f
 10718  066F  0DCB               	rlf	___flmul@grs+3,f
 10719  0670  0B89               	decfsz	9,f
 10720  0671  2E6C               	goto	u3825
 10721  0672                     l3459:
 10722  0672  083B               	movf	___flmul@b+1,w
 10723  0673  00C2               	movwf	??___flmul
 10724  0674  0842               	movf	??___flmul,w
 10725  0675  00F0               	movwf	__Umul8_16@multiplicand
 10726  0676  083E               	movf	___flmul@a,w
 10727  0677  3193  23B7  3185   	fcall	__Umul8_16
 10728  067A  0871               	movf	?__Umul8_16+1,w
 10729  067B  0020               	movlb	0	; select bank0
 10730  067C  00D3               	movwf	___flmul@temp+1
 10731  067D  0870               	movf	?__Umul8_16,w
 10732  067E  00D2               	movwf	___flmul@temp
 10733  067F                     l3461:
 10734  067F  0852               	movf	___flmul@temp,w
 10735  0680  07C8               	addwf	___flmul@grs,f
 10736  0681  0853               	movf	___flmul@temp+1,w
 10737  0682  3DC9               	addwfc	___flmul@grs+1,f
 10738  0683  3000               	movlw	0
 10739  0684  3DCA               	addwfc	___flmul@grs+2,f
 10740  0685  3DCB               	addwfc	___flmul@grs+3,f
 10741  0686                     l3463:
 10742  0686  083A               	movf	___flmul@b,w
 10743  0687  00C2               	movwf	??___flmul
 10744  0688  0842               	movf	??___flmul,w
 10745  0689  00F0               	movwf	__Umul8_16@multiplicand
 10746  068A  083F               	movf	___flmul@a+1,w
 10747  068B  3193  23B7  3185   	fcall	__Umul8_16
 10748  068E  0871               	movf	?__Umul8_16+1,w
 10749  068F  0020               	movlb	0	; select bank0
 10750  0690  00D3               	movwf	___flmul@temp+1
 10751  0691  0870               	movf	?__Umul8_16,w
 10752  0692  00D2               	movwf	___flmul@temp
 10753  0693                     l3465:
 10754  0693  0852               	movf	___flmul@temp,w
 10755  0694  07C8               	addwf	___flmul@grs,f
 10756  0695  0853               	movf	___flmul@temp+1,w
 10757  0696  3DC9               	addwfc	___flmul@grs+1,f
 10758  0697  3000               	movlw	0
 10759  0698  3DCA               	addwfc	___flmul@grs+2,f
 10760  0699  3DCB               	addwfc	___flmul@grs+3,f
 10761  069A                     l3467:
 10762  069A  3008               	movlw	8
 10763  069B                     u3835:
 10764  069B  35C8               	lslf	___flmul@grs,f
 10765  069C  0DC9               	rlf	___flmul@grs+1,f
 10766  069D  0DCA               	rlf	___flmul@grs+2,f
 10767  069E  0DCB               	rlf	___flmul@grs+3,f
 10768  069F  0B89               	decfsz	9,f
 10769  06A0  2E9B               	goto	u3835
 10770  06A1  083A               	movf	___flmul@b,w
 10771  06A2  00C2               	movwf	??___flmul
 10772  06A3  0842               	movf	??___flmul,w
 10773  06A4  00F0               	movwf	__Umul8_16@multiplicand
 10774  06A5  083E               	movf	___flmul@a,w
 10775  06A6  3193  23B7  3185   	fcall	__Umul8_16
 10776  06A9  0871               	movf	?__Umul8_16+1,w
 10777  06AA  0020               	movlb	0	; select bank0
 10778  06AB  00D3               	movwf	___flmul@temp+1
 10779  06AC  0870               	movf	?__Umul8_16,w
 10780  06AD  00D2               	movwf	___flmul@temp
 10781  06AE                     l3469:
 10782  06AE  0852               	movf	___flmul@temp,w
 10783  06AF  07C8               	addwf	___flmul@grs,f
 10784  06B0  0853               	movf	___flmul@temp+1,w
 10785  06B1  3DC9               	addwfc	___flmul@grs+1,f
 10786  06B2  3000               	movlw	0
 10787  06B3  3DCA               	addwfc	___flmul@grs+2,f
 10788  06B4  3DCB               	addwfc	___flmul@grs+3,f
 10789  06B5                     l3471:
 10790  06B5  083B               	movf	___flmul@b+1,w
 10791  06B6  00C2               	movwf	??___flmul
 10792  06B7  0842               	movf	??___flmul,w
 10793  06B8  00F0               	movwf	__Umul8_16@multiplicand
 10794  06B9  0840               	movf	___flmul@a+2,w
 10795  06BA  3193  23B7  3185   	fcall	__Umul8_16
 10796  06BD  0871               	movf	?__Umul8_16+1,w
 10797  06BE  0020               	movlb	0	; select bank0
 10798  06BF  00D3               	movwf	___flmul@temp+1
 10799  06C0  0870               	movf	?__Umul8_16,w
 10800  06C1  00D2               	movwf	___flmul@temp
 10801  06C2  0852               	movf	___flmul@temp,w
 10802  06C3  07CE               	addwf	___flmul@prod,f
 10803  06C4  0853               	movf	___flmul@temp+1,w
 10804  06C5  3DCF               	addwfc	___flmul@prod+1,f
 10805  06C6  3000               	movlw	0
 10806  06C7  3DD0               	addwfc	___flmul@prod+2,f
 10807  06C8  3DD1               	addwfc	___flmul@prod+3,f
 10808  06C9                     l3473:
 10809  06C9  083C               	movf	___flmul@b+2,w
 10810  06CA  00C2               	movwf	??___flmul
 10811  06CB  0842               	movf	??___flmul,w
 10812  06CC  00F0               	movwf	__Umul8_16@multiplicand
 10813  06CD  083F               	movf	___flmul@a+1,w
 10814  06CE  3193  23B7  3185   	fcall	__Umul8_16
 10815  06D1  0871               	movf	?__Umul8_16+1,w
 10816  06D2  0020               	movlb	0	; select bank0
 10817  06D3  00D3               	movwf	___flmul@temp+1
 10818  06D4  0870               	movf	?__Umul8_16,w
 10819  06D5  00D2               	movwf	___flmul@temp
 10820  06D6                     l3475:
 10821  06D6  0852               	movf	___flmul@temp,w
 10822  06D7  07CE               	addwf	___flmul@prod,f
 10823  06D8  0853               	movf	___flmul@temp+1,w
 10824  06D9  3DCF               	addwfc	___flmul@prod+1,f
 10825  06DA  3000               	movlw	0
 10826  06DB  3DD0               	addwfc	___flmul@prod+2,f
 10827  06DC  3DD1               	addwfc	___flmul@prod+3,f
 10828  06DD  083C               	movf	___flmul@b+2,w
 10829  06DE  00C2               	movwf	??___flmul
 10830  06DF  0842               	movf	??___flmul,w
 10831  06E0  00F0               	movwf	__Umul8_16@multiplicand
 10832  06E1  0840               	movf	___flmul@a+2,w
 10833  06E2  3193  23B7  3185   	fcall	__Umul8_16
 10834  06E5  0871               	movf	?__Umul8_16+1,w
 10835  06E6  0020               	movlb	0	; select bank0
 10836  06E7  00D3               	movwf	___flmul@temp+1
 10837  06E8  0870               	movf	?__Umul8_16,w
 10838  06E9  00D2               	movwf	___flmul@temp
 10839  06EA                     l3477:
 10840  06EA  0852               	movf	___flmul@temp,w
 10841  06EB  00C2               	movwf	??___flmul
 10842  06EC  0853               	movf	___flmul@temp+1,w
 10843  06ED  00C3               	movwf	??___flmul+1
 10844  06EE  01C4               	clrf	??___flmul+2
 10845  06EF  01C5               	clrf	??___flmul+3
 10846  06F0  3008               	movlw	8
 10847  06F1                     u3845:
 10848  06F1  35C2               	lslf	??___flmul,f
 10849  06F2  0DC3               	rlf	??___flmul+1,f
 10850  06F3  0DC4               	rlf	??___flmul+2,f
 10851  06F4  0DC5               	rlf	??___flmul+3,f
 10852  06F5                     u3840:
 10853  06F5  0B89               	decfsz	9,f
 10854  06F6  2EF1               	goto	u3845
 10855  06F7  0842               	movf	??___flmul,w
 10856  06F8  07CE               	addwf	___flmul@prod,f
 10857  06F9  0843               	movf	??___flmul+1,w
 10858  06FA  3DCF               	addwfc	___flmul@prod+1,f
 10859  06FB  0844               	movf	??___flmul+2,w
 10860  06FC  3DD0               	addwfc	___flmul@prod+2,f
 10861  06FD  0845               	movf	??___flmul+3,w
 10862  06FE  3DD1               	addwfc	___flmul@prod+3,f
 10863  06FF                     l3479:
 10864  06FF  0848               	movf	___flmul@grs,w
 10865  0700  00C2               	movwf	??___flmul
 10866  0701  0849               	movf	___flmul@grs+1,w
 10867  0702  00C3               	movwf	??___flmul+1
 10868  0703  084A               	movf	___flmul@grs+2,w
 10869  0704  00C4               	movwf	??___flmul+2
 10870  0705  084B               	movf	___flmul@grs+3,w
 10871  0706  00C5               	movwf	??___flmul+3
 10872  0707  3018               	movlw	24
 10873  0708                     u3855:
 10874  0708  36C5               	lsrf	??___flmul+3,f
 10875  0709  0CC4               	rrf	??___flmul+2,f
 10876  070A  0CC3               	rrf	??___flmul+1,f
 10877  070B  0CC2               	rrf	??___flmul,f
 10878  070C                     u3850:
 10879  070C  0B89               	decfsz	9,f
 10880  070D  2F08               	goto	u3855
 10881  070E  0842               	movf	??___flmul,w
 10882  070F  07CE               	addwf	___flmul@prod,f
 10883  0710  0843               	movf	??___flmul+1,w
 10884  0711  3DCF               	addwfc	___flmul@prod+1,f
 10885  0712  0844               	movf	??___flmul+2,w
 10886  0713  3DD0               	addwfc	___flmul@prod+2,f
 10887  0714  0845               	movf	??___flmul+3,w
 10888  0715  3DD1               	addwfc	___flmul@prod+3,f
 10889  0716                     l3481:
 10890  0716  3008               	movlw	8
 10891  0717                     u3865:
 10892  0717  35C8               	lslf	___flmul@grs,f
 10893  0718  0DC9               	rlf	___flmul@grs+1,f
 10894  0719  0DCA               	rlf	___flmul@grs+2,f
 10895  071A  0DCB               	rlf	___flmul@grs+3,f
 10896  071B  0B89               	decfsz	9,f
 10897  071C  2F17               	goto	u3865
 10898  071D                     l3483:
 10899  071D  084D               	movf	___flmul@bexp,w
 10900  071E  074C               	addwf	___flmul@aexp,w
 10901  071F  00C2               	movwf	??___flmul
 10902  0720  01C3               	clrf	??___flmul+1
 10903  0721  0DC3               	rlf	??___flmul+1,f
 10904  0722  0842               	movf	??___flmul,w
 10905  0723  3E82               	addlw	130
 10906  0724  00D2               	movwf	___flmul@temp
 10907  0725  30FF               	movlw	255
 10908  0726  3D43               	addwfc	??___flmul+1,w
 10909  0727  00D3               	movwf	___flmul@temp+1
 10910  0728  2F40               	goto	l3495
 10911  0729                     l3485:
 10912  0729  3001               	movlw	1
 10913  072A                     u3875:
 10914  072A  35CE               	lslf	___flmul@prod,f
 10915  072B  0DCF               	rlf	___flmul@prod+1,f
 10916  072C  0DD0               	rlf	___flmul@prod+2,f
 10917  072D  0DD1               	rlf	___flmul@prod+3,f
 10918  072E  0B89               	decfsz	9,f
 10919  072F  2F2A               	goto	u3875
 10920  0730                     l3487:
 10921  0730  1FCB               	btfss	___flmul@grs+3,7
 10922  0731  2F33               	goto	u3881
 10923  0732  2F34               	goto	u3880
 10924  0733                     u3881:
 10925  0733  2F35               	goto	l3491
 10926  0734                     u3880:
 10927  0734                     l3489:
 10928  0734  144E               	bsf	___flmul@prod,0
 10929  0735                     l3491:
 10930  0735  3001               	movlw	1
 10931  0736                     u3895:
 10932  0736  35C8               	lslf	___flmul@grs,f
 10933  0737  0DC9               	rlf	___flmul@grs+1,f
 10934  0738  0DCA               	rlf	___flmul@grs+2,f
 10935  0739  0DCB               	rlf	___flmul@grs+3,f
 10936  073A  0B89               	decfsz	9,f
 10937  073B  2F36               	goto	u3895
 10938  073C                     l3493:
 10939  073C  30FF               	movlw	255
 10940  073D  07D2               	addwf	___flmul@temp,f
 10941  073E  30FF               	movlw	255
 10942  073F  3DD3               	addwfc	___flmul@temp+1,f
 10943  0740                     l3495:
 10944  0740  1FD0               	btfss	___flmul@prod+2,7
 10945  0741  2F43               	goto	u3901
 10946  0742  2F44               	goto	u3900
 10947  0743                     u3901:
 10948  0743  2F29               	goto	l3485
 10949  0744                     u3900:
 10950  0744                     l3497:
 10951  0744  01CC               	clrf	___flmul@aexp
 10952  0745                     l3499:
 10953  0745  1FCB               	btfss	___flmul@grs+3,7
 10954  0746  2F48               	goto	u3911
 10955  0747  2F49               	goto	u3910
 10956  0748                     u3911:
 10957  0748  2F65               	goto	l3507
 10958  0749                     u3910:
 10959  0749                     l3501:
 10960  0749  30FF               	movlw	255
 10961  074A  0548               	andwf	___flmul@grs,w
 10962  074B  00C2               	movwf	??___flmul
 10963  074C  30FF               	movlw	255
 10964  074D  0549               	andwf	___flmul@grs+1,w
 10965  074E  00C3               	movwf	??___flmul+1
 10966  074F  30FF               	movlw	255
 10967  0750  054A               	andwf	___flmul@grs+2,w
 10968  0751  00C4               	movwf	??___flmul+2
 10969  0752  307F               	movlw	127
 10970  0753  054B               	andwf	___flmul@grs+3,w
 10971  0754  00C5               	movwf	??___flmul+3
 10972  0755  0845               	movf	??___flmul+3,w
 10973  0756  0444               	iorwf	??___flmul+2,w
 10974  0757  0443               	iorwf	??___flmul+1,w
 10975  0758  0442               	iorwf	??___flmul,w
 10976  0759  1903               	skipnz
 10977  075A  2F5C               	goto	u3921
 10978  075B  2F5D               	goto	u3920
 10979  075C                     u3921:
 10980  075C  2F60               	goto	l906
 10981  075D                     u3920:
 10982  075D                     l3503:
 10983  075D  01CC               	clrf	___flmul@aexp
 10984  075E  0ACC               	incf	___flmul@aexp,f
 10985  075F  2F65               	goto	l3507
 10986  0760                     l906:
 10987  0760  1C4E               	btfss	___flmul@prod,0
 10988  0761  2F63               	goto	u3931
 10989  0762  2F64               	goto	u3930
 10990  0763                     u3931:
 10991  0763  2F65               	goto	l3507
 10992  0764                     u3930:
 10993  0764  2F5D               	goto	l3503
 10994  0765                     l3507:
 10995  0765  084C               	movf	___flmul@aexp,w
 10996  0766  1903               	btfsc	3,2
 10997  0767  2F69               	goto	u3941
 10998  0768  2F6A               	goto	u3940
 10999  0769                     u3941:
 11000  0769  2F92               	goto	l3517
 11001  076A                     u3940:
 11002  076A                     l3509:
 11003  076A  3001               	movlw	1
 11004  076B  07CE               	addwf	___flmul@prod,f
 11005  076C  3000               	movlw	0
 11006  076D  3DCF               	addwfc	___flmul@prod+1,f
 11007  076E  3000               	movlw	0
 11008  076F  3DD0               	addwfc	___flmul@prod+2,f
 11009  0770  3000               	movlw	0
 11010  0771  3DD1               	addwfc	___flmul@prod+3,f
 11011  0772                     l3511:
 11012  0772  1C51               	btfss	___flmul@prod+3,0
 11013  0773  2F75               	goto	u3951
 11014  0774  2F76               	goto	u3950
 11015  0775                     u3951:
 11016  0775  2F92               	goto	l3517
 11017  0776                     u3950:
 11018  0776                     l3513:
 11019  0776  084E               	movf	___flmul@prod,w
 11020  0777  00C2               	movwf	??___flmul
 11021  0778  084F               	movf	___flmul@prod+1,w
 11022  0779  00C3               	movwf	??___flmul+1
 11023  077A  0850               	movf	___flmul@prod+2,w
 11024  077B  00C4               	movwf	??___flmul+2
 11025  077C  0851               	movf	___flmul@prod+3,w
 11026  077D  00C5               	movwf	??___flmul+3
 11027  077E  3001               	movlw	1
 11028  077F  00C6               	movwf	??___flmul+4
 11029  0780                     u3965:
 11030  0780  37C5               	asrf	??___flmul+3,f
 11031  0781  0CC4               	rrf	??___flmul+2,f
 11032  0782  0CC3               	rrf	??___flmul+1,f
 11033  0783  0CC2               	rrf	??___flmul,f
 11034  0784                     u3960:
 11035  0784  0BC6               	decfsz	??___flmul+4,f
 11036  0785  2F80               	goto	u3965
 11037  0786  0845               	movf	??___flmul+3,w
 11038  0787  00D1               	movwf	___flmul@prod+3
 11039  0788  0844               	movf	??___flmul+2,w
 11040  0789  00D0               	movwf	___flmul@prod+2
 11041  078A  0843               	movf	??___flmul+1,w
 11042  078B  00CF               	movwf	___flmul@prod+1
 11043  078C  0842               	movf	??___flmul,w
 11044  078D  00CE               	movwf	___flmul@prod
 11045  078E                     l3515:
 11046  078E  3001               	movlw	1
 11047  078F  07D2               	addwf	___flmul@temp,f
 11048  0790  3000               	movlw	0
 11049  0791  3DD3               	addwfc	___flmul@temp+1,f
 11050  0792                     l3517:
 11051  0792  0853               	movf	___flmul@temp+1,w
 11052  0793  3A80               	xorlw	128
 11053  0794  00C2               	movwf	??___flmul
 11054  0795  3080               	movlw	128
 11055  0796  0242               	subwf	??___flmul,w
 11056  0797  1D03               	skipz
 11057  0798  2F9B               	goto	u3975
 11058  0799  30FF               	movlw	255
 11059  079A  0252               	subwf	___flmul@temp,w
 11060  079B                     u3975:
 11061  079B  1C03               	skipc
 11062  079C  2F9E               	goto	u3971
 11063  079D  2F9F               	goto	u3970
 11064  079E                     u3971:
 11065  079E  2FA9               	goto	l3521
 11066  079F                     u3970:
 11067  079F                     l3519:
 11068  079F  307F               	movlw	127
 11069  07A0  0020               	movlb	0	; select bank0
 11070  07A1  00D1               	movwf	___flmul@prod+3
 11071  07A2  3080               	movlw	128
 11072  07A3  00D0               	movwf	___flmul@prod+2
 11073  07A4  3000               	movlw	0
 11074  07A5  00CF               	movwf	___flmul@prod+1
 11075  07A6  3000               	movlw	0
 11076  07A7  00CE               	movwf	___flmul@prod
 11077  07A8  2FD8               	goto	l912
 11078  07A9                     l3521:
 11079  07A9  0020               	movlb	0	; select bank0
 11080  07AA  0853               	movf	___flmul@temp+1,w
 11081  07AB  3A80               	xorlw	128
 11082  07AC  00C2               	movwf	??___flmul
 11083  07AD  3080               	movlw	128
 11084  07AE  0242               	subwf	??___flmul,w
 11085  07AF  1D03               	skipz
 11086  07B0  2FB3               	goto	u3985
 11087  07B1  3001               	movlw	1
 11088  07B2  0252               	subwf	___flmul@temp,w
 11089  07B3                     u3985:
 11090  07B3  1803               	skipnc
 11091  07B4  2FB6               	goto	u3981
 11092  07B5  2FB7               	goto	u3980
 11093  07B6                     u3981:
 11094  07B6  2FC2               	goto	l3527
 11095  07B7                     u3980:
 11096  07B7                     l3523:
 11097  07B7  3000               	movlw	0
 11098  07B8  0020               	movlb	0	; select bank0
 11099  07B9  00D1               	movwf	___flmul@prod+3
 11100  07BA  3000               	movlw	0
 11101  07BB  00D0               	movwf	___flmul@prod+2
 11102  07BC  3000               	movlw	0
 11103  07BD  00CF               	movwf	___flmul@prod+1
 11104  07BE  3000               	movlw	0
 11105  07BF  00CE               	movwf	___flmul@prod
 11106  07C0                     l3525:
 11107  07C0  01C7               	clrf	___flmul@sign
 11108  07C1  2FD8               	goto	l912
 11109  07C2                     l3527:
 11110  07C2  0020               	movlb	0	; select bank0
 11111  07C3  0852               	movf	___flmul@temp,w
 11112  07C4  00C2               	movwf	??___flmul
 11113  07C5  0842               	movf	??___flmul,w
 11114  07C6  00CD               	movwf	___flmul@bexp
 11115  07C7  30FF               	movlw	255
 11116  07C8  05CE               	andwf	___flmul@prod,f
 11117  07C9  30FF               	movlw	255
 11118  07CA  05CF               	andwf	___flmul@prod+1,f
 11119  07CB  307F               	movlw	127
 11120  07CC  05D0               	andwf	___flmul@prod+2,f
 11121  07CD  3000               	movlw	0
 11122  07CE  05D1               	andwf	___flmul@prod+3,f
 11123  07CF                     l3529:
 11124  07CF  1C4D               	btfss	___flmul@bexp,0
 11125  07D0  2FD2               	goto	u3991
 11126  07D1  2FD3               	goto	u3990
 11127  07D2                     u3991:
 11128  07D2  2FD4               	goto	l3533
 11129  07D3                     u3990:
 11130  07D3                     l3531:
 11131  07D3  17D0               	bsf	___flmul@prod+2,7
 11132  07D4                     l3533:
 11133  07D4  364D               	lsrf	___flmul@bexp,w
 11134  07D5  00C2               	movwf	??___flmul
 11135  07D6  0842               	movf	??___flmul,w
 11136  07D7  00D1               	movwf	___flmul@prod+3
 11137  07D8                     l912:
 11138  07D8  0847               	movf	___flmul@sign,w
 11139  07D9  00C2               	movwf	??___flmul
 11140  07DA  0842               	movf	??___flmul,w
 11141  07DB  04D1               	iorwf	___flmul@prod+3,f
 11142  07DC                     l3535:
 11143  07DC  0851               	movf	___flmul@prod+3,w
 11144  07DD  00BD               	movwf	?___flmul+3
 11145  07DE  0850               	movf	___flmul@prod+2,w
 11146  07DF  00BC               	movwf	?___flmul+2
 11147  07E0  084F               	movf	___flmul@prod+1,w
 11148  07E1  00BB               	movwf	?___flmul+1
 11149  07E2  084E               	movf	___flmul@prod,w
 11150  07E3  00BA               	movwf	?___flmul
 11151  07E4                     l900:
 11152  07E4  0008               	return
 11153  07E5                     __end_of___flmul:
 11154                           
 11155                           	psect	text43
 11156  13B7                     __ptext43:	
 11157 ;; *************** function __Umul8_16 *****************
 11158 ;; Defined at:
 11159 ;;		line 4 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\Umul8_16.c"
 11160 ;; Parameters:    Size  Location     Type
 11161 ;;  multiplier      1    wreg     unsigned char 
 11162 ;;  multiplicand    1    0[COMMON] unsigned char 
 11163 ;; Auto vars:     Size  Location     Type
 11164 ;;  multiplier      1    8[COMMON] unsigned char 
 11165 ;;  word_mpld       2    6[COMMON] unsigned int 
 11166 ;;  product         2    4[COMMON] unsigned int 
 11167 ;; Return value:  Size  Location     Type
 11168 ;;                  2    0[COMMON] unsigned int 
 11169 ;; Registers used:
 11170 ;;		wreg, status,2, status,0
 11171 ;; Tracked objects:
 11172 ;;		On entry : 0/0
 11173 ;;		On exit  : 0/0
 11174 ;;		Unchanged: 0/0
 11175 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 11176 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11177 ;;      Locals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11178 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11179 ;;      Totals:         9       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11180 ;;Total ram usage:        9 bytes
 11181 ;; Hardware stack levels used: 1
 11182 ;; This function calls:
 11183 ;;		Nothing
 11184 ;; This function is called by:
 11185 ;;		___flmul
 11186 ;; This function uses a non-reentrant model
 11187 ;;
 11188                           
 11189                           
 11190                           ;psect for function __Umul8_16
 11191  13B7                     __Umul8_16:
 11192                           
 11193                           ;incstack = 0
 11194                           ; Regs used in __Umul8_16: [wreg+status,2+status,0]
 11195                           ;__Umul8_16@multiplier stored from wreg
 11196  13B7  00F8               	movwf	__Umul8_16@multiplier
 11197  13B8                     l3101:
 11198  13B8  01F4               	clrf	__Umul8_16@product
 11199  13B9  01F5               	clrf	__Umul8_16@product+1
 11200  13BA                     l3103:
 11201  13BA  0870               	movf	__Umul8_16@multiplicand,w
 11202  13BB  00F2               	movwf	??__Umul8_16
 11203  13BC  01F3               	clrf	??__Umul8_16+1
 11204  13BD  0872               	movf	??__Umul8_16,w
 11205  13BE  00F6               	movwf	__Umul8_16@word_mpld
 11206  13BF  0873               	movf	??__Umul8_16+1,w
 11207  13C0  00F7               	movwf	__Umul8_16@word_mpld+1
 11208  13C1                     l3105:
 11209  13C1  1C78               	btfss	__Umul8_16@multiplier,0
 11210  13C2  2BC4               	goto	u3441
 11211  13C3  2BC5               	goto	u3440
 11212  13C4                     u3441:
 11213  13C4  2BC9               	goto	l919
 11214  13C5                     u3440:
 11215  13C5                     l3107:
 11216  13C5  0876               	movf	__Umul8_16@word_mpld,w
 11217  13C6  07F4               	addwf	__Umul8_16@product,f
 11218  13C7  0877               	movf	__Umul8_16@word_mpld+1,w
 11219  13C8  3DF5               	addwfc	__Umul8_16@product+1,f
 11220  13C9                     l919:
 11221  13C9  3001               	movlw	1
 11222  13CA                     u3455:
 11223  13CA  35F6               	lslf	__Umul8_16@word_mpld,f
 11224  13CB  0DF7               	rlf	__Umul8_16@word_mpld+1,f
 11225  13CC  0B89               	decfsz	9,f
 11226  13CD  2BCA               	goto	u3455
 11227  13CE  1003               	clrc
 11228  13CF  0CF8               	rrf	__Umul8_16@multiplier,f
 11229  13D0                     l3109:
 11230  13D0  0878               	movf	__Umul8_16@multiplier,w
 11231  13D1  1D03               	btfss	3,2
 11232  13D2  2BD4               	goto	u3461
 11233  13D3  2BD5               	goto	u3460
 11234  13D4                     u3461:
 11235  13D4  2BC1               	goto	l3105
 11236  13D5                     u3460:
 11237  13D5                     l3111:
 11238  13D5  0875               	movf	__Umul8_16@product+1,w
 11239  13D6  00F1               	movwf	?__Umul8_16+1
 11240  13D7  0874               	movf	__Umul8_16@product,w
 11241  13D8  00F0               	movwf	?__Umul8_16
 11242  13D9                     l921:
 11243  13D9  0008               	return
 11244  13DA                     __end_of__Umul8_16:
 11245                           
 11246                           	psect	text44
 11247  12BC                     __ptext44:	
 11248 ;; *************** function _SYSTEM_Initialize *****************
 11249 ;; Defined at:
 11250 ;;		line 50 in file "mcc_generated_files/mcc.c"
 11251 ;; Parameters:    Size  Location     Type
 11252 ;;		None
 11253 ;; Auto vars:     Size  Location     Type
 11254 ;;		None
 11255 ;; Return value:  Size  Location     Type
 11256 ;;                  1    wreg      void 
 11257 ;; Registers used:
 11258 ;;		wreg, status,2, status,0, pclath, cstack
 11259 ;; Tracked objects:
 11260 ;;		On entry : 0/0
 11261 ;;		On exit  : 0/0
 11262 ;;		Unchanged: 0/0
 11263 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 11264 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11265 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11266 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11267 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11268 ;;Total ram usage:        0 bytes
 11269 ;; Hardware stack levels used: 1
 11270 ;; Hardware stack levels required when called: 1
 11271 ;; This function calls:
 11272 ;;		_OSCILLATOR_Initialize
 11273 ;;		_PIN_MANAGER_Initialize
 11274 ;;		_WDT_Initialize
 11275 ;; This function is called by:
 11276 ;;		_main
 11277 ;; This function uses a non-reentrant model
 11278 ;;
 11279                           
 11280                           
 11281                           ;psect for function _SYSTEM_Initialize
 11282  12BC                     _SYSTEM_Initialize:
 11283  12BC                     l3539:	
 11284                           ;incstack = 0
 11285                           ; Regs used in _SYSTEM_Initialize: [wreg+status,2+status,0+pclath+cstack]
 11286                           
 11287                           
 11288                           ;mcc_generated_files/mcc.c: 53:     PIN_MANAGER_Initialize();
 11289  12BC  3193  2363  3192   	fcall	_PIN_MANAGER_Initialize
 11290                           
 11291                           ;mcc_generated_files/mcc.c: 54:     OSCILLATOR_Initialize();
 11292  12BF  3192  22AE  3192   	fcall	_OSCILLATOR_Initialize
 11293                           
 11294                           ;mcc_generated_files/mcc.c: 55:     WDT_Initialize();
 11295  12C2  3192  229E  3192   	fcall	_WDT_Initialize
 11296  12C5                     l51:
 11297  12C5  0008               	return
 11298  12C6                     __end_of_SYSTEM_Initialize:
 11299                           
 11300                           	psect	text45
 11301  129E                     __ptext45:	
 11302 ;; *************** function _WDT_Initialize *****************
 11303 ;; Defined at:
 11304 ;;		line 68 in file "mcc_generated_files/mcc.c"
 11305 ;; Parameters:    Size  Location     Type
 11306 ;;		None
 11307 ;; Auto vars:     Size  Location     Type
 11308 ;;		None
 11309 ;; Return value:  Size  Location     Type
 11310 ;;                  1    wreg      void 
 11311 ;; Registers used:
 11312 ;;		wreg
 11313 ;; Tracked objects:
 11314 ;;		On entry : 0/0
 11315 ;;		On exit  : 0/0
 11316 ;;		Unchanged: 0/0
 11317 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 11318 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11319 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11320 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11321 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11322 ;;Total ram usage:        0 bytes
 11323 ;; Hardware stack levels used: 1
 11324 ;; This function calls:
 11325 ;;		Nothing
 11326 ;; This function is called by:
 11327 ;;		_SYSTEM_Initialize
 11328 ;; This function uses a non-reentrant model
 11329 ;;
 11330                           
 11331                           
 11332                           ;psect for function _WDT_Initialize
 11333  129E                     _WDT_Initialize:
 11334  129E                     l3193:	
 11335                           ;incstack = 0
 11336                           ; Regs used in _WDT_Initialize: [wreg]
 11337                           
 11338                           
 11339                           ;mcc_generated_files/mcc.c: 71:     WDTCON = 0x16;
 11340  129E  3016               	movlw	22
 11341  129F  0021               	movlb	1	; select bank1
 11342  12A0  0097               	movwf	23	;volatile
 11343  12A1                     l57:
 11344  12A1  0008               	return
 11345  12A2                     __end_of_WDT_Initialize:
 11346                           
 11347                           	psect	text46
 11348  1363                     __ptext46:	
 11349 ;; *************** function _PIN_MANAGER_Initialize *****************
 11350 ;; Defined at:
 11351 ;;		line 55 in file "mcc_generated_files/pin_manager.c"
 11352 ;; Parameters:    Size  Location     Type
 11353 ;;		None
 11354 ;; Auto vars:     Size  Location     Type
 11355 ;;		None
 11356 ;; Return value:  Size  Location     Type
 11357 ;;                  1    wreg      void 
 11358 ;; Registers used:
 11359 ;;		wreg, status,2
 11360 ;; Tracked objects:
 11361 ;;		On entry : 0/0
 11362 ;;		On exit  : 0/0
 11363 ;;		Unchanged: 0/0
 11364 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 11365 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11366 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11367 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11368 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11369 ;;Total ram usage:        0 bytes
 11370 ;; Hardware stack levels used: 1
 11371 ;; This function calls:
 11372 ;;		Nothing
 11373 ;; This function is called by:
 11374 ;;		_SYSTEM_Initialize
 11375 ;; This function uses a non-reentrant model
 11376 ;;
 11377                           
 11378                           
 11379                           ;psect for function _PIN_MANAGER_Initialize
 11380  1363                     _PIN_MANAGER_Initialize:
 11381  1363                     l3171:	
 11382                           ;incstack = 0
 11383                           ; Regs used in _PIN_MANAGER_Initialize: [wreg+status,2]
 11384                           
 11385                           
 11386                           ;mcc_generated_files/pin_manager.c: 60:     LATE = 0x00;
 11387  1363  0022               	movlb	2	; select bank2
 11388  1364  0190               	clrf	16	;volatile
 11389                           
 11390                           ;mcc_generated_files/pin_manager.c: 61:     LATA = 0x00;
 11391  1365  018C               	clrf	12	;volatile
 11392                           
 11393                           ;mcc_generated_files/pin_manager.c: 62:     LATB = 0x00;
 11394  1366  018D               	clrf	13	;volatile
 11395                           
 11396                           ;mcc_generated_files/pin_manager.c: 63:     LATC = 0x00;
 11397  1367  018E               	clrf	14	;volatile
 11398  1368                     l3173:
 11399                           
 11400                           ;mcc_generated_files/pin_manager.c: 68:     TRISE = 0x08;
 11401  1368  3008               	movlw	8
 11402  1369  0021               	movlb	1	; select bank1
 11403  136A  0090               	movwf	16	;volatile
 11404  136B                     l3175:
 11405                           
 11406                           ;mcc_generated_files/pin_manager.c: 69:     TRISA = 0xFF;
 11407  136B  30FF               	movlw	255
 11408  136C  008C               	movwf	12	;volatile
 11409  136D                     l3177:
 11410                           
 11411                           ;mcc_generated_files/pin_manager.c: 70:     TRISB = 0xFF;
 11412  136D  30FF               	movlw	255
 11413  136E  008D               	movwf	13	;volatile
 11414  136F                     l3179:
 11415                           
 11416                           ;mcc_generated_files/pin_manager.c: 71:     TRISC = 0xFF;
 11417  136F  30FF               	movlw	255
 11418  1370  008E               	movwf	14	;volatile
 11419  1371                     l3181:
 11420                           
 11421                           ;mcc_generated_files/pin_manager.c: 76:     ANSELB = 0xFE;
 11422  1371  30FE               	movlw	254
 11423  1372  0023               	movlb	3	; select bank3
 11424  1373  008D               	movwf	13	;volatile
 11425  1374                     l3183:
 11426                           
 11427                           ;mcc_generated_files/pin_manager.c: 77:     ANSELA = 0x1F;
 11428  1374  301F               	movlw	31
 11429  1375  008C               	movwf	12	;volatile
 11430                           
 11431                           ;mcc_generated_files/pin_manager.c: 82:     WPUE = 0x00;
 11432  1376  0024               	movlb	4	; select bank4
 11433  1377  0190               	clrf	16	;volatile
 11434                           
 11435                           ;mcc_generated_files/pin_manager.c: 83:     WPUB = 0x00;
 11436  1378  018D               	clrf	13	;volatile
 11437  1379                     l3185:
 11438                           
 11439                           ;mcc_generated_files/pin_manager.c: 84:     OPTION_REGbits.nWPUEN = 1;
 11440  1379  0021               	movlb	1	; select bank1
 11441  137A  1795               	bsf	21,7	;volatile
 11442                           
 11443                           ;mcc_generated_files/pin_manager.c: 90:     APFCON = 0x00;
 11444  137B  0022               	movlb	2	; select bank2
 11445  137C  019D               	clrf	29	;volatile
 11446  137D                     l31:
 11447  137D  0008               	return
 11448  137E                     __end_of_PIN_MANAGER_Initialize:
 11449                           
 11450                           	psect	text47
 11451  12AE                     __ptext47:	
 11452 ;; *************** function _OSCILLATOR_Initialize *****************
 11453 ;; Defined at:
 11454 ;;		line 58 in file "mcc_generated_files/mcc.c"
 11455 ;; Parameters:    Size  Location     Type
 11456 ;;		None
 11457 ;; Auto vars:     Size  Location     Type
 11458 ;;		None
 11459 ;; Return value:  Size  Location     Type
 11460 ;;                  1    wreg      void 
 11461 ;; Registers used:
 11462 ;;		wreg, status,2
 11463 ;; Tracked objects:
 11464 ;;		On entry : 0/0
 11465 ;;		On exit  : 0/0
 11466 ;;		Unchanged: 0/0
 11467 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 11468 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11469 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11470 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11471 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11472 ;;Total ram usage:        0 bytes
 11473 ;; Hardware stack levels used: 1
 11474 ;; This function calls:
 11475 ;;		Nothing
 11476 ;; This function is called by:
 11477 ;;		_SYSTEM_Initialize
 11478 ;; This function uses a non-reentrant model
 11479 ;;
 11480                           
 11481                           
 11482                           ;psect for function _OSCILLATOR_Initialize
 11483  12AE                     _OSCILLATOR_Initialize:
 11484  12AE                     l3187:	
 11485                           ;incstack = 0
 11486                           ; Regs used in _OSCILLATOR_Initialize: [wreg+status,2]
 11487                           
 11488                           
 11489                           ;mcc_generated_files/mcc.c: 61:     OSCCON = 0x70;
 11490  12AE  3070               	movlw	112
 11491  12AF  0021               	movlb	1	; select bank1
 11492  12B0  0099               	movwf	25	;volatile
 11493  12B1                     l3189:
 11494                           
 11495                           ;mcc_generated_files/mcc.c: 63:     OSCTUNE = 0x00;
 11496  12B1  0198               	clrf	24	;volatile
 11497  12B2                     l3191:
 11498                           
 11499                           ;mcc_generated_files/mcc.c: 65:     BORCON = 0x00;
 11500  12B2  0022               	movlb	2	; select bank2
 11501  12B3  0196               	clrf	22	;volatile
 11502  12B4                     l54:
 11503  12B4  0008               	return
 11504  12B5                     __end_of_OSCILLATOR_Initialize:
 11505  007E                     btemp	set	126	;btemp
 11506  007E                     wtemp0	set	126
 11507                           
 11508                           	psect	config
 11509                           
 11510                           ;Config register CONFIG1 @ 0x8007
 11511                           ;	Oscillator Selection
 11512                           ;	FOSC = INTOSC, INTOSC oscillator: I/O function on CLKIN pin
 11513                           ;	Watchdog Timer Enable
 11514                           ;	WDTE = OFF, WDT disabled
 11515                           ;	Power-up Timer Enable
 11516                           ;	PWRTE = OFF, PWRT disabled
 11517                           ;	MCLR Pin Function Select
 11518                           ;	MCLRE = ON, MCLR/VPP pin function is MCLR
 11519                           ;	Flash Program Memory Code Protection
 11520                           ;	CP = OFF, Program memory code protection is disabled
 11521                           ;	Data Memory Code Protection
 11522                           ;	CPD = OFF, Data memory code protection is disabled
 11523                           ;	Brown-out Reset Enable
 11524                           ;	BOREN = ON, Brown-out Reset enabled
 11525                           ;	Clock Out Enable
 11526                           ;	CLKOUTEN = OFF, CLKOUT function is disabled. I/O or oscillator function on the CLKOUT 
      +                          pin
 11527                           ;	Internal/External Switchover
 11528                           ;	IESO = ON, Internal/External Switchover mode is enabled
 11529                           ;	Fail-Safe Clock Monitor Enable
 11530                           ;	FCMEN = ON, Fail-Safe Clock Monitor is enabled
 11531  8007                     	org	32775
 11532  8007  3FE4               	dw	16356
 11533                           
 11534                           ;Config register CONFIG2 @ 0x8008
 11535                           ;	Flash Memory Self-Write Protection
 11536                           ;	WRT = OFF, Write protection off
 11537                           ;	Voltage Regulator Capacitor Enable
 11538                           ;	VCAPEN = OFF, All VCAP pin functionality is disabled
 11539                           ;	PLL Enable
 11540                           ;	PLLEN = OFF, 4x PLL disabled
 11541                           ;	Stack Overflow/Underflow Reset Enable
 11542                           ;	STVREN = ON, Stack Overflow or Underflow will cause a Reset
 11543                           ;	Brown-out Reset Voltage Selection
 11544                           ;	BORV = LO, Brown-out Reset Voltage (Vbor), low trip point selected.
 11545                           ;	Low-Voltage Programming Enable
 11546                           ;	LVP = OFF, High-voltage on MCLR/VPP must be used for programming
 11547  8008                     	org	32776
 11548  8008  1EFF               	dw	7935

Data Sizes:
    Strings     61
    Constant    0
    Data        30
    BSS         50
    Persistent  32
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14     14      14
    BANK0            80     80      80
    BANK1            80     77      80
    BANK2            80      0      77
    BANK3            80      0       0
    BANK4            80      0       0
    BANK5            80      0       0
    BANK6            80      0       0
    BANK7            80      0       0
    BANK8            80      0       0
    BANK9            80      0       0
    BANK10           80      0       0
    BANK11           80      0       0
    BANK12           48      0       0

Pointer List with Targets:

    strncmp@_r	PTR const unsigned char  size(2) Largest target is 3
		 -> STR_18(CODE[3]), STR_13(CODE[3]), STR_9(CODE[3]), 

    strncmp@r	PTR const unsigned char  size(2) Largest target is 3
		 -> STR_18(CODE[3]), STR_13(CODE[3]), STR_9(CODE[3]), 

    strncmp@_l	PTR const unsigned char  size(2) Largest target is 10
		 -> STR_6(CODE[6]), STR_5(CODE[10]), STR_4(CODE[8]), 

    strncmp@l	PTR const unsigned char  size(2) Largest target is 10
		 -> STR_6(CODE[6]), STR_5(CODE[10]), STR_4(CODE[8]), 

    strlen@s	PTR const unsigned char  size(1) Largest target is 32
		 -> dbuf(BANK2[32]), 

    strlen@a	PTR const unsigned char  size(1) Largest target is 32
		 -> dbuf(BANK2[32]), 

    fputs@s	PTR const unsigned char  size(1) Largest target is 32
		 -> dbuf(BANK2[32]), 

    fputs@fp	PTR struct _IO_FILE size(1) Largest target is 6
		 -> sprintf@f(BANK1[5]), 

    fputc@fp.buffer	PTR unsigned char  size(1) Largest target is 16
		 -> print_gram@row2(BANK1[16]), print_gram@row1(BANK1[16]), initialize@valstr(BANK1[16]), 

    fputc@fp	PTR struct _IO_FILE size(1) Largest target is 6
		 -> sprintf@f(BANK1[5]), 

    vfprintf@ap	PTR PTR void  size(1) Largest target is 1
		 -> sprintf@ap(BANK1[1]), 

    vfprintf@fp	PTR struct _IO_FILE size(1) Largest target is 6
		 -> sprintf@f(BANK1[5]), 

    vfprintf@fmt	PTR const unsigned char  size(2) Largest target is 10
		 -> STR_6(CODE[6]), STR_5(CODE[10]), STR_4(CODE[8]), 

    vfprintf@cfmt	PTR unsigned char  size(2) Largest target is 10
		 -> STR_6(CODE[6]), STR_5(CODE[10]), STR_4(CODE[8]), 

    vfpfcnvrt@fp	PTR struct _IO_FILE size(1) Largest target is 6
		 -> sprintf@f(BANK1[5]), 

    vfpfcnvrt@ap	PTR PTR void  size(1) Largest target is 1
		 -> sprintf@ap(BANK1[1]), 

    vfpfcnvrt@fmt	PTR PTR unsigned char  size(1) Largest target is 2
		 -> vfprintf@cfmt(BANK1[2]), 

    utoa@fp	PTR struct _IO_FILE size(1) Largest target is 6
		 -> sprintf@f(BANK1[5]), 

    dtoa@fp	PTR struct _IO_FILE size(1) Largest target is 6
		 -> sprintf@f(BANK1[5]), 

    pad@fp	PTR struct _IO_FILE size(1) Largest target is 6
		 -> sprintf@f(BANK1[5]), 

    pad@buf	PTR unsigned char  size(1) Largest target is 32
		 -> dbuf(BANK2[32]), 

    sprintf@fmt	PTR const unsigned char  size(2) Largest target is 10
		 -> STR_6(CODE[6]), STR_5(CODE[10]), STR_4(CODE[8]), 

    sprintf@s	PTR unsigned char  size(1) Largest target is 16
		 -> print_gram@row2(BANK1[16]), print_gram@row1(BANK1[16]), initialize@valstr(BANK1[16]), 

    sprintf@ap	PTR void [1] size(1) Largest target is 2
		 -> ?_sprintf(BANK1[2]), 

    S1099_IO_FILE$buffer	PTR unsigned char  size(1) Largest target is 16
		 -> print_gram@row2(BANK1[16]), print_gram@row1(BANK1[16]), initialize@valstr(BANK1[16]), 

    f.buffer	PTR unsigned char  size(1) Largest target is 16
		 -> print_gram@row2(BANK1[16]), print_gram@row1(BANK1[16]), initialize@valstr(BANK1[16]), 

    set_max_gram@p.lcd	PTR struct . size(1) Largest target is 4
		 -> NULL(NULL[0]), main@lcd(BANK1[4]), 

    set_max_gram@p.loadcell	PTR struct . size(1) Largest target is 12
		 -> NULL(NULL[0]), main@loadcell(BANK1[12]), 

    print_gram@p.lcd	PTR struct . size(1) Largest target is 4
		 -> NULL(NULL[0]), main@lcd(BANK1[4]), 

    print_gram@p.loadcell	PTR struct . size(1) Largest target is 12
		 -> NULL(NULL[0]), main@loadcell(BANK1[12]), 

    print_gram@p	PTR struct . size(1) Largest target is 7
		 -> main@drink(BANK1[5]), 

    calc_percentage@p.lcd	PTR struct . size(1) Largest target is 4
		 -> NULL(NULL[0]), main@lcd(BANK1[4]), 

    calc_percentage@p.loadcell	PTR struct . size(1) Largest target is 12
		 -> NULL(NULL[0]), main@loadcell(BANK1[12]), 

    calc_percentage@p	PTR struct . size(1) Largest target is 7
		 -> main@drink(BANK1[5]), 

    initialize@p.lcd	PTR struct . size(1) Largest target is 4
		 -> NULL(NULL[0]), main@lcd(BANK1[4]), 

    initialize@p.loadcell	PTR struct . size(1) Largest target is 12
		 -> NULL(NULL[0]), main@loadcell(BANK1[12]), 

    initialize@p	PTR struct . size(1) Largest target is 7
		 -> main@drink(BANK1[5]), 

    write4bits@p	PTR struct . size(1) Largest target is 4
		 -> NULL(NULL[0]), main@lcd(BANK1[4]), 

    command@p	PTR struct . size(1) Largest target is 4
		 -> NULL(NULL[0]), main@lcd(BANK1[4]), 

    lcd_print_with@str	PTR unsigned char  size(2) Largest target is 16
		 -> print_gram@row2(BANK1[16]), print_gram@row1(BANK1[16]), STR_3(CODE[15]), STR_2(CODE[11]), 

    lcd_print_with@p	PTR struct . size(1) Largest target is 4
		 -> NULL(NULL[0]), main@lcd(BANK1[4]), 

    lcd_print@p	PTR struct . size(1) Largest target is 4
		 -> NULL(NULL[0]), main@lcd(BANK1[4]), 

    lcd_print@str	PTR unsigned char  size(2) Largest target is 16
		 -> print_gram@row2(BANK1[16]), print_gram@row1(BANK1[16]), initialize@valstr(BANK1[16]), STR_3(CODE[15]), 
		 -> STR_2(CODE[11]), STR_1(CODE[2]), 

    lcd_set_cursor@p	PTR struct . size(1) Largest target is 4
		 -> NULL(NULL[0]), main@lcd(BANK1[4]), 

    lcd_clear@p	PTR struct . size(1) Largest target is 4
		 -> NULL(NULL[0]), main@lcd(BANK1[4]), 

    lcd_backlight@p	PTR struct . size(1) Largest target is 4
		 -> NULL(NULL[0]), main@lcd(BANK1[4]), 

    lcd_init@p	PTR struct . size(1) Largest target is 4
		 -> NULL(NULL[0]), main@lcd(BANK1[4]), 

    lcd_cmd@p	PTR struct . size(1) Largest target is 4
		 -> NULL(NULL[0]), main@lcd(BANK1[4]), 

    scale_convert_gram@p	PTR struct . size(1) Largest target is 12
		 -> NULL(NULL[0]), main@loadcell(BANK1[12]), 

    get_scale_val@p	PTR struct . size(1) Largest target is 12
		 -> NULL(NULL[0]), main@loadcell(BANK1[12]), 

    get_CELL_DAT_VAL@p	PTR struct . size(1) Largest target is 12
		 -> NULL(NULL[0]), main@loadcell(BANK1[12]), 

    set_CELL_CLK_HIGH@p	PTR struct . size(1) Largest target is 12
		 -> NULL(NULL[0]), main@loadcell(BANK1[12]), 

    set_CELL_CLK_LOW@p	PTR struct . size(1) Largest target is 12
		 -> NULL(NULL[0]), main@loadcell(BANK1[12]), 

    drink.lcd	PTR struct . size(1) Largest target is 4
		 -> NULL(NULL[0]), main@lcd(BANK1[4]), 

    drink.loadcell	PTR struct . size(1) Largest target is 12
		 -> NULL(NULL[0]), main@loadcell(BANK1[12]), 

    S220$lcd	PTR struct . size(1) Largest target is 4
		 -> NULL(NULL[0]), main@lcd(BANK1[4]), 

    F2804.lcd	PTR struct . size(1) Largest target is 4
		 -> NULL(NULL[0]), main@lcd(BANK1[4]), 

    S220$loadcell	PTR struct . size(1) Largest target is 12
		 -> NULL(NULL[0]), main@loadcell(BANK1[12]), 

    F2804.loadcell	PTR struct . size(1) Largest target is 12
		 -> NULL(NULL[0]), main@loadcell(BANK1[12]), 


Critical Paths under _main in COMMON

    _print_gram->_lcd_print_with
    _initialize->_lcd_print_with
    _vfpfcnvrt->_utoa
    _utoa->_pad
    _dtoa->_pad
    _pad->_fputs
    _fputs->_fputc
    _abs->___aomod
    _lcd_print_with->_lcd_print
    _lcd_print_with->_lcd_set_cursor
    _lcd_init->_write4bits
    _write4bits->_lcd_cmd
    _lcd_clear->_lcd_print
    _lcd_clear->_lcd_set_cursor
    _lcd_set_cursor->_command
    _lcd_print->_command
    _command->_lcd_cmd
    _lcd_backlight->_lcd_cmd
    _lcd_cmd->_i2c_write
    _calc_percentage->___xxtofl
    _scale_convert_gram->___xxtofl
    ___fltol->___xxtofl
    ___fldiv->___xxtofl
    _get_scale_val->___lldiv
    ___flmul->___xxtofl

Critical Paths under _main in BANK0

    _sprintf->_vfprintf
    _vfprintf->_vfpfcnvrt
    _vfpfcnvrt->_dtoa
    _utoa->___lodiv
    _utoa->___lomod
    _dtoa->___aodiv
    _dtoa->___aomod
    _pad->_fputs
    _abs->___aomod
    _lcd_print_with->_lcd_set_cursor
    _lcd_clear->_lcd_set_cursor
    _calc_percentage->_scale_convert_gram
    _scale_convert_gram->___fltol
    ___fltol->___flmul
    ___flmul->___fldiv

Critical Paths under _main in BANK1

    _main->_print_gram
    _print_gram->_sprintf
    _initialize->_sprintf
    _sprintf->_vfprintf

Critical Paths under _main in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _main in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                23    23      0   64327
                                             54 BANK1     23    23      0
                  _SYSTEM_Initialize
                    _calc_percentage
                         _initialize
                         _print_gram
 ---------------------------------------------------------------------------------
 (1) _print_gram                                          35    35      0   23429
                                             19 BANK1     35    35      0
                          _lcd_clear
                     _lcd_print_with
                            _sprintf
 ---------------------------------------------------------------------------------
 (1) _initialize                                          18    18      0   31622
                                             19 BANK1     18    18      0
                      _get_scale_val
                      _lcd_backlight
                          _lcd_clear
                           _lcd_init
                          _lcd_print
                     _lcd_print_with
                            _sprintf
 ---------------------------------------------------------------------------------
 (2) _sprintf                                             16    10      6   11742
                                              5 BANK1     14     8      6
                           _vfprintf
 ---------------------------------------------------------------------------------
 (3) _vfprintf                                             8     5      3   11210
                                             77 BANK0      3     0      3
                                              0 BANK1      5     5      0
                          _vfpfcnvrt
 ---------------------------------------------------------------------------------
 (4) _vfpfcnvrt                                           47    45      2   10889
                                             46 BANK0     31    29      2
                               _dtoa
                              _fputc
                            _strncmp
                               _utoa
 ---------------------------------------------------------------------------------
 (5) _utoa                                                24    16      8    3838
                                             13 COMMON     1     1      0
                                             16 BANK0     23    15      8
                            ___lodiv
                            ___lomod
                                _pad
 ---------------------------------------------------------------------------------
 (6) ___lomod                                             18     2     16     311
                                              0 COMMON     2     2      0
                                              0 BANK0     16     0     16
 ---------------------------------------------------------------------------------
 (6) ___lodiv                                             26    10     16     314
                                              0 COMMON    10    10      0
                                              0 BANK0     16     0     16
 ---------------------------------------------------------------------------------
 (5) _strncmp                                             11     5      6     909
                                              0 COMMON    11     5      6
 ---------------------------------------------------------------------------------
 (5) _dtoa                                                30    22      8    4437
                                             16 BANK0     30    22      8
                            ___aodiv
                            ___aomod
                                _abs
                                _pad
 ---------------------------------------------------------------------------------
 (6) _pad                                                  9     6      3    2722
                                             12 COMMON     1     1      0
                                              4 BANK0      8     5      3
                              _fputc
                              _fputs
                             _strlen
 ---------------------------------------------------------------------------------
 (7) _strlen                                               5     3      2     123
                                              0 COMMON     5     3      2
 ---------------------------------------------------------------------------------
 (7) _fputs                                                8     7      1    1149
                                              8 COMMON     4     3      1
                                              0 BANK0      4     4      0
                              _fputc
 ---------------------------------------------------------------------------------
 (8) _fputc                                                8     5      3     834
                                              0 COMMON     8     5      3
                              _putch
 ---------------------------------------------------------------------------------
 (9) _putch                                                1     1      0       0
 ---------------------------------------------------------------------------------
 (6) _abs                                                  4     2      2     142
                                              3 COMMON     4     2      2
                            ___aomod (ARG)
 ---------------------------------------------------------------------------------
 (6) ___aomod                                             19     3     16     448
                                              0 COMMON     3     3      0
                                              0 BANK0     16     0     16
 ---------------------------------------------------------------------------------
 (6) ___aodiv                                             27    11     16     452
                                              0 COMMON    11    11      0
                                              0 BANK0     16     0     16
 ---------------------------------------------------------------------------------
 (2) _lcd_print_with                                       7     3      4    6154
                                             13 COMMON     1     1      0
                                              6 BANK0      6     2      4
                          _lcd_print
                     _lcd_set_cursor
 ---------------------------------------------------------------------------------
 (2) _lcd_init                                             3     3      0    3155
                                              6 COMMON     3     3      0
                         _write4bits
 ---------------------------------------------------------------------------------
 (3) _write4bits                                           3     2      1    2814
                                              3 COMMON     3     2      1
                            _lcd_cmd
 ---------------------------------------------------------------------------------
 (2) _lcd_clear                                            5     5      0    5268
                                              6 BANK0      5     5      0
                          _lcd_print
                     _lcd_set_cursor
 ---------------------------------------------------------------------------------
 (3) _lcd_set_cursor                                       9     7      2    2659
                                             10 COMMON     3     1      2
                                              0 BANK0      6     6      0
                            _command
 ---------------------------------------------------------------------------------
 (3) _lcd_print                                            5     3      2    2341
                                             10 COMMON     3     1      2
                                              0 BANK0      2     2      0
                            _command
 ---------------------------------------------------------------------------------
 (4) _command                                              7     5      2    1924
                                              3 COMMON     7     5      2
                            _lcd_cmd
 ---------------------------------------------------------------------------------
 (2) _lcd_backlight                                        2     2      0    1233
                                              3 COMMON     2     2      0
                            _lcd_cmd
 ---------------------------------------------------------------------------------
 (5) _lcd_cmd                                              2     1      1    1156
                                              1 COMMON     2     1      1
                          _i2c_start
                           _i2c_stop
                          _i2c_write
 ---------------------------------------------------------------------------------
 (6) _i2c_write                                            1     1      0      22
                                              0 COMMON     1     1      0
                           _i2c_wait
 ---------------------------------------------------------------------------------
 (6) _i2c_stop                                             0     0      0       0
 ---------------------------------------------------------------------------------
 (6) _i2c_start                                            0     0      0       0
                           _i2c_wait
 ---------------------------------------------------------------------------------
 (7) _i2c_wait                                             0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _calc_percentage                                      6     6      0    9030
                                             76 BANK0      1     1      0
                                              0 BANK1      5     5      0
                            ___fldiv
                            ___flmul
                            ___fltol
                           ___xxtofl
                      _get_scale_val
                 _scale_convert_gram
 ---------------------------------------------------------------------------------
 (2) _scale_convert_gram                                  13    13      0    2567
                                             63 BANK0     13    13      0
                            ___fldiv
                            ___fltol
                           ___xxtofl
 ---------------------------------------------------------------------------------
 (3) ___xxtofl                                            14    10      4     550
                                              0 COMMON    14    10      4
 ---------------------------------------------------------------------------------
 (3) ___fltol                                             11     7      4     381
                                             52 BANK0     11     7      4
                            ___fldiv (ARG)
                            ___flmul (ARG)
                           ___xxtofl (ARG)
 ---------------------------------------------------------------------------------
 (3) ___fldiv                                             26    18      8    1425
                                              0 BANK0     26    18      8
                           ___xxtofl (ARG)
 ---------------------------------------------------------------------------------
 (2) _get_scale_val                                       19    15      4    1448
                                              0 BANK0     19    15      4
                            ___lldiv
                   _get_CELL_DAT_VAL
                  _set_CELL_CLK_HIGH
                   _set_CELL_CLK_LOW
 ---------------------------------------------------------------------------------
 (3) _set_CELL_CLK_LOW                                     2     2      0     121
                                              0 COMMON     2     2      0
 ---------------------------------------------------------------------------------
 (3) _set_CELL_CLK_HIGH                                    2     2      0      88
                                              0 COMMON     2     2      0
 ---------------------------------------------------------------------------------
 (3) _get_CELL_DAT_VAL                                     6     4      2     275
                                              0 COMMON     6     4      2
 ---------------------------------------------------------------------------------
 (3) ___lldiv                                             14     6      8     314
                                              0 COMMON    14     6      8
 ---------------------------------------------------------------------------------
 (2) ___flmul                                             26    18      8    2417
                                             26 BANK0     26    18      8
                          __Umul8_16
                            ___fldiv (ARG)
                           ___xxtofl (ARG)
 ---------------------------------------------------------------------------------
 (3) __Umul8_16                                            9     7      2     799
                                              0 COMMON     9     7      2
 ---------------------------------------------------------------------------------
 (1) _SYSTEM_Initialize                                    0     0      0       0
              _OSCILLATOR_Initialize
             _PIN_MANAGER_Initialize
                     _WDT_Initialize
 ---------------------------------------------------------------------------------
 (2) _WDT_Initialize                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _PIN_MANAGER_Initialize                               0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _OSCILLATOR_Initialize                                0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 9
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _SYSTEM_Initialize
     _OSCILLATOR_Initialize
     _PIN_MANAGER_Initialize
     _WDT_Initialize
   _calc_percentage
     ___fldiv
       ___xxtofl (ARG)
     ___flmul
       __Umul8_16
       ___fldiv (ARG)
       ___xxtofl (ARG)
     ___fltol
       ___fldiv (ARG)
       ___flmul (ARG)
       ___xxtofl (ARG)
     ___xxtofl
     _get_scale_val
       ___lldiv
       _get_CELL_DAT_VAL
       _set_CELL_CLK_HIGH
       _set_CELL_CLK_LOW
     _scale_convert_gram
       ___fldiv
       ___fltol
       ___xxtofl
   _initialize
     _get_scale_val
     _lcd_backlight
       _lcd_cmd
         _i2c_start
           _i2c_wait
         _i2c_stop
         _i2c_write
           _i2c_wait
     _lcd_clear
       _lcd_print
         _command
           _lcd_cmd
       _lcd_set_cursor
         _command
     _lcd_init
       _write4bits
         _lcd_cmd
     _lcd_print
     _lcd_print_with
       _lcd_print
       _lcd_set_cursor
     _sprintf
       _vfprintf
         _vfpfcnvrt
           _dtoa
             ___aodiv
             ___aomod
             _abs
               ___aomod (ARG)
             _pad
               _fputc
                 _putch
               _fputs
                 _fputc
               _strlen
           _fputc
           _strncmp
           _utoa
             ___lodiv
             ___lomod
             _pad
   _print_gram
     _lcd_clear
     _lcd_print_with
     _sprintf

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             3F0      0       0       0        0.0%
EEDATA             100      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
BITCOMMON            E      0       0       1        0.0%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
COMMON               E      E       E       2      100.0%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
BITSFR2              0      0       0       3        0.0%
SFR2                 0      0       0       3        0.0%
STACK                0      0       0       3        0.0%
BITBANK0            50      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
BANK0               50     50      50       5      100.0%
BITSFR4              0      0       0       5        0.0%
SFR4                 0      0       0       5        0.0%
BITBANK1            50      0       0       6        0.0%
BITSFR5              0      0       0       6        0.0%
SFR5                 0      0       0       6        0.0%
BANK1               50     4D      50       7      100.0%
BITSFR6              0      0       0       7        0.0%
SFR6                 0      0       0       7        0.0%
BITBANK2            50      0       0       8        0.0%
BITSFR7              0      0       0       8        0.0%
SFR7                 0      0       0       8        0.0%
BANK2               50      0      4D       9       96.2%
BITSFR8              0      0       0       9        0.0%
SFR8                 0      0       0       9        0.0%
BITBANK3            50      0       0      10        0.0%
BITSFR9              0      0       0      10        0.0%
SFR9                 0      0       0      10        0.0%
BANK3               50      0       0      11        0.0%
BITSFR10             0      0       0      11        0.0%
SFR10                0      0       0      11        0.0%
BITBANK4            50      0       0      12        0.0%
BITSFR11             0      0       0      12        0.0%
SFR11                0      0       0      12        0.0%
BANK4               50      0       0      13        0.0%
BITSFR12             0      0       0      13        0.0%
SFR12                0      0       0      13        0.0%
BITBANK5            50      0       0      14        0.0%
BITSFR13             0      0       0      14        0.0%
SFR13                0      0       0      14        0.0%
BANK5               50      0       0      15        0.0%
BITSFR14             0      0       0      15        0.0%
SFR14                0      0       0      15        0.0%
BITBANK6            50      0       0      16        0.0%
BITSFR15             0      0       0      16        0.0%
SFR15                0      0       0      16        0.0%
BANK6               50      0       0      17        0.0%
BITSFR16             0      0       0      17        0.0%
SFR16                0      0       0      17        0.0%
BITBANK7            50      0       0      18        0.0%
BITSFR17             0      0       0      18        0.0%
SFR17                0      0       0      18        0.0%
BANK7               50      0       0      19        0.0%
BITSFR18             0      0       0      19        0.0%
SFR18                0      0       0      19        0.0%
BITSFR19             0      0       0      20        0.0%
SFR19                0      0       0      20        0.0%
ABS                  0      0      FB      20        0.0%
BITBANK8            50      0       0      21        0.0%
BITSFR20             0      0       0      21        0.0%
SFR20                0      0       0      21        0.0%
BANK8               50      0       0      22        0.0%
BITSFR21             0      0       0      22        0.0%
SFR21                0      0       0      22        0.0%
BITBANK9            50      0       0      23        0.0%
BITSFR22             0      0       0      23        0.0%
SFR22                0      0       0      23        0.0%
BANK9               50      0       0      24        0.0%
BITSFR23             0      0       0      24        0.0%
SFR23                0      0       0      24        0.0%
BITBANK10           50      0       0      25        0.0%
BITSFR24             0      0       0      25        0.0%
SFR24                0      0       0      25        0.0%
BANK10              50      0       0      26        0.0%
BITSFR25             0      0       0      26        0.0%
SFR25                0      0       0      26        0.0%
BITBANK11           50      0       0      27        0.0%
BITSFR26             0      0       0      27        0.0%
SFR26                0      0       0      27        0.0%
BANK11              50      0       0      28        0.0%
BITSFR27             0      0       0      28        0.0%
SFR27                0      0       0      28        0.0%
BITBANK12           30      0       0      29        0.0%
BITSFR28             0      0       0      29        0.0%
SFR28                0      0       0      29        0.0%
BANK12              30      0       0      30        0.0%
BITSFR29             0      0       0      30        0.0%
SFR29                0      0       0      30        0.0%
BITSFR30             0      0       0      31        0.0%
SFR30                0      0       0      31        0.0%
DATA                 0      0      FB      31        0.0%
BITSFR31             0      0       0      32        0.0%
SFR31                0      0       0      32        0.0%


Microchip Technology PIC Macro Assembler V2.32 build 20210201212658 
Symbol Table                                                                                   Sun Dec 19 13:46:01 2021

                   ___fldiv@aexp 0039                     ___fldiv@bexp 0038                     ___fldiv@sign 0031  
                    _SSPSTATbits 0214                               l31 137D                               l51 12C5  
                             l54 12B4                               l57 12A1                               l81 000D  
                             l75 080B                               l84 12B7                               l78 0009  
                             l87 12BB                               l96 12DE                               l99 12E2  
                   lcd_clear@col 0029              __Umul8_16@word_mpld 0076                     lcd_clear@row 0028  
                            l102 12E9                              l302 14FE                              l320 15A4  
                            l241 0A48                              l234 12D9                              l314 13FD  
                            l307 1474                              l323 1398                              l308 1487  
                            l237 12CF                              l317 132E                              l342 0887  
                            l350 1656                              l264 0D25                              l290 0B96  
                            l347 0AED                              l603 0FEE                              l268 09A5  
                            l604 0FFF                              l293 12FF                              l287 1316  
                            l704 17EA                              l616 0DFE                              l617 0E0F  
                            l539 16B0                              l707 17FF                              l900 07E4  
                            l743 090B                              l912 07D8                              l736 08FB  
                            l921 13D9                              l753 178A                              l906 0760  
                            l746 177A                              l860 0233                              l862 038F  
                            l950 0BF4                              l919 13C9                              l944 0BB9  
                            l881 035D                              l697 17FF                              l882 0377  
                            l946 0C42                              l884 0386                              l876 0311  
                            l957 0C0E                              l958 0C1A                              l966 1425  
                            l995 15C1                              l998 15E3                              _abs 132F  
                            _pad 15A5                              wreg 0009                     ___flmul@aexp 004C  
                   ___flmul@bexp 004D                      command@mode 0074                     ___flmul@sign 0047  
                   ___flmul@temp 0052                     ___flmul@prod 004E        get_scale_val@weight_count 002D  
                ?_lcd_set_cursor 007A                     ___fltol@exp1 005E                             l1000 15FD  
                           l1003 00B3                             l1012 0164                             l1004 00BD  
                           l1100 0069                             l1008 00DB                             l1009 00F3  
                           l1041 0EFE                             l1033 0E38                             l1026 01DB  
                           ?_abs 0073                             l1060 14C0                             l1029 0E1C  
                           l1064 1348                             l1048 058D                             l3001 023B  
                           l1090 129D                             l3011 0259                             l3003 0247  
                           l1067 1348                             l3101 13B8                             l3021 0282  
                           l3005 024B                             l3111 13D5                             l3103 13BA  
                           l3031 02A3                             l3023 028A                             l3015 0262  
                           l1079 154D                             l1087 144E                             l1096 1362  
                           l3105 13C1                             l3041 02C6                             l3033 02A4  
                           l3025 028C                             l3017 0272                             l3009 0254  
                           l3121 0BB1                             l2401 142B                             l3107 13C5  
                           l3051 02E1                             l3027 0291                             l3035 02AB  
                           l3043 02CA                             l3019 027A                             l3131 0BDA  
                           l3123 0BC1                             l3115 0B98                             l2403 1439  
                           l2411 1353                             l3109 13D0                             l3301 0CDE  
                           l3061 02F5                             l3053 02E5                             l3045 02D0  
                           l3037 02BD                             l3029 029F                             l3141 0C04  
                           l3133 0BE1                             l3117 0B9D                             l2421 12B5  
                           l2405 143E                             l2413 135C                             l2501 08A2  
                           l3303 0CE2                             l3071 0316                             l3063 02F6  
                           l3055 02E6                             l3047 02D8                             l3039 02BE  
                           l3151 0C35                             l3143 0C08                             l3135 0BE5  
                           l3127 0BCA                             l3119 0BA1                             l2423 12DB  
                           l2431 0F0A                             l2407 134A                             l2511 08DC  
                           l2503 08AA                             l3401 0594                             l3305 0CE8  
                           l3073 031B                             l3081 0343                             l3065 02FA  
                           l3057 02ED                             l3049 02DA                             l3153 0C39  
                           l3145 0C12                             l3137 0BED                             l3129 0BCF  
                           l3321 0975                             l3313 090E                             l2417 0004  
                           l2425 12E6                             l2441 0F62                             l2433 0F2B  
                           l2409 134F                             l2601 0172                             l2513 08EC  
                           l2505 08AE                             l2521 172A                             l3161 1492  
                           l3171 1363                             l3411 05A7                             l3403 0598  
                           l3307 0D09                             l3251 0C52                             l3091 037C  
                           l3083 0350                             l3075 0323                             l3067 030E  
                           l3059 02F1                             l3155 0C3A                             l3147 0C1C  
                           l3139 0BFB                             l3323 0991                             l3315 0938  
                           l2419 0007                             l3331 0B12                             l2451 0F82  
                           l2443 0F6F                             l2435 0F35                             l2427 0EFF  
                           l2611 01A6                             l2603 017F                             l2515 08ED  
                           l2507 08B2                             l2531 176C                             l2523 1732  
                           l3163 1496                             l3181 1371                             l3173 1368  
                           l3501 0749                             l3421 05C2                             l3413 05AF  
                           l3405 059C                             l3309 0D1D                             l3261 0C76  
                           l3253 0C5A                             l3093 0380                             l3085 036B  
                           l3077 0327                             l3149 0C30                             l3341 0B3C  
                           l3333 0B19                             l3325 0AEF                             l2453 0F8A  
                           l2445 0F72                             l2461 0FCB                             l2437 0F54  
                           l2429 0F00                             l2381 1509                             l2541 15BF  
                           l2533 15A7                             l2621 01BF                             l2613 01AB  
                           l2605 018C                             l2509 08BA                             l2525 1736  
                           l2517 171A                             l2701 0392                             l3165 14AE  
                           l3191 12B2                             l3183 1374                             l3175 136B  
                           l3511 0772                             l3503 075D                             l3431 05D9  
                           l3423 05C6                             l3415 05B1                             l3407 059D  
                           l3271 0C83                             l3255 0C5C                             l3247 0C45  
                           l3095 0382                             l3087 036E                             l3079 033F  
                           l3319 0940                             l3351 0B6D                             l3343 0B44  
                           l3335 0B24                             l3327 0AFB                             l2463 0FD0  
                           l2455 0FAC                             l2447 0F7A                             l2439 0F58  
                           l2471 0D52                             l2383 150E                             l2551 15F1  
                           l2543 15C4                             l2535 15AC                             l2615 01B0  
                           l2623 01C8                             l2607 019A                             l2527 173A  
                           l2519 1727                             l2631 0E2A                             l2711 03C8  
                           l2703 03A3                             l3167 14B8                             l3159 148A  
                           l3185 1379                             l3177 136D                             l3193 129E  
                           l3521 07A9                             l3513 0776                             l3433 05DB  
                           l3425 05C7                             l3417 05B9                             l3409 05A2  
                           l3281 0CAC                             l3273 0C87                             l3257 0C67  
                           l3249 0C49                             l3089 0376                             l2393 0800  
                           l2561 1304                             l3361 12F3                             l3353 0B72  
                           l3345 0B49                             l3337 0B2C                             l3329 0B03  
                           l2457 0FBC                             l2449 0F7E                             l2481 0D93  
                           l2473 0D5C                             l2465 0D26                             l2385 1518  
                           l2377 14FF                             l2545 15D0                             l2537 15B5  
                           l2617 01B6                             l2609 019F                             l2529 175C  
                           l2641 0E5C                             l2633 0E30                             l2721 0414  
                           l2713 03D9                             l2705 03AB                             l3601 16BC  
                           l3187 12AE                             l3179 136F                             l3531 07D3  
                           l3523 07B7                             l3515 078E                             l3507 0765  
                           l3451 0637                             l3443 05F6                             l3435 05E3  
                           l3427 05CC                             l3419 05BE                             l3291 0CB7  
                           l3283 0CB2                             l3275 0C8C                             l3267 0C78  
                           l3259 0C72                             l2395 0800                             l2563 130B  
                           l3363 12FB                             l3371 14D3                             l3355 0B83  
                           l3347 0B5A                             l3339 0B38                             l2459 0FBD  
                           l2483 0D97                             l2491 0DDB                             l2475 0D7B  
                           l2467 0D27                             l2555 132F                             l2387 1535  
                           l2379 1504                             l2547 15D5                             l2539 15BA  
                           l2619 01BB                             l2571 007C                             l2651 0EBF  
                           l2643 0E83                             l2635 0E40                             l2627 0E12  
                           l2723 042C                             l2715 03E1                             l2707 03B1  
                           l3611 16C4                             l3603 16BD                             l3189 12B1  
                           l3533 07D4                             l3525 07C0                             l3509 076A  
                           l3517 0792                             l3461 067F                             l3453 0651  
                           l3445 0603                             l3437 05E8                             l3429 05D1  
                           l2901 1657                             l3293 0CBB                             l3277 0CA3  
                           l3269 0C7F                             l2397 0807                             l2565 130F  
                           l3381 14F8                             l3373 14DC                             l3365 14C3  
                           l3357 0B87                             l3349 0B5E                             l2493 0DE0  
                           l2485 0D9B                             l2477 0D88                             l2469 0D31  
                           l2557 133C                             l2389 1545                             l2549 15E8  
                           l2581 00D3                             l2573 008F                             l2653 0ECB  
                           l2645 0E87                             l2637 0E54                             l2629 0E17  
                           l2733 0487                             l2725 0445                             l2717 03FA  
                           l2709 03B6                             l3541 080E                             l3621 16F9  
                           l3613 16D3                             l3605 16C0                             l3535 07DC  
                           l3527 07C2                             l3519 079F                             l3471 06B5  
                           l3463 0686                             l3455 065E                             l3447 0610  
                           l3439 05ED                             l2911 1680                             l2903 1667  
                           l2831 09AF                             l3295 0CC4                             l3279 0CA7  
                           l2567 1312                             l2559 1301                             l3359 12EB  
                           l3375 14E1                             l3367 14C5                             l3383 1318  
                           l2487 0DBD                             l2479 0D8B                             l2399 1428  
                           l2591 00FB                             l2583 00E3                             l2575 0095  
                           l2671 0025                             l2663 000E                             l2495 0888  
                           l2655 0ED8                             l2647 0E8B                             l2639 0E57  
                           l2735 0499                             l2743 04CD                             l2727 044E  
                           l3391 140A                             l3551 087B                             l3543 081D  
                           l3631 170A                             l3623 16FD                             l3615 16E3  
                           l3607 16C2                             l3529 07CF                             l3481 0716  
                           l3473 06C9                             l3465 0693                             l3457 066B  
                           l3449 062A                             l2913 1692                             l2905 166A  
                           l2921 16A8                             l2841 09CC                             l2825 12D1  
                           l3297 0CC9                             l3289 0CB3                             l3553 0A4B  
                           l3377 14EA                             l3369 14C7                             l3385 1325  
                           l2489 0DCD                             l2593 0100                             l2585 00E9  
                           l2577 00B8                             l2569 006C                             l2681 0059  
                           l2673 0031                             l2665 0016                             l2497 0892  
                           l2657 0EE6                             l2649 0EB8                             l2745 04E5  
                           l2753 0534                             l2737 04A1                             l2729 046D  
                           l3393 140C                             l3545 082C                             l3561 1600  
                           l3625 16FE                             l3617 16F1                             l3609 16C3  
                           l3539 12BC                             l3491 0735                             l3483 071D  
                           l3475 06D6                             l3467 069A                             l3459 0672  
                           l2915 169A                             l2907 1675                             l2843 09D5  
                           l2835 09B9                             l2827 12C7                             l3299 0CCE  
                           l2931 17A0                             l3555 0A6F                             l2691 157D  
                           l3379 14EE                             l2595 012F                             l2587 00EE  
                           l2579 00CD                             l2675 003A                             l2667 0022  
                           l2499 089F                             l2659 0EEB                             l2771 0583  
                           l2755 0546                             l2763 055F                             l2747 04EE  
                           l2739 04B3                             l3395 141D                             l3387 1400  
                           l3547 085B                             l3627 1702                             l3619 16F5  
                           l3493 073C                             l3485 0729                             l3477 06EA  
                           l3469 06AE                             l2917 169B                             l2909 1679  
                           l2861 0A12                             l2853 09F6                             l2837 09C2  
                           l2829 09A7                             l2941 17C2                             l2933 17B3  
                           l2925 178B                             l3557 0A7D                             l2693 1586  
                           l2685 154F                             l2597 0133                             l2589 00F8  
                           l2677 0043                             l2765 0567                             l2757 054E  
                           l2749 051A                             l3389 1408                             l3549 0873  
                           l3629 1706                             ?_pad 0024                             l3487 0730  
                           l3495 0740                             l3479 06FF                             l3399 058E  
                           l2919 16A2                             l2871 0A32                             l2855 09FF  
                           l2847 09E0                             l2935 17B4                             l2927 1797  
                           l3559 0A83                             l2695 158A                             l2687 156C  
                           l2599 0137                             l2679 0049                             l2759 0559  
                           l3591 16B1                             l3497 0744                             l3489 0734  
                           l2873 0A3B                             l2865 0A1D                             l2849 09E9  
                           l2961 01DC                             l2937 17BC                             l2697 1592  
                           l2689 1574                             l2881 137F                             l2769 056A  
                           l3593 16B4                             l3499 0745                             l2867 0A26  
                           l2859 0A09                             l2971 01F0                             l2963 01E2  
                           l2955 17E1                             l2947 17CA                             l2939 17BE  
                           l2699 159B                             l2891 13DC                             l2883 1451  
                           l3595 16B6                             l2877 0A46                             l2981 0208  
                           l2973 01F5                             l2965 01E6                             l2957 17EF  
                           l2949 17DA                             l2893 13DD                             l2885 1461  
                           l3597 16B7                             l2991 021B                             l2983 020D  
                           l2975 01FD                             l2967 01EA                             l2959 17F4  
                           l2895 13E6                             l2887 146B                             l3599 16BA  
                           l2993 0220                             l2985 0211                             l2977 01FE  
                           l2969 01EB                             l2897 13EA                             l2889 147E  
                           l2995 0228                             l2987 0215                             l2979 0200  
                           l2899 13F4                             l2997 0229                             l2989 0216  
                           l2999 022B                             STR_1 183B                             STR_2 180F  
                           STR_3 1800                             STR_4 1824                             STR_5 181A  
                           STR_6 182C                             STR_7 1832                             STR_9 1832  
                           u2100 144E                             u2101 144D                             u2110 135C  
                           u2111 135B                             u3000 1679                             u2120 000D  
                           u2200 0F5F                             u2040 1504                             u3001 1678  
                           u2121 000C                             u2041 1503                             u2130 12BB  
                           u2210 0F6F                             u2050 1509                             u2131 12BA  
                           u2211 0F6E                             u2051 1508                             u3020 1692  
                           u3100 17D9                             u2140 12E2                             u2220 0F82  
                           u2060 1518                             u3021 1691                             u3101 17D8  
                           u2141 12E1                             u2221 0F81                             u2061 1517  
                           _LATA 010C                             u3110 17E0                             u2150 12E6  
                           u2230 0FAC                             u2310 0D88                             u2070 1535  
                           _LATB 010D                             u3015 167A                             u3111 17DF  
                           u2151 12E5                             u2231 0FAB                             u2311 0D87  
                           u2071 1534                             _LATC 010E                             u3040 16A8  
                           u3200 0220                             u4000 0A7D                             u2080 0807  
                           u2240 0FCB                             u2160 0F0A                             u2320 0D9B  
                           u2400 08DC                             u3041 16A7                             u3025 168E  
                           u3201 021F                             u4001 0A7C                             u2081 0806  
                           u2241 0FCA                             u2161 0F09                             u2321 0D9A  
                           u2401 08DB                             _LATE 0110                             u3210 023B  
                           u3130 17EF                             u3050 1797                             u2090 080B  
                           u2250 0FD0                             u2330 0DBD                             u2410 08FB  
                           u3035 169C                             u3211 023A                             u3131 17EE  
                           u3051 1796                             u2091 080A                             u2251 0FCF  
                           u2235 0FA8                             u2331 0DBC                             u2075 1531  
                           u2411 08FA                             u3300 02D8                             u3220 0259  
                           u3140 17F4                             u3060 17AD                             u2180 0F35  
                           u2340 0DDB                             u2500 133C                             u2420 1727  
                           u3301 02D7                             u3221 0258                             u3141 17F3  
                           u3125 17E2                             u2181 0F34                             u2341 0DDA  
                           u2501 133B                             u2405 08D8                             u2421 1726  
                           u3230 0291                             u3150 01EA                             u3070 17C2  
                           u2350 0DE0                             u2270 0D31                             u2510 0087  
                           u2430 173A                             u3231 0290                             u3151 01E9  
                           u3071 17C1                             u2351 0DDF                             u2335 0DB9  
                           u2271 0D30                             u2511 0085                             u2431 1739  
                           u3400 0335                             u3320 02E5                             u3160 01F0  
                           u3080 17C9                             u2600 017F                             u2520 0088  
                           u2440 175C                             u4040 16CF                             u3321 02E4  
                           u3161 01EF                             u3081 17C8                             u3065 17A9  
                           u2505 1338                             u2601 017E                             u2441 175B  
                           u3410 0350                             u3170 01F5                             u2290 0D5C  
                           u2610 018C                             u2530 0095                             u2370 088F  
                           u2450 177A                             u4050 16ED                             u3411 034F  
                           u3315 02DB                             u3171 01F4                             u4107 0B15  
                           u2291 0D5B                             u2611 018B                             u2531 0094  
                           u2451 1779                             u3420 036B                             u3340 02F5  
                           u3260 02A3                             u3180 0215                             u2460 15AC  
                           u2620 019A                             u2380 089F                             u2700 0ECB  
                           u3421 036A                             u3405 0331                             u3341 02F4  
                           u3261 02A2                             u3245 0292                             u3181 0214  
                           u4117 0B22                             u2461 15AB                             u2621 0199  
                           u2381 089E                             u2445 1758                             u2701 0ECA  
                           u3430 0380                             u3350 02FA                             u3190 021B  
                           u3510 0BE0                             u2470 15BA                             u2630 019F  
                           u2550 00B8                             u2390 08B2                             u2710 0ED8  
                           u3431 037F                             u3415 034C                             u3351 02F9  
                           u3335 02E7                             u3255 0299                             u3191 021A  
                           u3095 17CB                             u3511 0BDF                             u4207 1587  
                           u4127 0B2D                             u2471 15B9                             u2631 019E  
                           u2615 0188                             u2551 00B7                             u2391 08B1  
                           u2711 0ED7                             u3440 13C5                             u3360 030E  
                           u3280 02BD                             u3600 0C39                             u2480 15E3  
                           u2640 01A6                             u2560 00CD                             u2720 0EE6  
                           u2800 03A3                             u3441 13C4                             u3425 0367  
                           u3361 030D                             u3281 02BC                             u3601 0C38  
                           u3505 0BD4                             u4217 12FC                             u4137 0B39  
                           u2481 15E2                             u2641 01A5                             u2625 0196  
                           u2561 00CC                             u2721 0EE5                             u2801 03A2  
                           u3370 0315                             u3290 02D0                             u3530 0BFA  
                           u2490 15E8                             u2650 01AB                             u2570 00E9  
                           u2730 0EEB                             u2810 03C8                             u3610 14B8  
                           u3371 0314                             u3291 02CF                             u3275 02A5  
                           u3531 0BF9                             u4227 1313                             u4147 0B4A  
                           u2491 15E7                             u2651 01AA                             u2571 00E8  
                           u2731 0EEA                             u2715 0ED4                             u2811 03C7  
                           u3611 14B7                             u3460 13D5                             u2900 09D5  
                           u3700 0CE8                             u3380 031B                             u2660 01B6  
                           u2580 00EE                             u2740 0022                             u2820 03D9  
                           u3461 13D4                             u2901 09D4                             u3701 0CE7  
                           u4237 0C73                             u3381 031A                             u3285 02B9  
                           u3525 0BEE                             u4157 0B5B                             u2485 15DF  
                           u2661 01B5                             u2581 00ED                             u2565 00C9  
                           u2741 0021                             u2725 0EE2                             u2821 03D8  
                           u4077 1710                             u2910 09E9                             u3390 0327  
                           u3550 0C08                             u3470 0B9D                             u3710 0938  
                           u2590 0172                             u2750 003A                             u2670 0E17  
                           u2830 042C                             u3455 13CA                             u2911 09E8  
                           u4247 0C84                             u3391 0326                             u3551 0C07  
                           u3471 0B9C                             u3711 0937                             u4167 0B69  
                           u4087 0AF4                             u2591 0171                             u2751 0039  
                           u2671 0E16                             u2831 042B                             u3800 05E8  
                           u2920 09FF                             u3560 0C0E                             u3480 0BA1  
                           u3720 14EA                             u2760 0043                             u2680 0E2A  
                           u2840 0445                             u3801 05E7                             u2921 09FE  
                           u4257 0CA4                             u3561 0C0D                             u3545 0BFE  
                           u3481 0BA0                             u3721 14E9                             u4177 0B73  
                           u4097 0B06                             u2761 0042                             u2681 0E29  
                           u2841 0444                             u3810 05ED                             u2930 0A12  
                           u3650 0C67                             u3570 0C12                             u3490 0BC1  
                           u3730 14F8                             u2770 0049                             u2690 0EBF  
                           u2850 0499                             u3811 05EC                             u2931 0A11  
                           u4267 0CB8                             u3651 0C66                             u3571 0C11  
                           u3491 0BC0                             u3715 0934                             u3731 14F7  
                           u4187 0B84                             u2595 016E                             u2771 0048  
                           u2691 0EBE                             u2851 0498                             u3900 0744  
                           u3740 059C                             u2940 0A26                             u3660 0C72  
                           u3580 0C26                             u2780 0059                             u2860 04E5  
                           u3901 0743                             u3741 059B                             u2941 0A25  
                           u4277 0CC1                             u3661 0C71                             u4197 0B92  
                           u2781 0058                             u2685 0E26                             u2861 04E4  
                           u3910 0749                             u3750 05A2                             u2950 0A3B  
                           u3590 0C35                             u2870 0546                             u3911 0748  
                           u3751 05A1                             u2951 0A3A                             u3591 0C34  
                           u2871 0545                             u3920 075D                             u3840 06F5  
                           u3760 05A7                             u2880 09AF                             u3680 0CB2  
                           u2960 146B                             u3921 075C                             u3825 066C  
                           u3761 05A6                             u2881 09AE                             u3681 0CB1  
                           u3585 0C22                             u2961 146A                             u3930 0764  
                           u3850 070C                             u3770 05C6                             u2890 09C2  
                           u3690 0CCE                             u2970 13FD                             u3931 0763  
                           u3835 069B                             u3771 05C5                             u2891 09C1  
                           u3691 0CCD                             u3675 0C79                             u2795 1561  
                           u2971 13FC                             u3940 076A                             u3780 05CC  
                           u2980 1667                             u3941 0769                             u3845 06F1  
                           u3781 05CB                             u2981 1666                             u3950 0776  
                           u3790 05D1                             u3951 0775                             u3855 0708  
                           u3791 05D0                             u3960 0784                             u3880 0734  
                           u3881 0733                             u3865 0717                             u3970 079F  
                           u3971 079E                             u3875 072A                             u2995 166B  
                           u3980 07B7                             u3981 07B6                             u3965 0780  
                           u3990 07D3                             u3991 07D2                             u3975 079B  
                           u3895 0736                             u3985 07B3                             _WPUB 020D  
                           _WPUE 0210                             abs@a 0073                             _dbuf 012F  
                ??_lcd_backlight 0073                             _main 16B1                             _dtoa 006A  
                           _prec 012D                             _nout 0129                             pad@i 0027  
                           pad@p 0025                             fsr0h 0005                             fsr1h 0007  
                           indf0 0000                             fsr0l 0004                             indf1 0001  
                           fsr1l 0006                             pad@w 0029                             btemp 007E  
                           _utoa 0E10                             start 0002                  ___fldiv@new_exp 0032  
                ?_lcd_print_with 0026                            ??_abs 0075                            ??_pad 007C  
 __size_of_OSCILLATOR_Initialize 0007    __end_of_OSCILLATOR_Initialize 12B5                    ___fltol@sign1 005D  
                __end_of___aodiv 1000                            ?_main 0070                            ?_dtoa 0030  
                __end_of___aomod 0E10                  __end_of___fldiv 0390                            STR_11 1835  
                          STR_13 1835                            STR_16 1838                            STR_18 1838  
                __end_of___flmul 07E5                  __end_of___fltol 1800                  __end_of___lldiv 16B1  
                          ?_utoa 0030                  __end_of___lodiv 090C                  __end_of___lomod 178B  
                   vfpfcnvrt@fmt 004E                     vfpfcnvrt@llu 0064                            _TRISA 008C  
                          _TRISB 008D                            _TRISC 008E                            _TRISE 0090  
                   main@loadcell 00DC           scale_convert_gram@temp 0067                     lcd_print@cmd 0020  
                   lcd_print@str 007A                  __end_of_lcd_cmd 1317                  __end_of_command 15A5  
                          _flags 00ED                   _WDT_Initialize 129E                            _fputc 14FF  
                          _fputs 1426                            pad@fp 002B                            _width 012B  
                          _putch 129D                            dtoa@d 0030                            dtoa@i 004C  
                          dtoa@n 0044                            dtoa@p 003D                            dtoa@s 0042  
                          dtoa@w 0040         __size_of_calc_percentage 00A5                            utoa@d 0030  
                          utoa@i 0045                            utoa@n 003D                            utoa@p 0038  
                          utoa@w 003B                            status 0003               _scale_convert_gram 090C  
                          wtemp0 007E                  __end_of_sprintf 1426       __size_of_set_CELL_CLK_HIGH 000A  
                __end_of_strncmp 006A                 ___lodiv@dividend 0028                  ??_get_scale_val 0024  
                __initialization 07E5              ?_scale_convert_gram 0070                     __end_of_main 171A  
                   __end_of_dtoa 01DC                    command@lownib 0078                     __end_of_utoa 0EFF  
               __end_of_i2c_wait 080C                 __end_of_i2c_stop 12BC                           ??_main 00D6  
                         ??_dtoa 0038                           ??_utoa 007D                 ___lodiv@quotient 0071  
         __end_of_WDT_Initialize 12A2             ??_scale_convert_gram 005F                get_CELL_DAT_VAL@p 0075  
                         ?_fputc 0070                           ?_fputs 0078                           _APFCON 011D  
                         _ANSELA 018C                           ?_putch 0070                           _ANSELB 018D  
                         _BORCON 0116                           _OSCCON 0099                set_CELL_CLK_LOW@p 0071  
                         u230lld 0D7B                           u217lld 0F29                           u226lld 0FEE  
                         u219lld 0F54                           u236lld 0DFE                           u228lld 0D50  
                         u254lld 00B3                           _WDTCON 0097                           _SSPADD 0212  
                         _SSPBUF 0211               __size_of_i2c_start 000A                 __end_of___xxtofl 0C43  
             __size_of_i2c_write 0010         __end_of_get_CELL_DAT_VAL 0A49                     vfprintf@cfmt 00A3  
               __end_of_lcd_init 0B97                        ??___aodiv 0070                        ??___aomod 0070  
                      ??___fldiv 0028                        ??___flmul 0042                        ??___fltol 0058  
                      ??___lldiv 0078                        ??___lodiv 0070                        ??___lomod 0070  
               calc_percentage@p 006C                           pad@buf 0024                        ??_lcd_cmd 0072  
                         dtoa@fp 003F                        ??_command 0075                           _strlen 1349  
                         fputc@c 0070                           fputs@c 0020                           fputs@i 0021  
                         fputs@s 0023               __size_of__Umul8_16 0023                  ?_WDT_Initialize 0070  
                    initialize@p 00C4                           putch@c 0070                 __end_of_vfprintf 14C1  
                         utoa@fp 003A                        ??_sprintf 00AB                        ??_strncmp 0076  
                   ___xxtofl@arg 007A                     ___xxtofl@exp 0079                _SYSTEM_Initialize 12BC  
                   ___xxtofl@val 0070          __end_of__initialization 07FD               ?_SYSTEM_Initialize 0070  
                 print_gram@row1 00B5                   print_gram@row2 00C5                       ___fltol@f1 0054  
      __size_of_set_CELL_CLK_LOW 000A                   command@highnib 0077                   __pcstackCOMMON 0070  
              ??_calc_percentage 00A0                     __pidataBANK2 1399              ??_SYSTEM_Initialize 0070  
                  __end_of_fputc 154E                    __end_of_fputs 144F                    __end_of_putch 129E  
                 get_scale_val@i 0031                   get_scale_val@j 002C                   get_scale_val@p 0032  
              __end_of_i2c_start 000E                 ??_lcd_set_cursor 007C                __end_of_i2c_write 12EA  
                 _OPTION_REGbits 0095               __size_of_lcd_clear 003E               __size_of_lcd_print 0024  
                        ??_fputc 0073        __end_of_SYSTEM_Initialize 12C6                          ??_fputs 0079  
                        ??_putch 0070                       __pbssBANK1 00ED                       __pbssBANK2 0120  
               ??_lcd_print_with 002A                        ?_i2c_wait 0070                        ?_i2c_stop 0070  
              lcd_print_with@col 0028                lcd_print_with@row 0029                lcd_print_with@str 0026  
              __end_of__Umul8_16 13DA                       __pmaintext 16B1                          ?_strlen 0070  
             set_CELL_CLK_HIGH@p 0071                        ?___xxtofl 0070               __size_of_vfpfcnvrt 01FE  
                        _OSCTUNE 0098                          _SSPCON1 0215                          _SSPCON2 0216  
                      ?_lcd_init 0070                          _SSPSTAT 0214                 ___lomod@dividend 0028  
                     ??_i2c_wait 0070                       ??_i2c_stop 0070            __end_of_lcd_backlight 1300  
              __end_of_lcd_clear 14FF                          ___aodiv 0EFF                __end_of_lcd_print 13FE  
                        ___aomod 0D26                          ___fldiv 01DC                          ___flmul 058E  
                        ___fltol 178B                          ___lldiv 1657                          ___lodiv 0888  
                        ___lomod 171A                        ?_vfprintf 006D                       _initialize 080C  
                        __ptext1 15FE                          __ptext2 080C                          __ptext3 13FE  
                        __ptext4 1488                          __ptext5 0390                          __ptext6 0E10  
                        __ptext7 171A                          __ptext8 0888                          __ptext9 000E  
                        _lcd_cmd 1300                          _command 154E                  __size_of_strlen 001A  
          _OSCILLATOR_Initialize 12AE                     __size_of_abs 001A                     __size_of_pad 0059  
                     ??___xxtofl 0074                          _segdata 015B         ??_PIN_MANAGER_Initialize 0070  
                        main@lcd 00D8       __size_of_SYSTEM_Initialize 000A                          _sprintf 13FE  
                        clrloop0 12A3                       ??_lcd_init 0076                          _strncmp 000E  
           end_of_initialization 07FD               clear_segment@F2765 0125                          fputc@fp 0072  
                        init_ram 12A8                          fputs@fp 0078                          initloop 12A9  
                ___lldiv@divisor 0070                  ___lldiv@counter 007D            __end_of_get_scale_val 0D26  
               _set_CELL_CLK_LOW 12D0                ?_get_CELL_DAT_VAL 0070                __end_of_vfpfcnvrt 058E  
             ??_get_CELL_DAT_VAL 0072                       ??_vfprintf 00A0                          strlen@a 0073  
                        strlen@s 0074                 ??_WDT_Initialize 0070                        _PORTAbits 000C  
                      _PORTBbits 000D                     _m_brightness 00EF                       _print_gram 15FE  
                  i2c_write@data 0070        lcd_set_cursor@row_offsets 0020                    ___xxtofl@sign 0078  
                     lcd_cmd@cmd 0071      __size_of_scale_convert_gram 009A                      ___fldiv@grs 0034  
                    ___fldiv@rem 002D                       lcd_clear@p 002A                 initialize@valstr 00B4  
                _calc_percentage 0A49                      ___flmul@grs 0048                       command@val 0073  
                     lcd_print@p 0021                      print_gram@p 00D5                       _write4bits 137E  
                    vfpfcnvrt@ap 004F                      vfpfcnvrt@fp 006C                      vfpfcnvrt@ll 005C  
                    ?_initialize 0070           ?_OSCILLATOR_Initialize 0070                   __end_of_strlen 1363  
            start_initialization 07E5                  ___lodiv@divisor 0020                  ___lodiv@counter 0079  
__size_of_PIN_MANAGER_Initialize 001B                      __end_of_abs 1349                        _i2c_start 0004  
                    __end_of_pad 15FE                        _i2c_write 12DA                __size_of_i2c_wait 000C  
              __size_of_i2c_stop 0007                      vfprintf@fmt 006D                        __Umul8_16 13B7  
        get_scale_val@weight_add 0028                      __pdataBANK2 014F                         ??_strlen 0072  
                    ?_print_gram 0070                        ___fldiv@a 0020                        ___fldiv@b 0024  
            lcd_set_cursor@F2781 0165                        ___flmul@a 003E                        ___flmul@b 003A  
                      ___latbits 0003          __end_of_calc_percentage 0AEE                    __pcstackBANK0 0020  
                  __pcstackBANK1 00A0                 ___aodiv@dividend 0028                       ?_i2c_start 0070  
                     ?_i2c_write 0070                __size_of___xxtofl 00AC                __size_of_lcd_init 00A9  
            __size_of_initialize 007C           _PIN_MANAGER_Initialize 1363                        _dtoa$1179 003B  
                    ?_write4bits 0073                         ?___aodiv 0020                         ?___aomod 0020  
                       ?___fldiv 0020                 ___aodiv@quotient 0073                         ?___flmul 003A  
                       ?___fltol 0054                         ?___lldiv 0070                         ?___lodiv 0020  
                       ?___lomod 0020                       ?__Umul8_16 0070                        _lcd_clear 14C1  
                      _lcd_print 13DA                         ?_lcd_cmd 0071                __size_of_vfprintf 0039  
                       ?_command 0073                  ___lomod@divisor 0020                  ___lomod@counter 0071  
       __end_of_set_CELL_CLK_LOW 12DA                         ?_sprintf 00A5                   __size_of_fputc 004F  
                 __size_of_fputs 0029                         ?_strncmp 0070                   __size_of_putch 0001  
        __size_of_lcd_set_cursor 0039                      write4bits@p 0075     get_scale_val@scale_avg_count 0020  
                      clear_ram0 12A2                  lcd_set_cursor@p 0025              __size_of_print_gram 0059  
                      main@F2800 014F                        main@F2802 0169                        main@F2804 0120  
        __size_of_lcd_print_with 0018                       ?_lcd_clear 0070                        _vfpfcnvrt 0390  
                     ?_lcd_print 007A                        lcd_init@p 0078                        main@drink 00E8  
            scale_convert_gram@p 006B        __size_of_get_CELL_DAT_VAL 00A3           __size_of_lcd_backlight 0016  
               ?_calc_percentage 0070                      ??_i2c_start 0070                      ??_i2c_write 0070  
            __size_of_write4bits 001B                         _i2c_wait 0800                         _i2c_stop 12B5  
                     vfprintf@ap 006F                       vfprintf@fp 00A2          ??_OSCILLATOR_Initialize 0070  
                    ??__Umul8_16 0072                 __size_of___aodiv 0101                 __size_of___aomod 00EA  
               __size_of___fldiv 01B4                 __size_of___flmul 0257                 __size_of___fltol 0075  
               __size_of___lldiv 005A                 __size_of___lodiv 0084                 __size_of___lomod 0071  
                     ?_vfpfcnvrt 004E                     ??_initialize 00B3                  ___aodiv@divisor 0020  
                ___aodiv@counter 0071                 __size_of_lcd_cmd 0017                 __size_of_command 0057  
                     sprintf@fmt 00A5       __end_of_scale_convert_gram 09A6                         ___xxtofl 0B97  
                lcd_print_with@p 007D           __size_of_get_scale_val 00E3                         __ptext10 006A  
                       __ptext11 15A5                         __ptext20 0AEE                         __ptext12 1349  
                       __ptext21 137E                         __ptext13 1426                         __ptext30 0004  
                       __ptext22 14C1                         __ptext14 14FF                         __ptext31 0800  
                       __ptext23 144F                         __ptext15 129D                         __ptext40 09A6  
                       __ptext32 0A49                         __ptext24 13DA                         __ptext16 132F  
                       __ptext41 1657                         __ptext33 090C                         __ptext25 154E  
                       __ptext17 0D26                         __ptext42 058E                         __ptext34 0B97  
                       __ptext26 12EA                         __ptext18 0EFF                         __ptext43 13B7  
                       __ptext35 178B                         __ptext27 1300                         __ptext19 1317  
                       __ptext44 12BC                         __ptext36 01DC                         __ptext28 12DA  
                       __ptext45 129E                         __ptext37 0C43                         __ptext29 12B5  
                       __ptext46 1363                         __ptext38 12D0                         __ptext47 12AE  
                       __ptext39 12C6                         _lcd_init 0AEE                 __size_of_sprintf 0028  
               __size_of_strncmp 005C                    __size_of_main 0069                    __size_of_dtoa 0172  
                  __size_of_utoa 00EF               __end_of_initialize 0888                    write4bits@val 0073  
                  _lcd_backlight 12EA                         lcd_cmd@p 0072                         _vfprintf 1488  
                       command@p 0079                      ??_lcd_clear 0026                      ??_lcd_print 007C  
               ___aomod@dividend 0028                     ??_print_gram 00B3                   __pstringtext10 0000  
        __size_of_WDT_Initialize 0004                   _lcd_set_cursor 144F                lcd_set_cursor@cmd 0024  
              lcd_set_cursor@col 007A                        sprintf@ap 00AD                lcd_set_cursor@row 007B  
               ___lldiv@dividend 0074          ?_PIN_MANAGER_Initialize 0070                   ?_lcd_backlight 0070  
                      strncmp@_l 0070                        strncmp@_r 0072                _set_CELL_CLK_HIGH 12C6  
             __end_of_print_gram 1657                     ??_write4bits 0074                    _get_scale_val 0C43  
                 _lcd_print_with 1317               ?_set_CELL_CLK_HIGH 0070                  ___aomod@divisor 0020  
                    ??_vfpfcnvrt 0050                  ___aomod@counter 0071                    __pstringtext1 1800  
                  __pstringtext2 180F                    __pstringtext3 181A                    __pstringtext4 1824  
                  __pstringtext5 182C                    __pstringtext6 1832                    __pstringtext7 1835  
                  __pstringtext8 1838                    __pstringtext9 183B              ??_set_CELL_CLK_HIGH 0070  
         __Umul8_16@multiplicand 0070                         sprintf@f 00AE                         sprintf@s 00AC  
               ___lldiv@quotient 0079                 _get_CELL_DAT_VAL 09A6                         strncmp@l 0077  
                       strncmp@n 0074                         strncmp@r 0079                      _SSPCON1bits 0215  
                    _SSPCON2bits 0216                ?_set_CELL_CLK_LOW 0070           __end_of_lcd_set_cursor 1488  
             ??_set_CELL_CLK_LOW 0070               __end_of_write4bits 1399                     ___aodiv@sign 0072  
 __end_of_PIN_MANAGER_Initialize 137E        __end_of_set_CELL_CLK_HIGH 12D0             __Umul8_16@multiplier 0078  
                 lcd_backlight@p 0074                     ___aomod@sign 0072           __end_of_lcd_print_with 132F  
                 ?_get_scale_val 0020                __Umul8_16@product 0074  

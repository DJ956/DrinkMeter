

Microchip MPLAB XC8 Assembler V2.30 build 20200825195618 
                                                                                               Thu Oct 21 22:08:50 2021

Microchip MPLAB XC8 C Compiler v2.30 (Free license) build 20200825195618 Og1 
     1                           	processor	16F1827
     2                           	pagewidth 120
     3                           	opt	flic
     4                           	psect	idataBANK0,global,class=CODE,delta=2,noexec
     5                           	psect	cinit,global,class=CODE,merge=1,delta=2
     6                           	psect	bssCOMMON,global,class=COMMON,space=1,delta=1,noexec
     7                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,noexec
     8                           	psect	dataBANK0,global,class=BANK0,space=1,delta=1,noexec
     9                           	psect	inittext,global,class=CODE,delta=2
    10                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1,noexec
    11                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,noexec
    12                           	psect	maintext,global,class=CODE,merge=1,split=1,delta=2
    13                           	psect	text1,local,class=CODE,merge=1,delta=2
    14                           	psect	text2,local,class=CODE,merge=1,delta=2
    15                           	psect	text3,local,class=CODE,merge=1,delta=2
    16                           	psect	text4,local,class=CODE,merge=1,delta=2
    17                           	psect	text5,local,class=CODE,merge=1,delta=2
    18                           	psect	text6,local,class=CODE,merge=1,delta=2
    19                           	psect	text7,local,class=CODE,merge=1,delta=2
    20                           	psect	text8,local,class=CODE,merge=1,delta=2
    21                           	psect	text9,local,class=CODE,merge=1,delta=2
    22                           	psect	text10,local,class=CODE,merge=1,delta=2
    23                           	psect	text11,local,class=CODE,merge=1,delta=2
    24                           	psect	text12,local,class=CODE,merge=1,delta=2
    25                           	psect	text13,local,class=CODE,merge=1,delta=2
    26                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=2,noexec
    27                           	dabs	1,0x7E,2
    28  0000                     
    29                           ; Version 2.30
    30                           ; Generated 26/08/2020 GMT
    31                           ; 
    32                           ; Copyright Â© 2020, Microchip Technology Inc. and its subsidiaries ("Microchip")
    33                           ; All rights reserved.
    34                           ; 
    35                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    36                           ; 
    37                           ; Redistribution and use in source and binary forms, with or without modification, are
    38                           ; permitted provided that the following conditions are met:
    39                           ; 
    40                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    41                           ;        conditions and the following disclaimer.
    42                           ; 
    43                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    44                           ;        of conditions and the following disclaimer in the documentation and/or other
    45                           ;        materials provided with the distribution. Publication is not required when
    46                           ;        this file is used in an embedded application.
    47                           ; 
    48                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    49                           ;        software without specific prior written permission.
    50                           ; 
    51                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    52                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    53                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    54                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    55                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    56                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    57                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    58                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    59                           ; 
    60                           ; 
    61                           ; Code-generator required, PIC16F1827 Definitions
    62                           ; 
    63                           ; SFR Addresses
    64  0000                     	;# 
    65  0001                     	;# 
    66  0002                     	;# 
    67  0003                     	;# 
    68  0004                     	;# 
    69  0005                     	;# 
    70  0006                     	;# 
    71  0007                     	;# 
    72  0008                     	;# 
    73  0009                     	;# 
    74  000A                     	;# 
    75  000B                     	;# 
    76  000C                     	;# 
    77  000D                     	;# 
    78  0011                     	;# 
    79  0012                     	;# 
    80  0013                     	;# 
    81  0014                     	;# 
    82  0015                     	;# 
    83  0016                     	;# 
    84  0016                     	;# 
    85  0017                     	;# 
    86  0018                     	;# 
    87  0019                     	;# 
    88  001A                     	;# 
    89  001B                     	;# 
    90  001C                     	;# 
    91  001E                     	;# 
    92  001F                     	;# 
    93  008C                     	;# 
    94  008D                     	;# 
    95  0091                     	;# 
    96  0092                     	;# 
    97  0093                     	;# 
    98  0094                     	;# 
    99  0095                     	;# 
   100  0096                     	;# 
   101  0097                     	;# 
   102  0098                     	;# 
   103  0099                     	;# 
   104  009A                     	;# 
   105  009B                     	;# 
   106  009B                     	;# 
   107  009C                     	;# 
   108  009D                     	;# 
   109  009E                     	;# 
   110  010C                     	;# 
   111  010D                     	;# 
   112  0111                     	;# 
   113  0112                     	;# 
   114  0113                     	;# 
   115  0114                     	;# 
   116  0115                     	;# 
   117  0116                     	;# 
   118  0117                     	;# 
   119  0118                     	;# 
   120  0119                     	;# 
   121  011A                     	;# 
   122  011B                     	;# 
   123  011D                     	;# 
   124  011E                     	;# 
   125  018C                     	;# 
   126  018D                     	;# 
   127  0191                     	;# 
   128  0191                     	;# 
   129  0192                     	;# 
   130  0193                     	;# 
   131  0193                     	;# 
   132  0193                     	;# 
   133  0194                     	;# 
   134  0195                     	;# 
   135  0196                     	;# 
   136  0199                     	;# 
   137  019A                     	;# 
   138  019B                     	;# 
   139  019B                     	;# 
   140  019B                     	;# 
   141  019B                     	;# 
   142  019C                     	;# 
   143  019C                     	;# 
   144  019D                     	;# 
   145  019E                     	;# 
   146  019F                     	;# 
   147  020C                     	;# 
   148  020D                     	;# 
   149  0211                     	;# 
   150  0211                     	;# 
   151  0212                     	;# 
   152  0212                     	;# 
   153  0213                     	;# 
   154  0213                     	;# 
   155  0214                     	;# 
   156  0214                     	;# 
   157  0215                     	;# 
   158  0215                     	;# 
   159  0215                     	;# 
   160  0216                     	;# 
   161  0216                     	;# 
   162  0217                     	;# 
   163  0217                     	;# 
   164  0219                     	;# 
   165  021A                     	;# 
   166  021B                     	;# 
   167  021C                     	;# 
   168  021D                     	;# 
   169  021E                     	;# 
   170  021F                     	;# 
   171  0291                     	;# 
   172  0291                     	;# 
   173  0292                     	;# 
   174  0293                     	;# 
   175  0294                     	;# 
   176  0295                     	;# 
   177  0295                     	;# 
   178  0296                     	;# 
   179  0298                     	;# 
   180  0298                     	;# 
   181  0299                     	;# 
   182  029A                     	;# 
   183  029B                     	;# 
   184  029C                     	;# 
   185  029C                     	;# 
   186  029D                     	;# 
   187  029E                     	;# 
   188  029E                     	;# 
   189  0311                     	;# 
   190  0311                     	;# 
   191  0312                     	;# 
   192  0313                     	;# 
   193  0318                     	;# 
   194  0318                     	;# 
   195  0319                     	;# 
   196  031A                     	;# 
   197  0394                     	;# 
   198  0395                     	;# 
   199  0396                     	;# 
   200  039A                     	;# 
   201  039C                     	;# 
   202  039D                     	;# 
   203  039E                     	;# 
   204  039F                     	;# 
   205  0415                     	;# 
   206  0416                     	;# 
   207  0417                     	;# 
   208  041C                     	;# 
   209  041D                     	;# 
   210  041E                     	;# 
   211  0FE4                     	;# 
   212  0FE5                     	;# 
   213  0FE6                     	;# 
   214  0FE7                     	;# 
   215  0FE8                     	;# 
   216  0FE9                     	;# 
   217  0FEA                     	;# 
   218  0FEB                     	;# 
   219  0FED                     	;# 
   220  0FEE                     	;# 
   221  0FEF                     	;# 
   222  0000                     	;# 
   223  0001                     	;# 
   224  0002                     	;# 
   225  0003                     	;# 
   226  0004                     	;# 
   227  0005                     	;# 
   228  0006                     	;# 
   229  0007                     	;# 
   230  0008                     	;# 
   231  0009                     	;# 
   232  000A                     	;# 
   233  000B                     	;# 
   234  000C                     	;# 
   235  000D                     	;# 
   236  0011                     	;# 
   237  0012                     	;# 
   238  0013                     	;# 
   239  0014                     	;# 
   240  0015                     	;# 
   241  0016                     	;# 
   242  0016                     	;# 
   243  0017                     	;# 
   244  0018                     	;# 
   245  0019                     	;# 
   246  001A                     	;# 
   247  001B                     	;# 
   248  001C                     	;# 
   249  001E                     	;# 
   250  001F                     	;# 
   251  008C                     	;# 
   252  008D                     	;# 
   253  0091                     	;# 
   254  0092                     	;# 
   255  0093                     	;# 
   256  0094                     	;# 
   257  0095                     	;# 
   258  0096                     	;# 
   259  0097                     	;# 
   260  0098                     	;# 
   261  0099                     	;# 
   262  009A                     	;# 
   263  009B                     	;# 
   264  009B                     	;# 
   265  009C                     	;# 
   266  009D                     	;# 
   267  009E                     	;# 
   268  010C                     	;# 
   269  010D                     	;# 
   270  0111                     	;# 
   271  0112                     	;# 
   272  0113                     	;# 
   273  0114                     	;# 
   274  0115                     	;# 
   275  0116                     	;# 
   276  0117                     	;# 
   277  0118                     	;# 
   278  0119                     	;# 
   279  011A                     	;# 
   280  011B                     	;# 
   281  011D                     	;# 
   282  011E                     	;# 
   283  018C                     	;# 
   284  018D                     	;# 
   285  0191                     	;# 
   286  0191                     	;# 
   287  0192                     	;# 
   288  0193                     	;# 
   289  0193                     	;# 
   290  0193                     	;# 
   291  0194                     	;# 
   292  0195                     	;# 
   293  0196                     	;# 
   294  0199                     	;# 
   295  019A                     	;# 
   296  019B                     	;# 
   297  019B                     	;# 
   298  019B                     	;# 
   299  019B                     	;# 
   300  019C                     	;# 
   301  019C                     	;# 
   302  019D                     	;# 
   303  019E                     	;# 
   304  019F                     	;# 
   305  020C                     	;# 
   306  020D                     	;# 
   307  0211                     	;# 
   308  0211                     	;# 
   309  0212                     	;# 
   310  0212                     	;# 
   311  0213                     	;# 
   312  0213                     	;# 
   313  0214                     	;# 
   314  0214                     	;# 
   315  0215                     	;# 
   316  0215                     	;# 
   317  0215                     	;# 
   318  0216                     	;# 
   319  0216                     	;# 
   320  0217                     	;# 
   321  0217                     	;# 
   322  0219                     	;# 
   323  021A                     	;# 
   324  021B                     	;# 
   325  021C                     	;# 
   326  021D                     	;# 
   327  021E                     	;# 
   328  021F                     	;# 
   329  0291                     	;# 
   330  0291                     	;# 
   331  0292                     	;# 
   332  0293                     	;# 
   333  0294                     	;# 
   334  0295                     	;# 
   335  0295                     	;# 
   336  0296                     	;# 
   337  0298                     	;# 
   338  0298                     	;# 
   339  0299                     	;# 
   340  029A                     	;# 
   341  029B                     	;# 
   342  029C                     	;# 
   343  029C                     	;# 
   344  029D                     	;# 
   345  029E                     	;# 
   346  029E                     	;# 
   347  0311                     	;# 
   348  0311                     	;# 
   349  0312                     	;# 
   350  0313                     	;# 
   351  0318                     	;# 
   352  0318                     	;# 
   353  0319                     	;# 
   354  031A                     	;# 
   355  0394                     	;# 
   356  0395                     	;# 
   357  0396                     	;# 
   358  039A                     	;# 
   359  039C                     	;# 
   360  039D                     	;# 
   361  039E                     	;# 
   362  039F                     	;# 
   363  0415                     	;# 
   364  0416                     	;# 
   365  0417                     	;# 
   366  041C                     	;# 
   367  041D                     	;# 
   368  041E                     	;# 
   369  0FE4                     	;# 
   370  0FE5                     	;# 
   371  0FE6                     	;# 
   372  0FE7                     	;# 
   373  0FE8                     	;# 
   374  0FE9                     	;# 
   375  0FEA                     	;# 
   376  0FEB                     	;# 
   377  0FED                     	;# 
   378  0FEE                     	;# 
   379  0FEF                     	;# 
   380  0000                     	;# 
   381  0001                     	;# 
   382  0002                     	;# 
   383  0003                     	;# 
   384  0004                     	;# 
   385  0005                     	;# 
   386  0006                     	;# 
   387  0007                     	;# 
   388  0008                     	;# 
   389  0009                     	;# 
   390  000A                     	;# 
   391  000B                     	;# 
   392  000C                     	;# 
   393  000D                     	;# 
   394  0011                     	;# 
   395  0012                     	;# 
   396  0013                     	;# 
   397  0014                     	;# 
   398  0015                     	;# 
   399  0016                     	;# 
   400  0016                     	;# 
   401  0017                     	;# 
   402  0018                     	;# 
   403  0019                     	;# 
   404  001A                     	;# 
   405  001B                     	;# 
   406  001C                     	;# 
   407  001E                     	;# 
   408  001F                     	;# 
   409  008C                     	;# 
   410  008D                     	;# 
   411  0091                     	;# 
   412  0092                     	;# 
   413  0093                     	;# 
   414  0094                     	;# 
   415  0095                     	;# 
   416  0096                     	;# 
   417  0097                     	;# 
   418  0098                     	;# 
   419  0099                     	;# 
   420  009A                     	;# 
   421  009B                     	;# 
   422  009B                     	;# 
   423  009C                     	;# 
   424  009D                     	;# 
   425  009E                     	;# 
   426  010C                     	;# 
   427  010D                     	;# 
   428  0111                     	;# 
   429  0112                     	;# 
   430  0113                     	;# 
   431  0114                     	;# 
   432  0115                     	;# 
   433  0116                     	;# 
   434  0117                     	;# 
   435  0118                     	;# 
   436  0119                     	;# 
   437  011A                     	;# 
   438  011B                     	;# 
   439  011D                     	;# 
   440  011E                     	;# 
   441  018C                     	;# 
   442  018D                     	;# 
   443  0191                     	;# 
   444  0191                     	;# 
   445  0192                     	;# 
   446  0193                     	;# 
   447  0193                     	;# 
   448  0193                     	;# 
   449  0194                     	;# 
   450  0195                     	;# 
   451  0196                     	;# 
   452  0199                     	;# 
   453  019A                     	;# 
   454  019B                     	;# 
   455  019B                     	;# 
   456  019B                     	;# 
   457  019B                     	;# 
   458  019C                     	;# 
   459  019C                     	;# 
   460  019D                     	;# 
   461  019E                     	;# 
   462  019F                     	;# 
   463  020C                     	;# 
   464  020D                     	;# 
   465  0211                     	;# 
   466  0211                     	;# 
   467  0212                     	;# 
   468  0212                     	;# 
   469  0213                     	;# 
   470  0213                     	;# 
   471  0214                     	;# 
   472  0214                     	;# 
   473  0215                     	;# 
   474  0215                     	;# 
   475  0215                     	;# 
   476  0216                     	;# 
   477  0216                     	;# 
   478  0217                     	;# 
   479  0217                     	;# 
   480  0219                     	;# 
   481  021A                     	;# 
   482  021B                     	;# 
   483  021C                     	;# 
   484  021D                     	;# 
   485  021E                     	;# 
   486  021F                     	;# 
   487  0291                     	;# 
   488  0291                     	;# 
   489  0292                     	;# 
   490  0293                     	;# 
   491  0294                     	;# 
   492  0295                     	;# 
   493  0295                     	;# 
   494  0296                     	;# 
   495  0298                     	;# 
   496  0298                     	;# 
   497  0299                     	;# 
   498  029A                     	;# 
   499  029B                     	;# 
   500  029C                     	;# 
   501  029C                     	;# 
   502  029D                     	;# 
   503  029E                     	;# 
   504  029E                     	;# 
   505  0311                     	;# 
   506  0311                     	;# 
   507  0312                     	;# 
   508  0313                     	;# 
   509  0318                     	;# 
   510  0318                     	;# 
   511  0319                     	;# 
   512  031A                     	;# 
   513  0394                     	;# 
   514  0395                     	;# 
   515  0396                     	;# 
   516  039A                     	;# 
   517  039C                     	;# 
   518  039D                     	;# 
   519  039E                     	;# 
   520  039F                     	;# 
   521  0415                     	;# 
   522  0416                     	;# 
   523  0417                     	;# 
   524  041C                     	;# 
   525  041D                     	;# 
   526  041E                     	;# 
   527  0FE4                     	;# 
   528  0FE5                     	;# 
   529  0FE6                     	;# 
   530  0FE7                     	;# 
   531  0FE8                     	;# 
   532  0FE9                     	;# 
   533  0FEA                     	;# 
   534  0FEB                     	;# 
   535  0FED                     	;# 
   536  0FEE                     	;# 
   537  0FEF                     	;# 
   538  0000                     	;# 
   539  0001                     	;# 
   540  0002                     	;# 
   541  0003                     	;# 
   542  0004                     	;# 
   543  0005                     	;# 
   544  0006                     	;# 
   545  0007                     	;# 
   546  0008                     	;# 
   547  0009                     	;# 
   548  000A                     	;# 
   549  000B                     	;# 
   550  000C                     	;# 
   551  000D                     	;# 
   552  0011                     	;# 
   553  0012                     	;# 
   554  0013                     	;# 
   555  0014                     	;# 
   556  0015                     	;# 
   557  0016                     	;# 
   558  0016                     	;# 
   559  0017                     	;# 
   560  0018                     	;# 
   561  0019                     	;# 
   562  001A                     	;# 
   563  001B                     	;# 
   564  001C                     	;# 
   565  001E                     	;# 
   566  001F                     	;# 
   567  008C                     	;# 
   568  008D                     	;# 
   569  0091                     	;# 
   570  0092                     	;# 
   571  0093                     	;# 
   572  0094                     	;# 
   573  0095                     	;# 
   574  0096                     	;# 
   575  0097                     	;# 
   576  0098                     	;# 
   577  0099                     	;# 
   578  009A                     	;# 
   579  009B                     	;# 
   580  009B                     	;# 
   581  009C                     	;# 
   582  009D                     	;# 
   583  009E                     	;# 
   584  010C                     	;# 
   585  010D                     	;# 
   586  0111                     	;# 
   587  0112                     	;# 
   588  0113                     	;# 
   589  0114                     	;# 
   590  0115                     	;# 
   591  0116                     	;# 
   592  0117                     	;# 
   593  0118                     	;# 
   594  0119                     	;# 
   595  011A                     	;# 
   596  011B                     	;# 
   597  011D                     	;# 
   598  011E                     	;# 
   599  018C                     	;# 
   600  018D                     	;# 
   601  0191                     	;# 
   602  0191                     	;# 
   603  0192                     	;# 
   604  0193                     	;# 
   605  0193                     	;# 
   606  0193                     	;# 
   607  0194                     	;# 
   608  0195                     	;# 
   609  0196                     	;# 
   610  0199                     	;# 
   611  019A                     	;# 
   612  019B                     	;# 
   613  019B                     	;# 
   614  019B                     	;# 
   615  019B                     	;# 
   616  019C                     	;# 
   617  019C                     	;# 
   618  019D                     	;# 
   619  019E                     	;# 
   620  019F                     	;# 
   621  020C                     	;# 
   622  020D                     	;# 
   623  0211                     	;# 
   624  0211                     	;# 
   625  0212                     	;# 
   626  0212                     	;# 
   627  0213                     	;# 
   628  0213                     	;# 
   629  0214                     	;# 
   630  0214                     	;# 
   631  0215                     	;# 
   632  0215                     	;# 
   633  0215                     	;# 
   634  0216                     	;# 
   635  0216                     	;# 
   636  0217                     	;# 
   637  0217                     	;# 
   638  0219                     	;# 
   639  021A                     	;# 
   640  021B                     	;# 
   641  021C                     	;# 
   642  021D                     	;# 
   643  021E                     	;# 
   644  021F                     	;# 
   645  0291                     	;# 
   646  0291                     	;# 
   647  0292                     	;# 
   648  0293                     	;# 
   649  0294                     	;# 
   650  0295                     	;# 
   651  0295                     	;# 
   652  0296                     	;# 
   653  0298                     	;# 
   654  0298                     	;# 
   655  0299                     	;# 
   656  029A                     	;# 
   657  029B                     	;# 
   658  029C                     	;# 
   659  029C                     	;# 
   660  029D                     	;# 
   661  029E                     	;# 
   662  029E                     	;# 
   663  0311                     	;# 
   664  0311                     	;# 
   665  0312                     	;# 
   666  0313                     	;# 
   667  0318                     	;# 
   668  0318                     	;# 
   669  0319                     	;# 
   670  031A                     	;# 
   671  0394                     	;# 
   672  0395                     	;# 
   673  0396                     	;# 
   674  039A                     	;# 
   675  039C                     	;# 
   676  039D                     	;# 
   677  039E                     	;# 
   678  039F                     	;# 
   679  0415                     	;# 
   680  0416                     	;# 
   681  0417                     	;# 
   682  041C                     	;# 
   683  041D                     	;# 
   684  041E                     	;# 
   685  0FE4                     	;# 
   686  0FE5                     	;# 
   687  0FE6                     	;# 
   688  0FE7                     	;# 
   689  0FE8                     	;# 
   690  0FE9                     	;# 
   691  0FEA                     	;# 
   692  0FEB                     	;# 
   693  0FED                     	;# 
   694  0FEE                     	;# 
   695  0FEF                     	;# 
   696  0000                     	;# 
   697  0001                     	;# 
   698  0002                     	;# 
   699  0003                     	;# 
   700  0004                     	;# 
   701  0005                     	;# 
   702  0006                     	;# 
   703  0007                     	;# 
   704  0008                     	;# 
   705  0009                     	;# 
   706  000A                     	;# 
   707  000B                     	;# 
   708  000C                     	;# 
   709  000D                     	;# 
   710  0011                     	;# 
   711  0012                     	;# 
   712  0013                     	;# 
   713  0014                     	;# 
   714  0015                     	;# 
   715  0016                     	;# 
   716  0016                     	;# 
   717  0017                     	;# 
   718  0018                     	;# 
   719  0019                     	;# 
   720  001A                     	;# 
   721  001B                     	;# 
   722  001C                     	;# 
   723  001E                     	;# 
   724  001F                     	;# 
   725  008C                     	;# 
   726  008D                     	;# 
   727  0091                     	;# 
   728  0092                     	;# 
   729  0093                     	;# 
   730  0094                     	;# 
   731  0095                     	;# 
   732  0096                     	;# 
   733  0097                     	;# 
   734  0098                     	;# 
   735  0099                     	;# 
   736  009A                     	;# 
   737  009B                     	;# 
   738  009B                     	;# 
   739  009C                     	;# 
   740  009D                     	;# 
   741  009E                     	;# 
   742  010C                     	;# 
   743  010D                     	;# 
   744  0111                     	;# 
   745  0112                     	;# 
   746  0113                     	;# 
   747  0114                     	;# 
   748  0115                     	;# 
   749  0116                     	;# 
   750  0117                     	;# 
   751  0118                     	;# 
   752  0119                     	;# 
   753  011A                     	;# 
   754  011B                     	;# 
   755  011D                     	;# 
   756  011E                     	;# 
   757  018C                     	;# 
   758  018D                     	;# 
   759  0191                     	;# 
   760  0191                     	;# 
   761  0192                     	;# 
   762  0193                     	;# 
   763  0193                     	;# 
   764  0193                     	;# 
   765  0194                     	;# 
   766  0195                     	;# 
   767  0196                     	;# 
   768  0199                     	;# 
   769  019A                     	;# 
   770  019B                     	;# 
   771  019B                     	;# 
   772  019B                     	;# 
   773  019B                     	;# 
   774  019C                     	;# 
   775  019C                     	;# 
   776  019D                     	;# 
   777  019E                     	;# 
   778  019F                     	;# 
   779  020C                     	;# 
   780  020D                     	;# 
   781  0211                     	;# 
   782  0211                     	;# 
   783  0212                     	;# 
   784  0212                     	;# 
   785  0213                     	;# 
   786  0213                     	;# 
   787  0214                     	;# 
   788  0214                     	;# 
   789  0215                     	;# 
   790  0215                     	;# 
   791  0215                     	;# 
   792  0216                     	;# 
   793  0216                     	;# 
   794  0217                     	;# 
   795  0217                     	;# 
   796  0219                     	;# 
   797  021A                     	;# 
   798  021B                     	;# 
   799  021C                     	;# 
   800  021D                     	;# 
   801  021E                     	;# 
   802  021F                     	;# 
   803  0291                     	;# 
   804  0291                     	;# 
   805  0292                     	;# 
   806  0293                     	;# 
   807  0294                     	;# 
   808  0295                     	;# 
   809  0295                     	;# 
   810  0296                     	;# 
   811  0298                     	;# 
   812  0298                     	;# 
   813  0299                     	;# 
   814  029A                     	;# 
   815  029B                     	;# 
   816  029C                     	;# 
   817  029C                     	;# 
   818  029D                     	;# 
   819  029E                     	;# 
   820  029E                     	;# 
   821  0311                     	;# 
   822  0311                     	;# 
   823  0312                     	;# 
   824  0313                     	;# 
   825  0318                     	;# 
   826  0318                     	;# 
   827  0319                     	;# 
   828  031A                     	;# 
   829  0394                     	;# 
   830  0395                     	;# 
   831  0396                     	;# 
   832  039A                     	;# 
   833  039C                     	;# 
   834  039D                     	;# 
   835  039E                     	;# 
   836  039F                     	;# 
   837  0415                     	;# 
   838  0416                     	;# 
   839  0417                     	;# 
   840  041C                     	;# 
   841  041D                     	;# 
   842  041E                     	;# 
   843  0FE4                     	;# 
   844  0FE5                     	;# 
   845  0FE6                     	;# 
   846  0FE7                     	;# 
   847  0FE8                     	;# 
   848  0FE9                     	;# 
   849  0FEA                     	;# 
   850  0FEB                     	;# 
   851  0FED                     	;# 
   852  0FEE                     	;# 
   853  0FEF                     	;# 
   854  0000                     	;# 
   855  0001                     	;# 
   856  0002                     	;# 
   857  0003                     	;# 
   858  0004                     	;# 
   859  0005                     	;# 
   860  0006                     	;# 
   861  0007                     	;# 
   862  0008                     	;# 
   863  0009                     	;# 
   864  000A                     	;# 
   865  000B                     	;# 
   866  000C                     	;# 
   867  000D                     	;# 
   868  0011                     	;# 
   869  0012                     	;# 
   870  0013                     	;# 
   871  0014                     	;# 
   872  0015                     	;# 
   873  0016                     	;# 
   874  0016                     	;# 
   875  0017                     	;# 
   876  0018                     	;# 
   877  0019                     	;# 
   878  001A                     	;# 
   879  001B                     	;# 
   880  001C                     	;# 
   881  001E                     	;# 
   882  001F                     	;# 
   883  008C                     	;# 
   884  008D                     	;# 
   885  0091                     	;# 
   886  0092                     	;# 
   887  0093                     	;# 
   888  0094                     	;# 
   889  0095                     	;# 
   890  0096                     	;# 
   891  0097                     	;# 
   892  0098                     	;# 
   893  0099                     	;# 
   894  009A                     	;# 
   895  009B                     	;# 
   896  009B                     	;# 
   897  009C                     	;# 
   898  009D                     	;# 
   899  009E                     	;# 
   900  010C                     	;# 
   901  010D                     	;# 
   902  0111                     	;# 
   903  0112                     	;# 
   904  0113                     	;# 
   905  0114                     	;# 
   906  0115                     	;# 
   907  0116                     	;# 
   908  0117                     	;# 
   909  0118                     	;# 
   910  0119                     	;# 
   911  011A                     	;# 
   912  011B                     	;# 
   913  011D                     	;# 
   914  011E                     	;# 
   915  018C                     	;# 
   916  018D                     	;# 
   917  0191                     	;# 
   918  0191                     	;# 
   919  0192                     	;# 
   920  0193                     	;# 
   921  0193                     	;# 
   922  0193                     	;# 
   923  0194                     	;# 
   924  0195                     	;# 
   925  0196                     	;# 
   926  0199                     	;# 
   927  019A                     	;# 
   928  019B                     	;# 
   929  019B                     	;# 
   930  019B                     	;# 
   931  019B                     	;# 
   932  019C                     	;# 
   933  019C                     	;# 
   934  019D                     	;# 
   935  019E                     	;# 
   936  019F                     	;# 
   937  020C                     	;# 
   938  020D                     	;# 
   939  0211                     	;# 
   940  0211                     	;# 
   941  0212                     	;# 
   942  0212                     	;# 
   943  0213                     	;# 
   944  0213                     	;# 
   945  0214                     	;# 
   946  0214                     	;# 
   947  0215                     	;# 
   948  0215                     	;# 
   949  0215                     	;# 
   950  0216                     	;# 
   951  0216                     	;# 
   952  0217                     	;# 
   953  0217                     	;# 
   954  0219                     	;# 
   955  021A                     	;# 
   956  021B                     	;# 
   957  021C                     	;# 
   958  021D                     	;# 
   959  021E                     	;# 
   960  021F                     	;# 
   961  0291                     	;# 
   962  0291                     	;# 
   963  0292                     	;# 
   964  0293                     	;# 
   965  0294                     	;# 
   966  0295                     	;# 
   967  0295                     	;# 
   968  0296                     	;# 
   969  0298                     	;# 
   970  0298                     	;# 
   971  0299                     	;# 
   972  029A                     	;# 
   973  029B                     	;# 
   974  029C                     	;# 
   975  029C                     	;# 
   976  029D                     	;# 
   977  029E                     	;# 
   978  029E                     	;# 
   979  0311                     	;# 
   980  0311                     	;# 
   981  0312                     	;# 
   982  0313                     	;# 
   983  0318                     	;# 
   984  0318                     	;# 
   985  0319                     	;# 
   986  031A                     	;# 
   987  0394                     	;# 
   988  0395                     	;# 
   989  0396                     	;# 
   990  039A                     	;# 
   991  039C                     	;# 
   992  039D                     	;# 
   993  039E                     	;# 
   994  039F                     	;# 
   995  0415                     	;# 
   996  0416                     	;# 
   997  0417                     	;# 
   998  041C                     	;# 
   999  041D                     	;# 
  1000  041E                     	;# 
  1001  0FE4                     	;# 
  1002  0FE5                     	;# 
  1003  0FE6                     	;# 
  1004  0FE7                     	;# 
  1005  0FE8                     	;# 
  1006  0FE9                     	;# 
  1007  0FEA                     	;# 
  1008  0FEB                     	;# 
  1009  0FED                     	;# 
  1010  0FEE                     	;# 
  1011  0FEF                     	;# 
  1012                           
  1013                           	psect	idataBANK0
  1014  0675                     __pidataBANK0:
  1015                           
  1016                           ;initializer for _segdata
  1017  0675  343F               	retlw	63
  1018  0676  3406               	retlw	6
  1019  0677  345B               	retlw	91
  1020  0678  344F               	retlw	79
  1021  0679  3466               	retlw	102
  1022  067A  346D               	retlw	109
  1023  067B  347D               	retlw	125
  1024  067C  3407               	retlw	7
  1025  067D  347F               	retlw	127
  1026  067E  346F               	retlw	111
  1027                           
  1028                           ;initializer for main@F2513
  1029  067F  34FF               	retlw	255
  1030  0680  34FF               	retlw	255
  1031  0681  34FF               	retlw	255
  1032  0682  34FF               	retlw	255
  1033  000C                     _PORTAbits	set	12
  1034  0097                     _WDTCON	set	151
  1035  0098                     _OSCTUNE	set	152
  1036  0099                     _OSCCON	set	153
  1037  0095                     _OPTION_REGbits	set	149
  1038  008D                     _TRISB	set	141
  1039  008C                     _TRISA	set	140
  1040  0116                     _BORCON	set	278
  1041  011E                     _APFCON1	set	286
  1042  011D                     _APFCON0	set	285
  1043  010D                     _LATB	set	269
  1044  010C                     _LATA	set	268
  1045  018C                     _ANSELA	set	396
  1046  018D                     _ANSELB	set	397
  1047  020C                     _WPUA	set	524
  1048  020D                     _WPUB	set	525
  1049  0215                     _SSPCON1bits	set	533
  1050  0214                     _SSPSTATbits	set	532
  1051  0211                     _SSPBUF	set	529
  1052  0216                     _SSPCON2bits	set	534
  1053  0214                     _SSPSTAT	set	532
  1054  0216                     _SSPCON2	set	534
  1055                           
  1056                           	psect	cinit
  1057  07EC                     start_initialization:	
  1058                           ; #config settings
  1059                           
  1060  07EC                     __initialization:
  1061                           
  1062                           ; Initialize objects allocated to BANK0
  1063  07EC  3075               	movlw	low __pidataBANK0
  1064  07ED  0084               	movwf	4
  1065  07EE  3086               	movlw	(high __pidataBANK0)| (0+128)
  1066  07EF  0085               	movwf	5
  1067  07F0  3020               	movlw	low __pdataBANK0
  1068  07F1  0086               	movwf	6
  1069  07F2  3000               	movlw	high __pdataBANK0
  1070  07F3  0087               	movwf	7
  1071  07F4  300E               	movlw	14
  1072  07F5  3186  2656  3187   	fcall	init_ram
  1073                           
  1074                           ; Clear objects allocated to COMMON
  1075  07F8  01FD               	clrf	__pbssCOMMON& (0+127)
  1076                           
  1077                           ; Clear objects allocated to BANK0
  1078  07F9  01B8               	clrf	__pbssBANK0& (0+127)
  1079  07FA  01B9               	clrf	(__pbssBANK0+1)& (0+127)
  1080  07FB  01BA               	clrf	(__pbssBANK0+2)& (0+127)
  1081  07FC  01BB               	clrf	(__pbssBANK0+3)& (0+127)
  1082  07FD                     end_of_initialization:	
  1083                           ;End of C runtime variable initialization code
  1084                           
  1085  07FD                     __end_of__initialization:
  1086  07FD  0020               	movlb	0
  1087  07FE  3187  2F78         	ljmp	_main	;jump to C main() function
  1088                           
  1089                           	psect	bssCOMMON
  1090  007D                     __pbssCOMMON:
  1091  007D                     _m_brightness:
  1092  007D                     	ds	1
  1093                           
  1094                           	psect	bssBANK0
  1095  0038                     __pbssBANK0:
  1096  0038                     clear_segment@F2506:
  1097  0038                     	ds	4
  1098                           
  1099                           	psect	dataBANK0
  1100  0020                     __pdataBANK0:
  1101  0020                     _segdata:
  1102  0020                     	ds	10
  1103  002A                     main@F2513:
  1104  002A                     	ds	4
  1105                           
  1106                           	psect	inittext
  1107  0656                     init_ram:
  1108  0656  00FE               	movwf	btemp
  1109  0657                     initloop:
  1110  0657  0012               	moviw fsr0++
  1111  0658  001E               	movwi fsr1++
  1112  0659  0BFE               	decfsz	btemp,f
  1113  065A  2E57               	goto	initloop
  1114  065B  3400               	retlw	0
  1115                           
  1116                           	psect	cstackCOMMON
  1117  0070                     __pcstackCOMMON:
  1118  0070                     ?_SYSTEM_Initialize:
  1119  0070                     ??_SYSTEM_Initialize:	
  1120                           ; 1 bytes @ 0x0
  1121                           
  1122  0070                     ?_clear_segment:	
  1123                           ; 1 bytes @ 0x0
  1124                           
  1125  0070                     ?_encode_digit:	
  1126                           ; 1 bytes @ 0x0
  1127                           
  1128  0070                     ??_encode_digit:	
  1129                           ; 1 bytes @ 0x0
  1130                           
  1131  0070                     ?_set_brigthness:	
  1132                           ; 1 bytes @ 0x0
  1133                           
  1134  0070                     ?_OSCILLATOR_Initialize:	
  1135                           ; 1 bytes @ 0x0
  1136                           
  1137  0070                     ??_OSCILLATOR_Initialize:	
  1138                           ; 1 bytes @ 0x0
  1139                           
  1140  0070                     ?_WDT_Initialize:	
  1141                           ; 1 bytes @ 0x0
  1142                           
  1143  0070                     ??_WDT_Initialize:	
  1144                           ; 1 bytes @ 0x0
  1145                           
  1146  0070                     ?_main:	
  1147                           ; 1 bytes @ 0x0
  1148                           
  1149  0070                     ?_bit_delay:	
  1150                           ; 1 bytes @ 0x0
  1151                           
  1152  0070                     ??_bit_delay:	
  1153                           ; 1 bytes @ 0x0
  1154                           
  1155  0070                     ?_start_segment:	
  1156                           ; 1 bytes @ 0x0
  1157                           
  1158  0070                     ??_start_segment:	
  1159                           ; 1 bytes @ 0x0
  1160                           
  1161  0070                     ?_stop_segment:	
  1162                           ; 1 bytes @ 0x0
  1163                           
  1164  0070                     ??_stop_segment:	
  1165                           ; 1 bytes @ 0x0
  1166                           
  1167  0070                     ?_get_DIO_PIN_value:	
  1168                           ; 1 bytes @ 0x0
  1169                           
  1170  0070                     ??_get_DIO_PIN_value:	
  1171                           ; 1 bytes @ 0x0
  1172                           
  1173  0070                     ?_write_byte:	
  1174                           ; 1 bytes @ 0x0
  1175                           
  1176  0070                     ??_write_byte:	
  1177                           ; 1 bytes @ 0x0
  1178                           
  1179  0070                     ?_PIN_MANAGER_Initialize:	
  1180                           ; 1 bytes @ 0x0
  1181                           
  1182  0070                     ??_PIN_MANAGER_Initialize:	
  1183                           ; 1 bytes @ 0x0
  1184                           
  1185  0070                     set_brigthness@on:	
  1186                           ; 1 bytes @ 0x0
  1187                           
  1188  0070                     encode_digit@digit:	
  1189                           ; 1 bytes @ 0x0
  1190                           
  1191                           
  1192                           ; 1 bytes @ 0x0
  1193  0070                     	ds	1
  1194  0071                     ??_set_brigthness:
  1195  0071                     write_byte@b:	
  1196                           ; 1 bytes @ 0x1
  1197                           
  1198                           
  1199                           ; 1 bytes @ 0x1
  1200  0071                     	ds	1
  1201  0072                     write_byte@ack:
  1202  0072                     set_brigthness@brightness:	
  1203                           ; 1 bytes @ 0x2
  1204                           
  1205                           
  1206                           ; 1 bytes @ 0x2
  1207  0072                     	ds	1
  1208  0073                     write_byte@data:
  1209                           
  1210                           ; 1 bytes @ 0x3
  1211  0073                     	ds	1
  1212  0074                     write_byte@i:
  1213                           
  1214                           ; 1 bytes @ 0x4
  1215  0074                     	ds	1
  1216  0075                     ?_set_segments:
  1217  0075                     set_segments@length:	
  1218                           ; 1 bytes @ 0x5
  1219                           
  1220                           
  1221                           ; 1 bytes @ 0x5
  1222  0075                     	ds	1
  1223  0076                     set_segments@pos:
  1224                           
  1225                           ; 1 bytes @ 0x6
  1226  0076                     	ds	1
  1227  0077                     ??_set_segments:
  1228                           
  1229                           ; 1 bytes @ 0x7
  1230  0077                     	ds	1
  1231  0078                     set_segments@segments:
  1232                           
  1233                           ; 1 bytes @ 0x8
  1234  0078                     	ds	1
  1235  0079                     set_segments@k:
  1236                           
  1237                           ; 1 bytes @ 0x9
  1238  0079                     	ds	1
  1239  007A                     ??_clear_segment:
  1240                           
  1241                           ; 1 bytes @ 0xA
  1242  007A                     	ds	1
  1243  007B                     ??_main:
  1244                           
  1245                           ; 1 bytes @ 0xB
  1246  007B                     	ds	2
  1247                           
  1248                           	psect	cstackBANK0
  1249  002E                     __pcstackBANK0:
  1250  002E                     clear_segment@data:
  1251                           
  1252                           ; 4 bytes @ 0x0
  1253  002E                     	ds	4
  1254  0032                     main@k:
  1255                           
  1256                           ; 1 bytes @ 0x4
  1257  0032                     	ds	1
  1258  0033                     main@data:
  1259                           
  1260                           ; 4 bytes @ 0x5
  1261  0033                     	ds	4
  1262  0037                     main@i:
  1263                           
  1264                           ; 1 bytes @ 0x9
  1265  0037                     	ds	1
  1266                           
  1267                           	psect	maintext
  1268  0778                     __pmaintext:	
  1269 ;;
  1270 ;;Main: autosize = 0, tempsize = 2, incstack = 0, save=0
  1271 ;;
  1272 ;; *************** function _main *****************
  1273 ;; Defined at:
  1274 ;;		line 6 in file "main.c"
  1275 ;; Parameters:    Size  Location     Type
  1276 ;;		None
  1277 ;; Auto vars:     Size  Location     Type
  1278 ;;  i               1    9[BANK0 ] unsigned char 
  1279 ;;  data            4    5[BANK0 ] unsigned char [4]
  1280 ;;  k               1    4[BANK0 ] unsigned char 
  1281 ;; Return value:  Size  Location     Type
  1282 ;;                  1    wreg      void 
  1283 ;; Registers used:
  1284 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  1285 ;; Tracked objects:
  1286 ;;		On entry : B1F/0
  1287 ;;		On exit  : 0/0
  1288 ;;		Unchanged: 0/0
  1289 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  1290 ;;      Params:         0       0       0       0       0       0
  1291 ;;      Locals:         0       6       0       0       0       0
  1292 ;;      Temps:          2       0       0       0       0       0
  1293 ;;      Totals:         2       6       0       0       0       0
  1294 ;;Total ram usage:        8 bytes
  1295 ;; Hardware stack levels required when called:    4
  1296 ;; This function calls:
  1297 ;;		_SYSTEM_Initialize
  1298 ;;		_clear_segment
  1299 ;;		_encode_digit
  1300 ;;		_set_brigthness
  1301 ;;		_set_segments
  1302 ;; This function is called by:
  1303 ;;		Startup code after reset
  1304 ;; This function uses a non-reentrant model
  1305 ;;
  1306                           
  1307                           
  1308                           ;psect for function _main
  1309  0778                     _main:
  1310  0778                     l1135:	
  1311                           ;incstack = 0
  1312                           ; Regs used in _main: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
  1313                           
  1314                           
  1315                           ;main.c: 9:     SYSTEM_Initialize();
  1316  0778  3186  266B  3187   	fcall	_SYSTEM_Initialize
  1317  077B                     l1137:
  1318                           
  1319                           ;main.c: 12:     uint8_t data[] = {0xff, 0xff, 0xff, 0xff};
  1320  077B  0020               	movlb	0	; select bank0
  1321  077C  082D               	movf	main@F2513+3,w
  1322  077D  00B6               	movwf	main@data+3
  1323  077E  082C               	movf	main@F2513+2,w
  1324  077F  00B5               	movwf	main@data+2
  1325  0780  082B               	movf	main@F2513+1,w
  1326  0781  00B4               	movwf	main@data+1
  1327  0782  082A               	movf	main@F2513,w
  1328  0783  00B3               	movwf	main@data
  1329  0784                     l1139:
  1330                           
  1331                           ;main.c: 14:     clear_segment();
  1332  0784  3186  2683  3187   	fcall	_clear_segment
  1333  0787                     l1141:
  1334                           
  1335                           ;main.c: 16:     data[0] = encode_digit(1);
  1336  0787  3001               	movlw	1
  1337  0788  3186  2663  3187   	fcall	_encode_digit
  1338  078B  00FB               	movwf	??_main
  1339  078C  087B               	movf	??_main,w
  1340  078D  0020               	movlb	0	; select bank0
  1341  078E  00B3               	movwf	main@data
  1342  078F                     l1143:
  1343                           
  1344                           ;main.c: 17:     data[1] = encode_digit(9);
  1345  078F  3009               	movlw	9
  1346  0790  3186  2663  3187   	fcall	_encode_digit
  1347  0793  00FB               	movwf	??_main
  1348  0794  087B               	movf	??_main,w
  1349  0795  0020               	movlb	0	; select bank0
  1350  0796  00B4               	movwf	main@data+1
  1351  0797                     l1145:
  1352                           
  1353                           ;main.c: 18:     data[2] = encode_digit(8);
  1354  0797  3008               	movlw	8
  1355  0798  3186  2663  3187   	fcall	_encode_digit
  1356  079B  00FB               	movwf	??_main
  1357  079C  087B               	movf	??_main,w
  1358  079D  0020               	movlb	0	; select bank0
  1359  079E  00B5               	movwf	main@data+2
  1360  079F                     l1147:
  1361                           
  1362                           ;main.c: 19:     data[3] = encode_digit(4);
  1363  079F  3004               	movlw	4
  1364  07A0  3186  2663  3187   	fcall	_encode_digit
  1365  07A3  00FB               	movwf	??_main
  1366  07A4  087B               	movf	??_main,w
  1367  07A5  0020               	movlb	0	; select bank0
  1368  07A6  00B6               	movwf	main@data+3
  1369  07A7                     l1149:
  1370                           
  1371                           ;main.c: 22:     set_brigthness(0x0f, 1);
  1372  07A7  01F0               	clrf	set_brigthness@on
  1373  07A8  0AF0               	incf	set_brigthness@on,f
  1374  07A9  300F               	movlw	15
  1375  07AA  3186  2696  3187   	fcall	_set_brigthness
  1376  07AD                     l1151:
  1377                           
  1378                           ;main.c: 23:     set_segments(data, 4, 0);
  1379  07AD  3004               	movlw	4
  1380  07AE  00FB               	movwf	??_main
  1381  07AF  087B               	movf	??_main,w
  1382  07B0  00F5               	movwf	set_segments@length
  1383  07B1  01F6               	clrf	set_segments@pos
  1384  07B2  3033               	movlw	(low (main@data| 0))& (0+255)
  1385  07B3  3186  26E9  3187   	fcall	_set_segments
  1386  07B6                     l1153:
  1387                           
  1388                           ;main.c: 25:     uint8_t k = 0;
  1389  07B6  0020               	movlb	0	; select bank0
  1390  07B7  01B2               	clrf	main@k
  1391  07B8                     l1155:
  1392                           
  1393                           ;main.c: 27:     {;main.c: 28:         for(uint8_t i = 0; i < 4; i++){
  1394  07B8  01B7               	clrf	main@i
  1395  07B9                     l1159:
  1396                           
  1397                           ;main.c: 29:             data[i] = encode_digit(i + k);
  1398  07B9  0837               	movf	main@i,w
  1399  07BA  0732               	addwf	main@k,w
  1400  07BB  3186  2663  3187   	fcall	_encode_digit
  1401  07BE  00FB               	movwf	??_main
  1402  07BF  0020               	movlb	0	; select bank0
  1403  07C0  0837               	movf	main@i,w
  1404  07C1  3E33               	addlw	(low (main@data| 0))& (0+255)
  1405  07C2  0086               	movwf	6
  1406  07C3  0187               	clrf	7
  1407  07C4  087B               	movf	??_main,w
  1408  07C5  0081               	movwf	1
  1409  07C6                     l1161:
  1410                           
  1411                           ;main.c: 30:         }
  1412  07C6  3001               	movlw	1
  1413  07C7  00FB               	movwf	??_main
  1414  07C8  087B               	movf	??_main,w
  1415  07C9  07B7               	addwf	main@i,f
  1416  07CA                     l1163:
  1417  07CA  3004               	movlw	4
  1418  07CB  0237               	subwf	main@i,w
  1419  07CC  1C03               	skipc
  1420  07CD  2FCF               	goto	u201
  1421  07CE  2FD0               	goto	u200
  1422  07CF                     u201:
  1423  07CF  2FB9               	goto	l1159
  1424  07D0                     u200:
  1425  07D0                     l1165:
  1426                           
  1427                           ;main.c: 32:         set_segments(data, 4, 0);
  1428  07D0  3004               	movlw	4
  1429  07D1  00FB               	movwf	??_main
  1430  07D2  087B               	movf	??_main,w
  1431  07D3  00F5               	movwf	set_segments@length
  1432  07D4  01F6               	clrf	set_segments@pos
  1433  07D5  3033               	movlw	(low (main@data| 0))& (0+255)
  1434  07D6  3186  26E9  3187   	fcall	_set_segments
  1435  07D9                     l1167:
  1436                           
  1437                           ;main.c: 33:         _delay((unsigned long)((1000)*(8000000/4000.0)));
  1438  07D9  300B               	movlw	11
  1439  07DA  00FC               	movwf	??_main+1
  1440  07DB  3026               	movlw	38
  1441  07DC  00FB               	movwf	??_main
  1442  07DD  305E               	movlw	94
  1443  07DE                     u217:
  1444  07DE  0B89               	decfsz	9,f
  1445  07DF  2FDE               	goto	u217
  1446  07E0  0BFB               	decfsz	??_main,f
  1447  07E1  2FDE               	goto	u217
  1448  07E2  0BFC               	decfsz	??_main+1,f
  1449  07E3  2FDE               	goto	u217
  1450  07E4                     l1169:
  1451                           
  1452                           ;main.c: 34:         k++;
  1453  07E4  3001               	movlw	1
  1454  07E5  00FB               	movwf	??_main
  1455  07E6  087B               	movf	??_main,w
  1456  07E7  0020               	movlb	0	; select bank0
  1457  07E8  07B2               	addwf	main@k,f
  1458  07E9  2FB8               	goto	l1155
  1459  07EA  3180  2802         	ljmp	start
  1460  07EC                     __end_of_main:
  1461                           
  1462                           	psect	text1
  1463  0696                     __ptext1:	
  1464 ;; *************** function _set_brigthness *****************
  1465 ;; Defined at:
  1466 ;;		line 132 in file "tm1637.c"
  1467 ;; Parameters:    Size  Location     Type
  1468 ;;  brightness      1    wreg     unsigned char 
  1469 ;;  on              1    0[COMMON] unsigned char 
  1470 ;; Auto vars:     Size  Location     Type
  1471 ;;  brightness      1    2[COMMON] unsigned char 
  1472 ;; Return value:  Size  Location     Type
  1473 ;;                  1    wreg      void 
  1474 ;; Registers used:
  1475 ;;		wreg, status,2, status,0
  1476 ;; Tracked objects:
  1477 ;;		On entry : 0/0
  1478 ;;		On exit  : 0/0
  1479 ;;		Unchanged: 0/0
  1480 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  1481 ;;      Params:         1       0       0       0       0       0
  1482 ;;      Locals:         1       0       0       0       0       0
  1483 ;;      Temps:          1       0       0       0       0       0
  1484 ;;      Totals:         3       0       0       0       0       0
  1485 ;;Total ram usage:        3 bytes
  1486 ;; Hardware stack levels used:    1
  1487 ;; This function calls:
  1488 ;;		Nothing
  1489 ;; This function is called by:
  1490 ;;		_main
  1491 ;; This function uses a non-reentrant model
  1492 ;;
  1493                           
  1494                           
  1495                           ;psect for function _set_brigthness
  1496  0696                     _set_brigthness:
  1497                           
  1498                           ;incstack = 0
  1499                           ; Regs used in _set_brigthness: [wreg+status,2+status,0]
  1500                           ;set_brigthness@brightness stored from wreg
  1501  0696  00F2               	movwf	set_brigthness@brightness
  1502  0697                     l1129:
  1503                           
  1504                           ;tm1637.c: 133:     if(on == 1){
  1505  0697  0370               	decf	set_brigthness@on,w
  1506  0698  1D03               	btfss	3,2
  1507  0699  2E9B               	goto	u191
  1508  069A  2E9C               	goto	u190
  1509  069B                     u191:
  1510  069B  2EA3               	goto	l1133
  1511  069C                     u190:
  1512  069C                     l1131:
  1513                           
  1514                           ;tm1637.c: 134:         m_brightness = (brightness & 0x7 | 0x08);
  1515  069C  0872               	movf	set_brigthness@brightness,w
  1516  069D  3907               	andlw	7
  1517  069E  3808               	iorlw	8
  1518  069F  00F1               	movwf	??_set_brigthness
  1519  06A0  0871               	movf	??_set_brigthness,w
  1520  06A1  00FD               	movwf	_m_brightness
  1521                           
  1522                           ;tm1637.c: 135:     }else{
  1523  06A2  2EA8               	goto	l118
  1524  06A3                     l1133:
  1525                           
  1526                           ;tm1637.c: 136:         m_brightness = (brightness & 0x7 | 0x00);
  1527  06A3  0872               	movf	set_brigthness@brightness,w
  1528  06A4  3907               	andlw	7
  1529  06A5  00F1               	movwf	??_set_brigthness
  1530  06A6  0871               	movf	??_set_brigthness,w
  1531  06A7  00FD               	movwf	_m_brightness
  1532  06A8                     l118:
  1533  06A8  0008               	return
  1534  06A9                     __end_of_set_brigthness:
  1535                           
  1536                           	psect	text2
  1537  0663                     __ptext2:	
  1538 ;; *************** function _encode_digit *****************
  1539 ;; Defined at:
  1540 ;;		line 183 in file "tm1637.c"
  1541 ;; Parameters:    Size  Location     Type
  1542 ;;  digit           1    wreg     unsigned char 
  1543 ;; Auto vars:     Size  Location     Type
  1544 ;;  digit           1    0[COMMON] unsigned char 
  1545 ;; Return value:  Size  Location     Type
  1546 ;;                  1    wreg      unsigned char 
  1547 ;; Registers used:
  1548 ;;		wreg, fsr1l, fsr1h, status,2, status,0
  1549 ;; Tracked objects:
  1550 ;;		On entry : 0/0
  1551 ;;		On exit  : 0/0
  1552 ;;		Unchanged: 0/0
  1553 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  1554 ;;      Params:         0       0       0       0       0       0
  1555 ;;      Locals:         1       0       0       0       0       0
  1556 ;;      Temps:          0       0       0       0       0       0
  1557 ;;      Totals:         1       0       0       0       0       0
  1558 ;;Total ram usage:        1 bytes
  1559 ;; Hardware stack levels used:    1
  1560 ;; This function calls:
  1561 ;;		Nothing
  1562 ;; This function is called by:
  1563 ;;		_main
  1564 ;; This function uses a non-reentrant model
  1565 ;;
  1566                           
  1567                           
  1568                           ;psect for function _encode_digit
  1569  0663                     _encode_digit:
  1570                           
  1571                           ;incstack = 0
  1572                           ; Regs used in _encode_digit: [wreg+fsr1l+fsr1h+status,2+status,0]
  1573                           ;encode_digit@digit stored from wreg
  1574  0663  00F0               	movwf	encode_digit@digit
  1575  0664                     l1125:
  1576                           
  1577                           ;tm1637.c: 184:     return segdata[digit & 0x0f];
  1578  0664  0870               	movf	encode_digit@digit,w
  1579  0665  390F               	andlw	15
  1580  0666  3E20               	addlw	(low (_segdata| 0))& (0+255)
  1581  0667  0086               	movwf	6
  1582  0668  0187               	clrf	7
  1583  0669  0801               	movf	1,w
  1584  066A                     l132:
  1585  066A  0008               	return
  1586  066B                     __end_of_encode_digit:
  1587                           
  1588                           	psect	text3
  1589  0683                     __ptext3:	
  1590 ;; *************** function _clear_segment *****************
  1591 ;; Defined at:
  1592 ;;		line 173 in file "tm1637.c"
  1593 ;; Parameters:    Size  Location     Type
  1594 ;;		None
  1595 ;; Auto vars:     Size  Location     Type
  1596 ;;  data            4    0[BANK0 ] unsigned char [4]
  1597 ;; Return value:  Size  Location     Type
  1598 ;;                  1    wreg      void 
  1599 ;; Registers used:
  1600 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  1601 ;; Tracked objects:
  1602 ;;		On entry : 0/0
  1603 ;;		On exit  : 0/0
  1604 ;;		Unchanged: 0/0
  1605 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  1606 ;;      Params:         0       0       0       0       0       0
  1607 ;;      Locals:         0       4       0       0       0       0
  1608 ;;      Temps:          1       0       0       0       0       0
  1609 ;;      Totals:         1       4       0       0       0       0
  1610 ;;Total ram usage:        5 bytes
  1611 ;; Hardware stack levels used:    1
  1612 ;; Hardware stack levels required when called:    3
  1613 ;; This function calls:
  1614 ;;		_set_segments
  1615 ;; This function is called by:
  1616 ;;		_main
  1617 ;; This function uses a non-reentrant model
  1618 ;;
  1619                           
  1620                           
  1621                           ;psect for function _clear_segment
  1622  0683                     _clear_segment:
  1623  0683                     l1121:	
  1624                           ;incstack = 0
  1625                           ; Regs used in _clear_segment: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
  1626                           
  1627                           
  1628                           ;tm1637.c: 174:     uint8_t data[] = { 0, 0, 0, 0 };
  1629  0683  3000               	movlw	0
  1630  0684  0020               	movlb	0	; select bank0
  1631  0685  00B1               	movwf	clear_segment@data+3
  1632  0686  3000               	movlw	0
  1633  0687  00B0               	movwf	clear_segment@data+2
  1634  0688  3000               	movlw	0
  1635  0689  00AF               	movwf	clear_segment@data+1
  1636  068A  3000               	movlw	0
  1637  068B  00AE               	movwf	clear_segment@data
  1638  068C                     l1123:
  1639                           
  1640                           ;tm1637.c: 175:  set_segments(data, 4, 0);
  1641  068C  3004               	movlw	4
  1642  068D  00FA               	movwf	??_clear_segment
  1643  068E  087A               	movf	??_clear_segment,w
  1644  068F  00F5               	movwf	set_segments@length
  1645  0690  01F6               	clrf	set_segments@pos
  1646  0691  302E               	movlw	(low (clear_segment@data| 0))& (0+255)
  1647  0692  3186  26E9  3186   	fcall	_set_segments
  1648  0695                     l129:
  1649  0695  0008               	return
  1650  0696                     __end_of_clear_segment:
  1651                           
  1652                           	psect	text4
  1653  06E9                     __ptext4:	
  1654 ;; *************** function _set_segments *****************
  1655 ;; Defined at:
  1656 ;;		line 146 in file "tm1637.c"
  1657 ;; Parameters:    Size  Location     Type
  1658 ;;  segments        1    wreg     PTR const unsigned char 
  1659 ;;		 -> clear_segment@data(4), main@data(4), 
  1660 ;;  length          1    5[COMMON] unsigned char 
  1661 ;;  pos             1    6[COMMON] unsigned char 
  1662 ;; Auto vars:     Size  Location     Type
  1663 ;;  segments        1    8[COMMON] PTR const unsigned char 
  1664 ;;		 -> clear_segment@data(4), main@data(4), 
  1665 ;;  k               1    9[COMMON] unsigned char 
  1666 ;; Return value:  Size  Location     Type
  1667 ;;                  1    wreg      void 
  1668 ;; Registers used:
  1669 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  1670 ;; Tracked objects:
  1671 ;;		On entry : 0/0
  1672 ;;		On exit  : 0/0
  1673 ;;		Unchanged: 0/0
  1674 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  1675 ;;      Params:         2       0       0       0       0       0
  1676 ;;      Locals:         2       0       0       0       0       0
  1677 ;;      Temps:          1       0       0       0       0       0
  1678 ;;      Totals:         5       0       0       0       0       0
  1679 ;;Total ram usage:        5 bytes
  1680 ;; Hardware stack levels used:    1
  1681 ;; Hardware stack levels required when called:    2
  1682 ;; This function calls:
  1683 ;;		_start_segment
  1684 ;;		_stop_segment
  1685 ;;		_write_byte
  1686 ;; This function is called by:
  1687 ;;		_main
  1688 ;;		_clear_segment
  1689 ;; This function uses a non-reentrant model
  1690 ;;
  1691                           
  1692                           
  1693                           ;psect for function _set_segments
  1694  06E9                     _set_segments:
  1695                           
  1696                           ;incstack = 0
  1697                           ; Regs used in _set_segments: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
  1698                           ;set_segments@segments stored from wreg
  1699  06E9  00F8               	movwf	set_segments@segments
  1700  06EA                     l1087:
  1701                           
  1702                           ;tm1637.c: 149:     start_segment();
  1703  06EA  3186  26A9  3186   	fcall	_start_segment
  1704                           
  1705                           ;tm1637.c: 150:     write_byte(0x40);
  1706  06ED  3040               	movlw	64
  1707  06EE  3187  2723  3186   	fcall	_write_byte
  1708                           
  1709                           ;tm1637.c: 151:     stop_segment();
  1710  06F1  3186  26BE  3186   	fcall	_stop_segment
  1711                           
  1712                           ;tm1637.c: 154:     start_segment();
  1713  06F4  3186  26A9  3186   	fcall	_start_segment
  1714                           
  1715                           ;tm1637.c: 155:     write_byte(0xC0 + (pos & 0x03));
  1716  06F7  0876               	movf	set_segments@pos,w
  1717  06F8  3903               	andlw	3
  1718  06F9  3EC0               	addlw	192
  1719  06FA  3187  2723  3186   	fcall	_write_byte
  1720  06FD                     l1089:
  1721                           
  1722                           ;tm1637.c: 158:     for(uint8_t k = 0; k < length; k++){
  1723  06FD  01F9               	clrf	set_segments@k
  1724  06FE  2F0D               	goto	l1095
  1725  06FF                     l1091:
  1726                           
  1727                           ;tm1637.c: 159:         write_byte(segments[k]);
  1728  06FF  0879               	movf	set_segments@k,w
  1729  0700  0778               	addwf	set_segments@segments,w
  1730  0701  00F7               	movwf	??_set_segments
  1731  0702  0877               	movf	??_set_segments,w
  1732  0703  0086               	movwf	6
  1733  0704  0187               	clrf	7
  1734  0705  0801               	movf	1,w
  1735  0706  3187  2723  3186   	fcall	_write_byte
  1736  0709                     l1093:
  1737                           
  1738                           ;tm1637.c: 160:     }
  1739  0709  3001               	movlw	1
  1740  070A  00F7               	movwf	??_set_segments
  1741  070B  0877               	movf	??_set_segments,w
  1742  070C  07F9               	addwf	set_segments@k,f
  1743  070D                     l1095:
  1744  070D  0875               	movf	set_segments@length,w
  1745  070E  0279               	subwf	set_segments@k,w
  1746  070F  1C03               	skipc
  1747  0710  2F12               	goto	u181
  1748  0711  2F13               	goto	u180
  1749  0712                     u181:
  1750  0712  2EFF               	goto	l1091
  1751  0713                     u180:
  1752  0713                     l1097:
  1753                           
  1754                           ;tm1637.c: 162:     stop_segment();
  1755  0713  3186  26BE  3186   	fcall	_stop_segment
  1756                           
  1757                           ;tm1637.c: 165:     start_segment();
  1758  0716  3186  26A9  3186   	fcall	_start_segment
  1759                           
  1760                           ;tm1637.c: 166:     write_byte(0x80 + (m_brightness & 0x0f));
  1761  0719  087D               	movf	_m_brightness,w
  1762  071A  390F               	andlw	15
  1763  071B  3E80               	addlw	128
  1764  071C  3187  2723  3186   	fcall	_write_byte
  1765                           
  1766                           ;tm1637.c: 167:     stop_segment();
  1767  071F  3186  26BE  3186   	fcall	_stop_segment
  1768  0722                     l124:
  1769  0722  0008               	return
  1770  0723                     __end_of_set_segments:
  1771                           
  1772                           	psect	text5
  1773  0723                     __ptext5:	
  1774 ;; *************** function _write_byte *****************
  1775 ;; Defined at:
  1776 ;;		line 74 in file "tm1637.c"
  1777 ;; Parameters:    Size  Location     Type
  1778 ;;  b               1    wreg     unsigned char 
  1779 ;; Auto vars:     Size  Location     Type
  1780 ;;  b               1    1[COMMON] unsigned char 
  1781 ;;  i               1    4[COMMON] unsigned char 
  1782 ;;  data            1    3[COMMON] unsigned char 
  1783 ;;  ack             1    2[COMMON] unsigned char 
  1784 ;; Return value:  Size  Location     Type
  1785 ;;                  1    wreg      unsigned char 
  1786 ;; Registers used:
  1787 ;;		wreg, status,2, status,0, pclath, cstack
  1788 ;; Tracked objects:
  1789 ;;		On entry : 0/0
  1790 ;;		On exit  : 0/0
  1791 ;;		Unchanged: 0/0
  1792 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  1793 ;;      Params:         0       0       0       0       0       0
  1794 ;;      Locals:         4       0       0       0       0       0
  1795 ;;      Temps:          1       0       0       0       0       0
  1796 ;;      Totals:         5       0       0       0       0       0
  1797 ;;Total ram usage:        5 bytes
  1798 ;; Hardware stack levels used:    1
  1799 ;; Hardware stack levels required when called:    1
  1800 ;; This function calls:
  1801 ;;		_bit_delay
  1802 ;;		_get_DIO_PIN_value
  1803 ;; This function is called by:
  1804 ;;		_set_segments
  1805 ;; This function uses a non-reentrant model
  1806 ;;
  1807                           
  1808                           
  1809                           ;psect for function _write_byte
  1810  0723                     _write_byte:
  1811                           
  1812                           ;incstack = 0
  1813                           ; Regs used in _write_byte: [wreg+status,2+status,0+pclath+cstack]
  1814                           ;write_byte@b stored from wreg
  1815  0723  00F1               	movwf	write_byte@b
  1816  0724                     l1043:
  1817                           
  1818                           ;tm1637.c: 75:     uint8_t data = b;
  1819  0724  0871               	movf	write_byte@b,w
  1820  0725  00F0               	movwf	??_write_byte
  1821  0726  0870               	movf	??_write_byte,w
  1822  0727  00F3               	movwf	write_byte@data
  1823  0728                     l1045:
  1824                           
  1825                           ;tm1637.c: 78:     TRISA &= ~0x02;
  1826  0728  30FD               	movlw	253
  1827  0729  00F0               	movwf	??_write_byte
  1828  072A  0870               	movf	??_write_byte,w
  1829  072B  0021               	movlb	1	; select bank1
  1830  072C  058C               	andwf	12,f	;volatile
  1831  072D                     l1047:
  1832                           
  1833                           ;tm1637.c: 79:     for(uint8_t i = 0; i < 8; i++){
  1834  072D  01F4               	clrf	write_byte@i
  1835  072E                     l1053:
  1836                           
  1837                           ;tm1637.c: 81:         LATA &= ~0x02;
  1838  072E  30FD               	movlw	253
  1839  072F  00F0               	movwf	??_write_byte
  1840  0730  0870               	movf	??_write_byte,w
  1841  0731  0022               	movlb	2	; select bank2
  1842  0732  058C               	andwf	12,f	;volatile
  1843  0733                     l1055:
  1844                           
  1845                           ;tm1637.c: 83:         if(data & 0x01){
  1846  0733  1C73               	btfss	write_byte@data,0
  1847  0734  2F36               	goto	u151
  1848  0735  2F37               	goto	u150
  1849  0736                     u151:
  1850  0736  2F39               	goto	l1059
  1851  0737                     u150:
  1852  0737                     l1057:
  1853                           
  1854                           ;tm1637.c: 85:             LATA |= 0x01;
  1855  0737  140C               	bsf	12,0	;volatile
  1856                           
  1857                           ;tm1637.c: 86:         }else{
  1858  0738  2F3D               	goto	l1061
  1859  0739                     l1059:
  1860                           
  1861                           ;tm1637.c: 88:             LATA &= ~0x01;
  1862  0739  30FE               	movlw	254
  1863  073A  00F0               	movwf	??_write_byte
  1864  073B  0870               	movf	??_write_byte,w
  1865  073C  058C               	andwf	12,f	;volatile
  1866  073D                     l1061:
  1867                           
  1868                           ;tm1637.c: 92:         LATA |= 0x02;
  1869  073D  148C               	bsf	12,1	;volatile
  1870                           
  1871                           ;tm1637.c: 94:         data = data >> 1;
  1872  073E  3673               	lsrf	write_byte@data,w
  1873  073F  00F0               	movwf	??_write_byte
  1874  0740  0870               	movf	??_write_byte,w
  1875  0741  00F3               	movwf	write_byte@data
  1876                           
  1877                           ;tm1637.c: 95:     }
  1878  0742  3001               	movlw	1
  1879  0743  00F0               	movwf	??_write_byte
  1880  0744  0870               	movf	??_write_byte,w
  1881  0745  07F4               	addwf	write_byte@i,f
  1882  0746                     l1063:
  1883  0746  3008               	movlw	8
  1884  0747  0274               	subwf	write_byte@i,w
  1885  0748  1C03               	skipc
  1886  0749  2F4B               	goto	u161
  1887  074A  2F4C               	goto	u160
  1888  074B                     u161:
  1889  074B  2F2E               	goto	l1053
  1890  074C                     u160:
  1891  074C                     l1065:
  1892                           
  1893                           ;tm1637.c: 100:     LATA &= 0x02;
  1894  074C  3002               	movlw	2
  1895  074D  00F0               	movwf	??_write_byte
  1896  074E  0870               	movf	??_write_byte,w
  1897  074F  058C               	andwf	12,f	;volatile
  1898  0750                     l1067:
  1899                           
  1900                           ;tm1637.c: 101:     LATA |= 0x01;
  1901  0750  140C               	bsf	12,0	;volatile
  1902  0751                     l1069:
  1903                           
  1904                           ;tm1637.c: 104:     LATA |= 0x02;
  1905  0751  148C               	bsf	12,1	;volatile
  1906  0752                     l1071:
  1907                           
  1908                           ;tm1637.c: 107:     TRISA |= 0x01;
  1909  0752  0021               	movlb	1	; select bank1
  1910  0753  140C               	bsf	12,0	;volatile
  1911  0754                     l1073:
  1912                           
  1913                           ;tm1637.c: 108:     bit_delay();
  1914  0754  3186  264D  3187   	fcall	_bit_delay
  1915  0757                     l1075:
  1916                           
  1917                           ;tm1637.c: 110:     uint8_t ack = get_DIO_PIN_value();
  1918  0757  3186  2652  3187   	fcall	_get_DIO_PIN_value
  1919  075A  00F0               	movwf	??_write_byte
  1920  075B  0870               	movf	??_write_byte,w
  1921  075C  00F2               	movwf	write_byte@ack
  1922  075D                     l1077:
  1923                           
  1924                           ;tm1637.c: 111:     if(ack == 0){
  1925  075D  0872               	movf	write_byte@ack,w
  1926  075E  1D03               	btfss	3,2
  1927  075F  2F61               	goto	u171
  1928  0760  2F62               	goto	u170
  1929  0761                     u171:
  1930  0761  2F6C               	goto	l1081
  1931  0762                     u170:
  1932  0762                     l1079:
  1933                           
  1934                           ;tm1637.c: 113:         TRISA &= ~0x01;
  1935  0762  30FE               	movlw	254
  1936  0763  00F0               	movwf	??_write_byte
  1937  0764  0870               	movf	??_write_byte,w
  1938  0765  0021               	movlb	1	; select bank1
  1939  0766  058C               	andwf	12,f	;volatile
  1940                           
  1941                           ;tm1637.c: 116:         LATA &= ~0x01;
  1942  0767  30FE               	movlw	254
  1943  0768  00F0               	movwf	??_write_byte
  1944  0769  0870               	movf	??_write_byte,w
  1945  076A  0022               	movlb	2	; select bank2
  1946  076B  058C               	andwf	12,f	;volatile
  1947  076C                     l1081:
  1948                           
  1949                           ;tm1637.c: 119:     bit_delay();
  1950  076C  3186  264D  3187   	fcall	_bit_delay
  1951  076F                     l1083:
  1952                           
  1953                           ;tm1637.c: 121:     TRISA &= ~0x01;
  1954  076F  30FE               	movlw	254
  1955  0770  00F0               	movwf	??_write_byte
  1956  0771  0870               	movf	??_write_byte,w
  1957  0772  0021               	movlb	1	; select bank1
  1958  0773  058C               	andwf	12,f	;volatile
  1959                           
  1960                           ;tm1637.c: 122:     bit_delay();
  1961  0774  3186  264D  3187   	fcall	_bit_delay
  1962  0777                     l113:
  1963  0777  0008               	return
  1964  0778                     __end_of_write_byte:
  1965                           
  1966                           	psect	text6
  1967  0652                     __ptext6:	
  1968 ;; *************** function _get_DIO_PIN_value *****************
  1969 ;; Defined at:
  1970 ;;		line 63 in file "tm1637.c"
  1971 ;; Parameters:    Size  Location     Type
  1972 ;;		None
  1973 ;; Auto vars:     Size  Location     Type
  1974 ;;		None
  1975 ;; Return value:  Size  Location     Type
  1976 ;;                  1    wreg      unsigned char 
  1977 ;; Registers used:
  1978 ;;		wreg, status,2, status,0
  1979 ;; Tracked objects:
  1980 ;;		On entry : 0/0
  1981 ;;		On exit  : 0/0
  1982 ;;		Unchanged: 0/0
  1983 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  1984 ;;      Params:         0       0       0       0       0       0
  1985 ;;      Locals:         0       0       0       0       0       0
  1986 ;;      Temps:          0       0       0       0       0       0
  1987 ;;      Totals:         0       0       0       0       0       0
  1988 ;;Total ram usage:        0 bytes
  1989 ;; Hardware stack levels used:    1
  1990 ;; This function calls:
  1991 ;;		Nothing
  1992 ;; This function is called by:
  1993 ;;		_write_byte
  1994 ;; This function uses a non-reentrant model
  1995 ;;
  1996                           
  1997                           
  1998                           ;psect for function _get_DIO_PIN_value
  1999  0652                     _get_DIO_PIN_value:
  2000  0652                     l997:	
  2001                           ;incstack = 0
  2002                           ; Regs used in _get_DIO_PIN_value: [wreg+status,2+status,0]
  2003                           
  2004  0652                     l1003:	
  2005                           ;tm1637.c: 64:     if(0x01 == 0x00){ return PORTAbits.RA0; }
  2006                           
  2007  0652  0020               	movlb	0	; select bank0
  2008  0653  0C0C               	rrf	12,w	;volatile
  2009  0654  3901               	andlw	1
  2010  0655                     l98:
  2011  0655  0008               	return
  2012  0656                     __end_of_get_DIO_PIN_value:
  2013                           
  2014                           	psect	text7
  2015  064D                     __ptext7:	
  2016 ;; *************** function _bit_delay *****************
  2017 ;; Defined at:
  2018 ;;		line 31 in file "tm1637.c"
  2019 ;; Parameters:    Size  Location     Type
  2020 ;;		None
  2021 ;; Auto vars:     Size  Location     Type
  2022 ;;		None
  2023 ;; Return value:  Size  Location     Type
  2024 ;;                  1    wreg      void 
  2025 ;; Registers used:
  2026 ;;		None
  2027 ;; Tracked objects:
  2028 ;;		On entry : 0/0
  2029 ;;		On exit  : 0/0
  2030 ;;		Unchanged: 0/0
  2031 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  2032 ;;      Params:         0       0       0       0       0       0
  2033 ;;      Locals:         0       0       0       0       0       0
  2034 ;;      Temps:          0       0       0       0       0       0
  2035 ;;      Totals:         0       0       0       0       0       0
  2036 ;;Total ram usage:        0 bytes
  2037 ;; Hardware stack levels used:    1
  2038 ;; This function calls:
  2039 ;;		Nothing
  2040 ;; This function is called by:
  2041 ;;		_write_byte
  2042 ;; This function uses a non-reentrant model
  2043 ;;
  2044                           
  2045                           
  2046                           ;psect for function _bit_delay
  2047  064D                     _bit_delay:
  2048  064D                     l88:	
  2049                           ;incstack = 0
  2050                           ; Regs used in _bit_delay: []
  2051                           
  2052  064D  0008               	return
  2053  064E                     __end_of_bit_delay:
  2054                           
  2055                           	psect	text8
  2056  06BE                     __ptext8:	
  2057 ;; *************** function _stop_segment *****************
  2058 ;; Defined at:
  2059 ;;		line 49 in file "tm1637.c"
  2060 ;; Parameters:    Size  Location     Type
  2061 ;;		None
  2062 ;; Auto vars:     Size  Location     Type
  2063 ;;		None
  2064 ;; Return value:  Size  Location     Type
  2065 ;;                  1    wreg      void 
  2066 ;; Registers used:
  2067 ;;		wreg, status,2, status,0
  2068 ;; Tracked objects:
  2069 ;;		On entry : 0/0
  2070 ;;		On exit  : 0/0
  2071 ;;		Unchanged: 0/0
  2072 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  2073 ;;      Params:         0       0       0       0       0       0
  2074 ;;      Locals:         0       0       0       0       0       0
  2075 ;;      Temps:          1       0       0       0       0       0
  2076 ;;      Totals:         1       0       0       0       0       0
  2077 ;;Total ram usage:        1 bytes
  2078 ;; Hardware stack levels used:    1
  2079 ;; This function calls:
  2080 ;;		Nothing
  2081 ;; This function is called by:
  2082 ;;		_set_segments
  2083 ;; This function uses a non-reentrant model
  2084 ;;
  2085                           
  2086                           
  2087                           ;psect for function _stop_segment
  2088  06BE                     _stop_segment:
  2089  06BE                     l1037:	
  2090                           ;incstack = 0
  2091                           ; Regs used in _stop_segment: [wreg+status,2+status,0]
  2092                           
  2093                           
  2094                           ;tm1637.c: 51:     TRISA &= ~0x01;
  2095  06BE  30FE               	movlw	254
  2096  06BF  00F0               	movwf	??_stop_segment
  2097  06C0  0870               	movf	??_stop_segment,w
  2098  06C1  0021               	movlb	1	; select bank1
  2099  06C2  058C               	andwf	12,f	;volatile
  2100                           
  2101                           ;tm1637.c: 52:     TRISA &= ~0x02;
  2102  06C3  30FD               	movlw	253
  2103  06C4  00F0               	movwf	??_stop_segment
  2104  06C5  0870               	movf	??_stop_segment,w
  2105  06C6  058C               	andwf	12,f	;volatile
  2106                           
  2107                           ;tm1637.c: 55:     LATA &= ~0x01;
  2108  06C7  30FE               	movlw	254
  2109  06C8  00F0               	movwf	??_stop_segment
  2110  06C9  0870               	movf	??_stop_segment,w
  2111  06CA  0022               	movlb	2	; select bank2
  2112  06CB  058C               	andwf	12,f	;volatile
  2113                           
  2114                           ;tm1637.c: 56:     LATA &= ~0x02;
  2115  06CC  30FD               	movlw	253
  2116  06CD  00F0               	movwf	??_stop_segment
  2117  06CE  0870               	movf	??_stop_segment,w
  2118  06CF  058C               	andwf	12,f	;volatile
  2119  06D0                     l1039:
  2120                           
  2121                           ;tm1637.c: 59:     LATA |= 0x01;
  2122  06D0  140C               	bsf	12,0	;volatile
  2123  06D1                     l1041:
  2124                           
  2125                           ;tm1637.c: 60:     LATA |= 0x02;
  2126  06D1  148C               	bsf	12,1	;volatile
  2127  06D2                     l94:
  2128  06D2  0008               	return
  2129  06D3                     __end_of_stop_segment:
  2130                           
  2131                           	psect	text9
  2132  06A9                     __ptext9:	
  2133 ;; *************** function _start_segment *****************
  2134 ;; Defined at:
  2135 ;;		line 35 in file "tm1637.c"
  2136 ;; Parameters:    Size  Location     Type
  2137 ;;		None
  2138 ;; Auto vars:     Size  Location     Type
  2139 ;;		None
  2140 ;; Return value:  Size  Location     Type
  2141 ;;                  1    wreg      void 
  2142 ;; Registers used:
  2143 ;;		wreg, status,2, status,0
  2144 ;; Tracked objects:
  2145 ;;		On entry : 0/0
  2146 ;;		On exit  : 0/0
  2147 ;;		Unchanged: 0/0
  2148 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  2149 ;;      Params:         0       0       0       0       0       0
  2150 ;;      Locals:         0       0       0       0       0       0
  2151 ;;      Temps:          1       0       0       0       0       0
  2152 ;;      Totals:         1       0       0       0       0       0
  2153 ;;Total ram usage:        1 bytes
  2154 ;; Hardware stack levels used:    1
  2155 ;; This function calls:
  2156 ;;		Nothing
  2157 ;; This function is called by:
  2158 ;;		_set_segments
  2159 ;; This function uses a non-reentrant model
  2160 ;;
  2161                           
  2162                           
  2163                           ;psect for function _start_segment
  2164  06A9                     _start_segment:
  2165  06A9                     l1031:	
  2166                           ;incstack = 0
  2167                           ; Regs used in _start_segment: [wreg+status,2+status,0]
  2168                           
  2169                           
  2170                           ;tm1637.c: 37:     TRISA &= ~0x01;
  2171  06A9  30FE               	movlw	254
  2172  06AA  00F0               	movwf	??_start_segment
  2173  06AB  0870               	movf	??_start_segment,w
  2174  06AC  0021               	movlb	1	; select bank1
  2175  06AD  058C               	andwf	12,f	;volatile
  2176                           
  2177                           ;tm1637.c: 38:     TRISA &= ~0x02;
  2178  06AE  30FD               	movlw	253
  2179  06AF  00F0               	movwf	??_start_segment
  2180  06B0  0870               	movf	??_start_segment,w
  2181  06B1  058C               	andwf	12,f	;volatile
  2182  06B2                     l1033:
  2183                           
  2184                           ;tm1637.c: 41:     LATA |= 0x01;
  2185  06B2  0022               	movlb	2	; select bank2
  2186  06B3  140C               	bsf	12,0	;volatile
  2187  06B4                     l1035:
  2188                           
  2189                           ;tm1637.c: 42:     LATA |= 0x02;
  2190  06B4  148C               	bsf	12,1	;volatile
  2191                           
  2192                           ;tm1637.c: 45:     LATA &= ~0x01;
  2193  06B5  30FE               	movlw	254
  2194  06B6  00F0               	movwf	??_start_segment
  2195  06B7  0870               	movf	??_start_segment,w
  2196  06B8  058C               	andwf	12,f	;volatile
  2197                           
  2198                           ;tm1637.c: 46:     LATA &= ~0x02;
  2199  06B9  30FD               	movlw	253
  2200  06BA  00F0               	movwf	??_start_segment
  2201  06BB  0870               	movf	??_start_segment,w
  2202  06BC  058C               	andwf	12,f	;volatile
  2203  06BD                     l91:
  2204  06BD  0008               	return
  2205  06BE                     __end_of_start_segment:
  2206                           
  2207                           	psect	text10
  2208  066B                     __ptext10:	
  2209 ;; *************** function _SYSTEM_Initialize *****************
  2210 ;; Defined at:
  2211 ;;		line 50 in file "mcc_generated_files/mcc.c"
  2212 ;; Parameters:    Size  Location     Type
  2213 ;;		None
  2214 ;; Auto vars:     Size  Location     Type
  2215 ;;		None
  2216 ;; Return value:  Size  Location     Type
  2217 ;;                  1    wreg      void 
  2218 ;; Registers used:
  2219 ;;		wreg, status,2, status,0, pclath, cstack
  2220 ;; Tracked objects:
  2221 ;;		On entry : 0/0
  2222 ;;		On exit  : 0/0
  2223 ;;		Unchanged: 0/0
  2224 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  2225 ;;      Params:         0       0       0       0       0       0
  2226 ;;      Locals:         0       0       0       0       0       0
  2227 ;;      Temps:          0       0       0       0       0       0
  2228 ;;      Totals:         0       0       0       0       0       0
  2229 ;;Total ram usage:        0 bytes
  2230 ;; Hardware stack levels used:    1
  2231 ;; Hardware stack levels required when called:    1
  2232 ;; This function calls:
  2233 ;;		_OSCILLATOR_Initialize
  2234 ;;		_PIN_MANAGER_Initialize
  2235 ;;		_WDT_Initialize
  2236 ;; This function is called by:
  2237 ;;		_main
  2238 ;; This function uses a non-reentrant model
  2239 ;;
  2240                           
  2241                           
  2242                           ;psect for function _SYSTEM_Initialize
  2243  066B                     _SYSTEM_Initialize:
  2244  066B                     l1119:	
  2245                           ;incstack = 0
  2246                           ; Regs used in _SYSTEM_Initialize: [wreg+status,2+status,0+pclath+cstack]
  2247                           
  2248                           
  2249                           ;mcc_generated_files/mcc.c: 53:     PIN_MANAGER_Initialize();
  2250  066B  3186  26D3  3186   	fcall	_PIN_MANAGER_Initialize
  2251                           
  2252                           ;mcc_generated_files/mcc.c: 54:     OSCILLATOR_Initialize();
  2253  066E  3186  265C  3186   	fcall	_OSCILLATOR_Initialize
  2254                           
  2255                           ;mcc_generated_files/mcc.c: 55:     WDT_Initialize();
  2256  0671  3186  264E  3186   	fcall	_WDT_Initialize
  2257  0674                     l177:
  2258  0674  0008               	return
  2259  0675                     __end_of_SYSTEM_Initialize:
  2260                           
  2261                           	psect	text11
  2262  064E                     __ptext11:	
  2263 ;; *************** function _WDT_Initialize *****************
  2264 ;; Defined at:
  2265 ;;		line 68 in file "mcc_generated_files/mcc.c"
  2266 ;; Parameters:    Size  Location     Type
  2267 ;;		None
  2268 ;; Auto vars:     Size  Location     Type
  2269 ;;		None
  2270 ;; Return value:  Size  Location     Type
  2271 ;;                  1    wreg      void 
  2272 ;; Registers used:
  2273 ;;		wreg
  2274 ;; Tracked objects:
  2275 ;;		On entry : 0/0
  2276 ;;		On exit  : 0/0
  2277 ;;		Unchanged: 0/0
  2278 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  2279 ;;      Params:         0       0       0       0       0       0
  2280 ;;      Locals:         0       0       0       0       0       0
  2281 ;;      Temps:          0       0       0       0       0       0
  2282 ;;      Totals:         0       0       0       0       0       0
  2283 ;;Total ram usage:        0 bytes
  2284 ;; Hardware stack levels used:    1
  2285 ;; This function calls:
  2286 ;;		Nothing
  2287 ;; This function is called by:
  2288 ;;		_SYSTEM_Initialize
  2289 ;; This function uses a non-reentrant model
  2290 ;;
  2291                           
  2292                           
  2293                           ;psect for function _WDT_Initialize
  2294  064E                     _WDT_Initialize:
  2295  064E                     l1117:	
  2296                           ;incstack = 0
  2297                           ; Regs used in _WDT_Initialize: [wreg]
  2298                           
  2299                           
  2300                           ;mcc_generated_files/mcc.c: 71:     WDTCON = 0x16;
  2301  064E  3016               	movlw	22
  2302  064F  0021               	movlb	1	; select bank1
  2303  0650  0097               	movwf	23	;volatile
  2304  0651                     l183:
  2305  0651  0008               	return
  2306  0652                     __end_of_WDT_Initialize:
  2307                           
  2308                           	psect	text12
  2309  06D3                     __ptext12:	
  2310 ;; *************** function _PIN_MANAGER_Initialize *****************
  2311 ;; Defined at:
  2312 ;;		line 55 in file "mcc_generated_files/pin_manager.c"
  2313 ;; Parameters:    Size  Location     Type
  2314 ;;		None
  2315 ;; Auto vars:     Size  Location     Type
  2316 ;;		None
  2317 ;; Return value:  Size  Location     Type
  2318 ;;                  1    wreg      void 
  2319 ;; Registers used:
  2320 ;;		wreg, status,2
  2321 ;; Tracked objects:
  2322 ;;		On entry : 0/0
  2323 ;;		On exit  : 0/0
  2324 ;;		Unchanged: 0/0
  2325 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  2326 ;;      Params:         0       0       0       0       0       0
  2327 ;;      Locals:         0       0       0       0       0       0
  2328 ;;      Temps:          0       0       0       0       0       0
  2329 ;;      Totals:         0       0       0       0       0       0
  2330 ;;Total ram usage:        0 bytes
  2331 ;; Hardware stack levels used:    1
  2332 ;; This function calls:
  2333 ;;		Nothing
  2334 ;; This function is called by:
  2335 ;;		_SYSTEM_Initialize
  2336 ;; This function uses a non-reentrant model
  2337 ;;
  2338                           
  2339                           
  2340                           ;psect for function _PIN_MANAGER_Initialize
  2341  06D3                     _PIN_MANAGER_Initialize:
  2342  06D3                     l1099:	
  2343                           ;incstack = 0
  2344                           ; Regs used in _PIN_MANAGER_Initialize: [wreg+status,2]
  2345                           
  2346                           
  2347                           ;mcc_generated_files/pin_manager.c: 60:     LATA = 0x00;
  2348  06D3  0022               	movlb	2	; select bank2
  2349  06D4  018C               	clrf	12	;volatile
  2350                           
  2351                           ;mcc_generated_files/pin_manager.c: 61:     LATB = 0x00;
  2352  06D5  018D               	clrf	13	;volatile
  2353  06D6                     l1101:
  2354                           
  2355                           ;mcc_generated_files/pin_manager.c: 66:     TRISA = 0xFF;
  2356  06D6  30FF               	movlw	255
  2357  06D7  0021               	movlb	1	; select bank1
  2358  06D8  008C               	movwf	12	;volatile
  2359  06D9                     l1103:
  2360                           
  2361                           ;mcc_generated_files/pin_manager.c: 67:     TRISB = 0xFF;
  2362  06D9  30FF               	movlw	255
  2363  06DA  008D               	movwf	13	;volatile
  2364  06DB                     l1105:
  2365                           
  2366                           ;mcc_generated_files/pin_manager.c: 72:     ANSELB = 0xFE;
  2367  06DB  30FE               	movlw	254
  2368  06DC  0023               	movlb	3	; select bank3
  2369  06DD  008D               	movwf	13	;volatile
  2370  06DE                     l1107:
  2371                           
  2372                           ;mcc_generated_files/pin_manager.c: 73:     ANSELA = 0x1F;
  2373  06DE  301F               	movlw	31
  2374  06DF  008C               	movwf	12	;volatile
  2375                           
  2376                           ;mcc_generated_files/pin_manager.c: 78:     WPUB = 0x00;
  2377  06E0  0024               	movlb	4	; select bank4
  2378  06E1  018D               	clrf	13	;volatile
  2379                           
  2380                           ;mcc_generated_files/pin_manager.c: 79:     WPUA = 0x00;
  2381  06E2  018C               	clrf	12	;volatile
  2382  06E3                     l1109:
  2383                           
  2384                           ;mcc_generated_files/pin_manager.c: 80:     OPTION_REGbits.nWPUEN = 1;
  2385  06E3  0021               	movlb	1	; select bank1
  2386  06E4  1795               	bsf	21,7	;volatile
  2387                           
  2388                           ;mcc_generated_files/pin_manager.c: 86:     APFCON0 = 0x00;
  2389  06E5  0022               	movlb	2	; select bank2
  2390  06E6  019D               	clrf	29	;volatile
  2391                           
  2392                           ;mcc_generated_files/pin_manager.c: 87:     APFCON1 = 0x00;
  2393  06E7  019E               	clrf	30	;volatile
  2394  06E8                     l157:
  2395  06E8  0008               	return
  2396  06E9                     __end_of_PIN_MANAGER_Initialize:
  2397                           
  2398                           	psect	text13
  2399  065C                     __ptext13:	
  2400 ;; *************** function _OSCILLATOR_Initialize *****************
  2401 ;; Defined at:
  2402 ;;		line 58 in file "mcc_generated_files/mcc.c"
  2403 ;; Parameters:    Size  Location     Type
  2404 ;;		None
  2405 ;; Auto vars:     Size  Location     Type
  2406 ;;		None
  2407 ;; Return value:  Size  Location     Type
  2408 ;;                  1    wreg      void 
  2409 ;; Registers used:
  2410 ;;		wreg, status,2
  2411 ;; Tracked objects:
  2412 ;;		On entry : 0/0
  2413 ;;		On exit  : 0/0
  2414 ;;		Unchanged: 0/0
  2415 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  2416 ;;      Params:         0       0       0       0       0       0
  2417 ;;      Locals:         0       0       0       0       0       0
  2418 ;;      Temps:          0       0       0       0       0       0
  2419 ;;      Totals:         0       0       0       0       0       0
  2420 ;;Total ram usage:        0 bytes
  2421 ;; Hardware stack levels used:    1
  2422 ;; This function calls:
  2423 ;;		Nothing
  2424 ;; This function is called by:
  2425 ;;		_SYSTEM_Initialize
  2426 ;; This function uses a non-reentrant model
  2427 ;;
  2428                           
  2429                           
  2430                           ;psect for function _OSCILLATOR_Initialize
  2431  065C                     _OSCILLATOR_Initialize:
  2432  065C                     l1111:	
  2433                           ;incstack = 0
  2434                           ; Regs used in _OSCILLATOR_Initialize: [wreg+status,2]
  2435                           
  2436                           
  2437                           ;mcc_generated_files/mcc.c: 61:     OSCCON = 0x70;
  2438  065C  3070               	movlw	112
  2439  065D  0021               	movlb	1	; select bank1
  2440  065E  0099               	movwf	25	;volatile
  2441  065F                     l1113:
  2442                           
  2443                           ;mcc_generated_files/mcc.c: 63:     OSCTUNE = 0x00;
  2444  065F  0198               	clrf	24	;volatile
  2445  0660                     l1115:
  2446                           
  2447                           ;mcc_generated_files/mcc.c: 65:     BORCON = 0x00;
  2448  0660  0022               	movlb	2	; select bank2
  2449  0661  0196               	clrf	22	;volatile
  2450  0662                     l180:
  2451  0662  0008               	return
  2452  0663                     __end_of_OSCILLATOR_Initialize:
  2453  007E                     btemp	set	126	;btemp
  2454  007E                     wtemp0	set	126
  2455                           
  2456                           	psect	config
  2457                           
  2458                           ;Config register CONFIG1 @ 0x8007
  2459                           ;	Oscillator Selection
  2460                           ;	FOSC = INTOSC, INTOSC oscillator: I/O function on CLKIN pin
  2461                           ;	Watchdog Timer Enable
  2462                           ;	WDTE = OFF, WDT disabled
  2463                           ;	Power-up Timer Enable
  2464                           ;	PWRTE = OFF, PWRT disabled
  2465                           ;	MCLR Pin Function Select
  2466                           ;	MCLRE = ON, MCLR/VPP pin function is MCLR
  2467                           ;	Flash Program Memory Code Protection
  2468                           ;	CP = OFF, Program memory code protection is disabled
  2469                           ;	Data Memory Code Protection
  2470                           ;	CPD = OFF, Data memory code protection is disabled
  2471                           ;	Brown-out Reset Enable
  2472                           ;	BOREN = ON, Brown-out Reset enabled
  2473                           ;	Clock Out Enable
  2474                           ;	CLKOUTEN = OFF, CLKOUT function is disabled. I/O or oscillator function on the CLKOUT 
      +                          pin
  2475                           ;	Internal/External Switchover
  2476                           ;	IESO = ON, Internal/External Switchover mode is enabled
  2477                           ;	Fail-Safe Clock Monitor Enable
  2478                           ;	FCMEN = ON, Fail-Safe Clock Monitor is enabled
  2479  8007                     	org	32775
  2480  8007  3FE4               	dw	16356
  2481                           
  2482                           ;Config register CONFIG2 @ 0x8008
  2483                           ;	Flash Memory Self-Write Protection
  2484                           ;	WRT = OFF, Write protection off
  2485                           ;	PLL Enable
  2486                           ;	PLLEN = OFF, 4x PLL disabled
  2487                           ;	Stack Overflow/Underflow Reset Enable
  2488                           ;	STVREN = ON, Stack Overflow or Underflow will cause a Reset
  2489                           ;	Brown-out Reset Voltage Selection
  2490                           ;	BORV = LO, Brown-out Reset Voltage (Vbor), low trip point selected.
  2491                           ;	Low-Voltage Programming Enable
  2492                           ;	LVP = OFF, High-voltage on MCLR/VPP must be used for programming
  2493  8008                     	org	32776
  2494  8008  1EFF               	dw	7935

Data Sizes:
    Strings     0
    Constant    0
    Data        14
    BSS         5
    Persistent  32
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14     13      14
    BANK0            80     10      28
    BANK1            80      0       0
    BANK2            80      0       0
    BANK3            80      0       0
    BANK4            48      0       0

Pointer List with Targets:

    set_segments@segments	PTR const unsigned char  size(1) Largest target is 4
		 -> clear_segment@data(BANK0[4]), main@data(BANK0[4]), 


Critical Paths under _main in COMMON

    _main->_clear_segment
    _clear_segment->_set_segments
    _set_segments->_write_byte

Critical Paths under _main in BANK0

    _main->_clear_segment

Critical Paths under _main in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 8     8      0    2065
                                             11 COMMON     2     2      0
                                              4 BANK0      6     6      0
                  _SYSTEM_Initialize
                      _clear_segment
                       _encode_digit
                     _set_brigthness
                       _set_segments
 ---------------------------------------------------------------------------------
 (1) _set_brigthness                                       3     2      1     142
                                              0 COMMON     3     2      1
 ---------------------------------------------------------------------------------
 (1) _encode_digit                                         1     1      0      22
                                              0 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (1) _clear_segment                                        5     5      0     834
                                             10 COMMON     1     1      0
                                              0 BANK0      4     4      0
                       _set_segments
 ---------------------------------------------------------------------------------
 (1) _set_segments                                         5     3      2     810
                                              5 COMMON     5     3      2
                      _start_segment
                       _stop_segment
                         _write_byte
 ---------------------------------------------------------------------------------
 (2) _write_byte                                           5     5      0     143
                                              0 COMMON     5     5      0
                          _bit_delay
                  _get_DIO_PIN_value
 ---------------------------------------------------------------------------------
 (3) _get_DIO_PIN_value                                    0     0      0       0
 ---------------------------------------------------------------------------------
 (3) _bit_delay                                            0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _stop_segment                                         1     1      0       0
                                              0 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (2) _start_segment                                        1     1      0       0
                                              0 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (1) _SYSTEM_Initialize                                    0     0      0       0
              _OSCILLATOR_Initialize
             _PIN_MANAGER_Initialize
                     _WDT_Initialize
 ---------------------------------------------------------------------------------
 (2) _WDT_Initialize                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _PIN_MANAGER_Initialize                               0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _OSCILLATOR_Initialize                                0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 3
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _SYSTEM_Initialize
     _OSCILLATOR_Initialize
     _PIN_MANAGER_Initialize
     _WDT_Initialize
   _clear_segment
     _set_segments
       _start_segment
       _stop_segment
       _write_byte
         _bit_delay
         _get_DIO_PIN_value
   _encode_digit
   _set_brigthness
   _set_segments
     _start_segment
     _stop_segment
     _write_byte
       _bit_delay
       _get_DIO_PIN_value

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             170      0       0       0        0.0%
EEDATA             100      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
BITCOMMON            E      0       0       1        0.0%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
COMMON               E      D       E       2      100.0%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
BITSFR2              0      0       0       3        0.0%
SFR2                 0      0       0       3        0.0%
STACK                0      0       0       3        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
ABS                  0      0      2A       4        0.0%
BITBANK0            50      0       0       5        0.0%
BITSFR4              0      0       0       5        0.0%
SFR4                 0      0       0       5        0.0%
BANK0               50      A      1C       6       35.0%
BITSFR5              0      0       0       6        0.0%
SFR5                 0      0       0       6        0.0%
BITBANK1            50      0       0       7        0.0%
BITSFR6              0      0       0       7        0.0%
SFR6                 0      0       0       7        0.0%
BANK1               50      0       0       8        0.0%
BITSFR7              0      0       0       8        0.0%
SFR7                 0      0       0       8        0.0%
BITBANK2            50      0       0       9        0.0%
BITSFR8              0      0       0       9        0.0%
SFR8                 0      0       0       9        0.0%
BANK2               50      0       0      10        0.0%
BITSFR9              0      0       0      10        0.0%
SFR9                 0      0       0      10        0.0%
BITBANK3            50      0       0      11        0.0%
BITSFR10             0      0       0      11        0.0%
SFR10                0      0       0      11        0.0%
BANK3               50      0       0      12        0.0%
BITSFR11             0      0       0      12        0.0%
SFR11                0      0       0      12        0.0%
BITBANK4            30      0       0      13        0.0%
BITSFR12             0      0       0      13        0.0%
SFR12                0      0       0      13        0.0%
BANK4               30      0       0      14        0.0%
BITSFR13             0      0       0      14        0.0%
SFR13                0      0       0      14        0.0%
BITSFR14             0      0       0      15        0.0%
SFR14                0      0       0      15        0.0%
DATA                 0      0      2A      15        0.0%
BITSFR15             0      0       0      16        0.0%
SFR15                0      0       0      16        0.0%
BITSFR16             0      0       0      17        0.0%
SFR16                0      0       0      17        0.0%
BITSFR17             0      0       0      18        0.0%
SFR17                0      0       0      18        0.0%
BITSFR18             0      0       0      19        0.0%
SFR18                0      0       0      19        0.0%
BITSFR19             0      0       0      20        0.0%
SFR19                0      0       0      20        0.0%
BITSFR20             0      0       0      21        0.0%
SFR20                0      0       0      21        0.0%
BITSFR21             0      0       0      22        0.0%
SFR21                0      0       0      22        0.0%
BITSFR22             0      0       0      23        0.0%
SFR22                0      0       0      23        0.0%
BITSFR23             0      0       0      24        0.0%
SFR23                0      0       0      24        0.0%
BITSFR24             0      0       0      25        0.0%
SFR24                0      0       0      25        0.0%
BITSFR25             0      0       0      26        0.0%
SFR25                0      0       0      26        0.0%
BITSFR26             0      0       0      27        0.0%
SFR26                0      0       0      27        0.0%
BITSFR27             0      0       0      28        0.0%
SFR27                0      0       0      28        0.0%
BITSFR28             0      0       0      29        0.0%
SFR28                0      0       0      29        0.0%
BITSFR29             0      0       0      30        0.0%
SFR29                0      0       0      30        0.0%
BITSFR30             0      0       0      31        0.0%
SFR30                0      0       0      31        0.0%
BITSFR31             0      0       0      32        0.0%
SFR31                0      0       0      32        0.0%


Microchip Technology PIC Macro Assembler V2.30 build 20200825195618 
Symbol Table                                                                                   Thu Oct 21 22:08:50 2021

         __size_of_start_segment 0015                      _SSPSTATbits 0214                               l91 06BD  
                             l94 06D2                               l88 064D                               l98 0655  
                            l113 0777                              l124 0722                              l132 066A  
                            l118 06A8                              l129 0695                              l180 0662  
                            l157 06E8                              l183 0651                              l177 0674  
                            l997 0652                              u200 07D0                              u201 07CF  
                            u150 0737                              u151 0736                              u160 074C  
                            u161 074B                              u217 07DE                              u170 0762  
                            u171 0761                              u180 0713                              u181 0712  
                            u190 069C                              u191 069B                              wreg 0009  
                 ??_encode_digit 0070                             l1003 0652                             l1101 06D6  
                           l1111 065C                             l1103 06D9                             l1031 06A9  
                           l1113 065F                             l1105 06DB                             l1033 06B2  
                           l1041 06D1                             l1121 0683                             l1115 0660  
                           l1107 06DE                             l1035 06B4                             l1043 0724  
                           l1123 068C                             l1131 069C                             l1109 06E3  
                           l1117 064E                             l1037 06BE                             l1061 073D  
                           l1053 072E                             l1045 0728                             l1125 0664  
                           l1133 06A3                             l1141 0787                             l1119 066B  
                           l1039 06D0                             l1071 0752                             l1063 0746  
                           l1055 0733                             l1047 072D                             l1151 07AD  
                           l1143 078F                             l1135 0778                             l1081 076C  
                           l1073 0754                             l1065 074C                             l1057 0737  
                           l1129 0697                             l1161 07C6                             l1153 07B6  
                           l1145 0797                             l1137 077B                             l1083 076F  
                           l1075 0757                             l1067 0750                             l1059 0739  
                           l1091 06FF                             l1163 07CA                             l1155 07B8  
                           l1147 079F                             l1139 0784                             l1077 075D  
                           l1069 0751                             l1093 0709                             l1165 07D0  
                           l1149 07A7                             l1079 0762                             l1095 070D  
                           l1087 06EA                             l1167 07D9                             l1159 07B9  
                           l1097 0713                             l1089 06FD                             l1169 07E4  
                           l1099 06D3                             _LATA 010C                             _LATB 010D  
                           _WPUA 020C                             _WPUB 020D                             _main 0778  
                  write_byte@ack 0072                             fsr0h 0005                             fsr1h 0007  
                           fsr0l 0004                             indf1 0001                             fsr1l 0006  
                           btemp 007E                             start 0002   __size_of_OSCILLATOR_Initialize 0007  
  __end_of_OSCILLATOR_Initialize 0663            __size_of_stop_segment 0015                            ?_main 0070  
                          _TRISA 008C                            _TRISB 008D                   _WDT_Initialize 064E  
                  _start_segment 06A9                   write_byte@data 0073                            main@i 0037  
                          main@k 0032                            status 0003                            wtemp0 007E  
                __initialization 07EC                     _stop_segment 06BE                     __end_of_main 07EC  
                         ??_main 007B           __end_of_WDT_Initialize 0652                  set_segments@pos 0076  
                 ?_start_segment 0070                           _ANSELA 018C                           _ANSELB 018D  
                         _BORCON 0116                           _OSCCON 0099                           _WDTCON 0097  
                         _SSPBUF 0211            __end_of_clear_segment 0696             __end_of_encode_digit 066B  
                ?_WDT_Initialize 0070          __size_of_set_brigthness 0013                _SYSTEM_Initialize 066B  
        __end_of__initialization 07FD               ?_SYSTEM_Initialize 0070         set_brigthness@brightness 0072  
                 __pcstackCOMMON 0070                     __pidataBANK0 0675              ??_SYSTEM_Initialize 0070  
             __size_of_bit_delay 0001                   _OPTION_REGbits 0095                  ??_start_segment 0070  
      __end_of_SYSTEM_Initialize 0675                       __pbssBANK0 0038                _get_DIO_PIN_value 0652  
             ?_get_DIO_PIN_value 0070                       __pmaintext 0778              ??_get_DIO_PIN_value 0070  
                        _APFCON0 011D                          _APFCON1 011E               set_segments@length 0075  
                        _OSCTUNE 0098                          _SSPCON2 0216                          _SSPSTAT 0214  
      __end_of_get_DIO_PIN_value 0656                __end_of_bit_delay 064E            __size_of_encode_digit 0008  
                  ?_set_segments 0075                          __ptext1 0696                          __ptext2 0663  
                        __ptext3 0683                          __ptext4 06E9                          __ptext5 0723  
                        __ptext6 0652                          __ptext7 064D                          __ptext8 06BE  
                        __ptext9 06A9            _OSCILLATOR_Initialize 065C                          _segdata 0020  
       ??_PIN_MANAGER_Initialize 0070                   _set_brigthness 0696       __size_of_SYSTEM_Initialize 000A  
           end_of_initialization 07FD                     _encode_digit 0663               clear_segment@F2506 0038  
                        init_ram 0656                          initloop 0657             set_segments@segments 0078  
                 ??_set_segments 0077                 ??_WDT_Initialize 0070                        _PORTAbits 000C  
                   _m_brightness 007D           __end_of_set_brigthness 06A9       __size_of_get_DIO_PIN_value 0004  
                     _write_byte 0723           ?_OSCILLATOR_Initialize 0070              start_initialization 07EC  
                ?_set_brigthness 0070  __size_of_PIN_MANAGER_Initialize 0016           __size_of_clear_segment 0013  
                    __pdataBANK0 0020                      __pbssCOMMON 007D                        ___latbits 0001  
                  __pcstackBANK0 002E            __end_of_start_segment 06BE             __end_of_set_segments 0723  
               set_brigthness@on 0070           _PIN_MANAGER_Initialize 06D3                    ?_stop_segment 0070  
                      _bit_delay 064D                    _clear_segment 0683                      ?_write_byte 0070  
                 ??_stop_segment 0070                   ?_clear_segment 0070                clear_segment@data 002E  
                     ?_bit_delay 0070                        main@F2513 002A                encode_digit@digit 0070  
                    write_byte@b 0071                      write_byte@i 0074              __size_of_write_byte 0055  
                  set_segments@k 0079          ??_OSCILLATOR_Initialize 0070                 ??_set_brigthness 0071  
          __size_of_set_segments 003A                         __ptext10 066B                         __ptext11 064E  
                       __ptext12 06D3                         __ptext13 065C                    __size_of_main 0074  
                ??_clear_segment 007A                      ??_bit_delay 0070                         main@data 0033  
                   _set_segments 06E9             __end_of_stop_segment 06D3          __size_of_WDT_Initialize 0004  
        ?_PIN_MANAGER_Initialize 0070                     ??_write_byte 0070                      _SSPCON1bits 0215  
                    _SSPCON2bits 0216                    ?_encode_digit 0070   __end_of_PIN_MANAGER_Initialize 06E9  
             __end_of_write_byte 0778  

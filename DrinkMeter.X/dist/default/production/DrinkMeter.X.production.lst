

Microchip MPLAB XC8 Assembler V2.32 build 20210201212658 
                                                                                               Sun Dec 12 21:45:22 2021

Microchip MPLAB XC8 C Compiler v2.32 (Free license) build 20210201212658 Og1 
     1                           	processor	16F1938
     2                           	pagewidth 120
     3                           	opt	flic
     4                           	psect	idataBANK2,global,class=CODE,delta=2,noexec
     5                           	psect	stringtext1,global,class=STRCODE,delta=2,noexec
     6                           	psect	stringtext2,global,class=STRCODE,delta=2,noexec
     7                           	psect	stringtext3,global,class=STRCODE,delta=2,noexec
     8                           	psect	stringtext4,global,class=STRCODE,delta=2,noexec
     9                           	psect	stringtext5,global,class=STRCODE,delta=2,noexec
    10                           	psect	stringtext6,global,class=STRCODE,delta=2,noexec
    11                           	psect	stringtext7,global,class=STRCODE,delta=2,noexec
    12                           	psect	stringtext8,global,class=STRCODE,delta=2,noexec
    13                           	psect	stringtext9,global,class=STRCODE,delta=2,noexec
    14                           	psect	stringtext10,global,class=STRCODE,delta=2,noexec
    15                           	psect	cinit,global,class=CODE,merge=1,delta=2
    16                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1,noexec
    17                           	psect	bssBANK2,global,class=BANK2,space=1,delta=1,noexec
    18                           	psect	dataBANK2,global,class=BANK2,space=1,delta=1,noexec
    19                           	psect	inittext,global,class=CODE,delta=2
    20                           	psect	clrtext,global,class=CODE,delta=2
    21                           	psect	cstackBANK1,global,class=BANK1,space=1,delta=1,noexec
    22                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1,noexec
    23                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,noexec
    24                           	psect	maintext,global,class=CODE,merge=1,split=1,delta=2
    25                           	psect	text1,local,class=CODE,merge=1,delta=2
    26                           	psect	text2,local,class=CODE,merge=1,delta=2
    27                           	psect	text3,local,class=CODE,merge=1,delta=2,group=3
    28                           	psect	text4,local,class=CODE,merge=1,delta=2,group=1
    29                           	psect	text5,local,class=CODE,merge=1,delta=2,group=1
    30                           	psect	text6,local,class=CODE,merge=1,delta=2,group=1
    31                           	psect	text7,local,class=CODE,merge=1,delta=2,group=2
    32                           	psect	text8,local,class=CODE,merge=1,delta=2,group=2
    33                           	psect	text9,local,class=CODE,merge=1,delta=2,group=3
    34                           	psect	text10,local,class=CODE,merge=1,delta=2,group=1
    35                           	psect	text11,local,class=CODE,merge=1,delta=2,group=1
    36                           	psect	text12,local,class=CODE,merge=1,delta=2,group=3
    37                           	psect	text13,local,class=CODE,merge=1,delta=2,group=3
    38                           	psect	text14,local,class=CODE,merge=1,delta=2,group=3
    39                           	psect	text15,local,class=CODE,merge=1,delta=2,group=3
    40                           	psect	text16,local,class=CODE,merge=1,delta=2,group=3
    41                           	psect	text17,local,class=CODE,merge=1,delta=2,group=2
    42                           	psect	text18,local,class=CODE,merge=1,delta=2,group=2
    43                           	psect	text19,local,class=CODE,merge=1,delta=2
    44                           	psect	text20,local,class=CODE,merge=1,delta=2
    45                           	psect	text21,local,class=CODE,merge=1,delta=2
    46                           	psect	text22,local,class=CODE,merge=1,delta=2
    47                           	psect	text23,local,class=CODE,merge=1,delta=2
    48                           	psect	text24,local,class=CODE,merge=1,delta=2
    49                           	psect	text25,local,class=CODE,merge=1,delta=2
    50                           	psect	text26,local,class=CODE,merge=1,delta=2
    51                           	psect	text27,local,class=CODE,merge=1,delta=2
    52                           	psect	text28,local,class=CODE,merge=1,delta=2
    53                           	psect	text29,local,class=CODE,merge=1,delta=2
    54                           	psect	text30,local,class=CODE,merge=1,delta=2
    55                           	psect	text31,local,class=CODE,merge=1,delta=2
    56                           	psect	text32,local,class=CODE,merge=1,delta=2
    57                           	psect	text33,local,class=CODE,merge=1,delta=2
    58                           	psect	text34,local,class=CODE,merge=1,delta=2,group=2
    59                           	psect	text35,local,class=CODE,merge=1,delta=2,group=2
    60                           	psect	text36,local,class=CODE,merge=1,delta=2,group=2
    61                           	psect	text37,local,class=CODE,merge=1,delta=2
    62                           	psect	text38,local,class=CODE,merge=1,delta=2
    63                           	psect	text39,local,class=CODE,merge=1,delta=2
    64                           	psect	text40,local,class=CODE,merge=1,delta=2
    65                           	psect	text41,local,class=CODE,merge=1,delta=2,group=2
    66                           	psect	text42,local,class=CODE,merge=1,delta=2,group=2
    67                           	psect	text43,local,class=CODE,merge=1,delta=2,group=2
    68                           	psect	text44,local,class=CODE,merge=1,delta=2
    69                           	psect	text45,local,class=CODE,merge=1,delta=2
    70                           	psect	text46,local,class=CODE,merge=1,delta=2
    71                           	psect	text47,local,class=CODE,merge=1,delta=2
    72                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=2,noexec
    73                           	dabs	1,0x7E,2
    74  0000                     
    75                           ; Version 2.32
    76                           ; Generated 02/02/2021 GMT
    77                           ; 
    78                           ; Copyright Â© 2021, Microchip Technology Inc. and its subsidiaries ("Microchip")
    79                           ; All rights reserved.
    80                           ; 
    81                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    82                           ; 
    83                           ; Redistribution and use in source and binary forms, with or without modification, are
    84                           ; permitted provided that the following conditions are met:
    85                           ; 
    86                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    87                           ;        conditions and the following disclaimer.
    88                           ; 
    89                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    90                           ;        of conditions and the following disclaimer in the documentation and/or other
    91                           ;        materials provided with the distribution. Publication is not required when
    92                           ;        this file is used in an embedded application.
    93                           ; 
    94                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    95                           ;        software without specific prior written permission.
    96                           ; 
    97                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    98                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    99                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
   100                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
   101                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
   102                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
   103                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
   104                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
   105                           ; 
   106                           ; 
   107                           ; Code-generator required, PIC16F1938 Definitions
   108                           ; 
   109                           ; SFR Addresses
   110  0000                     	;# 
   111  0001                     	;# 
   112  0002                     	;# 
   113  0003                     	;# 
   114  0004                     	;# 
   115  0005                     	;# 
   116  0006                     	;# 
   117  0007                     	;# 
   118  0008                     	;# 
   119  0009                     	;# 
   120  000A                     	;# 
   121  000B                     	;# 
   122  000C                     	;# 
   123  000D                     	;# 
   124  000E                     	;# 
   125  0010                     	;# 
   126  0011                     	;# 
   127  0012                     	;# 
   128  0013                     	;# 
   129  0015                     	;# 
   130  0016                     	;# 
   131  0016                     	;# 
   132  0017                     	;# 
   133  0018                     	;# 
   134  0019                     	;# 
   135  001A                     	;# 
   136  001B                     	;# 
   137  001C                     	;# 
   138  001E                     	;# 
   139  001F                     	;# 
   140  008C                     	;# 
   141  008D                     	;# 
   142  008E                     	;# 
   143  0090                     	;# 
   144  0091                     	;# 
   145  0092                     	;# 
   146  0093                     	;# 
   147  0095                     	;# 
   148  0096                     	;# 
   149  0097                     	;# 
   150  0098                     	;# 
   151  0099                     	;# 
   152  009A                     	;# 
   153  009B                     	;# 
   154  009B                     	;# 
   155  009C                     	;# 
   156  009D                     	;# 
   157  009E                     	;# 
   158  010C                     	;# 
   159  010D                     	;# 
   160  010E                     	;# 
   161  0110                     	;# 
   162  0111                     	;# 
   163  0112                     	;# 
   164  0113                     	;# 
   165  0114                     	;# 
   166  0115                     	;# 
   167  0116                     	;# 
   168  0117                     	;# 
   169  0118                     	;# 
   170  0119                     	;# 
   171  011A                     	;# 
   172  011B                     	;# 
   173  011D                     	;# 
   174  018C                     	;# 
   175  018D                     	;# 
   176  0191                     	;# 
   177  0191                     	;# 
   178  0192                     	;# 
   179  0193                     	;# 
   180  0193                     	;# 
   181  0193                     	;# 
   182  0194                     	;# 
   183  0195                     	;# 
   184  0196                     	;# 
   185  0199                     	;# 
   186  019A                     	;# 
   187  019B                     	;# 
   188  019B                     	;# 
   189  019B                     	;# 
   190  019B                     	;# 
   191  019C                     	;# 
   192  019C                     	;# 
   193  019D                     	;# 
   194  019E                     	;# 
   195  019F                     	;# 
   196  020D                     	;# 
   197  0210                     	;# 
   198  0211                     	;# 
   199  0212                     	;# 
   200  0213                     	;# 
   201  0214                     	;# 
   202  0215                     	;# 
   203  0215                     	;# 
   204  0216                     	;# 
   205  0217                     	;# 
   206  0291                     	;# 
   207  0291                     	;# 
   208  0292                     	;# 
   209  0293                     	;# 
   210  0294                     	;# 
   211  0295                     	;# 
   212  0295                     	;# 
   213  0296                     	;# 
   214  0298                     	;# 
   215  0298                     	;# 
   216  0299                     	;# 
   217  029A                     	;# 
   218  029B                     	;# 
   219  029C                     	;# 
   220  029C                     	;# 
   221  029D                     	;# 
   222  029E                     	;# 
   223  029F                     	;# 
   224  0311                     	;# 
   225  0311                     	;# 
   226  0312                     	;# 
   227  0313                     	;# 
   228  0314                     	;# 
   229  0315                     	;# 
   230  0315                     	;# 
   231  0316                     	;# 
   232  0318                     	;# 
   233  0318                     	;# 
   234  0319                     	;# 
   235  031A                     	;# 
   236  031C                     	;# 
   237  031C                     	;# 
   238  031D                     	;# 
   239  031E                     	;# 
   240  0394                     	;# 
   241  0395                     	;# 
   242  0396                     	;# 
   243  0415                     	;# 
   244  0416                     	;# 
   245  0417                     	;# 
   246  041C                     	;# 
   247  041D                     	;# 
   248  041E                     	;# 
   249  0791                     	;# 
   250  0792                     	;# 
   251  0793                     	;# 
   252  0794                     	;# 
   253  0795                     	;# 
   254  0798                     	;# 
   255  0799                     	;# 
   256  07A0                     	;# 
   257  07A1                     	;# 
   258  07A3                     	;# 
   259  07A4                     	;# 
   260  07A6                     	;# 
   261  07A7                     	;# 
   262  07A9                     	;# 
   263  07AA                     	;# 
   264  0FE4                     	;# 
   265  0FE5                     	;# 
   266  0FE6                     	;# 
   267  0FE7                     	;# 
   268  0FE8                     	;# 
   269  0FE9                     	;# 
   270  0FEA                     	;# 
   271  0FEB                     	;# 
   272  0FED                     	;# 
   273  0FEE                     	;# 
   274  0FEF                     	;# 
   275  0000                     	;# 
   276  0001                     	;# 
   277  0002                     	;# 
   278  0003                     	;# 
   279  0004                     	;# 
   280  0005                     	;# 
   281  0006                     	;# 
   282  0007                     	;# 
   283  0008                     	;# 
   284  0009                     	;# 
   285  000A                     	;# 
   286  000B                     	;# 
   287  000C                     	;# 
   288  000D                     	;# 
   289  000E                     	;# 
   290  0010                     	;# 
   291  0011                     	;# 
   292  0012                     	;# 
   293  0013                     	;# 
   294  0015                     	;# 
   295  0016                     	;# 
   296  0016                     	;# 
   297  0017                     	;# 
   298  0018                     	;# 
   299  0019                     	;# 
   300  001A                     	;# 
   301  001B                     	;# 
   302  001C                     	;# 
   303  001E                     	;# 
   304  001F                     	;# 
   305  008C                     	;# 
   306  008D                     	;# 
   307  008E                     	;# 
   308  0090                     	;# 
   309  0091                     	;# 
   310  0092                     	;# 
   311  0093                     	;# 
   312  0095                     	;# 
   313  0096                     	;# 
   314  0097                     	;# 
   315  0098                     	;# 
   316  0099                     	;# 
   317  009A                     	;# 
   318  009B                     	;# 
   319  009B                     	;# 
   320  009C                     	;# 
   321  009D                     	;# 
   322  009E                     	;# 
   323  010C                     	;# 
   324  010D                     	;# 
   325  010E                     	;# 
   326  0110                     	;# 
   327  0111                     	;# 
   328  0112                     	;# 
   329  0113                     	;# 
   330  0114                     	;# 
   331  0115                     	;# 
   332  0116                     	;# 
   333  0117                     	;# 
   334  0118                     	;# 
   335  0119                     	;# 
   336  011A                     	;# 
   337  011B                     	;# 
   338  011D                     	;# 
   339  018C                     	;# 
   340  018D                     	;# 
   341  0191                     	;# 
   342  0191                     	;# 
   343  0192                     	;# 
   344  0193                     	;# 
   345  0193                     	;# 
   346  0193                     	;# 
   347  0194                     	;# 
   348  0195                     	;# 
   349  0196                     	;# 
   350  0199                     	;# 
   351  019A                     	;# 
   352  019B                     	;# 
   353  019B                     	;# 
   354  019B                     	;# 
   355  019B                     	;# 
   356  019C                     	;# 
   357  019C                     	;# 
   358  019D                     	;# 
   359  019E                     	;# 
   360  019F                     	;# 
   361  020D                     	;# 
   362  0210                     	;# 
   363  0211                     	;# 
   364  0212                     	;# 
   365  0213                     	;# 
   366  0214                     	;# 
   367  0215                     	;# 
   368  0215                     	;# 
   369  0216                     	;# 
   370  0217                     	;# 
   371  0291                     	;# 
   372  0291                     	;# 
   373  0292                     	;# 
   374  0293                     	;# 
   375  0294                     	;# 
   376  0295                     	;# 
   377  0295                     	;# 
   378  0296                     	;# 
   379  0298                     	;# 
   380  0298                     	;# 
   381  0299                     	;# 
   382  029A                     	;# 
   383  029B                     	;# 
   384  029C                     	;# 
   385  029C                     	;# 
   386  029D                     	;# 
   387  029E                     	;# 
   388  029F                     	;# 
   389  0311                     	;# 
   390  0311                     	;# 
   391  0312                     	;# 
   392  0313                     	;# 
   393  0314                     	;# 
   394  0315                     	;# 
   395  0315                     	;# 
   396  0316                     	;# 
   397  0318                     	;# 
   398  0318                     	;# 
   399  0319                     	;# 
   400  031A                     	;# 
   401  031C                     	;# 
   402  031C                     	;# 
   403  031D                     	;# 
   404  031E                     	;# 
   405  0394                     	;# 
   406  0395                     	;# 
   407  0396                     	;# 
   408  0415                     	;# 
   409  0416                     	;# 
   410  0417                     	;# 
   411  041C                     	;# 
   412  041D                     	;# 
   413  041E                     	;# 
   414  0791                     	;# 
   415  0792                     	;# 
   416  0793                     	;# 
   417  0794                     	;# 
   418  0795                     	;# 
   419  0798                     	;# 
   420  0799                     	;# 
   421  07A0                     	;# 
   422  07A1                     	;# 
   423  07A3                     	;# 
   424  07A4                     	;# 
   425  07A6                     	;# 
   426  07A7                     	;# 
   427  07A9                     	;# 
   428  07AA                     	;# 
   429  0FE4                     	;# 
   430  0FE5                     	;# 
   431  0FE6                     	;# 
   432  0FE7                     	;# 
   433  0FE8                     	;# 
   434  0FE9                     	;# 
   435  0FEA                     	;# 
   436  0FEB                     	;# 
   437  0FED                     	;# 
   438  0FEE                     	;# 
   439  0FEF                     	;# 
   440  0000                     	;# 
   441  0001                     	;# 
   442  0002                     	;# 
   443  0003                     	;# 
   444  0004                     	;# 
   445  0005                     	;# 
   446  0006                     	;# 
   447  0007                     	;# 
   448  0008                     	;# 
   449  0009                     	;# 
   450  000A                     	;# 
   451  000B                     	;# 
   452  000C                     	;# 
   453  000D                     	;# 
   454  000E                     	;# 
   455  0010                     	;# 
   456  0011                     	;# 
   457  0012                     	;# 
   458  0013                     	;# 
   459  0015                     	;# 
   460  0016                     	;# 
   461  0016                     	;# 
   462  0017                     	;# 
   463  0018                     	;# 
   464  0019                     	;# 
   465  001A                     	;# 
   466  001B                     	;# 
   467  001C                     	;# 
   468  001E                     	;# 
   469  001F                     	;# 
   470  008C                     	;# 
   471  008D                     	;# 
   472  008E                     	;# 
   473  0090                     	;# 
   474  0091                     	;# 
   475  0092                     	;# 
   476  0093                     	;# 
   477  0095                     	;# 
   478  0096                     	;# 
   479  0097                     	;# 
   480  0098                     	;# 
   481  0099                     	;# 
   482  009A                     	;# 
   483  009B                     	;# 
   484  009B                     	;# 
   485  009C                     	;# 
   486  009D                     	;# 
   487  009E                     	;# 
   488  010C                     	;# 
   489  010D                     	;# 
   490  010E                     	;# 
   491  0110                     	;# 
   492  0111                     	;# 
   493  0112                     	;# 
   494  0113                     	;# 
   495  0114                     	;# 
   496  0115                     	;# 
   497  0116                     	;# 
   498  0117                     	;# 
   499  0118                     	;# 
   500  0119                     	;# 
   501  011A                     	;# 
   502  011B                     	;# 
   503  011D                     	;# 
   504  018C                     	;# 
   505  018D                     	;# 
   506  0191                     	;# 
   507  0191                     	;# 
   508  0192                     	;# 
   509  0193                     	;# 
   510  0193                     	;# 
   511  0193                     	;# 
   512  0194                     	;# 
   513  0195                     	;# 
   514  0196                     	;# 
   515  0199                     	;# 
   516  019A                     	;# 
   517  019B                     	;# 
   518  019B                     	;# 
   519  019B                     	;# 
   520  019B                     	;# 
   521  019C                     	;# 
   522  019C                     	;# 
   523  019D                     	;# 
   524  019E                     	;# 
   525  019F                     	;# 
   526  020D                     	;# 
   527  0210                     	;# 
   528  0211                     	;# 
   529  0212                     	;# 
   530  0213                     	;# 
   531  0214                     	;# 
   532  0215                     	;# 
   533  0215                     	;# 
   534  0216                     	;# 
   535  0217                     	;# 
   536  0291                     	;# 
   537  0291                     	;# 
   538  0292                     	;# 
   539  0293                     	;# 
   540  0294                     	;# 
   541  0295                     	;# 
   542  0295                     	;# 
   543  0296                     	;# 
   544  0298                     	;# 
   545  0298                     	;# 
   546  0299                     	;# 
   547  029A                     	;# 
   548  029B                     	;# 
   549  029C                     	;# 
   550  029C                     	;# 
   551  029D                     	;# 
   552  029E                     	;# 
   553  029F                     	;# 
   554  0311                     	;# 
   555  0311                     	;# 
   556  0312                     	;# 
   557  0313                     	;# 
   558  0314                     	;# 
   559  0315                     	;# 
   560  0315                     	;# 
   561  0316                     	;# 
   562  0318                     	;# 
   563  0318                     	;# 
   564  0319                     	;# 
   565  031A                     	;# 
   566  031C                     	;# 
   567  031C                     	;# 
   568  031D                     	;# 
   569  031E                     	;# 
   570  0394                     	;# 
   571  0395                     	;# 
   572  0396                     	;# 
   573  0415                     	;# 
   574  0416                     	;# 
   575  0417                     	;# 
   576  041C                     	;# 
   577  041D                     	;# 
   578  041E                     	;# 
   579  0791                     	;# 
   580  0792                     	;# 
   581  0793                     	;# 
   582  0794                     	;# 
   583  0795                     	;# 
   584  0798                     	;# 
   585  0799                     	;# 
   586  07A0                     	;# 
   587  07A1                     	;# 
   588  07A3                     	;# 
   589  07A4                     	;# 
   590  07A6                     	;# 
   591  07A7                     	;# 
   592  07A9                     	;# 
   593  07AA                     	;# 
   594  0FE4                     	;# 
   595  0FE5                     	;# 
   596  0FE6                     	;# 
   597  0FE7                     	;# 
   598  0FE8                     	;# 
   599  0FE9                     	;# 
   600  0FEA                     	;# 
   601  0FEB                     	;# 
   602  0FED                     	;# 
   603  0FEE                     	;# 
   604  0FEF                     	;# 
   605  0000                     	;# 
   606  0001                     	;# 
   607  0002                     	;# 
   608  0003                     	;# 
   609  0004                     	;# 
   610  0005                     	;# 
   611  0006                     	;# 
   612  0007                     	;# 
   613  0008                     	;# 
   614  0009                     	;# 
   615  000A                     	;# 
   616  000B                     	;# 
   617  000C                     	;# 
   618  000D                     	;# 
   619  000E                     	;# 
   620  0010                     	;# 
   621  0011                     	;# 
   622  0012                     	;# 
   623  0013                     	;# 
   624  0015                     	;# 
   625  0016                     	;# 
   626  0016                     	;# 
   627  0017                     	;# 
   628  0018                     	;# 
   629  0019                     	;# 
   630  001A                     	;# 
   631  001B                     	;# 
   632  001C                     	;# 
   633  001E                     	;# 
   634  001F                     	;# 
   635  008C                     	;# 
   636  008D                     	;# 
   637  008E                     	;# 
   638  0090                     	;# 
   639  0091                     	;# 
   640  0092                     	;# 
   641  0093                     	;# 
   642  0095                     	;# 
   643  0096                     	;# 
   644  0097                     	;# 
   645  0098                     	;# 
   646  0099                     	;# 
   647  009A                     	;# 
   648  009B                     	;# 
   649  009B                     	;# 
   650  009C                     	;# 
   651  009D                     	;# 
   652  009E                     	;# 
   653  010C                     	;# 
   654  010D                     	;# 
   655  010E                     	;# 
   656  0110                     	;# 
   657  0111                     	;# 
   658  0112                     	;# 
   659  0113                     	;# 
   660  0114                     	;# 
   661  0115                     	;# 
   662  0116                     	;# 
   663  0117                     	;# 
   664  0118                     	;# 
   665  0119                     	;# 
   666  011A                     	;# 
   667  011B                     	;# 
   668  011D                     	;# 
   669  018C                     	;# 
   670  018D                     	;# 
   671  0191                     	;# 
   672  0191                     	;# 
   673  0192                     	;# 
   674  0193                     	;# 
   675  0193                     	;# 
   676  0193                     	;# 
   677  0194                     	;# 
   678  0195                     	;# 
   679  0196                     	;# 
   680  0199                     	;# 
   681  019A                     	;# 
   682  019B                     	;# 
   683  019B                     	;# 
   684  019B                     	;# 
   685  019B                     	;# 
   686  019C                     	;# 
   687  019C                     	;# 
   688  019D                     	;# 
   689  019E                     	;# 
   690  019F                     	;# 
   691  020D                     	;# 
   692  0210                     	;# 
   693  0211                     	;# 
   694  0212                     	;# 
   695  0213                     	;# 
   696  0214                     	;# 
   697  0215                     	;# 
   698  0215                     	;# 
   699  0216                     	;# 
   700  0217                     	;# 
   701  0291                     	;# 
   702  0291                     	;# 
   703  0292                     	;# 
   704  0293                     	;# 
   705  0294                     	;# 
   706  0295                     	;# 
   707  0295                     	;# 
   708  0296                     	;# 
   709  0298                     	;# 
   710  0298                     	;# 
   711  0299                     	;# 
   712  029A                     	;# 
   713  029B                     	;# 
   714  029C                     	;# 
   715  029C                     	;# 
   716  029D                     	;# 
   717  029E                     	;# 
   718  029F                     	;# 
   719  0311                     	;# 
   720  0311                     	;# 
   721  0312                     	;# 
   722  0313                     	;# 
   723  0314                     	;# 
   724  0315                     	;# 
   725  0315                     	;# 
   726  0316                     	;# 
   727  0318                     	;# 
   728  0318                     	;# 
   729  0319                     	;# 
   730  031A                     	;# 
   731  031C                     	;# 
   732  031C                     	;# 
   733  031D                     	;# 
   734  031E                     	;# 
   735  0394                     	;# 
   736  0395                     	;# 
   737  0396                     	;# 
   738  0415                     	;# 
   739  0416                     	;# 
   740  0417                     	;# 
   741  041C                     	;# 
   742  041D                     	;# 
   743  041E                     	;# 
   744  0791                     	;# 
   745  0792                     	;# 
   746  0793                     	;# 
   747  0794                     	;# 
   748  0795                     	;# 
   749  0798                     	;# 
   750  0799                     	;# 
   751  07A0                     	;# 
   752  07A1                     	;# 
   753  07A3                     	;# 
   754  07A4                     	;# 
   755  07A6                     	;# 
   756  07A7                     	;# 
   757  07A9                     	;# 
   758  07AA                     	;# 
   759  0FE4                     	;# 
   760  0FE5                     	;# 
   761  0FE6                     	;# 
   762  0FE7                     	;# 
   763  0FE8                     	;# 
   764  0FE9                     	;# 
   765  0FEA                     	;# 
   766  0FEB                     	;# 
   767  0FED                     	;# 
   768  0FEE                     	;# 
   769  0FEF                     	;# 
   770  0000                     	;# 
   771  0001                     	;# 
   772  0002                     	;# 
   773  0003                     	;# 
   774  0004                     	;# 
   775  0005                     	;# 
   776  0006                     	;# 
   777  0007                     	;# 
   778  0008                     	;# 
   779  0009                     	;# 
   780  000A                     	;# 
   781  000B                     	;# 
   782  000C                     	;# 
   783  000D                     	;# 
   784  000E                     	;# 
   785  0010                     	;# 
   786  0011                     	;# 
   787  0012                     	;# 
   788  0013                     	;# 
   789  0015                     	;# 
   790  0016                     	;# 
   791  0016                     	;# 
   792  0017                     	;# 
   793  0018                     	;# 
   794  0019                     	;# 
   795  001A                     	;# 
   796  001B                     	;# 
   797  001C                     	;# 
   798  001E                     	;# 
   799  001F                     	;# 
   800  008C                     	;# 
   801  008D                     	;# 
   802  008E                     	;# 
   803  0090                     	;# 
   804  0091                     	;# 
   805  0092                     	;# 
   806  0093                     	;# 
   807  0095                     	;# 
   808  0096                     	;# 
   809  0097                     	;# 
   810  0098                     	;# 
   811  0099                     	;# 
   812  009A                     	;# 
   813  009B                     	;# 
   814  009B                     	;# 
   815  009C                     	;# 
   816  009D                     	;# 
   817  009E                     	;# 
   818  010C                     	;# 
   819  010D                     	;# 
   820  010E                     	;# 
   821  0110                     	;# 
   822  0111                     	;# 
   823  0112                     	;# 
   824  0113                     	;# 
   825  0114                     	;# 
   826  0115                     	;# 
   827  0116                     	;# 
   828  0117                     	;# 
   829  0118                     	;# 
   830  0119                     	;# 
   831  011A                     	;# 
   832  011B                     	;# 
   833  011D                     	;# 
   834  018C                     	;# 
   835  018D                     	;# 
   836  0191                     	;# 
   837  0191                     	;# 
   838  0192                     	;# 
   839  0193                     	;# 
   840  0193                     	;# 
   841  0193                     	;# 
   842  0194                     	;# 
   843  0195                     	;# 
   844  0196                     	;# 
   845  0199                     	;# 
   846  019A                     	;# 
   847  019B                     	;# 
   848  019B                     	;# 
   849  019B                     	;# 
   850  019B                     	;# 
   851  019C                     	;# 
   852  019C                     	;# 
   853  019D                     	;# 
   854  019E                     	;# 
   855  019F                     	;# 
   856  020D                     	;# 
   857  0210                     	;# 
   858  0211                     	;# 
   859  0212                     	;# 
   860  0213                     	;# 
   861  0214                     	;# 
   862  0215                     	;# 
   863  0215                     	;# 
   864  0216                     	;# 
   865  0217                     	;# 
   866  0291                     	;# 
   867  0291                     	;# 
   868  0292                     	;# 
   869  0293                     	;# 
   870  0294                     	;# 
   871  0295                     	;# 
   872  0295                     	;# 
   873  0296                     	;# 
   874  0298                     	;# 
   875  0298                     	;# 
   876  0299                     	;# 
   877  029A                     	;# 
   878  029B                     	;# 
   879  029C                     	;# 
   880  029C                     	;# 
   881  029D                     	;# 
   882  029E                     	;# 
   883  029F                     	;# 
   884  0311                     	;# 
   885  0311                     	;# 
   886  0312                     	;# 
   887  0313                     	;# 
   888  0314                     	;# 
   889  0315                     	;# 
   890  0315                     	;# 
   891  0316                     	;# 
   892  0318                     	;# 
   893  0318                     	;# 
   894  0319                     	;# 
   895  031A                     	;# 
   896  031C                     	;# 
   897  031C                     	;# 
   898  031D                     	;# 
   899  031E                     	;# 
   900  0394                     	;# 
   901  0395                     	;# 
   902  0396                     	;# 
   903  0415                     	;# 
   904  0416                     	;# 
   905  0417                     	;# 
   906  041C                     	;# 
   907  041D                     	;# 
   908  041E                     	;# 
   909  0791                     	;# 
   910  0792                     	;# 
   911  0793                     	;# 
   912  0794                     	;# 
   913  0795                     	;# 
   914  0798                     	;# 
   915  0799                     	;# 
   916  07A0                     	;# 
   917  07A1                     	;# 
   918  07A3                     	;# 
   919  07A4                     	;# 
   920  07A6                     	;# 
   921  07A7                     	;# 
   922  07A9                     	;# 
   923  07AA                     	;# 
   924  0FE4                     	;# 
   925  0FE5                     	;# 
   926  0FE6                     	;# 
   927  0FE7                     	;# 
   928  0FE8                     	;# 
   929  0FE9                     	;# 
   930  0FEA                     	;# 
   931  0FEB                     	;# 
   932  0FED                     	;# 
   933  0FEE                     	;# 
   934  0FEF                     	;# 
   935  0000                     	;# 
   936  0001                     	;# 
   937  0002                     	;# 
   938  0003                     	;# 
   939  0004                     	;# 
   940  0005                     	;# 
   941  0006                     	;# 
   942  0007                     	;# 
   943  0008                     	;# 
   944  0009                     	;# 
   945  000A                     	;# 
   946  000B                     	;# 
   947  000C                     	;# 
   948  000D                     	;# 
   949  000E                     	;# 
   950  0010                     	;# 
   951  0011                     	;# 
   952  0012                     	;# 
   953  0013                     	;# 
   954  0015                     	;# 
   955  0016                     	;# 
   956  0016                     	;# 
   957  0017                     	;# 
   958  0018                     	;# 
   959  0019                     	;# 
   960  001A                     	;# 
   961  001B                     	;# 
   962  001C                     	;# 
   963  001E                     	;# 
   964  001F                     	;# 
   965  008C                     	;# 
   966  008D                     	;# 
   967  008E                     	;# 
   968  0090                     	;# 
   969  0091                     	;# 
   970  0092                     	;# 
   971  0093                     	;# 
   972  0095                     	;# 
   973  0096                     	;# 
   974  0097                     	;# 
   975  0098                     	;# 
   976  0099                     	;# 
   977  009A                     	;# 
   978  009B                     	;# 
   979  009B                     	;# 
   980  009C                     	;# 
   981  009D                     	;# 
   982  009E                     	;# 
   983  010C                     	;# 
   984  010D                     	;# 
   985  010E                     	;# 
   986  0110                     	;# 
   987  0111                     	;# 
   988  0112                     	;# 
   989  0113                     	;# 
   990  0114                     	;# 
   991  0115                     	;# 
   992  0116                     	;# 
   993  0117                     	;# 
   994  0118                     	;# 
   995  0119                     	;# 
   996  011A                     	;# 
   997  011B                     	;# 
   998  011D                     	;# 
   999  018C                     	;# 
  1000  018D                     	;# 
  1001  0191                     	;# 
  1002  0191                     	;# 
  1003  0192                     	;# 
  1004  0193                     	;# 
  1005  0193                     	;# 
  1006  0193                     	;# 
  1007  0194                     	;# 
  1008  0195                     	;# 
  1009  0196                     	;# 
  1010  0199                     	;# 
  1011  019A                     	;# 
  1012  019B                     	;# 
  1013  019B                     	;# 
  1014  019B                     	;# 
  1015  019B                     	;# 
  1016  019C                     	;# 
  1017  019C                     	;# 
  1018  019D                     	;# 
  1019  019E                     	;# 
  1020  019F                     	;# 
  1021  020D                     	;# 
  1022  0210                     	;# 
  1023  0211                     	;# 
  1024  0212                     	;# 
  1025  0213                     	;# 
  1026  0214                     	;# 
  1027  0215                     	;# 
  1028  0215                     	;# 
  1029  0216                     	;# 
  1030  0217                     	;# 
  1031  0291                     	;# 
  1032  0291                     	;# 
  1033  0292                     	;# 
  1034  0293                     	;# 
  1035  0294                     	;# 
  1036  0295                     	;# 
  1037  0295                     	;# 
  1038  0296                     	;# 
  1039  0298                     	;# 
  1040  0298                     	;# 
  1041  0299                     	;# 
  1042  029A                     	;# 
  1043  029B                     	;# 
  1044  029C                     	;# 
  1045  029C                     	;# 
  1046  029D                     	;# 
  1047  029E                     	;# 
  1048  029F                     	;# 
  1049  0311                     	;# 
  1050  0311                     	;# 
  1051  0312                     	;# 
  1052  0313                     	;# 
  1053  0314                     	;# 
  1054  0315                     	;# 
  1055  0315                     	;# 
  1056  0316                     	;# 
  1057  0318                     	;# 
  1058  0318                     	;# 
  1059  0319                     	;# 
  1060  031A                     	;# 
  1061  031C                     	;# 
  1062  031C                     	;# 
  1063  031D                     	;# 
  1064  031E                     	;# 
  1065  0394                     	;# 
  1066  0395                     	;# 
  1067  0396                     	;# 
  1068  0415                     	;# 
  1069  0416                     	;# 
  1070  0417                     	;# 
  1071  041C                     	;# 
  1072  041D                     	;# 
  1073  041E                     	;# 
  1074  0791                     	;# 
  1075  0792                     	;# 
  1076  0793                     	;# 
  1077  0794                     	;# 
  1078  0795                     	;# 
  1079  0798                     	;# 
  1080  0799                     	;# 
  1081  07A0                     	;# 
  1082  07A1                     	;# 
  1083  07A3                     	;# 
  1084  07A4                     	;# 
  1085  07A6                     	;# 
  1086  07A7                     	;# 
  1087  07A9                     	;# 
  1088  07AA                     	;# 
  1089  0FE4                     	;# 
  1090  0FE5                     	;# 
  1091  0FE6                     	;# 
  1092  0FE7                     	;# 
  1093  0FE8                     	;# 
  1094  0FE9                     	;# 
  1095  0FEA                     	;# 
  1096  0FEB                     	;# 
  1097  0FED                     	;# 
  1098  0FEE                     	;# 
  1099  0FEF                     	;# 
  1100  0000                     	;# 
  1101  0001                     	;# 
  1102  0002                     	;# 
  1103  0003                     	;# 
  1104  0004                     	;# 
  1105  0005                     	;# 
  1106  0006                     	;# 
  1107  0007                     	;# 
  1108  0008                     	;# 
  1109  0009                     	;# 
  1110  000A                     	;# 
  1111  000B                     	;# 
  1112  000C                     	;# 
  1113  000D                     	;# 
  1114  000E                     	;# 
  1115  0010                     	;# 
  1116  0011                     	;# 
  1117  0012                     	;# 
  1118  0013                     	;# 
  1119  0015                     	;# 
  1120  0016                     	;# 
  1121  0016                     	;# 
  1122  0017                     	;# 
  1123  0018                     	;# 
  1124  0019                     	;# 
  1125  001A                     	;# 
  1126  001B                     	;# 
  1127  001C                     	;# 
  1128  001E                     	;# 
  1129  001F                     	;# 
  1130  008C                     	;# 
  1131  008D                     	;# 
  1132  008E                     	;# 
  1133  0090                     	;# 
  1134  0091                     	;# 
  1135  0092                     	;# 
  1136  0093                     	;# 
  1137  0095                     	;# 
  1138  0096                     	;# 
  1139  0097                     	;# 
  1140  0098                     	;# 
  1141  0099                     	;# 
  1142  009A                     	;# 
  1143  009B                     	;# 
  1144  009B                     	;# 
  1145  009C                     	;# 
  1146  009D                     	;# 
  1147  009E                     	;# 
  1148  010C                     	;# 
  1149  010D                     	;# 
  1150  010E                     	;# 
  1151  0110                     	;# 
  1152  0111                     	;# 
  1153  0112                     	;# 
  1154  0113                     	;# 
  1155  0114                     	;# 
  1156  0115                     	;# 
  1157  0116                     	;# 
  1158  0117                     	;# 
  1159  0118                     	;# 
  1160  0119                     	;# 
  1161  011A                     	;# 
  1162  011B                     	;# 
  1163  011D                     	;# 
  1164  018C                     	;# 
  1165  018D                     	;# 
  1166  0191                     	;# 
  1167  0191                     	;# 
  1168  0192                     	;# 
  1169  0193                     	;# 
  1170  0193                     	;# 
  1171  0193                     	;# 
  1172  0194                     	;# 
  1173  0195                     	;# 
  1174  0196                     	;# 
  1175  0199                     	;# 
  1176  019A                     	;# 
  1177  019B                     	;# 
  1178  019B                     	;# 
  1179  019B                     	;# 
  1180  019B                     	;# 
  1181  019C                     	;# 
  1182  019C                     	;# 
  1183  019D                     	;# 
  1184  019E                     	;# 
  1185  019F                     	;# 
  1186  020D                     	;# 
  1187  0210                     	;# 
  1188  0211                     	;# 
  1189  0212                     	;# 
  1190  0213                     	;# 
  1191  0214                     	;# 
  1192  0215                     	;# 
  1193  0215                     	;# 
  1194  0216                     	;# 
  1195  0217                     	;# 
  1196  0291                     	;# 
  1197  0291                     	;# 
  1198  0292                     	;# 
  1199  0293                     	;# 
  1200  0294                     	;# 
  1201  0295                     	;# 
  1202  0295                     	;# 
  1203  0296                     	;# 
  1204  0298                     	;# 
  1205  0298                     	;# 
  1206  0299                     	;# 
  1207  029A                     	;# 
  1208  029B                     	;# 
  1209  029C                     	;# 
  1210  029C                     	;# 
  1211  029D                     	;# 
  1212  029E                     	;# 
  1213  029F                     	;# 
  1214  0311                     	;# 
  1215  0311                     	;# 
  1216  0312                     	;# 
  1217  0313                     	;# 
  1218  0314                     	;# 
  1219  0315                     	;# 
  1220  0315                     	;# 
  1221  0316                     	;# 
  1222  0318                     	;# 
  1223  0318                     	;# 
  1224  0319                     	;# 
  1225  031A                     	;# 
  1226  031C                     	;# 
  1227  031C                     	;# 
  1228  031D                     	;# 
  1229  031E                     	;# 
  1230  0394                     	;# 
  1231  0395                     	;# 
  1232  0396                     	;# 
  1233  0415                     	;# 
  1234  0416                     	;# 
  1235  0417                     	;# 
  1236  041C                     	;# 
  1237  041D                     	;# 
  1238  041E                     	;# 
  1239  0791                     	;# 
  1240  0792                     	;# 
  1241  0793                     	;# 
  1242  0794                     	;# 
  1243  0795                     	;# 
  1244  0798                     	;# 
  1245  0799                     	;# 
  1246  07A0                     	;# 
  1247  07A1                     	;# 
  1248  07A3                     	;# 
  1249  07A4                     	;# 
  1250  07A6                     	;# 
  1251  07A7                     	;# 
  1252  07A9                     	;# 
  1253  07AA                     	;# 
  1254  0FE4                     	;# 
  1255  0FE5                     	;# 
  1256  0FE6                     	;# 
  1257  0FE7                     	;# 
  1258  0FE8                     	;# 
  1259  0FE9                     	;# 
  1260  0FEA                     	;# 
  1261  0FEB                     	;# 
  1262  0FED                     	;# 
  1263  0FEE                     	;# 
  1264  0FEF                     	;# 
  1265  0000                     	;# 
  1266  0001                     	;# 
  1267  0002                     	;# 
  1268  0003                     	;# 
  1269  0004                     	;# 
  1270  0005                     	;# 
  1271  0006                     	;# 
  1272  0007                     	;# 
  1273  0008                     	;# 
  1274  0009                     	;# 
  1275  000A                     	;# 
  1276  000B                     	;# 
  1277  000C                     	;# 
  1278  000D                     	;# 
  1279  000E                     	;# 
  1280  0010                     	;# 
  1281  0011                     	;# 
  1282  0012                     	;# 
  1283  0013                     	;# 
  1284  0015                     	;# 
  1285  0016                     	;# 
  1286  0016                     	;# 
  1287  0017                     	;# 
  1288  0018                     	;# 
  1289  0019                     	;# 
  1290  001A                     	;# 
  1291  001B                     	;# 
  1292  001C                     	;# 
  1293  001E                     	;# 
  1294  001F                     	;# 
  1295  008C                     	;# 
  1296  008D                     	;# 
  1297  008E                     	;# 
  1298  0090                     	;# 
  1299  0091                     	;# 
  1300  0092                     	;# 
  1301  0093                     	;# 
  1302  0095                     	;# 
  1303  0096                     	;# 
  1304  0097                     	;# 
  1305  0098                     	;# 
  1306  0099                     	;# 
  1307  009A                     	;# 
  1308  009B                     	;# 
  1309  009B                     	;# 
  1310  009C                     	;# 
  1311  009D                     	;# 
  1312  009E                     	;# 
  1313  010C                     	;# 
  1314  010D                     	;# 
  1315  010E                     	;# 
  1316  0110                     	;# 
  1317  0111                     	;# 
  1318  0112                     	;# 
  1319  0113                     	;# 
  1320  0114                     	;# 
  1321  0115                     	;# 
  1322  0116                     	;# 
  1323  0117                     	;# 
  1324  0118                     	;# 
  1325  0119                     	;# 
  1326  011A                     	;# 
  1327  011B                     	;# 
  1328  011D                     	;# 
  1329  018C                     	;# 
  1330  018D                     	;# 
  1331  0191                     	;# 
  1332  0191                     	;# 
  1333  0192                     	;# 
  1334  0193                     	;# 
  1335  0193                     	;# 
  1336  0193                     	;# 
  1337  0194                     	;# 
  1338  0195                     	;# 
  1339  0196                     	;# 
  1340  0199                     	;# 
  1341  019A                     	;# 
  1342  019B                     	;# 
  1343  019B                     	;# 
  1344  019B                     	;# 
  1345  019B                     	;# 
  1346  019C                     	;# 
  1347  019C                     	;# 
  1348  019D                     	;# 
  1349  019E                     	;# 
  1350  019F                     	;# 
  1351  020D                     	;# 
  1352  0210                     	;# 
  1353  0211                     	;# 
  1354  0212                     	;# 
  1355  0213                     	;# 
  1356  0214                     	;# 
  1357  0215                     	;# 
  1358  0215                     	;# 
  1359  0216                     	;# 
  1360  0217                     	;# 
  1361  0291                     	;# 
  1362  0291                     	;# 
  1363  0292                     	;# 
  1364  0293                     	;# 
  1365  0294                     	;# 
  1366  0295                     	;# 
  1367  0295                     	;# 
  1368  0296                     	;# 
  1369  0298                     	;# 
  1370  0298                     	;# 
  1371  0299                     	;# 
  1372  029A                     	;# 
  1373  029B                     	;# 
  1374  029C                     	;# 
  1375  029C                     	;# 
  1376  029D                     	;# 
  1377  029E                     	;# 
  1378  029F                     	;# 
  1379  0311                     	;# 
  1380  0311                     	;# 
  1381  0312                     	;# 
  1382  0313                     	;# 
  1383  0314                     	;# 
  1384  0315                     	;# 
  1385  0315                     	;# 
  1386  0316                     	;# 
  1387  0318                     	;# 
  1388  0318                     	;# 
  1389  0319                     	;# 
  1390  031A                     	;# 
  1391  031C                     	;# 
  1392  031C                     	;# 
  1393  031D                     	;# 
  1394  031E                     	;# 
  1395  0394                     	;# 
  1396  0395                     	;# 
  1397  0396                     	;# 
  1398  0415                     	;# 
  1399  0416                     	;# 
  1400  0417                     	;# 
  1401  041C                     	;# 
  1402  041D                     	;# 
  1403  041E                     	;# 
  1404  0791                     	;# 
  1405  0792                     	;# 
  1406  0793                     	;# 
  1407  0794                     	;# 
  1408  0795                     	;# 
  1409  0798                     	;# 
  1410  0799                     	;# 
  1411  07A0                     	;# 
  1412  07A1                     	;# 
  1413  07A3                     	;# 
  1414  07A4                     	;# 
  1415  07A6                     	;# 
  1416  07A7                     	;# 
  1417  07A9                     	;# 
  1418  07AA                     	;# 
  1419  0FE4                     	;# 
  1420  0FE5                     	;# 
  1421  0FE6                     	;# 
  1422  0FE7                     	;# 
  1423  0FE8                     	;# 
  1424  0FE9                     	;# 
  1425  0FEA                     	;# 
  1426  0FEB                     	;# 
  1427  0FED                     	;# 
  1428  0FEE                     	;# 
  1429  0FEF                     	;# 
  1430  0000                     	;# 
  1431  0001                     	;# 
  1432  0002                     	;# 
  1433  0003                     	;# 
  1434  0004                     	;# 
  1435  0005                     	;# 
  1436  0006                     	;# 
  1437  0007                     	;# 
  1438  0008                     	;# 
  1439  0009                     	;# 
  1440  000A                     	;# 
  1441  000B                     	;# 
  1442  000C                     	;# 
  1443  000D                     	;# 
  1444  000E                     	;# 
  1445  0010                     	;# 
  1446  0011                     	;# 
  1447  0012                     	;# 
  1448  0013                     	;# 
  1449  0015                     	;# 
  1450  0016                     	;# 
  1451  0016                     	;# 
  1452  0017                     	;# 
  1453  0018                     	;# 
  1454  0019                     	;# 
  1455  001A                     	;# 
  1456  001B                     	;# 
  1457  001C                     	;# 
  1458  001E                     	;# 
  1459  001F                     	;# 
  1460  008C                     	;# 
  1461  008D                     	;# 
  1462  008E                     	;# 
  1463  0090                     	;# 
  1464  0091                     	;# 
  1465  0092                     	;# 
  1466  0093                     	;# 
  1467  0095                     	;# 
  1468  0096                     	;# 
  1469  0097                     	;# 
  1470  0098                     	;# 
  1471  0099                     	;# 
  1472  009A                     	;# 
  1473  009B                     	;# 
  1474  009B                     	;# 
  1475  009C                     	;# 
  1476  009D                     	;# 
  1477  009E                     	;# 
  1478  010C                     	;# 
  1479  010D                     	;# 
  1480  010E                     	;# 
  1481  0110                     	;# 
  1482  0111                     	;# 
  1483  0112                     	;# 
  1484  0113                     	;# 
  1485  0114                     	;# 
  1486  0115                     	;# 
  1487  0116                     	;# 
  1488  0117                     	;# 
  1489  0118                     	;# 
  1490  0119                     	;# 
  1491  011A                     	;# 
  1492  011B                     	;# 
  1493  011D                     	;# 
  1494  018C                     	;# 
  1495  018D                     	;# 
  1496  0191                     	;# 
  1497  0191                     	;# 
  1498  0192                     	;# 
  1499  0193                     	;# 
  1500  0193                     	;# 
  1501  0193                     	;# 
  1502  0194                     	;# 
  1503  0195                     	;# 
  1504  0196                     	;# 
  1505  0199                     	;# 
  1506  019A                     	;# 
  1507  019B                     	;# 
  1508  019B                     	;# 
  1509  019B                     	;# 
  1510  019B                     	;# 
  1511  019C                     	;# 
  1512  019C                     	;# 
  1513  019D                     	;# 
  1514  019E                     	;# 
  1515  019F                     	;# 
  1516  020D                     	;# 
  1517  0210                     	;# 
  1518  0211                     	;# 
  1519  0212                     	;# 
  1520  0213                     	;# 
  1521  0214                     	;# 
  1522  0215                     	;# 
  1523  0215                     	;# 
  1524  0216                     	;# 
  1525  0217                     	;# 
  1526  0291                     	;# 
  1527  0291                     	;# 
  1528  0292                     	;# 
  1529  0293                     	;# 
  1530  0294                     	;# 
  1531  0295                     	;# 
  1532  0295                     	;# 
  1533  0296                     	;# 
  1534  0298                     	;# 
  1535  0298                     	;# 
  1536  0299                     	;# 
  1537  029A                     	;# 
  1538  029B                     	;# 
  1539  029C                     	;# 
  1540  029C                     	;# 
  1541  029D                     	;# 
  1542  029E                     	;# 
  1543  029F                     	;# 
  1544  0311                     	;# 
  1545  0311                     	;# 
  1546  0312                     	;# 
  1547  0313                     	;# 
  1548  0314                     	;# 
  1549  0315                     	;# 
  1550  0315                     	;# 
  1551  0316                     	;# 
  1552  0318                     	;# 
  1553  0318                     	;# 
  1554  0319                     	;# 
  1555  031A                     	;# 
  1556  031C                     	;# 
  1557  031C                     	;# 
  1558  031D                     	;# 
  1559  031E                     	;# 
  1560  0394                     	;# 
  1561  0395                     	;# 
  1562  0396                     	;# 
  1563  0415                     	;# 
  1564  0416                     	;# 
  1565  0417                     	;# 
  1566  041C                     	;# 
  1567  041D                     	;# 
  1568  041E                     	;# 
  1569  0791                     	;# 
  1570  0792                     	;# 
  1571  0793                     	;# 
  1572  0794                     	;# 
  1573  0795                     	;# 
  1574  0798                     	;# 
  1575  0799                     	;# 
  1576  07A0                     	;# 
  1577  07A1                     	;# 
  1578  07A3                     	;# 
  1579  07A4                     	;# 
  1580  07A6                     	;# 
  1581  07A7                     	;# 
  1582  07A9                     	;# 
  1583  07AA                     	;# 
  1584  0FE4                     	;# 
  1585  0FE5                     	;# 
  1586  0FE6                     	;# 
  1587  0FE7                     	;# 
  1588  0FE8                     	;# 
  1589  0FE9                     	;# 
  1590  0FEA                     	;# 
  1591  0FEB                     	;# 
  1592  0FED                     	;# 
  1593  0FEE                     	;# 
  1594  0FEF                     	;# 
  1595                           
  1596                           	psect	idataBANK2
  1597  0007                     __pidataBANK2:
  1598                           
  1599                           ;initializer for main@F2800
  1600  0007  3401               	retlw	1
  1601  0008  3400               	retlw	0
  1602  0009  3400               	retlw	0
  1603  000A  3400               	retlw	0
  1604  000B  3400               	retlw	0
  1605  000C  3400               	retlw	0
  1606  000D  3400               	retlw	0
  1607  000E  3400               	retlw	0
  1608  000F  3400               	retlw	0
  1609  0010  3400               	retlw	0
  1610  0011  34F4               	retlw	244
  1611  0012  3401               	retlw	1
  1612                           
  1613                           ;initializer for _segdata
  1614  0013  343F               	retlw	63
  1615  0014  3406               	retlw	6
  1616  0015  345B               	retlw	91
  1617  0016  344F               	retlw	79
  1618  0017  3466               	retlw	102
  1619  0018  346D               	retlw	109
  1620  0019  347D               	retlw	125
  1621  001A  3407               	retlw	7
  1622  001B  347F               	retlw	127
  1623  001C  346F               	retlw	111
  1624                           
  1625                           ;initializer for lcd_set_cursor@F2781
  1626  001D  3400               	retlw	0
  1627  001E  3440               	retlw	64
  1628  001F  3414               	retlw	20
  1629  0020  3454               	retlw	84
  1630                           
  1631                           ;initializer for main@F2802
  1632  0021  3427               	retlw	39
  1633  0022  3410               	retlw	16
  1634  0023  3402               	retlw	2
  1635  0024  3400               	retlw	0
  1636  000D                     _PORTBbits	set	13
  1637  000C                     _PORTAbits	set	12
  1638  0097                     _WDTCON	set	151
  1639  0098                     _OSCTUNE	set	152
  1640  0099                     _OSCCON	set	153
  1641  0095                     _OPTION_REGbits	set	149
  1642  008E                     _TRISC	set	142
  1643  008D                     _TRISB	set	141
  1644  008C                     _TRISA	set	140
  1645  0090                     _TRISE	set	144
  1646  0116                     _BORCON	set	278
  1647  011D                     _APFCON	set	285
  1648  010E                     _LATC	set	270
  1649  010D                     _LATB	set	269
  1650  010C                     _LATA	set	268
  1651  0110                     _LATE	set	272
  1652  018C                     _ANSELA	set	396
  1653  018D                     _ANSELB	set	397
  1654  0215                     _SSPCON1	set	533
  1655  0212                     _SSPADD	set	530
  1656  0215                     _SSPCON1bits	set	533
  1657  0214                     _SSPSTATbits	set	532
  1658  0211                     _SSPBUF	set	529
  1659  0216                     _SSPCON2bits	set	534
  1660  0214                     _SSPSTAT	set	532
  1661  0216                     _SSPCON2	set	534
  1662  020D                     _WPUB	set	525
  1663  0210                     _WPUE	set	528
  1664                           
  1665                           	psect	stringtext1
  1666  1800                     __pstringtext1:
  1667  1800                     STR_3:
  1668  1800  344C               	retlw	76	;'L'
  1669  1801  346F               	retlw	111	;'o'
  1670  1802  3461               	retlw	97	;'a'
  1671  1803  3464               	retlw	100	;'d'
  1672  1804  3420               	retlw	32	;' '
  1673  1805  3463               	retlw	99	;'c'
  1674  1806  3465               	retlw	101	;'e'
  1675  1807  346C               	retlw	108	;'l'
  1676  1808  346C               	retlw	108	;'l'
  1677  1809  3420               	retlw	32	;' '
  1678  180A  3455               	retlw	85	;'U'
  1679  180B  346E               	retlw	110	;'n'
  1680  180C  3469               	retlw	105	;'i'
  1681  180D  3474               	retlw	116	;'t'
  1682  180E  3400               	retlw	0
  1683                           
  1684                           	psect	stringtext2
  1685  180F                     __pstringtext2:
  1686  180F                     STR_2:
  1687  180F  3449               	retlw	73	;'I'
  1688  1810  346E               	retlw	110	;'n'
  1689  1811  3469               	retlw	105	;'i'
  1690  1812  3474               	retlw	116	;'t'
  1691  1813  3469               	retlw	105	;'i'
  1692  1814  3461               	retlw	97	;'a'
  1693  1815  346C               	retlw	108	;'l'
  1694  1816  3469               	retlw	105	;'i'
  1695  1817  347A               	retlw	122	;'z'
  1696  1818  3465               	retlw	101	;'e'
  1697  1819  3400               	retlw	0
  1698                           
  1699                           	psect	stringtext3
  1700  181A                     __pstringtext3:
  1701  181A                     STR_5:
  1702  181A  3425               	retlw	37	;'%'
  1703  181B  3464               	retlw	100	;'d'
  1704  181C  3467               	retlw	103	;'g'
  1705  181D  3420               	retlw	32	;' '
  1706  181E  342F               	retlw	47	;'/'
  1707  181F  3420               	retlw	32	;' '
  1708  1820  3425               	retlw	37	;'%'
  1709  1821  3464               	retlw	100	;'d'
  1710  1822  3467               	retlw	103	;'g'
  1711  1823  3400               	retlw	0
  1712                           
  1713                           	psect	stringtext4
  1714  1824                     __pstringtext4:
  1715  1824                     STR_4:
  1716  1824  3425               	retlw	37	;'%'
  1717  1825  346C               	retlw	108	;'l'
  1718  1826  3475               	retlw	117	;'u'
  1719  1827  3420               	retlw	32	;' '
  1720  1828  3476               	retlw	118	;'v'
  1721  1829  3461               	retlw	97	;'a'
  1722  182A  346C               	retlw	108	;'l'
  1723  182B  3400               	retlw	0
  1724                           
  1725                           	psect	stringtext5
  1726  182C                     __pstringtext5:
  1727  182C                     STR_6:
  1728  182C  3425               	retlw	37	;'%'
  1729  182D  3464               	retlw	100	;'d'
  1730  182E  3420               	retlw	32	;' '
  1731  182F  3425               	retlw	37	;'%'
  1732  1830  3400               	retlw	0
  1733                           
  1734                           	psect	stringtext6
  1735  1831                     __pstringtext6:
  1736  1831                     STR_7:
  1737  1831  346C               	retlw	108	;'l'
  1738  1832  3464               	retlw	100	;'d'
  1739  1833  3400               	retlw	0
  1740                           
  1741                           	psect	stringtext7
  1742  1834                     __pstringtext7:
  1743  1834                     STR_11:
  1744  1834  346C               	retlw	108	;'l'
  1745  1835  3469               	retlw	105	;'i'
  1746  1836  3400               	retlw	0
  1747                           
  1748                           	psect	stringtext8
  1749  1837                     __pstringtext8:
  1750  1837                     STR_16:
  1751  1837  346C               	retlw	108	;'l'
  1752  1838  3475               	retlw	117	;'u'
  1753  1839  3400               	retlw	0
  1754                           
  1755                           	psect	stringtext9
  1756  183A                     __pstringtext9:
  1757  183A                     STR_1:
  1758  183A  3420               	retlw	32	;' '
  1759  183B  3400               	retlw	0
  1760                           
  1761                           	psect	stringtext10
  1762  0000                     __pstringtext10:
  1763  1831                     
  1764                           	psect	cinit
  1765  07E5                     start_initialization:	
  1766                           ; #config settings
  1767                           
  1768  07E5                     __initialization:
  1769                           
  1770                           ; Initialize objects allocated to BANK2
  1771  07E5  3007               	movlw	low __pidataBANK2
  1772  07E6  0084               	movwf	4
  1773  07E7  3080               	movlw	(high __pidataBANK2)| (0+128)
  1774  07E8  0085               	movwf	5
  1775  07E9  304F               	movlw	low __pdataBANK2
  1776  07EA  0086               	movwf	6
  1777  07EB  3001               	movlw	high __pdataBANK2
  1778  07EC  0087               	movwf	7
  1779  07ED  301E               	movlw	30
  1780  07EE  3195  2512  3187   	fcall	init_ram
  1781                           
  1782                           ; Clear objects allocated to BANK1
  1783  07F1  0021               	movlb	1	; select bank1
  1784  07F2  01ED               	clrf	__pbssBANK1& (0+127)
  1785  07F3  01EE               	clrf	(__pbssBANK1+1)& (0+127)
  1786  07F4  01EF               	clrf	(__pbssBANK1+2)& (0+127)
  1787                           
  1788                           ; Clear objects allocated to BANK2
  1789  07F5  3020               	movlw	low __pbssBANK2
  1790  07F6  0084               	movwf	4
  1791  07F7  3001               	movlw	high __pbssBANK2
  1792  07F8  0085               	movwf	5
  1793  07F9  302F               	movlw	47
  1794  07FA  3195  250C  3187   	fcall	clear_ram0
  1795  07FD                     end_of_initialization:	
  1796                           ;End of C runtime variable initialization code
  1797                           
  1798  07FD                     __end_of__initialization:
  1799  07FD  0020               	movlb	0
  1800  07FE  3189  29FF         	ljmp	_main	;jump to C main() function
  1801                           
  1802                           	psect	bssBANK1
  1803  00ED                     __pbssBANK1:
  1804  00ED                     _flags:
  1805  00ED                     	ds	2
  1806  00EF                     _m_brightness:
  1807  00EF                     	ds	1
  1808                           
  1809                           	psect	bssBANK2
  1810  0120                     __pbssBANK2:
  1811  0120                     main@F2804:
  1812  0120                     	ds	5
  1813  0125                     clear_segment@F2765:
  1814  0125                     	ds	4
  1815  0129                     _nout:
  1816  0129                     	ds	2
  1817  012B                     _width:
  1818  012B                     	ds	2
  1819  012D                     _prec:
  1820  012D                     	ds	2
  1821  012F                     _dbuf:
  1822  012F                     	ds	32
  1823                           
  1824                           	psect	dataBANK2
  1825  014F                     __pdataBANK2:
  1826  014F                     main@F2800:
  1827  014F                     	ds	12
  1828  015B                     _segdata:
  1829  015B                     	ds	10
  1830  0165                     lcd_set_cursor@F2781:
  1831  0165                     	ds	4
  1832  0169                     main@F2802:
  1833  0169                     	ds	4
  1834                           
  1835                           	psect	inittext
  1836  1512                     init_ram:
  1837  1512  00FE               	movwf	btemp
  1838  1513                     initloop:
  1839  1513  0012               	moviw fsr0++
  1840  1514  001E               	movwi fsr1++
  1841  1515  0BFE               	decfsz	btemp,f
  1842  1516  2D13               	goto	initloop
  1843  1517  3400               	retlw	0
  1844                           
  1845                           	psect	clrtext
  1846  150C                     clear_ram0:	
  1847                           ;	Called with FSR0 containing the base address, and
  1848                           ;	WREG with the size to clear
  1849                           
  1850  150C  0064               	clrwdt	;clear the watchdog before getting into this loop
  1851  150D                     clrloop0:
  1852  150D  0180               	clrf	0	;clear RAM location pointed to by FSR
  1853  150E  3101               	addfsr 0,1
  1854  150F  0B89               	decfsz	9,f	;Have we reached the end of clearing yet?
  1855  1510  2D0D               	goto	clrloop0	;have we reached the end yet?
  1856  1511  3400               	retlw	0	;all done for this memory range, return
  1857                           
  1858                           	psect	cstackBANK1
  1859  00A0                     __pcstackBANK1:
  1860  00A0                     ??_vfprintf:
  1861                           
  1862                           ; 1 bytes @ 0x0
  1863  00A0                     	ds	2
  1864  00A2                     vfprintf@fp:
  1865                           
  1866                           ; 1 bytes @ 0x2
  1867  00A2                     	ds	1
  1868  00A3                     vfprintf@cfmt:
  1869                           
  1870                           ; 2 bytes @ 0x3
  1871  00A3                     	ds	2
  1872  00A5                     ?_sprintf:
  1873  00A5                     sprintf@fmt:	
  1874                           ; 2 bytes @ 0x5
  1875                           
  1876                           
  1877                           ; 2 bytes @ 0x5
  1878  00A5                     	ds	6
  1879  00AB                     ??_sprintf:
  1880                           
  1881                           ; 1 bytes @ 0xB
  1882  00AB                     	ds	1
  1883  00AC                     sprintf@s:
  1884                           
  1885                           ; 1 bytes @ 0xC
  1886  00AC                     	ds	1
  1887  00AD                     sprintf@ap:
  1888                           
  1889                           ; 1 bytes @ 0xD
  1890  00AD                     	ds	1
  1891  00AE                     sprintf@f:
  1892                           
  1893                           ; 5 bytes @ 0xE
  1894  00AE                     	ds	5
  1895  00B3                     ??_initialize:
  1896  00B3                     ??_print_gram:	
  1897                           ; 1 bytes @ 0x13
  1898                           
  1899                           
  1900                           ; 1 bytes @ 0x13
  1901  00B3                     	ds	1
  1902  00B4                     initialize@valstr:
  1903                           
  1904                           ; 16 bytes @ 0x14
  1905  00B4                     	ds	1
  1906  00B5                     print_gram@row1:
  1907                           
  1908                           ; 16 bytes @ 0x15
  1909  00B5                     	ds	15
  1910  00C4                     initialize@p:
  1911                           
  1912                           ; 1 bytes @ 0x24
  1913  00C4                     	ds	1
  1914  00C5                     print_gram@row2:
  1915                           
  1916                           ; 16 bytes @ 0x25
  1917  00C5                     	ds	16
  1918  00D5                     print_gram@p:
  1919                           
  1920                           ; 1 bytes @ 0x35
  1921  00D5                     	ds	1
  1922  00D6                     ??_main:
  1923                           
  1924                           ; 1 bytes @ 0x36
  1925  00D6                     	ds	2
  1926  00D8                     main@lcd:
  1927                           
  1928                           ; 4 bytes @ 0x38
  1929  00D8                     	ds	4
  1930  00DC                     main@loadcell:
  1931                           
  1932                           ; 12 bytes @ 0x3C
  1933  00DC                     	ds	12
  1934  00E8                     main@drink:
  1935                           
  1936                           ; 5 bytes @ 0x48
  1937  00E8                     	ds	5
  1938                           
  1939                           	psect	cstackCOMMON
  1940  0070                     __pcstackCOMMON:
  1941  0070                     ?_OSCILLATOR_Initialize:
  1942  0070                     ??_OSCILLATOR_Initialize:	
  1943                           ; 1 bytes @ 0x0
  1944                           
  1945  0070                     ?_WDT_Initialize:	
  1946                           ; 1 bytes @ 0x0
  1947                           
  1948  0070                     ??_WDT_Initialize:	
  1949                           ; 1 bytes @ 0x0
  1950                           
  1951  0070                     ?_initialize:	
  1952                           ; 1 bytes @ 0x0
  1953                           
  1954  0070                     ?_calc_percentage:	
  1955                           ; 1 bytes @ 0x0
  1956                           
  1957  0070                     ?_print_gram:	
  1958                           ; 1 bytes @ 0x0
  1959                           
  1960  0070                     ?_putch:	
  1961                           ; 1 bytes @ 0x0
  1962                           
  1963  0070                     ??_putch:	
  1964                           ; 1 bytes @ 0x0
  1965                           
  1966  0070                     ?_PIN_MANAGER_Initialize:	
  1967                           ; 1 bytes @ 0x0
  1968                           
  1969  0070                     ??_PIN_MANAGER_Initialize:	
  1970                           ; 1 bytes @ 0x0
  1971                           
  1972  0070                     ?_SYSTEM_Initialize:	
  1973                           ; 1 bytes @ 0x0
  1974                           
  1975  0070                     ??_SYSTEM_Initialize:	
  1976                           ; 1 bytes @ 0x0
  1977                           
  1978  0070                     ?_i2c_wait:	
  1979                           ; 1 bytes @ 0x0
  1980                           
  1981  0070                     ??_i2c_wait:	
  1982                           ; 1 bytes @ 0x0
  1983                           
  1984  0070                     ?_i2c_start:	
  1985                           ; 1 bytes @ 0x0
  1986                           
  1987  0070                     ??_i2c_start:	
  1988                           ; 1 bytes @ 0x0
  1989                           
  1990  0070                     ?_i2c_stop:	
  1991                           ; 1 bytes @ 0x0
  1992                           
  1993  0070                     ??_i2c_stop:	
  1994                           ; 1 bytes @ 0x0
  1995                           
  1996  0070                     ?_i2c_write:	
  1997                           ; 1 bytes @ 0x0
  1998                           
  1999  0070                     ??_i2c_write:	
  2000                           ; 1 bytes @ 0x0
  2001                           
  2002  0070                     ?_main:	
  2003                           ; 1 bytes @ 0x0
  2004                           
  2005  0070                     ?_set_CELL_CLK_LOW:	
  2006                           ; 1 bytes @ 0x0
  2007                           
  2008  0070                     ??_set_CELL_CLK_LOW:	
  2009                           ; 1 bytes @ 0x0
  2010                           
  2011  0070                     ?_set_CELL_CLK_HIGH:	
  2012                           ; 1 bytes @ 0x0
  2013                           
  2014  0070                     ??_set_CELL_CLK_HIGH:	
  2015                           ; 1 bytes @ 0x0
  2016                           
  2017  0070                     ?_scale_convert_gram:	
  2018                           ; 1 bytes @ 0x0
  2019                           
  2020  0070                     ?_lcd_init:	
  2021                           ; 1 bytes @ 0x0
  2022                           
  2023  0070                     ?_lcd_backlight:	
  2024                           ; 1 bytes @ 0x0
  2025                           
  2026  0070                     ?_lcd_clear:	
  2027                           ; 1 bytes @ 0x0
  2028                           
  2029  0070                     ??___aodiv:	
  2030                           ; 1 bytes @ 0x0
  2031                           
  2032  0070                     ??___aomod:	
  2033                           ; 1 bytes @ 0x0
  2034                           
  2035  0070                     ??___lodiv:	
  2036                           ; 1 bytes @ 0x0
  2037                           
  2038  0070                     ??___lomod:	
  2039                           ; 1 bytes @ 0x0
  2040                           
  2041  0070                     ?_fputc:	
  2042                           ; 1 bytes @ 0x0
  2043                           
  2044  0070                     ?_strlen:	
  2045                           ; 2 bytes @ 0x0
  2046                           
  2047  0070                     ?_strncmp:	
  2048                           ; 2 bytes @ 0x0
  2049                           
  2050  0070                     ?_get_CELL_DAT_VAL:	
  2051                           ; 2 bytes @ 0x0
  2052                           
  2053  0070                     ?___lwdiv:	
  2054                           ; 2 bytes @ 0x0
  2055                           
  2056  0070                     ?___lldiv:	
  2057                           ; 2 bytes @ 0x0
  2058                           
  2059  0070                     ?___fltol:	
  2060                           ; 4 bytes @ 0x0
  2061                           
  2062  0070                     ?___fldiv:	
  2063                           ; 4 bytes @ 0x0
  2064                           
  2065  0070                     ?___xxtofl:	
  2066                           ; 4 bytes @ 0x0
  2067                           
  2068  0070                     i2c_write@data:	
  2069                           ; 4 bytes @ 0x0
  2070                           
  2071  0070                     putch@c:	
  2072                           ; 1 bytes @ 0x0
  2073                           
  2074  0070                     ___lwdiv@divisor:	
  2075                           ; 1 bytes @ 0x0
  2076                           
  2077  0070                     fputc@c:	
  2078                           ; 2 bytes @ 0x0
  2079                           
  2080  0070                     strncmp@_l:	
  2081                           ; 2 bytes @ 0x0
  2082                           
  2083  0070                     ___lldiv@divisor:	
  2084                           ; 2 bytes @ 0x0
  2085                           
  2086  0070                     ___fltol@f1:	
  2087                           ; 4 bytes @ 0x0
  2088                           
  2089  0070                     ___fldiv@a:	
  2090                           ; 4 bytes @ 0x0
  2091                           
  2092  0070                     ___xxtofl@val:	
  2093                           ; 4 bytes @ 0x0
  2094                           
  2095                           
  2096                           ; 4 bytes @ 0x0
  2097  0070                     	ds	1
  2098  0071                     ?_lcd_cmd:
  2099  0071                     set_CELL_CLK_LOW@p:	
  2100                           ; 1 bytes @ 0x1
  2101                           
  2102  0071                     set_CELL_CLK_HIGH@p:	
  2103                           ; 1 bytes @ 0x1
  2104                           
  2105  0071                     lcd_cmd@cmd:	
  2106                           ; 1 bytes @ 0x1
  2107                           
  2108  0071                     ___aodiv@counter:	
  2109                           ; 1 bytes @ 0x1
  2110                           
  2111  0071                     ___aomod@counter:	
  2112                           ; 1 bytes @ 0x1
  2113                           
  2114  0071                     ___lomod@counter:	
  2115                           ; 1 bytes @ 0x1
  2116                           
  2117  0071                     ___lodiv@quotient:	
  2118                           ; 1 bytes @ 0x1
  2119                           
  2120                           
  2121                           ; 8 bytes @ 0x1
  2122  0071                     	ds	1
  2123  0072                     ??_strlen:
  2124  0072                     ??_get_CELL_DAT_VAL:	
  2125                           ; 1 bytes @ 0x2
  2126                           
  2127  0072                     ??_lcd_cmd:	
  2128                           ; 1 bytes @ 0x2
  2129                           
  2130  0072                     lcd_cmd@p:	
  2131                           ; 1 bytes @ 0x2
  2132                           
  2133  0072                     ___aodiv@sign:	
  2134                           ; 1 bytes @ 0x2
  2135                           
  2136  0072                     ___aomod@sign:	
  2137                           ; 1 bytes @ 0x2
  2138                           
  2139  0072                     fputc@fp:	
  2140                           ; 1 bytes @ 0x2
  2141                           
  2142  0072                     ___lwdiv@dividend:	
  2143                           ; 1 bytes @ 0x2
  2144                           
  2145  0072                     strncmp@_r:	
  2146                           ; 2 bytes @ 0x2
  2147                           
  2148                           
  2149                           ; 2 bytes @ 0x2
  2150  0072                     	ds	1
  2151  0073                     ?_write4bits:
  2152  0073                     ?_command:	
  2153                           ; 1 bytes @ 0x3
  2154                           
  2155  0073                     ??_fputc:	
  2156                           ; 1 bytes @ 0x3
  2157                           
  2158  0073                     ??_lcd_backlight:	
  2159                           ; 1 bytes @ 0x3
  2160                           
  2161  0073                     ?_abs:	
  2162                           ; 1 bytes @ 0x3
  2163                           
  2164  0073                     command@val:	
  2165                           ; 2 bytes @ 0x3
  2166                           
  2167  0073                     write4bits@val:	
  2168                           ; 1 bytes @ 0x3
  2169                           
  2170  0073                     strlen@a:	
  2171                           ; 1 bytes @ 0x3
  2172                           
  2173  0073                     abs@a:	
  2174                           ; 1 bytes @ 0x3
  2175                           
  2176  0073                     ___aodiv@quotient:	
  2177                           ; 2 bytes @ 0x3
  2178                           
  2179                           
  2180                           ; 8 bytes @ 0x3
  2181  0073                     	ds	1
  2182  0074                     ??_write4bits:
  2183  0074                     ??___fltol:	
  2184                           ; 1 bytes @ 0x4
  2185                           
  2186  0074                     ??___lwdiv:	
  2187                           ; 1 bytes @ 0x4
  2188                           
  2189  0074                     ??___xxtofl:	
  2190                           ; 1 bytes @ 0x4
  2191                           
  2192  0074                     lcd_backlight@p:	
  2193                           ; 1 bytes @ 0x4
  2194                           
  2195  0074                     command@mode:	
  2196                           ; 1 bytes @ 0x4
  2197                           
  2198  0074                     strlen@s:	
  2199                           ; 1 bytes @ 0x4
  2200                           
  2201  0074                     strncmp@n:	
  2202                           ; 1 bytes @ 0x4
  2203                           
  2204  0074                     ___lldiv@dividend:	
  2205                           ; 2 bytes @ 0x4
  2206                           
  2207  0074                     ___fldiv@b:	
  2208                           ; 4 bytes @ 0x4
  2209                           
  2210                           
  2211                           ; 4 bytes @ 0x4
  2212  0074                     	ds	1
  2213  0075                     ??_command:
  2214  0075                     ??_abs:	
  2215                           ; 1 bytes @ 0x5
  2216                           
  2217  0075                     get_CELL_DAT_VAL@p:	
  2218                           ; 1 bytes @ 0x5
  2219                           
  2220  0075                     write4bits@p:	
  2221                           ; 1 bytes @ 0x5
  2222                           
  2223  0075                     ___lwdiv@quotient:	
  2224                           ; 1 bytes @ 0x5
  2225                           
  2226                           
  2227                           ; 2 bytes @ 0x5
  2228  0075                     	ds	1
  2229  0076                     ??_strncmp:
  2230  0076                     ??_lcd_init:	
  2231                           ; 1 bytes @ 0x6
  2232                           
  2233                           
  2234                           ; 1 bytes @ 0x6
  2235  0076                     	ds	1
  2236  0077                     command@highnib:
  2237  0077                     ___lwdiv@counter:	
  2238                           ; 1 bytes @ 0x7
  2239                           
  2240  0077                     strncmp@l:	
  2241                           ; 1 bytes @ 0x7
  2242                           
  2243                           
  2244                           ; 2 bytes @ 0x7
  2245  0077                     	ds	1
  2246  0078                     ?___bmul:
  2247  0078                     ??___lldiv:	
  2248                           ; 1 bytes @ 0x8
  2249                           
  2250  0078                     ??___fldiv:	
  2251                           ; 1 bytes @ 0x8
  2252                           
  2253  0078                     ?_fputs:	
  2254                           ; 1 bytes @ 0x8
  2255                           
  2256  0078                     lcd_init@p:	
  2257                           ; 2 bytes @ 0x8
  2258                           
  2259  0078                     command@lownib:	
  2260                           ; 1 bytes @ 0x8
  2261                           
  2262  0078                     ___bmul@multiplicand:	
  2263                           ; 1 bytes @ 0x8
  2264                           
  2265  0078                     ___xxtofl@sign:	
  2266                           ; 1 bytes @ 0x8
  2267                           
  2268  0078                     fputs@fp:	
  2269                           ; 1 bytes @ 0x8
  2270                           
  2271                           
  2272                           ; 1 bytes @ 0x8
  2273  0078                     	ds	1
  2274  0079                     ??_fputs:
  2275  0079                     ??___bmul:	
  2276                           ; 1 bytes @ 0x9
  2277                           
  2278  0079                     command@p:	
  2279                           ; 1 bytes @ 0x9
  2280                           
  2281  0079                     ___fltol@sign1:	
  2282                           ; 1 bytes @ 0x9
  2283                           
  2284  0079                     ___lodiv@counter:	
  2285                           ; 1 bytes @ 0x9
  2286                           
  2287  0079                     ___xxtofl@exp:	
  2288                           ; 1 bytes @ 0x9
  2289                           
  2290  0079                     strncmp@r:	
  2291                           ; 1 bytes @ 0x9
  2292                           
  2293  0079                     ___lldiv@quotient:	
  2294                           ; 2 bytes @ 0x9
  2295                           
  2296                           
  2297                           ; 4 bytes @ 0x9
  2298  0079                     	ds	1
  2299  007A                     ?_lcd_set_cursor:
  2300  007A                     ?_lcd_print:	
  2301                           ; 1 bytes @ 0xA
  2302                           
  2303  007A                     lcd_set_cursor@col:	
  2304                           ; 1 bytes @ 0xA
  2305                           
  2306  007A                     ___bmul@product:	
  2307                           ; 1 bytes @ 0xA
  2308                           
  2309  007A                     ___fltol@exp1:	
  2310                           ; 1 bytes @ 0xA
  2311                           
  2312  007A                     lcd_print@str:	
  2313                           ; 1 bytes @ 0xA
  2314                           
  2315  007A                     ___xxtofl@arg:	
  2316                           ; 2 bytes @ 0xA
  2317                           
  2318                           
  2319                           ; 4 bytes @ 0xA
  2320  007A                     	ds	1
  2321  007B                     lcd_set_cursor@row:
  2322  007B                     ___bmul@multiplier:	
  2323                           ; 1 bytes @ 0xB
  2324                           
  2325                           
  2326                           ; 1 bytes @ 0xB
  2327  007B                     	ds	1
  2328  007C                     ??_lcd_set_cursor:
  2329  007C                     ??_lcd_print:	
  2330                           ; 1 bytes @ 0xC
  2331                           
  2332  007C                     ??_pad:	
  2333                           ; 1 bytes @ 0xC
  2334                           
  2335                           
  2336                           ; 1 bytes @ 0xC
  2337  007C                     	ds	1
  2338  007D                     ??_utoa:
  2339  007D                     lcd_print_with@p:	
  2340                           ; 1 bytes @ 0xD
  2341                           
  2342  007D                     ___lldiv@counter:	
  2343                           ; 1 bytes @ 0xD
  2344                           
  2345                           
  2346                           ; 1 bytes @ 0xD
  2347  007D                     	ds	1
  2348                           
  2349                           	psect	cstackBANK0
  2350  0020                     __pcstackBANK0:
  2351  0020                     ?_get_scale_val:
  2352  0020                     ?___aodiv:	
  2353                           ; 4 bytes @ 0x0
  2354                           
  2355  0020                     ?___aomod:	
  2356                           ; 8 bytes @ 0x0
  2357                           
  2358  0020                     ?___lodiv:	
  2359                           ; 8 bytes @ 0x0
  2360                           
  2361  0020                     ?___lomod:	
  2362                           ; 8 bytes @ 0x0
  2363                           
  2364  0020                     get_scale_val@scale_avg_count:	
  2365                           ; 8 bytes @ 0x0
  2366                           
  2367  0020                     lcd_print@cmd:	
  2368                           ; 1 bytes @ 0x0
  2369                           
  2370  0020                     fputs@c:	
  2371                           ; 1 bytes @ 0x0
  2372                           
  2373  0020                     lcd_set_cursor@row_offsets:	
  2374                           ; 1 bytes @ 0x0
  2375                           
  2376  0020                     ___fldiv@rem:	
  2377                           ; 4 bytes @ 0x0
  2378                           
  2379  0020                     ___aodiv@divisor:	
  2380                           ; 4 bytes @ 0x0
  2381                           
  2382  0020                     ___aomod@divisor:	
  2383                           ; 8 bytes @ 0x0
  2384                           
  2385  0020                     ___lodiv@divisor:	
  2386                           ; 8 bytes @ 0x0
  2387                           
  2388  0020                     ___lomod@divisor:	
  2389                           ; 8 bytes @ 0x0
  2390                           
  2391                           
  2392                           ; 8 bytes @ 0x0
  2393  0020                     	ds	1
  2394  0021                     lcd_print@p:
  2395  0021                     fputs@i:	
  2396                           ; 1 bytes @ 0x1
  2397                           
  2398                           
  2399                           ; 2 bytes @ 0x1
  2400  0021                     	ds	2
  2401  0023                     fputs@s:
  2402                           
  2403                           ; 1 bytes @ 0x3
  2404  0023                     	ds	1
  2405  0024                     ??_get_scale_val:
  2406  0024                     ?_pad:	
  2407                           ; 1 bytes @ 0x4
  2408                           
  2409  0024                     lcd_set_cursor@cmd:	
  2410                           ; 2 bytes @ 0x4
  2411                           
  2412  0024                     ___fldiv@sign:	
  2413                           ; 1 bytes @ 0x4
  2414                           
  2415  0024                     pad@buf:	
  2416                           ; 1 bytes @ 0x4
  2417                           
  2418                           
  2419                           ; 1 bytes @ 0x4
  2420  0024                     	ds	1
  2421  0025                     lcd_set_cursor@p:
  2422  0025                     ___fldiv@new_exp:	
  2423                           ; 1 bytes @ 0x5
  2424                           
  2425  0025                     pad@p:	
  2426                           ; 2 bytes @ 0x5
  2427                           
  2428                           
  2429                           ; 2 bytes @ 0x5
  2430  0025                     	ds	1
  2431  0026                     ??_lcd_clear:
  2432  0026                     ?_lcd_print_with:	
  2433                           ; 1 bytes @ 0x6
  2434                           
  2435  0026                     lcd_print_with@str:	
  2436                           ; 1 bytes @ 0x6
  2437                           
  2438                           
  2439                           ; 2 bytes @ 0x6
  2440  0026                     	ds	1
  2441  0027                     pad@i:
  2442  0027                     ___fldiv@grs:	
  2443                           ; 2 bytes @ 0x7
  2444                           
  2445                           
  2446                           ; 4 bytes @ 0x7
  2447  0027                     	ds	1
  2448  0028                     lcd_clear@row:
  2449  0028                     lcd_print_with@col:	
  2450                           ; 1 bytes @ 0x8
  2451                           
  2452  0028                     get_scale_val@weight_add:	
  2453                           ; 1 bytes @ 0x8
  2454                           
  2455  0028                     ___aodiv@dividend:	
  2456                           ; 4 bytes @ 0x8
  2457                           
  2458  0028                     ___aomod@dividend:	
  2459                           ; 8 bytes @ 0x8
  2460                           
  2461  0028                     ___lodiv@dividend:	
  2462                           ; 8 bytes @ 0x8
  2463                           
  2464  0028                     ___lomod@dividend:	
  2465                           ; 8 bytes @ 0x8
  2466                           
  2467                           
  2468                           ; 8 bytes @ 0x8
  2469  0028                     	ds	1
  2470  0029                     lcd_clear@col:
  2471  0029                     lcd_print_with@row:	
  2472                           ; 1 bytes @ 0x9
  2473                           
  2474  0029                     pad@w:	
  2475                           ; 1 bytes @ 0x9
  2476                           
  2477                           
  2478                           ; 2 bytes @ 0x9
  2479  0029                     	ds	1
  2480  002A                     ??_lcd_print_with:
  2481  002A                     lcd_clear@p:	
  2482                           ; 1 bytes @ 0xA
  2483                           
  2484                           
  2485                           ; 1 bytes @ 0xA
  2486  002A                     	ds	1
  2487  002B                     ___fldiv@bexp:
  2488  002B                     pad@fp:	
  2489                           ; 1 bytes @ 0xB
  2490                           
  2491                           
  2492                           ; 1 bytes @ 0xB
  2493  002B                     	ds	1
  2494  002C                     get_scale_val@j:
  2495  002C                     ___fldiv@aexp:	
  2496                           ; 1 bytes @ 0xC
  2497                           
  2498                           
  2499                           ; 1 bytes @ 0xC
  2500  002C                     	ds	1
  2501  002D                     ??_scale_convert_gram:
  2502  002D                     get_scale_val@weight_count:	
  2503                           ; 1 bytes @ 0xD
  2504                           
  2505                           
  2506                           ; 4 bytes @ 0xD
  2507  002D                     	ds	3
  2508  0030                     ?_dtoa:
  2509  0030                     ?_utoa:	
  2510                           ; 2 bytes @ 0x10
  2511                           
  2512  0030                     dtoa@d:	
  2513                           ; 2 bytes @ 0x10
  2514                           
  2515  0030                     utoa@d:	
  2516                           ; 8 bytes @ 0x10
  2517                           
  2518                           
  2519                           ; 8 bytes @ 0x10
  2520  0030                     	ds	1
  2521  0031                     get_scale_val@i:
  2522                           
  2523                           ; 1 bytes @ 0x11
  2524  0031                     	ds	1
  2525  0032                     get_scale_val@p:
  2526                           
  2527                           ; 1 bytes @ 0x12
  2528  0032                     	ds	3
  2529  0035                     scale_convert_gram@temp:
  2530                           
  2531                           ; 4 bytes @ 0x15
  2532  0035                     	ds	3
  2533  0038                     ??_dtoa:
  2534  0038                     utoa@p:	
  2535                           ; 1 bytes @ 0x18
  2536                           
  2537                           
  2538                           ; 2 bytes @ 0x18
  2539  0038                     	ds	1
  2540  0039                     scale_convert_gram@p:
  2541                           
  2542                           ; 1 bytes @ 0x19
  2543  0039                     	ds	1
  2544  003A                     ??_calc_percentage:
  2545  003A                     utoa@fp:	
  2546                           ; 1 bytes @ 0x1A
  2547                           
  2548                           
  2549                           ; 1 bytes @ 0x1A
  2550  003A                     	ds	1
  2551  003B                     _dtoa$1179:
  2552  003B                     utoa@w:	
  2553                           ; 2 bytes @ 0x1B
  2554                           
  2555                           
  2556                           ; 2 bytes @ 0x1B
  2557  003B                     	ds	1
  2558  003C                     calc_percentage@p:
  2559                           
  2560                           ; 1 bytes @ 0x1C
  2561  003C                     	ds	1
  2562  003D                     dtoa@p:
  2563  003D                     utoa@n:	
  2564                           ; 2 bytes @ 0x1D
  2565                           
  2566                           
  2567                           ; 8 bytes @ 0x1D
  2568  003D                     	ds	2
  2569  003F                     dtoa@fp:
  2570                           
  2571                           ; 1 bytes @ 0x1F
  2572  003F                     	ds	1
  2573  0040                     dtoa@w:
  2574                           
  2575                           ; 2 bytes @ 0x20
  2576  0040                     	ds	2
  2577  0042                     dtoa@s:
  2578                           
  2579                           ; 2 bytes @ 0x22
  2580  0042                     	ds	2
  2581  0044                     dtoa@n:
  2582                           
  2583                           ; 8 bytes @ 0x24
  2584  0044                     	ds	1
  2585  0045                     utoa@i:
  2586                           
  2587                           ; 2 bytes @ 0x25
  2588  0045                     	ds	7
  2589  004C                     dtoa@i:
  2590                           
  2591                           ; 2 bytes @ 0x2C
  2592  004C                     	ds	2
  2593  004E                     ?_vfpfcnvrt:
  2594  004E                     vfpfcnvrt@fmt:	
  2595                           ; 2 bytes @ 0x2E
  2596                           
  2597                           
  2598                           ; 1 bytes @ 0x2E
  2599  004E                     	ds	1
  2600  004F                     vfpfcnvrt@ap:
  2601                           
  2602                           ; 1 bytes @ 0x2F
  2603  004F                     	ds	1
  2604  0050                     ??_vfpfcnvrt:
  2605                           
  2606                           ; 1 bytes @ 0x30
  2607  0050                     	ds	12
  2608  005C                     vfpfcnvrt@ll:
  2609                           
  2610                           ; 8 bytes @ 0x3C
  2611  005C                     	ds	8
  2612  0064                     vfpfcnvrt@llu:
  2613                           
  2614                           ; 8 bytes @ 0x44
  2615  0064                     	ds	8
  2616  006C                     vfpfcnvrt@fp:
  2617                           
  2618                           ; 1 bytes @ 0x4C
  2619  006C                     	ds	1
  2620  006D                     ?_vfprintf:
  2621  006D                     vfprintf@fmt:	
  2622                           ; 2 bytes @ 0x4D
  2623                           
  2624                           
  2625                           ; 2 bytes @ 0x4D
  2626  006D                     	ds	2
  2627  006F                     vfprintf@ap:
  2628                           
  2629                           ; 1 bytes @ 0x4F
  2630  006F                     	ds	1
  2631                           
  2632                           	psect	maintext
  2633  09FF                     __pmaintext:	
  2634 ;;
  2635 ;;Main: autosize = 0, tempsize = 2, incstack = 0, save=0
  2636 ;;
  2637 ;; *************** function _main *****************
  2638 ;; Defined at:
  2639 ;;		line 8 in file "main.c"
  2640 ;; Parameters:    Size  Location     Type
  2641 ;;		None
  2642 ;; Auto vars:     Size  Location     Type
  2643 ;;  loadcell       12   60[BANK1 ] struct .
  2644 ;;  drink           5   72[BANK1 ] struct .
  2645 ;;  lcd             4   56[BANK1 ] struct .
  2646 ;; Return value:  Size  Location     Type
  2647 ;;                  1    wreg      void 
  2648 ;; Registers used:
  2649 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  2650 ;; Tracked objects:
  2651 ;;		On entry : B1F/0
  2652 ;;		On exit  : 0/0
  2653 ;;		Unchanged: 0/0
  2654 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  2655 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2656 ;;      Locals:         0       0      21       0       0       0       0       0       0       0       0       0       
      +0       0
  2657 ;;      Temps:          0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0
  2658 ;;      Totals:         0       0      23       0       0       0       0       0       0       0       0       0       
      +0       0
  2659 ;;Total ram usage:       23 bytes
  2660 ;; Hardware stack levels required when called: 9
  2661 ;; This function calls:
  2662 ;;		_SYSTEM_Initialize
  2663 ;;		_calc_percentage
  2664 ;;		_initialize
  2665 ;;		_print_gram
  2666 ;; This function is called by:
  2667 ;;		Startup code after reset
  2668 ;; This function uses a non-reentrant model
  2669 ;;
  2670                           
  2671                           
  2672                           ;psect for function _main
  2673  09FF                     _main:
  2674  09FF                     l3363:	
  2675                           ;incstack = 0
  2676                           ; Regs used in _main: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  2677                           
  2678                           
  2679                           ;main.c: 11:     SYSTEM_Initialize();
  2680  09FF  3195  2526  3189   	fcall	_SYSTEM_Initialize
  2681  0A02                     l3365:
  2682                           
  2683                           ;main.c: 15:     ANSELA = 0x00;
  2684  0A02  0023               	movlb	3	; select bank3
  2685  0A03  018C               	clrf	12	;volatile
  2686  0A04                     l3367:
  2687                           
  2688                           ;main.c: 16:     ANSELB = 0x00;
  2689  0A04  018D               	clrf	13	;volatile
  2690  0A05                     l3369:
  2691                           
  2692                           ;main.c: 20:     TRISB = 0x01;
  2693  0A05  3001               	movlw	1
  2694  0A06  0021               	movlb	1	; select bank1
  2695  0A07  008D               	movwf	13	;volatile
  2696  0A08                     l3371:
  2697                           
  2698                           ;main.c: 22:     LATA = 0x00;
  2699  0A08  0022               	movlb	2	; select bank2
  2700  0A09  018C               	clrf	12	;volatile
  2701  0A0A                     l3373:
  2702                           
  2703                           ;main.c: 23:     LATB = 0x00;
  2704  0A0A  018D               	clrf	13	;volatile
  2705  0A0B                     l3375:
  2706                           
  2707                           ;main.c: 26:     SSPADD = 0x13;
  2708  0A0B  3013               	movlw	19
  2709  0A0C  0024               	movlb	4	; select bank4
  2710  0A0D  0092               	movwf	18	;volatile
  2711  0A0E                     l3377:
  2712                           
  2713                           ;main.c: 27:     SSPCON1 = 0x28;
  2714  0A0E  3028               	movlw	40
  2715  0A0F  0095               	movwf	21	;volatile
  2716  0A10                     l3379:
  2717                           
  2718                           ;main.c: 28:     SSPCON2 = 0x0;
  2719  0A10  0196               	clrf	22	;volatile
  2720  0A11                     l3381:
  2721                           
  2722                           ;main.c: 29:     SSPSTAT = 0;
  2723  0A11  0194               	clrf	20	;volatile
  2724  0A12                     l3383:
  2725                           
  2726                           ;main.c: 31:     LoadCell loadcell = {0x01, 0x00,0, 0, 500};
  2727  0A12  304F               	movlw	low main@F2800
  2728  0A13  0086               	movwf	6
  2729  0A14  3001               	movlw	high main@F2800
  2730  0A15  0087               	movwf	7
  2731  0A16  30DC               	movlw	low main@loadcell
  2732  0A17  0084               	movwf	4
  2733  0A18  3000               	movlw	high main@loadcell
  2734  0A19  0085               	movwf	5
  2735  0A1A  300C               	movlw	12
  2736  0A1B  0021               	movlb	1	; select bank1
  2737  0A1C  00D6               	movwf	??_main^(0+128)
  2738  0A1D                     u3640:
  2739  0A1D  0016               	moviw fsr1++
  2740  0A1E  001A               	movwi fsr0++
  2741  0A1F  0BD6               	decfsz	??_main^(0+128),f
  2742  0A20  2A1D               	goto	u3640
  2743  0A21                     l3385:
  2744                           
  2745                           ;main.c: 32:     Lcd lcd = {0x27, 16, 2, 0};
  2746  0A21  0022               	movlb	2	; select bank2
  2747  0A22  086C               	movf	(main@F2802+3)^(0+256),w
  2748  0A23  0021               	movlb	1	; select bank1
  2749  0A24  00DB               	movwf	(main@lcd+3)^(0+128)
  2750  0A25  0022               	movlb	2	; select bank2
  2751  0A26  086B               	movf	(main@F2802+2)^(0+256),w
  2752  0A27  0021               	movlb	1	; select bank1
  2753  0A28  00DA               	movwf	(main@lcd+2)^(0+128)
  2754  0A29  0022               	movlb	2	; select bank2
  2755  0A2A  086A               	movf	(main@F2802+1)^(0+256),w
  2756  0A2B  0021               	movlb	1	; select bank1
  2757  0A2C  00D9               	movwf	(main@lcd+1)^(0+128)
  2758  0A2D  0022               	movlb	2	; select bank2
  2759  0A2E  0869               	movf	main@F2802^(0+256),w
  2760  0A2F  0021               	movlb	1	; select bank1
  2761  0A30  00D8               	movwf	main@lcd^(0+128)
  2762  0A31                     l3387:
  2763                           
  2764                           ;main.c: 34:     DrinkMeter drink = {&loadcell, &lcd, 500, 0};
  2765  0A31  3020               	movlw	low main@F2804
  2766  0A32  0086               	movwf	6
  2767  0A33  3001               	movlw	high main@F2804
  2768  0A34  0087               	movwf	7
  2769  0A35  30E8               	movlw	low main@drink
  2770  0A36  0084               	movwf	4
  2771  0A37  3000               	movlw	high main@drink
  2772  0A38  0085               	movwf	5
  2773  0A39  3005               	movlw	5
  2774  0A3A  00D6               	movwf	??_main^(0+128)
  2775  0A3B                     u3650:
  2776  0A3B  0016               	moviw fsr1++
  2777  0A3C  001A               	movwi fsr0++
  2778  0A3D  0BD6               	decfsz	??_main^(0+128),f
  2779  0A3E  2A3B               	goto	u3650
  2780  0A3F                     l3389:
  2781  0A3F  30DC               	movlw	(low (main@loadcell| 0))& (0+255)
  2782  0A40  00D6               	movwf	??_main^(0+128)
  2783  0A41  0856               	movf	??_main^(0+128),w
  2784  0A42  00E8               	movwf	main@drink^(0+128)
  2785  0A43                     l3391:
  2786  0A43  30D8               	movlw	(low (main@lcd| 0))& (0+255)
  2787  0A44  00D6               	movwf	??_main^(0+128)
  2788  0A45  0856               	movf	??_main^(0+128),w
  2789  0A46  00E9               	movwf	(low ((main@drink| 0+1)))^(0+128)
  2790  0A47                     l3393:
  2791  0A47  30F4               	movlw	244
  2792  0A48  00EA               	movwf	(main@drink^(0+128)+2)
  2793  0A49  3001               	movlw	1
  2794  0A4A  00EB               	movwf	(main@drink^(0+128)+3)
  2795  0A4B                     l3395:
  2796  0A4B  01EC               	clrf	(main@drink^(0+128)+4)
  2797  0A4C                     l3397:
  2798                           
  2799                           ;main.c: 36:     initialize(&drink);
  2800  0A4C  30E8               	movlw	(low (main@drink| 0))& (0+255)
  2801  0A4D  318B  234D  3189   	fcall	_initialize
  2802  0A50                     l3399:
  2803                           
  2804                           ;main.c: 39:         calc_percentage(&drink);
  2805  0A50  30E8               	movlw	(low (main@drink| 0))& (0+255)
  2806  0A51  3189  21A0  3189   	fcall	_calc_percentage
  2807  0A54                     l3401:
  2808                           
  2809                           ;main.c: 40:         print_gram(&drink);
  2810  0A54  30E8               	movlw	(low (main@drink| 0))& (0+255)
  2811  0A55  3188  2091  3189   	fcall	_print_gram
  2812  0A58                     l3403:
  2813                           
  2814                           ;main.c: 42:         _delay((unsigned long)((500)*(8000000/4000.0)));
  2815  0A58  3006               	movlw	6
  2816  0A59  0021               	movlb	1	; select bank1
  2817  0A5A  00D7               	movwf	(??_main^(0+128)+1)
  2818  0A5B  3013               	movlw	19
  2819  0A5C  00D6               	movwf	??_main^(0+128)
  2820  0A5D  30AD               	movlw	173
  2821  0A5E                     u3677:
  2822  0A5E  0B89               	decfsz	9,f
  2823  0A5F  2A5E               	goto	u3677
  2824  0A60  0BD6               	decfsz	??_main^(0+128),f
  2825  0A61  2A5E               	goto	u3677
  2826  0A62  0BD7               	decfsz	(??_main^(0+128)+1),f
  2827  0A63  2A5E               	goto	u3677
  2828  0A64  3200               	nop2
  2829  0A65  2A50               	goto	l3399
  2830  0A66  3180  2802         	ljmp	start
  2831  0A68                     __end_of_main:
  2832                           
  2833                           	psect	text1
  2834  0891                     __ptext1:	
  2835 ;; *************** function _print_gram *****************
  2836 ;; Defined at:
  2837 ;;		line 36 in file "drink_meter.c"
  2838 ;; Parameters:    Size  Location     Type
  2839 ;;  p               1    wreg     PTR struct .
  2840 ;;		 -> main@drink(5), 
  2841 ;; Auto vars:     Size  Location     Type
  2842 ;;  p               1   53[BANK1 ] PTR struct .
  2843 ;;		 -> main@drink(5), 
  2844 ;;  row2           16   37[BANK1 ] unsigned char [16]
  2845 ;;  row1           16   21[BANK1 ] unsigned char [16]
  2846 ;; Return value:  Size  Location     Type
  2847 ;;                  1    wreg      void 
  2848 ;; Registers used:
  2849 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  2850 ;; Tracked objects:
  2851 ;;		On entry : 0/0
  2852 ;;		On exit  : 0/0
  2853 ;;		Unchanged: 0/0
  2854 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  2855 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2856 ;;      Locals:         0       0      33       0       0       0       0       0       0       0       0       0       
      +0       0
  2857 ;;      Temps:          0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0
  2858 ;;      Totals:         0       0      35       0       0       0       0       0       0       0       0       0       
      +0       0
  2859 ;;Total ram usage:       35 bytes
  2860 ;; Hardware stack levels used: 1
  2861 ;; Hardware stack levels required when called: 8
  2862 ;; This function calls:
  2863 ;;		_lcd_clear
  2864 ;;		_lcd_print_with
  2865 ;;		_sprintf
  2866 ;; This function is called by:
  2867 ;;		_main
  2868 ;; This function uses a non-reentrant model
  2869 ;;
  2870                           
  2871                           
  2872                           ;psect for function _print_gram
  2873  0891                     _print_gram:
  2874                           
  2875                           ;incstack = 0
  2876                           ; Regs used in _print_gram: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  2877                           ;print_gram@p stored from wreg
  2878  0891  0021               	movlb	1	; select bank1
  2879  0892  00D5               	movwf	print_gram@p^(0+128)
  2880  0893                     l3333:
  2881                           
  2882                           ;drink_meter.c: 37:     char row1[16];;drink_meter.c: 38:     char row2[16];;drink_meter
      +                          .c: 40:     sprintf(row1, "%dg / %dg", p->loadcell->gram, p->max_gram);
  2883  0893  301A               	movlw	low (STR_5| (0+32768))
  2884  0894  00A5               	movwf	sprintf@fmt^(0+128)
  2885  0895  3098               	movlw	high (STR_5| (0+32768))
  2886  0896  00A6               	movwf	(sprintf@fmt^(0+128)+1)
  2887  0897  0855               	movf	print_gram@p^(0+128),w
  2888  0898  0086               	movwf	6
  2889  0899  0187               	clrf	7
  2890  089A  0801               	movf	1,w
  2891  089B  3E0A               	addlw	10
  2892  089C  0086               	movwf	6
  2893  089D  0187               	clrf	7
  2894  089E  3F40               	moviw [0]fsr1
  2895  089F  00A7               	movwf	(?_sprintf^(0+128)+2)
  2896  08A0  3F41               	moviw [1]fsr1
  2897  08A1  00A8               	movwf	((?_sprintf+1)^(0+128)+2)
  2898  08A2  0855               	movf	print_gram@p^(0+128),w
  2899  08A3  3E02               	addlw	2
  2900  08A4  0086               	movwf	6
  2901  08A5  0187               	clrf	7
  2902  08A6  3F40               	moviw [0]fsr1
  2903  08A7  00A9               	movwf	(?_sprintf^(0+128)+4)
  2904  08A8  3F41               	moviw [1]fsr1
  2905  08A9  00AA               	movwf	((?_sprintf+1)^(0+128)+4)
  2906  08AA  30B5               	movlw	(low (print_gram@row1| 0))& (0+255)
  2907  08AB  3196  2646  3188   	fcall	_sprintf
  2908                           
  2909                           ;drink_meter.c: 41:     sprintf(row2, "%d %", p->percentage);
  2910  08AE  302C               	movlw	low (STR_6| (0+32768))
  2911  08AF  0021               	movlb	1	; select bank1
  2912  08B0  00A5               	movwf	sprintf@fmt^(0+128)
  2913  08B1  3098               	movlw	high (STR_6| (0+32768))
  2914  08B2  00A6               	movwf	(sprintf@fmt^(0+128)+1)
  2915  08B3  0855               	movf	print_gram@p^(0+128),w
  2916  08B4  3E04               	addlw	4
  2917  08B5  0086               	movwf	6
  2918  08B6  0187               	clrf	7
  2919  08B7  0801               	movf	1,w
  2920  08B8  00B3               	movwf	??_print_gram^(0+128)
  2921  08B9  01B4               	clrf	(??_print_gram^(0+128)+1)
  2922  08BA  0833               	movf	??_print_gram^(0+128),w
  2923  08BB  00A7               	movwf	(?_sprintf^(0+128)+2)
  2924  08BC  0834               	movf	(??_print_gram+1)^(0+128),w
  2925  08BD  00A8               	movwf	((?_sprintf+1)^(0+128)+2)
  2926  08BE  30C5               	movlw	(low (print_gram@row2| 0))& (0+255)
  2927  08BF  3196  2646  3188   	fcall	_sprintf
  2928                           
  2929                           ;drink_meter.c: 43:     lcd_clear(p->lcd);
  2930  08C2  0021               	movlb	1	; select bank1
  2931  08C3  0A55               	incf	print_gram@p^(0+128),w
  2932  08C4  0086               	movwf	6
  2933  08C5  0187               	clrf	7
  2934  08C6  0801               	movf	1,w
  2935  08C7  3197  271C  3188   	fcall	_lcd_clear
  2936                           
  2937                           ;drink_meter.c: 45:     lcd_print_with(p->lcd, row1, 0, 0);
  2938  08CA  30B5               	movlw	low print_gram@row1
  2939  08CB  0020               	movlb	0	; select bank0
  2940  08CC  00A6               	movwf	lcd_print_with@str
  2941  08CD  3000               	movlw	high print_gram@row1
  2942  08CE  00A7               	movwf	lcd_print_with@str+1
  2943  08CF  01A8               	clrf	lcd_print_with@col
  2944  08D0  01A9               	clrf	lcd_print_with@row
  2945  08D1  0021               	movlb	1	; select bank1
  2946  08D2  0A55               	incf	print_gram@p^(0+128),w
  2947  08D3  0086               	movwf	6
  2948  08D4  0187               	clrf	7
  2949  08D5  0801               	movf	1,w
  2950  08D6  3195  25A0  3188   	fcall	_lcd_print_with
  2951                           
  2952                           ;drink_meter.c: 46:     lcd_print_with(p->lcd, row2, 0, 1);
  2953  08D9  30C5               	movlw	low print_gram@row2
  2954  08DA  0020               	movlb	0	; select bank0
  2955  08DB  00A6               	movwf	lcd_print_with@str
  2956  08DC  3000               	movlw	high print_gram@row2
  2957  08DD  00A7               	movwf	lcd_print_with@str+1
  2958  08DE  01A8               	clrf	lcd_print_with@col
  2959  08DF  01A9               	clrf	lcd_print_with@row
  2960  08E0  0AA9               	incf	lcd_print_with@row,f
  2961  08E1  0021               	movlb	1	; select bank1
  2962  08E2  0A55               	incf	print_gram@p^(0+128),w
  2963  08E3  0086               	movwf	6
  2964  08E4  0187               	clrf	7
  2965  08E5  0801               	movf	1,w
  2966  08E6  3195  25A0  3188   	fcall	_lcd_print_with
  2967  08E9                     l350:
  2968  08E9  0008               	return
  2969  08EA                     __end_of_print_gram:
  2970                           
  2971                           	psect	text2
  2972  0B4D                     __ptext2:	
  2973 ;; *************** function _initialize *****************
  2974 ;; Defined at:
  2975 ;;		line 5 in file "drink_meter.c"
  2976 ;; Parameters:    Size  Location     Type
  2977 ;;  p               1    wreg     PTR struct .
  2978 ;;		 -> main@drink(5), 
  2979 ;; Auto vars:     Size  Location     Type
  2980 ;;  p               1   36[BANK1 ] PTR struct .
  2981 ;;		 -> main@drink(5), 
  2982 ;;  valstr         16   20[BANK1 ] unsigned char [16]
  2983 ;; Return value:  Size  Location     Type
  2984 ;;                  1    wreg      void 
  2985 ;; Registers used:
  2986 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  2987 ;; Tracked objects:
  2988 ;;		On entry : 0/0
  2989 ;;		On exit  : 0/0
  2990 ;;		Unchanged: 0/0
  2991 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  2992 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2993 ;;      Locals:         0       0      17       0       0       0       0       0       0       0       0       0       
      +0       0
  2994 ;;      Temps:          0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0
  2995 ;;      Totals:         0       0      18       0       0       0       0       0       0       0       0       0       
      +0       0
  2996 ;;Total ram usage:       18 bytes
  2997 ;; Hardware stack levels used: 1
  2998 ;; Hardware stack levels required when called: 8
  2999 ;; This function calls:
  3000 ;;		_get_scale_val
  3001 ;;		_lcd_backlight
  3002 ;;		_lcd_clear
  3003 ;;		_lcd_init
  3004 ;;		_lcd_print
  3005 ;;		_lcd_print_with
  3006 ;;		_sprintf
  3007 ;; This function is called by:
  3008 ;;		_main
  3009 ;; This function uses a non-reentrant model
  3010 ;;
  3011                           
  3012                           
  3013                           ;psect for function _initialize
  3014  0B4D                     _initialize:
  3015                           
  3016                           ;incstack = 0
  3017                           ; Regs used in _initialize: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  3018                           ;initialize@p stored from wreg
  3019  0B4D  0021               	movlb	1	; select bank1
  3020  0B4E  00C4               	movwf	initialize@p^(0+128)
  3021  0B4F                     l3313:
  3022                           
  3023                           ;drink_meter.c: 6:     lcd_init(p->lcd);
  3024  0B4F  0A44               	incf	initialize@p^(0+128),w
  3025  0B50  0086               	movwf	6
  3026  0B51  0187               	clrf	7
  3027  0B52  0801               	movf	1,w
  3028  0B53  318D  258A  318B   	fcall	_lcd_init
  3029                           
  3030                           ;drink_meter.c: 7:     lcd_backlight(p->lcd);
  3031  0B56  0021               	movlb	1	; select bank1
  3032  0B57  0A44               	incf	initialize@p^(0+128),w
  3033  0B58  0086               	movwf	6
  3034  0B59  0187               	clrf	7
  3035  0B5A  0801               	movf	1,w
  3036  0B5B  3195  2573  318B   	fcall	_lcd_backlight
  3037  0B5E                     l3315:
  3038                           
  3039                           ;drink_meter.c: 9:     lcd_print_with(p->lcd, "Initialize", 0, 0);
  3040  0B5E  300F               	movlw	low (STR_2| (0+32768))
  3041  0B5F  0020               	movlb	0	; select bank0
  3042  0B60  00A6               	movwf	lcd_print_with@str
  3043  0B61  3098               	movlw	high (STR_2| (0+32768))
  3044  0B62  00A7               	movwf	lcd_print_with@str+1
  3045  0B63  01A8               	clrf	lcd_print_with@col
  3046  0B64  01A9               	clrf	lcd_print_with@row
  3047  0B65  0021               	movlb	1	; select bank1
  3048  0B66  0A44               	incf	initialize@p^(0+128),w
  3049  0B67  0086               	movwf	6
  3050  0B68  0187               	clrf	7
  3051  0B69  0801               	movf	1,w
  3052  0B6A  3195  25A0  318B   	fcall	_lcd_print_with
  3053  0B6D                     l3317:
  3054                           
  3055                           ;drink_meter.c: 10:     lcd_print_with(p->lcd, "Load cell Unit", 0, 1);
  3056  0B6D  3000               	movlw	low (STR_3| (0+32768))
  3057  0B6E  0020               	movlb	0	; select bank0
  3058  0B6F  00A6               	movwf	lcd_print_with@str
  3059  0B70  3098               	movlw	high (STR_3| (0+32768))
  3060  0B71  00A7               	movwf	lcd_print_with@str+1
  3061  0B72  01A8               	clrf	lcd_print_with@col
  3062  0B73  01A9               	clrf	lcd_print_with@row
  3063  0B74  0AA9               	incf	lcd_print_with@row,f
  3064  0B75  0021               	movlb	1	; select bank1
  3065  0B76  0A44               	incf	initialize@p^(0+128),w
  3066  0B77  0086               	movwf	6
  3067  0B78  0187               	clrf	7
  3068  0B79  0801               	movf	1,w
  3069  0B7A  3195  25A0  318B   	fcall	_lcd_print_with
  3070                           
  3071                           ;drink_meter.c: 13:     p->loadcell->weight_zero = get_scale_val(p->loadcell, 50);
  3072  0B7D  3032               	movlw	50
  3073  0B7E  0021               	movlb	1	; select bank1
  3074  0B7F  00B3               	movwf	??_initialize^(0+128)
  3075  0B80  0833               	movf	??_initialize^(0+128),w
  3076  0B81  0020               	movlb	0	; select bank0
  3077  0B82  00A0               	movwf	get_scale_val@scale_avg_count
  3078  0B83  0021               	movlb	1	; select bank1
  3079  0B84  0844               	movf	initialize@p^(0+128),w
  3080  0B85  0086               	movwf	6
  3081  0B86  0187               	clrf	7
  3082  0B87  0801               	movf	1,w
  3083  0B88  318E  2633  318B   	fcall	_get_scale_val
  3084  0B8B  0021               	movlb	1	; select bank1
  3085  0B8C  0844               	movf	initialize@p^(0+128),w
  3086  0B8D  0086               	movwf	6
  3087  0B8E  0187               	clrf	7
  3088  0B8F  0801               	movf	1,w
  3089  0B90  3E02               	addlw	2
  3090  0B91  0086               	movwf	6
  3091  0B92  0187               	clrf	7
  3092  0B93  0020               	movlb	0	; select bank0
  3093  0B94  0820               	movf	?_get_scale_val,w
  3094  0B95  3FC0               	movwi [0]fsr1
  3095  0B96  0821               	movf	?_get_scale_val+1,w
  3096  0B97  3FC1               	movwi [1]fsr1
  3097  0B98  0822               	movf	?_get_scale_val+2,w
  3098  0B99  3FC2               	movwi [2]fsr1
  3099  0B9A  0823               	movf	?_get_scale_val+3,w
  3100  0B9B  3FC3               	movwi [3]fsr1
  3101  0B9C                     l3319:
  3102                           
  3103                           ;drink_meter.c: 15:     char valstr[16];;drink_meter.c: 16:     sprintf(valstr, "%lu val
      +                          ", p->loadcell->weight_dat);
  3104  0B9C  3024               	movlw	low (STR_4| (0+32768))
  3105  0B9D  0021               	movlb	1	; select bank1
  3106  0B9E  00A5               	movwf	sprintf@fmt^(0+128)
  3107  0B9F  3098               	movlw	high (STR_4| (0+32768))
  3108  0BA0  00A6               	movwf	(sprintf@fmt^(0+128)+1)
  3109  0BA1  0844               	movf	initialize@p^(0+128),w
  3110  0BA2  0086               	movwf	6
  3111  0BA3  0187               	clrf	7
  3112  0BA4  0801               	movf	1,w
  3113  0BA5  3E06               	addlw	6
  3114  0BA6  0086               	movwf	6
  3115  0BA7  0187               	clrf	7
  3116  0BA8  3F40               	moviw [0]fsr1
  3117  0BA9  00A7               	movwf	(?_sprintf^(0+128)+2)
  3118  0BAA  3F41               	moviw [1]fsr1
  3119  0BAB  00A8               	movwf	((?_sprintf+1)^(0+128)+2)
  3120  0BAC  3F42               	moviw [2]fsr1
  3121  0BAD  00A9               	movwf	((?_sprintf+2)^(0+128)+2)
  3122  0BAE  3F43               	moviw [3]fsr1
  3123  0BAF  00AA               	movwf	((?_sprintf+3)^(0+128)+2)
  3124  0BB0  30B4               	movlw	(low (initialize@valstr| 0))& (0+255)
  3125  0BB1  3196  2646  318B   	fcall	_sprintf
  3126  0BB4                     l3321:
  3127                           
  3128                           ;drink_meter.c: 18:     lcd_clear(p->lcd);
  3129  0BB4  0021               	movlb	1	; select bank1
  3130  0BB5  0A44               	incf	initialize@p^(0+128),w
  3131  0BB6  0086               	movwf	6
  3132  0BB7  0187               	clrf	7
  3133  0BB8  0801               	movf	1,w
  3134  0BB9  3197  271C  318B   	fcall	_lcd_clear
  3135  0BBC                     l3323:
  3136                           
  3137                           ;drink_meter.c: 19:     lcd_print(p->lcd, valstr);
  3138  0BBC  30B4               	movlw	low initialize@valstr
  3139  0BBD  00FA               	movwf	lcd_print@str
  3140  0BBE  3000               	movlw	high initialize@valstr
  3141  0BBF  00FB               	movwf	lcd_print@str+1
  3142  0BC0  0021               	movlb	1	; select bank1
  3143  0BC1  0A44               	incf	initialize@p^(0+128),w
  3144  0BC2  0086               	movwf	6
  3145  0BC3  0187               	clrf	7
  3146  0BC4  0801               	movf	1,w
  3147  0BC5  3196  2622  318B   	fcall	_lcd_print
  3148  0BC8                     l342:
  3149  0BC8  0008               	return
  3150  0BC9                     __end_of_initialize:
  3151                           
  3152                           	psect	text3
  3153  1646                     __ptext3:	
  3154 ;; *************** function _sprintf *****************
  3155 ;; Defined at:
  3156 ;;		line 9 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\nf_sprintf.c"
  3157 ;; Parameters:    Size  Location     Type
  3158 ;;  s               1    wreg     PTR unsigned char 
  3159 ;;		 -> print_gram@row2(16), print_gram@row1(16), initialize@valstr(16), 
  3160 ;;  fmt             2    5[BANK1 ] PTR const unsigned char 
  3161 ;;		 -> STR_6(5), STR_5(10), STR_4(8), 
  3162 ;; Auto vars:     Size  Location     Type
  3163 ;;  s               1   12[BANK1 ] PTR unsigned char 
  3164 ;;		 -> print_gram@row2(16), print_gram@row1(16), initialize@valstr(16), 
  3165 ;;  f               5   14[BANK1 ] struct _IO_FILE
  3166 ;;  ret             2    0        int 
  3167 ;;  ap              1   13[BANK1 ] PTR void [1]
  3168 ;;		 -> ?_sprintf(2), 
  3169 ;; Return value:  Size  Location     Type
  3170 ;;                  2    5[BANK1 ] int 
  3171 ;; Registers used:
  3172 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  3173 ;; Tracked objects:
  3174 ;;		On entry : 0/0
  3175 ;;		On exit  : 0/0
  3176 ;;		Unchanged: 0/0
  3177 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  3178 ;;      Params:         0       0       6       0       0       0       0       0       0       0       0       0       
      +0       0
  3179 ;;      Locals:         0       0       7       0       0       0       0       0       0       0       0       0       
      +0       0
  3180 ;;      Temps:          0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0
  3181 ;;      Totals:         0       0      14       0       0       0       0       0       0       0       0       0       
      +0       0
  3182 ;;Total ram usage:       14 bytes
  3183 ;; Hardware stack levels used: 1
  3184 ;; Hardware stack levels required when called: 7
  3185 ;; This function calls:
  3186 ;;		_vfprintf
  3187 ;; This function is called by:
  3188 ;;		_initialize
  3189 ;;		_print_gram
  3190 ;; This function uses a non-reentrant model
  3191 ;;
  3192                           
  3193                           
  3194                           ;psect for function _sprintf
  3195  1646                     _sprintf:
  3196                           
  3197                           ;incstack = 0
  3198                           ; Regs used in _sprintf: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  3199                           ;sprintf@s stored from wreg
  3200  1646  0021               	movlb	1	; select bank1
  3201  1647  00AC               	movwf	sprintf@s^(0+128)
  3202  1648                     l3259:
  3203  1648  30A7               	movlw	(low ((?_sprintf| 0+2)))& (0+255)
  3204  1649  00AB               	movwf	??_sprintf^(0+128)
  3205  164A  082B               	movf	??_sprintf^(0+128),w
  3206  164B  00AD               	movwf	sprintf@ap^(0+128)
  3207  164C  082C               	movf	sprintf@s^(0+128),w
  3208  164D  00AB               	movwf	??_sprintf^(0+128)
  3209  164E  082B               	movf	??_sprintf^(0+128),w
  3210  164F  00AE               	movwf	sprintf@f^(0+128)
  3211  1650                     l3261:
  3212  1650  01AF               	clrf	(sprintf@f^(0+128)+1)
  3213  1651  01B0               	clrf	((sprintf@f+1)^(0+128)+1)
  3214  1652                     l3263:
  3215  1652  01B1               	clrf	(sprintf@f^(0+128)+3)
  3216  1653  01B2               	clrf	((sprintf@f+1)^(0+128)+3)
  3217  1654                     l3265:
  3218  1654  0826               	movf	(sprintf@fmt+1)^(0+128),w
  3219  1655  0020               	movlb	0	; select bank0
  3220  1656  00EE               	movwf	vfprintf@fmt+1
  3221  1657  0021               	movlb	1	; select bank1
  3222  1658  0825               	movf	sprintf@fmt^(0+128),w
  3223  1659  0020               	movlb	0	; select bank0
  3224  165A  00ED               	movwf	vfprintf@fmt
  3225  165B  30AD               	movlw	(low (sprintf@ap| 0))& (0+255)
  3226  165C  0021               	movlb	1	; select bank1
  3227  165D  00AB               	movwf	??_sprintf^(0+128)
  3228  165E  082B               	movf	??_sprintf^(0+128),w
  3229  165F  0020               	movlb	0	; select bank0
  3230  1660  00EF               	movwf	vfprintf@ap
  3231  1661  30AE               	movlw	(low (sprintf@f| 0))& (0+255)
  3232  1662  3196  26A7  3196   	fcall	_vfprintf
  3233  1665                     l3267:
  3234  1665  0021               	movlb	1	; select bank1
  3235  1666  082F               	movf	(sprintf@f^(0+128)+1),w
  3236  1667  072C               	addwf	sprintf@s^(0+128),w
  3237  1668  00AB               	movwf	??_sprintf^(0+128)
  3238  1669  082B               	movf	??_sprintf^(0+128),w
  3239  166A  0086               	movwf	6
  3240  166B  0187               	clrf	7
  3241  166C  0181               	clrf	1
  3242  166D                     l966:
  3243  166D  0008               	return
  3244  166E                     __end_of_sprintf:
  3245                           
  3246                           	psect	text4
  3247  16A7                     __ptext4:	
  3248 ;; *************** function _vfprintf *****************
  3249 ;; Defined at:
  3250 ;;		line 1390 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c"
  3251 ;; Parameters:    Size  Location     Type
  3252 ;;  fp              1    wreg     PTR struct _IO_FILE
  3253 ;;		 -> sprintf@f(5), 
  3254 ;;  fmt             2   77[BANK0 ] PTR const unsigned char 
  3255 ;;		 -> STR_6(5), STR_5(10), STR_4(8), 
  3256 ;;  ap              1   79[BANK0 ] PTR PTR void 
  3257 ;;		 -> sprintf@ap(1), 
  3258 ;; Auto vars:     Size  Location     Type
  3259 ;;  fp              1    2[BANK1 ] PTR struct _IO_FILE
  3260 ;;		 -> sprintf@f(5), 
  3261 ;;  cfmt            2    3[BANK1 ] PTR unsigned char 
  3262 ;;		 -> STR_6(5), STR_5(10), STR_4(8), 
  3263 ;; Return value:  Size  Location     Type
  3264 ;;                  2   77[BANK0 ] int 
  3265 ;; Registers used:
  3266 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  3267 ;; Tracked objects:
  3268 ;;		On entry : 0/0
  3269 ;;		On exit  : 0/0
  3270 ;;		Unchanged: 0/0
  3271 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  3272 ;;      Params:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3273 ;;      Locals:         0       0       3       0       0       0       0       0       0       0       0       0       
      +0       0
  3274 ;;      Temps:          0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0
  3275 ;;      Totals:         0       3       5       0       0       0       0       0       0       0       0       0       
      +0       0
  3276 ;;Total ram usage:        8 bytes
  3277 ;; Hardware stack levels used: 1
  3278 ;; Hardware stack levels required when called: 6
  3279 ;; This function calls:
  3280 ;;		_vfpfcnvrt
  3281 ;; This function is called by:
  3282 ;;		_sprintf
  3283 ;; This function uses a non-reentrant model
  3284 ;;
  3285                           
  3286                           
  3287                           ;psect for function _vfprintf
  3288  16A7                     _vfprintf:
  3289                           
  3290                           ;incstack = 0
  3291                           ; Regs used in _vfprintf: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  3292                           ;vfprintf@fp stored from wreg
  3293  16A7  0021               	movlb	1	; select bank1
  3294  16A8  00A2               	movwf	vfprintf@fp^(0+128)
  3295  16A9                     l3031:
  3296                           
  3297                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 1390: int vfprint
      +                          f(FILE *fp, const char *fmt, va_list ap);C:\Program Files\Microchip\xc8\v2.32\pic\source
      +                          s\c99\common\doprnt.c: 1391: {;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\comm
      +                          on\doprnt.c: 1393:     char *cfmt;;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\
      +                          common\doprnt.c: 1395:     cfmt = (char *)fmt;
  3298  16A9  0020               	movlb	0	; select bank0
  3299  16AA  086E               	movf	vfprintf@fmt+1,w
  3300  16AB  0021               	movlb	1	; select bank1
  3301  16AC  00A4               	movwf	(vfprintf@cfmt+1)^(0+128)
  3302  16AD  0020               	movlb	0	; select bank0
  3303  16AE  086D               	movf	vfprintf@fmt,w
  3304  16AF  0021               	movlb	1	; select bank1
  3305  16B0  00A3               	movwf	vfprintf@cfmt^(0+128)
  3306  16B1                     l3033:
  3307                           
  3308                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 1396:     nout = 
      +                          0;
  3309  16B1  0022               	movlb	2	; select bank2
  3310  16B2  01A9               	clrf	_nout^(0+256)
  3311  16B3  01AA               	clrf	(_nout+1)^(0+256)
  3312                           
  3313                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 1397:     while (
      +                          *cfmt) {
  3314  16B4  2ECD               	goto	l3037
  3315  16B5                     l3035:
  3316                           
  3317                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 1398:         nou
      +                          t += vfpfcnvrt(fp, &cfmt, ap);
  3318  16B5  30A3               	movlw	(low (vfprintf@cfmt| 0))& (0+255)
  3319  16B6  00A0               	movwf	??_vfprintf^(0+128)
  3320  16B7  0820               	movf	??_vfprintf^(0+128),w
  3321  16B8  0020               	movlb	0	; select bank0
  3322  16B9  00CE               	movwf	vfpfcnvrt@fmt
  3323  16BA  086F               	movf	vfprintf@ap,w
  3324  16BB  0021               	movlb	1	; select bank1
  3325  16BC  00A1               	movwf	(??_vfprintf+1)^(0+128)
  3326  16BD  0821               	movf	(??_vfprintf+1)^(0+128),w
  3327  16BE  0020               	movlb	0	; select bank0
  3328  16BF  00CF               	movwf	vfpfcnvrt@ap
  3329  16C0  0021               	movlb	1	; select bank1
  3330  16C1  0822               	movf	vfprintf@fp^(0+128),w
  3331  16C2  3185  25E7  3196   	fcall	_vfpfcnvrt
  3332  16C5  0020               	movlb	0	; select bank0
  3333  16C6  084E               	movf	?_vfpfcnvrt,w
  3334  16C7  0022               	movlb	2	; select bank2
  3335  16C8  07A9               	addwf	_nout^(0+256),f
  3336  16C9  0020               	movlb	0	; select bank0
  3337  16CA  084F               	movf	?_vfpfcnvrt+1,w
  3338  16CB  0022               	movlb	2	; select bank2
  3339  16CC  3DAA               	addwfc	(_nout+1)^(0+256),f
  3340  16CD                     l3037:
  3341                           
  3342                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 1397:     while (
      +                          *cfmt) {
  3343  16CD  0021               	movlb	1	; select bank1
  3344  16CE  0823               	movf	vfprintf@cfmt^(0+128),w
  3345  16CF  0084               	movwf	4
  3346  16D0  0824               	movf	(vfprintf@cfmt+1)^(0+128),w
  3347  16D1  0085               	movwf	5
  3348  16D2  0012               	moviw fsr0++
  3349  16D3  1D03               	btfss	3,2
  3350  16D4  2ED6               	goto	u3381
  3351  16D5  2ED7               	goto	u3380
  3352  16D6                     u3381:
  3353  16D6  2EB5               	goto	l3035
  3354  16D7                     u3380:
  3355  16D7                     l3039:
  3356                           
  3357                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 1400:     return 
      +                          nout;
  3358  16D7  0022               	movlb	2	; select bank2
  3359  16D8  082A               	movf	(_nout+1)^(0+256),w
  3360  16D9  0020               	movlb	0	; select bank0
  3361  16DA  00EE               	movwf	?_vfprintf+1
  3362  16DB  0022               	movlb	2	; select bank2
  3363  16DC  0829               	movf	_nout^(0+256),w
  3364  16DD  0020               	movlb	0	; select bank0
  3365  16DE  00ED               	movwf	?_vfprintf
  3366  16DF                     l1060:
  3367  16DF  0008               	return
  3368  16E0                     __end_of_vfprintf:
  3369                           
  3370                           	psect	text5
  3371  05E7                     __ptext5:	
  3372 ;; *************** function _vfpfcnvrt *****************
  3373 ;; Defined at:
  3374 ;;		line 692 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c"
  3375 ;; Parameters:    Size  Location     Type
  3376 ;;  fp              1    wreg     PTR struct _IO_FILE
  3377 ;;		 -> sprintf@f(5), 
  3378 ;;  fmt             1   46[BANK0 ] PTR PTR unsigned char 
  3379 ;;		 -> vfprintf@cfmt(2), 
  3380 ;;  ap              1   47[BANK0 ] PTR PTR void 
  3381 ;;		 -> sprintf@ap(1), 
  3382 ;; Auto vars:     Size  Location     Type
  3383 ;;  fp              1   76[BANK0 ] PTR struct _IO_FILE
  3384 ;;		 -> sprintf@f(5), 
  3385 ;;  llu             8   68[BANK0 ] unsigned long long 
  3386 ;;  ll              8   60[BANK0 ] long long 
  3387 ;;  f               4    0        long long 
  3388 ;;  ct              3    0        unsigned char [3]
  3389 ;;  vp              2    0        PTR void 
  3390 ;;  i               2    0        int 
  3391 ;;  done            2    0        int 
  3392 ;;  cp              2    0        PTR unsigned char 
  3393 ;;  c               1    0        unsigned char 
  3394 ;; Return value:  Size  Location     Type
  3395 ;;                  2   46[BANK0 ] int 
  3396 ;; Registers used:
  3397 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  3398 ;; Tracked objects:
  3399 ;;		On entry : 0/0
  3400 ;;		On exit  : 0/0
  3401 ;;		Unchanged: 0/0
  3402 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  3403 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3404 ;;      Locals:         0      17       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3405 ;;      Temps:          0      12       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3406 ;;      Totals:         0      31       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3407 ;;Total ram usage:       31 bytes
  3408 ;; Hardware stack levels used: 1
  3409 ;; Hardware stack levels required when called: 5
  3410 ;; This function calls:
  3411 ;;		_dtoa
  3412 ;;		_fputc
  3413 ;;		_strncmp
  3414 ;;		_utoa
  3415 ;; This function is called by:
  3416 ;;		_vfprintf
  3417 ;; This function uses a non-reentrant model
  3418 ;;
  3419                           
  3420                           
  3421                           ;psect for function _vfpfcnvrt
  3422  05E7                     _vfpfcnvrt:
  3423                           
  3424                           ;incstack = 0
  3425                           ; Regs used in _vfpfcnvrt: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  3426                           ;vfpfcnvrt@fp stored from wreg
  3427  05E7  0020               	movlb	0	; select bank0
  3428  05E8  00EC               	movwf	vfpfcnvrt@fp
  3429  05E9                     l2587:
  3430                           
  3431                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 692: static int v
      +                          fpfcnvrt(FILE *fp, char *fmt[], va_list ap);C:\Program Files\Microchip\xc8\v2.32\pic\sou
      +                          rces\c99\common\doprnt.c: 693: {;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\co
      +                          mmon\doprnt.c: 694:     char c, *cp, ct[3];;C:\Program Files\Microchip\xc8\v2.32\pic\sou
      +                          rces\c99\common\doprnt.c: 695:     int done, i;;C:\Program Files\Microchip\xc8\v2.32\pic
      +                          \sources\c99\common\doprnt.c: 696:     long long ll;;C:\Program Files\Microchip\xc8\v2.3
      +                          2\pic\sources\c99\common\doprnt.c: 697:     unsigned long long llu;
  3432  05E9  084E               	movf	vfpfcnvrt@fmt,w
  3433  05EA  0086               	movwf	6
  3434  05EB  0187               	clrf	7
  3435  05EC  3F40               	moviw [0]fsr1
  3436  05ED  00D0               	movwf	??_vfpfcnvrt
  3437  05EE  3F41               	moviw [1]fsr1
  3438  05EF  00D1               	movwf	??_vfpfcnvrt+1
  3439  05F0  0850               	movf	??_vfpfcnvrt,w
  3440  05F1  0084               	movwf	4
  3441  05F2  0851               	movf	??_vfpfcnvrt+1,w
  3442  05F3  0085               	movwf	5
  3443  05F4  0012               	moviw fsr0++
  3444  05F5  3A25               	xorlw	37
  3445  05F6  1D03               	btfss	3,2
  3446  05F7  2DF9               	goto	u2601
  3447  05F8  2DFA               	goto	u2600
  3448  05F9                     u2601:
  3449  05F9  2FC1               	goto	l2655
  3450  05FA                     u2600:
  3451  05FA                     l2589:
  3452                           
  3453                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 703:         ++*f
      +                          mt;
  3454  05FA  084E               	movf	vfpfcnvrt@fmt,w
  3455  05FB  0086               	movwf	6
  3456  05FC  0187               	clrf	7
  3457  05FD  3001               	movlw	1
  3458  05FE  0781               	addwf	1,f
  3459  05FF  3141               	addfsr 1,1
  3460  0600  1803               	skipnc
  3461  0601  0A81               	incf	1,f
  3462  0602                     l2591:
  3463                           
  3464                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 705:         flag
      +                          s = width = 0;
  3465  0602  0022               	movlb	2	; select bank2
  3466  0603  01AB               	clrf	_width^(0+256)
  3467  0604  01AC               	clrf	(_width+1)^(0+256)
  3468  0605  0021               	movlb	1	; select bank1
  3469  0606  01ED               	clrf	_flags^(0+128)
  3470  0607  01EE               	clrf	(_flags+1)^(0+128)
  3471  0608                     l2593:
  3472                           
  3473                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 706:         prec
      +                           = -1;
  3474  0608  30FF               	movlw	255
  3475  0609  0022               	movlb	2	; select bank2
  3476  060A  00AD               	movwf	_prec^(0+256)
  3477  060B  30FF               	movlw	255
  3478  060C  00AE               	movwf	(_prec^(0+256)+1)
  3479  060D                     l2595:
  3480                           
  3481                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 847:         if (
      +                          (*fmt[0] == 'd') || (*fmt[0] == 'i')) {
  3482  060D  0020               	movlb	0	; select bank0
  3483  060E  084E               	movf	vfpfcnvrt@fmt,w
  3484  060F  0086               	movwf	6
  3485  0610  0187               	clrf	7
  3486  0611  3F40               	moviw [0]fsr1
  3487  0612  00D0               	movwf	??_vfpfcnvrt
  3488  0613  3F41               	moviw [1]fsr1
  3489  0614  00D1               	movwf	??_vfpfcnvrt+1
  3490  0615  0850               	movf	??_vfpfcnvrt,w
  3491  0616  0084               	movwf	4
  3492  0617  0851               	movf	??_vfpfcnvrt+1,w
  3493  0618  0085               	movwf	5
  3494  0619  0012               	moviw fsr0++
  3495  061A  3A64               	xorlw	100
  3496  061B  1903               	btfsc	3,2
  3497  061C  2E1E               	goto	u2611
  3498  061D  2E1F               	goto	u2610
  3499  061E                     u2611:
  3500  061E  2E30               	goto	l2599
  3501  061F                     u2610:
  3502  061F                     l2597:
  3503  061F  084E               	movf	vfpfcnvrt@fmt,w
  3504  0620  0086               	movwf	6
  3505  0621  0187               	clrf	7
  3506  0622  3F40               	moviw [0]fsr1
  3507  0623  00D0               	movwf	??_vfpfcnvrt
  3508  0624  3F41               	moviw [1]fsr1
  3509  0625  00D1               	movwf	??_vfpfcnvrt+1
  3510  0626  0850               	movf	??_vfpfcnvrt,w
  3511  0627  0084               	movwf	4
  3512  0628  0851               	movf	??_vfpfcnvrt+1,w
  3513  0629  0085               	movwf	5
  3514  062A  0012               	moviw fsr0++
  3515  062B  3A69               	xorlw	105
  3516  062C  1D03               	btfss	3,2
  3517  062D  2E2F               	goto	u2621
  3518  062E  2E30               	goto	u2620
  3519  062F                     u2621:
  3520  062F  2E6B               	goto	l2607
  3521  0630                     u2620:
  3522  0630                     l2599:
  3523                           
  3524                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 849:             
      +                          ++*fmt;
  3525  0630  084E               	movf	vfpfcnvrt@fmt,w
  3526  0631  0086               	movwf	6
  3527  0632  0187               	clrf	7
  3528  0633  3001               	movlw	1
  3529  0634  0781               	addwf	1,f
  3530  0635  3141               	addfsr 1,1
  3531  0636  1803               	skipnc
  3532  0637  0A81               	incf	1,f
  3533  0638                     l2601:
  3534                           
  3535                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 850:             
      +                          ll = (long long)(*(int *)__va_arg(*(int **)ap, (int)0));
  3536  0638  084F               	movf	vfpfcnvrt@ap,w
  3537  0639  0086               	movwf	6
  3538  063A  0187               	clrf	7
  3539  063B  0801               	movf	1,w
  3540  063C  0084               	movwf	4
  3541  063D  0185               	clrf	5
  3542  063E  3002               	movlw	2
  3543  063F  0781               	addwf	1,f
  3544  0640  3F00               	moviw [0]fsr0
  3545  0641  00D0               	movwf	??_vfpfcnvrt
  3546  0642  3F01               	moviw [1]fsr0
  3547  0643  00D1               	movwf	??_vfpfcnvrt+1
  3548  0644  0850               	movf	??_vfpfcnvrt,w
  3549  0645  00DC               	movwf	vfpfcnvrt@ll
  3550  0646  0851               	movf	??_vfpfcnvrt+1,w
  3551  0647  00DD               	movwf	vfpfcnvrt@ll+1
  3552  0648  0D89               	rlf	9,f
  3553  0649  3B89               	subwfb	9,f
  3554  064A  0989               	comf	9,f
  3555  064B  00DE               	movwf	vfpfcnvrt@ll+2
  3556  064C  00DF               	movwf	vfpfcnvrt@ll+3
  3557  064D  00E0               	movwf	vfpfcnvrt@ll+4
  3558  064E  00E1               	movwf	vfpfcnvrt@ll+5
  3559  064F  00E2               	movwf	vfpfcnvrt@ll+6
  3560  0650  00E3               	movwf	vfpfcnvrt@ll+7
  3561  0651                     l2603:
  3562                           
  3563                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 852:             
      +                          return dtoa(fp, ll);
  3564  0651  085C               	movf	vfpfcnvrt@ll,w
  3565  0652  00B0               	movwf	dtoa@d
  3566  0653  085D               	movf	vfpfcnvrt@ll+1,w
  3567  0654  00B1               	movwf	dtoa@d+1
  3568  0655  085E               	movf	vfpfcnvrt@ll+2,w
  3569  0656  00B2               	movwf	dtoa@d+2
  3570  0657  085F               	movf	vfpfcnvrt@ll+3,w
  3571  0658  00B3               	movwf	dtoa@d+3
  3572  0659  0860               	movf	vfpfcnvrt@ll+4,w
  3573  065A  00B4               	movwf	dtoa@d+4
  3574  065B  0861               	movf	vfpfcnvrt@ll+5,w
  3575  065C  00B5               	movwf	dtoa@d+5
  3576  065D  0862               	movf	vfpfcnvrt@ll+6,w
  3577  065E  00B6               	movwf	dtoa@d+6
  3578  065F  0863               	movf	vfpfcnvrt@ll+7,w
  3579  0660  00B7               	movwf	dtoa@d+7
  3580  0661  086C               	movf	vfpfcnvrt@fp,w
  3581  0662  3182  22C1  3185   	fcall	_dtoa
  3582  0665  0020               	movlb	0	; select bank0
  3583  0666  0831               	movf	?_dtoa+1,w
  3584  0667  00CF               	movwf	?_vfpfcnvrt+1
  3585  0668  0830               	movf	?_dtoa,w
  3586  0669  00CE               	movwf	?_vfpfcnvrt
  3587  066A  2FE4               	goto	l1048
  3588  066B                     l2607:
  3589                           
  3590                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 857:         if (
      +                          !strncmp(*fmt, "ld", ((sizeof("ld")/sizeof("ld"[0]))-1)) || !strncmp(*fmt, "li", ((sizeo
      +                          f("li")/sizeof("li"[0]))-1))) {
  3591  066B  084E               	movf	vfpfcnvrt@fmt,w
  3592  066C  0086               	movwf	6
  3593  066D  0187               	clrf	7
  3594  066E  3F40               	moviw [0]fsr1
  3595  066F  00F0               	movwf	strncmp@_l
  3596  0670  3F41               	moviw [1]fsr1
  3597  0671  00F1               	movwf	strncmp@_l+1
  3598  0672  3031               	movlw	low (STR_7| (0+32768))
  3599  0673  00F2               	movwf	strncmp@_r
  3600  0674  3098               	movlw	high (STR_7| (0+32768))
  3601  0675  00F3               	movwf	strncmp@_r+1
  3602  0676  3002               	movlw	2
  3603  0677  00F4               	movwf	strncmp@n
  3604  0678  3000               	movlw	0
  3605  0679  00F5               	movwf	strncmp@n+1
  3606  067A  3189  2144  3185   	fcall	_strncmp
  3607  067D  0870               	movf	?_strncmp,w
  3608  067E  0471               	iorwf	?_strncmp+1,w
  3609  067F  1903               	btfsc	3,2
  3610  0680  2E82               	goto	u2631
  3611  0681  2E83               	goto	u2630
  3612  0682                     u2631:
  3613  0682  2E9C               	goto	l2611
  3614  0683                     u2630:
  3615  0683                     l2609:
  3616  0683  0020               	movlb	0	; select bank0
  3617  0684  084E               	movf	vfpfcnvrt@fmt,w
  3618  0685  0086               	movwf	6
  3619  0686  0187               	clrf	7
  3620  0687  3F40               	moviw [0]fsr1
  3621  0688  00F0               	movwf	strncmp@_l
  3622  0689  3F41               	moviw [1]fsr1
  3623  068A  00F1               	movwf	strncmp@_l+1
  3624  068B  3034               	movlw	low (STR_11| (0+32768))
  3625  068C  00F2               	movwf	strncmp@_r
  3626  068D  3098               	movlw	high (STR_11| (0+32768))
  3627  068E  00F3               	movwf	strncmp@_r+1
  3628  068F  3002               	movlw	2
  3629  0690  00F4               	movwf	strncmp@n
  3630  0691  3000               	movlw	0
  3631  0692  00F5               	movwf	strncmp@n+1
  3632  0693  3189  2144  3185   	fcall	_strncmp
  3633  0696  0870               	movf	?_strncmp,w
  3634  0697  0471               	iorwf	?_strncmp+1,w
  3635  0698  1D03               	btfss	3,2
  3636  0699  2E9B               	goto	u2641
  3637  069A  2E9C               	goto	u2640
  3638  069B                     u2641:
  3639  069B  2EDE               	goto	l2619
  3640  069C                     u2640:
  3641  069C                     l2611:
  3642                           
  3643                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 858: ;C:\Program 
      +                          Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 860:             *fmt += ((si
      +                          zeof("ld")/sizeof("ld"[0]))-1);
  3644  069C  0020               	movlb	0	; select bank0
  3645  069D  084E               	movf	vfpfcnvrt@fmt,w
  3646  069E  0086               	movwf	6
  3647  069F  0187               	clrf	7
  3648  06A0  3002               	movlw	2
  3649  06A1  0781               	addwf	1,f
  3650  06A2  3141               	addfsr 1,1
  3651  06A3  1803               	skipnc
  3652  06A4  0A81               	incf	1,f
  3653  06A5                     l2613:
  3654                           
  3655                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 861:             
      +                          ll = (long long)(*(long *)__va_arg(*(long **)ap, (long)0));
  3656  06A5  084F               	movf	vfpfcnvrt@ap,w
  3657  06A6  0086               	movwf	6
  3658  06A7  0187               	clrf	7
  3659  06A8  0801               	movf	1,w
  3660  06A9  0084               	movwf	4
  3661  06AA  0185               	clrf	5
  3662  06AB  3004               	movlw	4
  3663  06AC  0781               	addwf	1,f
  3664  06AD  3F00               	moviw [0]fsr0
  3665  06AE  00D0               	movwf	??_vfpfcnvrt
  3666  06AF  3F01               	moviw [1]fsr0
  3667  06B0  00D1               	movwf	??_vfpfcnvrt+1
  3668  06B1  3F02               	moviw [2]fsr0
  3669  06B2  00D2               	movwf	??_vfpfcnvrt+2
  3670  06B3  3F03               	moviw [3]fsr0
  3671  06B4  00D3               	movwf	??_vfpfcnvrt+3
  3672  06B5  0850               	movf	??_vfpfcnvrt,w
  3673  06B6  00DC               	movwf	vfpfcnvrt@ll
  3674  06B7  0851               	movf	??_vfpfcnvrt+1,w
  3675  06B8  00DD               	movwf	vfpfcnvrt@ll+1
  3676  06B9  0852               	movf	??_vfpfcnvrt+2,w
  3677  06BA  00DE               	movwf	vfpfcnvrt@ll+2
  3678  06BB  0853               	movf	??_vfpfcnvrt+3,w
  3679  06BC  00DF               	movwf	vfpfcnvrt@ll+3
  3680  06BD  3000               	movlw	0
  3681  06BE  1BDF               	btfsc	vfpfcnvrt@ll+3,7
  3682  06BF  30FF               	movlw	255
  3683  06C0  00E0               	movwf	vfpfcnvrt@ll+4
  3684  06C1  00E1               	movwf	vfpfcnvrt@ll+5
  3685  06C2  00E2               	movwf	vfpfcnvrt@ll+6
  3686  06C3  00E3               	movwf	vfpfcnvrt@ll+7
  3687  06C4                     l2615:
  3688                           
  3689                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 863:             
      +                          return dtoa(fp, ll);
  3690  06C4  085C               	movf	vfpfcnvrt@ll,w
  3691  06C5  00B0               	movwf	dtoa@d
  3692  06C6  085D               	movf	vfpfcnvrt@ll+1,w
  3693  06C7  00B1               	movwf	dtoa@d+1
  3694  06C8  085E               	movf	vfpfcnvrt@ll+2,w
  3695  06C9  00B2               	movwf	dtoa@d+2
  3696  06CA  085F               	movf	vfpfcnvrt@ll+3,w
  3697  06CB  00B3               	movwf	dtoa@d+3
  3698  06CC  0860               	movf	vfpfcnvrt@ll+4,w
  3699  06CD  00B4               	movwf	dtoa@d+4
  3700  06CE  0861               	movf	vfpfcnvrt@ll+5,w
  3701  06CF  00B5               	movwf	dtoa@d+5
  3702  06D0  0862               	movf	vfpfcnvrt@ll+6,w
  3703  06D1  00B6               	movwf	dtoa@d+6
  3704  06D2  0863               	movf	vfpfcnvrt@ll+7,w
  3705  06D3  00B7               	movwf	dtoa@d+7
  3706  06D4  086C               	movf	vfpfcnvrt@fp,w
  3707  06D5  3182  22C1  3185   	fcall	_dtoa
  3708  06D8  0020               	movlb	0	; select bank0
  3709  06D9  0831               	movf	?_dtoa+1,w
  3710  06DA  00CF               	movwf	?_vfpfcnvrt+1
  3711  06DB  0830               	movf	?_dtoa,w
  3712  06DC  00CE               	movwf	?_vfpfcnvrt
  3713  06DD  2FE4               	goto	l1048
  3714  06DE                     l2619:
  3715                           
  3716                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 1204:         if 
      +                          (*fmt[0] == 'u') {
  3717  06DE  0020               	movlb	0	; select bank0
  3718  06DF  084E               	movf	vfpfcnvrt@fmt,w
  3719  06E0  0086               	movwf	6
  3720  06E1  0187               	clrf	7
  3721  06E2  3F40               	moviw [0]fsr1
  3722  06E3  00D0               	movwf	??_vfpfcnvrt
  3723  06E4  3F41               	moviw [1]fsr1
  3724  06E5  00D1               	movwf	??_vfpfcnvrt+1
  3725  06E6  0850               	movf	??_vfpfcnvrt,w
  3726  06E7  0084               	movwf	4
  3727  06E8  0851               	movf	??_vfpfcnvrt+1,w
  3728  06E9  0085               	movwf	5
  3729  06EA  0012               	moviw fsr0++
  3730  06EB  3A75               	xorlw	117
  3731  06EC  1D03               	btfss	3,2
  3732  06ED  2EEF               	goto	u2651
  3733  06EE  2EF0               	goto	u2650
  3734  06EF                     u2651:
  3735  06EF  2F24               	goto	l2629
  3736  06F0                     u2650:
  3737  06F0                     l2621:
  3738                           
  3739                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 1206:            
      +                           ++*fmt;
  3740  06F0  084E               	movf	vfpfcnvrt@fmt,w
  3741  06F1  0086               	movwf	6
  3742  06F2  0187               	clrf	7
  3743  06F3  3001               	movlw	1
  3744  06F4  0781               	addwf	1,f
  3745  06F5  3141               	addfsr 1,1
  3746  06F6  1803               	skipnc
  3747  06F7  0A81               	incf	1,f
  3748  06F8                     l2623:
  3749                           
  3750                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 1207:            
      +                           llu = (unsigned long long)(*(unsigned int *)__va_arg(*(unsigned int **)ap, (unsigned in
      +                          t)0));
  3751  06F8  084F               	movf	vfpfcnvrt@ap,w
  3752  06F9  0086               	movwf	6
  3753  06FA  0187               	clrf	7
  3754  06FB  0801               	movf	1,w
  3755  06FC  0084               	movwf	4
  3756  06FD  0185               	clrf	5
  3757  06FE  3002               	movlw	2
  3758  06FF  0781               	addwf	1,f
  3759  0700  3F00               	moviw [0]fsr0
  3760  0701  00E4               	movwf	vfpfcnvrt@llu
  3761  0702  3F01               	moviw [1]fsr0
  3762  0703  00E5               	movwf	vfpfcnvrt@llu+1
  3763  0704  01E6               	clrf	vfpfcnvrt@llu+2
  3764  0705  01E7               	clrf	vfpfcnvrt@llu+3
  3765  0706  01E8               	clrf	vfpfcnvrt@llu+4
  3766  0707  01E9               	clrf	vfpfcnvrt@llu+5
  3767  0708  01EA               	clrf	vfpfcnvrt@llu+6
  3768  0709  01EB               	clrf	vfpfcnvrt@llu+7
  3769  070A                     l2625:
  3770                           
  3771                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 1209:            
      +                           return utoa(fp, llu);
  3772  070A  0864               	movf	vfpfcnvrt@llu,w
  3773  070B  00B0               	movwf	utoa@d
  3774  070C  0865               	movf	vfpfcnvrt@llu+1,w
  3775  070D  00B1               	movwf	utoa@d+1
  3776  070E  0866               	movf	vfpfcnvrt@llu+2,w
  3777  070F  00B2               	movwf	utoa@d+2
  3778  0710  0867               	movf	vfpfcnvrt@llu+3,w
  3779  0711  00B3               	movwf	utoa@d+3
  3780  0712  0868               	movf	vfpfcnvrt@llu+4,w
  3781  0713  00B4               	movwf	utoa@d+4
  3782  0714  0869               	movf	vfpfcnvrt@llu+5,w
  3783  0715  00B5               	movwf	utoa@d+5
  3784  0716  086A               	movf	vfpfcnvrt@llu+6,w
  3785  0717  00B6               	movwf	utoa@d+6
  3786  0718  086B               	movf	vfpfcnvrt@llu+7,w
  3787  0719  00B7               	movwf	utoa@d+7
  3788  071A  086C               	movf	vfpfcnvrt@fp,w
  3789  071B  3180  20D1  3185   	fcall	_utoa
  3790  071E  0020               	movlb	0	; select bank0
  3791  071F  0831               	movf	?_utoa+1,w
  3792  0720  00CF               	movwf	?_vfpfcnvrt+1
  3793  0721  0830               	movf	?_utoa,w
  3794  0722  00CE               	movwf	?_vfpfcnvrt
  3795  0723  2FE4               	goto	l1048
  3796  0724                     l2629:
  3797                           
  3798                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 1214:         if 
      +                          (!strncmp(*fmt, "lu", ((sizeof("lu")/sizeof("lu"[0]))-1))) {
  3799  0724  084E               	movf	vfpfcnvrt@fmt,w
  3800  0725  0086               	movwf	6
  3801  0726  0187               	clrf	7
  3802  0727  3F40               	moviw [0]fsr1
  3803  0728  00F0               	movwf	strncmp@_l
  3804  0729  3F41               	moviw [1]fsr1
  3805  072A  00F1               	movwf	strncmp@_l+1
  3806  072B  3037               	movlw	low (STR_16| (0+32768))
  3807  072C  00F2               	movwf	strncmp@_r
  3808  072D  3098               	movlw	high (STR_16| (0+32768))
  3809  072E  00F3               	movwf	strncmp@_r+1
  3810  072F  3002               	movlw	2
  3811  0730  00F4               	movwf	strncmp@n
  3812  0731  3000               	movlw	0
  3813  0732  00F5               	movwf	strncmp@n+1
  3814  0733  3189  2144  3185   	fcall	_strncmp
  3815  0736  0870               	movf	?_strncmp,w
  3816  0737  0471               	iorwf	?_strncmp+1,w
  3817  0738  1D03               	btfss	3,2
  3818  0739  2F3B               	goto	u2661
  3819  073A  2F3C               	goto	u2660
  3820  073B                     u2661:
  3821  073B  2F8B               	goto	l2639
  3822  073C                     u2660:
  3823  073C                     l2631:
  3824                           
  3825                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 1216:            
      +                           *fmt += ((sizeof("lu")/sizeof("lu"[0]))-1);
  3826  073C  0020               	movlb	0	; select bank0
  3827  073D  084E               	movf	vfpfcnvrt@fmt,w
  3828  073E  0086               	movwf	6
  3829  073F  0187               	clrf	7
  3830  0740  3002               	movlw	2
  3831  0741  0781               	addwf	1,f
  3832  0742  3141               	addfsr 1,1
  3833  0743  1803               	skipnc
  3834  0744  0A81               	incf	1,f
  3835  0745                     l2633:
  3836                           
  3837                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 1217:            
      +                           llu = (unsigned long long)(*(unsigned long *)__va_arg(*(unsigned long **)ap, (unsigned 
      +                          long)0));
  3838  0745  084F               	movf	vfpfcnvrt@ap,w
  3839  0746  0086               	movwf	6
  3840  0747  0187               	clrf	7
  3841  0748  0801               	movf	1,w
  3842  0749  0084               	movwf	4
  3843  074A  0185               	clrf	5
  3844  074B  3004               	movlw	4
  3845  074C  0781               	addwf	1,f
  3846  074D  3F00               	moviw [0]fsr0
  3847  074E  00D0               	movwf	??_vfpfcnvrt
  3848  074F  3F01               	moviw [1]fsr0
  3849  0750  00D1               	movwf	??_vfpfcnvrt+1
  3850  0751  3F02               	moviw [2]fsr0
  3851  0752  00D2               	movwf	??_vfpfcnvrt+2
  3852  0753  3F03               	moviw [3]fsr0
  3853  0754  00D3               	movwf	??_vfpfcnvrt+3
  3854  0755  0850               	movf	??_vfpfcnvrt,w
  3855  0756  00D4               	movwf	??_vfpfcnvrt+4
  3856  0757  0851               	movf	??_vfpfcnvrt+1,w
  3857  0758  00D5               	movwf	??_vfpfcnvrt+5
  3858  0759  0852               	movf	??_vfpfcnvrt+2,w
  3859  075A  00D6               	movwf	??_vfpfcnvrt+6
  3860  075B  0853               	movf	??_vfpfcnvrt+3,w
  3861  075C  00D7               	movwf	??_vfpfcnvrt+7
  3862  075D  01D8               	clrf	??_vfpfcnvrt+8
  3863  075E  01D9               	clrf	??_vfpfcnvrt+9
  3864  075F  01DA               	clrf	??_vfpfcnvrt+10
  3865  0760  01DB               	clrf	??_vfpfcnvrt+11
  3866  0761  085B               	movf	??_vfpfcnvrt+11,w
  3867  0762  00EB               	movwf	vfpfcnvrt@llu+7
  3868  0763  085A               	movf	??_vfpfcnvrt+10,w
  3869  0764  00EA               	movwf	vfpfcnvrt@llu+6
  3870  0765  0859               	movf	??_vfpfcnvrt+9,w
  3871  0766  00E9               	movwf	vfpfcnvrt@llu+5
  3872  0767  0858               	movf	??_vfpfcnvrt+8,w
  3873  0768  00E8               	movwf	vfpfcnvrt@llu+4
  3874  0769  0857               	movf	??_vfpfcnvrt+7,w
  3875  076A  00E7               	movwf	vfpfcnvrt@llu+3
  3876  076B  0856               	movf	??_vfpfcnvrt+6,w
  3877  076C  00E6               	movwf	vfpfcnvrt@llu+2
  3878  076D  0855               	movf	??_vfpfcnvrt+5,w
  3879  076E  00E5               	movwf	vfpfcnvrt@llu+1
  3880  076F  0854               	movf	??_vfpfcnvrt+4,w
  3881  0770  00E4               	movwf	vfpfcnvrt@llu
  3882  0771                     l2635:
  3883                           
  3884                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 1219:            
      +                           return utoa(fp, llu);
  3885  0771  0864               	movf	vfpfcnvrt@llu,w
  3886  0772  00B0               	movwf	utoa@d
  3887  0773  0865               	movf	vfpfcnvrt@llu+1,w
  3888  0774  00B1               	movwf	utoa@d+1
  3889  0775  0866               	movf	vfpfcnvrt@llu+2,w
  3890  0776  00B2               	movwf	utoa@d+2
  3891  0777  0867               	movf	vfpfcnvrt@llu+3,w
  3892  0778  00B3               	movwf	utoa@d+3
  3893  0779  0868               	movf	vfpfcnvrt@llu+4,w
  3894  077A  00B4               	movwf	utoa@d+4
  3895  077B  0869               	movf	vfpfcnvrt@llu+5,w
  3896  077C  00B5               	movwf	utoa@d+5
  3897  077D  086A               	movf	vfpfcnvrt@llu+6,w
  3898  077E  00B6               	movwf	utoa@d+6
  3899  077F  086B               	movf	vfpfcnvrt@llu+7,w
  3900  0780  00B7               	movwf	utoa@d+7
  3901  0781  086C               	movf	vfpfcnvrt@fp,w
  3902  0782  3180  20D1  3185   	fcall	_utoa
  3903  0785  0020               	movlb	0	; select bank0
  3904  0786  0831               	movf	?_utoa+1,w
  3905  0787  00CF               	movwf	?_vfpfcnvrt+1
  3906  0788  0830               	movf	?_utoa,w
  3907  0789  00CE               	movwf	?_vfpfcnvrt
  3908  078A  2FE4               	goto	l1048
  3909  078B                     l2639:
  3910                           
  3911                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 1372:         if 
      +                          ((*fmt)[0] == '%') {
  3912  078B  0020               	movlb	0	; select bank0
  3913  078C  084E               	movf	vfpfcnvrt@fmt,w
  3914  078D  0086               	movwf	6
  3915  078E  0187               	clrf	7
  3916  078F  3F40               	moviw [0]fsr1
  3917  0790  00D0               	movwf	??_vfpfcnvrt
  3918  0791  3F41               	moviw [1]fsr1
  3919  0792  00D1               	movwf	??_vfpfcnvrt+1
  3920  0793  0850               	movf	??_vfpfcnvrt,w
  3921  0794  0084               	movwf	4
  3922  0795  0851               	movf	??_vfpfcnvrt+1,w
  3923  0796  0085               	movwf	5
  3924  0797  0012               	moviw fsr0++
  3925  0798  3A25               	xorlw	37
  3926  0799  1D03               	btfss	3,2
  3927  079A  2F9C               	goto	u2671
  3928  079B  2F9D               	goto	u2670
  3929  079C                     u2671:
  3930  079C  2FB6               	goto	l2649
  3931  079D                     u2670:
  3932  079D                     l2641:
  3933                           
  3934                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 1373:            
      +                           ++*fmt;
  3935  079D  084E               	movf	vfpfcnvrt@fmt,w
  3936  079E  0086               	movwf	6
  3937  079F  0187               	clrf	7
  3938  07A0  3001               	movlw	1
  3939  07A1  0781               	addwf	1,f
  3940  07A2  3141               	addfsr 1,1
  3941  07A3  1803               	skipnc
  3942  07A4  0A81               	incf	1,f
  3943  07A5                     l2643:
  3944                           
  3945                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 1374:            
      +                           fputc((int)'%', fp);
  3946  07A5  3025               	movlw	37
  3947  07A6  00F0               	movwf	fputc@c
  3948  07A7  3000               	movlw	0
  3949  07A8  00F1               	movwf	fputc@c+1
  3950  07A9  086C               	movf	vfpfcnvrt@fp,w
  3951  07AA  00D0               	movwf	??_vfpfcnvrt
  3952  07AB  0850               	movf	??_vfpfcnvrt,w
  3953  07AC  00F2               	movwf	fputc@fp
  3954  07AD  3197  275A  3185   	fcall	_fputc
  3955  07B0                     l2645:
  3956                           
  3957                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 1375:            
      +                           return 1;
  3958  07B0  3001               	movlw	1
  3959  07B1  0020               	movlb	0	; select bank0
  3960  07B2  00CE               	movwf	?_vfpfcnvrt
  3961  07B3  3000               	movlw	0
  3962  07B4  00CF               	movwf	?_vfpfcnvrt+1
  3963  07B5  2FE4               	goto	l1048
  3964  07B6                     l2649:
  3965                           
  3966                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 1379:         ++*
      +                          fmt;
  3967  07B6  084E               	movf	vfpfcnvrt@fmt,w
  3968  07B7  0086               	movwf	6
  3969  07B8  0187               	clrf	7
  3970  07B9  3001               	movlw	1
  3971  07BA  0781               	addwf	1,f
  3972  07BB  3141               	addfsr 1,1
  3973  07BC  1803               	skipnc
  3974  07BD  0A81               	incf	1,f
  3975  07BE                     l2651:
  3976                           
  3977                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 1380:         ret
      +                          urn 0;
  3978  07BE  01CE               	clrf	?_vfpfcnvrt
  3979  07BF  01CF               	clrf	?_vfpfcnvrt+1
  3980  07C0  2FE4               	goto	l1048
  3981  07C1                     l2655:
  3982                           
  3983                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 1384:     fputc((
      +                          int)(*fmt)[0], fp);
  3984  07C1  084E               	movf	vfpfcnvrt@fmt,w
  3985  07C2  0086               	movwf	6
  3986  07C3  0187               	clrf	7
  3987  07C4  3F40               	moviw [0]fsr1
  3988  07C5  00D0               	movwf	??_vfpfcnvrt
  3989  07C6  3F41               	moviw [1]fsr1
  3990  07C7  00D1               	movwf	??_vfpfcnvrt+1
  3991  07C8  0850               	movf	??_vfpfcnvrt,w
  3992  07C9  0084               	movwf	4
  3993  07CA  0851               	movf	??_vfpfcnvrt+1,w
  3994  07CB  0085               	movwf	5
  3995  07CC  0800               	movf	0,w	;code access
  3996  07CD  00D2               	movwf	??_vfpfcnvrt+2
  3997  07CE  01D3               	clrf	??_vfpfcnvrt+3
  3998  07CF  0852               	movf	??_vfpfcnvrt+2,w
  3999  07D0  00F0               	movwf	fputc@c
  4000  07D1  0853               	movf	??_vfpfcnvrt+3,w
  4001  07D2  00F1               	movwf	fputc@c+1
  4002  07D3  086C               	movf	vfpfcnvrt@fp,w
  4003  07D4  00D4               	movwf	??_vfpfcnvrt+4
  4004  07D5  0854               	movf	??_vfpfcnvrt+4,w
  4005  07D6  00F2               	movwf	fputc@fp
  4006  07D7  3197  275A  3185   	fcall	_fputc
  4007  07DA                     l2657:
  4008                           
  4009                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 1385:     ++*fmt;
  4010  07DA  0020               	movlb	0	; select bank0
  4011  07DB  084E               	movf	vfpfcnvrt@fmt,w
  4012  07DC  0086               	movwf	6
  4013  07DD  0187               	clrf	7
  4014  07DE  3001               	movlw	1
  4015  07DF  0781               	addwf	1,f
  4016  07E0  3141               	addfsr 1,1
  4017  07E1  1803               	skipnc
  4018  07E2  0A81               	incf	1,f
  4019  07E3  2FB0               	goto	l2645
  4020  07E4                     l1048:
  4021  07E4  0008               	return
  4022  07E5                     __end_of_vfpfcnvrt:
  4023                           
  4024                           	psect	text6
  4025  00D1                     __ptext6:	
  4026 ;; *************** function _utoa *****************
  4027 ;; Defined at:
  4028 ;;		line 615 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c"
  4029 ;; Parameters:    Size  Location     Type
  4030 ;;  fp              1    wreg     PTR struct _IO_FILE
  4031 ;;		 -> sprintf@f(5), 
  4032 ;;  d               8   16[BANK0 ] unsigned long long 
  4033 ;; Auto vars:     Size  Location     Type
  4034 ;;  fp              1   26[BANK0 ] PTR struct _IO_FILE
  4035 ;;		 -> sprintf@f(5), 
  4036 ;;  n               8   29[BANK0 ] unsigned long long 
  4037 ;;  i               2   37[BANK0 ] int 
  4038 ;;  w               2   27[BANK0 ] int 
  4039 ;;  p               2   24[BANK0 ] int 
  4040 ;; Return value:  Size  Location     Type
  4041 ;;                  2   16[BANK0 ] int 
  4042 ;; Registers used:
  4043 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  4044 ;; Tracked objects:
  4045 ;;		On entry : 0/0
  4046 ;;		On exit  : 0/0
  4047 ;;		Unchanged: 0/0
  4048 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  4049 ;;      Params:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4050 ;;      Locals:         0      15       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4051 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4052 ;;      Totals:         1      23       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4053 ;;Total ram usage:       24 bytes
  4054 ;; Hardware stack levels used: 1
  4055 ;; Hardware stack levels required when called: 4
  4056 ;; This function calls:
  4057 ;;		___lodiv
  4058 ;;		___lomod
  4059 ;;		_pad
  4060 ;; This function is called by:
  4061 ;;		_vfpfcnvrt
  4062 ;; This function uses a non-reentrant model
  4063 ;;
  4064                           
  4065                           
  4066                           ;psect for function _utoa
  4067  00D1                     _utoa:
  4068                           
  4069                           ;incstack = 0
  4070                           ; Regs used in _utoa: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  4071                           ;utoa@fp stored from wreg
  4072  00D1  0020               	movlb	0	; select bank0
  4073  00D2  00BA               	movwf	utoa@fp
  4074  00D3                     l2513:
  4075                           
  4076                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 615: static int u
      +                          toa(FILE *fp, unsigned long long d);C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99
      +                          \common\doprnt.c: 616: {;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\dop
      +                          rnt.c: 617:     int i, p, w;;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common
      +                          \doprnt.c: 618:     unsigned long long n;;C:\Program Files\Microchip\xc8\v2.32\pic\sourc
      +                          es\c99\common\doprnt.c: 621:     if (!(prec < 0)) {
  4077  00D3  0022               	movlb	2	; select bank2
  4078  00D4  1BAE               	btfsc	(_prec+1)^(0+256),7
  4079  00D5  28D7               	goto	u2471
  4080  00D6  28D8               	goto	u2470
  4081  00D7                     u2471:
  4082  00D7  28DD               	goto	l1029
  4083  00D8                     u2470:
  4084  00D8                     l2515:
  4085                           
  4086                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 622:         flag
      +                          s &= ~(1 << 1);
  4087  00D8  30FD               	movlw	253
  4088  00D9  0021               	movlb	1	; select bank1
  4089  00DA  05ED               	andwf	_flags^(0+128),f
  4090  00DB  30FF               	movlw	255
  4091  00DC  05EE               	andwf	(_flags+1)^(0+128),f
  4092  00DD                     l1029:	
  4093                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 623:     }
  4094                           
  4095                           
  4096                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 624:     p = (0 <
      +                           prec) ? prec : 1;
  4097  00DD  0022               	movlb	2	; select bank2
  4098  00DE  082E               	movf	(_prec+1)^(0+256),w
  4099  00DF  3A80               	xorlw	128
  4100  00E0  00FD               	movwf	??_utoa
  4101  00E1  3080               	movlw	128
  4102  00E2  027D               	subwf	??_utoa,w
  4103  00E3  1D03               	skipz
  4104  00E4  28E7               	goto	u2485
  4105  00E5  3001               	movlw	1
  4106  00E6  022D               	subwf	_prec^(0+256),w
  4107  00E7                     u2485:
  4108  00E7  1803               	skipnc
  4109  00E8  28EA               	goto	u2481
  4110  00E9  28EB               	goto	u2480
  4111  00EA                     u2481:
  4112  00EA  28F1               	goto	l2519
  4113  00EB                     u2480:
  4114  00EB                     l2517:
  4115  00EB  3001               	movlw	1
  4116  00EC  0020               	movlb	0	; select bank0
  4117  00ED  00B8               	movwf	utoa@p
  4118  00EE  3000               	movlw	0
  4119  00EF  00B9               	movwf	utoa@p+1
  4120  00F0  28F9               	goto	l1033
  4121  00F1                     l2519:
  4122  00F1  0022               	movlb	2	; select bank2
  4123  00F2  082E               	movf	(_prec+1)^(0+256),w
  4124  00F3  0020               	movlb	0	; select bank0
  4125  00F4  00B9               	movwf	utoa@p+1
  4126  00F5  0022               	movlb	2	; select bank2
  4127  00F6  082D               	movf	_prec^(0+256),w
  4128  00F7  0020               	movlb	0	; select bank0
  4129  00F8  00B8               	movwf	utoa@p
  4130  00F9                     l1033:
  4131                           
  4132                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 625:     w = widt
      +                          h;
  4133  00F9  0022               	movlb	2	; select bank2
  4134  00FA  082C               	movf	(_width+1)^(0+256),w
  4135  00FB  0020               	movlb	0	; select bank0
  4136  00FC  00BC               	movwf	utoa@w+1
  4137  00FD  0022               	movlb	2	; select bank2
  4138  00FE  082B               	movf	_width^(0+256),w
  4139  00FF  0020               	movlb	0	; select bank0
  4140  0100  00BB               	movwf	utoa@w
  4141  0101                     l2521:
  4142                           
  4143                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 628:     n = d;
  4144  0101  0830               	movf	utoa@d,w
  4145  0102  00BD               	movwf	utoa@n
  4146  0103  0831               	movf	utoa@d+1,w
  4147  0104  00BE               	movwf	utoa@n+1
  4148  0105  0832               	movf	utoa@d+2,w
  4149  0106  00BF               	movwf	utoa@n+2
  4150  0107  0833               	movf	utoa@d+3,w
  4151  0108  00C0               	movwf	utoa@n+3
  4152  0109  0834               	movf	utoa@d+4,w
  4153  010A  00C1               	movwf	utoa@n+4
  4154  010B  0835               	movf	utoa@d+5,w
  4155  010C  00C2               	movwf	utoa@n+5
  4156  010D  0836               	movf	utoa@d+6,w
  4157  010E  00C3               	movwf	utoa@n+6
  4158  010F  0837               	movf	utoa@d+7,w
  4159  0110  00C4               	movwf	utoa@n+7
  4160                           
  4161                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 629:     i = size
      +                          of(dbuf) - 1;
  4162  0111  301F               	movlw	31
  4163  0112  00C5               	movwf	utoa@i
  4164  0113  3000               	movlw	0
  4165  0114  00C6               	movwf	utoa@i+1
  4166  0115                     l2523:
  4167                           
  4168                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 630:     dbuf[i] 
      +                          = '\0';
  4169  0115  0022               	movlb	2	; select bank2
  4170  0116  01CE               	clrf	(_dbuf^(0+256)+31)
  4171                           
  4172                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 631:     while (i
      +                           && (n || (0 < p) || ((0 < w) && (flags & (1 << 1))))) {
  4173  0117  2979               	goto	l2535
  4174  0118                     l2525:
  4175                           
  4176                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 632:         --i;
  4177  0118  30FF               	movlw	255
  4178  0119  0020               	movlb	0	; select bank0
  4179  011A  07C5               	addwf	utoa@i,f
  4180  011B  30FF               	movlw	255
  4181  011C  3DC6               	addwfc	utoa@i+1,f
  4182  011D                     l2527:
  4183                           
  4184                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 633:         dbuf
      +                          [i] = '0' + (n % 10);
  4185  011D  300A               	movlw	10
  4186  011E  00A0               	movwf	___lomod@divisor
  4187  011F  01A1               	clrf	___lomod@divisor+1
  4188  0120  01A2               	clrf	___lomod@divisor+2
  4189  0121  01A3               	clrf	___lomod@divisor+3
  4190  0122  01A4               	clrf	___lomod@divisor+4
  4191  0123  01A5               	clrf	___lomod@divisor+5
  4192  0124  01A6               	clrf	___lomod@divisor+6
  4193  0125  01A7               	clrf	___lomod@divisor+7
  4194  0126  083D               	movf	utoa@n,w
  4195  0127  00A8               	movwf	___lomod@dividend
  4196  0128  083E               	movf	utoa@n+1,w
  4197  0129  00A9               	movwf	___lomod@dividend+1
  4198  012A  083F               	movf	utoa@n+2,w
  4199  012B  00AA               	movwf	___lomod@dividend+2
  4200  012C  0840               	movf	utoa@n+3,w
  4201  012D  00AB               	movwf	___lomod@dividend+3
  4202  012E  0841               	movf	utoa@n+4,w
  4203  012F  00AC               	movwf	___lomod@dividend+4
  4204  0130  0842               	movf	utoa@n+5,w
  4205  0131  00AD               	movwf	___lomod@dividend+5
  4206  0132  0843               	movf	utoa@n+6,w
  4207  0133  00AE               	movwf	___lomod@dividend+6
  4208  0134  0844               	movf	utoa@n+7,w
  4209  0135  00AF               	movwf	___lomod@dividend+7
  4210  0136  318A  2268  3180   	fcall	___lomod
  4211  0139  0020               	movlb	0	; select bank0
  4212  013A  0820               	movf	?___lomod,w
  4213  013B  3E30               	addlw	48
  4214  013C  00FD               	movwf	??_utoa
  4215  013D  0845               	movf	utoa@i,w
  4216  013E  3E2F               	addlw	(low (_dbuf| (0+256)))& (0+255)
  4217  013F  0086               	movwf	6
  4218  0140  3001               	movlw	1	; select bank2/3
  4219  0141  0087               	movwf	7
  4220  0142  087D               	movf	??_utoa,w
  4221  0143  0081               	movwf	1
  4222  0144                     l2529:
  4223                           
  4224                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 634:         --p;
  4225  0144  30FF               	movlw	255
  4226  0145  07B8               	addwf	utoa@p,f
  4227  0146  30FF               	movlw	255
  4228  0147  3DB9               	addwfc	utoa@p+1,f
  4229  0148                     l2531:
  4230                           
  4231                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 635:         --w;
  4232  0148  30FF               	movlw	255
  4233  0149  07BB               	addwf	utoa@w,f
  4234  014A  30FF               	movlw	255
  4235  014B  3DBC               	addwfc	utoa@w+1,f
  4236  014C                     l2533:
  4237                           
  4238                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 636:         n = 
      +                          n / 10;
  4239  014C  300A               	movlw	10
  4240  014D  00A0               	movwf	___lodiv@divisor
  4241  014E  01A1               	clrf	___lodiv@divisor+1
  4242  014F  01A2               	clrf	___lodiv@divisor+2
  4243  0150  01A3               	clrf	___lodiv@divisor+3
  4244  0151  01A4               	clrf	___lodiv@divisor+4
  4245  0152  01A5               	clrf	___lodiv@divisor+5
  4246  0153  01A6               	clrf	___lodiv@divisor+6
  4247  0154  01A7               	clrf	___lodiv@divisor+7
  4248  0155  083D               	movf	utoa@n,w
  4249  0156  00A8               	movwf	___lodiv@dividend
  4250  0157  083E               	movf	utoa@n+1,w
  4251  0158  00A9               	movwf	___lodiv@dividend+1
  4252  0159  083F               	movf	utoa@n+2,w
  4253  015A  00AA               	movwf	___lodiv@dividend+2
  4254  015B  0840               	movf	utoa@n+3,w
  4255  015C  00AB               	movwf	___lodiv@dividend+3
  4256  015D  0841               	movf	utoa@n+4,w
  4257  015E  00AC               	movwf	___lodiv@dividend+4
  4258  015F  0842               	movf	utoa@n+5,w
  4259  0160  00AD               	movwf	___lodiv@dividend+5
  4260  0161  0843               	movf	utoa@n+6,w
  4261  0162  00AE               	movwf	___lodiv@dividend+6
  4262  0163  0844               	movf	utoa@n+7,w
  4263  0164  00AF               	movwf	___lodiv@dividend+7
  4264  0165  318B  23C9  3180   	fcall	___lodiv
  4265  0168  0020               	movlb	0	; select bank0
  4266  0169  0820               	movf	?___lodiv,w
  4267  016A  00BD               	movwf	utoa@n
  4268  016B  0821               	movf	?___lodiv+1,w
  4269  016C  00BE               	movwf	utoa@n+1
  4270  016D  0822               	movf	?___lodiv+2,w
  4271  016E  00BF               	movwf	utoa@n+2
  4272  016F  0823               	movf	?___lodiv+3,w
  4273  0170  00C0               	movwf	utoa@n+3
  4274  0171  0824               	movf	?___lodiv+4,w
  4275  0172  00C1               	movwf	utoa@n+4
  4276  0173  0825               	movf	?___lodiv+5,w
  4277  0174  00C2               	movwf	utoa@n+5
  4278  0175  0826               	movf	?___lodiv+6,w
  4279  0176  00C3               	movwf	utoa@n+6
  4280  0177  0827               	movf	?___lodiv+7,w
  4281  0178  00C4               	movwf	utoa@n+7
  4282  0179                     l2535:
  4283                           
  4284                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 631:     while (i
      +                           && (n || (0 < p) || ((0 < w) && (flags & (1 << 1))))) {
  4285  0179  0020               	movlb	0	; select bank0
  4286  017A  0845               	movf	utoa@i,w
  4287  017B  0446               	iorwf	utoa@i+1,w
  4288  017C  1903               	btfsc	3,2
  4289  017D  297F               	goto	u2491
  4290  017E  2980               	goto	u2490
  4291  017F                     u2491:
  4292  017F  29AC               	goto	l2545
  4293  0180                     u2490:
  4294  0180                     l2537:
  4295  0180  083D               	movf	utoa@n,w
  4296  0181  043E               	iorwf	utoa@n+1,w
  4297  0182  043F               	iorwf	utoa@n+2,w
  4298  0183  0440               	iorwf	utoa@n+3,w
  4299  0184  0441               	iorwf	utoa@n+4,w
  4300  0185  0442               	iorwf	utoa@n+5,w
  4301  0186  0443               	iorwf	utoa@n+6,w
  4302  0187  0444               	iorwf	utoa@n+7,w
  4303  0188  1D03               	skipz
  4304  0189  298B               	goto	u2501
  4305  018A  298C               	goto	u2500
  4306  018B                     u2501:
  4307  018B  2918               	goto	l2525
  4308  018C                     u2500:
  4309  018C                     l2539:
  4310  018C  0839               	movf	utoa@p+1,w
  4311  018D  3A80               	xorlw	128
  4312  018E  00FD               	movwf	??_utoa
  4313  018F  3080               	movlw	128
  4314  0190  027D               	subwf	??_utoa,w
  4315  0191  1D03               	skipz
  4316  0192  2995               	goto	u2515
  4317  0193  3001               	movlw	1
  4318  0194  0238               	subwf	utoa@p,w
  4319  0195                     u2515:
  4320  0195  1803               	skipnc
  4321  0196  2998               	goto	u2511
  4322  0197  2999               	goto	u2510
  4323  0198                     u2511:
  4324  0198  2918               	goto	l2525
  4325  0199                     u2510:
  4326  0199                     l2541:
  4327  0199  0020               	movlb	0	; select bank0
  4328  019A  083C               	movf	utoa@w+1,w
  4329  019B  3A80               	xorlw	128
  4330  019C  00FD               	movwf	??_utoa
  4331  019D  3080               	movlw	128
  4332  019E  027D               	subwf	??_utoa,w
  4333  019F  1D03               	skipz
  4334  01A0  29A3               	goto	u2525
  4335  01A1  3001               	movlw	1
  4336  01A2  023B               	subwf	utoa@w,w
  4337  01A3                     u2525:
  4338  01A3  1C03               	skipc
  4339  01A4  29A6               	goto	u2521
  4340  01A5  29A7               	goto	u2520
  4341  01A6                     u2521:
  4342  01A6  29AC               	goto	l2545
  4343  01A7                     u2520:
  4344  01A7                     l2543:
  4345  01A7  0021               	movlb	1	; select bank1
  4346  01A8  18ED               	btfsc	_flags^(0+128),1
  4347  01A9  29AB               	goto	u2531
  4348  01AA  29AC               	goto	u2530
  4349  01AB                     u2531:
  4350  01AB  2918               	goto	l2525
  4351  01AC                     u2530:
  4352  01AC                     l2545:
  4353                           
  4354                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 640:     return p
      +                          ad(fp, &dbuf[i], w);
  4355  01AC  0020               	movlb	0	; select bank0
  4356  01AD  0845               	movf	utoa@i,w
  4357  01AE  3E2F               	addlw	(low (_dbuf| (0+256)))& (0+255)
  4358  01AF  00FD               	movwf	??_utoa
  4359  01B0  087D               	movf	??_utoa,w
  4360  01B1  00A4               	movwf	pad@buf
  4361  01B2  083C               	movf	utoa@w+1,w
  4362  01B3  00A6               	movwf	pad@p+1
  4363  01B4  083B               	movf	utoa@w,w
  4364  01B5  00A5               	movwf	pad@p
  4365  01B6  083A               	movf	utoa@fp,w
  4366  01B7  3188  2038  3180   	fcall	_pad
  4367  01BA  0020               	movlb	0	; select bank0
  4368  01BB  0825               	movf	?_pad+1,w
  4369  01BC  00B1               	movwf	?_utoa+1
  4370  01BD  0824               	movf	?_pad,w
  4371  01BE  00B0               	movwf	?_utoa
  4372  01BF                     l1041:
  4373  01BF  0008               	return
  4374  01C0                     __end_of_utoa:
  4375                           
  4376                           	psect	text7
  4377  0A68                     __ptext7:	
  4378 ;; *************** function ___lomod *****************
  4379 ;; Defined at:
  4380 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\lomod.c"
  4381 ;; Parameters:    Size  Location     Type
  4382 ;;  divisor         8    0[BANK0 ] unsigned long long 
  4383 ;;  dividend        8    8[BANK0 ] unsigned long long 
  4384 ;; Auto vars:     Size  Location     Type
  4385 ;;  counter         1    1[COMMON] unsigned char 
  4386 ;; Return value:  Size  Location     Type
  4387 ;;                  8    0[BANK0 ] unsigned long long 
  4388 ;; Registers used:
  4389 ;;		wreg, status,2, status,0
  4390 ;; Tracked objects:
  4391 ;;		On entry : 0/0
  4392 ;;		On exit  : 0/0
  4393 ;;		Unchanged: 0/0
  4394 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  4395 ;;      Params:         0      16       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4396 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4397 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4398 ;;      Totals:         2      16       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4399 ;;Total ram usage:       18 bytes
  4400 ;; Hardware stack levels used: 1
  4401 ;; This function calls:
  4402 ;;		Nothing
  4403 ;; This function is called by:
  4404 ;;		_utoa
  4405 ;; This function uses a non-reentrant model
  4406 ;;
  4407                           
  4408                           
  4409                           ;psect for function ___lomod
  4410  0A68                     ___lomod:
  4411  0A68                     l2403:	
  4412                           ;incstack = 0
  4413                           ; Regs used in ___lomod: [wreg+status,2+status,0]
  4414                           
  4415  0A68  0020               	movlb	0	; select bank0
  4416  0A69  0820               	movf	___lomod@divisor,w
  4417  0A6A  0421               	iorwf	___lomod@divisor+1,w
  4418  0A6B  0422               	iorwf	___lomod@divisor+2,w
  4419  0A6C  0423               	iorwf	___lomod@divisor+3,w
  4420  0A6D  0424               	iorwf	___lomod@divisor+4,w
  4421  0A6E  0425               	iorwf	___lomod@divisor+5,w
  4422  0A6F  0426               	iorwf	___lomod@divisor+6,w
  4423  0A70  0427               	iorwf	___lomod@divisor+7,w
  4424  0A71  1903               	skipnz
  4425  0A72  2A74               	goto	u2221
  4426  0A73  2A75               	goto	u2220
  4427  0A74                     u2221:
  4428  0A74  2AC8               	goto	l746
  4429  0A75                     u2220:
  4430  0A75                     l2405:
  4431  0A75  01F1               	clrf	___lomod@counter
  4432  0A76  0AF1               	incf	___lomod@counter,f
  4433  0A77  2A84               	goto	l2411
  4434  0A78                     l2407:
  4435  0A78  35A0               	lslf	___lomod@divisor,f
  4436  0A79  0DA1               	rlf	___lomod@divisor+1,f
  4437  0A7A  0DA2               	rlf	___lomod@divisor+2,f
  4438  0A7B  0DA3               	rlf	___lomod@divisor+3,f
  4439  0A7C  0DA4               	rlf	___lomod@divisor+4,f
  4440  0A7D  0DA5               	rlf	___lomod@divisor+5,f
  4441  0A7E  0DA6               	rlf	___lomod@divisor+6,f
  4442  0A7F  0DA7               	rlf	___lomod@divisor+7,f
  4443  0A80                     l2409:
  4444  0A80  3001               	movlw	1
  4445  0A81  00F0               	movwf	??___lomod
  4446  0A82  0870               	movf	??___lomod,w
  4447  0A83  07F1               	addwf	___lomod@counter,f
  4448  0A84                     l2411:
  4449  0A84  1FA7               	btfss	___lomod@divisor+7,7
  4450  0A85  2A87               	goto	u2231
  4451  0A86  2A88               	goto	u2230
  4452  0A87                     u2231:
  4453  0A87  2A78               	goto	l2407
  4454  0A88                     u2230:
  4455  0A88                     l2413:
  4456  0A88  0827               	movf	___lomod@divisor+7,w
  4457  0A89  022F               	subwf	___lomod@dividend+7,w
  4458  0A8A  1D03               	skipz
  4459  0A8B  2AA6               	goto	u2245
  4460  0A8C  0826               	movf	___lomod@divisor+6,w
  4461  0A8D  022E               	subwf	___lomod@dividend+6,w
  4462  0A8E  1D03               	skipz
  4463  0A8F  2AA6               	goto	u2245
  4464  0A90  0825               	movf	___lomod@divisor+5,w
  4465  0A91  022D               	subwf	___lomod@dividend+5,w
  4466  0A92  1D03               	skipz
  4467  0A93  2AA6               	goto	u2245
  4468  0A94  0824               	movf	___lomod@divisor+4,w
  4469  0A95  022C               	subwf	___lomod@dividend+4,w
  4470  0A96  1D03               	skipz
  4471  0A97  2AA6               	goto	u2245
  4472  0A98  0823               	movf	___lomod@divisor+3,w
  4473  0A99  022B               	subwf	___lomod@dividend+3,w
  4474  0A9A  1D03               	skipz
  4475  0A9B  2AA6               	goto	u2245
  4476  0A9C  0822               	movf	___lomod@divisor+2,w
  4477  0A9D  022A               	subwf	___lomod@dividend+2,w
  4478  0A9E  1D03               	skipz
  4479  0A9F  2AA6               	goto	u2245
  4480  0AA0  0821               	movf	___lomod@divisor+1,w
  4481  0AA1  0229               	subwf	___lomod@dividend+1,w
  4482  0AA2  1D03               	skipz
  4483  0AA3  2AA6               	goto	u2245
  4484  0AA4  0820               	movf	___lomod@divisor,w
  4485  0AA5  0228               	subwf	___lomod@dividend,w
  4486  0AA6                     u2245:
  4487  0AA6  1C03               	skipc
  4488  0AA7  2AA9               	goto	u2241
  4489  0AA8  2AAA               	goto	u2240
  4490  0AA9                     u2241:
  4491  0AA9  2ABA               	goto	l2417
  4492  0AAA                     u2240:
  4493  0AAA                     l2415:
  4494  0AAA  0820               	movf	___lomod@divisor,w
  4495  0AAB  02A8               	subwf	___lomod@dividend,f
  4496  0AAC  0821               	movf	___lomod@divisor+1,w
  4497  0AAD  3BA9               	subwfb	___lomod@dividend+1,f
  4498  0AAE  0822               	movf	___lomod@divisor+2,w
  4499  0AAF  3BAA               	subwfb	___lomod@dividend+2,f
  4500  0AB0  0823               	movf	___lomod@divisor+3,w
  4501  0AB1  3BAB               	subwfb	___lomod@dividend+3,f
  4502  0AB2  0824               	movf	___lomod@divisor+4,w
  4503  0AB3  3BAC               	subwfb	___lomod@dividend+4,f
  4504  0AB4  0825               	movf	___lomod@divisor+5,w
  4505  0AB5  3BAD               	subwfb	___lomod@dividend+5,f
  4506  0AB6  0826               	movf	___lomod@divisor+6,w
  4507  0AB7  3BAE               	subwfb	___lomod@dividend+6,f
  4508  0AB8  0827               	movf	___lomod@divisor+7,w
  4509  0AB9  3BAF               	subwfb	___lomod@dividend+7,f
  4510  0ABA                     l2417:
  4511  0ABA  36A7               	lsrf	___lomod@divisor+7,f
  4512  0ABB  0CA6               	rrf	___lomod@divisor+6,f
  4513  0ABC  0CA5               	rrf	___lomod@divisor+5,f
  4514  0ABD  0CA4               	rrf	___lomod@divisor+4,f
  4515  0ABE  0CA3               	rrf	___lomod@divisor+3,f
  4516  0ABF  0CA2               	rrf	___lomod@divisor+2,f
  4517  0AC0  0CA1               	rrf	___lomod@divisor+1,f
  4518  0AC1  0CA0               	rrf	___lomod@divisor,f
  4519  0AC2  3001               	movlw	1
  4520  0AC3  02F1               	subwf	___lomod@counter,f
  4521  0AC4  1D03               	btfss	3,2
  4522  0AC5  2AC7               	goto	u2251
  4523  0AC6  2AC8               	goto	u2250
  4524  0AC7                     u2251:
  4525  0AC7  2A88               	goto	l2413
  4526  0AC8                     u2250:
  4527  0AC8                     l746:
  4528  0AC8  0828               	movf	___lomod@dividend,w
  4529  0AC9  00A0               	movwf	?___lomod
  4530  0ACA  0829               	movf	___lomod@dividend+1,w
  4531  0ACB  00A1               	movwf	?___lomod+1
  4532  0ACC  082A               	movf	___lomod@dividend+2,w
  4533  0ACD  00A2               	movwf	?___lomod+2
  4534  0ACE  082B               	movf	___lomod@dividend+3,w
  4535  0ACF  00A3               	movwf	?___lomod+3
  4536  0AD0  082C               	movf	___lomod@dividend+4,w
  4537  0AD1  00A4               	movwf	?___lomod+4
  4538  0AD2  082D               	movf	___lomod@dividend+5,w
  4539  0AD3  00A5               	movwf	?___lomod+5
  4540  0AD4  082E               	movf	___lomod@dividend+6,w
  4541  0AD5  00A6               	movwf	?___lomod+6
  4542  0AD6  082F               	movf	___lomod@dividend+7,w
  4543  0AD7  00A7               	movwf	?___lomod+7
  4544  0AD8                     l753:
  4545  0AD8  0008               	return
  4546  0AD9                     __end_of___lomod:
  4547                           
  4548                           	psect	text8
  4549  0BC9                     __ptext8:	
  4550 ;; *************** function ___lodiv *****************
  4551 ;; Defined at:
  4552 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\lodiv.c"
  4553 ;; Parameters:    Size  Location     Type
  4554 ;;  divisor         8    0[BANK0 ] unsigned long long 
  4555 ;;  dividend        8    8[BANK0 ] unsigned long long 
  4556 ;; Auto vars:     Size  Location     Type
  4557 ;;  quotient        8    1[COMMON] unsigned long long 
  4558 ;;  counter         1    9[COMMON] unsigned char 
  4559 ;; Return value:  Size  Location     Type
  4560 ;;                  8    0[BANK0 ] unsigned long long 
  4561 ;; Registers used:
  4562 ;;		wreg, fsr1l, fsr1h, status,2, status,0
  4563 ;; Tracked objects:
  4564 ;;		On entry : 0/0
  4565 ;;		On exit  : 0/0
  4566 ;;		Unchanged: 0/0
  4567 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  4568 ;;      Params:         0      16       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4569 ;;      Locals:         9       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4570 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4571 ;;      Totals:        10      16       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4572 ;;Total ram usage:       26 bytes
  4573 ;; Hardware stack levels used: 1
  4574 ;; This function calls:
  4575 ;;		Nothing
  4576 ;; This function is called by:
  4577 ;;		_utoa
  4578 ;; This function uses a non-reentrant model
  4579 ;;
  4580                           
  4581                           
  4582                           ;psect for function ___lodiv
  4583  0BC9                     ___lodiv:
  4584  0BC9                     l2381:	
  4585                           ;incstack = 0
  4586                           ; Regs used in ___lodiv: [wreg+fsr1l+fsr1h+status,2+status,0]
  4587                           
  4588  0BC9  3071               	movlw	low ___lodiv@quotient
  4589  0BCA  0086               	movwf	6
  4590  0BCB  3000               	movlw	high ___lodiv@quotient
  4591  0BCC  0087               	movwf	7
  4592  0BCD  3008               	movlw	8
  4593  0BCE  00F0               	movwf	??___lodiv
  4594  0BCF  3000               	movlw	0
  4595  0BD0                     u2170:
  4596  0BD0  001E               	movwi fsr1++
  4597  0BD1  0BF0               	decfsz	??___lodiv,f
  4598  0BD2  2BD0               	goto	u2170
  4599  0BD3                     l2383:
  4600  0BD3  0020               	movlb	0	; select bank0
  4601  0BD4  0820               	movf	___lodiv@divisor,w
  4602  0BD5  0421               	iorwf	___lodiv@divisor+1,w
  4603  0BD6  0422               	iorwf	___lodiv@divisor+2,w
  4604  0BD7  0423               	iorwf	___lodiv@divisor+3,w
  4605  0BD8  0424               	iorwf	___lodiv@divisor+4,w
  4606  0BD9  0425               	iorwf	___lodiv@divisor+5,w
  4607  0BDA  0426               	iorwf	___lodiv@divisor+6,w
  4608  0BDB  0427               	iorwf	___lodiv@divisor+7,w
  4609  0BDC  1903               	skipnz
  4610  0BDD  2BDF               	goto	u2181
  4611  0BDE  2BE0               	goto	u2180
  4612  0BDF                     u2181:
  4613  0BDF  2C3C               	goto	l736
  4614  0BE0                     u2180:
  4615  0BE0                     l2385:
  4616  0BE0  01F9               	clrf	___lodiv@counter
  4617  0BE1  0AF9               	incf	___lodiv@counter,f
  4618  0BE2  2BEF               	goto	l2391
  4619  0BE3                     l2387:
  4620  0BE3  35A0               	lslf	___lodiv@divisor,f
  4621  0BE4  0DA1               	rlf	___lodiv@divisor+1,f
  4622  0BE5  0DA2               	rlf	___lodiv@divisor+2,f
  4623  0BE6  0DA3               	rlf	___lodiv@divisor+3,f
  4624  0BE7  0DA4               	rlf	___lodiv@divisor+4,f
  4625  0BE8  0DA5               	rlf	___lodiv@divisor+5,f
  4626  0BE9  0DA6               	rlf	___lodiv@divisor+6,f
  4627  0BEA  0DA7               	rlf	___lodiv@divisor+7,f
  4628  0BEB                     l2389:
  4629  0BEB  3001               	movlw	1
  4630  0BEC  00F0               	movwf	??___lodiv
  4631  0BED  0870               	movf	??___lodiv,w
  4632  0BEE  07F9               	addwf	___lodiv@counter,f
  4633  0BEF                     l2391:
  4634  0BEF  1FA7               	btfss	___lodiv@divisor+7,7
  4635  0BF0  2BF2               	goto	u2191
  4636  0BF1  2BF3               	goto	u2190
  4637  0BF2                     u2191:
  4638  0BF2  2BE3               	goto	l2387
  4639  0BF3                     u2190:
  4640  0BF3                     l2393:
  4641  0BF3  35F1               	lslf	___lodiv@quotient,f
  4642  0BF4  0DF2               	rlf	___lodiv@quotient+1,f
  4643  0BF5  0DF3               	rlf	___lodiv@quotient+2,f
  4644  0BF6  0DF4               	rlf	___lodiv@quotient+3,f
  4645  0BF7  0DF5               	rlf	___lodiv@quotient+4,f
  4646  0BF8  0DF6               	rlf	___lodiv@quotient+5,f
  4647  0BF9  0DF7               	rlf	___lodiv@quotient+6,f
  4648  0BFA  0DF8               	rlf	___lodiv@quotient+7,f
  4649  0BFB                     l2395:
  4650  0BFB  0827               	movf	___lodiv@divisor+7,w
  4651  0BFC  022F               	subwf	___lodiv@dividend+7,w
  4652  0BFD  1D03               	skipz
  4653  0BFE  2C19               	goto	u2205
  4654  0BFF  0826               	movf	___lodiv@divisor+6,w
  4655  0C00  022E               	subwf	___lodiv@dividend+6,w
  4656  0C01  1D03               	skipz
  4657  0C02  2C19               	goto	u2205
  4658  0C03  0825               	movf	___lodiv@divisor+5,w
  4659  0C04  022D               	subwf	___lodiv@dividend+5,w
  4660  0C05  1D03               	skipz
  4661  0C06  2C19               	goto	u2205
  4662  0C07  0824               	movf	___lodiv@divisor+4,w
  4663  0C08  022C               	subwf	___lodiv@dividend+4,w
  4664  0C09  1D03               	skipz
  4665  0C0A  2C19               	goto	u2205
  4666  0C0B  0823               	movf	___lodiv@divisor+3,w
  4667  0C0C  022B               	subwf	___lodiv@dividend+3,w
  4668  0C0D  1D03               	skipz
  4669  0C0E  2C19               	goto	u2205
  4670  0C0F  0822               	movf	___lodiv@divisor+2,w
  4671  0C10  022A               	subwf	___lodiv@dividend+2,w
  4672  0C11  1D03               	skipz
  4673  0C12  2C19               	goto	u2205
  4674  0C13  0821               	movf	___lodiv@divisor+1,w
  4675  0C14  0229               	subwf	___lodiv@dividend+1,w
  4676  0C15  1D03               	skipz
  4677  0C16  2C19               	goto	u2205
  4678  0C17  0820               	movf	___lodiv@divisor,w
  4679  0C18  0228               	subwf	___lodiv@dividend,w
  4680  0C19                     u2205:
  4681  0C19  1C03               	skipc
  4682  0C1A  2C1C               	goto	u2201
  4683  0C1B  2C1D               	goto	u2200
  4684  0C1C                     u2201:
  4685  0C1C  2C2E               	goto	l2401
  4686  0C1D                     u2200:
  4687  0C1D                     l2397:
  4688  0C1D  0820               	movf	___lodiv@divisor,w
  4689  0C1E  02A8               	subwf	___lodiv@dividend,f
  4690  0C1F  0821               	movf	___lodiv@divisor+1,w
  4691  0C20  3BA9               	subwfb	___lodiv@dividend+1,f
  4692  0C21  0822               	movf	___lodiv@divisor+2,w
  4693  0C22  3BAA               	subwfb	___lodiv@dividend+2,f
  4694  0C23  0823               	movf	___lodiv@divisor+3,w
  4695  0C24  3BAB               	subwfb	___lodiv@dividend+3,f
  4696  0C25  0824               	movf	___lodiv@divisor+4,w
  4697  0C26  3BAC               	subwfb	___lodiv@dividend+4,f
  4698  0C27  0825               	movf	___lodiv@divisor+5,w
  4699  0C28  3BAD               	subwfb	___lodiv@dividend+5,f
  4700  0C29  0826               	movf	___lodiv@divisor+6,w
  4701  0C2A  3BAE               	subwfb	___lodiv@dividend+6,f
  4702  0C2B  0827               	movf	___lodiv@divisor+7,w
  4703  0C2C  3BAF               	subwfb	___lodiv@dividend+7,f
  4704  0C2D                     l2399:
  4705  0C2D  1471               	bsf	___lodiv@quotient,0
  4706  0C2E                     l2401:
  4707  0C2E  36A7               	lsrf	___lodiv@divisor+7,f
  4708  0C2F  0CA6               	rrf	___lodiv@divisor+6,f
  4709  0C30  0CA5               	rrf	___lodiv@divisor+5,f
  4710  0C31  0CA4               	rrf	___lodiv@divisor+4,f
  4711  0C32  0CA3               	rrf	___lodiv@divisor+3,f
  4712  0C33  0CA2               	rrf	___lodiv@divisor+2,f
  4713  0C34  0CA1               	rrf	___lodiv@divisor+1,f
  4714  0C35  0CA0               	rrf	___lodiv@divisor,f
  4715  0C36  3001               	movlw	1
  4716  0C37  02F9               	subwf	___lodiv@counter,f
  4717  0C38  1D03               	btfss	3,2
  4718  0C39  2C3B               	goto	u2211
  4719  0C3A  2C3C               	goto	u2210
  4720  0C3B                     u2211:
  4721  0C3B  2BF3               	goto	l2393
  4722  0C3C                     u2210:
  4723  0C3C                     l736:
  4724  0C3C  0871               	movf	___lodiv@quotient,w
  4725  0C3D  00A0               	movwf	?___lodiv
  4726  0C3E  0872               	movf	___lodiv@quotient+1,w
  4727  0C3F  00A1               	movwf	?___lodiv+1
  4728  0C40  0873               	movf	___lodiv@quotient+2,w
  4729  0C41  00A2               	movwf	?___lodiv+2
  4730  0C42  0874               	movf	___lodiv@quotient+3,w
  4731  0C43  00A3               	movwf	?___lodiv+3
  4732  0C44  0875               	movf	___lodiv@quotient+4,w
  4733  0C45  00A4               	movwf	?___lodiv+4
  4734  0C46  0876               	movf	___lodiv@quotient+5,w
  4735  0C47  00A5               	movwf	?___lodiv+5
  4736  0C48  0877               	movf	___lodiv@quotient+6,w
  4737  0C49  00A6               	movwf	?___lodiv+6
  4738  0C4A  0878               	movf	___lodiv@quotient+7,w
  4739  0C4B  00A7               	movwf	?___lodiv+7
  4740  0C4C                     l743:
  4741  0C4C  0008               	return
  4742  0C4D                     __end_of___lodiv:
  4743                           
  4744                           	psect	text9
  4745  0944                     __ptext9:	
  4746 ;; *************** function _strncmp *****************
  4747 ;; Defined at:
  4748 ;;		line 3 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\strncmp.c"
  4749 ;; Parameters:    Size  Location     Type
  4750 ;;  _l              2    0[COMMON] PTR const unsigned char 
  4751 ;;		 -> STR_6(5), STR_5(10), STR_4(8), 
  4752 ;;  _r              2    2[COMMON] PTR const unsigned char 
  4753 ;;		 -> STR_18(3), STR_13(3), STR_9(3), 
  4754 ;;  n               2    4[COMMON] unsigned int 
  4755 ;; Auto vars:     Size  Location     Type
  4756 ;;  r               2    9[COMMON] PTR const unsigned char 
  4757 ;;		 -> STR_18(3), STR_13(3), STR_9(3), 
  4758 ;;  l               2    7[COMMON] PTR const unsigned char 
  4759 ;;		 -> STR_6(5), STR_5(10), STR_4(8), 
  4760 ;; Return value:  Size  Location     Type
  4761 ;;                  2    0[COMMON] int 
  4762 ;; Registers used:
  4763 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath
  4764 ;; Tracked objects:
  4765 ;;		On entry : 0/0
  4766 ;;		On exit  : 0/0
  4767 ;;		Unchanged: 0/0
  4768 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  4769 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4770 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4771 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4772 ;;      Totals:        11       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4773 ;;Total ram usage:       11 bytes
  4774 ;; Hardware stack levels used: 1
  4775 ;; This function calls:
  4776 ;;		Nothing
  4777 ;; This function is called by:
  4778 ;;		_vfpfcnvrt
  4779 ;; This function uses a non-reentrant model
  4780 ;;
  4781                           
  4782                           
  4783                           ;psect for function _strncmp
  4784  0944                     _strncmp:
  4785  0944                     l2549:	
  4786                           ;incstack = 0
  4787                           ; Regs used in _strncmp: [wreg-fsr0h+status,2+status,0+pclath]
  4788                           
  4789  0944  0871               	movf	strncmp@_l+1,w
  4790  0945  00F8               	movwf	strncmp@l+1
  4791  0946  0870               	movf	strncmp@_l,w
  4792  0947  00F7               	movwf	strncmp@l
  4793  0948  0873               	movf	strncmp@_r+1,w
  4794  0949  00FA               	movwf	strncmp@r+1
  4795  094A  0872               	movf	strncmp@_r,w
  4796  094B  00F9               	movwf	strncmp@r
  4797  094C                     l2551:
  4798  094C  3001               	movlw	1
  4799  094D  02F4               	subwf	strncmp@n,f
  4800  094E  3000               	movlw	0
  4801  094F  3BF5               	subwfb	strncmp@n+1,f
  4802  0950  0A74               	incf	strncmp@n,w
  4803  0951  1D03               	skipz
  4804  0952  2957               	goto	u2541
  4805  0953  0A75               	incf	strncmp@n+1,w
  4806  0954  1D03               	btfss	3,2
  4807  0955  2957               	goto	u2541
  4808  0956  2958               	goto	u2540
  4809  0957                     u2541:
  4810  0957  2967               	goto	l2559
  4811  0958                     u2540:
  4812  0958                     l2553:
  4813  0958  01F0               	clrf	?_strncmp
  4814  0959  01F1               	clrf	?_strncmp+1
  4815  095A  299F               	goto	l1100
  4816  095B                     l2557:
  4817  095B  3001               	movlw	1
  4818  095C  07F7               	addwf	strncmp@l,f
  4819  095D  3000               	movlw	0
  4820  095E  3DF8               	addwfc	strncmp@l+1,f
  4821  095F  3001               	movlw	1
  4822  0960  07F9               	addwf	strncmp@r,f
  4823  0961  3000               	movlw	0
  4824  0962  3DFA               	addwfc	strncmp@r+1,f
  4825  0963  3001               	movlw	1
  4826  0964  02F4               	subwf	strncmp@n,f
  4827  0965  3000               	movlw	0
  4828  0966  3BF5               	subwfb	strncmp@n+1,f
  4829  0967                     l2559:
  4830  0967  0877               	movf	strncmp@l,w
  4831  0968  0084               	movwf	4
  4832  0969  0878               	movf	strncmp@l+1,w
  4833  096A  0085               	movwf	5
  4834  096B  0012               	moviw fsr0++
  4835  096C  1903               	btfsc	3,2
  4836  096D  296F               	goto	u2551
  4837  096E  2970               	goto	u2550
  4838  096F                     u2551:
  4839  096F  298F               	goto	l2567
  4840  0970                     u2550:
  4841  0970                     l2561:
  4842  0970  0879               	movf	strncmp@r,w
  4843  0971  0084               	movwf	4
  4844  0972  087A               	movf	strncmp@r+1,w
  4845  0973  0085               	movwf	5
  4846  0974  0012               	moviw fsr0++
  4847  0975  1903               	btfsc	3,2
  4848  0976  2978               	goto	u2561
  4849  0977  2979               	goto	u2560
  4850  0978                     u2561:
  4851  0978  298F               	goto	l2567
  4852  0979                     u2560:
  4853  0979                     l2563:
  4854  0979  0874               	movf	strncmp@n,w
  4855  097A  0475               	iorwf	strncmp@n+1,w
  4856  097B  1903               	btfsc	3,2
  4857  097C  297E               	goto	u2571
  4858  097D  297F               	goto	u2570
  4859  097E                     u2571:
  4860  097E  298F               	goto	l2567
  4861  097F                     u2570:
  4862  097F                     l2565:
  4863  097F  0879               	movf	strncmp@r,w
  4864  0980  0084               	movwf	4
  4865  0981  087A               	movf	strncmp@r+1,w
  4866  0982  0085               	movwf	5
  4867  0983  0800               	movf	0,w	;code access
  4868  0984  00F6               	movwf	??_strncmp
  4869  0985  0877               	movf	strncmp@l,w
  4870  0986  0084               	movwf	4
  4871  0987  0878               	movf	strncmp@l+1,w
  4872  0988  0085               	movwf	5
  4873  0989  0800               	movf	0,w	;code access
  4874  098A  0676               	xorwf	??_strncmp,w
  4875  098B  1903               	skipnz
  4876  098C  298E               	goto	u2581
  4877  098D  298F               	goto	u2580
  4878  098E                     u2581:
  4879  098E  295B               	goto	l2557
  4880  098F                     u2580:
  4881  098F                     l2567:
  4882  098F  0877               	movf	strncmp@l,w
  4883  0990  0084               	movwf	4
  4884  0991  0878               	movf	strncmp@l+1,w
  4885  0992  0085               	movwf	5
  4886  0993  0800               	movf	0,w	;code access
  4887  0994  00F6               	movwf	??_strncmp
  4888  0995  0879               	movf	strncmp@r,w
  4889  0996  0084               	movwf	4
  4890  0997  087A               	movf	strncmp@r+1,w
  4891  0998  0085               	movwf	5
  4892  0999  0800               	movf	0,w	;code access
  4893  099A  0276               	subwf	??_strncmp,w
  4894  099B  00F0               	movwf	?_strncmp
  4895  099C  01F1               	clrf	?_strncmp+1
  4896  099D  1C03               	skipc
  4897  099E  03F1               	decf	?_strncmp+1,f
  4898  099F                     l1100:
  4899  099F  0008               	return
  4900  09A0                     __end_of_strncmp:
  4901                           
  4902                           	psect	text10
  4903  02C1                     __ptext10:	
  4904 ;; *************** function _dtoa *****************
  4905 ;; Defined at:
  4906 ;;		line 287 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c"
  4907 ;; Parameters:    Size  Location     Type
  4908 ;;  fp              1    wreg     PTR struct _IO_FILE
  4909 ;;		 -> sprintf@f(5), 
  4910 ;;  d               8   16[BANK0 ] long long 
  4911 ;; Auto vars:     Size  Location     Type
  4912 ;;  fp              1   31[BANK0 ] PTR struct _IO_FILE
  4913 ;;		 -> sprintf@f(5), 
  4914 ;;  n               8   36[BANK0 ] long long 
  4915 ;;  i               2   44[BANK0 ] int 
  4916 ;;  s               2   34[BANK0 ] int 
  4917 ;;  w               2   32[BANK0 ] int 
  4918 ;;  p               2   29[BANK0 ] int 
  4919 ;; Return value:  Size  Location     Type
  4920 ;;                  2   16[BANK0 ] int 
  4921 ;; Registers used:
  4922 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  4923 ;; Tracked objects:
  4924 ;;		On entry : 0/0
  4925 ;;		On exit  : 0/0
  4926 ;;		Unchanged: 0/0
  4927 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  4928 ;;      Params:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4929 ;;      Locals:         0      19       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4930 ;;      Temps:          0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4931 ;;      Totals:         0      30       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4932 ;;Total ram usage:       30 bytes
  4933 ;; Hardware stack levels used: 1
  4934 ;; Hardware stack levels required when called: 4
  4935 ;; This function calls:
  4936 ;;		___aodiv
  4937 ;;		___aomod
  4938 ;;		_abs
  4939 ;;		_pad
  4940 ;; This function is called by:
  4941 ;;		_vfpfcnvrt
  4942 ;; This function uses a non-reentrant model
  4943 ;;
  4944                           
  4945                           
  4946                           ;psect for function _dtoa
  4947  02C1                     _dtoa:
  4948                           
  4949                           ;incstack = 0
  4950                           ; Regs used in _dtoa: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  4951                           ;dtoa@fp stored from wreg
  4952  02C1  0020               	movlb	0	; select bank0
  4953  02C2  00BF               	movwf	dtoa@fp
  4954  02C3                     l2455:
  4955                           
  4956                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 287: static int d
      +                          toa(FILE *fp, long long d);C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\d
      +                          oprnt.c: 288: {;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 28
      +                          9:     int i, p, s, w;;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprn
      +                          t.c: 290:     long long n;;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\d
      +                          oprnt.c: 293:     n = d;
  4957  02C3  0830               	movf	dtoa@d,w
  4958  02C4  00C4               	movwf	dtoa@n
  4959  02C5  0831               	movf	dtoa@d+1,w
  4960  02C6  00C5               	movwf	dtoa@n+1
  4961  02C7  0832               	movf	dtoa@d+2,w
  4962  02C8  00C6               	movwf	dtoa@n+2
  4963  02C9  0833               	movf	dtoa@d+3,w
  4964  02CA  00C7               	movwf	dtoa@n+3
  4965  02CB  0834               	movf	dtoa@d+4,w
  4966  02CC  00C8               	movwf	dtoa@n+4
  4967  02CD  0835               	movf	dtoa@d+5,w
  4968  02CE  00C9               	movwf	dtoa@n+5
  4969  02CF  0836               	movf	dtoa@d+6,w
  4970  02D0  00CA               	movwf	dtoa@n+6
  4971  02D1  0837               	movf	dtoa@d+7,w
  4972  02D2  00CB               	movwf	dtoa@n+7
  4973  02D3                     l2457:
  4974                           
  4975                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 294:     s = n < 
      +                          0 ? 1 : 0;
  4976  02D3  3044               	movlw	low dtoa@n
  4977  02D4  0086               	movwf	6
  4978  02D5  3000               	movlw	high dtoa@n
  4979  02D6  0087               	movwf	7
  4980  02D7  3F47               	moviw [7]fsr1
  4981  02D8  00B8               	movwf	??_dtoa
  4982  02D9  1BB8               	btfsc	??_dtoa,7
  4983  02DA  2ADC               	goto	u2311
  4984  02DB  2ADE               	goto	u2310
  4985  02DC                     u2311:
  4986  02DC  3001               	movlw	1
  4987  02DD  2ADF               	goto	u2320
  4988  02DE                     u2310:
  4989  02DE  3000               	movlw	0
  4990  02DF                     u2320:
  4991  02DF  0020               	movlb	0	; select bank0
  4992  02E0  00B9               	movwf	??_dtoa+1
  4993  02E1  01BA               	clrf	??_dtoa+2
  4994  02E2  0839               	movf	??_dtoa+1,w
  4995  02E3  00C2               	movwf	dtoa@s
  4996  02E4  083A               	movf	??_dtoa+2,w
  4997  02E5  00C3               	movwf	dtoa@s+1
  4998  02E6                     l2459:
  4999                           
  5000                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 295:     if (s) {
  5001  02E6  0842               	movf	dtoa@s,w
  5002  02E7  0443               	iorwf	dtoa@s+1,w
  5003  02E8  1903               	btfsc	3,2
  5004  02E9  2AEB               	goto	u2331
  5005  02EA  2AEC               	goto	u2330
  5006  02EB                     u2331:
  5007  02EB  2B0A               	goto	l1003
  5008  02EC                     u2330:
  5009  02EC                     l2461:
  5010                           
  5011                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 296:         n = 
      +                          -n;
  5012  02EC  09C4               	comf	dtoa@n,f
  5013  02ED  09C5               	comf	dtoa@n+1,f
  5014  02EE  09C6               	comf	dtoa@n+2,f
  5015  02EF  09C7               	comf	dtoa@n+3,f
  5016  02F0  09C8               	comf	dtoa@n+4,f
  5017  02F1  09C9               	comf	dtoa@n+5,f
  5018  02F2  09CA               	comf	dtoa@n+6,f
  5019  02F3  09CB               	comf	dtoa@n+7,f
  5020  02F4  0AC4               	incf	dtoa@n,f
  5021  02F5  1D03               	skipz
  5022  02F6  2B0A               	goto	u234lld
  5023  02F7  0AC5               	incf	dtoa@n+1,f
  5024  02F8  1D03               	skipz
  5025  02F9  2B0A               	goto	u234lld
  5026  02FA  0AC6               	incf	dtoa@n+2,f
  5027  02FB  1D03               	skipz
  5028  02FC  2B0A               	goto	u234lld
  5029  02FD  0AC7               	incf	dtoa@n+3,f
  5030  02FE  1D03               	skipz
  5031  02FF  2B0A               	goto	u234lld
  5032  0300  0AC8               	incf	dtoa@n+4,f
  5033  0301  1D03               	skipz
  5034  0302  2B0A               	goto	u234lld
  5035  0303  0AC9               	incf	dtoa@n+5,f
  5036  0304  1D03               	skipz
  5037  0305  2B0A               	goto	u234lld
  5038  0306  0ACA               	incf	dtoa@n+6,f
  5039  0307  1D03               	skipz
  5040  0308  2B0A               	goto	u234lld
  5041  0309  0ACB               	incf	dtoa@n+7,f
  5042  030A                     u234lld:
  5043  030A                     l1003:	
  5044                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 297:     }
  5045                           
  5046                           
  5047                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 300:     if (!(pr
      +                          ec < 0)) {
  5048  030A  0022               	movlb	2	; select bank2
  5049  030B  1BAE               	btfsc	(_prec+1)^(0+256),7
  5050  030C  2B0E               	goto	u2351
  5051  030D  2B0F               	goto	u2350
  5052  030E                     u2351:
  5053  030E  2B14               	goto	l1004
  5054  030F                     u2350:
  5055  030F                     l2463:
  5056                           
  5057                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 301:         flag
      +                          s &= ~(1 << 1);
  5058  030F  30FD               	movlw	253
  5059  0310  0021               	movlb	1	; select bank1
  5060  0311  05ED               	andwf	_flags^(0+128),f
  5061  0312  30FF               	movlw	255
  5062  0313  05EE               	andwf	(_flags+1)^(0+128),f
  5063  0314                     l1004:	
  5064                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 302:     }
  5065                           
  5066                           
  5067                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 303:     p = (0 <
      +                           prec) ? prec : 1;
  5068  0314  0022               	movlb	2	; select bank2
  5069  0315  082E               	movf	(_prec+1)^(0+256),w
  5070  0316  3A80               	xorlw	128
  5071  0317  0020               	movlb	0	; select bank0
  5072  0318  00B8               	movwf	??_dtoa
  5073  0319  3080               	movlw	128
  5074  031A  0238               	subwf	??_dtoa,w
  5075  031B  1D03               	skipz
  5076  031C  2B20               	goto	u2365
  5077  031D  3001               	movlw	1
  5078  031E  0022               	movlb	2	; select bank2
  5079  031F  022D               	subwf	_prec^(0+256),w
  5080  0320                     u2365:
  5081  0320  1803               	skipnc
  5082  0321  2B23               	goto	u2361
  5083  0322  2B24               	goto	u2360
  5084  0323                     u2361:
  5085  0323  2B2A               	goto	l2467
  5086  0324                     u2360:
  5087  0324                     l2465:
  5088  0324  3001               	movlw	1
  5089  0325  0020               	movlb	0	; select bank0
  5090  0326  00BD               	movwf	dtoa@p
  5091  0327  3000               	movlw	0
  5092  0328  00BE               	movwf	dtoa@p+1
  5093  0329  2B32               	goto	l1008
  5094  032A                     l2467:
  5095  032A  0022               	movlb	2	; select bank2
  5096  032B  082E               	movf	(_prec+1)^(0+256),w
  5097  032C  0020               	movlb	0	; select bank0
  5098  032D  00BE               	movwf	dtoa@p+1
  5099  032E  0022               	movlb	2	; select bank2
  5100  032F  082D               	movf	_prec^(0+256),w
  5101  0330  0020               	movlb	0	; select bank0
  5102  0331  00BD               	movwf	dtoa@p
  5103  0332                     l1008:
  5104                           
  5105                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 304:     w = widt
      +                          h;
  5106  0332  0022               	movlb	2	; select bank2
  5107  0333  082C               	movf	(_width+1)^(0+256),w
  5108  0334  0020               	movlb	0	; select bank0
  5109  0335  00C1               	movwf	dtoa@w+1
  5110  0336  0022               	movlb	2	; select bank2
  5111  0337  082B               	movf	_width^(0+256),w
  5112  0338  0020               	movlb	0	; select bank0
  5113  0339  00C0               	movwf	dtoa@w
  5114  033A                     l2469:
  5115                           
  5116                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 305:     if (s ||
      +                           (flags & (1 << 2))) {
  5117  033A  0842               	movf	dtoa@s,w
  5118  033B  0443               	iorwf	dtoa@s+1,w
  5119  033C  1D03               	btfss	3,2
  5120  033D  2B3F               	goto	u2371
  5121  033E  2B40               	goto	u2370
  5122  033F                     u2371:
  5123  033F  2B45               	goto	l2473
  5124  0340                     u2370:
  5125  0340                     l2471:
  5126  0340  0021               	movlb	1	; select bank1
  5127  0341  1D6D               	btfss	_flags^(0+128),2
  5128  0342  2B44               	goto	u2381
  5129  0343  2B45               	goto	u2380
  5130  0344                     u2381:
  5131  0344  2B4A               	goto	l1009
  5132  0345                     u2380:
  5133  0345                     l2473:
  5134                           
  5135                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 306:         --w;
  5136  0345  30FF               	movlw	255
  5137  0346  0020               	movlb	0	; select bank0
  5138  0347  07C0               	addwf	dtoa@w,f
  5139  0348  30FF               	movlw	255
  5140  0349  3DC1               	addwfc	dtoa@w+1,f
  5141  034A                     l1009:	
  5142                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 307:     }
  5143                           
  5144                           
  5145                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 310:     i = size
      +                          of(dbuf) - 1;
  5146  034A  301F               	movlw	31
  5147  034B  0020               	movlb	0	; select bank0
  5148  034C  00CC               	movwf	dtoa@i
  5149  034D  3000               	movlw	0
  5150  034E  00CD               	movwf	dtoa@i+1
  5151  034F                     l2475:
  5152                           
  5153                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 311:     dbuf[i] 
      +                          = '\0';
  5154  034F  0022               	movlb	2	; select bank2
  5155  0350  01CE               	clrf	(_dbuf^(0+256)+31)
  5156                           
  5157                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 312:     while (!
      +                          (i < 1) && (n || (0 < p) || ((0 < w) && (flags & (1 << 1))))) {
  5158  0351  2BBB               	goto	l1012
  5159  0352                     l2477:
  5160                           
  5161                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 313:         --i;
  5162  0352  30FF               	movlw	255
  5163  0353  0020               	movlb	0	; select bank0
  5164  0354  07CC               	addwf	dtoa@i,f
  5165  0355  30FF               	movlw	255
  5166  0356  3DCD               	addwfc	dtoa@i+1,f
  5167  0357                     l2479:
  5168                           
  5169                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 314:         dbuf
      +                          [i] = (char)((int)'0' + abs(n % 10));
  5170  0357  300A               	movlw	10
  5171  0358  00A0               	movwf	___aomod@divisor
  5172  0359  01A1               	clrf	___aomod@divisor+1
  5173  035A  01A2               	clrf	___aomod@divisor+2
  5174  035B  01A3               	clrf	___aomod@divisor+3
  5175  035C  01A4               	clrf	___aomod@divisor+4
  5176  035D  01A5               	clrf	___aomod@divisor+5
  5177  035E  01A6               	clrf	___aomod@divisor+6
  5178  035F  01A7               	clrf	___aomod@divisor+7
  5179  0360  0844               	movf	dtoa@n,w
  5180  0361  00A8               	movwf	___aomod@dividend
  5181  0362  0845               	movf	dtoa@n+1,w
  5182  0363  00A9               	movwf	___aomod@dividend+1
  5183  0364  0846               	movf	dtoa@n+2,w
  5184  0365  00AA               	movwf	___aomod@dividend+2
  5185  0366  0847               	movf	dtoa@n+3,w
  5186  0367  00AB               	movwf	___aomod@dividend+3
  5187  0368  0848               	movf	dtoa@n+4,w
  5188  0369  00AC               	movwf	___aomod@dividend+4
  5189  036A  0849               	movf	dtoa@n+5,w
  5190  036B  00AD               	movwf	___aomod@dividend+5
  5191  036C  084A               	movf	dtoa@n+6,w
  5192  036D  00AE               	movwf	___aomod@dividend+6
  5193  036E  084B               	movf	dtoa@n+7,w
  5194  036F  00AF               	movwf	___aomod@dividend+7
  5195  0370  318F  2716  3182   	fcall	___aomod
  5196  0373  0020               	movlb	0	; select bank0
  5197  0374  0821               	movf	?___aomod+1,w
  5198  0375  00F4               	movwf	abs@a+1
  5199  0376  0820               	movf	?___aomod,w
  5200  0377  00F3               	movwf	abs@a
  5201  0378  3195  25B8  3182   	fcall	_abs
  5202  037B  0873               	movf	?_abs,w
  5203  037C  3E30               	addlw	48
  5204  037D  0020               	movlb	0	; select bank0
  5205  037E  00B8               	movwf	??_dtoa
  5206  037F  084C               	movf	dtoa@i,w
  5207  0380  3E2F               	addlw	(low (_dbuf| (0+256)))& (0+255)
  5208  0381  0086               	movwf	6
  5209  0382  3001               	movlw	1	; select bank2/3
  5210  0383  0087               	movwf	7
  5211  0384  0838               	movf	??_dtoa,w
  5212  0385  0081               	movwf	1
  5213  0386                     l2481:
  5214                           
  5215                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 315:         --p;
  5216  0386  30FF               	movlw	255
  5217  0387  07BD               	addwf	dtoa@p,f
  5218  0388  30FF               	movlw	255
  5219  0389  3DBE               	addwfc	dtoa@p+1,f
  5220  038A                     l2483:
  5221                           
  5222                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 316:         --w;
  5223  038A  30FF               	movlw	255
  5224  038B  07C0               	addwf	dtoa@w,f
  5225  038C  30FF               	movlw	255
  5226  038D  3DC1               	addwfc	dtoa@w+1,f
  5227  038E                     l2485:
  5228                           
  5229                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 317:         n = 
      +                          n / 10;
  5230  038E  300A               	movlw	10
  5231  038F  00A0               	movwf	___aodiv@divisor
  5232  0390  01A1               	clrf	___aodiv@divisor+1
  5233  0391  01A2               	clrf	___aodiv@divisor+2
  5234  0392  01A3               	clrf	___aodiv@divisor+3
  5235  0393  01A4               	clrf	___aodiv@divisor+4
  5236  0394  01A5               	clrf	___aodiv@divisor+5
  5237  0395  01A6               	clrf	___aodiv@divisor+6
  5238  0396  01A7               	clrf	___aodiv@divisor+7
  5239  0397  0844               	movf	dtoa@n,w
  5240  0398  00A8               	movwf	___aodiv@dividend
  5241  0399  0845               	movf	dtoa@n+1,w
  5242  039A  00A9               	movwf	___aodiv@dividend+1
  5243  039B  0846               	movf	dtoa@n+2,w
  5244  039C  00AA               	movwf	___aodiv@dividend+2
  5245  039D  0847               	movf	dtoa@n+3,w
  5246  039E  00AB               	movwf	___aodiv@dividend+3
  5247  039F  0848               	movf	dtoa@n+4,w
  5248  03A0  00AC               	movwf	___aodiv@dividend+4
  5249  03A1  0849               	movf	dtoa@n+5,w
  5250  03A2  00AD               	movwf	___aodiv@dividend+5
  5251  03A3  084A               	movf	dtoa@n+6,w
  5252  03A4  00AE               	movwf	___aodiv@dividend+6
  5253  03A5  084B               	movf	dtoa@n+7,w
  5254  03A6  00AF               	movwf	___aodiv@dividend+7
  5255  03A7  3181  21C0  3182   	fcall	___aodiv
  5256  03AA  0020               	movlb	0	; select bank0
  5257  03AB  0820               	movf	?___aodiv,w
  5258  03AC  00C4               	movwf	dtoa@n
  5259  03AD  0821               	movf	?___aodiv+1,w
  5260  03AE  00C5               	movwf	dtoa@n+1
  5261  03AF  0822               	movf	?___aodiv+2,w
  5262  03B0  00C6               	movwf	dtoa@n+2
  5263  03B1  0823               	movf	?___aodiv+3,w
  5264  03B2  00C7               	movwf	dtoa@n+3
  5265  03B3  0824               	movf	?___aodiv+4,w
  5266  03B4  00C8               	movwf	dtoa@n+4
  5267  03B5  0825               	movf	?___aodiv+5,w
  5268  03B6  00C9               	movwf	dtoa@n+5
  5269  03B7  0826               	movf	?___aodiv+6,w
  5270  03B8  00CA               	movwf	dtoa@n+6
  5271  03B9  0827               	movf	?___aodiv+7,w
  5272  03BA  00CB               	movwf	dtoa@n+7
  5273  03BB                     l1012:	
  5274                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 318:     }
  5275                           
  5276                           
  5277                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 312:     while (!
      +                          (i < 1) && (n || (0 < p) || ((0 < w) && (flags & (1 << 1))))) {
  5278  03BB  0020               	movlb	0	; select bank0
  5279  03BC  084D               	movf	dtoa@i+1,w
  5280  03BD  3A80               	xorlw	128
  5281  03BE  00B8               	movwf	??_dtoa
  5282  03BF  3080               	movlw	128
  5283  03C0  0238               	subwf	??_dtoa,w
  5284  03C1  1D03               	skipz
  5285  03C2  2BC5               	goto	u2395
  5286  03C3  3001               	movlw	1
  5287  03C4  024C               	subwf	dtoa@i,w
  5288  03C5                     u2395:
  5289  03C5  1C03               	skipc
  5290  03C6  2BC8               	goto	u2391
  5291  03C7  2BC9               	goto	u2390
  5292  03C8                     u2391:
  5293  03C8  2BF6               	goto	l2495
  5294  03C9                     u2390:
  5295  03C9                     l2487:
  5296  03C9  0020               	movlb	0	; select bank0
  5297  03CA  0844               	movf	dtoa@n,w
  5298  03CB  0445               	iorwf	dtoa@n+1,w
  5299  03CC  0446               	iorwf	dtoa@n+2,w
  5300  03CD  0447               	iorwf	dtoa@n+3,w
  5301  03CE  0448               	iorwf	dtoa@n+4,w
  5302  03CF  0449               	iorwf	dtoa@n+5,w
  5303  03D0  044A               	iorwf	dtoa@n+6,w
  5304  03D1  044B               	iorwf	dtoa@n+7,w
  5305  03D2  1D03               	skipz
  5306  03D3  2BD5               	goto	u2401
  5307  03D4  2BD6               	goto	u2400
  5308  03D5                     u2401:
  5309  03D5  2B52               	goto	l2477
  5310  03D6                     u2400:
  5311  03D6                     l2489:
  5312  03D6  083E               	movf	dtoa@p+1,w
  5313  03D7  3A80               	xorlw	128
  5314  03D8  00B8               	movwf	??_dtoa
  5315  03D9  3080               	movlw	128
  5316  03DA  0238               	subwf	??_dtoa,w
  5317  03DB  1D03               	skipz
  5318  03DC  2BDF               	goto	u2415
  5319  03DD  3001               	movlw	1
  5320  03DE  023D               	subwf	dtoa@p,w
  5321  03DF                     u2415:
  5322  03DF  1803               	skipnc
  5323  03E0  2BE2               	goto	u2411
  5324  03E1  2BE3               	goto	u2410
  5325  03E2                     u2411:
  5326  03E2  2B52               	goto	l2477
  5327  03E3                     u2410:
  5328  03E3                     l2491:
  5329  03E3  0020               	movlb	0	; select bank0
  5330  03E4  0841               	movf	dtoa@w+1,w
  5331  03E5  3A80               	xorlw	128
  5332  03E6  00B8               	movwf	??_dtoa
  5333  03E7  3080               	movlw	128
  5334  03E8  0238               	subwf	??_dtoa,w
  5335  03E9  1D03               	skipz
  5336  03EA  2BED               	goto	u2425
  5337  03EB  3001               	movlw	1
  5338  03EC  0240               	subwf	dtoa@w,w
  5339  03ED                     u2425:
  5340  03ED  1C03               	skipc
  5341  03EE  2BF0               	goto	u2421
  5342  03EF  2BF1               	goto	u2420
  5343  03F0                     u2421:
  5344  03F0  2BF6               	goto	l2495
  5345  03F1                     u2420:
  5346  03F1                     l2493:
  5347  03F1  0021               	movlb	1	; select bank1
  5348  03F2  18ED               	btfsc	_flags^(0+128),1
  5349  03F3  2BF5               	goto	u2431
  5350  03F4  2BF6               	goto	u2430
  5351  03F5                     u2431:
  5352  03F5  2B52               	goto	l2477
  5353  03F6                     u2430:
  5354  03F6                     l2495:
  5355                           
  5356                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 321:     if (s ||
      +                           (flags & (1 << 2))) {
  5357  03F6  0020               	movlb	0	; select bank0
  5358  03F7  0842               	movf	dtoa@s,w
  5359  03F8  0443               	iorwf	dtoa@s+1,w
  5360  03F9  1D03               	btfss	3,2
  5361  03FA  2BFC               	goto	u2441
  5362  03FB  2BFD               	goto	u2440
  5363  03FC                     u2441:
  5364  03FC  2C02               	goto	l2499
  5365  03FD                     u2440:
  5366  03FD                     l2497:
  5367  03FD  0021               	movlb	1	; select bank1
  5368  03FE  1D6D               	btfss	_flags^(0+128),2
  5369  03FF  2C01               	goto	u2451
  5370  0400  2C02               	goto	u2450
  5371  0401                     u2451:
  5372  0401  2C1F               	goto	l2509
  5373  0402                     u2450:
  5374  0402                     l2499:
  5375                           
  5376                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 322:         --i;
  5377  0402  30FF               	movlw	255
  5378  0403  0020               	movlb	0	; select bank0
  5379  0404  07CC               	addwf	dtoa@i,f
  5380  0405  30FF               	movlw	255
  5381  0406  3DCD               	addwfc	dtoa@i+1,f
  5382  0407                     l2501:
  5383                           
  5384                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 323:         dbuf
      +                          [i] = s ? '-' : '+';
  5385  0407  0842               	movf	dtoa@s,w
  5386  0408  0443               	iorwf	dtoa@s+1,w
  5387  0409  1D03               	btfss	3,2
  5388  040A  2C0C               	goto	u2461
  5389  040B  2C0D               	goto	u2460
  5390  040C                     u2461:
  5391  040C  2C12               	goto	l2505
  5392  040D                     u2460:
  5393  040D                     l2503:
  5394  040D  302B               	movlw	43
  5395  040E  00BB               	movwf	_dtoa$1179
  5396  040F  3000               	movlw	0
  5397  0410  00BC               	movwf	_dtoa$1179+1
  5398  0411  2C16               	goto	l2507
  5399  0412                     l2505:
  5400  0412  302D               	movlw	45
  5401  0413  00BB               	movwf	_dtoa$1179
  5402  0414  3000               	movlw	0
  5403  0415  00BC               	movwf	_dtoa$1179+1
  5404  0416                     l2507:
  5405  0416  083B               	movf	_dtoa$1179,w
  5406  0417  00B8               	movwf	??_dtoa
  5407  0418  084C               	movf	dtoa@i,w
  5408  0419  3E2F               	addlw	(low (_dbuf| (0+256)))& (0+255)
  5409  041A  0086               	movwf	6
  5410  041B  3001               	movlw	1	; select bank2/3
  5411  041C  0087               	movwf	7
  5412  041D  0838               	movf	??_dtoa,w
  5413  041E  0081               	movwf	1
  5414  041F                     l2509:
  5415                           
  5416                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 327:     return p
      +                          ad(fp, &dbuf[i], w);
  5417  041F  0020               	movlb	0	; select bank0
  5418  0420  084C               	movf	dtoa@i,w
  5419  0421  3E2F               	addlw	(low (_dbuf| (0+256)))& (0+255)
  5420  0422  00B8               	movwf	??_dtoa
  5421  0423  0838               	movf	??_dtoa,w
  5422  0424  00A4               	movwf	pad@buf
  5423  0425  0841               	movf	dtoa@w+1,w
  5424  0426  00A6               	movwf	pad@p+1
  5425  0427  0840               	movf	dtoa@w,w
  5426  0428  00A5               	movwf	pad@p
  5427  0429  083F               	movf	dtoa@fp,w
  5428  042A  3188  2038  3182   	fcall	_pad
  5429  042D  0020               	movlb	0	; select bank0
  5430  042E  0825               	movf	?_pad+1,w
  5431  042F  00B1               	movwf	?_dtoa+1
  5432  0430  0824               	movf	?_pad,w
  5433  0431  00B0               	movwf	?_dtoa
  5434  0432                     l1026:
  5435  0432  0008               	return
  5436  0433                     __end_of_dtoa:
  5437                           
  5438                           	psect	text11
  5439  0838                     __ptext11:	
  5440 ;; *************** function _pad *****************
  5441 ;; Defined at:
  5442 ;;		line 72 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c"
  5443 ;; Parameters:    Size  Location     Type
  5444 ;;  fp              1    wreg     PTR struct _IO_FILE
  5445 ;;		 -> sprintf@f(5), 
  5446 ;;  buf             1    4[BANK0 ] PTR unsigned char 
  5447 ;;		 -> dbuf(32), 
  5448 ;;  p               2    5[BANK0 ] int 
  5449 ;; Auto vars:     Size  Location     Type
  5450 ;;  fp              1   11[BANK0 ] PTR struct _IO_FILE
  5451 ;;		 -> sprintf@f(5), 
  5452 ;;  w               2    9[BANK0 ] int 
  5453 ;;  i               2    7[BANK0 ] int 
  5454 ;; Return value:  Size  Location     Type
  5455 ;;                  2    4[BANK0 ] int 
  5456 ;; Registers used:
  5457 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  5458 ;; Tracked objects:
  5459 ;;		On entry : 0/0
  5460 ;;		On exit  : 0/0
  5461 ;;		Unchanged: 0/0
  5462 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  5463 ;;      Params:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5464 ;;      Locals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5465 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5466 ;;      Totals:         1       8       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5467 ;;Total ram usage:        9 bytes
  5468 ;; Hardware stack levels used: 1
  5469 ;; Hardware stack levels required when called: 3
  5470 ;; This function calls:
  5471 ;;		_fputc
  5472 ;;		_fputs
  5473 ;;		_strlen
  5474 ;; This function is called by:
  5475 ;;		_dtoa
  5476 ;;		_utoa
  5477 ;; This function uses a non-reentrant model
  5478 ;;
  5479                           
  5480                           
  5481                           ;psect for function _pad
  5482  0838                     _pad:
  5483                           
  5484                           ;incstack = 0
  5485                           ; Regs used in _pad: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  5486                           ;pad@fp stored from wreg
  5487  0838  0020               	movlb	0	; select bank0
  5488  0839  00AB               	movwf	pad@fp
  5489  083A                     l2419:
  5490                           
  5491                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 72: static int pa
      +                          d(FILE *fp, char *buf, int p);C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\commo
      +                          n\doprnt.c: 73: {;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 
      +                          74:     int i, w;;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 
      +                          77:     if (flags & (1 << 0)) {
  5492  083A  0021               	movlb	1	; select bank1
  5493  083B  1C6D               	btfss	_flags^(0+128),0
  5494  083C  283E               	goto	u2261
  5495  083D  283F               	goto	u2260
  5496  083E                     u2261:
  5497  083E  2848               	goto	l2423
  5498  083F                     u2260:
  5499  083F                     l2421:
  5500                           
  5501                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 78:         fputs
      +                          ((const char *)buf, fp);
  5502  083F  0020               	movlb	0	; select bank0
  5503  0840  082B               	movf	pad@fp,w
  5504  0841  00FC               	movwf	??_pad
  5505  0842  087C               	movf	??_pad,w
  5506  0843  00F8               	movwf	fputs@fp
  5507  0844  0824               	movf	pad@buf,w
  5508  0845  3188  200F  3188   	fcall	_fputs
  5509  0848                     l2423:
  5510                           
  5511                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 82:     w = (p < 
      +                          0) ? 0 : p;
  5512  0848  0020               	movlb	0	; select bank0
  5513  0849  1BA6               	btfsc	pad@p+1,7
  5514  084A  284C               	goto	u2271
  5515  084B  284D               	goto	u2270
  5516  084C                     u2271:
  5517  084C  2852               	goto	l2427
  5518  084D                     u2270:
  5519  084D                     l2425:
  5520  084D  0826               	movf	pad@p+1,w
  5521  084E  00AA               	movwf	pad@w+1
  5522  084F  0825               	movf	pad@p,w
  5523  0850  00A9               	movwf	pad@w
  5524  0851  2854               	goto	l995
  5525  0852                     l2427:
  5526  0852  01A9               	clrf	pad@w
  5527  0853  01AA               	clrf	pad@w+1
  5528  0854                     l995:
  5529                           
  5530                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 83:     i = 0;
  5531  0854  01A7               	clrf	pad@i
  5532  0855  01A8               	clrf	pad@i+1
  5533                           
  5534                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 84:     while (i 
      +                          < w) {
  5535  0856  2868               	goto	l2433
  5536  0857                     l2429:
  5537                           
  5538                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 85:         fputc
      +                          (' ', fp);
  5539  0857  3020               	movlw	32
  5540  0858  00F0               	movwf	fputc@c
  5541  0859  3000               	movlw	0
  5542  085A  00F1               	movwf	fputc@c+1
  5543  085B  0020               	movlb	0	; select bank0
  5544  085C  082B               	movf	pad@fp,w
  5545  085D  00FC               	movwf	??_pad
  5546  085E  087C               	movf	??_pad,w
  5547  085F  00F2               	movwf	fputc@fp
  5548  0860  3197  275A  3188   	fcall	_fputc
  5549  0863                     l2431:
  5550                           
  5551                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 86:         ++i;
  5552  0863  3001               	movlw	1
  5553  0864  0020               	movlb	0	; select bank0
  5554  0865  07A7               	addwf	pad@i,f
  5555  0866  3000               	movlw	0
  5556  0867  3DA8               	addwfc	pad@i+1,f
  5557  0868                     l2433:
  5558                           
  5559                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 84:     while (i 
      +                          < w) {
  5560  0868  0828               	movf	pad@i+1,w
  5561  0869  3A80               	xorlw	128
  5562  086A  00FC               	movwf	??_pad
  5563  086B  082A               	movf	pad@w+1,w
  5564  086C  3A80               	xorlw	128
  5565  086D  027C               	subwf	??_pad,w
  5566  086E  1D03               	skipz
  5567  086F  2872               	goto	u2285
  5568  0870  0829               	movf	pad@w,w
  5569  0871  0227               	subwf	pad@i,w
  5570  0872                     u2285:
  5571  0872  1C03               	skipc
  5572  0873  2875               	goto	u2281
  5573  0874  2876               	goto	u2280
  5574  0875                     u2281:
  5575  0875  2857               	goto	l2429
  5576  0876                     u2280:
  5577  0876                     l998:
  5578                           
  5579                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 90:     if (!(fla
      +                          gs & (1 << 0))) {
  5580  0876  0021               	movlb	1	; select bank1
  5581  0877  186D               	btfsc	_flags^(0+128),0
  5582  0878  287A               	goto	u2291
  5583  0879  287B               	goto	u2290
  5584  087A                     u2291:
  5585  087A  2884               	goto	l2437
  5586  087B                     u2290:
  5587  087B                     l2435:
  5588                           
  5589                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 91:         fputs
      +                          ((const char *)buf, fp);
  5590  087B  0020               	movlb	0	; select bank0
  5591  087C  082B               	movf	pad@fp,w
  5592  087D  00FC               	movwf	??_pad
  5593  087E  087C               	movf	??_pad,w
  5594  087F  00F8               	movwf	fputs@fp
  5595  0880  0824               	movf	pad@buf,w
  5596  0881  3188  200F  3188   	fcall	_fputs
  5597  0884                     l2437:
  5598                           
  5599                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 94:     return (i
      +                          nt)(strlen(buf) + (size_t)w);
  5600  0884  0020               	movlb	0	; select bank0
  5601  0885  0824               	movf	pad@buf,w
  5602  0886  3195  25D2  3188   	fcall	_strlen
  5603  0889  0020               	movlb	0	; select bank0
  5604  088A  0829               	movf	pad@w,w
  5605  088B  0770               	addwf	?_strlen,w
  5606  088C  00A4               	movwf	?_pad
  5607  088D  082A               	movf	pad@w+1,w
  5608  088E  3D71               	addwfc	?_strlen+1,w
  5609  088F  00A5               	movwf	?_pad+1
  5610  0890                     l1000:
  5611  0890  0008               	return
  5612  0891                     __end_of_pad:
  5613                           
  5614                           	psect	text12
  5615  15D2                     __ptext12:	
  5616 ;; *************** function _strlen *****************
  5617 ;; Defined at:
  5618 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\strlen.c"
  5619 ;; Parameters:    Size  Location     Type
  5620 ;;  s               1    wreg     PTR const unsigned char 
  5621 ;;		 -> dbuf(32), 
  5622 ;; Auto vars:     Size  Location     Type
  5623 ;;  s               1    4[COMMON] PTR const unsigned char 
  5624 ;;		 -> dbuf(32), 
  5625 ;;  a               1    3[COMMON] PTR const unsigned char 
  5626 ;;		 -> dbuf(32), 
  5627 ;; Return value:  Size  Location     Type
  5628 ;;                  2    0[COMMON] unsigned int 
  5629 ;; Registers used:
  5630 ;;		wreg, fsr1l, fsr1h, status,2, status,0
  5631 ;; Tracked objects:
  5632 ;;		On entry : 0/0
  5633 ;;		On exit  : 0/0
  5634 ;;		Unchanged: 0/0
  5635 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  5636 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5637 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5638 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5639 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5640 ;;Total ram usage:        5 bytes
  5641 ;; Hardware stack levels used: 1
  5642 ;; This function calls:
  5643 ;;		Nothing
  5644 ;; This function is called by:
  5645 ;;		_pad
  5646 ;; This function uses a non-reentrant model
  5647 ;;
  5648                           
  5649                           
  5650                           ;psect for function _strlen
  5651  15D2                     _strlen:
  5652                           
  5653                           ;incstack = 0
  5654                           ; Regs used in _strlen: [wreg+fsr1l+fsr1h+status,2+status,0]
  5655                           ;strlen@s stored from wreg
  5656  15D2  00F4               	movwf	strlen@s
  5657  15D3                     l2293:
  5658  15D3  0874               	movf	strlen@s,w
  5659  15D4  00F2               	movwf	??_strlen
  5660  15D5  0872               	movf	??_strlen,w
  5661  15D6  00F3               	movwf	strlen@a
  5662  15D7  2DDC               	goto	l2297
  5663  15D8                     l2295:
  5664  15D8  3001               	movlw	1
  5665  15D9  00F2               	movwf	??_strlen
  5666  15DA  0872               	movf	??_strlen,w
  5667  15DB  07F4               	addwf	strlen@s,f
  5668  15DC                     l2297:
  5669  15DC  0874               	movf	strlen@s,w
  5670  15DD  0086               	movwf	6
  5671  15DE  3001               	movlw	1	; select bank2/3
  5672  15DF  0087               	movwf	7
  5673  15E0  0801               	movf	1,w
  5674  15E1  1D03               	btfss	3,2
  5675  15E2  2DE4               	goto	u1911
  5676  15E3  2DE5               	goto	u1910
  5677  15E4                     u1911:
  5678  15E4  2DD8               	goto	l2295
  5679  15E5                     u1910:
  5680  15E5                     l2299:
  5681  15E5  0873               	movf	strlen@a,w
  5682  15E6  0274               	subwf	strlen@s,w
  5683  15E7  00F0               	movwf	?_strlen
  5684  15E8  01F1               	clrf	?_strlen+1
  5685  15E9  1BF0               	btfsc	?_strlen,7
  5686  15EA  03F1               	decf	?_strlen+1,f
  5687  15EB                     l1096:
  5688  15EB  0008               	return
  5689  15EC                     __end_of_strlen:
  5690                           
  5691                           	psect	text13
  5692  080F                     __ptext13:	
  5693 ;; *************** function _fputs *****************
  5694 ;; Defined at:
  5695 ;;		line 8 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\nf_fputs.c"
  5696 ;; Parameters:    Size  Location     Type
  5697 ;;  s               1    wreg     PTR const unsigned char 
  5698 ;;		 -> dbuf(32), 
  5699 ;;  fp              1    8[COMMON] PTR struct _IO_FILE
  5700 ;;		 -> sprintf@f(5), 
  5701 ;; Auto vars:     Size  Location     Type
  5702 ;;  s               1    3[BANK0 ] PTR const unsigned char 
  5703 ;;		 -> dbuf(32), 
  5704 ;;  i               2    1[BANK0 ] int 
  5705 ;;  c               1    0[BANK0 ] unsigned char 
  5706 ;; Return value:  Size  Location     Type
  5707 ;;                  2    8[COMMON] int 
  5708 ;; Registers used:
  5709 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  5710 ;; Tracked objects:
  5711 ;;		On entry : 0/0
  5712 ;;		On exit  : 0/0
  5713 ;;		Unchanged: 0/0
  5714 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  5715 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5716 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5717 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5718 ;;      Totals:         4       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5719 ;;Total ram usage:        8 bytes
  5720 ;; Hardware stack levels used: 1
  5721 ;; Hardware stack levels required when called: 2
  5722 ;; This function calls:
  5723 ;;		_fputc
  5724 ;; This function is called by:
  5725 ;;		_pad
  5726 ;; This function uses a non-reentrant model
  5727 ;;
  5728                           
  5729                           
  5730                           ;psect for function _fputs
  5731  080F                     _fputs:
  5732                           
  5733                           ;incstack = 0
  5734                           ; Regs used in _fputs: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  5735                           ;fputs@s stored from wreg
  5736  080F  0020               	movlb	0	; select bank0
  5737  0810  00A3               	movwf	fputs@s
  5738  0811                     l2285:
  5739  0811  01A1               	clrf	fputs@i
  5740  0812  01A2               	clrf	fputs@i+1
  5741  0813  2827               	goto	l2291
  5742  0814                     l2287:
  5743  0814  0820               	movf	fputs@c,w
  5744  0815  00F9               	movwf	??_fputs
  5745  0816  01FA               	clrf	??_fputs+1
  5746  0817  0879               	movf	??_fputs,w
  5747  0818  00F0               	movwf	fputc@c
  5748  0819  087A               	movf	??_fputs+1,w
  5749  081A  00F1               	movwf	fputc@c+1
  5750  081B  0878               	movf	fputs@fp,w
  5751  081C  00FB               	movwf	??_fputs+2
  5752  081D  087B               	movf	??_fputs+2,w
  5753  081E  00F2               	movwf	fputc@fp
  5754  081F  3197  275A  3188   	fcall	_fputc
  5755  0822                     l2289:
  5756  0822  3001               	movlw	1
  5757  0823  0020               	movlb	0	; select bank0
  5758  0824  07A1               	addwf	fputs@i,f
  5759  0825  3000               	movlw	0
  5760  0826  3DA2               	addwfc	fputs@i+1,f
  5761  0827                     l2291:
  5762  0827  0821               	movf	fputs@i,w
  5763  0828  0723               	addwf	fputs@s,w
  5764  0829  00F9               	movwf	??_fputs
  5765  082A  0879               	movf	??_fputs,w
  5766  082B  0086               	movwf	6
  5767  082C  3001               	movlw	1	; select bank2/3
  5768  082D  0087               	movwf	7
  5769  082E  0801               	movf	1,w
  5770  082F  00FA               	movwf	??_fputs+1
  5771  0830  087A               	movf	??_fputs+1,w
  5772  0831  00A0               	movwf	fputs@c
  5773  0832  0820               	movf	fputs@c,w
  5774  0833  1D03               	btfss	3,2
  5775  0834  2836               	goto	u1901
  5776  0835  2837               	goto	u1900
  5777  0836                     u1901:
  5778  0836  2814               	goto	l2287
  5779  0837                     u1900:
  5780  0837                     l1087:
  5781  0837  0008               	return
  5782  0838                     __end_of_fputs:
  5783                           
  5784                           	psect	text14
  5785  175A                     __ptext14:	
  5786 ;; *************** function _fputc *****************
  5787 ;; Defined at:
  5788 ;;		line 8 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\nf_fputc.c"
  5789 ;; Parameters:    Size  Location     Type
  5790 ;;  c               2    0[COMMON] int 
  5791 ;;  fp              1    2[COMMON] PTR struct _IO_FILE
  5792 ;;		 -> sprintf@f(5), 
  5793 ;; Auto vars:     Size  Location     Type
  5794 ;;		None
  5795 ;; Return value:  Size  Location     Type
  5796 ;;                  2    0[COMMON] int 
  5797 ;; Registers used:
  5798 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  5799 ;; Tracked objects:
  5800 ;;		On entry : 0/0
  5801 ;;		On exit  : 0/0
  5802 ;;		Unchanged: 0/0
  5803 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  5804 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5805 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5806 ;;      Temps:          5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5807 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5808 ;;Total ram usage:        8 bytes
  5809 ;; Hardware stack levels used: 1
  5810 ;; Hardware stack levels required when called: 1
  5811 ;; This function calls:
  5812 ;;		_putch
  5813 ;; This function is called by:
  5814 ;;		_pad
  5815 ;;		_vfpfcnvrt
  5816 ;;		_fputs
  5817 ;; This function uses a non-reentrant model
  5818 ;;
  5819                           
  5820                           
  5821                           ;psect for function _fputc
  5822  175A                     _fputc:
  5823  175A                     l2263:	
  5824                           ;incstack = 0
  5825                           ; Regs used in _fputc: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  5826                           
  5827  175A  0872               	movf	fputc@fp,w
  5828  175B  1903               	btfsc	3,2
  5829  175C  2F5E               	goto	u1841
  5830  175D  2F5F               	goto	u1840
  5831  175E                     u1841:
  5832  175E  2F64               	goto	l2267
  5833  175F                     u1840:
  5834  175F                     l2265:
  5835  175F  0872               	movf	fputc@fp,w
  5836  1760  1D03               	btfss	3,2
  5837  1761  2F63               	goto	u1851
  5838  1762  2F64               	goto	u1850
  5839  1763                     u1851:
  5840  1763  2F69               	goto	l2269
  5841  1764                     u1850:
  5842  1764                     l2267:
  5843  1764  0870               	movf	fputc@c,w
  5844  1765  3180  2006  3197   	fcall	_putch
  5845  1768  2FA8               	goto	l1079
  5846  1769                     l2269:
  5847  1769  0872               	movf	fputc@fp,w
  5848  176A  3E03               	addlw	3
  5849  176B  0086               	movwf	6
  5850  176C  0187               	clrf	7
  5851  176D  0016               	moviw fsr1++
  5852  176E  0401               	iorwf	1,w
  5853  176F  1903               	btfsc	3,2
  5854  1770  2F72               	goto	u1861
  5855  1771  2F73               	goto	u1860
  5856  1772                     u1861:
  5857  1772  2F90               	goto	l2273
  5858  1773                     u1860:
  5859  1773                     l2271:
  5860  1773  0872               	movf	fputc@fp,w
  5861  1774  3E03               	addlw	3
  5862  1775  0086               	movwf	6
  5863  1776  0187               	clrf	7
  5864  1777  3F40               	moviw [0]fsr1
  5865  1778  00F3               	movwf	??_fputc
  5866  1779  3F41               	moviw [1]fsr1
  5867  177A  00F4               	movwf	??_fputc+1
  5868  177B  0A72               	incf	fputc@fp,w
  5869  177C  0086               	movwf	6
  5870  177D  0187               	clrf	7
  5871  177E  3F40               	moviw [0]fsr1
  5872  177F  00F5               	movwf	??_fputc+2
  5873  1780  3F41               	moviw [1]fsr1
  5874  1781  00F6               	movwf	??_fputc+3
  5875  1782  0876               	movf	??_fputc+3,w
  5876  1783  3A80               	xorlw	128
  5877  1784  00F7               	movwf	??_fputc+4
  5878  1785  0874               	movf	??_fputc+1,w
  5879  1786  3A80               	xorlw	128
  5880  1787  0277               	subwf	??_fputc+4,w
  5881  1788  1D03               	skipz
  5882  1789  2F8C               	goto	u1875
  5883  178A  0873               	movf	??_fputc,w
  5884  178B  0275               	subwf	??_fputc+2,w
  5885  178C                     u1875:
  5886  178C  1803               	skipnc
  5887  178D  2F8F               	goto	u1871
  5888  178E  2F90               	goto	u1870
  5889  178F                     u1871:
  5890  178F  2FA8               	goto	l1079
  5891  1790                     u1870:
  5892  1790                     l2273:
  5893  1790  0870               	movf	fputc@c,w
  5894  1791  00F3               	movwf	??_fputc
  5895  1792  0872               	movf	fputc@fp,w
  5896  1793  0086               	movwf	6
  5897  1794  0187               	clrf	7
  5898  1795  0A72               	incf	fputc@fp,w
  5899  1796  0084               	movwf	4
  5900  1797  0185               	clrf	5
  5901  1798  0800               	movf	0,w
  5902  1799  0701               	addwf	1,w
  5903  179A  00F4               	movwf	??_fputc+1
  5904  179B  0874               	movf	??_fputc+1,w
  5905  179C  0086               	movwf	6
  5906  179D  0187               	clrf	7
  5907  179E  0873               	movf	??_fputc,w
  5908  179F  0081               	movwf	1
  5909  17A0                     l2275:
  5910  17A0  0A72               	incf	fputc@fp,w
  5911  17A1  0086               	movwf	6
  5912  17A2  0187               	clrf	7
  5913  17A3  3001               	movlw	1
  5914  17A4  0781               	addwf	1,f
  5915  17A5  3141               	addfsr 1,1
  5916  17A6  1803               	skipnc
  5917  17A7  0A81               	incf	1,f
  5918  17A8                     l1079:
  5919  17A8  0008               	return
  5920  17A9                     __end_of_fputc:
  5921                           
  5922                           	psect	text15
  5923  0006                     __ptext15:	
  5924 ;; *************** function _putch *****************
  5925 ;; Defined at:
  5926 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\putch.c"
  5927 ;; Parameters:    Size  Location     Type
  5928 ;;  c               1    wreg     unsigned char 
  5929 ;; Auto vars:     Size  Location     Type
  5930 ;;  c               1    0[COMMON] unsigned char 
  5931 ;; Return value:  Size  Location     Type
  5932 ;;                  1    wreg      void 
  5933 ;; Registers used:
  5934 ;;		wreg
  5935 ;; Tracked objects:
  5936 ;;		On entry : 0/0
  5937 ;;		On exit  : 0/0
  5938 ;;		Unchanged: 0/0
  5939 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  5940 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5941 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5942 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5943 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5944 ;;Total ram usage:        0 bytes
  5945 ;; Hardware stack levels used: 1
  5946 ;; This function calls:
  5947 ;;		Nothing
  5948 ;; This function is called by:
  5949 ;;		_fputc
  5950 ;; This function uses a non-reentrant model
  5951 ;;
  5952                           
  5953                           
  5954                           ;psect for function _putch
  5955  0006                     _putch:
  5956  0006                     l1090:	
  5957                           ;incstack = 0
  5958                           ; Regs used in _putch: [wreg]
  5959                           
  5960  0006  0008               	return
  5961  0007                     __end_of_putch:
  5962                           
  5963                           	psect	text16
  5964  15B8                     __ptext16:	
  5965 ;; *************** function _abs *****************
  5966 ;; Defined at:
  5967 ;;		line 1 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\abs.c"
  5968 ;; Parameters:    Size  Location     Type
  5969 ;;  a               2    3[COMMON] int 
  5970 ;; Auto vars:     Size  Location     Type
  5971 ;;		None
  5972 ;; Return value:  Size  Location     Type
  5973 ;;                  2    3[COMMON] int 
  5974 ;; Registers used:
  5975 ;;		wreg, status,2, status,0
  5976 ;; Tracked objects:
  5977 ;;		On entry : 0/0
  5978 ;;		On exit  : 0/0
  5979 ;;		Unchanged: 0/0
  5980 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  5981 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5982 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5983 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5984 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5985 ;;Total ram usage:        4 bytes
  5986 ;; Hardware stack levels used: 1
  5987 ;; This function calls:
  5988 ;;		Nothing
  5989 ;; This function is called by:
  5990 ;;		_dtoa
  5991 ;; This function uses a non-reentrant model
  5992 ;;
  5993                           
  5994                           
  5995                           ;psect for function _abs
  5996  15B8                     _abs:
  5997  15B8                     l2441:	
  5998                           ;incstack = 0
  5999                           ; Regs used in _abs: [wreg+status,2+status,0]
  6000                           
  6001  15B8  0874               	movf	abs@a+1,w
  6002  15B9  3A80               	xorlw	128
  6003  15BA  00F5               	movwf	??_abs
  6004  15BB  3080               	movlw	128
  6005  15BC  0275               	subwf	??_abs,w
  6006  15BD  1D03               	skipz
  6007  15BE  2DC1               	goto	u2305
  6008  15BF  3001               	movlw	1
  6009  15C0  0273               	subwf	abs@a,w
  6010  15C1                     u2305:
  6011  15C1  1803               	skipnc
  6012  15C2  2DC4               	goto	u2301
  6013  15C3  2DC5               	goto	u2300
  6014  15C4                     u2301:
  6015  15C4  2DD1               	goto	l1064
  6016  15C5                     u2300:
  6017  15C5                     l2443:
  6018  15C5  0973               	comf	abs@a,w
  6019  15C6  00F5               	movwf	??_abs
  6020  15C7  0974               	comf	abs@a+1,w
  6021  15C8  00F6               	movwf	??_abs+1
  6022  15C9  0AF5               	incf	??_abs,f
  6023  15CA  1903               	skipnz
  6024  15CB  0AF6               	incf	??_abs+1,f
  6025  15CC  0875               	movf	??_abs,w
  6026  15CD  00F3               	movwf	?_abs
  6027  15CE  0876               	movf	??_abs+1,w
  6028  15CF  00F4               	movwf	?_abs+1
  6029  15D0  2DD1               	goto	l1067
  6030  15D1                     l1064:
  6031  15D1                     l1067:
  6032  15D1  0008               	return
  6033  15D2                     __end_of_abs:
  6034                           
  6035                           	psect	text17
  6036  0F16                     __ptext17:	
  6037 ;; *************** function ___aomod *****************
  6038 ;; Defined at:
  6039 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\aomod.c"
  6040 ;; Parameters:    Size  Location     Type
  6041 ;;  divisor         8    0[BANK0 ] long long 
  6042 ;;  dividend        8    8[BANK0 ] long long 
  6043 ;; Auto vars:     Size  Location     Type
  6044 ;;  sign            1    2[COMMON] unsigned char 
  6045 ;;  counter         1    1[COMMON] unsigned char 
  6046 ;; Return value:  Size  Location     Type
  6047 ;;                  8    0[BANK0 ] long long 
  6048 ;; Registers used:
  6049 ;;		wreg, fsr1l, fsr1h, status,2, status,0
  6050 ;; Tracked objects:
  6051 ;;		On entry : 0/0
  6052 ;;		On exit  : 0/0
  6053 ;;		Unchanged: 0/0
  6054 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  6055 ;;      Params:         0      16       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6056 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6057 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6058 ;;      Totals:         3      16       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6059 ;;Total ram usage:       19 bytes
  6060 ;; Hardware stack levels used: 1
  6061 ;; This function calls:
  6062 ;;		Nothing
  6063 ;; This function is called by:
  6064 ;;		_dtoa
  6065 ;; This function uses a non-reentrant model
  6066 ;;
  6067                           
  6068                           
  6069                           ;psect for function ___aomod
  6070  0F16                     ___aomod:
  6071  0F16                     l2351:	
  6072                           ;incstack = 0
  6073                           ; Regs used in ___aomod: [wreg+fsr1l+fsr1h+status,2+status,0]
  6074                           
  6075  0F16  01F2               	clrf	___aomod@sign
  6076  0F17                     l2353:
  6077  0F17  3028               	movlw	low ___aomod@dividend
  6078  0F18  0086               	movwf	6
  6079  0F19  3000               	movlw	high ___aomod@dividend
  6080  0F1A  0087               	movwf	7
  6081  0F1B  3F47               	moviw [7]fsr1
  6082  0F1C  00F0               	movwf	??___aomod
  6083  0F1D  1FF0               	btfss	??___aomod,7
  6084  0F1E  2F20               	goto	u2071
  6085  0F1F  2F21               	goto	u2070
  6086  0F20                     u2071:
  6087  0F20  2F42               	goto	l2357
  6088  0F21                     u2070:
  6089  0F21                     l2355:
  6090  0F21  0020               	movlb	0	; select bank0
  6091  0F22  09A8               	comf	___aomod@dividend,f
  6092  0F23  09A9               	comf	___aomod@dividend+1,f
  6093  0F24  09AA               	comf	___aomod@dividend+2,f
  6094  0F25  09AB               	comf	___aomod@dividend+3,f
  6095  0F26  09AC               	comf	___aomod@dividend+4,f
  6096  0F27  09AD               	comf	___aomod@dividend+5,f
  6097  0F28  09AE               	comf	___aomod@dividend+6,f
  6098  0F29  09AF               	comf	___aomod@dividend+7,f
  6099  0F2A  0AA8               	incf	___aomod@dividend,f
  6100  0F2B  1D03               	skipz
  6101  0F2C  2F40               	goto	u208lld
  6102  0F2D  0AA9               	incf	___aomod@dividend+1,f
  6103  0F2E  1D03               	skipz
  6104  0F2F  2F40               	goto	u208lld
  6105  0F30  0AAA               	incf	___aomod@dividend+2,f
  6106  0F31  1D03               	skipz
  6107  0F32  2F40               	goto	u208lld
  6108  0F33  0AAB               	incf	___aomod@dividend+3,f
  6109  0F34  1D03               	skipz
  6110  0F35  2F40               	goto	u208lld
  6111  0F36  0AAC               	incf	___aomod@dividend+4,f
  6112  0F37  1D03               	skipz
  6113  0F38  2F40               	goto	u208lld
  6114  0F39  0AAD               	incf	___aomod@dividend+5,f
  6115  0F3A  1D03               	skipz
  6116  0F3B  2F40               	goto	u208lld
  6117  0F3C  0AAE               	incf	___aomod@dividend+6,f
  6118  0F3D  1D03               	skipz
  6119  0F3E  2F40               	goto	u208lld
  6120  0F3F  0AAF               	incf	___aomod@dividend+7,f
  6121  0F40                     u208lld:
  6122  0F40  01F2               	clrf	___aomod@sign
  6123  0F41  0AF2               	incf	___aomod@sign,f
  6124  0F42                     l2357:
  6125  0F42  3020               	movlw	low ___aomod@divisor
  6126  0F43  0086               	movwf	6
  6127  0F44  3000               	movlw	high ___aomod@divisor
  6128  0F45  0087               	movwf	7
  6129  0F46  3F47               	moviw [7]fsr1
  6130  0F47  00F0               	movwf	??___aomod
  6131  0F48  1FF0               	btfss	??___aomod,7
  6132  0F49  2F4B               	goto	u2091
  6133  0F4A  2F4C               	goto	u2090
  6134  0F4B                     u2091:
  6135  0F4B  2F6B               	goto	l2361
  6136  0F4C                     u2090:
  6137  0F4C                     l2359:
  6138  0F4C  0020               	movlb	0	; select bank0
  6139  0F4D  09A0               	comf	___aomod@divisor,f
  6140  0F4E  09A1               	comf	___aomod@divisor+1,f
  6141  0F4F  09A2               	comf	___aomod@divisor+2,f
  6142  0F50  09A3               	comf	___aomod@divisor+3,f
  6143  0F51  09A4               	comf	___aomod@divisor+4,f
  6144  0F52  09A5               	comf	___aomod@divisor+5,f
  6145  0F53  09A6               	comf	___aomod@divisor+6,f
  6146  0F54  09A7               	comf	___aomod@divisor+7,f
  6147  0F55  0AA0               	incf	___aomod@divisor,f
  6148  0F56  1D03               	skipz
  6149  0F57  2F6B               	goto	u210lld
  6150  0F58  0AA1               	incf	___aomod@divisor+1,f
  6151  0F59  1D03               	skipz
  6152  0F5A  2F6B               	goto	u210lld
  6153  0F5B  0AA2               	incf	___aomod@divisor+2,f
  6154  0F5C  1D03               	skipz
  6155  0F5D  2F6B               	goto	u210lld
  6156  0F5E  0AA3               	incf	___aomod@divisor+3,f
  6157  0F5F  1D03               	skipz
  6158  0F60  2F6B               	goto	u210lld
  6159  0F61  0AA4               	incf	___aomod@divisor+4,f
  6160  0F62  1D03               	skipz
  6161  0F63  2F6B               	goto	u210lld
  6162  0F64  0AA5               	incf	___aomod@divisor+5,f
  6163  0F65  1D03               	skipz
  6164  0F66  2F6B               	goto	u210lld
  6165  0F67  0AA6               	incf	___aomod@divisor+6,f
  6166  0F68  1D03               	skipz
  6167  0F69  2F6B               	goto	u210lld
  6168  0F6A  0AA7               	incf	___aomod@divisor+7,f
  6169  0F6B                     u210lld:
  6170  0F6B                     l2361:
  6171  0F6B  0020               	movlb	0	; select bank0
  6172  0F6C  0820               	movf	___aomod@divisor,w
  6173  0F6D  0421               	iorwf	___aomod@divisor+1,w
  6174  0F6E  0422               	iorwf	___aomod@divisor+2,w
  6175  0F6F  0423               	iorwf	___aomod@divisor+3,w
  6176  0F70  0424               	iorwf	___aomod@divisor+4,w
  6177  0F71  0425               	iorwf	___aomod@divisor+5,w
  6178  0F72  0426               	iorwf	___aomod@divisor+6,w
  6179  0F73  0427               	iorwf	___aomod@divisor+7,w
  6180  0F74  1903               	skipnz
  6181  0F75  2F77               	goto	u2111
  6182  0F76  2F78               	goto	u2110
  6183  0F77                     u2111:
  6184  0F77  2FCB               	goto	l2377
  6185  0F78                     u2110:
  6186  0F78                     l2363:
  6187  0F78  01F1               	clrf	___aomod@counter
  6188  0F79  0AF1               	incf	___aomod@counter,f
  6189  0F7A  2F87               	goto	l2369
  6190  0F7B                     l2365:
  6191  0F7B  35A0               	lslf	___aomod@divisor,f
  6192  0F7C  0DA1               	rlf	___aomod@divisor+1,f
  6193  0F7D  0DA2               	rlf	___aomod@divisor+2,f
  6194  0F7E  0DA3               	rlf	___aomod@divisor+3,f
  6195  0F7F  0DA4               	rlf	___aomod@divisor+4,f
  6196  0F80  0DA5               	rlf	___aomod@divisor+5,f
  6197  0F81  0DA6               	rlf	___aomod@divisor+6,f
  6198  0F82  0DA7               	rlf	___aomod@divisor+7,f
  6199  0F83                     l2367:
  6200  0F83  3001               	movlw	1
  6201  0F84  00F0               	movwf	??___aomod
  6202  0F85  0870               	movf	??___aomod,w
  6203  0F86  07F1               	addwf	___aomod@counter,f
  6204  0F87                     l2369:
  6205  0F87  1FA7               	btfss	___aomod@divisor+7,7
  6206  0F88  2F8A               	goto	u2121
  6207  0F89  2F8B               	goto	u2120
  6208  0F8A                     u2121:
  6209  0F8A  2F7B               	goto	l2365
  6210  0F8B                     u2120:
  6211  0F8B                     l2371:
  6212  0F8B  0827               	movf	___aomod@divisor+7,w
  6213  0F8C  022F               	subwf	___aomod@dividend+7,w
  6214  0F8D  1D03               	skipz
  6215  0F8E  2FA9               	goto	u2135
  6216  0F8F  0826               	movf	___aomod@divisor+6,w
  6217  0F90  022E               	subwf	___aomod@dividend+6,w
  6218  0F91  1D03               	skipz
  6219  0F92  2FA9               	goto	u2135
  6220  0F93  0825               	movf	___aomod@divisor+5,w
  6221  0F94  022D               	subwf	___aomod@dividend+5,w
  6222  0F95  1D03               	skipz
  6223  0F96  2FA9               	goto	u2135
  6224  0F97  0824               	movf	___aomod@divisor+4,w
  6225  0F98  022C               	subwf	___aomod@dividend+4,w
  6226  0F99  1D03               	skipz
  6227  0F9A  2FA9               	goto	u2135
  6228  0F9B  0823               	movf	___aomod@divisor+3,w
  6229  0F9C  022B               	subwf	___aomod@dividend+3,w
  6230  0F9D  1D03               	skipz
  6231  0F9E  2FA9               	goto	u2135
  6232  0F9F  0822               	movf	___aomod@divisor+2,w
  6233  0FA0  022A               	subwf	___aomod@dividend+2,w
  6234  0FA1  1D03               	skipz
  6235  0FA2  2FA9               	goto	u2135
  6236  0FA3  0821               	movf	___aomod@divisor+1,w
  6237  0FA4  0229               	subwf	___aomod@dividend+1,w
  6238  0FA5  1D03               	skipz
  6239  0FA6  2FA9               	goto	u2135
  6240  0FA7  0820               	movf	___aomod@divisor,w
  6241  0FA8  0228               	subwf	___aomod@dividend,w
  6242  0FA9                     u2135:
  6243  0FA9  1C03               	skipc
  6244  0FAA  2FAC               	goto	u2131
  6245  0FAB  2FAD               	goto	u2130
  6246  0FAC                     u2131:
  6247  0FAC  2FBD               	goto	l2375
  6248  0FAD                     u2130:
  6249  0FAD                     l2373:
  6250  0FAD  0820               	movf	___aomod@divisor,w
  6251  0FAE  02A8               	subwf	___aomod@dividend,f
  6252  0FAF  0821               	movf	___aomod@divisor+1,w
  6253  0FB0  3BA9               	subwfb	___aomod@dividend+1,f
  6254  0FB1  0822               	movf	___aomod@divisor+2,w
  6255  0FB2  3BAA               	subwfb	___aomod@dividend+2,f
  6256  0FB3  0823               	movf	___aomod@divisor+3,w
  6257  0FB4  3BAB               	subwfb	___aomod@dividend+3,f
  6258  0FB5  0824               	movf	___aomod@divisor+4,w
  6259  0FB6  3BAC               	subwfb	___aomod@dividend+4,f
  6260  0FB7  0825               	movf	___aomod@divisor+5,w
  6261  0FB8  3BAD               	subwfb	___aomod@dividend+5,f
  6262  0FB9  0826               	movf	___aomod@divisor+6,w
  6263  0FBA  3BAE               	subwfb	___aomod@dividend+6,f
  6264  0FBB  0827               	movf	___aomod@divisor+7,w
  6265  0FBC  3BAF               	subwfb	___aomod@dividend+7,f
  6266  0FBD                     l2375:
  6267  0FBD  36A7               	lsrf	___aomod@divisor+7,f
  6268  0FBE  0CA6               	rrf	___aomod@divisor+6,f
  6269  0FBF  0CA5               	rrf	___aomod@divisor+5,f
  6270  0FC0  0CA4               	rrf	___aomod@divisor+4,f
  6271  0FC1  0CA3               	rrf	___aomod@divisor+3,f
  6272  0FC2  0CA2               	rrf	___aomod@divisor+2,f
  6273  0FC3  0CA1               	rrf	___aomod@divisor+1,f
  6274  0FC4  0CA0               	rrf	___aomod@divisor,f
  6275  0FC5  3001               	movlw	1
  6276  0FC6  02F1               	subwf	___aomod@counter,f
  6277  0FC7  1D03               	btfss	3,2
  6278  0FC8  2FCA               	goto	u2141
  6279  0FC9  2FCB               	goto	u2140
  6280  0FCA                     u2141:
  6281  0FCA  2F8B               	goto	l2371
  6282  0FCB                     u2140:
  6283  0FCB                     l2377:
  6284  0FCB  0872               	movf	___aomod@sign,w
  6285  0FCC  1903               	btfsc	3,2
  6286  0FCD  2FCF               	goto	u2151
  6287  0FCE  2FD0               	goto	u2150
  6288  0FCF                     u2151:
  6289  0FCF  2FEE               	goto	l616
  6290  0FD0                     u2150:
  6291  0FD0                     l2379:
  6292  0FD0  09A8               	comf	___aomod@dividend,f
  6293  0FD1  09A9               	comf	___aomod@dividend+1,f
  6294  0FD2  09AA               	comf	___aomod@dividend+2,f
  6295  0FD3  09AB               	comf	___aomod@dividend+3,f
  6296  0FD4  09AC               	comf	___aomod@dividend+4,f
  6297  0FD5  09AD               	comf	___aomod@dividend+5,f
  6298  0FD6  09AE               	comf	___aomod@dividend+6,f
  6299  0FD7  09AF               	comf	___aomod@dividend+7,f
  6300  0FD8  0AA8               	incf	___aomod@dividend,f
  6301  0FD9  1D03               	skipz
  6302  0FDA  2FEE               	goto	u216lld
  6303  0FDB  0AA9               	incf	___aomod@dividend+1,f
  6304  0FDC  1D03               	skipz
  6305  0FDD  2FEE               	goto	u216lld
  6306  0FDE  0AAA               	incf	___aomod@dividend+2,f
  6307  0FDF  1D03               	skipz
  6308  0FE0  2FEE               	goto	u216lld
  6309  0FE1  0AAB               	incf	___aomod@dividend+3,f
  6310  0FE2  1D03               	skipz
  6311  0FE3  2FEE               	goto	u216lld
  6312  0FE4  0AAC               	incf	___aomod@dividend+4,f
  6313  0FE5  1D03               	skipz
  6314  0FE6  2FEE               	goto	u216lld
  6315  0FE7  0AAD               	incf	___aomod@dividend+5,f
  6316  0FE8  1D03               	skipz
  6317  0FE9  2FEE               	goto	u216lld
  6318  0FEA  0AAE               	incf	___aomod@dividend+6,f
  6319  0FEB  1D03               	skipz
  6320  0FEC  2FEE               	goto	u216lld
  6321  0FED  0AAF               	incf	___aomod@dividend+7,f
  6322  0FEE                     u216lld:
  6323  0FEE                     l616:
  6324  0FEE  0020               	movlb	0	; select bank0
  6325  0FEF  0828               	movf	___aomod@dividend,w
  6326  0FF0  00A0               	movwf	?___aomod
  6327  0FF1  0829               	movf	___aomod@dividend+1,w
  6328  0FF2  00A1               	movwf	?___aomod+1
  6329  0FF3  082A               	movf	___aomod@dividend+2,w
  6330  0FF4  00A2               	movwf	?___aomod+2
  6331  0FF5  082B               	movf	___aomod@dividend+3,w
  6332  0FF6  00A3               	movwf	?___aomod+3
  6333  0FF7  082C               	movf	___aomod@dividend+4,w
  6334  0FF8  00A4               	movwf	?___aomod+4
  6335  0FF9  082D               	movf	___aomod@dividend+5,w
  6336  0FFA  00A5               	movwf	?___aomod+5
  6337  0FFB  082E               	movf	___aomod@dividend+6,w
  6338  0FFC  00A6               	movwf	?___aomod+6
  6339  0FFD  082F               	movf	___aomod@dividend+7,w
  6340  0FFE  00A7               	movwf	?___aomod+7
  6341  0FFF                     l617:
  6342  0FFF  0008               	return
  6343  1000                     __end_of___aomod:
  6344                           
  6345                           	psect	text18
  6346  01C0                     __ptext18:	
  6347 ;; *************** function ___aodiv *****************
  6348 ;; Defined at:
  6349 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\aodiv.c"
  6350 ;; Parameters:    Size  Location     Type
  6351 ;;  divisor         8    0[BANK0 ] long long 
  6352 ;;  dividend        8    8[BANK0 ] long long 
  6353 ;; Auto vars:     Size  Location     Type
  6354 ;;  quotient        8    3[COMMON] long long 
  6355 ;;  sign            1    2[COMMON] unsigned char 
  6356 ;;  counter         1    1[COMMON] unsigned char 
  6357 ;; Return value:  Size  Location     Type
  6358 ;;                  8    0[BANK0 ] long long 
  6359 ;; Registers used:
  6360 ;;		wreg, fsr1l, fsr1h, status,2, status,0
  6361 ;; Tracked objects:
  6362 ;;		On entry : 0/0
  6363 ;;		On exit  : 0/0
  6364 ;;		Unchanged: 0/0
  6365 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  6366 ;;      Params:         0      16       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6367 ;;      Locals:        10       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6368 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6369 ;;      Totals:        11      16       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6370 ;;Total ram usage:       27 bytes
  6371 ;; Hardware stack levels used: 1
  6372 ;; This function calls:
  6373 ;;		Nothing
  6374 ;; This function is called by:
  6375 ;;		_dtoa
  6376 ;; This function uses a non-reentrant model
  6377 ;;
  6378                           
  6379                           
  6380                           ;psect for function ___aodiv
  6381  01C0                     ___aodiv:
  6382  01C0                     l2313:	
  6383                           ;incstack = 0
  6384                           ; Regs used in ___aodiv: [wreg+fsr1l+fsr1h+status,2+status,0]
  6385                           
  6386  01C0  01F2               	clrf	___aodiv@sign
  6387  01C1                     l2315:
  6388  01C1  3020               	movlw	low ___aodiv@divisor
  6389  01C2  0086               	movwf	6
  6390  01C3  3000               	movlw	high ___aodiv@divisor
  6391  01C4  0087               	movwf	7
  6392  01C5  3F47               	moviw [7]fsr1
  6393  01C6  00F0               	movwf	??___aodiv
  6394  01C7  1FF0               	btfss	??___aodiv,7
  6395  01C8  29CA               	goto	u1961
  6396  01C9  29CB               	goto	u1960
  6397  01CA                     u1961:
  6398  01CA  29EC               	goto	l2319
  6399  01CB                     u1960:
  6400  01CB                     l2317:
  6401  01CB  0020               	movlb	0	; select bank0
  6402  01CC  09A0               	comf	___aodiv@divisor,f
  6403  01CD  09A1               	comf	___aodiv@divisor+1,f
  6404  01CE  09A2               	comf	___aodiv@divisor+2,f
  6405  01CF  09A3               	comf	___aodiv@divisor+3,f
  6406  01D0  09A4               	comf	___aodiv@divisor+4,f
  6407  01D1  09A5               	comf	___aodiv@divisor+5,f
  6408  01D2  09A6               	comf	___aodiv@divisor+6,f
  6409  01D3  09A7               	comf	___aodiv@divisor+7,f
  6410  01D4  0AA0               	incf	___aodiv@divisor,f
  6411  01D5  1D03               	skipz
  6412  01D6  29EA               	goto	u197lld
  6413  01D7  0AA1               	incf	___aodiv@divisor+1,f
  6414  01D8  1D03               	skipz
  6415  01D9  29EA               	goto	u197lld
  6416  01DA  0AA2               	incf	___aodiv@divisor+2,f
  6417  01DB  1D03               	skipz
  6418  01DC  29EA               	goto	u197lld
  6419  01DD  0AA3               	incf	___aodiv@divisor+3,f
  6420  01DE  1D03               	skipz
  6421  01DF  29EA               	goto	u197lld
  6422  01E0  0AA4               	incf	___aodiv@divisor+4,f
  6423  01E1  1D03               	skipz
  6424  01E2  29EA               	goto	u197lld
  6425  01E3  0AA5               	incf	___aodiv@divisor+5,f
  6426  01E4  1D03               	skipz
  6427  01E5  29EA               	goto	u197lld
  6428  01E6  0AA6               	incf	___aodiv@divisor+6,f
  6429  01E7  1D03               	skipz
  6430  01E8  29EA               	goto	u197lld
  6431  01E9  0AA7               	incf	___aodiv@divisor+7,f
  6432  01EA                     u197lld:
  6433  01EA  01F2               	clrf	___aodiv@sign
  6434  01EB  0AF2               	incf	___aodiv@sign,f
  6435  01EC                     l2319:
  6436  01EC  3028               	movlw	low ___aodiv@dividend
  6437  01ED  0086               	movwf	6
  6438  01EE  3000               	movlw	high ___aodiv@dividend
  6439  01EF  0087               	movwf	7
  6440  01F0  3F47               	moviw [7]fsr1
  6441  01F1  00F0               	movwf	??___aodiv
  6442  01F2  1FF0               	btfss	??___aodiv,7
  6443  01F3  29F5               	goto	u1981
  6444  01F4  29F6               	goto	u1980
  6445  01F5                     u1981:
  6446  01F5  2A19               	goto	l2325
  6447  01F6                     u1980:
  6448  01F6                     l2321:
  6449  01F6  0020               	movlb	0	; select bank0
  6450  01F7  09A8               	comf	___aodiv@dividend,f
  6451  01F8  09A9               	comf	___aodiv@dividend+1,f
  6452  01F9  09AA               	comf	___aodiv@dividend+2,f
  6453  01FA  09AB               	comf	___aodiv@dividend+3,f
  6454  01FB  09AC               	comf	___aodiv@dividend+4,f
  6455  01FC  09AD               	comf	___aodiv@dividend+5,f
  6456  01FD  09AE               	comf	___aodiv@dividend+6,f
  6457  01FE  09AF               	comf	___aodiv@dividend+7,f
  6458  01FF  0AA8               	incf	___aodiv@dividend,f
  6459  0200  1D03               	skipz
  6460  0201  2A15               	goto	u199lld
  6461  0202  0AA9               	incf	___aodiv@dividend+1,f
  6462  0203  1D03               	skipz
  6463  0204  2A15               	goto	u199lld
  6464  0205  0AAA               	incf	___aodiv@dividend+2,f
  6465  0206  1D03               	skipz
  6466  0207  2A15               	goto	u199lld
  6467  0208  0AAB               	incf	___aodiv@dividend+3,f
  6468  0209  1D03               	skipz
  6469  020A  2A15               	goto	u199lld
  6470  020B  0AAC               	incf	___aodiv@dividend+4,f
  6471  020C  1D03               	skipz
  6472  020D  2A15               	goto	u199lld
  6473  020E  0AAD               	incf	___aodiv@dividend+5,f
  6474  020F  1D03               	skipz
  6475  0210  2A15               	goto	u199lld
  6476  0211  0AAE               	incf	___aodiv@dividend+6,f
  6477  0212  1D03               	skipz
  6478  0213  2A15               	goto	u199lld
  6479  0214  0AAF               	incf	___aodiv@dividend+7,f
  6480  0215                     u199lld:
  6481  0215                     l2323:
  6482  0215  3001               	movlw	1
  6483  0216  00F0               	movwf	??___aodiv
  6484  0217  0870               	movf	??___aodiv,w
  6485  0218  06F2               	xorwf	___aodiv@sign,f
  6486  0219                     l2325:
  6487  0219  3073               	movlw	low ___aodiv@quotient
  6488  021A  0086               	movwf	6
  6489  021B  3000               	movlw	high ___aodiv@quotient
  6490  021C  0087               	movwf	7
  6491  021D  3008               	movlw	8
  6492  021E  00F0               	movwf	??___aodiv
  6493  021F  3000               	movlw	0
  6494  0220                     u2000:
  6495  0220  001E               	movwi fsr1++
  6496  0221  0BF0               	decfsz	??___aodiv,f
  6497  0222  2A20               	goto	u2000
  6498  0223                     l2327:
  6499  0223  0020               	movlb	0	; select bank0
  6500  0224  0820               	movf	___aodiv@divisor,w
  6501  0225  0421               	iorwf	___aodiv@divisor+1,w
  6502  0226  0422               	iorwf	___aodiv@divisor+2,w
  6503  0227  0423               	iorwf	___aodiv@divisor+3,w
  6504  0228  0424               	iorwf	___aodiv@divisor+4,w
  6505  0229  0425               	iorwf	___aodiv@divisor+5,w
  6506  022A  0426               	iorwf	___aodiv@divisor+6,w
  6507  022B  0427               	iorwf	___aodiv@divisor+7,w
  6508  022C  1903               	skipnz
  6509  022D  2A2F               	goto	u2011
  6510  022E  2A30               	goto	u2010
  6511  022F                     u2011:
  6512  022F  2A8C               	goto	l2347
  6513  0230                     u2010:
  6514  0230                     l2329:
  6515  0230  01F1               	clrf	___aodiv@counter
  6516  0231  0AF1               	incf	___aodiv@counter,f
  6517  0232  2A3F               	goto	l2335
  6518  0233                     l2331:
  6519  0233  35A0               	lslf	___aodiv@divisor,f
  6520  0234  0DA1               	rlf	___aodiv@divisor+1,f
  6521  0235  0DA2               	rlf	___aodiv@divisor+2,f
  6522  0236  0DA3               	rlf	___aodiv@divisor+3,f
  6523  0237  0DA4               	rlf	___aodiv@divisor+4,f
  6524  0238  0DA5               	rlf	___aodiv@divisor+5,f
  6525  0239  0DA6               	rlf	___aodiv@divisor+6,f
  6526  023A  0DA7               	rlf	___aodiv@divisor+7,f
  6527  023B                     l2333:
  6528  023B  3001               	movlw	1
  6529  023C  00F0               	movwf	??___aodiv
  6530  023D  0870               	movf	??___aodiv,w
  6531  023E  07F1               	addwf	___aodiv@counter,f
  6532  023F                     l2335:
  6533  023F  1FA7               	btfss	___aodiv@divisor+7,7
  6534  0240  2A42               	goto	u2021
  6535  0241  2A43               	goto	u2020
  6536  0242                     u2021:
  6537  0242  2A33               	goto	l2331
  6538  0243                     u2020:
  6539  0243                     l2337:
  6540  0243  35F3               	lslf	___aodiv@quotient,f
  6541  0244  0DF4               	rlf	___aodiv@quotient+1,f
  6542  0245  0DF5               	rlf	___aodiv@quotient+2,f
  6543  0246  0DF6               	rlf	___aodiv@quotient+3,f
  6544  0247  0DF7               	rlf	___aodiv@quotient+4,f
  6545  0248  0DF8               	rlf	___aodiv@quotient+5,f
  6546  0249  0DF9               	rlf	___aodiv@quotient+6,f
  6547  024A  0DFA               	rlf	___aodiv@quotient+7,f
  6548  024B                     l2339:
  6549  024B  0827               	movf	___aodiv@divisor+7,w
  6550  024C  022F               	subwf	___aodiv@dividend+7,w
  6551  024D  1D03               	skipz
  6552  024E  2A69               	goto	u2035
  6553  024F  0826               	movf	___aodiv@divisor+6,w
  6554  0250  022E               	subwf	___aodiv@dividend+6,w
  6555  0251  1D03               	skipz
  6556  0252  2A69               	goto	u2035
  6557  0253  0825               	movf	___aodiv@divisor+5,w
  6558  0254  022D               	subwf	___aodiv@dividend+5,w
  6559  0255  1D03               	skipz
  6560  0256  2A69               	goto	u2035
  6561  0257  0824               	movf	___aodiv@divisor+4,w
  6562  0258  022C               	subwf	___aodiv@dividend+4,w
  6563  0259  1D03               	skipz
  6564  025A  2A69               	goto	u2035
  6565  025B  0823               	movf	___aodiv@divisor+3,w
  6566  025C  022B               	subwf	___aodiv@dividend+3,w
  6567  025D  1D03               	skipz
  6568  025E  2A69               	goto	u2035
  6569  025F  0822               	movf	___aodiv@divisor+2,w
  6570  0260  022A               	subwf	___aodiv@dividend+2,w
  6571  0261  1D03               	skipz
  6572  0262  2A69               	goto	u2035
  6573  0263  0821               	movf	___aodiv@divisor+1,w
  6574  0264  0229               	subwf	___aodiv@dividend+1,w
  6575  0265  1D03               	skipz
  6576  0266  2A69               	goto	u2035
  6577  0267  0820               	movf	___aodiv@divisor,w
  6578  0268  0228               	subwf	___aodiv@dividend,w
  6579  0269                     u2035:
  6580  0269  1C03               	skipc
  6581  026A  2A6C               	goto	u2031
  6582  026B  2A6D               	goto	u2030
  6583  026C                     u2031:
  6584  026C  2A7E               	goto	l2345
  6585  026D                     u2030:
  6586  026D                     l2341:
  6587  026D  0820               	movf	___aodiv@divisor,w
  6588  026E  02A8               	subwf	___aodiv@dividend,f
  6589  026F  0821               	movf	___aodiv@divisor+1,w
  6590  0270  3BA9               	subwfb	___aodiv@dividend+1,f
  6591  0271  0822               	movf	___aodiv@divisor+2,w
  6592  0272  3BAA               	subwfb	___aodiv@dividend+2,f
  6593  0273  0823               	movf	___aodiv@divisor+3,w
  6594  0274  3BAB               	subwfb	___aodiv@dividend+3,f
  6595  0275  0824               	movf	___aodiv@divisor+4,w
  6596  0276  3BAC               	subwfb	___aodiv@dividend+4,f
  6597  0277  0825               	movf	___aodiv@divisor+5,w
  6598  0278  3BAD               	subwfb	___aodiv@dividend+5,f
  6599  0279  0826               	movf	___aodiv@divisor+6,w
  6600  027A  3BAE               	subwfb	___aodiv@dividend+6,f
  6601  027B  0827               	movf	___aodiv@divisor+7,w
  6602  027C  3BAF               	subwfb	___aodiv@dividend+7,f
  6603  027D                     l2343:
  6604  027D  1473               	bsf	___aodiv@quotient,0
  6605  027E                     l2345:
  6606  027E  36A7               	lsrf	___aodiv@divisor+7,f
  6607  027F  0CA6               	rrf	___aodiv@divisor+6,f
  6608  0280  0CA5               	rrf	___aodiv@divisor+5,f
  6609  0281  0CA4               	rrf	___aodiv@divisor+4,f
  6610  0282  0CA3               	rrf	___aodiv@divisor+3,f
  6611  0283  0CA2               	rrf	___aodiv@divisor+2,f
  6612  0284  0CA1               	rrf	___aodiv@divisor+1,f
  6613  0285  0CA0               	rrf	___aodiv@divisor,f
  6614  0286  3001               	movlw	1
  6615  0287  02F1               	subwf	___aodiv@counter,f
  6616  0288  1D03               	btfss	3,2
  6617  0289  2A8B               	goto	u2041
  6618  028A  2A8C               	goto	u2040
  6619  028B                     u2041:
  6620  028B  2A43               	goto	l2337
  6621  028C                     u2040:
  6622  028C                     l2347:
  6623  028C  0872               	movf	___aodiv@sign,w
  6624  028D  1903               	btfsc	3,2
  6625  028E  2A90               	goto	u2051
  6626  028F  2A91               	goto	u2050
  6627  0290                     u2051:
  6628  0290  2AAF               	goto	l603
  6629  0291                     u2050:
  6630  0291                     l2349:
  6631  0291  09F3               	comf	___aodiv@quotient,f
  6632  0292  09F4               	comf	___aodiv@quotient+1,f
  6633  0293  09F5               	comf	___aodiv@quotient+2,f
  6634  0294  09F6               	comf	___aodiv@quotient+3,f
  6635  0295  09F7               	comf	___aodiv@quotient+4,f
  6636  0296  09F8               	comf	___aodiv@quotient+5,f
  6637  0297  09F9               	comf	___aodiv@quotient+6,f
  6638  0298  09FA               	comf	___aodiv@quotient+7,f
  6639  0299  0AF3               	incf	___aodiv@quotient,f
  6640  029A  1D03               	skipz
  6641  029B  2AAF               	goto	u206lld
  6642  029C  0AF4               	incf	___aodiv@quotient+1,f
  6643  029D  1D03               	skipz
  6644  029E  2AAF               	goto	u206lld
  6645  029F  0AF5               	incf	___aodiv@quotient+2,f
  6646  02A0  1D03               	skipz
  6647  02A1  2AAF               	goto	u206lld
  6648  02A2  0AF6               	incf	___aodiv@quotient+3,f
  6649  02A3  1D03               	skipz
  6650  02A4  2AAF               	goto	u206lld
  6651  02A5  0AF7               	incf	___aodiv@quotient+4,f
  6652  02A6  1D03               	skipz
  6653  02A7  2AAF               	goto	u206lld
  6654  02A8  0AF8               	incf	___aodiv@quotient+5,f
  6655  02A9  1D03               	skipz
  6656  02AA  2AAF               	goto	u206lld
  6657  02AB  0AF9               	incf	___aodiv@quotient+6,f
  6658  02AC  1D03               	skipz
  6659  02AD  2AAF               	goto	u206lld
  6660  02AE  0AFA               	incf	___aodiv@quotient+7,f
  6661  02AF                     u206lld:
  6662  02AF                     l603:
  6663  02AF  0873               	movf	___aodiv@quotient,w
  6664  02B0  0020               	movlb	0	; select bank0
  6665  02B1  00A0               	movwf	?___aodiv
  6666  02B2  0874               	movf	___aodiv@quotient+1,w
  6667  02B3  00A1               	movwf	?___aodiv+1
  6668  02B4  0875               	movf	___aodiv@quotient+2,w
  6669  02B5  00A2               	movwf	?___aodiv+2
  6670  02B6  0876               	movf	___aodiv@quotient+3,w
  6671  02B7  00A3               	movwf	?___aodiv+3
  6672  02B8  0877               	movf	___aodiv@quotient+4,w
  6673  02B9  00A4               	movwf	?___aodiv+4
  6674  02BA  0878               	movf	___aodiv@quotient+5,w
  6675  02BB  00A5               	movwf	?___aodiv+5
  6676  02BC  0879               	movf	___aodiv@quotient+6,w
  6677  02BD  00A6               	movwf	?___aodiv+6
  6678  02BE  087A               	movf	___aodiv@quotient+7,w
  6679  02BF  00A7               	movwf	?___aodiv+7
  6680  02C0                     l604:
  6681  02C0  0008               	return
  6682  02C1                     __end_of___aodiv:
  6683                           
  6684                           	psect	text19
  6685  15A0                     __ptext19:	
  6686 ;; *************** function _lcd_print_with *****************
  6687 ;; Defined at:
  6688 ;;		line 135 in file "lcd_lib.c"
  6689 ;; Parameters:    Size  Location     Type
  6690 ;;  p               1    wreg     PTR struct .
  6691 ;;		 -> NULL(0), main@lcd(4), 
  6692 ;;  str             2    6[BANK0 ] PTR unsigned char 
  6693 ;;		 -> print_gram@row2(16), print_gram@row1(16), STR_3(15), STR_2(11), 
  6694 ;;  col             1    8[BANK0 ] unsigned char 
  6695 ;;  row             1    9[BANK0 ] unsigned char 
  6696 ;; Auto vars:     Size  Location     Type
  6697 ;;  p               1   13[COMMON] PTR struct .
  6698 ;;		 -> NULL(0), main@lcd(4), 
  6699 ;; Return value:  Size  Location     Type
  6700 ;;                  1    wreg      void 
  6701 ;; Registers used:
  6702 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  6703 ;; Tracked objects:
  6704 ;;		On entry : 0/0
  6705 ;;		On exit  : 0/0
  6706 ;;		Unchanged: 0/0
  6707 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  6708 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6709 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6710 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6711 ;;      Totals:         1       6       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6712 ;;Total ram usage:        7 bytes
  6713 ;; Hardware stack levels used: 1
  6714 ;; Hardware stack levels required when called: 5
  6715 ;; This function calls:
  6716 ;;		_lcd_print
  6717 ;;		_lcd_set_cursor
  6718 ;; This function is called by:
  6719 ;;		_initialize
  6720 ;;		_print_gram
  6721 ;; This function uses a non-reentrant model
  6722 ;;
  6723                           
  6724                           
  6725                           ;psect for function _lcd_print_with
  6726  15A0                     _lcd_print_with:
  6727                           
  6728                           ;incstack = 0
  6729                           ; Regs used in _lcd_print_with: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  6730                           ;lcd_print_with@p stored from wreg
  6731  15A0  00FD               	movwf	lcd_print_with@p
  6732  15A1                     l3255:
  6733                           
  6734                           ;lcd_lib.c: 136:     lcd_set_cursor(p, col, row);
  6735  15A1  0020               	movlb	0	; select bank0
  6736  15A2  0828               	movf	lcd_print_with@col,w
  6737  15A3  00AA               	movwf	??_lcd_print_with
  6738  15A4  082A               	movf	??_lcd_print_with,w
  6739  15A5  00FA               	movwf	lcd_set_cursor@col
  6740  15A6  0829               	movf	lcd_print_with@row,w
  6741  15A7  00AB               	movwf	??_lcd_print_with+1
  6742  15A8  082B               	movf	??_lcd_print_with+1,w
  6743  15A9  00FB               	movwf	lcd_set_cursor@row
  6744  15AA  087D               	movf	lcd_print_with@p,w
  6745  15AB  3196  266E  3195   	fcall	_lcd_set_cursor
  6746  15AE                     l3257:
  6747                           
  6748                           ;lcd_lib.c: 137:     lcd_print(p, str);
  6749  15AE  0020               	movlb	0	; select bank0
  6750  15AF  0827               	movf	lcd_print_with@str+1,w
  6751  15B0  00FB               	movwf	lcd_print@str+1
  6752  15B1  0826               	movf	lcd_print_with@str,w
  6753  15B2  00FA               	movwf	lcd_print@str
  6754  15B3  087D               	movf	lcd_print_with@p,w
  6755  15B4  3196  2622  3195   	fcall	_lcd_print
  6756  15B7                     l317:
  6757  15B7  0008               	return
  6758  15B8                     __end_of_lcd_print_with:
  6759                           
  6760                           	psect	text20
  6761  0D8A                     __ptext20:	
  6762 ;; *************** function _lcd_init *****************
  6763 ;; Defined at:
  6764 ;;		line 18 in file "lcd_lib.c"
  6765 ;; Parameters:    Size  Location     Type
  6766 ;;  p               1    wreg     PTR struct .
  6767 ;;		 -> NULL(0), main@lcd(4), 
  6768 ;; Auto vars:     Size  Location     Type
  6769 ;;  p               1    8[COMMON] PTR struct .
  6770 ;;		 -> NULL(0), main@lcd(4), 
  6771 ;; Return value:  Size  Location     Type
  6772 ;;                  1    wreg      void 
  6773 ;; Registers used:
  6774 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  6775 ;; Tracked objects:
  6776 ;;		On entry : 0/0
  6777 ;;		On exit  : 0/0
  6778 ;;		Unchanged: 0/0
  6779 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  6780 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6781 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6782 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6783 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6784 ;;Total ram usage:        3 bytes
  6785 ;; Hardware stack levels used: 1
  6786 ;; Hardware stack levels required when called: 4
  6787 ;; This function calls:
  6788 ;;		_write4bits
  6789 ;; This function is called by:
  6790 ;;		_initialize
  6791 ;; This function uses a non-reentrant model
  6792 ;;
  6793                           
  6794                           
  6795                           ;psect for function _lcd_init
  6796  0D8A                     _lcd_init:
  6797                           
  6798                           ;incstack = 0
  6799                           ; Regs used in _lcd_init: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
  6800                           ;lcd_init@p stored from wreg
  6801  0D8A  00F8               	movwf	lcd_init@p
  6802  0D8B                     l3197:
  6803                           
  6804                           ;lcd_lib.c: 19:     _delay((unsigned long)((400)*(8000000/4000.0)));
  6805  0D8B  3005               	movlw	5
  6806  0D8C  00F7               	movwf	??_lcd_init+1
  6807  0D8D  300F               	movlw	15
  6808  0D8E  00F6               	movwf	??_lcd_init
  6809  0D8F  30F1               	movlw	241
  6810  0D90                     u3687:
  6811  0D90  0B89               	decfsz	9,f
  6812  0D91  2D90               	goto	u3687
  6813  0D92  0BF6               	decfsz	??_lcd_init,f
  6814  0D93  2D90               	goto	u3687
  6815  0D94  0BF7               	decfsz	??_lcd_init+1,f
  6816  0D95  2D90               	goto	u3687
  6817  0D96  0000               	nop
  6818  0D97                     l3199:
  6819                           
  6820                           ;lcd_lib.c: 21:     write4bits(p, 0x30);
  6821  0D97  3030               	movlw	48
  6822  0D98  00F6               	movwf	??_lcd_init
  6823  0D99  0876               	movf	??_lcd_init,w
  6824  0D9A  00F3               	movwf	write4bits@val
  6825  0D9B  0878               	movf	lcd_init@p,w
  6826  0D9C  3196  2607  318D   	fcall	_write4bits
  6827  0D9F                     l3201:
  6828                           
  6829                           ;lcd_lib.c: 22:     _delay((unsigned long)((5)*(8000000/4000.0)));
  6830  0D9F  300D               	movlw	13
  6831  0DA0  00F6               	movwf	??_lcd_init
  6832  0DA1  30FC               	movlw	252
  6833  0DA2                     u3697:
  6834  0DA2  0B89               	decfsz	9,f
  6835  0DA3  2DA2               	goto	u3697
  6836  0DA4  0BF6               	decfsz	??_lcd_init,f
  6837  0DA5  2DA2               	goto	u3697
  6838                           
  6839                           ;lcd_lib.c: 24:     write4bits(p, 0x30);
  6840  0DA6  3030               	movlw	48
  6841  0DA7  00F6               	movwf	??_lcd_init
  6842  0DA8  0876               	movf	??_lcd_init,w
  6843  0DA9  00F3               	movwf	write4bits@val
  6844  0DAA  0878               	movf	lcd_init@p,w
  6845  0DAB  3196  2607  318D   	fcall	_write4bits
  6846  0DAE                     l3203:
  6847                           
  6848                           ;lcd_lib.c: 25:     _delay((unsigned long)((5)*(8000000/4000.0)));
  6849  0DAE  300D               	movlw	13
  6850  0DAF  00F6               	movwf	??_lcd_init
  6851  0DB0  30FC               	movlw	252
  6852  0DB1                     u3707:
  6853  0DB1  0B89               	decfsz	9,f
  6854  0DB2  2DB1               	goto	u3707
  6855  0DB3  0BF6               	decfsz	??_lcd_init,f
  6856  0DB4  2DB1               	goto	u3707
  6857  0DB5                     l3205:
  6858                           
  6859                           ;lcd_lib.c: 27:     write4bits(p, 0x30);
  6860  0DB5  3030               	movlw	48
  6861  0DB6  00F6               	movwf	??_lcd_init
  6862  0DB7  0876               	movf	??_lcd_init,w
  6863  0DB8  00F3               	movwf	write4bits@val
  6864  0DB9  0878               	movf	lcd_init@p,w
  6865  0DBA  3196  2607  318D   	fcall	_write4bits
  6866                           
  6867                           ;lcd_lib.c: 28:     _delay((unsigned long)((300)*(8000000/4000000.0)));
  6868  0DBD  30C8               	movlw	200
  6869  0DBE                     u3717:
  6870  0DBE  0B89               	decfsz	9,f
  6871  0DBF  2DBE               	goto	u3717
  6872  0DC0                     l3207:
  6873                           
  6874                           ;lcd_lib.c: 30:     write4bits(p, 0x20);
  6875  0DC0  3020               	movlw	32
  6876  0DC1  00F6               	movwf	??_lcd_init
  6877  0DC2  0876               	movf	??_lcd_init,w
  6878  0DC3  00F3               	movwf	write4bits@val
  6879  0DC4  0878               	movf	lcd_init@p,w
  6880  0DC5  3196  2607  318D   	fcall	_write4bits
  6881  0DC8                     l3209:
  6882                           
  6883                           ;lcd_lib.c: 31:     _delay((unsigned long)((10)*(8000000/4000000.0)));
  6884  0DC8  3006               	movlw	6
  6885  0DC9                     u3727:
  6886  0DC9  0B89               	decfsz	9,f
  6887  0DCA  2DC9               	goto	u3727
  6888  0DCB  3200               	nop2
  6889                           
  6890                           ;lcd_lib.c: 34:     write4bits(p, 0x20);
  6891  0DCC  3020               	movlw	32
  6892  0DCD  00F6               	movwf	??_lcd_init
  6893  0DCE  0876               	movf	??_lcd_init,w
  6894  0DCF  00F3               	movwf	write4bits@val
  6895  0DD0  0878               	movf	lcd_init@p,w
  6896  0DD1  3196  2607  318D   	fcall	_write4bits
  6897  0DD4                     l3211:
  6898                           
  6899                           ;lcd_lib.c: 36:     _delay((unsigned long)((100)*(8000000/4000000.0)));
  6900  0DD4  3042               	movlw	66
  6901  0DD5                     u3737:
  6902  0DD5  0B89               	decfsz	9,f
  6903  0DD6  2DD5               	goto	u3737
  6904  0DD7  3200               	nop2
  6905  0DD8                     l3213:
  6906                           
  6907                           ;lcd_lib.c: 38:     write4bits(p, 0x80);
  6908  0DD8  3080               	movlw	128
  6909  0DD9  00F6               	movwf	??_lcd_init
  6910  0DDA  0876               	movf	??_lcd_init,w
  6911  0DDB  00F3               	movwf	write4bits@val
  6912  0DDC  0878               	movf	lcd_init@p,w
  6913  0DDD  3196  2607  318D   	fcall	_write4bits
  6914  0DE0                     l3215:
  6915                           
  6916                           ;lcd_lib.c: 43:     write4bits(p, 0x00);
  6917  0DE0  01F3               	clrf	write4bits@val
  6918  0DE1  0878               	movf	lcd_init@p,w
  6919  0DE2  3196  2607  318D   	fcall	_write4bits
  6920  0DE5                     l3217:
  6921                           
  6922                           ;lcd_lib.c: 45:     _delay((unsigned long)((100)*(8000000/4000000.0)));
  6923  0DE5  3042               	movlw	66
  6924  0DE6                     u3747:
  6925  0DE6  0B89               	decfsz	9,f
  6926  0DE7  2DE6               	goto	u3747
  6927  0DE8  3200               	nop2
  6928                           
  6929                           ;lcd_lib.c: 47:     write4bits(p, 0xC0);
  6930  0DE9  30C0               	movlw	192
  6931  0DEA  00F6               	movwf	??_lcd_init
  6932  0DEB  0876               	movf	??_lcd_init,w
  6933  0DEC  00F3               	movwf	write4bits@val
  6934  0DED  0878               	movf	lcd_init@p,w
  6935  0DEE  3196  2607  318D   	fcall	_write4bits
  6936                           
  6937                           ;lcd_lib.c: 51:     write4bits(p, 0x00);
  6938  0DF1  01F3               	clrf	write4bits@val
  6939  0DF2  0878               	movf	lcd_init@p,w
  6940  0DF3  3196  2607  318D   	fcall	_write4bits
  6941  0DF6                     l3219:
  6942                           
  6943                           ;lcd_lib.c: 53:     _delay((unsigned long)((100)*(8000000/4000000.0)));
  6944  0DF6  3042               	movlw	66
  6945  0DF7                     u3757:
  6946  0DF7  0B89               	decfsz	9,f
  6947  0DF8  2DF7               	goto	u3757
  6948  0DF9  3200               	nop2
  6949  0DFA                     l3221:
  6950                           
  6951                           ;lcd_lib.c: 55:     write4bits(p, 0x10);
  6952  0DFA  3010               	movlw	16
  6953  0DFB  00F6               	movwf	??_lcd_init
  6954  0DFC  0876               	movf	??_lcd_init,w
  6955  0DFD  00F3               	movwf	write4bits@val
  6956  0DFE  0878               	movf	lcd_init@p,w
  6957  0DFF  3196  2607  318D   	fcall	_write4bits
  6958                           
  6959                           ;lcd_lib.c: 57:     _delay((unsigned long)((5)*(8000000/4000.0)));
  6960  0E02  300D               	movlw	13
  6961  0E03  00F6               	movwf	??_lcd_init
  6962  0E04  30FC               	movlw	252
  6963  0E05                     u3767:
  6964  0E05  0B89               	decfsz	9,f
  6965  0E06  2E05               	goto	u3767
  6966  0E07  0BF6               	decfsz	??_lcd_init,f
  6967  0E08  2E05               	goto	u3767
  6968  0E09                     l3223:
  6969                           
  6970                           ;lcd_lib.c: 60:     write4bits(p, 0x00);
  6971  0E09  01F3               	clrf	write4bits@val
  6972  0E0A  0878               	movf	lcd_init@p,w
  6973  0E0B  3196  2607  318D   	fcall	_write4bits
  6974  0E0E                     l3225:
  6975                           
  6976                           ;lcd_lib.c: 62:     _delay((unsigned long)((100)*(8000000/4000000.0)));
  6977  0E0E  3042               	movlw	66
  6978  0E0F                     u3777:
  6979  0E0F  0B89               	decfsz	9,f
  6980  0E10  2E0F               	goto	u3777
  6981  0E11  3200               	nop2
  6982                           
  6983                           ;lcd_lib.c: 64:     write4bits(p, 0x60);
  6984  0E12  3060               	movlw	96
  6985  0E13  00F6               	movwf	??_lcd_init
  6986  0E14  0876               	movf	??_lcd_init,w
  6987  0E15  00F3               	movwf	write4bits@val
  6988  0E16  0878               	movf	lcd_init@p,w
  6989  0E17  3196  2607  318D   	fcall	_write4bits
  6990                           
  6991                           ;lcd_lib.c: 68:     write4bits(p, 0x00);
  6992  0E1A  01F3               	clrf	write4bits@val
  6993  0E1B  0878               	movf	lcd_init@p,w
  6994  0E1C  3196  2607  318D   	fcall	_write4bits
  6995  0E1F                     l3227:
  6996                           
  6997                           ;lcd_lib.c: 70:     _delay((unsigned long)((100)*(8000000/4000000.0)));
  6998  0E1F  3042               	movlw	66
  6999  0E20                     u3787:
  7000  0E20  0B89               	decfsz	9,f
  7001  0E21  2E20               	goto	u3787
  7002  0E22  3200               	nop2
  7003  0E23                     l3229:
  7004                           
  7005                           ;lcd_lib.c: 72:     write4bits(p, 0x20);
  7006  0E23  3020               	movlw	32
  7007  0E24  00F6               	movwf	??_lcd_init
  7008  0E25  0876               	movf	??_lcd_init,w
  7009  0E26  00F3               	movwf	write4bits@val
  7010  0E27  0878               	movf	lcd_init@p,w
  7011  0E28  3196  2607  318D   	fcall	_write4bits
  7012                           
  7013                           ;lcd_lib.c: 74:     _delay((unsigned long)((3)*(8000000/4000.0)));
  7014  0E2B  3008               	movlw	8
  7015  0E2C  00F6               	movwf	??_lcd_init
  7016  0E2D  30CA               	movlw	202
  7017  0E2E                     u3797:
  7018  0E2E  0B89               	decfsz	9,f
  7019  0E2F  2E2E               	goto	u3797
  7020  0E30  0BF6               	decfsz	??_lcd_init,f
  7021  0E31  2E2E               	goto	u3797
  7022  0E32                     l290:
  7023  0E32  0008               	return
  7024  0E33                     __end_of_lcd_init:
  7025                           
  7026                           	psect	text21
  7027  1607                     __ptext21:	
  7028 ;; *************** function _write4bits *****************
  7029 ;; Defined at:
  7030 ;;		line 155 in file "lcd_lib.c"
  7031 ;; Parameters:    Size  Location     Type
  7032 ;;  p               1    wreg     PTR struct .
  7033 ;;		 -> NULL(0), main@lcd(4), 
  7034 ;;  val             1    3[COMMON] unsigned char 
  7035 ;; Auto vars:     Size  Location     Type
  7036 ;;  p               1    5[COMMON] PTR struct .
  7037 ;;		 -> NULL(0), main@lcd(4), 
  7038 ;; Return value:  Size  Location     Type
  7039 ;;                  1    wreg      void 
  7040 ;; Registers used:
  7041 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  7042 ;; Tracked objects:
  7043 ;;		On entry : 0/0
  7044 ;;		On exit  : 0/0
  7045 ;;		Unchanged: 0/0
  7046 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  7047 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7048 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7049 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7050 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7051 ;;Total ram usage:        3 bytes
  7052 ;; Hardware stack levels used: 1
  7053 ;; Hardware stack levels required when called: 3
  7054 ;; This function calls:
  7055 ;;		_lcd_cmd
  7056 ;; This function is called by:
  7057 ;;		_lcd_init
  7058 ;; This function uses a non-reentrant model
  7059 ;;
  7060                           
  7061                           
  7062                           ;psect for function _write4bits
  7063  1607                     _write4bits:
  7064                           
  7065                           ;incstack = 0
  7066                           ; Regs used in _write4bits: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
  7067                           ;write4bits@p stored from wreg
  7068  1607  00F5               	movwf	write4bits@p
  7069  1608                     l2767:
  7070                           
  7071                           ;lcd_lib.c: 156:     lcd_cmd(p, val);
  7072  1608  0873               	movf	write4bits@val,w
  7073  1609  00F4               	movwf	??_write4bits
  7074  160A  0874               	movf	??_write4bits,w
  7075  160B  00F1               	movwf	lcd_cmd@cmd
  7076  160C  0875               	movf	write4bits@p,w
  7077  160D  3195  2589  3196   	fcall	_lcd_cmd
  7078                           
  7079                           ;lcd_lib.c: 157:     lcd_cmd(p, val | 0b00000100);
  7080  1610  0873               	movf	write4bits@val,w
  7081  1611  3804               	iorlw	4
  7082  1612  00F4               	movwf	??_write4bits
  7083  1613  0874               	movf	??_write4bits,w
  7084  1614  00F1               	movwf	lcd_cmd@cmd
  7085  1615  0875               	movf	write4bits@p,w
  7086  1616  3195  2589  3196   	fcall	_lcd_cmd
  7087                           
  7088                           ;lcd_lib.c: 158:     lcd_cmd(p, val);
  7089  1619  0873               	movf	write4bits@val,w
  7090  161A  00F4               	movwf	??_write4bits
  7091  161B  0874               	movf	??_write4bits,w
  7092  161C  00F1               	movwf	lcd_cmd@cmd
  7093  161D  0875               	movf	write4bits@p,w
  7094  161E  3195  2589  3196   	fcall	_lcd_cmd
  7095  1621                     l323:
  7096  1621  0008               	return
  7097  1622                     __end_of_write4bits:
  7098                           
  7099                           	psect	text22
  7100  171C                     __ptext22:	
  7101 ;; *************** function _lcd_clear *****************
  7102 ;; Defined at:
  7103 ;;		line 91 in file "lcd_lib.c"
  7104 ;; Parameters:    Size  Location     Type
  7105 ;;  p               1    wreg     PTR struct .
  7106 ;;		 -> NULL(0), main@lcd(4), 
  7107 ;; Auto vars:     Size  Location     Type
  7108 ;;  p               1   10[BANK0 ] PTR struct .
  7109 ;;		 -> NULL(0), main@lcd(4), 
  7110 ;;  col             1    9[BANK0 ] unsigned char 
  7111 ;;  row             1    8[BANK0 ] unsigned char 
  7112 ;; Return value:  Size  Location     Type
  7113 ;;                  1    wreg      void 
  7114 ;; Registers used:
  7115 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  7116 ;; Tracked objects:
  7117 ;;		On entry : 0/0
  7118 ;;		On exit  : 0/0
  7119 ;;		Unchanged: 0/0
  7120 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  7121 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7122 ;;      Locals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7123 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7124 ;;      Totals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7125 ;;Total ram usage:        5 bytes
  7126 ;; Hardware stack levels used: 1
  7127 ;; Hardware stack levels required when called: 5
  7128 ;; This function calls:
  7129 ;;		_lcd_print
  7130 ;;		_lcd_set_cursor
  7131 ;; This function is called by:
  7132 ;;		_initialize
  7133 ;;		_print_gram
  7134 ;; This function uses a non-reentrant model
  7135 ;;
  7136                           
  7137                           
  7138                           ;psect for function _lcd_clear
  7139  171C                     _lcd_clear:
  7140                           
  7141                           ;incstack = 0
  7142                           ; Regs used in _lcd_clear: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  7143                           ;lcd_clear@p stored from wreg
  7144  171C  0020               	movlb	0	; select bank0
  7145  171D  00AA               	movwf	lcd_clear@p
  7146  171E                     l3237:
  7147                           
  7148                           ;lcd_lib.c: 92:     for(uint8_t row = 0; row < (p->ROW); row++){
  7149  171E  01A8               	clrf	lcd_clear@row
  7150  171F  2F49               	goto	l3251
  7151  1720                     l3239:
  7152                           
  7153                           ;lcd_lib.c: 93:         for(uint8_t col = 0; col < (p->COL); col++){
  7154  1720  01A9               	clrf	lcd_clear@col
  7155  1721  2F3C               	goto	l3247
  7156  1722                     l3241:
  7157                           
  7158                           ;lcd_lib.c: 94:             lcd_set_cursor(p, col, row);
  7159  1722  0829               	movf	lcd_clear@col,w
  7160  1723  00A6               	movwf	??_lcd_clear
  7161  1724  0826               	movf	??_lcd_clear,w
  7162  1725  00FA               	movwf	lcd_set_cursor@col
  7163  1726  0828               	movf	lcd_clear@row,w
  7164  1727  00A7               	movwf	??_lcd_clear+1
  7165  1728  0827               	movf	??_lcd_clear+1,w
  7166  1729  00FB               	movwf	lcd_set_cursor@row
  7167  172A  082A               	movf	lcd_clear@p,w
  7168  172B  3196  266E  3197   	fcall	_lcd_set_cursor
  7169  172E                     l3243:
  7170                           
  7171                           ;lcd_lib.c: 95:             lcd_print(p, " ");
  7172  172E  303A               	movlw	low (STR_1| (0+32768))
  7173  172F  00FA               	movwf	lcd_print@str
  7174  1730  3098               	movlw	high (STR_1| (0+32768))
  7175  1731  00FB               	movwf	lcd_print@str+1
  7176  1732  0020               	movlb	0	; select bank0
  7177  1733  082A               	movf	lcd_clear@p,w
  7178  1734  3196  2622  3197   	fcall	_lcd_print
  7179  1737                     l3245:
  7180                           
  7181                           ;lcd_lib.c: 96:         }
  7182  1737  3001               	movlw	1
  7183  1738  0020               	movlb	0	; select bank0
  7184  1739  00A6               	movwf	??_lcd_clear
  7185  173A  0826               	movf	??_lcd_clear,w
  7186  173B  07A9               	addwf	lcd_clear@col,f
  7187  173C                     l3247:
  7188  173C  0A2A               	incf	lcd_clear@p,w
  7189  173D  0086               	movwf	6
  7190  173E  0187               	clrf	7
  7191  173F  0801               	movf	1,w
  7192  1740  0229               	subwf	lcd_clear@col,w
  7193  1741  1C03               	skipc
  7194  1742  2F44               	goto	u3491
  7195  1743  2F45               	goto	u3490
  7196  1744                     u3491:
  7197  1744  2F22               	goto	l3241
  7198  1745                     u3490:
  7199  1745                     l3249:
  7200                           
  7201                           ;lcd_lib.c: 97:     }
  7202  1745  3001               	movlw	1
  7203  1746  00A6               	movwf	??_lcd_clear
  7204  1747  0826               	movf	??_lcd_clear,w
  7205  1748  07A8               	addwf	lcd_clear@row,f
  7206  1749                     l3251:
  7207  1749  082A               	movf	lcd_clear@p,w
  7208  174A  3E02               	addlw	2
  7209  174B  0086               	movwf	6
  7210  174C  0187               	clrf	7
  7211  174D  0801               	movf	1,w
  7212  174E  0228               	subwf	lcd_clear@row,w
  7213  174F  1C03               	skipc
  7214  1750  2F52               	goto	u3501
  7215  1751  2F53               	goto	u3500
  7216  1752                     u3501:
  7217  1752  2F20               	goto	l3239
  7218  1753                     u3500:
  7219  1753                     l3253:
  7220                           
  7221                           ;lcd_lib.c: 99:     lcd_set_cursor(p, 0, 0);
  7222  1753  01FA               	clrf	lcd_set_cursor@col
  7223  1754  01FB               	clrf	lcd_set_cursor@row
  7224  1755  082A               	movf	lcd_clear@p,w
  7225  1756  3196  266E  3197   	fcall	_lcd_set_cursor
  7226  1759                     l302:
  7227  1759  0008               	return
  7228  175A                     __end_of_lcd_clear:
  7229                           
  7230                           	psect	text23
  7231  166E                     __ptext23:	
  7232 ;; *************** function _lcd_set_cursor *****************
  7233 ;; Defined at:
  7234 ;;		line 107 in file "lcd_lib.c"
  7235 ;; Parameters:    Size  Location     Type
  7236 ;;  p               1    wreg     PTR struct .
  7237 ;;		 -> NULL(0), main@lcd(4), 
  7238 ;;  col             1   10[COMMON] unsigned char 
  7239 ;;  row             1   11[COMMON] unsigned char 
  7240 ;; Auto vars:     Size  Location     Type
  7241 ;;  p               1    5[BANK0 ] PTR struct .
  7242 ;;		 -> NULL(0), main@lcd(4), 
  7243 ;;  row_offsets     4    0[BANK0 ] unsigned char [4]
  7244 ;;  cmd             1    4[BANK0 ] unsigned char 
  7245 ;; Return value:  Size  Location     Type
  7246 ;;                  1    wreg      void 
  7247 ;; Registers used:
  7248 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  7249 ;; Tracked objects:
  7250 ;;		On entry : 0/0
  7251 ;;		On exit  : 0/0
  7252 ;;		Unchanged: 0/0
  7253 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  7254 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7255 ;;      Locals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7256 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7257 ;;      Totals:         3       6       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7258 ;;Total ram usage:        9 bytes
  7259 ;; Hardware stack levels used: 1
  7260 ;; Hardware stack levels required when called: 4
  7261 ;; This function calls:
  7262 ;;		_command
  7263 ;; This function is called by:
  7264 ;;		_lcd_clear
  7265 ;;		_lcd_print_with
  7266 ;; This function uses a non-reentrant model
  7267 ;;
  7268                           
  7269                           
  7270                           ;psect for function _lcd_set_cursor
  7271  166E                     _lcd_set_cursor:
  7272                           
  7273                           ;incstack = 0
  7274                           ; Regs used in _lcd_set_cursor: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
  7275                           ;lcd_set_cursor@p stored from wreg
  7276  166E  0020               	movlb	0	; select bank0
  7277  166F  00A5               	movwf	lcd_set_cursor@p
  7278  1670                     l2769:
  7279                           
  7280                           ;lcd_lib.c: 108:     uint8_t row_offsets[] = {0x00, 0x40, 0x14, 0x54};
  7281  1670  0022               	movlb	2	; select bank2
  7282  1671  0868               	movf	(lcd_set_cursor@F2781+3)^(0+256),w
  7283  1672  0020               	movlb	0	; select bank0
  7284  1673  00A3               	movwf	lcd_set_cursor@row_offsets+3
  7285  1674  0022               	movlb	2	; select bank2
  7286  1675  0867               	movf	(lcd_set_cursor@F2781+2)^(0+256),w
  7287  1676  0020               	movlb	0	; select bank0
  7288  1677  00A2               	movwf	lcd_set_cursor@row_offsets+2
  7289  1678  0022               	movlb	2	; select bank2
  7290  1679  0866               	movf	(lcd_set_cursor@F2781+1)^(0+256),w
  7291  167A  0020               	movlb	0	; select bank0
  7292  167B  00A1               	movwf	lcd_set_cursor@row_offsets+1
  7293  167C  0022               	movlb	2	; select bank2
  7294  167D  0865               	movf	lcd_set_cursor@F2781^(0+256),w
  7295  167E  0020               	movlb	0	; select bank0
  7296  167F  00A0               	movwf	lcd_set_cursor@row_offsets
  7297  1680                     l2771:
  7298                           
  7299                           ;lcd_lib.c: 109:     if(row > p->ROW){
  7300  1680  0825               	movf	lcd_set_cursor@p,w
  7301  1681  3E02               	addlw	2
  7302  1682  0086               	movwf	6
  7303  1683  0187               	clrf	7
  7304  1684  087B               	movf	lcd_set_cursor@row,w
  7305  1685  0201               	subwf	1,w
  7306  1686  1803               	skipnc
  7307  1687  2E89               	goto	u2761
  7308  1688  2E8A               	goto	u2760
  7309  1689                     u2761:
  7310  1689  2E93               	goto	l307
  7311  168A                     u2760:
  7312  168A                     l2773:
  7313                           
  7314                           ;lcd_lib.c: 110:         row = p->ROW - 1;
  7315  168A  0825               	movf	lcd_set_cursor@p,w
  7316  168B  3E02               	addlw	2
  7317  168C  0086               	movwf	6
  7318  168D  0187               	clrf	7
  7319  168E  0801               	movf	1,w
  7320  168F  3EFF               	addlw	255
  7321  1690  00FC               	movwf	??_lcd_set_cursor
  7322  1691  087C               	movf	??_lcd_set_cursor,w
  7323  1692  00FB               	movwf	lcd_set_cursor@row
  7324  1693                     l307:	
  7325                           ;lcd_lib.c: 111:     }
  7326                           
  7327                           
  7328                           ;lcd_lib.c: 112:     uint8_t cmd = 0x80 | (col + row_offsets[row]);
  7329  1693  087B               	movf	lcd_set_cursor@row,w
  7330  1694  3E20               	addlw	(low (lcd_set_cursor@row_offsets| 0))& (0+255)
  7331  1695  0086               	movwf	6
  7332  1696  0187               	clrf	7
  7333  1697  0801               	movf	1,w
  7334  1698  077A               	addwf	lcd_set_cursor@col,w
  7335  1699  3880               	iorlw	128
  7336  169A  00FC               	movwf	??_lcd_set_cursor
  7337  169B  087C               	movf	??_lcd_set_cursor,w
  7338  169C  00A4               	movwf	lcd_set_cursor@cmd
  7339  169D                     l2775:
  7340                           
  7341                           ;lcd_lib.c: 113:     command(p, cmd, 0);
  7342  169D  0824               	movf	lcd_set_cursor@cmd,w
  7343  169E  00FC               	movwf	??_lcd_set_cursor
  7344  169F  087C               	movf	??_lcd_set_cursor,w
  7345  16A0  00F3               	movwf	command@val
  7346  16A1  01F4               	clrf	command@mode
  7347  16A2  0825               	movf	lcd_set_cursor@p,w
  7348  16A3  3197  27A9  3196   	fcall	_command
  7349  16A6                     l308:
  7350  16A6  0008               	return
  7351  16A7                     __end_of_lcd_set_cursor:
  7352                           
  7353                           	psect	text24
  7354  1622                     __ptext24:	
  7355 ;; *************** function _lcd_print *****************
  7356 ;; Defined at:
  7357 ;;		line 121 in file "lcd_lib.c"
  7358 ;; Parameters:    Size  Location     Type
  7359 ;;  p               1    wreg     PTR struct .
  7360 ;;		 -> NULL(0), main@lcd(4), 
  7361 ;;  str             2   10[COMMON] PTR unsigned char 
  7362 ;;		 -> print_gram@row2(16), print_gram@row1(16), initialize@valstr(16), STR_3(15), 
  7363 ;;		 -> STR_2(11), STR_1(2), 
  7364 ;; Auto vars:     Size  Location     Type
  7365 ;;  p               1    1[BANK0 ] PTR struct .
  7366 ;;		 -> NULL(0), main@lcd(4), 
  7367 ;;  cmd             1    0[BANK0 ] unsigned char 
  7368 ;; Return value:  Size  Location     Type
  7369 ;;                  1    wreg      void 
  7370 ;; Registers used:
  7371 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  7372 ;; Tracked objects:
  7373 ;;		On entry : 0/0
  7374 ;;		On exit  : 0/0
  7375 ;;		Unchanged: 0/0
  7376 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  7377 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7378 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7379 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7380 ;;      Totals:         3       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7381 ;;Total ram usage:        5 bytes
  7382 ;; Hardware stack levels used: 1
  7383 ;; Hardware stack levels required when called: 4
  7384 ;; This function calls:
  7385 ;;		_command
  7386 ;; This function is called by:
  7387 ;;		_lcd_clear
  7388 ;;		_lcd_print_with
  7389 ;;		_initialize
  7390 ;; This function uses a non-reentrant model
  7391 ;;
  7392                           
  7393                           
  7394                           ;psect for function _lcd_print
  7395  1622                     _lcd_print:
  7396                           
  7397                           ;incstack = 0
  7398                           ; Regs used in _lcd_print: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  7399                           ;lcd_print@p stored from wreg
  7400  1622  0020               	movlb	0	; select bank0
  7401  1623  00A1               	movwf	lcd_print@p
  7402  1624                     l2777:
  7403                           
  7404                           ;lcd_lib.c: 122:     while (*str) {
  7405  1624  2E3C               	goto	l2785
  7406  1625                     l2779:
  7407                           
  7408                           ;lcd_lib.c: 123:         uint8_t cmd = *str++;
  7409  1625  087A               	movf	lcd_print@str,w
  7410  1626  0084               	movwf	4
  7411  1627  087B               	movf	lcd_print@str+1,w
  7412  1628  0085               	movwf	5
  7413  1629  0800               	movf	0,w	;code access
  7414  162A  00FC               	movwf	??_lcd_print
  7415  162B  087C               	movf	??_lcd_print,w
  7416  162C  0020               	movlb	0	; select bank0
  7417  162D  00A0               	movwf	lcd_print@cmd
  7418  162E                     l2781:
  7419  162E  3001               	movlw	1
  7420  162F  07FA               	addwf	lcd_print@str,f
  7421  1630  3000               	movlw	0
  7422  1631  3DFB               	addwfc	lcd_print@str+1,f
  7423  1632                     l2783:
  7424                           
  7425                           ;lcd_lib.c: 124:         command(p, cmd, 0b00000001);
  7426  1632  0820               	movf	lcd_print@cmd,w
  7427  1633  00FC               	movwf	??_lcd_print
  7428  1634  087C               	movf	??_lcd_print,w
  7429  1635  00F3               	movwf	command@val
  7430  1636  01F4               	clrf	command@mode
  7431  1637  0AF4               	incf	command@mode,f
  7432  1638  0821               	movf	lcd_print@p,w
  7433  1639  3197  27A9  3196   	fcall	_command
  7434  163C                     l2785:
  7435                           
  7436                           ;lcd_lib.c: 122:     while (*str) {
  7437  163C  087A               	movf	lcd_print@str,w
  7438  163D  0084               	movwf	4
  7439  163E  087B               	movf	lcd_print@str+1,w
  7440  163F  0085               	movwf	5
  7441  1640  0012               	moviw fsr0++
  7442  1641  1D03               	btfss	3,2
  7443  1642  2E44               	goto	u2771
  7444  1643  2E45               	goto	u2770
  7445  1644                     u2771:
  7446  1644  2E25               	goto	l2779
  7447  1645                     u2770:
  7448  1645                     l314:
  7449  1645  0008               	return
  7450  1646                     __end_of_lcd_print:
  7451                           
  7452                           	psect	text25
  7453  17A9                     __ptext25:	
  7454 ;; *************** function _command *****************
  7455 ;; Defined at:
  7456 ;;		line 140 in file "lcd_lib.c"
  7457 ;; Parameters:    Size  Location     Type
  7458 ;;  p               1    wreg     PTR struct .
  7459 ;;		 -> NULL(0), main@lcd(4), 
  7460 ;;  val             1    3[COMMON] unsigned char 
  7461 ;;  mode            1    4[COMMON] unsigned char 
  7462 ;; Auto vars:     Size  Location     Type
  7463 ;;  p               1    9[COMMON] PTR struct .
  7464 ;;		 -> NULL(0), main@lcd(4), 
  7465 ;;  lownib          1    8[COMMON] unsigned char 
  7466 ;;  highnib         1    7[COMMON] unsigned char 
  7467 ;; Return value:  Size  Location     Type
  7468 ;;                  1    wreg      void 
  7469 ;; Registers used:
  7470 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  7471 ;; Tracked objects:
  7472 ;;		On entry : 0/0
  7473 ;;		On exit  : 0/0
  7474 ;;		Unchanged: 0/0
  7475 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  7476 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7477 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7478 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7479 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7480 ;;Total ram usage:        7 bytes
  7481 ;; Hardware stack levels used: 1
  7482 ;; Hardware stack levels required when called: 3
  7483 ;; This function calls:
  7484 ;;		_lcd_cmd
  7485 ;; This function is called by:
  7486 ;;		_lcd_set_cursor
  7487 ;;		_lcd_print
  7488 ;; This function uses a non-reentrant model
  7489 ;;
  7490                           
  7491                           
  7492                           ;psect for function _command
  7493  17A9                     _command:
  7494                           
  7495                           ;incstack = 0
  7496                           ; Regs used in _command: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
  7497                           ;command@p stored from wreg
  7498  17A9  00F9               	movwf	command@p
  7499  17AA                     l2571:
  7500                           
  7501                           ;lcd_lib.c: 141:     uint8_t highnib = (val & 0xf0) | p->_backlightval | mode;
  7502  17AA  0879               	movf	command@p,w
  7503  17AB  3E03               	addlw	3
  7504  17AC  0086               	movwf	6
  7505  17AD  0187               	clrf	7
  7506  17AE  0873               	movf	command@val,w
  7507  17AF  39F0               	andlw	240
  7508  17B0  0401               	iorwf	1,w
  7509  17B1  0474               	iorwf	command@mode,w
  7510  17B2  00F5               	movwf	??_command
  7511  17B3  0875               	movf	??_command,w
  7512  17B4  00F7               	movwf	command@highnib
  7513                           
  7514                           ;lcd_lib.c: 142:  uint8_t lownib = ((val << 4) & 0xf0) | p->_backlightval | mode;
  7515  17B5  0879               	movf	command@p,w
  7516  17B6  3E03               	addlw	3
  7517  17B7  0086               	movwf	6
  7518  17B8  0187               	clrf	7
  7519  17B9  0873               	movf	command@val,w
  7520  17BA  00F5               	movwf	??_command
  7521  17BB  3003               	movlw	3
  7522  17BC                     u2595:
  7523  17BC  35F5               	lslf	??_command,f
  7524  17BD  3EFF               	addlw	-1
  7525  17BE  1D03               	skipz
  7526  17BF  2FBC               	goto	u2595
  7527  17C0  3575               	lslf	??_command,w
  7528  17C1  39F0               	andlw	240
  7529  17C2  0401               	iorwf	1,w
  7530  17C3  0474               	iorwf	command@mode,w
  7531  17C4  00F6               	movwf	??_command+1
  7532  17C5  0876               	movf	??_command+1,w
  7533  17C6  00F8               	movwf	command@lownib
  7534  17C7                     l2573:
  7535                           
  7536                           ;lcd_lib.c: 144:  lcd_cmd(p, highnib);
  7537  17C7  0877               	movf	command@highnib,w
  7538  17C8  00F5               	movwf	??_command
  7539  17C9  0875               	movf	??_command,w
  7540  17CA  00F1               	movwf	lcd_cmd@cmd
  7541  17CB  0879               	movf	command@p,w
  7542  17CC  3195  2589  3197   	fcall	_lcd_cmd
  7543  17CF                     l2575:
  7544                           
  7545                           ;lcd_lib.c: 145:     lcd_cmd(p, highnib | 0b00000100);
  7546  17CF  0877               	movf	command@highnib,w
  7547  17D0  3804               	iorlw	4
  7548  17D1  00F5               	movwf	??_command
  7549  17D2  0875               	movf	??_command,w
  7550  17D3  00F1               	movwf	lcd_cmd@cmd
  7551  17D4  0879               	movf	command@p,w
  7552  17D5  3195  2589  3197   	fcall	_lcd_cmd
  7553  17D8                     l2577:
  7554                           
  7555                           ;lcd_lib.c: 146:     lcd_cmd(p, highnib & ~0b00000100);
  7556  17D8  0877               	movf	command@highnib,w
  7557  17D9  39FB               	andlw	251
  7558  17DA  00F5               	movwf	??_command
  7559  17DB  0875               	movf	??_command,w
  7560  17DC  00F1               	movwf	lcd_cmd@cmd
  7561  17DD  0879               	movf	command@p,w
  7562  17DE  3195  2589  3197   	fcall	_lcd_cmd
  7563  17E1                     l2579:
  7564                           
  7565                           ;lcd_lib.c: 148:     _delay((unsigned long)((100)*(8000000/4000000.0)));
  7566  17E1  3042               	movlw	66
  7567  17E2                     u3807:
  7568  17E2  0B89               	decfsz	9,f
  7569  17E3  2FE2               	goto	u3807
  7570  17E4  3200               	nop2
  7571  17E5                     l2581:
  7572                           
  7573                           ;lcd_lib.c: 150:  lcd_cmd(p, lownib);
  7574  17E5  0878               	movf	command@lownib,w
  7575  17E6  00F5               	movwf	??_command
  7576  17E7  0875               	movf	??_command,w
  7577  17E8  00F1               	movwf	lcd_cmd@cmd
  7578  17E9  0879               	movf	command@p,w
  7579  17EA  3195  2589  3197   	fcall	_lcd_cmd
  7580  17ED                     l2583:
  7581                           
  7582                           ;lcd_lib.c: 151:     lcd_cmd(p, lownib | 0b00000100);
  7583  17ED  0878               	movf	command@lownib,w
  7584  17EE  3804               	iorlw	4
  7585  17EF  00F5               	movwf	??_command
  7586  17F0  0875               	movf	??_command,w
  7587  17F1  00F1               	movwf	lcd_cmd@cmd
  7588  17F2  0879               	movf	command@p,w
  7589  17F3  3195  2589  3197   	fcall	_lcd_cmd
  7590  17F6                     l2585:
  7591                           
  7592                           ;lcd_lib.c: 152:     lcd_cmd(p, lownib & ~0b00000100);
  7593  17F6  0878               	movf	command@lownib,w
  7594  17F7  39FB               	andlw	251
  7595  17F8  00F5               	movwf	??_command
  7596  17F9  0875               	movf	??_command,w
  7597  17FA  00F1               	movwf	lcd_cmd@cmd
  7598  17FB  0879               	movf	command@p,w
  7599  17FC  3195  2589  3197   	fcall	_lcd_cmd
  7600  17FF                     l320:
  7601  17FF  0008               	return
  7602  1800                     __end_of_command:
  7603                           
  7604                           	psect	text26
  7605  1573                     __ptext26:	
  7606 ;; *************** function _lcd_backlight *****************
  7607 ;; Defined at:
  7608 ;;		line 81 in file "lcd_lib.c"
  7609 ;; Parameters:    Size  Location     Type
  7610 ;;  p               1    wreg     PTR struct .
  7611 ;;		 -> NULL(0), main@lcd(4), 
  7612 ;; Auto vars:     Size  Location     Type
  7613 ;;  p               1    4[COMMON] PTR struct .
  7614 ;;		 -> NULL(0), main@lcd(4), 
  7615 ;; Return value:  Size  Location     Type
  7616 ;;                  1    wreg      void 
  7617 ;; Registers used:
  7618 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  7619 ;; Tracked objects:
  7620 ;;		On entry : 0/0
  7621 ;;		On exit  : 0/0
  7622 ;;		Unchanged: 0/0
  7623 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  7624 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7625 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7626 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7627 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7628 ;;Total ram usage:        2 bytes
  7629 ;; Hardware stack levels used: 1
  7630 ;; Hardware stack levels required when called: 3
  7631 ;; This function calls:
  7632 ;;		_lcd_cmd
  7633 ;; This function is called by:
  7634 ;;		_initialize
  7635 ;; This function uses a non-reentrant model
  7636 ;;
  7637                           
  7638                           
  7639                           ;psect for function _lcd_backlight
  7640  1573                     _lcd_backlight:
  7641                           
  7642                           ;incstack = 0
  7643                           ; Regs used in _lcd_backlight: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
  7644                           ;lcd_backlight@p stored from wreg
  7645  1573  00F4               	movwf	lcd_backlight@p
  7646  1574                     l3231:
  7647                           
  7648                           ;lcd_lib.c: 82:     lcd_cmd(p, 0x08);
  7649  1574  3008               	movlw	8
  7650  1575  00F3               	movwf	??_lcd_backlight
  7651  1576  0873               	movf	??_lcd_backlight,w
  7652  1577  00F1               	movwf	lcd_cmd@cmd
  7653  1578  0874               	movf	lcd_backlight@p,w
  7654  1579  3195  2589  3195   	fcall	_lcd_cmd
  7655  157C                     l3233:
  7656                           
  7657                           ;lcd_lib.c: 83:     p->_backlightval = 0x08;
  7658  157C  3008               	movlw	8
  7659  157D  00F3               	movwf	??_lcd_backlight
  7660  157E  0874               	movf	lcd_backlight@p,w
  7661  157F  3E03               	addlw	3
  7662  1580  0086               	movwf	6
  7663  1581  0187               	clrf	7
  7664  1582  0873               	movf	??_lcd_backlight,w
  7665  1583  0081               	movwf	1
  7666  1584                     l3235:
  7667                           
  7668                           ;lcd_lib.c: 84:     _delay((unsigned long)((10)*(8000000/4000000.0)));
  7669  1584  3006               	movlw	6
  7670  1585                     u3817:
  7671  1585  0B89               	decfsz	9,f
  7672  1586  2D85               	goto	u3817
  7673  1587  3200               	nop2
  7674  1588                     l293:
  7675  1588  0008               	return
  7676  1589                     __end_of_lcd_backlight:
  7677                           
  7678                           	psect	text27
  7679  1589                     __ptext27:	
  7680 ;; *************** function _lcd_cmd *****************
  7681 ;; Defined at:
  7682 ;;		line 6 in file "lcd_lib.c"
  7683 ;; Parameters:    Size  Location     Type
  7684 ;;  p               1    wreg     PTR struct .
  7685 ;;		 -> NULL(0), main@lcd(4), 
  7686 ;;  cmd             1    1[COMMON] unsigned char 
  7687 ;; Auto vars:     Size  Location     Type
  7688 ;;  p               1    2[COMMON] PTR struct .
  7689 ;;		 -> NULL(0), main@lcd(4), 
  7690 ;; Return value:  Size  Location     Type
  7691 ;;                  1    wreg      void 
  7692 ;; Registers used:
  7693 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  7694 ;; Tracked objects:
  7695 ;;		On entry : 0/0
  7696 ;;		On exit  : 0/0
  7697 ;;		Unchanged: 0/0
  7698 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  7699 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7700 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7701 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7702 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7703 ;;Total ram usage:        2 bytes
  7704 ;; Hardware stack levels used: 1
  7705 ;; Hardware stack levels required when called: 2
  7706 ;; This function calls:
  7707 ;;		_i2c_start
  7708 ;;		_i2c_stop
  7709 ;;		_i2c_write
  7710 ;; This function is called by:
  7711 ;;		_lcd_backlight
  7712 ;;		_command
  7713 ;;		_write4bits
  7714 ;; This function uses a non-reentrant model
  7715 ;;
  7716                           
  7717                           
  7718                           ;psect for function _lcd_cmd
  7719  1589                     _lcd_cmd:
  7720                           
  7721                           ;incstack = 0
  7722                           ; Regs used in _lcd_cmd: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
  7723                           ;lcd_cmd@p stored from wreg
  7724  1589  00F2               	movwf	lcd_cmd@p
  7725  158A                     l2445:
  7726                           
  7727                           ;lcd_lib.c: 7:     i2c_start();
  7728  158A  3195  2544  3195   	fcall	_i2c_start
  7729  158D                     l2447:
  7730                           
  7731                           ;lcd_lib.c: 8:     i2c_write(p->lcd_address << 1);
  7732  158D  0872               	movf	lcd_cmd@p,w
  7733  158E  0086               	movwf	6
  7734  158F  0187               	clrf	7
  7735  1590  3501               	lslf	1,w
  7736  1591  3195  254E  3195   	fcall	_i2c_write
  7737  1594                     l2449:
  7738                           
  7739                           ;lcd_lib.c: 9:     i2c_write(cmd);
  7740  1594  0871               	movf	lcd_cmd@cmd,w
  7741  1595  3195  254E  3195   	fcall	_i2c_write
  7742  1598                     l2451:
  7743                           
  7744                           ;lcd_lib.c: 10:     i2c_stop();
  7745  1598  3195  251F  3195   	fcall	_i2c_stop
  7746  159B                     l2453:
  7747                           
  7748                           ;lcd_lib.c: 11:     _delay((unsigned long)((10)*(8000000/4000000.0)));
  7749  159B  3006               	movlw	6
  7750  159C                     u3827:
  7751  159C  0B89               	decfsz	9,f
  7752  159D  2D9C               	goto	u3827
  7753  159E  3200               	nop2
  7754  159F                     l287:
  7755  159F  0008               	return
  7756  15A0                     __end_of_lcd_cmd:
  7757                           
  7758                           	psect	text28
  7759  154E                     __ptext28:	
  7760 ;; *************** function _i2c_write *****************
  7761 ;; Defined at:
  7762 ;;		line 25 in file "i2c.c"
  7763 ;; Parameters:    Size  Location     Type
  7764 ;;  data            1    wreg     unsigned char 
  7765 ;; Auto vars:     Size  Location     Type
  7766 ;;  data            1    0[COMMON] unsigned char 
  7767 ;; Return value:  Size  Location     Type
  7768 ;;                  1    wreg      void 
  7769 ;; Registers used:
  7770 ;;		wreg, status,2, status,0, pclath, cstack
  7771 ;; Tracked objects:
  7772 ;;		On entry : 0/0
  7773 ;;		On exit  : 0/0
  7774 ;;		Unchanged: 0/0
  7775 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  7776 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7777 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7778 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7779 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7780 ;;Total ram usage:        1 bytes
  7781 ;; Hardware stack levels used: 1
  7782 ;; Hardware stack levels required when called: 1
  7783 ;; This function calls:
  7784 ;;		_i2c_wait
  7785 ;; This function is called by:
  7786 ;;		_lcd_cmd
  7787 ;; This function uses a non-reentrant model
  7788 ;;
  7789                           
  7790                           
  7791                           ;psect for function _i2c_write
  7792  154E                     _i2c_write:
  7793                           
  7794                           ;incstack = 0
  7795                           ; Regs used in _i2c_write: [wreg+status,2+status,0+pclath+cstack]
  7796                           ;i2c_write@data stored from wreg
  7797  154E  00F0               	movwf	i2c_write@data
  7798  154F                     l2309:
  7799                           
  7800                           ;i2c.c: 26:     SSPBUF = data;
  7801  154F  0870               	movf	i2c_write@data,w
  7802  1550  0024               	movlb	4	; select bank4
  7803  1551  0091               	movwf	17	;volatile
  7804  1552                     l96:	
  7805                           ;i2c.c: 27:     while(SSPSTATbits.BF);
  7806                           
  7807  1552  1814               	btfsc	20,0	;volatile
  7808  1553  2D55               	goto	u1941
  7809  1554  2D56               	goto	u1940
  7810  1555                     u1941:
  7811  1555  2D52               	goto	l96
  7812  1556                     u1940:
  7813  1556                     l99:
  7814  1556  1B16               	btfsc	22,6	;volatile
  7815  1557  2D59               	goto	u1951
  7816  1558  2D5A               	goto	u1950
  7817  1559                     u1951:
  7818  1559  2D56               	goto	l99
  7819  155A                     u1950:
  7820  155A                     l2311:
  7821                           
  7822                           ;i2c.c: 29:     i2c_wait();
  7823  155A  3188  2003  3195   	fcall	_i2c_wait
  7824  155D                     l102:
  7825  155D  0008               	return
  7826  155E                     __end_of_i2c_write:
  7827                           
  7828                           	psect	text29
  7829  151F                     __ptext29:	
  7830 ;; *************** function _i2c_stop *****************
  7831 ;; Defined at:
  7832 ;;		line 14 in file "i2c.c"
  7833 ;; Parameters:    Size  Location     Type
  7834 ;;		None
  7835 ;; Auto vars:     Size  Location     Type
  7836 ;;		None
  7837 ;; Return value:  Size  Location     Type
  7838 ;;                  1    wreg      void 
  7839 ;; Registers used:
  7840 ;;		None
  7841 ;; Tracked objects:
  7842 ;;		On entry : 0/0
  7843 ;;		On exit  : 0/0
  7844 ;;		Unchanged: 0/0
  7845 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  7846 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7847 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7848 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7849 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7850 ;;Total ram usage:        0 bytes
  7851 ;; Hardware stack levels used: 1
  7852 ;; This function calls:
  7853 ;;		Nothing
  7854 ;; This function is called by:
  7855 ;;		_lcd_cmd
  7856 ;; This function uses a non-reentrant model
  7857 ;;
  7858                           
  7859                           
  7860                           ;psect for function _i2c_stop
  7861  151F                     _i2c_stop:
  7862  151F                     l2307:	
  7863                           ;incstack = 0
  7864                           ; Regs used in _i2c_stop: []
  7865                           
  7866                           
  7867                           ;i2c.c: 15:     SSPCON2bits.PEN = 1;
  7868  151F  0024               	movlb	4	; select bank4
  7869  1520  1516               	bsf	22,2	;volatile
  7870  1521                     l84:	
  7871                           ;i2c.c: 16:     while(SSPCON2bits.PEN);
  7872                           
  7873  1521  1916               	btfsc	22,2	;volatile
  7874  1522  2D24               	goto	u1931
  7875  1523  2D25               	goto	u1930
  7876  1524                     u1931:
  7877  1524  2D21               	goto	l84
  7878  1525                     u1930:
  7879  1525                     l87:
  7880  1525  0008               	return
  7881  1526                     __end_of_i2c_stop:
  7882                           
  7883                           	psect	text30
  7884  1544                     __ptext30:	
  7885 ;; *************** function _i2c_start *****************
  7886 ;; Defined at:
  7887 ;;		line 8 in file "i2c.c"
  7888 ;; Parameters:    Size  Location     Type
  7889 ;;		None
  7890 ;; Auto vars:     Size  Location     Type
  7891 ;;		None
  7892 ;; Return value:  Size  Location     Type
  7893 ;;                  1    wreg      void 
  7894 ;; Registers used:
  7895 ;;		wreg, status,2, status,0, pclath, cstack
  7896 ;; Tracked objects:
  7897 ;;		On entry : 0/0
  7898 ;;		On exit  : 0/0
  7899 ;;		Unchanged: 0/0
  7900 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  7901 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7902 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7903 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7904 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7905 ;;Total ram usage:        0 bytes
  7906 ;; Hardware stack levels used: 1
  7907 ;; Hardware stack levels required when called: 1
  7908 ;; This function calls:
  7909 ;;		_i2c_wait
  7910 ;; This function is called by:
  7911 ;;		_lcd_cmd
  7912 ;; This function uses a non-reentrant model
  7913 ;;
  7914                           
  7915                           
  7916                           ;psect for function _i2c_start
  7917  1544                     _i2c_start:
  7918  1544                     l2303:	
  7919                           ;incstack = 0
  7920                           ; Regs used in _i2c_start: [wreg+status,2+status,0+pclath+cstack]
  7921                           
  7922                           
  7923                           ;i2c.c: 9:     i2c_wait();
  7924  1544  3188  2003  3195   	fcall	_i2c_wait
  7925  1547                     l2305:
  7926                           
  7927                           ;i2c.c: 10:     SSPCON2bits.SEN = 1;
  7928  1547  0024               	movlb	4	; select bank4
  7929  1548  1416               	bsf	22,0	;volatile
  7930  1549                     l78:	
  7931                           ;i2c.c: 11:     while(SSPCON2bits.SEN);
  7932                           
  7933  1549  1816               	btfsc	22,0	;volatile
  7934  154A  2D4C               	goto	u1921
  7935  154B  2D4D               	goto	u1920
  7936  154C                     u1921:
  7937  154C  2D49               	goto	l78
  7938  154D                     u1920:
  7939  154D                     l81:
  7940  154D  0008               	return
  7941  154E                     __end_of_i2c_start:
  7942                           
  7943                           	psect	text31
  7944  0803                     __ptext31:	
  7945 ;; *************** function _i2c_wait *****************
  7946 ;; Defined at:
  7947 ;;		line 4 in file "i2c.c"
  7948 ;; Parameters:    Size  Location     Type
  7949 ;;		None
  7950 ;; Auto vars:     Size  Location     Type
  7951 ;;		None
  7952 ;; Return value:  Size  Location     Type
  7953 ;;                  1    wreg      void 
  7954 ;; Registers used:
  7955 ;;		wreg, status,2
  7956 ;; Tracked objects:
  7957 ;;		On entry : 0/0
  7958 ;;		On exit  : 0/0
  7959 ;;		Unchanged: 0/0
  7960 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  7961 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7962 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7963 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7964 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7965 ;;Total ram usage:        0 bytes
  7966 ;; Hardware stack levels used: 1
  7967 ;; This function calls:
  7968 ;;		Nothing
  7969 ;; This function is called by:
  7970 ;;		_i2c_start
  7971 ;;		_i2c_write
  7972 ;;		_i2c_repeated_start
  7973 ;;		_i2c_read
  7974 ;; This function uses a non-reentrant model
  7975 ;;
  7976                           
  7977                           
  7978                           ;psect for function _i2c_wait
  7979  0803                     _i2c_wait:
  7980  0803                     l2279:	
  7981                           ;incstack = 0
  7982                           ; Regs used in _i2c_wait: [wreg+status,2]
  7983                           
  7984  0803                     l2281:	
  7985                           ;i2c.c: 5:     while((SSPCON2 & 0x1F) || (SSPSTAT & 0x04));
  7986                           
  7987  0803  0024               	movlb	4	; select bank4
  7988  0804  0816               	movf	22,w	;volatile
  7989  0805  391F               	andlw	31
  7990  0806  1D03               	btfss	3,2
  7991  0807  2809               	goto	u1881
  7992  0808  280A               	goto	u1880
  7993  0809                     u1881:
  7994  0809  2803               	goto	l2281
  7995  080A                     u1880:
  7996  080A                     l2283:
  7997  080A  1914               	btfsc	20,2	;volatile
  7998  080B  280D               	goto	u1891
  7999  080C  280E               	goto	u1890
  8000  080D                     u1891:
  8001  080D  2803               	goto	l2281
  8002  080E                     u1890:
  8003  080E                     l75:
  8004  080E  0008               	return
  8005  080F                     __end_of_i2c_wait:
  8006                           
  8007                           	psect	text32
  8008  09A0                     __ptext32:	
  8009 ;; *************** function _calc_percentage *****************
  8010 ;; Defined at:
  8011 ;;		line 22 in file "drink_meter.c"
  8012 ;; Parameters:    Size  Location     Type
  8013 ;;  p               1    wreg     PTR struct .
  8014 ;;		 -> main@drink(5), 
  8015 ;; Auto vars:     Size  Location     Type
  8016 ;;  p               1   28[BANK0 ] PTR struct .
  8017 ;;		 -> main@drink(5), 
  8018 ;; Return value:  Size  Location     Type
  8019 ;;                  1    wreg      void 
  8020 ;; Registers used:
  8021 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  8022 ;; Tracked objects:
  8023 ;;		On entry : 0/0
  8024 ;;		On exit  : 0/0
  8025 ;;		Unchanged: 0/0
  8026 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  8027 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8028 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8029 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8030 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8031 ;;Total ram usage:        3 bytes
  8032 ;; Hardware stack levels used: 1
  8033 ;; Hardware stack levels required when called: 2
  8034 ;; This function calls:
  8035 ;;		___bmul
  8036 ;;		___lwdiv
  8037 ;;		_get_scale_val
  8038 ;;		_scale_convert_gram
  8039 ;; This function is called by:
  8040 ;;		_main
  8041 ;;		_set_max_gram
  8042 ;; This function uses a non-reentrant model
  8043 ;;
  8044                           
  8045                           
  8046                           ;psect for function _calc_percentage
  8047  09A0                     _calc_percentage:
  8048                           
  8049                           ;incstack = 0
  8050                           ; Regs used in _calc_percentage: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
  8051                           ;calc_percentage@p stored from wreg
  8052  09A0  0020               	movlb	0	; select bank0
  8053  09A1  00BC               	movwf	calc_percentage@p
  8054  09A2                     l3325:
  8055                           
  8056                           ;drink_meter.c: 24:     p->loadcell->weight_dat = get_scale_val(p->loadcell, 8);
  8057  09A2  3008               	movlw	8
  8058  09A3  00BA               	movwf	??_calc_percentage
  8059  09A4  083A               	movf	??_calc_percentage,w
  8060  09A5  00A0               	movwf	get_scale_val@scale_avg_count
  8061  09A6  083C               	movf	calc_percentage@p,w
  8062  09A7  0086               	movwf	6
  8063  09A8  0187               	clrf	7
  8064  09A9  0801               	movf	1,w
  8065  09AA  318E  2633  3189   	fcall	_get_scale_val
  8066  09AD  0020               	movlb	0	; select bank0
  8067  09AE  083C               	movf	calc_percentage@p,w
  8068  09AF  0086               	movwf	6
  8069  09B0  0187               	clrf	7
  8070  09B1  0801               	movf	1,w
  8071  09B2  3E06               	addlw	6
  8072  09B3  0086               	movwf	6
  8073  09B4  0187               	clrf	7
  8074  09B5  0820               	movf	?_get_scale_val,w
  8075  09B6  3FC0               	movwi [0]fsr1
  8076  09B7  0821               	movf	?_get_scale_val+1,w
  8077  09B8  3FC1               	movwi [1]fsr1
  8078  09B9  0822               	movf	?_get_scale_val+2,w
  8079  09BA  3FC2               	movwi [2]fsr1
  8080  09BB  0823               	movf	?_get_scale_val+3,w
  8081  09BC  3FC3               	movwi [3]fsr1
  8082                           
  8083                           ;drink_meter.c: 25:     scale_convert_gram(p->loadcell);
  8084  09BD  083C               	movf	calc_percentage@p,w
  8085  09BE  0086               	movwf	6
  8086  09BF  0187               	clrf	7
  8087  09C0  0801               	movf	1,w
  8088  09C1  318C  244D  3189   	fcall	_scale_convert_gram
  8089  09C4                     l3327:
  8090                           
  8091                           ;drink_meter.c: 28:     if(p->loadcell->gram == 0){
  8092  09C4  0020               	movlb	0	; select bank0
  8093  09C5  083C               	movf	calc_percentage@p,w
  8094  09C6  0086               	movwf	6
  8095  09C7  0187               	clrf	7
  8096  09C8  0801               	movf	1,w
  8097  09C9  3E0A               	addlw	10
  8098  09CA  0086               	movwf	6
  8099  09CB  0187               	clrf	7
  8100  09CC  0016               	moviw fsr1++
  8101  09CD  0401               	iorwf	1,w
  8102  09CE  1D03               	btfss	3,2
  8103  09CF  29D1               	goto	u3601
  8104  09D0  29D2               	goto	u3600
  8105  09D1                     u3601:
  8106  09D1  29D8               	goto	l3331
  8107  09D2                     u3600:
  8108  09D2                     l3329:
  8109                           
  8110                           ;drink_meter.c: 29:         p->percentage = 0;
  8111  09D2  083C               	movf	calc_percentage@p,w
  8112  09D3  3E04               	addlw	4
  8113  09D4  0086               	movwf	6
  8114  09D5  0187               	clrf	7
  8115  09D6  0181               	clrf	1
  8116                           
  8117                           ;drink_meter.c: 30:     }else{
  8118  09D7  29FE               	goto	l347
  8119  09D8                     l3331:
  8120                           
  8121                           ;drink_meter.c: 32:         p->percentage = (p->loadcell->gram / p->max_gram) * 100;
  8122  09D8  3064               	movlw	100
  8123  09D9  00BA               	movwf	??_calc_percentage
  8124  09DA  083A               	movf	??_calc_percentage,w
  8125  09DB  00F8               	movwf	___bmul@multiplicand
  8126  09DC  083C               	movf	calc_percentage@p,w
  8127  09DD  0086               	movwf	6
  8128  09DE  0187               	clrf	7
  8129  09DF  0801               	movf	1,w
  8130  09E0  3E0A               	addlw	10
  8131  09E1  0086               	movwf	6
  8132  09E2  0187               	clrf	7
  8133  09E3  3F40               	moviw [0]fsr1
  8134  09E4  00F2               	movwf	___lwdiv@dividend
  8135  09E5  3F41               	moviw [1]fsr1
  8136  09E6  00F3               	movwf	___lwdiv@dividend+1
  8137  09E7  083C               	movf	calc_percentage@p,w
  8138  09E8  3E02               	addlw	2
  8139  09E9  0086               	movwf	6
  8140  09EA  0187               	clrf	7
  8141  09EB  3F40               	moviw [0]fsr1
  8142  09EC  00F0               	movwf	___lwdiv@divisor
  8143  09ED  3F41               	moviw [1]fsr1
  8144  09EE  00F1               	movwf	___lwdiv@divisor+1
  8145  09EF  3196  26E0  3189   	fcall	___lwdiv
  8146  09F2  0870               	movf	?___lwdiv,w
  8147  09F3  3195  255E  3189   	fcall	___bmul
  8148  09F6  0020               	movlb	0	; select bank0
  8149  09F7  00BB               	movwf	??_calc_percentage+1
  8150  09F8  083C               	movf	calc_percentage@p,w
  8151  09F9  3E04               	addlw	4
  8152  09FA  0086               	movwf	6
  8153  09FB  0187               	clrf	7
  8154  09FC  083B               	movf	??_calc_percentage+1,w
  8155  09FD  0081               	movwf	1
  8156  09FE                     l347:
  8157  09FE  0008               	return
  8158  09FF                     __end_of_calc_percentage:
  8159                           
  8160                           	psect	text33
  8161  0C4D                     __ptext33:	
  8162 ;; *************** function _scale_convert_gram *****************
  8163 ;; Defined at:
  8164 ;;		line 75 in file "loadcell.c"
  8165 ;; Parameters:    Size  Location     Type
  8166 ;;  p               1    wreg     PTR struct .
  8167 ;;		 -> NULL(0), main@loadcell(12), 
  8168 ;; Auto vars:     Size  Location     Type
  8169 ;;  p               1   25[BANK0 ] PTR struct .
  8170 ;;		 -> NULL(0), main@loadcell(12), 
  8171 ;;  temp            4   21[BANK0 ] float 
  8172 ;; Return value:  Size  Location     Type
  8173 ;;                  1    wreg      void 
  8174 ;; Registers used:
  8175 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  8176 ;; Tracked objects:
  8177 ;;		On entry : 0/0
  8178 ;;		On exit  : 0/0
  8179 ;;		Unchanged: 0/0
  8180 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  8181 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8182 ;;      Locals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8183 ;;      Temps:          0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8184 ;;      Totals:         0      13       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8185 ;;Total ram usage:       13 bytes
  8186 ;; Hardware stack levels used: 1
  8187 ;; Hardware stack levels required when called: 1
  8188 ;; This function calls:
  8189 ;;		___fldiv
  8190 ;;		___fltol
  8191 ;;		___xxtofl
  8192 ;; This function is called by:
  8193 ;;		_calc_percentage
  8194 ;; This function uses a non-reentrant model
  8195 ;;
  8196                           
  8197                           
  8198                           ;psect for function _scale_convert_gram
  8199  0C4D                     _scale_convert_gram:
  8200                           
  8201                           ;incstack = 0
  8202                           ; Regs used in _scale_convert_gram: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
  8203                           ;scale_convert_gram@p stored from wreg
  8204  0C4D  0020               	movlb	0	; select bank0
  8205  0C4E  00B9               	movwf	scale_convert_gram@p
  8206  0C4F                     l3185:
  8207                           
  8208                           ;loadcell.c: 77:     if(p->weight_dat < p->weight_zero){
  8209  0C4F  0839               	movf	scale_convert_gram@p,w
  8210  0C50  3E02               	addlw	2
  8211  0C51  0086               	movwf	6
  8212  0C52  0187               	clrf	7
  8213  0C53  3F40               	moviw [0]fsr1
  8214  0C54  00AD               	movwf	??_scale_convert_gram
  8215  0C55  3F41               	moviw [1]fsr1
  8216  0C56  00AE               	movwf	??_scale_convert_gram+1
  8217  0C57  3F42               	moviw [2]fsr1
  8218  0C58  00AF               	movwf	??_scale_convert_gram+2
  8219  0C59  3F43               	moviw [3]fsr1
  8220  0C5A  00B0               	movwf	??_scale_convert_gram+3
  8221  0C5B  0839               	movf	scale_convert_gram@p,w
  8222  0C5C  3E06               	addlw	6
  8223  0C5D  0086               	movwf	6
  8224  0C5E  0187               	clrf	7
  8225  0C5F  3F40               	moviw [0]fsr1
  8226  0C60  00B1               	movwf	??_scale_convert_gram+4
  8227  0C61  3F41               	moviw [1]fsr1
  8228  0C62  00B2               	movwf	??_scale_convert_gram+5
  8229  0C63  3F42               	moviw [2]fsr1
  8230  0C64  00B3               	movwf	??_scale_convert_gram+6
  8231  0C65  3F43               	moviw [3]fsr1
  8232  0C66  00B4               	movwf	??_scale_convert_gram+7
  8233  0C67  0830               	movf	??_scale_convert_gram+3,w
  8234  0C68  0234               	subwf	??_scale_convert_gram+7,w
  8235  0C69  1D03               	skipz
  8236  0C6A  2C75               	goto	u3485
  8237  0C6B  082F               	movf	??_scale_convert_gram+2,w
  8238  0C6C  0233               	subwf	??_scale_convert_gram+6,w
  8239  0C6D  1D03               	skipz
  8240  0C6E  2C75               	goto	u3485
  8241  0C6F  082E               	movf	??_scale_convert_gram+1,w
  8242  0C70  0232               	subwf	??_scale_convert_gram+5,w
  8243  0C71  1D03               	skipz
  8244  0C72  2C75               	goto	u3485
  8245  0C73  082D               	movf	??_scale_convert_gram,w
  8246  0C74  0231               	subwf	??_scale_convert_gram+4,w
  8247  0C75                     u3485:
  8248  0C75  1803               	skipnc
  8249  0C76  2C78               	goto	u3481
  8250  0C77  2C79               	goto	u3480
  8251  0C78                     u3481:
  8252  0C78  2C81               	goto	l3191
  8253  0C79                     u3480:
  8254  0C79                     l3187:
  8255                           
  8256                           ;loadcell.c: 78:         p->gram = 0;
  8257  0C79  0839               	movf	scale_convert_gram@p,w
  8258  0C7A  3E0A               	addlw	10
  8259  0C7B  0086               	movwf	6
  8260  0C7C  0187               	clrf	7
  8261  0C7D  3000               	movlw	0
  8262  0C7E  3FC0               	movwi [0]fsr1
  8263  0C7F  3FC1               	movwi [1]fsr1
  8264  0C80  2CE6               	goto	l268
  8265  0C81                     l3191:
  8266                           
  8267                           ;loadcell.c: 82:     float temp = p->weight_dat - p->weight_zero;
  8268  0C81  0839               	movf	scale_convert_gram@p,w
  8269  0C82  3E02               	addlw	2
  8270  0C83  0086               	movwf	6
  8271  0C84  0187               	clrf	7
  8272  0C85  3F40               	moviw [0]fsr1
  8273  0C86  00AD               	movwf	??_scale_convert_gram
  8274  0C87  3F41               	moviw [1]fsr1
  8275  0C88  00AE               	movwf	??_scale_convert_gram+1
  8276  0C89  3F42               	moviw [2]fsr1
  8277  0C8A  00AF               	movwf	??_scale_convert_gram+2
  8278  0C8B  3F43               	moviw [3]fsr1
  8279  0C8C  00B0               	movwf	??_scale_convert_gram+3
  8280  0C8D  0839               	movf	scale_convert_gram@p,w
  8281  0C8E  3E06               	addlw	6
  8282  0C8F  0086               	movwf	6
  8283  0C90  0187               	clrf	7
  8284  0C91  3F40               	moviw [0]fsr1
  8285  0C92  00B1               	movwf	??_scale_convert_gram+4
  8286  0C93  3F41               	moviw [1]fsr1
  8287  0C94  00B2               	movwf	??_scale_convert_gram+5
  8288  0C95  3F42               	moviw [2]fsr1
  8289  0C96  00B3               	movwf	??_scale_convert_gram+6
  8290  0C97  3F43               	moviw [3]fsr1
  8291  0C98  00B4               	movwf	??_scale_convert_gram+7
  8292  0C99  082D               	movf	??_scale_convert_gram,w
  8293  0C9A  02B1               	subwf	??_scale_convert_gram+4,f
  8294  0C9B  082E               	movf	??_scale_convert_gram+1,w
  8295  0C9C  3BB2               	subwfb	??_scale_convert_gram+5,f
  8296  0C9D  082F               	movf	??_scale_convert_gram+2,w
  8297  0C9E  3BB3               	subwfb	??_scale_convert_gram+6,f
  8298  0C9F  0830               	movf	??_scale_convert_gram+3,w
  8299  0CA0  3BB4               	subwfb	??_scale_convert_gram+7,f
  8300  0CA1  0834               	movf	??_scale_convert_gram+7,w
  8301  0CA2  00F3               	movwf	___xxtofl@val+3
  8302  0CA3  0833               	movf	??_scale_convert_gram+6,w
  8303  0CA4  00F2               	movwf	___xxtofl@val+2
  8304  0CA5  0832               	movf	??_scale_convert_gram+5,w
  8305  0CA6  00F1               	movwf	___xxtofl@val+1
  8306  0CA7  0831               	movf	??_scale_convert_gram+4,w
  8307  0CA8  00F0               	movwf	___xxtofl@val
  8308  0CA9  3000               	movlw	0
  8309  0CAA  3180  2025  318C   	fcall	___xxtofl
  8310  0CAD  0873               	movf	?___xxtofl+3,w
  8311  0CAE  0020               	movlb	0	; select bank0
  8312  0CAF  00B8               	movwf	scale_convert_gram@temp+3
  8313  0CB0  0872               	movf	?___xxtofl+2,w
  8314  0CB1  00B7               	movwf	scale_convert_gram@temp+2
  8315  0CB2  0871               	movf	?___xxtofl+1,w
  8316  0CB3  00B6               	movwf	scale_convert_gram@temp+1
  8317  0CB4  0870               	movf	?___xxtofl,w
  8318  0CB5  00B5               	movwf	scale_convert_gram@temp
  8319  0CB6                     l3193:
  8320                           
  8321                           ;loadcell.c: 83:     temp = temp / 493;
  8322  0CB6  3043               	movlw	67
  8323  0CB7  00F3               	movwf	___fldiv@a+3
  8324  0CB8  30F6               	movlw	246
  8325  0CB9  00F2               	movwf	___fldiv@a+2
  8326  0CBA  3080               	movlw	128
  8327  0CBB  00F1               	movwf	___fldiv@a+1
  8328  0CBC  3000               	movlw	0
  8329  0CBD  00F0               	movwf	___fldiv@a
  8330  0CBE  0838               	movf	scale_convert_gram@temp+3,w
  8331  0CBF  00F7               	movwf	___fldiv@b+3
  8332  0CC0  0837               	movf	scale_convert_gram@temp+2,w
  8333  0CC1  00F6               	movwf	___fldiv@b+2
  8334  0CC2  0836               	movf	scale_convert_gram@temp+1,w
  8335  0CC3  00F5               	movwf	___fldiv@b+1
  8336  0CC4  0835               	movf	scale_convert_gram@temp,w
  8337  0CC5  00F4               	movwf	___fldiv@b
  8338  0CC6  3184  2433  318C   	fcall	___fldiv
  8339  0CC9  0873               	movf	?___fldiv+3,w
  8340  0CCA  0020               	movlb	0	; select bank0
  8341  0CCB  00B8               	movwf	scale_convert_gram@temp+3
  8342  0CCC  0872               	movf	?___fldiv+2,w
  8343  0CCD  00B7               	movwf	scale_convert_gram@temp+2
  8344  0CCE  0871               	movf	?___fldiv+1,w
  8345  0CCF  00B6               	movwf	scale_convert_gram@temp+1
  8346  0CD0  0870               	movf	?___fldiv,w
  8347  0CD1  00B5               	movwf	scale_convert_gram@temp
  8348  0CD2                     l3195:
  8349                           
  8350                           ;loadcell.c: 84:     p->gram = (uint16_t)temp;
  8351  0CD2  0838               	movf	scale_convert_gram@temp+3,w
  8352  0CD3  00F3               	movwf	___fltol@f1+3
  8353  0CD4  0837               	movf	scale_convert_gram@temp+2,w
  8354  0CD5  00F2               	movwf	___fltol@f1+2
  8355  0CD6  0836               	movf	scale_convert_gram@temp+1,w
  8356  0CD7  00F1               	movwf	___fltol@f1+1
  8357  0CD8  0835               	movf	scale_convert_gram@temp,w
  8358  0CD9  00F0               	movwf	___fltol@f1
  8359  0CDA  318A  22D9  318C   	fcall	___fltol
  8360  0CDD  0020               	movlb	0	; select bank0
  8361  0CDE  0839               	movf	scale_convert_gram@p,w
  8362  0CDF  3E0A               	addlw	10
  8363  0CE0  0086               	movwf	6
  8364  0CE1  0187               	clrf	7
  8365  0CE2  0870               	movf	?___fltol,w
  8366  0CE3  3FC0               	movwi [0]fsr1
  8367  0CE4  0871               	movf	?___fltol+1,w
  8368  0CE5  3FC1               	movwi [1]fsr1
  8369  0CE6                     l268:
  8370  0CE6  0008               	return
  8371  0CE7                     __end_of_scale_convert_gram:
  8372                           
  8373                           	psect	text34
  8374  0025                     __ptext34:	
  8375 ;; *************** function ___xxtofl *****************
  8376 ;; Defined at:
  8377 ;;		line 10 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\xxtofl.c"
  8378 ;; Parameters:    Size  Location     Type
  8379 ;;  sign            1    wreg     unsigned char 
  8380 ;;  val             4    0[COMMON] long 
  8381 ;; Auto vars:     Size  Location     Type
  8382 ;;  sign            1    8[COMMON] unsigned char 
  8383 ;;  arg             4   10[COMMON] unsigned long 
  8384 ;;  exp             1    9[COMMON] unsigned char 
  8385 ;; Return value:  Size  Location     Type
  8386 ;;                  4    0[COMMON] unsigned char 
  8387 ;; Registers used:
  8388 ;;		wreg, status,2, status,0
  8389 ;; Tracked objects:
  8390 ;;		On entry : 0/0
  8391 ;;		On exit  : 0/0
  8392 ;;		Unchanged: 0/0
  8393 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  8394 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8395 ;;      Locals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8396 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8397 ;;      Totals:        14       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8398 ;;Total ram usage:       14 bytes
  8399 ;; Hardware stack levels used: 1
  8400 ;; This function calls:
  8401 ;;		Nothing
  8402 ;; This function is called by:
  8403 ;;		_scale_convert_gram
  8404 ;; This function uses a non-reentrant model
  8405 ;;
  8406                           
  8407                           
  8408                           ;psect for function ___xxtofl
  8409  0025                     ___xxtofl:
  8410                           
  8411                           ;incstack = 0
  8412                           ; Regs used in ___xxtofl: [wreg+status,2+status,0]
  8413                           ;___xxtofl@sign stored from wreg
  8414  0025  00F8               	movwf	___xxtofl@sign
  8415  0026                     l2987:
  8416  0026  0878               	movf	___xxtofl@sign,w
  8417  0027  1903               	btfsc	3,2
  8418  0028  282A               	goto	u3241
  8419  0029  282B               	goto	u3240
  8420  002A                     u3241:
  8421  002A  283F               	goto	l2993
  8422  002B                     u3240:
  8423  002B                     l2989:
  8424  002B  1FF3               	btfss	___xxtofl@val+3,7
  8425  002C  282E               	goto	u3251
  8426  002D  282F               	goto	u3250
  8427  002E                     u3251:
  8428  002E  283F               	goto	l2993
  8429  002F                     u3250:
  8430  002F                     l2991:
  8431  002F  0970               	comf	___xxtofl@val,w
  8432  0030  00FA               	movwf	___xxtofl@arg
  8433  0031  0971               	comf	___xxtofl@val+1,w
  8434  0032  00FB               	movwf	___xxtofl@arg+1
  8435  0033  0972               	comf	___xxtofl@val+2,w
  8436  0034  00FC               	movwf	___xxtofl@arg+2
  8437  0035  0973               	comf	___xxtofl@val+3,w
  8438  0036  00FD               	movwf	___xxtofl@arg+3
  8439  0037  0AFA               	incf	___xxtofl@arg,f
  8440  0038  1903               	skipnz
  8441  0039  0AFB               	incf	___xxtofl@arg+1,f
  8442  003A  1903               	skipnz
  8443  003B  0AFC               	incf	___xxtofl@arg+2,f
  8444  003C  1903               	skipnz
  8445  003D  0AFD               	incf	___xxtofl@arg+3,f
  8446  003E  2847               	goto	l944
  8447  003F                     l2993:
  8448  003F  0873               	movf	___xxtofl@val+3,w
  8449  0040  00FD               	movwf	___xxtofl@arg+3
  8450  0041  0872               	movf	___xxtofl@val+2,w
  8451  0042  00FC               	movwf	___xxtofl@arg+2
  8452  0043  0871               	movf	___xxtofl@val+1,w
  8453  0044  00FB               	movwf	___xxtofl@arg+1
  8454  0045  0870               	movf	___xxtofl@val,w
  8455  0046  00FA               	movwf	___xxtofl@arg
  8456  0047                     l944:
  8457  0047  0873               	movf	___xxtofl@val+3,w
  8458  0048  0472               	iorwf	___xxtofl@val+2,w
  8459  0049  0471               	iorwf	___xxtofl@val+1,w
  8460  004A  0470               	iorwf	___xxtofl@val,w
  8461  004B  1D03               	skipz
  8462  004C  284E               	goto	u3261
  8463  004D  284F               	goto	u3260
  8464  004E                     u3261:
  8465  004E  2858               	goto	l2999
  8466  004F                     u3260:
  8467  004F                     l2995:
  8468  004F  3000               	movlw	0
  8469  0050  00F3               	movwf	?___xxtofl+3
  8470  0051  3000               	movlw	0
  8471  0052  00F2               	movwf	?___xxtofl+2
  8472  0053  3000               	movlw	0
  8473  0054  00F1               	movwf	?___xxtofl+1
  8474  0055  3000               	movlw	0
  8475  0056  00F0               	movwf	?___xxtofl
  8476  0057  28D0               	goto	l946
  8477  0058                     l2999:
  8478  0058  3096               	movlw	150
  8479  0059  00F4               	movwf	??___xxtofl
  8480  005A  0874               	movf	??___xxtofl,w
  8481  005B  00F9               	movwf	___xxtofl@exp
  8482  005C  2868               	goto	l3003
  8483  005D                     l3001:
  8484  005D  3001               	movlw	1
  8485  005E  00F4               	movwf	??___xxtofl
  8486  005F  0874               	movf	??___xxtofl,w
  8487  0060  07F9               	addwf	___xxtofl@exp,f
  8488  0061  3001               	movlw	1
  8489  0062                     u3275:
  8490  0062  36FD               	lsrf	___xxtofl@arg+3,f
  8491  0063  0CFC               	rrf	___xxtofl@arg+2,f
  8492  0064  0CFB               	rrf	___xxtofl@arg+1,f
  8493  0065  0CFA               	rrf	___xxtofl@arg,f
  8494  0066  0B89               	decfsz	9,f
  8495  0067  2862               	goto	u3275
  8496  0068                     l3003:
  8497  0068  30FE               	movlw	254
  8498  0069  057D               	andwf	___xxtofl@arg+3,w
  8499  006A  1D03               	btfss	3,2
  8500  006B  286D               	goto	u3281
  8501  006C  286E               	goto	u3280
  8502  006D                     u3281:
  8503  006D  285D               	goto	l3001
  8504  006E                     u3280:
  8505  006E  2882               	goto	l950
  8506  006F                     l3005:
  8507  006F  3001               	movlw	1
  8508  0070  00F4               	movwf	??___xxtofl
  8509  0071  0874               	movf	??___xxtofl,w
  8510  0072  07F9               	addwf	___xxtofl@exp,f
  8511  0073                     l3007:
  8512  0073  3001               	movlw	1
  8513  0074  07FA               	addwf	___xxtofl@arg,f
  8514  0075  3000               	movlw	0
  8515  0076  3DFB               	addwfc	___xxtofl@arg+1,f
  8516  0077  3000               	movlw	0
  8517  0078  3DFC               	addwfc	___xxtofl@arg+2,f
  8518  0079  3000               	movlw	0
  8519  007A  3DFD               	addwfc	___xxtofl@arg+3,f
  8520  007B                     l3009:
  8521  007B  3001               	movlw	1
  8522  007C                     u3295:
  8523  007C  36FD               	lsrf	___xxtofl@arg+3,f
  8524  007D  0CFC               	rrf	___xxtofl@arg+2,f
  8525  007E  0CFB               	rrf	___xxtofl@arg+1,f
  8526  007F  0CFA               	rrf	___xxtofl@arg,f
  8527  0080  0B89               	decfsz	9,f
  8528  0081  287C               	goto	u3295
  8529  0082                     l950:
  8530  0082  30FF               	movlw	255
  8531  0083  057D               	andwf	___xxtofl@arg+3,w
  8532  0084  1D03               	btfss	3,2
  8533  0085  2887               	goto	u3301
  8534  0086  2888               	goto	u3300
  8535  0087                     u3301:
  8536  0087  286F               	goto	l3005
  8537  0088                     u3300:
  8538  0088  2892               	goto	l3013
  8539  0089                     l3011:
  8540  0089  3001               	movlw	1
  8541  008A  02F9               	subwf	___xxtofl@exp,f
  8542  008B  3001               	movlw	1
  8543  008C                     u3315:
  8544  008C  35FA               	lslf	___xxtofl@arg,f
  8545  008D  0DFB               	rlf	___xxtofl@arg+1,f
  8546  008E  0DFC               	rlf	___xxtofl@arg+2,f
  8547  008F  0DFD               	rlf	___xxtofl@arg+3,f
  8548  0090  0B89               	decfsz	9,f
  8549  0091  288C               	goto	u3315
  8550  0092                     l3013:
  8551  0092  1BFC               	btfsc	___xxtofl@arg+2,7
  8552  0093  2895               	goto	u3321
  8553  0094  2896               	goto	u3320
  8554  0095                     u3321:
  8555  0095  289C               	goto	l957
  8556  0096                     u3320:
  8557  0096                     l3015:
  8558  0096  3002               	movlw	2
  8559  0097  0279               	subwf	___xxtofl@exp,w
  8560  0098  1803               	skipnc
  8561  0099  289B               	goto	u3331
  8562  009A  289C               	goto	u3330
  8563  009B                     u3331:
  8564  009B  2889               	goto	l3011
  8565  009C                     u3330:
  8566  009C                     l957:
  8567  009C  1879               	btfsc	___xxtofl@exp,0
  8568  009D  289F               	goto	u3341
  8569  009E  28A0               	goto	u3340
  8570  009F                     u3341:
  8571  009F  28A8               	goto	l958
  8572  00A0                     u3340:
  8573  00A0                     l3017:
  8574  00A0  30FF               	movlw	255
  8575  00A1  05FA               	andwf	___xxtofl@arg,f
  8576  00A2  30FF               	movlw	255
  8577  00A3  05FB               	andwf	___xxtofl@arg+1,f
  8578  00A4  307F               	movlw	127
  8579  00A5  05FC               	andwf	___xxtofl@arg+2,f
  8580  00A6  30FF               	movlw	255
  8581  00A7  05FD               	andwf	___xxtofl@arg+3,f
  8582  00A8                     l958:
  8583  00A8  1003               	clrc
  8584  00A9  0CF9               	rrf	___xxtofl@exp,f
  8585  00AA                     l3019:
  8586  00AA  0879               	movf	___xxtofl@exp,w
  8587  00AB  00F4               	movwf	??___xxtofl
  8588  00AC  01F5               	clrf	??___xxtofl+1
  8589  00AD  01F6               	clrf	??___xxtofl+2
  8590  00AE  01F7               	clrf	??___xxtofl+3
  8591  00AF  3018               	movlw	24
  8592  00B0                     u3355:
  8593  00B0  35F4               	lslf	??___xxtofl,f
  8594  00B1  0DF5               	rlf	??___xxtofl+1,f
  8595  00B2  0DF6               	rlf	??___xxtofl+2,f
  8596  00B3  0DF7               	rlf	??___xxtofl+3,f
  8597  00B4                     u3350:
  8598  00B4  0B89               	decfsz	9,f
  8599  00B5  28B0               	goto	u3355
  8600  00B6  0874               	movf	??___xxtofl,w
  8601  00B7  04FA               	iorwf	___xxtofl@arg,f
  8602  00B8  0875               	movf	??___xxtofl+1,w
  8603  00B9  04FB               	iorwf	___xxtofl@arg+1,f
  8604  00BA  0876               	movf	??___xxtofl+2,w
  8605  00BB  04FC               	iorwf	___xxtofl@arg+2,f
  8606  00BC  0877               	movf	??___xxtofl+3,w
  8607  00BD  04FD               	iorwf	___xxtofl@arg+3,f
  8608  00BE                     l3021:
  8609  00BE  0878               	movf	___xxtofl@sign,w
  8610  00BF  1903               	btfsc	3,2
  8611  00C0  28C2               	goto	u3361
  8612  00C1  28C3               	goto	u3360
  8613  00C2                     u3361:
  8614  00C2  28C8               	goto	l3027
  8615  00C3                     u3360:
  8616  00C3                     l3023:
  8617  00C3  1FF3               	btfss	___xxtofl@val+3,7
  8618  00C4  28C6               	goto	u3371
  8619  00C5  28C7               	goto	u3370
  8620  00C6                     u3371:
  8621  00C6  28C8               	goto	l3027
  8622  00C7                     u3370:
  8623  00C7                     l3025:
  8624  00C7  17FD               	bsf	___xxtofl@arg+3,7
  8625  00C8                     l3027:
  8626  00C8  087D               	movf	___xxtofl@arg+3,w
  8627  00C9  00F3               	movwf	?___xxtofl+3
  8628  00CA  087C               	movf	___xxtofl@arg+2,w
  8629  00CB  00F2               	movwf	?___xxtofl+2
  8630  00CC  087B               	movf	___xxtofl@arg+1,w
  8631  00CD  00F1               	movwf	?___xxtofl+1
  8632  00CE  087A               	movf	___xxtofl@arg,w
  8633  00CF  00F0               	movwf	?___xxtofl
  8634  00D0                     l946:
  8635  00D0  0008               	return
  8636  00D1                     __end_of___xxtofl:
  8637                           
  8638                           	psect	text35
  8639  0AD9                     __ptext35:	
  8640 ;; *************** function ___fltol *****************
  8641 ;; Defined at:
  8642 ;;		line 43 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\fltol.c"
  8643 ;; Parameters:    Size  Location     Type
  8644 ;;  f1              4    0[COMMON] unsigned char 
  8645 ;; Auto vars:     Size  Location     Type
  8646 ;;  exp1            1   10[COMMON] unsigned char 
  8647 ;;  sign1           1    9[COMMON] unsigned char 
  8648 ;; Return value:  Size  Location     Type
  8649 ;;                  4    0[COMMON] long 
  8650 ;; Registers used:
  8651 ;;		wreg, status,2, status,0
  8652 ;; Tracked objects:
  8653 ;;		On entry : 0/0
  8654 ;;		On exit  : 0/0
  8655 ;;		Unchanged: 0/0
  8656 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  8657 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8658 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8659 ;;      Temps:          5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8660 ;;      Totals:        11       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8661 ;;Total ram usage:       11 bytes
  8662 ;; Hardware stack levels used: 1
  8663 ;; This function calls:
  8664 ;;		Nothing
  8665 ;; This function is called by:
  8666 ;;		_scale_convert_gram
  8667 ;; This function uses a non-reentrant model
  8668 ;;
  8669                           
  8670                           
  8671                           ;psect for function ___fltol
  8672  0AD9                     ___fltol:
  8673  0AD9                     l2811:	
  8674                           ;incstack = 0
  8675                           ; Regs used in ___fltol: [wreg+status,2+status,0]
  8676                           
  8677  0AD9  1003               	clrc
  8678  0ADA  0D72               	rlf	___fltol@f1+2,w
  8679  0ADB  0D73               	rlf	___fltol@f1+3,w
  8680  0ADC  00F4               	movwf	??___fltol
  8681  0ADD  0874               	movf	??___fltol,w
  8682  0ADE  00FA               	movwf	___fltol@exp1
  8683  0ADF  087A               	movf	___fltol@exp1,w
  8684  0AE0  1D03               	btfss	3,2
  8685  0AE1  2AE3               	goto	u2851
  8686  0AE2  2AE4               	goto	u2850
  8687  0AE3                     u2851:
  8688  0AE3  2AED               	goto	l2817
  8689  0AE4                     u2850:
  8690  0AE4                     l2813:
  8691  0AE4  3000               	movlw	0
  8692  0AE5  00F3               	movwf	?___fltol+3
  8693  0AE6  3000               	movlw	0
  8694  0AE7  00F2               	movwf	?___fltol+2
  8695  0AE8  3000               	movlw	0
  8696  0AE9  00F1               	movwf	?___fltol+1
  8697  0AEA  3000               	movlw	0
  8698  0AEB  00F0               	movwf	?___fltol
  8699  0AEC  2B4C               	goto	l697
  8700  0AED                     l2817:
  8701  0AED  0870               	movf	___fltol@f1,w
  8702  0AEE  00F4               	movwf	??___fltol
  8703  0AEF  0871               	movf	___fltol@f1+1,w
  8704  0AF0  00F5               	movwf	??___fltol+1
  8705  0AF1  0872               	movf	___fltol@f1+2,w
  8706  0AF2  00F6               	movwf	??___fltol+2
  8707  0AF3  0873               	movf	___fltol@f1+3,w
  8708  0AF4  00F7               	movwf	??___fltol+3
  8709  0AF5  301F               	movlw	31
  8710  0AF6                     u2865:
  8711  0AF6  36F7               	lsrf	??___fltol+3,f
  8712  0AF7  0CF6               	rrf	??___fltol+2,f
  8713  0AF8  0CF5               	rrf	??___fltol+1,f
  8714  0AF9  0CF4               	rrf	??___fltol,f
  8715  0AFA                     u2860:
  8716  0AFA  0B89               	decfsz	9,f
  8717  0AFB  2AF6               	goto	u2865
  8718  0AFC  0874               	movf	??___fltol,w
  8719  0AFD  00F8               	movwf	??___fltol+4
  8720  0AFE  0878               	movf	??___fltol+4,w
  8721  0AFF  00F9               	movwf	___fltol@sign1
  8722  0B00                     l2819:
  8723  0B00  17F2               	bsf	___fltol@f1+2,7
  8724  0B01                     l2821:
  8725  0B01  30FF               	movlw	255
  8726  0B02  05F0               	andwf	___fltol@f1,f
  8727  0B03  30FF               	movlw	255
  8728  0B04  05F1               	andwf	___fltol@f1+1,f
  8729  0B05  30FF               	movlw	255
  8730  0B06  05F2               	andwf	___fltol@f1+2,f
  8731  0B07  3000               	movlw	0
  8732  0B08  05F3               	andwf	___fltol@f1+3,f
  8733  0B09                     l2823:
  8734  0B09  3096               	movlw	150
  8735  0B0A  02FA               	subwf	___fltol@exp1,f
  8736  0B0B                     l2825:
  8737  0B0B  1FFA               	btfss	___fltol@exp1,7
  8738  0B0C  2B0E               	goto	u2871
  8739  0B0D  2B0F               	goto	u2870
  8740  0B0E                     u2871:
  8741  0B0E  2B27               	goto	l2835
  8742  0B0F                     u2870:
  8743  0B0F                     l2827:
  8744  0B0F  087A               	movf	___fltol@exp1,w
  8745  0B10  3A80               	xorlw	128
  8746  0B11  3E97               	addlw	151
  8747  0B12  1803               	skipnc
  8748  0B13  2B15               	goto	u2881
  8749  0B14  2B16               	goto	u2880
  8750  0B15                     u2881:
  8751  0B15  2B17               	goto	l2833
  8752  0B16                     u2880:
  8753  0B16  2AE4               	goto	l2813
  8754  0B17                     l2833:
  8755  0B17  3001               	movlw	1
  8756  0B18                     u2895:
  8757  0B18  36F3               	lsrf	___fltol@f1+3,f
  8758  0B19  0CF2               	rrf	___fltol@f1+2,f
  8759  0B1A  0CF1               	rrf	___fltol@f1+1,f
  8760  0B1B  0CF0               	rrf	___fltol@f1,f
  8761  0B1C  0B89               	decfsz	9,f
  8762  0B1D  2B18               	goto	u2895
  8763  0B1E  3001               	movlw	1
  8764  0B1F  00F4               	movwf	??___fltol
  8765  0B20  0874               	movf	??___fltol,w
  8766  0B21  07FA               	addwf	___fltol@exp1,f
  8767  0B22  1D03               	btfss	3,2
  8768  0B23  2B25               	goto	u2901
  8769  0B24  2B26               	goto	u2900
  8770  0B25                     u2901:
  8771  0B25  2B17               	goto	l2833
  8772  0B26                     u2900:
  8773  0B26  2B3C               	goto	l2843
  8774  0B27                     l2835:
  8775  0B27  3020               	movlw	32
  8776  0B28  027A               	subwf	___fltol@exp1,w
  8777  0B29  1C03               	skipc
  8778  0B2A  2B2C               	goto	u2911
  8779  0B2B  2B2D               	goto	u2910
  8780  0B2C                     u2911:
  8781  0B2C  2B37               	goto	l704
  8782  0B2D                     u2910:
  8783  0B2D  2AE4               	goto	l2813
  8784  0B2E                     l2841:
  8785  0B2E  3001               	movlw	1
  8786  0B2F                     u2925:
  8787  0B2F  35F0               	lslf	___fltol@f1,f
  8788  0B30  0DF1               	rlf	___fltol@f1+1,f
  8789  0B31  0DF2               	rlf	___fltol@f1+2,f
  8790  0B32  0DF3               	rlf	___fltol@f1+3,f
  8791  0B33  0B89               	decfsz	9,f
  8792  0B34  2B2F               	goto	u2925
  8793  0B35  3001               	movlw	1
  8794  0B36  02FA               	subwf	___fltol@exp1,f
  8795  0B37                     l704:
  8796  0B37  087A               	movf	___fltol@exp1,w
  8797  0B38  1D03               	btfss	3,2
  8798  0B39  2B3B               	goto	u2931
  8799  0B3A  2B3C               	goto	u2930
  8800  0B3B                     u2931:
  8801  0B3B  2B2E               	goto	l2841
  8802  0B3C                     u2930:
  8803  0B3C                     l2843:
  8804  0B3C  0879               	movf	___fltol@sign1,w
  8805  0B3D  1903               	btfsc	3,2
  8806  0B3E  2B40               	goto	u2941
  8807  0B3F  2B41               	goto	u2940
  8808  0B40                     u2941:
  8809  0B40  2B4C               	goto	l707
  8810  0B41                     u2940:
  8811  0B41                     l2845:
  8812  0B41  09F0               	comf	___fltol@f1,f
  8813  0B42  09F1               	comf	___fltol@f1+1,f
  8814  0B43  09F2               	comf	___fltol@f1+2,f
  8815  0B44  09F3               	comf	___fltol@f1+3,f
  8816  0B45  0AF0               	incf	___fltol@f1,f
  8817  0B46  1903               	skipnz
  8818  0B47  0AF1               	incf	___fltol@f1+1,f
  8819  0B48  1903               	skipnz
  8820  0B49  0AF2               	incf	___fltol@f1+2,f
  8821  0B4A  1903               	skipnz
  8822  0B4B  0AF3               	incf	___fltol@f1+3,f
  8823  0B4C                     l707:
  8824  0B4C                     l697:
  8825  0B4C  0008               	return
  8826  0B4D                     __end_of___fltol:
  8827                           
  8828                           	psect	text36
  8829  0433                     __ptext36:	
  8830 ;; *************** function ___fldiv *****************
  8831 ;; Defined at:
  8832 ;;		line 8 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\sprcdiv.c"
  8833 ;; Parameters:    Size  Location     Type
  8834 ;;  a               4    0[COMMON] long 
  8835 ;;  b               4    4[COMMON] long 
  8836 ;; Auto vars:     Size  Location     Type
  8837 ;;  grs             4    7[BANK0 ] unsigned long 
  8838 ;;  rem             4    0[BANK0 ] unsigned long 
  8839 ;;  new_exp         2    5[BANK0 ] int 
  8840 ;;  aexp            1   12[BANK0 ] unsigned char 
  8841 ;;  bexp            1   11[BANK0 ] unsigned char 
  8842 ;;  sign            1    4[BANK0 ] unsigned char 
  8843 ;; Return value:  Size  Location     Type
  8844 ;;                  4    0[COMMON] unsigned char 
  8845 ;; Registers used:
  8846 ;;		wreg, status,2, status,0
  8847 ;; Tracked objects:
  8848 ;;		On entry : 0/0
  8849 ;;		On exit  : 0/0
  8850 ;;		Unchanged: 0/0
  8851 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  8852 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8853 ;;      Locals:         0      13       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8854 ;;      Temps:          5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8855 ;;      Totals:        13      13       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8856 ;;Total ram usage:       26 bytes
  8857 ;; Hardware stack levels used: 1
  8858 ;; This function calls:
  8859 ;;		Nothing
  8860 ;; This function is called by:
  8861 ;;		_scale_convert_gram
  8862 ;; This function uses a non-reentrant model
  8863 ;;
  8864                           
  8865                           
  8866                           ;psect for function ___fldiv
  8867  0433                     ___fldiv:
  8868  0433                     l2847:	
  8869                           ;incstack = 0
  8870                           ; Regs used in ___fldiv: [wreg+status,2+status,0]
  8871                           
  8872  0433  0877               	movf	___fldiv@b+3,w
  8873  0434  3980               	andlw	128
  8874  0435  00F8               	movwf	??___fldiv
  8875  0436  0878               	movf	??___fldiv,w
  8876  0437  0020               	movlb	0	; select bank0
  8877  0438  00A4               	movwf	___fldiv@sign
  8878  0439                     l2849:
  8879  0439  3577               	lslf	___fldiv@b+3,w
  8880  043A  00F8               	movwf	??___fldiv
  8881  043B  0878               	movf	??___fldiv,w
  8882  043C  00AB               	movwf	___fldiv@bexp
  8883  043D                     l2851:
  8884  043D  1FF6               	btfss	___fldiv@b+2,7
  8885  043E  2C40               	goto	u2951
  8886  043F  2C41               	goto	u2950
  8887  0440                     u2951:
  8888  0440  2C42               	goto	l2855
  8889  0441                     u2950:
  8890  0441                     l2853:
  8891  0441  142B               	bsf	___fldiv@bexp,0
  8892  0442                     l2855:
  8893  0442  082B               	movf	___fldiv@bexp,w
  8894  0443  1903               	btfsc	3,2
  8895  0444  2C46               	goto	u2961
  8896  0445  2C47               	goto	u2960
  8897  0446                     u2961:
  8898  0446  2C57               	goto	l2865
  8899  0447                     u2960:
  8900  0447                     l2857:
  8901  0447  0A2B               	incf	___fldiv@bexp,w
  8902  0448  1D03               	btfss	3,2
  8903  0449  2C4B               	goto	u2971
  8904  044A  2C4C               	goto	u2970
  8905  044B                     u2971:
  8906  044B  2C54               	goto	l2861
  8907  044C                     u2970:
  8908  044C                     l2859:
  8909  044C  3000               	movlw	0
  8910  044D  00F7               	movwf	___fldiv@b+3
  8911  044E  3000               	movlw	0
  8912  044F  00F6               	movwf	___fldiv@b+2
  8913  0450  3000               	movlw	0
  8914  0451  00F5               	movwf	___fldiv@b+1
  8915  0452  3000               	movlw	0
  8916  0453  00F4               	movwf	___fldiv@b
  8917  0454                     l2861:
  8918  0454  17F6               	bsf	___fldiv@b+2,7
  8919  0455                     l2863:
  8920  0455  01F7               	clrf	___fldiv@b+3
  8921  0456  2C5F               	goto	l2867
  8922  0457                     l2865:
  8923  0457  3000               	movlw	0
  8924  0458  00F7               	movwf	___fldiv@b+3
  8925  0459  3000               	movlw	0
  8926  045A  00F6               	movwf	___fldiv@b+2
  8927  045B  3000               	movlw	0
  8928  045C  00F5               	movwf	___fldiv@b+1
  8929  045D  3000               	movlw	0
  8930  045E  00F4               	movwf	___fldiv@b
  8931  045F                     l2867:
  8932  045F  0873               	movf	___fldiv@a+3,w
  8933  0460  3980               	andlw	128
  8934  0461  00F8               	movwf	??___fldiv
  8935  0462  0878               	movf	??___fldiv,w
  8936  0463  06A4               	xorwf	___fldiv@sign,f
  8937  0464                     l2869:
  8938  0464  3573               	lslf	___fldiv@a+3,w
  8939  0465  00F8               	movwf	??___fldiv
  8940  0466  0878               	movf	??___fldiv,w
  8941  0467  00AC               	movwf	___fldiv@aexp
  8942  0468                     l2871:
  8943  0468  1FF2               	btfss	___fldiv@a+2,7
  8944  0469  2C6B               	goto	u2981
  8945  046A  2C6C               	goto	u2980
  8946  046B                     u2981:
  8947  046B  2C6D               	goto	l2875
  8948  046C                     u2980:
  8949  046C                     l2873:
  8950  046C  142C               	bsf	___fldiv@aexp,0
  8951  046D                     l2875:
  8952  046D  082C               	movf	___fldiv@aexp,w
  8953  046E  1903               	btfsc	3,2
  8954  046F  2C71               	goto	u2991
  8955  0470  2C72               	goto	u2990
  8956  0471                     u2991:
  8957  0471  2C82               	goto	l2885
  8958  0472                     u2990:
  8959  0472                     l2877:
  8960  0472  0A2C               	incf	___fldiv@aexp,w
  8961  0473  1D03               	btfss	3,2
  8962  0474  2C76               	goto	u3001
  8963  0475  2C77               	goto	u3000
  8964  0476                     u3001:
  8965  0476  2C7F               	goto	l2881
  8966  0477                     u3000:
  8967  0477                     l2879:
  8968  0477  3000               	movlw	0
  8969  0478  00F3               	movwf	___fldiv@a+3
  8970  0479  3000               	movlw	0
  8971  047A  00F2               	movwf	___fldiv@a+2
  8972  047B  3000               	movlw	0
  8973  047C  00F1               	movwf	___fldiv@a+1
  8974  047D  3000               	movlw	0
  8975  047E  00F0               	movwf	___fldiv@a
  8976  047F                     l2881:
  8977  047F  17F2               	bsf	___fldiv@a+2,7
  8978  0480                     l2883:
  8979  0480  01F3               	clrf	___fldiv@a+3
  8980  0481  2C8A               	goto	l860
  8981  0482                     l2885:
  8982  0482  3000               	movlw	0
  8983  0483  00F3               	movwf	___fldiv@a+3
  8984  0484  3000               	movlw	0
  8985  0485  00F2               	movwf	___fldiv@a+2
  8986  0486  3000               	movlw	0
  8987  0487  00F1               	movwf	___fldiv@a+1
  8988  0488  3000               	movlw	0
  8989  0489  00F0               	movwf	___fldiv@a
  8990  048A                     l860:
  8991  048A  0873               	movf	___fldiv@a+3,w
  8992  048B  0472               	iorwf	___fldiv@a+2,w
  8993  048C  0471               	iorwf	___fldiv@a+1,w
  8994  048D  0470               	iorwf	___fldiv@a,w
  8995  048E  1D03               	skipz
  8996  048F  2C91               	goto	u3011
  8997  0490  2C92               	goto	u3010
  8998  0491                     u3011:
  8999  0491  2CAB               	goto	l2895
  9000  0492                     u3010:
  9001  0492                     l2887:
  9002  0492  3000               	movlw	0
  9003  0493  00F7               	movwf	___fldiv@b+3
  9004  0494  3000               	movlw	0
  9005  0495  00F6               	movwf	___fldiv@b+2
  9006  0496  3000               	movlw	0
  9007  0497  00F5               	movwf	___fldiv@b+1
  9008  0498  3000               	movlw	0
  9009  0499  00F4               	movwf	___fldiv@b
  9010  049A  3080               	movlw	128
  9011  049B  04F6               	iorwf	___fldiv@b+2,f
  9012  049C  307F               	movlw	127
  9013  049D  04F7               	iorwf	___fldiv@b+3,f
  9014  049E                     l2889:
  9015  049E  0824               	movf	___fldiv@sign,w
  9016  049F  00F8               	movwf	??___fldiv
  9017  04A0  0878               	movf	??___fldiv,w
  9018  04A1  04F7               	iorwf	___fldiv@b+3,f
  9019  04A2                     l2891:
  9020  04A2  0877               	movf	___fldiv@b+3,w
  9021  04A3  00F3               	movwf	?___fldiv+3
  9022  04A4  0876               	movf	___fldiv@b+2,w
  9023  04A5  00F2               	movwf	?___fldiv+2
  9024  04A6  0875               	movf	___fldiv@b+1,w
  9025  04A7  00F1               	movwf	?___fldiv+1
  9026  04A8  0874               	movf	___fldiv@b,w
  9027  04A9  00F0               	movwf	?___fldiv
  9028  04AA  2DE6               	goto	l862
  9029  04AB                     l2895:
  9030  04AB  082B               	movf	___fldiv@bexp,w
  9031  04AC  1D03               	btfss	3,2
  9032  04AD  2CAF               	goto	u3021
  9033  04AE  2CB0               	goto	u3020
  9034  04AF                     u3021:
  9035  04AF  2CB9               	goto	l2901
  9036  04B0                     u3020:
  9037  04B0                     l2897:
  9038  04B0  3000               	movlw	0
  9039  04B1  00F3               	movwf	?___fldiv+3
  9040  04B2  3000               	movlw	0
  9041  04B3  00F2               	movwf	?___fldiv+2
  9042  04B4  3000               	movlw	0
  9043  04B5  00F1               	movwf	?___fldiv+1
  9044  04B6  3000               	movlw	0
  9045  04B7  00F0               	movwf	?___fldiv
  9046  04B8  2DE6               	goto	l862
  9047  04B9                     l2901:
  9048  04B9  082B               	movf	___fldiv@bexp,w
  9049  04BA  00F8               	movwf	??___fldiv
  9050  04BB  01F9               	clrf	??___fldiv+1
  9051  04BC  0879               	movf	??___fldiv+1,w
  9052  04BD  00FB               	movwf	??___fldiv+3
  9053  04BE  082C               	movf	___fldiv@aexp,w
  9054  04BF  0278               	subwf	??___fldiv,w
  9055  04C0  00FA               	movwf	??___fldiv+2
  9056  04C1  1C03               	skipc
  9057  04C2  03FB               	decf	??___fldiv+3,f
  9058  04C3  087A               	movf	??___fldiv+2,w
  9059  04C4  3E7F               	addlw	127
  9060  04C5  00A5               	movwf	___fldiv@new_exp
  9061  04C6  3000               	movlw	0
  9062  04C7  3D7B               	addwfc	??___fldiv+3,w
  9063  04C8  00A6               	movwf	___fldiv@new_exp+1
  9064  04C9                     l2903:
  9065  04C9  0877               	movf	___fldiv@b+3,w
  9066  04CA  00A3               	movwf	___fldiv@rem+3
  9067  04CB  0876               	movf	___fldiv@b+2,w
  9068  04CC  00A2               	movwf	___fldiv@rem+2
  9069  04CD  0875               	movf	___fldiv@b+1,w
  9070  04CE  00A1               	movwf	___fldiv@rem+1
  9071  04CF  0874               	movf	___fldiv@b,w
  9072  04D0  00A0               	movwf	___fldiv@rem
  9073  04D1                     l2905:
  9074  04D1  3000               	movlw	0
  9075  04D2  00F7               	movwf	___fldiv@b+3
  9076  04D3  3000               	movlw	0
  9077  04D4  00F6               	movwf	___fldiv@b+2
  9078  04D5  3000               	movlw	0
  9079  04D6  00F5               	movwf	___fldiv@b+1
  9080  04D7  3000               	movlw	0
  9081  04D8  00F4               	movwf	___fldiv@b
  9082  04D9                     l2907:
  9083  04D9  3000               	movlw	0
  9084  04DA  00AA               	movwf	___fldiv@grs+3
  9085  04DB  3000               	movlw	0
  9086  04DC  00A9               	movwf	___fldiv@grs+2
  9087  04DD  3000               	movlw	0
  9088  04DE  00A8               	movwf	___fldiv@grs+1
  9089  04DF  3000               	movlw	0
  9090  04E0  00A7               	movwf	___fldiv@grs
  9091  04E1                     l2909:
  9092  04E1  01AC               	clrf	___fldiv@aexp
  9093  04E2  2D21               	goto	l2929
  9094  04E3                     l2911:
  9095  04E3  082C               	movf	___fldiv@aexp,w
  9096  04E4  1903               	btfsc	3,2
  9097  04E5  2CE7               	goto	u3031
  9098  04E6  2CE8               	goto	u3030
  9099  04E7                     u3031:
  9100  04E7  2D02               	goto	l2921
  9101  04E8                     u3030:
  9102  04E8                     l2913:
  9103  04E8  3001               	movlw	1
  9104  04E9                     u3045:
  9105  04E9  35A0               	lslf	___fldiv@rem,f
  9106  04EA  0DA1               	rlf	___fldiv@rem+1,f
  9107  04EB  0DA2               	rlf	___fldiv@rem+2,f
  9108  04EC  0DA3               	rlf	___fldiv@rem+3,f
  9109  04ED  0B89               	decfsz	9,f
  9110  04EE  2CE9               	goto	u3045
  9111  04EF  3001               	movlw	1
  9112  04F0                     u3055:
  9113  04F0  35F4               	lslf	___fldiv@b,f
  9114  04F1  0DF5               	rlf	___fldiv@b+1,f
  9115  04F2  0DF6               	rlf	___fldiv@b+2,f
  9116  04F3  0DF7               	rlf	___fldiv@b+3,f
  9117  04F4  0B89               	decfsz	9,f
  9118  04F5  2CF0               	goto	u3055
  9119  04F6                     l2915:
  9120  04F6  1FAA               	btfss	___fldiv@grs+3,7
  9121  04F7  2CF9               	goto	u3061
  9122  04F8  2CFA               	goto	u3060
  9123  04F9                     u3061:
  9124  04F9  2CFB               	goto	l2919
  9125  04FA                     u3060:
  9126  04FA                     l2917:
  9127  04FA  1474               	bsf	___fldiv@b,0
  9128  04FB                     l2919:
  9129  04FB  3001               	movlw	1
  9130  04FC                     u3075:
  9131  04FC  35A7               	lslf	___fldiv@grs,f
  9132  04FD  0DA8               	rlf	___fldiv@grs+1,f
  9133  04FE  0DA9               	rlf	___fldiv@grs+2,f
  9134  04FF  0DAA               	rlf	___fldiv@grs+3,f
  9135  0500  0B89               	decfsz	9,f
  9136  0501  2CFC               	goto	u3075
  9137  0502                     l2921:
  9138  0502  0873               	movf	___fldiv@a+3,w
  9139  0503  0223               	subwf	___fldiv@rem+3,w
  9140  0504  1D03               	skipz
  9141  0505  2D10               	goto	u3085
  9142  0506  0872               	movf	___fldiv@a+2,w
  9143  0507  0222               	subwf	___fldiv@rem+2,w
  9144  0508  1D03               	skipz
  9145  0509  2D10               	goto	u3085
  9146  050A  0871               	movf	___fldiv@a+1,w
  9147  050B  0221               	subwf	___fldiv@rem+1,w
  9148  050C  1D03               	skipz
  9149  050D  2D10               	goto	u3085
  9150  050E  0870               	movf	___fldiv@a,w
  9151  050F  0220               	subwf	___fldiv@rem,w
  9152  0510                     u3085:
  9153  0510  1C03               	skipc
  9154  0511  2D13               	goto	u3081
  9155  0512  2D14               	goto	u3080
  9156  0513                     u3081:
  9157  0513  2D1D               	goto	l2927
  9158  0514                     u3080:
  9159  0514                     l2923:
  9160  0514  172A               	bsf	___fldiv@grs+3,6
  9161  0515                     l2925:
  9162  0515  0870               	movf	___fldiv@a,w
  9163  0516  02A0               	subwf	___fldiv@rem,f
  9164  0517  0871               	movf	___fldiv@a+1,w
  9165  0518  3BA1               	subwfb	___fldiv@rem+1,f
  9166  0519  0872               	movf	___fldiv@a+2,w
  9167  051A  3BA2               	subwfb	___fldiv@rem+2,f
  9168  051B  0873               	movf	___fldiv@a+3,w
  9169  051C  3BA3               	subwfb	___fldiv@rem+3,f
  9170  051D                     l2927:
  9171  051D  3001               	movlw	1
  9172  051E  00F8               	movwf	??___fldiv
  9173  051F  0878               	movf	??___fldiv,w
  9174  0520  07AC               	addwf	___fldiv@aexp,f
  9175  0521                     l2929:
  9176  0521  301A               	movlw	26
  9177  0522  022C               	subwf	___fldiv@aexp,w
  9178  0523  1C03               	skipc
  9179  0524  2D26               	goto	u3091
  9180  0525  2D27               	goto	u3090
  9181  0526                     u3091:
  9182  0526  2CE3               	goto	l2911
  9183  0527                     u3090:
  9184  0527                     l2931:
  9185  0527  0823               	movf	___fldiv@rem+3,w
  9186  0528  0422               	iorwf	___fldiv@rem+2,w
  9187  0529  0421               	iorwf	___fldiv@rem+1,w
  9188  052A  0420               	iorwf	___fldiv@rem,w
  9189  052B  1903               	skipnz
  9190  052C  2D2E               	goto	u3101
  9191  052D  2D2F               	goto	u3100
  9192  052E                     u3101:
  9193  052E  2D48               	goto	l2945
  9194  052F                     u3100:
  9195  052F                     l2933:
  9196  052F  1427               	bsf	___fldiv@grs,0
  9197  0530  2D48               	goto	l2945
  9198  0531                     l2935:
  9199  0531  3001               	movlw	1
  9200  0532                     u3115:
  9201  0532  35F4               	lslf	___fldiv@b,f
  9202  0533  0DF5               	rlf	___fldiv@b+1,f
  9203  0534  0DF6               	rlf	___fldiv@b+2,f
  9204  0535  0DF7               	rlf	___fldiv@b+3,f
  9205  0536  0B89               	decfsz	9,f
  9206  0537  2D32               	goto	u3115
  9207  0538                     l2937:
  9208  0538  1FAA               	btfss	___fldiv@grs+3,7
  9209  0539  2D3B               	goto	u3121
  9210  053A  2D3C               	goto	u3120
  9211  053B                     u3121:
  9212  053B  2D3D               	goto	l2941
  9213  053C                     u3120:
  9214  053C                     l2939:
  9215  053C  1474               	bsf	___fldiv@b,0
  9216  053D                     l2941:
  9217  053D  3001               	movlw	1
  9218  053E                     u3135:
  9219  053E  35A7               	lslf	___fldiv@grs,f
  9220  053F  0DA8               	rlf	___fldiv@grs+1,f
  9221  0540  0DA9               	rlf	___fldiv@grs+2,f
  9222  0541  0DAA               	rlf	___fldiv@grs+3,f
  9223  0542  0B89               	decfsz	9,f
  9224  0543  2D3E               	goto	u3135
  9225  0544                     l2943:
  9226  0544  30FF               	movlw	255
  9227  0545  07A5               	addwf	___fldiv@new_exp,f
  9228  0546  30FF               	movlw	255
  9229  0547  3DA6               	addwfc	___fldiv@new_exp+1,f
  9230  0548                     l2945:
  9231  0548  1FF6               	btfss	___fldiv@b+2,7
  9232  0549  2D4B               	goto	u3141
  9233  054A  2D4C               	goto	u3140
  9234  054B                     u3141:
  9235  054B  2D31               	goto	l2935
  9236  054C                     u3140:
  9237  054C                     l2947:
  9238  054C  01AC               	clrf	___fldiv@aexp
  9239  054D                     l2949:
  9240  054D  1FAA               	btfss	___fldiv@grs+3,7
  9241  054E  2D50               	goto	u3151
  9242  054F  2D51               	goto	u3150
  9243  0550                     u3151:
  9244  0550  2D6D               	goto	l2957
  9245  0551                     u3150:
  9246  0551                     l2951:
  9247  0551  30FF               	movlw	255
  9248  0552  0527               	andwf	___fldiv@grs,w
  9249  0553  00F8               	movwf	??___fldiv
  9250  0554  30FF               	movlw	255
  9251  0555  0528               	andwf	___fldiv@grs+1,w
  9252  0556  00F9               	movwf	??___fldiv+1
  9253  0557  30FF               	movlw	255
  9254  0558  0529               	andwf	___fldiv@grs+2,w
  9255  0559  00FA               	movwf	??___fldiv+2
  9256  055A  307F               	movlw	127
  9257  055B  052A               	andwf	___fldiv@grs+3,w
  9258  055C  00FB               	movwf	??___fldiv+3
  9259  055D  087B               	movf	??___fldiv+3,w
  9260  055E  047A               	iorwf	??___fldiv+2,w
  9261  055F  0479               	iorwf	??___fldiv+1,w
  9262  0560  0478               	iorwf	??___fldiv,w
  9263  0561  1903               	skipnz
  9264  0562  2D64               	goto	u3161
  9265  0563  2D65               	goto	u3160
  9266  0564                     u3161:
  9267  0564  2D68               	goto	l876
  9268  0565                     u3160:
  9269  0565                     l2953:
  9270  0565  01AC               	clrf	___fldiv@aexp
  9271  0566  0AAC               	incf	___fldiv@aexp,f
  9272  0567  2D6D               	goto	l2957
  9273  0568                     l876:
  9274  0568  1C74               	btfss	___fldiv@b,0
  9275  0569  2D6B               	goto	u3171
  9276  056A  2D6C               	goto	u3170
  9277  056B                     u3171:
  9278  056B  2D6D               	goto	l2957
  9279  056C                     u3170:
  9280  056C  2D65               	goto	l2953
  9281  056D                     l2957:
  9282  056D  082C               	movf	___fldiv@aexp,w
  9283  056E  1903               	btfsc	3,2
  9284  056F  2D71               	goto	u3181
  9285  0570  2D72               	goto	u3180
  9286  0571                     u3181:
  9287  0571  2D9A               	goto	l2967
  9288  0572                     u3180:
  9289  0572                     l2959:
  9290  0572  3001               	movlw	1
  9291  0573  07F4               	addwf	___fldiv@b,f
  9292  0574  3000               	movlw	0
  9293  0575  3DF5               	addwfc	___fldiv@b+1,f
  9294  0576  3000               	movlw	0
  9295  0577  3DF6               	addwfc	___fldiv@b+2,f
  9296  0578  3000               	movlw	0
  9297  0579  3DF7               	addwfc	___fldiv@b+3,f
  9298  057A                     l2961:
  9299  057A  1C77               	btfss	___fldiv@b+3,0
  9300  057B  2D7D               	goto	u3191
  9301  057C  2D7E               	goto	u3190
  9302  057D                     u3191:
  9303  057D  2D9A               	goto	l2967
  9304  057E                     u3190:
  9305  057E                     l2963:
  9306  057E  0874               	movf	___fldiv@b,w
  9307  057F  00F8               	movwf	??___fldiv
  9308  0580  0875               	movf	___fldiv@b+1,w
  9309  0581  00F9               	movwf	??___fldiv+1
  9310  0582  0876               	movf	___fldiv@b+2,w
  9311  0583  00FA               	movwf	??___fldiv+2
  9312  0584  0877               	movf	___fldiv@b+3,w
  9313  0585  00FB               	movwf	??___fldiv+3
  9314  0586  3001               	movlw	1
  9315  0587  00FC               	movwf	??___fldiv+4
  9316  0588                     u3205:
  9317  0588  37FB               	asrf	??___fldiv+3,f
  9318  0589  0CFA               	rrf	??___fldiv+2,f
  9319  058A  0CF9               	rrf	??___fldiv+1,f
  9320  058B  0CF8               	rrf	??___fldiv,f
  9321  058C                     u3200:
  9322  058C  0BFC               	decfsz	??___fldiv+4,f
  9323  058D  2D88               	goto	u3205
  9324  058E  087B               	movf	??___fldiv+3,w
  9325  058F  00F7               	movwf	___fldiv@b+3
  9326  0590  087A               	movf	??___fldiv+2,w
  9327  0591  00F6               	movwf	___fldiv@b+2
  9328  0592  0879               	movf	??___fldiv+1,w
  9329  0593  00F5               	movwf	___fldiv@b+1
  9330  0594  0878               	movf	??___fldiv,w
  9331  0595  00F4               	movwf	___fldiv@b
  9332  0596                     l2965:
  9333  0596  3001               	movlw	1
  9334  0597  07A5               	addwf	___fldiv@new_exp,f
  9335  0598  3000               	movlw	0
  9336  0599  3DA6               	addwfc	___fldiv@new_exp+1,f
  9337  059A                     l2967:
  9338  059A  0826               	movf	___fldiv@new_exp+1,w
  9339  059B  3A80               	xorlw	128
  9340  059C  00F8               	movwf	??___fldiv
  9341  059D  3080               	movlw	128
  9342  059E  0278               	subwf	??___fldiv,w
  9343  059F  1D03               	skipz
  9344  05A0  2DA3               	goto	u3215
  9345  05A1  30FF               	movlw	255
  9346  05A2  0225               	subwf	___fldiv@new_exp,w
  9347  05A3                     u3215:
  9348  05A3  1C03               	skipc
  9349  05A4  2DA6               	goto	u3211
  9350  05A5  2DA7               	goto	u3210
  9351  05A6                     u3211:
  9352  05A6  2DB4               	goto	l881
  9353  05A7                     u3210:
  9354  05A7                     l2969:
  9355  05A7  30FF               	movlw	255
  9356  05A8  0020               	movlb	0	; select bank0
  9357  05A9  00A5               	movwf	___fldiv@new_exp
  9358  05AA  3000               	movlw	0
  9359  05AB  00A6               	movwf	___fldiv@new_exp+1
  9360  05AC  3000               	movlw	0
  9361  05AD  00F7               	movwf	___fldiv@b+3
  9362  05AE  3000               	movlw	0
  9363  05AF  00F6               	movwf	___fldiv@b+2
  9364  05B0  3000               	movlw	0
  9365  05B1  00F5               	movwf	___fldiv@b+1
  9366  05B2  3000               	movlw	0
  9367  05B3  00F4               	movwf	___fldiv@b
  9368  05B4                     l881:
  9369  05B4  0020               	movlb	0	; select bank0
  9370  05B5  0826               	movf	___fldiv@new_exp+1,w
  9371  05B6  3A80               	xorlw	128
  9372  05B7  00F8               	movwf	??___fldiv
  9373  05B8  3080               	movlw	128
  9374  05B9  0278               	subwf	??___fldiv,w
  9375  05BA  1D03               	skipz
  9376  05BB  2DBE               	goto	u3225
  9377  05BC  3001               	movlw	1
  9378  05BD  0225               	subwf	___fldiv@new_exp,w
  9379  05BE                     u3225:
  9380  05BE  1803               	skipnc
  9381  05BF  2DC1               	goto	u3221
  9382  05C0  2DC2               	goto	u3220
  9383  05C1                     u3221:
  9384  05C1  2DCE               	goto	l882
  9385  05C2                     u3220:
  9386  05C2                     l2971:
  9387  05C2  0020               	movlb	0	; select bank0
  9388  05C3  01A5               	clrf	___fldiv@new_exp
  9389  05C4  01A6               	clrf	___fldiv@new_exp+1
  9390  05C5                     l2973:
  9391  05C5  3000               	movlw	0
  9392  05C6  00F7               	movwf	___fldiv@b+3
  9393  05C7  3000               	movlw	0
  9394  05C8  00F6               	movwf	___fldiv@b+2
  9395  05C9  3000               	movlw	0
  9396  05CA  00F5               	movwf	___fldiv@b+1
  9397  05CB  3000               	movlw	0
  9398  05CC  00F4               	movwf	___fldiv@b
  9399  05CD                     l2975:
  9400  05CD  01A4               	clrf	___fldiv@sign
  9401  05CE                     l882:
  9402  05CE  0020               	movlb	0	; select bank0
  9403  05CF  0825               	movf	___fldiv@new_exp,w
  9404  05D0  00F8               	movwf	??___fldiv
  9405  05D1  0878               	movf	??___fldiv,w
  9406  05D2  00AB               	movwf	___fldiv@bexp
  9407  05D3                     l2977:
  9408  05D3  1C2B               	btfss	___fldiv@bexp,0
  9409  05D4  2DD6               	goto	u3231
  9410  05D5  2DD7               	goto	u3230
  9411  05D6                     u3231:
  9412  05D6  2DD9               	goto	l2981
  9413  05D7                     u3230:
  9414  05D7                     l2979:
  9415  05D7  17F6               	bsf	___fldiv@b+2,7
  9416  05D8  2DDD               	goto	l884
  9417  05D9                     l2981:
  9418  05D9  307F               	movlw	127
  9419  05DA  00F8               	movwf	??___fldiv
  9420  05DB  0878               	movf	??___fldiv,w
  9421  05DC  05F6               	andwf	___fldiv@b+2,f
  9422  05DD                     l884:
  9423  05DD  362B               	lsrf	___fldiv@bexp,w
  9424  05DE  00F8               	movwf	??___fldiv
  9425  05DF  0878               	movf	??___fldiv,w
  9426  05E0  00F7               	movwf	___fldiv@b+3
  9427  05E1  0824               	movf	___fldiv@sign,w
  9428  05E2  00F8               	movwf	??___fldiv
  9429  05E3  0878               	movf	??___fldiv,w
  9430  05E4  04F7               	iorwf	___fldiv@b+3,f
  9431  05E5  2CA2               	goto	l2891
  9432  05E6                     l862:
  9433  05E6  0008               	return
  9434  05E7                     __end_of___fldiv:
  9435                           
  9436                           	psect	text37
  9437  0E33                     __ptext37:	
  9438 ;; *************** function _get_scale_val *****************
  9439 ;; Defined at:
  9440 ;;		line 34 in file "loadcell.c"
  9441 ;; Parameters:    Size  Location     Type
  9442 ;;  p               1    wreg     PTR struct .
  9443 ;;		 -> NULL(0), main@loadcell(12), 
  9444 ;;  scale_avg_co    1    0[BANK0 ] unsigned char 
  9445 ;; Auto vars:     Size  Location     Type
  9446 ;;  p               1   18[BANK0 ] PTR struct .
  9447 ;;		 -> NULL(0), main@loadcell(12), 
  9448 ;;  i               1   17[BANK0 ] unsigned char 
  9449 ;;  j               1   12[BANK0 ] unsigned char 
  9450 ;;  weight_count    4   13[BANK0 ] unsigned long 
  9451 ;;  weight_add      4    8[BANK0 ] unsigned long 
  9452 ;; Return value:  Size  Location     Type
  9453 ;;                  4    0[BANK0 ] unsigned long 
  9454 ;; Registers used:
  9455 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  9456 ;; Tracked objects:
  9457 ;;		On entry : 0/0
  9458 ;;		On exit  : 0/0
  9459 ;;		Unchanged: 0/0
  9460 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  9461 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9462 ;;      Locals:         0      11       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9463 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9464 ;;      Totals:         0      19       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9465 ;;Total ram usage:       19 bytes
  9466 ;; Hardware stack levels used: 1
  9467 ;; Hardware stack levels required when called: 1
  9468 ;; This function calls:
  9469 ;;		___lldiv
  9470 ;;		_get_CELL_DAT_VAL
  9471 ;;		_set_CELL_CLK_HIGH
  9472 ;;		_set_CELL_CLK_LOW
  9473 ;; This function is called by:
  9474 ;;		_initialize
  9475 ;;		_calc_percentage
  9476 ;; This function uses a non-reentrant model
  9477 ;;
  9478                           
  9479                           
  9480                           ;psect for function _get_scale_val
  9481  0E33                     _get_scale_val:
  9482                           
  9483                           ;incstack = 0
  9484                           ; Regs used in _get_scale_val: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
  9485                           ;get_scale_val@p stored from wreg
  9486  0E33  0020               	movlb	0	; select bank0
  9487  0E34  00B2               	movwf	get_scale_val@p
  9488  0E35                     l3119:
  9489                           
  9490                           ;loadcell.c: 35:     set_CELL_CLK_LOW(p);
  9491  0E35  0832               	movf	get_scale_val@p,w
  9492  0E36  3195  253A  318E   	fcall	_set_CELL_CLK_LOW
  9493  0E39                     l3121:
  9494                           
  9495                           ;loadcell.c: 36:     unsigned long weight_count = 0;
  9496  0E39  3000               	movlw	0
  9497  0E3A  0020               	movlb	0	; select bank0
  9498  0E3B  00B0               	movwf	get_scale_val@weight_count+3
  9499  0E3C  3000               	movlw	0
  9500  0E3D  00AF               	movwf	get_scale_val@weight_count+2
  9501  0E3E  3000               	movlw	0
  9502  0E3F  00AE               	movwf	get_scale_val@weight_count+1
  9503  0E40  3000               	movlw	0
  9504  0E41  00AD               	movwf	get_scale_val@weight_count
  9505  0E42                     l3123:
  9506                           
  9507                           ;loadcell.c: 37:     unsigned long weight_add = 0;
  9508  0E42  3000               	movlw	0
  9509  0E43  00AB               	movwf	get_scale_val@weight_add+3
  9510  0E44  3000               	movlw	0
  9511  0E45  00AA               	movwf	get_scale_val@weight_add+2
  9512  0E46  3000               	movlw	0
  9513  0E47  00A9               	movwf	get_scale_val@weight_add+1
  9514  0E48  3000               	movlw	0
  9515  0E49  00A8               	movwf	get_scale_val@weight_add
  9516  0E4A                     l3125:
  9517                           
  9518                           ;loadcell.c: 38:     for (uint8_t j = 0; j < scale_avg_count; j++)
  9519  0E4A  01AC               	clrf	get_scale_val@j
  9520  0E4B  2ED2               	goto	l3175
  9521  0E4C                     l3127:
  9522  0E4C  0020               	movlb	0	; select bank0
  9523  0E4D  0832               	movf	get_scale_val@p,w
  9524  0E4E  318C  24E7  318E   	fcall	_get_CELL_DAT_VAL
  9525  0E51  0870               	movf	?_get_CELL_DAT_VAL,w
  9526  0E52  0471               	iorwf	?_get_CELL_DAT_VAL+1,w
  9527  0E53  1903               	btfsc	3,2
  9528  0E54  2E56               	goto	u3421
  9529  0E55  2E57               	goto	u3420
  9530  0E56                     u3421:
  9531  0E56  2E4C               	goto	l3127
  9532  0E57                     u3420:
  9533  0E57                     l3129:
  9534  0E57  0020               	movlb	0	; select bank0
  9535  0E58  0832               	movf	get_scale_val@p,w
  9536  0E59  318C  24E7  318E   	fcall	_get_CELL_DAT_VAL
  9537  0E5C  0370               	decf	?_get_CELL_DAT_VAL,w
  9538  0E5D  0471               	iorwf	?_get_CELL_DAT_VAL+1,w
  9539  0E5E  1903               	btfsc	3,2
  9540  0E5F  2E61               	goto	u3431
  9541  0E60  2E62               	goto	u3430
  9542  0E61                     u3431:
  9543  0E61  2E57               	goto	l3129
  9544  0E62                     u3430:
  9545  0E62                     l3131:
  9546                           
  9547                           ;loadcell.c: 42:         _delay((unsigned long)((10)*(8000000/4000000.0)));
  9548  0E62  3006               	movlw	6
  9549  0E63                     u3837:
  9550  0E63  0B89               	decfsz	9,f
  9551  0E64  2E63               	goto	u3837
  9552  0E65  3200               	nop2
  9553  0E66                     l3133:
  9554                           
  9555                           ;loadcell.c: 44:         uint8_t i;;loadcell.c: 45:         for (i = 0; i < 24; i++){
  9556  0E66  0020               	movlb	0	; select bank0
  9557  0E67  01B1               	clrf	get_scale_val@i
  9558  0E68                     l3139:
  9559                           
  9560                           ;loadcell.c: 46:             weight_count <<= 1;
  9561  0E68  3001               	movlw	1
  9562  0E69                     u3445:
  9563  0E69  35AD               	lslf	get_scale_val@weight_count,f
  9564  0E6A  0DAE               	rlf	get_scale_val@weight_count+1,f
  9565  0E6B  0DAF               	rlf	get_scale_val@weight_count+2,f
  9566  0E6C  0DB0               	rlf	get_scale_val@weight_count+3,f
  9567  0E6D  0B89               	decfsz	9,f
  9568  0E6E  2E69               	goto	u3445
  9569  0E6F                     l3141:
  9570                           
  9571                           ;loadcell.c: 47:             set_CELL_CLK_HIGH(p);
  9572  0E6F  0832               	movf	get_scale_val@p,w
  9573  0E70  3195  2530  318E   	fcall	_set_CELL_CLK_HIGH
  9574  0E73                     l3143:
  9575                           
  9576                           ;loadcell.c: 48:             _delay((unsigned long)((10)*(8000000/4000000.0)));
  9577  0E73  3006               	movlw	6
  9578  0E74                     u3847:
  9579  0E74  0B89               	decfsz	9,f
  9580  0E75  2E74               	goto	u3847
  9581  0E76  3200               	nop2
  9582  0E77                     l3145:
  9583                           
  9584                           ;loadcell.c: 49:             set_CELL_CLK_LOW(p);
  9585  0E77  0020               	movlb	0	; select bank0
  9586  0E78  0832               	movf	get_scale_val@p,w
  9587  0E79  3195  253A  318E   	fcall	_set_CELL_CLK_LOW
  9588  0E7C                     l3147:
  9589                           
  9590                           ;loadcell.c: 50:             weight_count += get_CELL_DAT_VAL(p);
  9591  0E7C  0020               	movlb	0	; select bank0
  9592  0E7D  0832               	movf	get_scale_val@p,w
  9593  0E7E  318C  24E7  318E   	fcall	_get_CELL_DAT_VAL
  9594  0E81  0870               	movf	?_get_CELL_DAT_VAL,w
  9595  0E82  0020               	movlb	0	; select bank0
  9596  0E83  00A4               	movwf	??_get_scale_val
  9597  0E84  0871               	movf	?_get_CELL_DAT_VAL+1,w
  9598  0E85  00A5               	movwf	??_get_scale_val+1
  9599  0E86  3000               	movlw	0
  9600  0E87  1BA5               	btfsc	??_get_scale_val+1,7
  9601  0E88  30FF               	movlw	255
  9602  0E89  00A6               	movwf	??_get_scale_val+2
  9603  0E8A  00A7               	movwf	??_get_scale_val+3
  9604  0E8B  0824               	movf	??_get_scale_val,w
  9605  0E8C  07AD               	addwf	get_scale_val@weight_count,f
  9606  0E8D  0825               	movf	??_get_scale_val+1,w
  9607  0E8E  3DAE               	addwfc	get_scale_val@weight_count+1,f
  9608  0E8F  0826               	movf	??_get_scale_val+2,w
  9609  0E90  3DAF               	addwfc	get_scale_val@weight_count+2,f
  9610  0E91  0827               	movf	??_get_scale_val+3,w
  9611  0E92  3DB0               	addwfc	get_scale_val@weight_count+3,f
  9612  0E93                     l3149:
  9613                           
  9614                           ;loadcell.c: 51:             _delay((unsigned long)((10)*(8000000/4000000.0)));
  9615  0E93  3006               	movlw	6
  9616  0E94                     u3857:
  9617  0E94  0B89               	decfsz	9,f
  9618  0E95  2E94               	goto	u3857
  9619  0E96  3200               	nop2
  9620  0E97                     l3151:
  9621                           
  9622                           ;loadcell.c: 52:         }
  9623  0E97  3001               	movlw	1
  9624  0E98  0020               	movlb	0	; select bank0
  9625  0E99  00A4               	movwf	??_get_scale_val
  9626  0E9A  0824               	movf	??_get_scale_val,w
  9627  0E9B  07B1               	addwf	get_scale_val@i,f
  9628  0E9C                     l3153:
  9629  0E9C  3018               	movlw	24
  9630  0E9D  0231               	subwf	get_scale_val@i,w
  9631  0E9E  1C03               	skipc
  9632  0E9F  2EA1               	goto	u3451
  9633  0EA0  2EA2               	goto	u3450
  9634  0EA1                     u3451:
  9635  0EA1  2E68               	goto	l3139
  9636  0EA2                     u3450:
  9637  0EA2                     l3155:
  9638                           
  9639                           ;loadcell.c: 54:         for (i = 0; i < 1; i++){
  9640  0EA2  01B1               	clrf	get_scale_val@i
  9641  0EA3                     l3161:
  9642                           
  9643                           ;loadcell.c: 55:             set_CELL_CLK_HIGH(p);
  9644  0EA3  0832               	movf	get_scale_val@p,w
  9645  0EA4  3195  2530  318E   	fcall	_set_CELL_CLK_HIGH
  9646  0EA7                     l3163:
  9647                           
  9648                           ;loadcell.c: 56:             _delay((unsigned long)((10)*(8000000/4000000.0)));
  9649  0EA7  3006               	movlw	6
  9650  0EA8                     u3867:
  9651  0EA8  0B89               	decfsz	9,f
  9652  0EA9  2EA8               	goto	u3867
  9653  0EAA  3200               	nop2
  9654  0EAB                     l3165:
  9655                           
  9656                           ;loadcell.c: 57:             set_CELL_CLK_LOW(p);
  9657  0EAB  0020               	movlb	0	; select bank0
  9658  0EAC  0832               	movf	get_scale_val@p,w
  9659  0EAD  3195  253A  318E   	fcall	_set_CELL_CLK_LOW
  9660                           
  9661                           ;loadcell.c: 58:             _delay((unsigned long)((10)*(8000000/4000000.0)));
  9662  0EB0  3006               	movlw	6
  9663  0EB1                     u3877:
  9664  0EB1  0B89               	decfsz	9,f
  9665  0EB2  2EB1               	goto	u3877
  9666  0EB3  3200               	nop2
  9667  0EB4                     l3167:
  9668                           
  9669                           ;loadcell.c: 59:         };
  9670  0EB4  3001               	movlw	1
  9671  0EB5  0020               	movlb	0	; select bank0
  9672  0EB6  00A4               	movwf	??_get_scale_val
  9673  0EB7  0824               	movf	??_get_scale_val,w
  9674  0EB8  07B1               	addwf	get_scale_val@i,f
  9675  0EB9                     l3169:
  9676  0EB9  0831               	movf	get_scale_val@i,w
  9677  0EBA  1903               	btfsc	3,2
  9678  0EBB  2EBD               	goto	u3461
  9679  0EBC  2EBE               	goto	u3460
  9680  0EBD                     u3461:
  9681  0EBD  2EA3               	goto	l3161
  9682  0EBE                     u3460:
  9683  0EBE                     l3171:
  9684                           
  9685                           ;loadcell.c: 60:         weight_add += weight_count;
  9686  0EBE  082D               	movf	get_scale_val@weight_count,w
  9687  0EBF  07A8               	addwf	get_scale_val@weight_add,f
  9688  0EC0  082E               	movf	get_scale_val@weight_count+1,w
  9689  0EC1  3DA9               	addwfc	get_scale_val@weight_add+1,f
  9690  0EC2  082F               	movf	get_scale_val@weight_count+2,w
  9691  0EC3  3DAA               	addwfc	get_scale_val@weight_add+2,f
  9692  0EC4  0830               	movf	get_scale_val@weight_count+3,w
  9693  0EC5  3DAB               	addwfc	get_scale_val@weight_add+3,f
  9694                           
  9695                           ;loadcell.c: 61:         weight_count = 0;
  9696  0EC6  3000               	movlw	0
  9697  0EC7  00B0               	movwf	get_scale_val@weight_count+3
  9698  0EC8  3000               	movlw	0
  9699  0EC9  00AF               	movwf	get_scale_val@weight_count+2
  9700  0ECA  3000               	movlw	0
  9701  0ECB  00AE               	movwf	get_scale_val@weight_count+1
  9702  0ECC  3000               	movlw	0
  9703  0ECD  00AD               	movwf	get_scale_val@weight_count
  9704  0ECE                     l3173:
  9705                           
  9706                           ;loadcell.c: 62:     }
  9707  0ECE  3001               	movlw	1
  9708  0ECF  00A4               	movwf	??_get_scale_val
  9709  0ED0  0824               	movf	??_get_scale_val,w
  9710  0ED1  07AC               	addwf	get_scale_val@j,f
  9711  0ED2                     l3175:
  9712  0ED2  0820               	movf	get_scale_val@scale_avg_count,w
  9713  0ED3  022C               	subwf	get_scale_val@j,w
  9714  0ED4  1C03               	skipc
  9715  0ED5  2ED7               	goto	u3471
  9716  0ED6  2ED8               	goto	u3470
  9717  0ED7                     u3471:
  9718  0ED7  2E4C               	goto	l3127
  9719  0ED8                     u3470:
  9720  0ED8                     l3177:
  9721                           
  9722                           ;loadcell.c: 63:     weight_count = weight_add / scale_avg_count;
  9723  0ED8  0820               	movf	get_scale_val@scale_avg_count,w
  9724  0ED9  00A4               	movwf	??_get_scale_val
  9725  0EDA  01A5               	clrf	??_get_scale_val+1
  9726  0EDB  01A6               	clrf	??_get_scale_val+2
  9727  0EDC  01A7               	clrf	??_get_scale_val+3
  9728  0EDD  0827               	movf	??_get_scale_val+3,w
  9729  0EDE  00F3               	movwf	___lldiv@divisor+3
  9730  0EDF  0826               	movf	??_get_scale_val+2,w
  9731  0EE0  00F2               	movwf	___lldiv@divisor+2
  9732  0EE1  0825               	movf	??_get_scale_val+1,w
  9733  0EE2  00F1               	movwf	___lldiv@divisor+1
  9734  0EE3  0824               	movf	??_get_scale_val,w
  9735  0EE4  00F0               	movwf	___lldiv@divisor
  9736  0EE5  082B               	movf	get_scale_val@weight_add+3,w
  9737  0EE6  00F7               	movwf	___lldiv@dividend+3
  9738  0EE7  082A               	movf	get_scale_val@weight_add+2,w
  9739  0EE8  00F6               	movwf	___lldiv@dividend+2
  9740  0EE9  0829               	movf	get_scale_val@weight_add+1,w
  9741  0EEA  00F5               	movwf	___lldiv@dividend+1
  9742  0EEB  0828               	movf	get_scale_val@weight_add,w
  9743  0EEC  00F4               	movwf	___lldiv@dividend
  9744  0EED  3188  20EA  318E   	fcall	___lldiv
  9745  0EF0  0873               	movf	?___lldiv+3,w
  9746  0EF1  0020               	movlb	0	; select bank0
  9747  0EF2  00B0               	movwf	get_scale_val@weight_count+3
  9748  0EF3  0872               	movf	?___lldiv+2,w
  9749  0EF4  00AF               	movwf	get_scale_val@weight_count+2
  9750  0EF5  0871               	movf	?___lldiv+1,w
  9751  0EF6  00AE               	movwf	get_scale_val@weight_count+1
  9752  0EF7  0870               	movf	?___lldiv,w
  9753  0EF8  00AD               	movwf	get_scale_val@weight_count
  9754  0EF9                     l3179:
  9755                           
  9756                           ;loadcell.c: 66:     weight_count = weight_count ^ 0x800000;
  9757  0EF9  3000               	movlw	0
  9758  0EFA  062D               	xorwf	get_scale_val@weight_count,w
  9759  0EFB  00A4               	movwf	??_get_scale_val
  9760  0EFC  3000               	movlw	0
  9761  0EFD  062E               	xorwf	get_scale_val@weight_count+1,w
  9762  0EFE  00A5               	movwf	??_get_scale_val+1
  9763  0EFF  3080               	movlw	128
  9764  0F00  062F               	xorwf	get_scale_val@weight_count+2,w
  9765  0F01  00A6               	movwf	??_get_scale_val+2
  9766  0F02  3000               	movlw	0
  9767  0F03  0630               	xorwf	get_scale_val@weight_count+3,w
  9768  0F04  00A7               	movwf	??_get_scale_val+3
  9769  0F05  0827               	movf	??_get_scale_val+3,w
  9770  0F06  00B0               	movwf	get_scale_val@weight_count+3
  9771  0F07  0826               	movf	??_get_scale_val+2,w
  9772  0F08  00AF               	movwf	get_scale_val@weight_count+2
  9773  0F09  0825               	movf	??_get_scale_val+1,w
  9774  0F0A  00AE               	movwf	get_scale_val@weight_count+1
  9775  0F0B  0824               	movf	??_get_scale_val,w
  9776  0F0C  00AD               	movwf	get_scale_val@weight_count
  9777  0F0D                     l3181:
  9778                           
  9779                           ;loadcell.c: 67:     return weight_count;
  9780  0F0D  0830               	movf	get_scale_val@weight_count+3,w
  9781  0F0E  00A3               	movwf	?_get_scale_val+3
  9782  0F0F  082F               	movf	get_scale_val@weight_count+2,w
  9783  0F10  00A2               	movwf	?_get_scale_val+2
  9784  0F11  082E               	movf	get_scale_val@weight_count+1,w
  9785  0F12  00A1               	movwf	?_get_scale_val+1
  9786  0F13  082D               	movf	get_scale_val@weight_count,w
  9787  0F14  00A0               	movwf	?_get_scale_val
  9788  0F15                     l264:
  9789  0F15  0008               	return
  9790  0F16                     __end_of_get_scale_val:
  9791                           
  9792                           	psect	text38
  9793  153A                     __ptext38:	
  9794 ;; *************** function _set_CELL_CLK_LOW *****************
  9795 ;; Defined at:
  9796 ;;		line 7 in file "loadcell.c"
  9797 ;; Parameters:    Size  Location     Type
  9798 ;;  p               1    wreg     PTR struct .
  9799 ;;		 -> NULL(0), main@loadcell(12), 
  9800 ;; Auto vars:     Size  Location     Type
  9801 ;;  p               1    1[COMMON] PTR struct .
  9802 ;;		 -> NULL(0), main@loadcell(12), 
  9803 ;; Return value:  Size  Location     Type
  9804 ;;                  1    wreg      void 
  9805 ;; Registers used:
  9806 ;;		wreg, fsr1l, fsr1h, status,2, status,0
  9807 ;; Tracked objects:
  9808 ;;		On entry : 0/0
  9809 ;;		On exit  : 0/0
  9810 ;;		Unchanged: 0/0
  9811 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  9812 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9813 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9814 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9815 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9816 ;;Total ram usage:        2 bytes
  9817 ;; Hardware stack levels used: 1
  9818 ;; This function calls:
  9819 ;;		Nothing
  9820 ;; This function is called by:
  9821 ;;		_get_scale_val
  9822 ;; This function uses a non-reentrant model
  9823 ;;
  9824                           
  9825                           
  9826                           ;psect for function _set_CELL_CLK_LOW
  9827  153A                     _set_CELL_CLK_LOW:
  9828                           
  9829                           ;incstack = 0
  9830                           ; Regs used in _set_CELL_CLK_LOW: [wreg+fsr1l+fsr1h+status,2+status,0]
  9831                           ;set_CELL_CLK_LOW@p stored from wreg
  9832  153A  00F1               	movwf	set_CELL_CLK_LOW@p
  9833  153B                     l2711:
  9834  153B  0871               	movf	set_CELL_CLK_LOW@p,w
  9835  153C  0086               	movwf	6
  9836  153D  0187               	clrf	7
  9837  153E  0901               	comf	1,w
  9838  153F  00F0               	movwf	??_set_CELL_CLK_LOW
  9839  1540  0870               	movf	??_set_CELL_CLK_LOW,w
  9840  1541  0022               	movlb	2	; select bank2
  9841  1542  058D               	andwf	13,f	;volatile
  9842  1543                     l234:
  9843  1543  0008               	return
  9844  1544                     __end_of_set_CELL_CLK_LOW:
  9845                           
  9846                           	psect	text39
  9847  1530                     __ptext39:	
  9848 ;; *************** function _set_CELL_CLK_HIGH *****************
  9849 ;; Defined at:
  9850 ;;		line 12 in file "loadcell.c"
  9851 ;; Parameters:    Size  Location     Type
  9852 ;;  p               1    wreg     PTR struct .
  9853 ;;		 -> NULL(0), main@loadcell(12), 
  9854 ;; Auto vars:     Size  Location     Type
  9855 ;;  p               1    1[COMMON] PTR struct .
  9856 ;;		 -> NULL(0), main@loadcell(12), 
  9857 ;; Return value:  Size  Location     Type
  9858 ;;                  1    wreg      void 
  9859 ;; Registers used:
  9860 ;;		wreg, fsr1l, fsr1h, status,2, status,0
  9861 ;; Tracked objects:
  9862 ;;		On entry : 0/0
  9863 ;;		On exit  : 0/0
  9864 ;;		Unchanged: 0/0
  9865 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  9866 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9867 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9868 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9869 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9870 ;;Total ram usage:        2 bytes
  9871 ;; Hardware stack levels used: 1
  9872 ;; This function calls:
  9873 ;;		Nothing
  9874 ;; This function is called by:
  9875 ;;		_get_scale_val
  9876 ;; This function uses a non-reentrant model
  9877 ;;
  9878                           
  9879                           
  9880                           ;psect for function _set_CELL_CLK_HIGH
  9881  1530                     _set_CELL_CLK_HIGH:
  9882                           
  9883                           ;incstack = 0
  9884                           ; Regs used in _set_CELL_CLK_HIGH: [wreg+fsr1l+fsr1h+status,2+status,0]
  9885                           ;set_CELL_CLK_HIGH@p stored from wreg
  9886  1530  00F1               	movwf	set_CELL_CLK_HIGH@p
  9887  1531                     l2713:
  9888  1531  0871               	movf	set_CELL_CLK_HIGH@p,w
  9889  1532  0086               	movwf	6
  9890  1533  0187               	clrf	7
  9891  1534  0801               	movf	1,w
  9892  1535  00F0               	movwf	??_set_CELL_CLK_HIGH
  9893  1536  0870               	movf	??_set_CELL_CLK_HIGH,w
  9894  1537  0022               	movlb	2	; select bank2
  9895  1538  048D               	iorwf	13,f	;volatile
  9896  1539                     l237:
  9897  1539  0008               	return
  9898  153A                     __end_of_set_CELL_CLK_HIGH:
  9899                           
  9900                           	psect	text40
  9901  0CE7                     __ptext40:	
  9902 ;; *************** function _get_CELL_DAT_VAL *****************
  9903 ;; Defined at:
  9904 ;;		line 15 in file "loadcell.c"
  9905 ;; Parameters:    Size  Location     Type
  9906 ;;  p               1    wreg     PTR struct .
  9907 ;;		 -> NULL(0), main@loadcell(12), 
  9908 ;; Auto vars:     Size  Location     Type
  9909 ;;  p               1    5[COMMON] PTR struct .
  9910 ;;		 -> NULL(0), main@loadcell(12), 
  9911 ;; Return value:  Size  Location     Type
  9912 ;;                  2    0[COMMON] int 
  9913 ;; Registers used:
  9914 ;;		wreg, fsr1l, fsr1h, status,2, status,0
  9915 ;; Tracked objects:
  9916 ;;		On entry : 0/0
  9917 ;;		On exit  : 0/0
  9918 ;;		Unchanged: 0/0
  9919 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  9920 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9921 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9922 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9923 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9924 ;;Total ram usage:        6 bytes
  9925 ;; Hardware stack levels used: 1
  9926 ;; This function calls:
  9927 ;;		Nothing
  9928 ;; This function is called by:
  9929 ;;		_get_scale_val
  9930 ;; This function uses a non-reentrant model
  9931 ;;
  9932                           
  9933                           
  9934                           ;psect for function _get_CELL_DAT_VAL
  9935  0CE7                     _get_CELL_DAT_VAL:
  9936                           
  9937                           ;incstack = 0
  9938                           ; Regs used in _get_CELL_DAT_VAL: [wreg+fsr1l+fsr1h+status,2+status,0]
  9939                           ;get_CELL_DAT_VAL@p stored from wreg
  9940  0CE7  00F5               	movwf	get_CELL_DAT_VAL@p
  9941  0CE8                     l2715:
  9942                           
  9943                           ;loadcell.c: 16:     if(p->cell_dat == 0x01){ return PORTBbits.RB0; }
  9944  0CE8  0A75               	incf	get_CELL_DAT_VAL@p,w
  9945  0CE9  0086               	movwf	6
  9946  0CEA  0187               	clrf	7
  9947  0CEB  0301               	decf	1,w
  9948  0CEC  1D03               	btfss	3,2
  9949  0CED  2CEF               	goto	u2681
  9950  0CEE  2CF0               	goto	u2680
  9951  0CEF                     u2681:
  9952  0CEF  2CFA               	goto	l2721
  9953  0CF0                     u2680:
  9954  0CF0                     l2717:
  9955  0CF0  0020               	movlb	0	; select bank0
  9956  0CF1  080D               	movf	13,w	;volatile
  9957  0CF2  3901               	andlw	1
  9958  0CF3  00F2               	movwf	??_get_CELL_DAT_VAL
  9959  0CF4  01F3               	clrf	??_get_CELL_DAT_VAL+1
  9960  0CF5  0872               	movf	??_get_CELL_DAT_VAL,w
  9961  0CF6  00F0               	movwf	?_get_CELL_DAT_VAL
  9962  0CF7  0873               	movf	??_get_CELL_DAT_VAL+1,w
  9963  0CF8  00F1               	movwf	?_get_CELL_DAT_VAL+1
  9964  0CF9  2D89               	goto	l241
  9965  0CFA                     l2721:
  9966                           
  9967                           ;loadcell.c: 17:     if(p->cell_dat == 0x02){ return PORTBbits.RB1; }
  9968  0CFA  0A75               	incf	get_CELL_DAT_VAL@p,w
  9969  0CFB  0086               	movwf	6
  9970  0CFC  0187               	clrf	7
  9971  0CFD  3002               	movlw	2
  9972  0CFE  0601               	xorwf	1,w
  9973  0CFF  1D03               	btfss	3,2
  9974  0D00  2D02               	goto	u2691
  9975  0D01  2D03               	goto	u2690
  9976  0D02                     u2691:
  9977  0D02  2D0D               	goto	l2727
  9978  0D03                     u2690:
  9979  0D03                     l2723:
  9980  0D03  0020               	movlb	0	; select bank0
  9981  0D04  0C0D               	rrf	13,w	;volatile
  9982  0D05  3901               	andlw	1
  9983  0D06  00F2               	movwf	??_get_CELL_DAT_VAL
  9984  0D07  01F3               	clrf	??_get_CELL_DAT_VAL+1
  9985  0D08  0872               	movf	??_get_CELL_DAT_VAL,w
  9986  0D09  00F0               	movwf	?_get_CELL_DAT_VAL
  9987  0D0A  0873               	movf	??_get_CELL_DAT_VAL+1,w
  9988  0D0B  00F1               	movwf	?_get_CELL_DAT_VAL+1
  9989  0D0C  2D89               	goto	l241
  9990  0D0D                     l2727:
  9991                           
  9992                           ;loadcell.c: 18:     if(p->cell_dat == 0x04){ return PORTBbits.RB2; }
  9993  0D0D  0A75               	incf	get_CELL_DAT_VAL@p,w
  9994  0D0E  0086               	movwf	6
  9995  0D0F  0187               	clrf	7
  9996  0D10  3004               	movlw	4
  9997  0D11  0601               	xorwf	1,w
  9998  0D12  1D03               	btfss	3,2
  9999  0D13  2D15               	goto	u2701
 10000  0D14  2D16               	goto	u2700
 10001  0D15                     u2701:
 10002  0D15  2D21               	goto	l2733
 10003  0D16                     u2700:
 10004  0D16                     l2729:
 10005  0D16  0020               	movlb	0	; select bank0
 10006  0D17  0C0D               	rrf	13,w	;volatile
 10007  0D18  0C89               	rrf	9,f
 10008  0D19  3901               	andlw	1
 10009  0D1A  00F2               	movwf	??_get_CELL_DAT_VAL
 10010  0D1B  01F3               	clrf	??_get_CELL_DAT_VAL+1
 10011  0D1C  0872               	movf	??_get_CELL_DAT_VAL,w
 10012  0D1D  00F0               	movwf	?_get_CELL_DAT_VAL
 10013  0D1E  0873               	movf	??_get_CELL_DAT_VAL+1,w
 10014  0D1F  00F1               	movwf	?_get_CELL_DAT_VAL+1
 10015  0D20  2D89               	goto	l241
 10016  0D21                     l2733:
 10017                           
 10018                           ;loadcell.c: 19:     if(p->cell_dat == 0x08){ return PORTBbits.RB3; }
 10019  0D21  0A75               	incf	get_CELL_DAT_VAL@p,w
 10020  0D22  0086               	movwf	6
 10021  0D23  0187               	clrf	7
 10022  0D24  3008               	movlw	8
 10023  0D25  0601               	xorwf	1,w
 10024  0D26  1D03               	btfss	3,2
 10025  0D27  2D29               	goto	u2711
 10026  0D28  2D2A               	goto	u2710
 10027  0D29                     u2711:
 10028  0D29  2D37               	goto	l2739
 10029  0D2A                     u2710:
 10030  0D2A                     l2735:
 10031  0D2A  0020               	movlb	0	; select bank0
 10032  0D2B  0C0D               	rrf	13,w	;volatile
 10033  0D2C  00F2               	movwf	??_get_CELL_DAT_VAL
 10034  0D2D  0CF2               	rrf	??_get_CELL_DAT_VAL,f
 10035  0D2E  0C72               	rrf	??_get_CELL_DAT_VAL,w
 10036  0D2F  3901               	andlw	1
 10037  0D30  00F3               	movwf	??_get_CELL_DAT_VAL+1
 10038  0D31  01F4               	clrf	??_get_CELL_DAT_VAL+2
 10039  0D32  0873               	movf	??_get_CELL_DAT_VAL+1,w
 10040  0D33  00F0               	movwf	?_get_CELL_DAT_VAL
 10041  0D34  0874               	movf	??_get_CELL_DAT_VAL+2,w
 10042  0D35  00F1               	movwf	?_get_CELL_DAT_VAL+1
 10043  0D36  2D89               	goto	l241
 10044  0D37                     l2739:
 10045                           
 10046                           ;loadcell.c: 20:     if(p->cell_dat == 0x10){ return PORTBbits.RB4; }
 10047  0D37  0A75               	incf	get_CELL_DAT_VAL@p,w
 10048  0D38  0086               	movwf	6
 10049  0D39  0187               	clrf	7
 10050  0D3A  3010               	movlw	16
 10051  0D3B  0601               	xorwf	1,w
 10052  0D3C  1D03               	btfss	3,2
 10053  0D3D  2D3F               	goto	u2721
 10054  0D3E  2D40               	goto	u2720
 10055  0D3F                     u2721:
 10056  0D3F  2D4A               	goto	l2745
 10057  0D40                     u2720:
 10058  0D40                     l2741:
 10059  0D40  0020               	movlb	0	; select bank0
 10060  0D41  0E0D               	swapf	13,w	;volatile
 10061  0D42  3901               	andlw	1
 10062  0D43  00F2               	movwf	??_get_CELL_DAT_VAL
 10063  0D44  01F3               	clrf	??_get_CELL_DAT_VAL+1
 10064  0D45  0872               	movf	??_get_CELL_DAT_VAL,w
 10065  0D46  00F0               	movwf	?_get_CELL_DAT_VAL
 10066  0D47  0873               	movf	??_get_CELL_DAT_VAL+1,w
 10067  0D48  00F1               	movwf	?_get_CELL_DAT_VAL+1
 10068  0D49  2D89               	goto	l241
 10069  0D4A                     l2745:
 10070                           
 10071                           ;loadcell.c: 21:     if(p->cell_dat == 0x20){ return PORTBbits.RB5; }
 10072  0D4A  0A75               	incf	get_CELL_DAT_VAL@p,w
 10073  0D4B  0086               	movwf	6
 10074  0D4C  0187               	clrf	7
 10075  0D4D  3020               	movlw	32
 10076  0D4E  0601               	xorwf	1,w
 10077  0D4F  1D03               	btfss	3,2
 10078  0D50  2D52               	goto	u2731
 10079  0D51  2D53               	goto	u2730
 10080  0D52                     u2731:
 10081  0D52  2D5E               	goto	l2751
 10082  0D53                     u2730:
 10083  0D53                     l2747:
 10084  0D53  0020               	movlb	0	; select bank0
 10085  0D54  0E0D               	swapf	13,w	;volatile
 10086  0D55  0C89               	rrf	9,f
 10087  0D56  3901               	andlw	1
 10088  0D57  00F2               	movwf	??_get_CELL_DAT_VAL
 10089  0D58  01F3               	clrf	??_get_CELL_DAT_VAL+1
 10090  0D59  0872               	movf	??_get_CELL_DAT_VAL,w
 10091  0D5A  00F0               	movwf	?_get_CELL_DAT_VAL
 10092  0D5B  0873               	movf	??_get_CELL_DAT_VAL+1,w
 10093  0D5C  00F1               	movwf	?_get_CELL_DAT_VAL+1
 10094  0D5D  2D89               	goto	l241
 10095  0D5E                     l2751:
 10096                           
 10097                           ;loadcell.c: 22:     if(p->cell_dat == 0x40){ return PORTBbits.RB6; }
 10098  0D5E  0A75               	incf	get_CELL_DAT_VAL@p,w
 10099  0D5F  0086               	movwf	6
 10100  0D60  0187               	clrf	7
 10101  0D61  3040               	movlw	64
 10102  0D62  0601               	xorwf	1,w
 10103  0D63  1D03               	btfss	3,2
 10104  0D64  2D66               	goto	u2741
 10105  0D65  2D67               	goto	u2740
 10106  0D66                     u2741:
 10107  0D66  2D73               	goto	l2757
 10108  0D67                     u2740:
 10109  0D67                     l2753:
 10110  0D67  0020               	movlb	0	; select bank0
 10111  0D68  0E0D               	swapf	13,w	;volatile
 10112  0D69  0C89               	rrf	9,f
 10113  0D6A  0C89               	rrf	9,f
 10114  0D6B  3901               	andlw	1
 10115  0D6C  00F2               	movwf	??_get_CELL_DAT_VAL
 10116  0D6D  01F3               	clrf	??_get_CELL_DAT_VAL+1
 10117  0D6E  0872               	movf	??_get_CELL_DAT_VAL,w
 10118  0D6F  00F0               	movwf	?_get_CELL_DAT_VAL
 10119  0D70  0873               	movf	??_get_CELL_DAT_VAL+1,w
 10120  0D71  00F1               	movwf	?_get_CELL_DAT_VAL+1
 10121  0D72  2D89               	goto	l241
 10122  0D73                     l2757:
 10123                           
 10124                           ;loadcell.c: 23:     if(p->cell_dat == 0x80){ return PORTBbits.RB7; }
 10125  0D73  0A75               	incf	get_CELL_DAT_VAL@p,w
 10126  0D74  0086               	movwf	6
 10127  0D75  0187               	clrf	7
 10128  0D76  3080               	movlw	128
 10129  0D77  0601               	xorwf	1,w
 10130  0D78  1D03               	btfss	3,2
 10131  0D79  2D7B               	goto	u2751
 10132  0D7A  2D7C               	goto	u2750
 10133  0D7B                     u2751:
 10134  0D7B  2D87               	goto	l2763
 10135  0D7C                     u2750:
 10136  0D7C                     l2759:
 10137  0D7C  0020               	movlb	0	; select bank0
 10138  0D7D  0D0D               	rlf	13,w	;volatile
 10139  0D7E  0D0D               	rlf	13,w	;volatile
 10140  0D7F  3901               	andlw	1
 10141  0D80  00F2               	movwf	??_get_CELL_DAT_VAL
 10142  0D81  01F3               	clrf	??_get_CELL_DAT_VAL+1
 10143  0D82  0872               	movf	??_get_CELL_DAT_VAL,w
 10144  0D83  00F0               	movwf	?_get_CELL_DAT_VAL
 10145  0D84  0873               	movf	??_get_CELL_DAT_VAL+1,w
 10146  0D85  00F1               	movwf	?_get_CELL_DAT_VAL+1
 10147  0D86  2D89               	goto	l241
 10148  0D87                     l2763:
 10149                           
 10150                           ;loadcell.c: 25:     return 0;
 10151  0D87  01F0               	clrf	?_get_CELL_DAT_VAL
 10152  0D88  01F1               	clrf	?_get_CELL_DAT_VAL+1
 10153  0D89                     l241:
 10154  0D89  0008               	return
 10155  0D8A                     __end_of_get_CELL_DAT_VAL:
 10156                           
 10157                           	psect	text41
 10158  08EA                     __ptext41:	
 10159 ;; *************** function ___lldiv *****************
 10160 ;; Defined at:
 10161 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\__lldiv.c"
 10162 ;; Parameters:    Size  Location     Type
 10163 ;;  divisor         4    0[COMMON] unsigned long 
 10164 ;;  dividend        4    4[COMMON] unsigned long 
 10165 ;; Auto vars:     Size  Location     Type
 10166 ;;  quotient        4    9[COMMON] unsigned long 
 10167 ;;  counter         1   13[COMMON] unsigned char 
 10168 ;; Return value:  Size  Location     Type
 10169 ;;                  4    0[COMMON] unsigned long 
 10170 ;; Registers used:
 10171 ;;		wreg, status,2, status,0
 10172 ;; Tracked objects:
 10173 ;;		On entry : 0/0
 10174 ;;		On exit  : 0/0
 10175 ;;		Unchanged: 0/0
 10176 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 10177 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10178 ;;      Locals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10179 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10180 ;;      Totals:        14       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10181 ;;Total ram usage:       14 bytes
 10182 ;; Hardware stack levels used: 1
 10183 ;; This function calls:
 10184 ;;		Nothing
 10185 ;; This function is called by:
 10186 ;;		_get_scale_val
 10187 ;; This function uses a non-reentrant model
 10188 ;;
 10189                           
 10190                           
 10191                           ;psect for function ___lldiv
 10192  08EA                     ___lldiv:
 10193  08EA                     l2787:	
 10194                           ;incstack = 0
 10195                           ; Regs used in ___lldiv: [wreg+status,2+status,0]
 10196                           
 10197  08EA  3000               	movlw	0
 10198  08EB  00FC               	movwf	___lldiv@quotient+3
 10199  08EC  3000               	movlw	0
 10200  08ED  00FB               	movwf	___lldiv@quotient+2
 10201  08EE  3000               	movlw	0
 10202  08EF  00FA               	movwf	___lldiv@quotient+1
 10203  08F0  3000               	movlw	0
 10204  08F1  00F9               	movwf	___lldiv@quotient
 10205  08F2  0873               	movf	___lldiv@divisor+3,w
 10206  08F3  0472               	iorwf	___lldiv@divisor+2,w
 10207  08F4  0471               	iorwf	___lldiv@divisor+1,w
 10208  08F5  0470               	iorwf	___lldiv@divisor,w
 10209  08F6  1903               	skipnz
 10210  08F7  28F9               	goto	u2781
 10211  08F8  28FA               	goto	u2780
 10212  08F9                     u2781:
 10213  08F9  293B               	goto	l2807
 10214  08FA                     u2780:
 10215  08FA                     l2789:
 10216  08FA  01FD               	clrf	___lldiv@counter
 10217  08FB  0AFD               	incf	___lldiv@counter,f
 10218  08FC  2908               	goto	l2793
 10219  08FD                     l2791:
 10220  08FD  3001               	movlw	1
 10221  08FE                     u2795:
 10222  08FE  35F0               	lslf	___lldiv@divisor,f
 10223  08FF  0DF1               	rlf	___lldiv@divisor+1,f
 10224  0900  0DF2               	rlf	___lldiv@divisor+2,f
 10225  0901  0DF3               	rlf	___lldiv@divisor+3,f
 10226  0902  0B89               	decfsz	9,f
 10227  0903  28FE               	goto	u2795
 10228  0904  3001               	movlw	1
 10229  0905  00F8               	movwf	??___lldiv
 10230  0906  0878               	movf	??___lldiv,w
 10231  0907  07FD               	addwf	___lldiv@counter,f
 10232  0908                     l2793:
 10233  0908  1FF3               	btfss	___lldiv@divisor+3,7
 10234  0909  290B               	goto	u2801
 10235  090A  290C               	goto	u2800
 10236  090B                     u2801:
 10237  090B  28FD               	goto	l2791
 10238  090C                     u2800:
 10239  090C                     l2795:
 10240  090C  3001               	movlw	1
 10241  090D                     u2815:
 10242  090D  35F9               	lslf	___lldiv@quotient,f
 10243  090E  0DFA               	rlf	___lldiv@quotient+1,f
 10244  090F  0DFB               	rlf	___lldiv@quotient+2,f
 10245  0910  0DFC               	rlf	___lldiv@quotient+3,f
 10246  0911  0B89               	decfsz	9,f
 10247  0912  290D               	goto	u2815
 10248  0913                     l2797:
 10249  0913  0873               	movf	___lldiv@divisor+3,w
 10250  0914  0277               	subwf	___lldiv@dividend+3,w
 10251  0915  1D03               	skipz
 10252  0916  2921               	goto	u2825
 10253  0917  0872               	movf	___lldiv@divisor+2,w
 10254  0918  0276               	subwf	___lldiv@dividend+2,w
 10255  0919  1D03               	skipz
 10256  091A  2921               	goto	u2825
 10257  091B  0871               	movf	___lldiv@divisor+1,w
 10258  091C  0275               	subwf	___lldiv@dividend+1,w
 10259  091D  1D03               	skipz
 10260  091E  2921               	goto	u2825
 10261  091F  0870               	movf	___lldiv@divisor,w
 10262  0920  0274               	subwf	___lldiv@dividend,w
 10263  0921                     u2825:
 10264  0921  1C03               	skipc
 10265  0922  2924               	goto	u2821
 10266  0923  2925               	goto	u2820
 10267  0924                     u2821:
 10268  0924  292E               	goto	l2803
 10269  0925                     u2820:
 10270  0925                     l2799:
 10271  0925  0870               	movf	___lldiv@divisor,w
 10272  0926  02F4               	subwf	___lldiv@dividend,f
 10273  0927  0871               	movf	___lldiv@divisor+1,w
 10274  0928  3BF5               	subwfb	___lldiv@dividend+1,f
 10275  0929  0872               	movf	___lldiv@divisor+2,w
 10276  092A  3BF6               	subwfb	___lldiv@dividend+2,f
 10277  092B  0873               	movf	___lldiv@divisor+3,w
 10278  092C  3BF7               	subwfb	___lldiv@dividend+3,f
 10279  092D                     l2801:
 10280  092D  1479               	bsf	___lldiv@quotient,0
 10281  092E                     l2803:
 10282  092E  3001               	movlw	1
 10283  092F                     u2835:
 10284  092F  36F3               	lsrf	___lldiv@divisor+3,f
 10285  0930  0CF2               	rrf	___lldiv@divisor+2,f
 10286  0931  0CF1               	rrf	___lldiv@divisor+1,f
 10287  0932  0CF0               	rrf	___lldiv@divisor,f
 10288  0933  0B89               	decfsz	9,f
 10289  0934  292F               	goto	u2835
 10290  0935                     l2805:
 10291  0935  3001               	movlw	1
 10292  0936  02FD               	subwf	___lldiv@counter,f
 10293  0937  1D03               	btfss	3,2
 10294  0938  293A               	goto	u2841
 10295  0939  293B               	goto	u2840
 10296  093A                     u2841:
 10297  093A  290C               	goto	l2795
 10298  093B                     u2840:
 10299  093B                     l2807:
 10300  093B  087C               	movf	___lldiv@quotient+3,w
 10301  093C  00F3               	movwf	?___lldiv+3
 10302  093D  087B               	movf	___lldiv@quotient+2,w
 10303  093E  00F2               	movwf	?___lldiv+2
 10304  093F  087A               	movf	___lldiv@quotient+1,w
 10305  0940  00F1               	movwf	?___lldiv+1
 10306  0941  0879               	movf	___lldiv@quotient,w
 10307  0942  00F0               	movwf	?___lldiv
 10308  0943                     l539:
 10309  0943  0008               	return
 10310  0944                     __end_of___lldiv:
 10311                           
 10312                           	psect	text42
 10313  16E0                     __ptext42:	
 10314 ;; *************** function ___lwdiv *****************
 10315 ;; Defined at:
 10316 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\lwdiv.c"
 10317 ;; Parameters:    Size  Location     Type
 10318 ;;  divisor         2    0[COMMON] unsigned int 
 10319 ;;  dividend        2    2[COMMON] unsigned int 
 10320 ;; Auto vars:     Size  Location     Type
 10321 ;;  quotient        2    5[COMMON] unsigned int 
 10322 ;;  counter         1    7[COMMON] unsigned char 
 10323 ;; Return value:  Size  Location     Type
 10324 ;;                  2    0[COMMON] unsigned int 
 10325 ;; Registers used:
 10326 ;;		wreg, status,2, status,0
 10327 ;; Tracked objects:
 10328 ;;		On entry : 0/0
 10329 ;;		On exit  : 0/0
 10330 ;;		Unchanged: 0/0
 10331 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 10332 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10333 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10334 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10335 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10336 ;;Total ram usage:        8 bytes
 10337 ;; Hardware stack levels used: 1
 10338 ;; This function calls:
 10339 ;;		Nothing
 10340 ;; This function is called by:
 10341 ;;		_calc_percentage
 10342 ;; This function uses a non-reentrant model
 10343 ;;
 10344                           
 10345                           
 10346                           ;psect for function ___lwdiv
 10347  16E0                     ___lwdiv:
 10348  16E0                     l3285:	
 10349                           ;incstack = 0
 10350                           ; Regs used in ___lwdiv: [wreg+status,2+status,0]
 10351                           
 10352  16E0  01F5               	clrf	___lwdiv@quotient
 10353  16E1  01F6               	clrf	___lwdiv@quotient+1
 10354  16E2                     l3287:
 10355  16E2  0870               	movf	___lwdiv@divisor,w
 10356  16E3  0471               	iorwf	___lwdiv@divisor+1,w
 10357  16E4  1903               	btfsc	3,2
 10358  16E5  2EE7               	goto	u3531
 10359  16E6  2EE8               	goto	u3530
 10360  16E7                     u3531:
 10361  16E7  2F17               	goto	l3307
 10362  16E8                     u3530:
 10363  16E8                     l3289:
 10364  16E8  01F7               	clrf	___lwdiv@counter
 10365  16E9  0AF7               	incf	___lwdiv@counter,f
 10366  16EA  2EF4               	goto	l3295
 10367  16EB                     l3291:
 10368  16EB  3001               	movlw	1
 10369  16EC                     u3545:
 10370  16EC  35F0               	lslf	___lwdiv@divisor,f
 10371  16ED  0DF1               	rlf	___lwdiv@divisor+1,f
 10372  16EE  0B89               	decfsz	9,f
 10373  16EF  2EEC               	goto	u3545
 10374  16F0                     l3293:
 10375  16F0  3001               	movlw	1
 10376  16F1  00F4               	movwf	??___lwdiv
 10377  16F2  0874               	movf	??___lwdiv,w
 10378  16F3  07F7               	addwf	___lwdiv@counter,f
 10379  16F4                     l3295:
 10380  16F4  1FF1               	btfss	___lwdiv@divisor+1,7
 10381  16F5  2EF7               	goto	u3551
 10382  16F6  2EF8               	goto	u3550
 10383  16F7                     u3551:
 10384  16F7  2EEB               	goto	l3291
 10385  16F8                     u3550:
 10386  16F8                     l3297:
 10387  16F8  3001               	movlw	1
 10388  16F9                     u3565:
 10389  16F9  35F5               	lslf	___lwdiv@quotient,f
 10390  16FA  0DF6               	rlf	___lwdiv@quotient+1,f
 10391  16FB  0B89               	decfsz	9,f
 10392  16FC  2EF9               	goto	u3565
 10393  16FD  0871               	movf	___lwdiv@divisor+1,w
 10394  16FE  0273               	subwf	___lwdiv@dividend+1,w
 10395  16FF  1D03               	skipz
 10396  1700  2F03               	goto	u3575
 10397  1701  0870               	movf	___lwdiv@divisor,w
 10398  1702  0272               	subwf	___lwdiv@dividend,w
 10399  1703                     u3575:
 10400  1703  1C03               	skipc
 10401  1704  2F06               	goto	u3571
 10402  1705  2F07               	goto	u3570
 10403  1706                     u3571:
 10404  1706  2F0C               	goto	l3303
 10405  1707                     u3570:
 10406  1707                     l3299:
 10407  1707  0870               	movf	___lwdiv@divisor,w
 10408  1708  02F2               	subwf	___lwdiv@dividend,f
 10409  1709  0871               	movf	___lwdiv@divisor+1,w
 10410  170A  3BF3               	subwfb	___lwdiv@dividend+1,f
 10411  170B                     l3301:
 10412  170B  1475               	bsf	___lwdiv@quotient,0
 10413  170C                     l3303:
 10414  170C  3001               	movlw	1
 10415  170D                     u3585:
 10416  170D  36F1               	lsrf	___lwdiv@divisor+1,f
 10417  170E  0CF0               	rrf	___lwdiv@divisor,f
 10418  170F  0B89               	decfsz	9,f
 10419  1710  2F0D               	goto	u3585
 10420  1711                     l3305:
 10421  1711  3001               	movlw	1
 10422  1712  02F7               	subwf	___lwdiv@counter,f
 10423  1713  1D03               	btfss	3,2
 10424  1714  2F16               	goto	u3591
 10425  1715  2F17               	goto	u3590
 10426  1716                     u3591:
 10427  1716  2EF8               	goto	l3297
 10428  1717                     u3590:
 10429  1717                     l3307:
 10430  1717  0876               	movf	___lwdiv@quotient+1,w
 10431  1718  00F1               	movwf	?___lwdiv+1
 10432  1719  0875               	movf	___lwdiv@quotient,w
 10433  171A  00F0               	movwf	?___lwdiv
 10434  171B                     l783:
 10435  171B  0008               	return
 10436  171C                     __end_of___lwdiv:
 10437                           
 10438                           	psect	text43
 10439  155E                     __ptext43:	
 10440 ;; *************** function ___bmul *****************
 10441 ;; Defined at:
 10442 ;;		line 4 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\Umul8.c"
 10443 ;; Parameters:    Size  Location     Type
 10444 ;;  multiplier      1    wreg     unsigned char 
 10445 ;;  multiplicand    1    8[COMMON] unsigned char 
 10446 ;; Auto vars:     Size  Location     Type
 10447 ;;  multiplier      1   11[COMMON] unsigned char 
 10448 ;;  product         1   10[COMMON] unsigned char 
 10449 ;; Return value:  Size  Location     Type
 10450 ;;                  1    wreg      unsigned char 
 10451 ;; Registers used:
 10452 ;;		wreg, status,2, status,0
 10453 ;; Tracked objects:
 10454 ;;		On entry : 0/0
 10455 ;;		On exit  : 0/0
 10456 ;;		Unchanged: 0/0
 10457 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 10458 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10459 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10460 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10461 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10462 ;;Total ram usage:        4 bytes
 10463 ;; Hardware stack levels used: 1
 10464 ;; This function calls:
 10465 ;;		Nothing
 10466 ;; This function is called by:
 10467 ;;		_calc_percentage
 10468 ;; This function uses a non-reentrant model
 10469 ;;
 10470                           
 10471                           
 10472                           ;psect for function ___bmul
 10473  155E                     ___bmul:
 10474                           
 10475                           ;incstack = 0
 10476                           ; Regs used in ___bmul: [wreg+status,2+status,0]
 10477                           ;___bmul@multiplier stored from wreg
 10478  155E  00FB               	movwf	___bmul@multiplier
 10479  155F                     l3271:
 10480  155F  01FA               	clrf	___bmul@product
 10481  1560                     l3273:
 10482  1560  1C7B               	btfss	___bmul@multiplier,0
 10483  1561  2D63               	goto	u3511
 10484  1562  2D64               	goto	u3510
 10485  1563                     u3511:
 10486  1563  2D68               	goto	l3277
 10487  1564                     u3510:
 10488  1564                     l3275:
 10489  1564  0878               	movf	___bmul@multiplicand,w
 10490  1565  00F9               	movwf	??___bmul
 10491  1566  0879               	movf	??___bmul,w
 10492  1567  07FA               	addwf	___bmul@product,f
 10493  1568                     l3277:
 10494  1568  1003               	clrc
 10495  1569  0DF8               	rlf	___bmul@multiplicand,f
 10496  156A                     l3279:
 10497  156A  1003               	clrc
 10498  156B  0CFB               	rrf	___bmul@multiplier,f
 10499  156C  087B               	movf	___bmul@multiplier,w
 10500  156D  1D03               	btfss	3,2
 10501  156E  2D70               	goto	u3521
 10502  156F  2D71               	goto	u3520
 10503  1570                     u3521:
 10504  1570  2D60               	goto	l3273
 10505  1571                     u3520:
 10506  1571                     l3281:
 10507  1571  087A               	movf	___bmul@product,w
 10508  1572                     l529:
 10509  1572  0008               	return
 10510  1573                     __end_of___bmul:
 10511                           
 10512                           	psect	text44
 10513  1526                     __ptext44:	
 10514 ;; *************** function _SYSTEM_Initialize *****************
 10515 ;; Defined at:
 10516 ;;		line 50 in file "mcc_generated_files/mcc.c"
 10517 ;; Parameters:    Size  Location     Type
 10518 ;;		None
 10519 ;; Auto vars:     Size  Location     Type
 10520 ;;		None
 10521 ;; Return value:  Size  Location     Type
 10522 ;;                  1    wreg      void 
 10523 ;; Registers used:
 10524 ;;		wreg, status,2, status,0, pclath, cstack
 10525 ;; Tracked objects:
 10526 ;;		On entry : 0/0
 10527 ;;		On exit  : 0/0
 10528 ;;		Unchanged: 0/0
 10529 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 10530 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10531 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10532 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10533 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10534 ;;Total ram usage:        0 bytes
 10535 ;; Hardware stack levels used: 1
 10536 ;; Hardware stack levels required when called: 1
 10537 ;; This function calls:
 10538 ;;		_OSCILLATOR_Initialize
 10539 ;;		_PIN_MANAGER_Initialize
 10540 ;;		_WDT_Initialize
 10541 ;; This function is called by:
 10542 ;;		_main
 10543 ;; This function uses a non-reentrant model
 10544 ;;
 10545                           
 10546                           
 10547                           ;psect for function _SYSTEM_Initialize
 10548  1526                     _SYSTEM_Initialize:
 10549  1526                     l3311:	
 10550                           ;incstack = 0
 10551                           ; Regs used in _SYSTEM_Initialize: [wreg+status,2+status,0+pclath+cstack]
 10552                           
 10553                           
 10554                           ;mcc_generated_files/mcc.c: 53:     PIN_MANAGER_Initialize();
 10555  1526  3195  25EC  3195   	fcall	_PIN_MANAGER_Initialize
 10556                           
 10557                           ;mcc_generated_files/mcc.c: 54:     OSCILLATOR_Initialize();
 10558  1529  3195  2518  3195   	fcall	_OSCILLATOR_Initialize
 10559                           
 10560                           ;mcc_generated_files/mcc.c: 55:     WDT_Initialize();
 10561  152C  3195  2508  3195   	fcall	_WDT_Initialize
 10562  152F                     l51:
 10563  152F  0008               	return
 10564  1530                     __end_of_SYSTEM_Initialize:
 10565                           
 10566                           	psect	text45
 10567  1508                     __ptext45:	
 10568 ;; *************** function _WDT_Initialize *****************
 10569 ;; Defined at:
 10570 ;;		line 68 in file "mcc_generated_files/mcc.c"
 10571 ;; Parameters:    Size  Location     Type
 10572 ;;		None
 10573 ;; Auto vars:     Size  Location     Type
 10574 ;;		None
 10575 ;; Return value:  Size  Location     Type
 10576 ;;                  1    wreg      void 
 10577 ;; Registers used:
 10578 ;;		wreg
 10579 ;; Tracked objects:
 10580 ;;		On entry : 0/0
 10581 ;;		On exit  : 0/0
 10582 ;;		Unchanged: 0/0
 10583 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 10584 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10585 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10586 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10587 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10588 ;;Total ram usage:        0 bytes
 10589 ;; Hardware stack levels used: 1
 10590 ;; This function calls:
 10591 ;;		Nothing
 10592 ;; This function is called by:
 10593 ;;		_SYSTEM_Initialize
 10594 ;; This function uses a non-reentrant model
 10595 ;;
 10596                           
 10597                           
 10598                           ;psect for function _WDT_Initialize
 10599  1508                     _WDT_Initialize:
 10600  1508                     l3065:	
 10601                           ;incstack = 0
 10602                           ; Regs used in _WDT_Initialize: [wreg]
 10603                           
 10604                           
 10605                           ;mcc_generated_files/mcc.c: 71:     WDTCON = 0x16;
 10606  1508  3016               	movlw	22
 10607  1509  0021               	movlb	1	; select bank1
 10608  150A  0097               	movwf	23	;volatile
 10609  150B                     l57:
 10610  150B  0008               	return
 10611  150C                     __end_of_WDT_Initialize:
 10612                           
 10613                           	psect	text46
 10614  15EC                     __ptext46:	
 10615 ;; *************** function _PIN_MANAGER_Initialize *****************
 10616 ;; Defined at:
 10617 ;;		line 55 in file "mcc_generated_files/pin_manager.c"
 10618 ;; Parameters:    Size  Location     Type
 10619 ;;		None
 10620 ;; Auto vars:     Size  Location     Type
 10621 ;;		None
 10622 ;; Return value:  Size  Location     Type
 10623 ;;                  1    wreg      void 
 10624 ;; Registers used:
 10625 ;;		wreg, status,2
 10626 ;; Tracked objects:
 10627 ;;		On entry : 0/0
 10628 ;;		On exit  : 0/0
 10629 ;;		Unchanged: 0/0
 10630 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 10631 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10632 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10633 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10634 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10635 ;;Total ram usage:        0 bytes
 10636 ;; Hardware stack levels used: 1
 10637 ;; This function calls:
 10638 ;;		Nothing
 10639 ;; This function is called by:
 10640 ;;		_SYSTEM_Initialize
 10641 ;; This function uses a non-reentrant model
 10642 ;;
 10643                           
 10644                           
 10645                           ;psect for function _PIN_MANAGER_Initialize
 10646  15EC                     _PIN_MANAGER_Initialize:
 10647  15EC                     l3043:	
 10648                           ;incstack = 0
 10649                           ; Regs used in _PIN_MANAGER_Initialize: [wreg+status,2]
 10650                           
 10651                           
 10652                           ;mcc_generated_files/pin_manager.c: 60:     LATE = 0x00;
 10653  15EC  0022               	movlb	2	; select bank2
 10654  15ED  0190               	clrf	16	;volatile
 10655                           
 10656                           ;mcc_generated_files/pin_manager.c: 61:     LATA = 0x00;
 10657  15EE  018C               	clrf	12	;volatile
 10658                           
 10659                           ;mcc_generated_files/pin_manager.c: 62:     LATB = 0x00;
 10660  15EF  018D               	clrf	13	;volatile
 10661                           
 10662                           ;mcc_generated_files/pin_manager.c: 63:     LATC = 0x00;
 10663  15F0  018E               	clrf	14	;volatile
 10664  15F1                     l3045:
 10665                           
 10666                           ;mcc_generated_files/pin_manager.c: 68:     TRISE = 0x08;
 10667  15F1  3008               	movlw	8
 10668  15F2  0021               	movlb	1	; select bank1
 10669  15F3  0090               	movwf	16	;volatile
 10670  15F4                     l3047:
 10671                           
 10672                           ;mcc_generated_files/pin_manager.c: 69:     TRISA = 0xFF;
 10673  15F4  30FF               	movlw	255
 10674  15F5  008C               	movwf	12	;volatile
 10675  15F6                     l3049:
 10676                           
 10677                           ;mcc_generated_files/pin_manager.c: 70:     TRISB = 0xFF;
 10678  15F6  30FF               	movlw	255
 10679  15F7  008D               	movwf	13	;volatile
 10680  15F8                     l3051:
 10681                           
 10682                           ;mcc_generated_files/pin_manager.c: 71:     TRISC = 0xFF;
 10683  15F8  30FF               	movlw	255
 10684  15F9  008E               	movwf	14	;volatile
 10685  15FA                     l3053:
 10686                           
 10687                           ;mcc_generated_files/pin_manager.c: 76:     ANSELB = 0xFE;
 10688  15FA  30FE               	movlw	254
 10689  15FB  0023               	movlb	3	; select bank3
 10690  15FC  008D               	movwf	13	;volatile
 10691  15FD                     l3055:
 10692                           
 10693                           ;mcc_generated_files/pin_manager.c: 77:     ANSELA = 0x1F;
 10694  15FD  301F               	movlw	31
 10695  15FE  008C               	movwf	12	;volatile
 10696                           
 10697                           ;mcc_generated_files/pin_manager.c: 82:     WPUE = 0x00;
 10698  15FF  0024               	movlb	4	; select bank4
 10699  1600  0190               	clrf	16	;volatile
 10700                           
 10701                           ;mcc_generated_files/pin_manager.c: 83:     WPUB = 0x00;
 10702  1601  018D               	clrf	13	;volatile
 10703  1602                     l3057:
 10704                           
 10705                           ;mcc_generated_files/pin_manager.c: 84:     OPTION_REGbits.nWPUEN = 1;
 10706  1602  0021               	movlb	1	; select bank1
 10707  1603  1795               	bsf	21,7	;volatile
 10708                           
 10709                           ;mcc_generated_files/pin_manager.c: 90:     APFCON = 0x00;
 10710  1604  0022               	movlb	2	; select bank2
 10711  1605  019D               	clrf	29	;volatile
 10712  1606                     l31:
 10713  1606  0008               	return
 10714  1607                     __end_of_PIN_MANAGER_Initialize:
 10715                           
 10716                           	psect	text47
 10717  1518                     __ptext47:	
 10718 ;; *************** function _OSCILLATOR_Initialize *****************
 10719 ;; Defined at:
 10720 ;;		line 58 in file "mcc_generated_files/mcc.c"
 10721 ;; Parameters:    Size  Location     Type
 10722 ;;		None
 10723 ;; Auto vars:     Size  Location     Type
 10724 ;;		None
 10725 ;; Return value:  Size  Location     Type
 10726 ;;                  1    wreg      void 
 10727 ;; Registers used:
 10728 ;;		wreg, status,2
 10729 ;; Tracked objects:
 10730 ;;		On entry : 0/0
 10731 ;;		On exit  : 0/0
 10732 ;;		Unchanged: 0/0
 10733 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 10734 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10735 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10736 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10737 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10738 ;;Total ram usage:        0 bytes
 10739 ;; Hardware stack levels used: 1
 10740 ;; This function calls:
 10741 ;;		Nothing
 10742 ;; This function is called by:
 10743 ;;		_SYSTEM_Initialize
 10744 ;; This function uses a non-reentrant model
 10745 ;;
 10746                           
 10747                           
 10748                           ;psect for function _OSCILLATOR_Initialize
 10749  1518                     _OSCILLATOR_Initialize:
 10750  1518                     l3059:	
 10751                           ;incstack = 0
 10752                           ; Regs used in _OSCILLATOR_Initialize: [wreg+status,2]
 10753                           
 10754                           
 10755                           ;mcc_generated_files/mcc.c: 61:     OSCCON = 0x70;
 10756  1518  3070               	movlw	112
 10757  1519  0021               	movlb	1	; select bank1
 10758  151A  0099               	movwf	25	;volatile
 10759  151B                     l3061:
 10760                           
 10761                           ;mcc_generated_files/mcc.c: 63:     OSCTUNE = 0x00;
 10762  151B  0198               	clrf	24	;volatile
 10763  151C                     l3063:
 10764                           
 10765                           ;mcc_generated_files/mcc.c: 65:     BORCON = 0x00;
 10766  151C  0022               	movlb	2	; select bank2
 10767  151D  0196               	clrf	22	;volatile
 10768  151E                     l54:
 10769  151E  0008               	return
 10770  151F                     __end_of_OSCILLATOR_Initialize:
 10771  007E                     btemp	set	126	;btemp
 10772  007E                     wtemp0	set	126
 10773                           
 10774                           	psect	config
 10775                           
 10776                           ;Config register CONFIG1 @ 0x8007
 10777                           ;	Oscillator Selection
 10778                           ;	FOSC = INTOSC, INTOSC oscillator: I/O function on CLKIN pin
 10779                           ;	Watchdog Timer Enable
 10780                           ;	WDTE = OFF, WDT disabled
 10781                           ;	Power-up Timer Enable
 10782                           ;	PWRTE = OFF, PWRT disabled
 10783                           ;	MCLR Pin Function Select
 10784                           ;	MCLRE = ON, MCLR/VPP pin function is MCLR
 10785                           ;	Flash Program Memory Code Protection
 10786                           ;	CP = OFF, Program memory code protection is disabled
 10787                           ;	Data Memory Code Protection
 10788                           ;	CPD = OFF, Data memory code protection is disabled
 10789                           ;	Brown-out Reset Enable
 10790                           ;	BOREN = ON, Brown-out Reset enabled
 10791                           ;	Clock Out Enable
 10792                           ;	CLKOUTEN = OFF, CLKOUT function is disabled. I/O or oscillator function on the CLKOUT 
      +                          pin
 10793                           ;	Internal/External Switchover
 10794                           ;	IESO = ON, Internal/External Switchover mode is enabled
 10795                           ;	Fail-Safe Clock Monitor Enable
 10796                           ;	FCMEN = ON, Fail-Safe Clock Monitor is enabled
 10797  8007                     	org	32775
 10798  8007  3FE4               	dw	16356
 10799                           
 10800                           ;Config register CONFIG2 @ 0x8008
 10801                           ;	Flash Memory Self-Write Protection
 10802                           ;	WRT = OFF, Write protection off
 10803                           ;	Voltage Regulator Capacitor Enable
 10804                           ;	VCAPEN = OFF, All VCAP pin functionality is disabled
 10805                           ;	PLL Enable
 10806                           ;	PLLEN = OFF, 4x PLL disabled
 10807                           ;	Stack Overflow/Underflow Reset Enable
 10808                           ;	STVREN = ON, Stack Overflow or Underflow will cause a Reset
 10809                           ;	Brown-out Reset Voltage Selection
 10810                           ;	BORV = LO, Brown-out Reset Voltage (Vbor), low trip point selected.
 10811                           ;	Low-Voltage Programming Enable
 10812                           ;	LVP = OFF, High-voltage on MCLR/VPP must be used for programming
 10813  8008                     	org	32776
 10814  8008  1EFF               	dw	7935

Data Sizes:
    Strings     60
    Constant    0
    Data        30
    BSS         50
    Persistent  32
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14     14      14
    BANK0            80     80      80
    BANK1            80     77      80
    BANK2            80      0      77
    BANK3            80      0       0
    BANK4            80      0       0
    BANK5            80      0       0
    BANK6            80      0       0
    BANK7            80      0       0
    BANK8            80      0       0
    BANK9            80      0       0
    BANK10           80      0       0
    BANK11           80      0       0
    BANK12           48      0       0

Pointer List with Targets:

    strncmp@_r	PTR const unsigned char  size(2) Largest target is 3
		 -> STR_18(CODE[3]), STR_13(CODE[3]), STR_9(CODE[3]), 

    strncmp@r	PTR const unsigned char  size(2) Largest target is 3
		 -> STR_18(CODE[3]), STR_13(CODE[3]), STR_9(CODE[3]), 

    strncmp@_l	PTR const unsigned char  size(2) Largest target is 10
		 -> STR_6(CODE[5]), STR_5(CODE[10]), STR_4(CODE[8]), 

    strncmp@l	PTR const unsigned char  size(2) Largest target is 10
		 -> STR_6(CODE[5]), STR_5(CODE[10]), STR_4(CODE[8]), 

    strlen@s	PTR const unsigned char  size(1) Largest target is 32
		 -> dbuf(BANK2[32]), 

    strlen@a	PTR const unsigned char  size(1) Largest target is 32
		 -> dbuf(BANK2[32]), 

    fputs@s	PTR const unsigned char  size(1) Largest target is 32
		 -> dbuf(BANK2[32]), 

    fputs@fp	PTR struct _IO_FILE size(1) Largest target is 6
		 -> sprintf@f(BANK1[5]), 

    fputc@fp.buffer	PTR unsigned char  size(1) Largest target is 16
		 -> print_gram@row2(BANK1[16]), print_gram@row1(BANK1[16]), initialize@valstr(BANK1[16]), 

    fputc@fp	PTR struct _IO_FILE size(1) Largest target is 6
		 -> sprintf@f(BANK1[5]), 

    vfprintf@ap	PTR PTR void  size(1) Largest target is 1
		 -> sprintf@ap(BANK1[1]), 

    vfprintf@fp	PTR struct _IO_FILE size(1) Largest target is 6
		 -> sprintf@f(BANK1[5]), 

    vfprintf@fmt	PTR const unsigned char  size(2) Largest target is 10
		 -> STR_6(CODE[5]), STR_5(CODE[10]), STR_4(CODE[8]), 

    vfprintf@cfmt	PTR unsigned char  size(2) Largest target is 10
		 -> STR_6(CODE[5]), STR_5(CODE[10]), STR_4(CODE[8]), 

    vfpfcnvrt@fp	PTR struct _IO_FILE size(1) Largest target is 6
		 -> sprintf@f(BANK1[5]), 

    vfpfcnvrt@ap	PTR PTR void  size(1) Largest target is 1
		 -> sprintf@ap(BANK1[1]), 

    vfpfcnvrt@fmt	PTR PTR unsigned char  size(1) Largest target is 2
		 -> vfprintf@cfmt(BANK1[2]), 

    utoa@fp	PTR struct _IO_FILE size(1) Largest target is 6
		 -> sprintf@f(BANK1[5]), 

    dtoa@fp	PTR struct _IO_FILE size(1) Largest target is 6
		 -> sprintf@f(BANK1[5]), 

    pad@fp	PTR struct _IO_FILE size(1) Largest target is 6
		 -> sprintf@f(BANK1[5]), 

    pad@buf	PTR unsigned char  size(1) Largest target is 32
		 -> dbuf(BANK2[32]), 

    sprintf@fmt	PTR const unsigned char  size(2) Largest target is 10
		 -> STR_6(CODE[5]), STR_5(CODE[10]), STR_4(CODE[8]), 

    sprintf@s	PTR unsigned char  size(1) Largest target is 16
		 -> print_gram@row2(BANK1[16]), print_gram@row1(BANK1[16]), initialize@valstr(BANK1[16]), 

    sprintf@ap	PTR void [1] size(1) Largest target is 2
		 -> ?_sprintf(BANK1[2]), 

    S1099_IO_FILE$buffer	PTR unsigned char  size(1) Largest target is 16
		 -> print_gram@row2(BANK1[16]), print_gram@row1(BANK1[16]), initialize@valstr(BANK1[16]), 

    f.buffer	PTR unsigned char  size(1) Largest target is 16
		 -> print_gram@row2(BANK1[16]), print_gram@row1(BANK1[16]), initialize@valstr(BANK1[16]), 

    set_max_gram@p.lcd	PTR struct . size(1) Largest target is 4
		 -> NULL(NULL[0]), main@lcd(BANK1[4]), 

    set_max_gram@p.loadcell	PTR struct . size(1) Largest target is 12
		 -> NULL(NULL[0]), main@loadcell(BANK1[12]), 

    print_gram@p.lcd	PTR struct . size(1) Largest target is 4
		 -> NULL(NULL[0]), main@lcd(BANK1[4]), 

    print_gram@p.loadcell	PTR struct . size(1) Largest target is 12
		 -> NULL(NULL[0]), main@loadcell(BANK1[12]), 

    print_gram@p	PTR struct . size(1) Largest target is 7
		 -> main@drink(BANK1[5]), 

    calc_percentage@p.lcd	PTR struct . size(1) Largest target is 4
		 -> NULL(NULL[0]), main@lcd(BANK1[4]), 

    calc_percentage@p.loadcell	PTR struct . size(1) Largest target is 12
		 -> NULL(NULL[0]), main@loadcell(BANK1[12]), 

    calc_percentage@p	PTR struct . size(1) Largest target is 7
		 -> main@drink(BANK1[5]), 

    initialize@p.lcd	PTR struct . size(1) Largest target is 4
		 -> NULL(NULL[0]), main@lcd(BANK1[4]), 

    initialize@p.loadcell	PTR struct . size(1) Largest target is 12
		 -> NULL(NULL[0]), main@loadcell(BANK1[12]), 

    initialize@p	PTR struct . size(1) Largest target is 7
		 -> main@drink(BANK1[5]), 

    write4bits@p	PTR struct . size(1) Largest target is 4
		 -> NULL(NULL[0]), main@lcd(BANK1[4]), 

    command@p	PTR struct . size(1) Largest target is 4
		 -> NULL(NULL[0]), main@lcd(BANK1[4]), 

    lcd_print_with@str	PTR unsigned char  size(2) Largest target is 16
		 -> print_gram@row2(BANK1[16]), print_gram@row1(BANK1[16]), STR_3(CODE[15]), STR_2(CODE[11]), 

    lcd_print_with@p	PTR struct . size(1) Largest target is 4
		 -> NULL(NULL[0]), main@lcd(BANK1[4]), 

    lcd_print@p	PTR struct . size(1) Largest target is 4
		 -> NULL(NULL[0]), main@lcd(BANK1[4]), 

    lcd_print@str	PTR unsigned char  size(2) Largest target is 16
		 -> print_gram@row2(BANK1[16]), print_gram@row1(BANK1[16]), initialize@valstr(BANK1[16]), STR_3(CODE[15]), 
		 -> STR_2(CODE[11]), STR_1(CODE[2]), 

    lcd_set_cursor@p	PTR struct . size(1) Largest target is 4
		 -> NULL(NULL[0]), main@lcd(BANK1[4]), 

    lcd_clear@p	PTR struct . size(1) Largest target is 4
		 -> NULL(NULL[0]), main@lcd(BANK1[4]), 

    lcd_backlight@p	PTR struct . size(1) Largest target is 4
		 -> NULL(NULL[0]), main@lcd(BANK1[4]), 

    lcd_init@p	PTR struct . size(1) Largest target is 4
		 -> NULL(NULL[0]), main@lcd(BANK1[4]), 

    lcd_cmd@p	PTR struct . size(1) Largest target is 4
		 -> NULL(NULL[0]), main@lcd(BANK1[4]), 

    scale_convert_gram@p	PTR struct . size(1) Largest target is 12
		 -> NULL(NULL[0]), main@loadcell(BANK1[12]), 

    get_scale_val@p	PTR struct . size(1) Largest target is 12
		 -> NULL(NULL[0]), main@loadcell(BANK1[12]), 

    get_CELL_DAT_VAL@p	PTR struct . size(1) Largest target is 12
		 -> NULL(NULL[0]), main@loadcell(BANK1[12]), 

    set_CELL_CLK_HIGH@p	PTR struct . size(1) Largest target is 12
		 -> NULL(NULL[0]), main@loadcell(BANK1[12]), 

    set_CELL_CLK_LOW@p	PTR struct . size(1) Largest target is 12
		 -> NULL(NULL[0]), main@loadcell(BANK1[12]), 

    drink.lcd	PTR struct . size(1) Largest target is 4
		 -> NULL(NULL[0]), main@lcd(BANK1[4]), 

    drink.loadcell	PTR struct . size(1) Largest target is 12
		 -> NULL(NULL[0]), main@loadcell(BANK1[12]), 

    S220$lcd	PTR struct . size(1) Largest target is 4
		 -> NULL(NULL[0]), main@lcd(BANK1[4]), 

    F2804.lcd	PTR struct . size(1) Largest target is 4
		 -> NULL(NULL[0]), main@lcd(BANK1[4]), 

    S220$loadcell	PTR struct . size(1) Largest target is 12
		 -> NULL(NULL[0]), main@loadcell(BANK1[12]), 

    F2804.loadcell	PTR struct . size(1) Largest target is 12
		 -> NULL(NULL[0]), main@loadcell(BANK1[12]), 


Critical Paths under _main in COMMON

    _print_gram->_lcd_print_with
    _initialize->_lcd_print_with
    _vfpfcnvrt->_utoa
    _utoa->_pad
    _dtoa->_pad
    _pad->_fputs
    _fputs->_fputc
    _abs->___aomod
    _lcd_print_with->_lcd_print
    _lcd_print_with->_lcd_set_cursor
    _lcd_init->_write4bits
    _write4bits->_lcd_cmd
    _lcd_clear->_lcd_print
    _lcd_clear->_lcd_set_cursor
    _lcd_set_cursor->_command
    _lcd_print->_command
    _command->_lcd_cmd
    _lcd_backlight->_lcd_cmd
    _lcd_cmd->_i2c_write
    _scale_convert_gram->___xxtofl
    _get_scale_val->___lldiv
    ___bmul->___lwdiv

Critical Paths under _main in BANK0

    _sprintf->_vfprintf
    _vfprintf->_vfpfcnvrt
    _vfpfcnvrt->_dtoa
    _utoa->___lodiv
    _utoa->___lomod
    _dtoa->___aodiv
    _dtoa->___aomod
    _pad->_fputs
    _abs->___aomod
    _lcd_print_with->_lcd_set_cursor
    _lcd_clear->_lcd_set_cursor
    _calc_percentage->_scale_convert_gram
    _scale_convert_gram->___fldiv

Critical Paths under _main in BANK1

    _main->_print_gram
    _print_gram->_sprintf
    _initialize->_sprintf
    _sprintf->_vfprintf

Critical Paths under _main in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _main in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                23    23      0   59656
                                             54 BANK1     23    23      0
                  _SYSTEM_Initialize
                    _calc_percentage
                         _initialize
                         _print_gram
 ---------------------------------------------------------------------------------
 (1) _print_gram                                          35    35      0   23429
                                             19 BANK1     35    35      0
                          _lcd_clear
                     _lcd_print_with
                            _sprintf
 ---------------------------------------------------------------------------------
 (1) _initialize                                          18    18      0   31622
                                             19 BANK1     18    18      0
                      _get_scale_val
                      _lcd_backlight
                          _lcd_clear
                           _lcd_init
                          _lcd_print
                     _lcd_print_with
                            _sprintf
 ---------------------------------------------------------------------------------
 (2) _sprintf                                             16    10      6   11742
                                              5 BANK1     14     8      6
                           _vfprintf
 ---------------------------------------------------------------------------------
 (3) _vfprintf                                             8     5      3   11210
                                             77 BANK0      3     0      3
                                              0 BANK1      5     5      0
                          _vfpfcnvrt
 ---------------------------------------------------------------------------------
 (4) _vfpfcnvrt                                           47    45      2   10889
                                             46 BANK0     31    29      2
                               _dtoa
                              _fputc
                            _strncmp
                               _utoa
 ---------------------------------------------------------------------------------
 (5) _utoa                                                24    16      8    3838
                                             13 COMMON     1     1      0
                                             16 BANK0     23    15      8
                            ___lodiv
                            ___lomod
                                _pad
 ---------------------------------------------------------------------------------
 (6) ___lomod                                             18     2     16     311
                                              0 COMMON     2     2      0
                                              0 BANK0     16     0     16
 ---------------------------------------------------------------------------------
 (6) ___lodiv                                             26    10     16     314
                                              0 COMMON    10    10      0
                                              0 BANK0     16     0     16
 ---------------------------------------------------------------------------------
 (5) _strncmp                                             11     5      6     909
                                              0 COMMON    11     5      6
 ---------------------------------------------------------------------------------
 (5) _dtoa                                                30    22      8    4437
                                             16 BANK0     30    22      8
                            ___aodiv
                            ___aomod
                                _abs
                                _pad
 ---------------------------------------------------------------------------------
 (6) _pad                                                  9     6      3    2722
                                             12 COMMON     1     1      0
                                              4 BANK0      8     5      3
                              _fputc
                              _fputs
                             _strlen
 ---------------------------------------------------------------------------------
 (7) _strlen                                               5     3      2     123
                                              0 COMMON     5     3      2
 ---------------------------------------------------------------------------------
 (7) _fputs                                                8     7      1    1149
                                              8 COMMON     4     3      1
                                              0 BANK0      4     4      0
                              _fputc
 ---------------------------------------------------------------------------------
 (8) _fputc                                                8     5      3     834
                                              0 COMMON     8     5      3
                              _putch
 ---------------------------------------------------------------------------------
 (9) _putch                                                1     1      0       0
 ---------------------------------------------------------------------------------
 (6) _abs                                                  4     2      2     142
                                              3 COMMON     4     2      2
                            ___aomod (ARG)
 ---------------------------------------------------------------------------------
 (6) ___aomod                                             19     3     16     448
                                              0 COMMON     3     3      0
                                              0 BANK0     16     0     16
 ---------------------------------------------------------------------------------
 (6) ___aodiv                                             27    11     16     452
                                              0 COMMON    11    11      0
                                              0 BANK0     16     0     16
 ---------------------------------------------------------------------------------
 (2) _lcd_print_with                                       7     3      4    6154
                                             13 COMMON     1     1      0
                                              6 BANK0      6     2      4
                          _lcd_print
                     _lcd_set_cursor
 ---------------------------------------------------------------------------------
 (2) _lcd_init                                             3     3      0    3155
                                              6 COMMON     3     3      0
                         _write4bits
 ---------------------------------------------------------------------------------
 (3) _write4bits                                           3     2      1    2814
                                              3 COMMON     3     2      1
                            _lcd_cmd
 ---------------------------------------------------------------------------------
 (2) _lcd_clear                                            5     5      0    5268
                                              6 BANK0      5     5      0
                          _lcd_print
                     _lcd_set_cursor
 ---------------------------------------------------------------------------------
 (3) _lcd_set_cursor                                       9     7      2    2659
                                             10 COMMON     3     1      2
                                              0 BANK0      6     6      0
                            _command
 ---------------------------------------------------------------------------------
 (3) _lcd_print                                            5     3      2    2341
                                             10 COMMON     3     1      2
                                              0 BANK0      2     2      0
                            _command
 ---------------------------------------------------------------------------------
 (4) _command                                              7     5      2    1924
                                              3 COMMON     7     5      2
                            _lcd_cmd
 ---------------------------------------------------------------------------------
 (2) _lcd_backlight                                        2     2      0    1233
                                              3 COMMON     2     2      0
                            _lcd_cmd
 ---------------------------------------------------------------------------------
 (5) _lcd_cmd                                              2     1      1    1156
                                              1 COMMON     2     1      1
                          _i2c_start
                           _i2c_stop
                          _i2c_write
 ---------------------------------------------------------------------------------
 (6) _i2c_write                                            1     1      0      22
                                              0 COMMON     1     1      0
                           _i2c_wait
 ---------------------------------------------------------------------------------
 (6) _i2c_stop                                             0     0      0       0
 ---------------------------------------------------------------------------------
 (6) _i2c_start                                            0     0      0       0
                           _i2c_wait
 ---------------------------------------------------------------------------------
 (7) _i2c_wait                                             0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _calc_percentage                                      3     3      0    4359
                                             26 BANK0      3     3      0
                             ___bmul
                            ___lwdiv
                      _get_scale_val
                 _scale_convert_gram
 ---------------------------------------------------------------------------------
 (2) _scale_convert_gram                                  13    13      0    2187
                                             13 BANK0     13    13      0
                            ___fldiv
                            ___fltol
                           ___xxtofl
 ---------------------------------------------------------------------------------
 (3) ___xxtofl                                            14    10      4     398
                                              0 COMMON    14    10      4
 ---------------------------------------------------------------------------------
 (3) ___fltol                                             11     7      4     305
                                              0 COMMON    11     7      4
 ---------------------------------------------------------------------------------
 (3) ___fldiv                                             26    18      8    1273
                                              0 COMMON    13     5      8
                                              0 BANK0     13    13      0
 ---------------------------------------------------------------------------------
 (2) _get_scale_val                                       19    15      4    1448
                                              0 BANK0     19    15      4
                            ___lldiv
                   _get_CELL_DAT_VAL
                  _set_CELL_CLK_HIGH
                   _set_CELL_CLK_LOW
 ---------------------------------------------------------------------------------
 (3) _set_CELL_CLK_LOW                                     2     2      0     121
                                              0 COMMON     2     2      0
 ---------------------------------------------------------------------------------
 (3) _set_CELL_CLK_HIGH                                    2     2      0      88
                                              0 COMMON     2     2      0
 ---------------------------------------------------------------------------------
 (3) _get_CELL_DAT_VAL                                     6     4      2     275
                                              0 COMMON     6     4      2
 ---------------------------------------------------------------------------------
 (3) ___lldiv                                             14     6      8     314
                                              0 COMMON    14     6      8
 ---------------------------------------------------------------------------------
 (2) ___lwdiv                                              8     4      4     314
                                              0 COMMON     8     4      4
 ---------------------------------------------------------------------------------
 (2) ___bmul                                               4     3      1     168
                                              8 COMMON     4     3      1
                            ___lwdiv (ARG)
 ---------------------------------------------------------------------------------
 (1) _SYSTEM_Initialize                                    0     0      0       0
              _OSCILLATOR_Initialize
             _PIN_MANAGER_Initialize
                     _WDT_Initialize
 ---------------------------------------------------------------------------------
 (2) _WDT_Initialize                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _PIN_MANAGER_Initialize                               0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _OSCILLATOR_Initialize                                0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 9
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _SYSTEM_Initialize
     _OSCILLATOR_Initialize
     _PIN_MANAGER_Initialize
     _WDT_Initialize
   _calc_percentage
     ___bmul
       ___lwdiv (ARG)
     ___lwdiv
     _get_scale_val
       ___lldiv
       _get_CELL_DAT_VAL
       _set_CELL_CLK_HIGH
       _set_CELL_CLK_LOW
     _scale_convert_gram
       ___fldiv
       ___fltol
       ___xxtofl
   _initialize
     _get_scale_val
     _lcd_backlight
       _lcd_cmd
         _i2c_start
           _i2c_wait
         _i2c_stop
         _i2c_write
           _i2c_wait
     _lcd_clear
       _lcd_print
         _command
           _lcd_cmd
       _lcd_set_cursor
         _command
     _lcd_init
       _write4bits
         _lcd_cmd
     _lcd_print
     _lcd_print_with
       _lcd_print
       _lcd_set_cursor
     _sprintf
       _vfprintf
         _vfpfcnvrt
           _dtoa
             ___aodiv
             ___aomod
             _abs
               ___aomod (ARG)
             _pad
               _fputc
                 _putch
               _fputs
                 _fputc
               _strlen
           _fputc
           _strncmp
           _utoa
             ___lodiv
             ___lomod
             _pad
   _print_gram
     _lcd_clear
     _lcd_print_with
     _sprintf

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             3F0      0       0       0        0.0%
EEDATA             100      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
BITCOMMON            E      0       0       1        0.0%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
COMMON               E      E       E       2      100.0%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
BITSFR2              0      0       0       3        0.0%
SFR2                 0      0       0       3        0.0%
STACK                0      0       0       3        0.0%
BITBANK0            50      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
BANK0               50     50      50       5      100.0%
BITSFR4              0      0       0       5        0.0%
SFR4                 0      0       0       5        0.0%
BITBANK1            50      0       0       6        0.0%
BITSFR5              0      0       0       6        0.0%
SFR5                 0      0       0       6        0.0%
BANK1               50     4D      50       7      100.0%
BITSFR6              0      0       0       7        0.0%
SFR6                 0      0       0       7        0.0%
BITBANK2            50      0       0       8        0.0%
BITSFR7              0      0       0       8        0.0%
SFR7                 0      0       0       8        0.0%
BANK2               50      0      4D       9       96.2%
BITSFR8              0      0       0       9        0.0%
SFR8                 0      0       0       9        0.0%
BITBANK3            50      0       0      10        0.0%
BITSFR9              0      0       0      10        0.0%
SFR9                 0      0       0      10        0.0%
BANK3               50      0       0      11        0.0%
BITSFR10             0      0       0      11        0.0%
SFR10                0      0       0      11        0.0%
BITBANK4            50      0       0      12        0.0%
BITSFR11             0      0       0      12        0.0%
SFR11                0      0       0      12        0.0%
BANK4               50      0       0      13        0.0%
BITSFR12             0      0       0      13        0.0%
SFR12                0      0       0      13        0.0%
BITBANK5            50      0       0      14        0.0%
BITSFR13             0      0       0      14        0.0%
SFR13                0      0       0      14        0.0%
BANK5               50      0       0      15        0.0%
BITSFR14             0      0       0      15        0.0%
SFR14                0      0       0      15        0.0%
BITBANK6            50      0       0      16        0.0%
BITSFR15             0      0       0      16        0.0%
SFR15                0      0       0      16        0.0%
BANK6               50      0       0      17        0.0%
BITSFR16             0      0       0      17        0.0%
SFR16                0      0       0      17        0.0%
BITBANK7            50      0       0      18        0.0%
BITSFR17             0      0       0      18        0.0%
SFR17                0      0       0      18        0.0%
BANK7               50      0       0      19        0.0%
BITSFR18             0      0       0      19        0.0%
SFR18                0      0       0      19        0.0%
BITSFR19             0      0       0      20        0.0%
SFR19                0      0       0      20        0.0%
ABS                  0      0      FB      20        0.0%
BITBANK8            50      0       0      21        0.0%
BITSFR20             0      0       0      21        0.0%
SFR20                0      0       0      21        0.0%
BANK8               50      0       0      22        0.0%
BITSFR21             0      0       0      22        0.0%
SFR21                0      0       0      22        0.0%
BITBANK9            50      0       0      23        0.0%
BITSFR22             0      0       0      23        0.0%
SFR22                0      0       0      23        0.0%
BANK9               50      0       0      24        0.0%
BITSFR23             0      0       0      24        0.0%
SFR23                0      0       0      24        0.0%
BITBANK10           50      0       0      25        0.0%
BITSFR24             0      0       0      25        0.0%
SFR24                0      0       0      25        0.0%
BANK10              50      0       0      26        0.0%
BITSFR25             0      0       0      26        0.0%
SFR25                0      0       0      26        0.0%
BITBANK11           50      0       0      27        0.0%
BITSFR26             0      0       0      27        0.0%
SFR26                0      0       0      27        0.0%
BANK11              50      0       0      28        0.0%
BITSFR27             0      0       0      28        0.0%
SFR27                0      0       0      28        0.0%
BITBANK12           30      0       0      29        0.0%
BITSFR28             0      0       0      29        0.0%
SFR28                0      0       0      29        0.0%
BANK12              30      0       0      30        0.0%
BITSFR29             0      0       0      30        0.0%
SFR29                0      0       0      30        0.0%
BITSFR30             0      0       0      31        0.0%
SFR30                0      0       0      31        0.0%
DATA                 0      0      FB      31        0.0%
BITSFR31             0      0       0      32        0.0%
SFR31                0      0       0      32        0.0%


Microchip Technology PIC Macro Assembler V2.32 build 20210201212658 
Symbol Table                                                                                   Sun Dec 12 21:45:22 2021

                   ___fldiv@aexp 002C                     ___fldiv@bexp 002B                     ___fldiv@sign 0024  
                 ___bmul@product 007A                      _SSPSTATbits 0214                               l31 1606  
                             l51 152F                               l54 151E                               l57 150B  
                             l81 154D                               l75 080E                               l84 1521  
                             l78 1549                               l87 1525                               l96 1552  
                             l99 1556                     lcd_clear@col 0029                     lcd_clear@row 0028  
                            l102 155D                              l302 1759                              l320 17FF  
                            l241 0D89                              l234 1543                              l314 1645  
                            l307 1693                              l323 1621                              l308 16A6  
                            l237 1539                              l317 15B7                              l342 0BC8  
                            l350 08E9                              l264 0F15                              l290 0E32  
                            l347 09FE                              l603 02AF                              l268 0CE6  
                            l604 02C0                              l293 1588                              l287 159F  
                            l704 0B37                              l616 0FEE                              l529 1572  
                            l617 0FFF                              l539 0943                              l707 0B4C  
                            l743 0C4C                              l736 0C3C                              l753 0AD8  
                            l746 0AC8                              l860 048A                              l862 05E6  
                            l950 0082                              l783 171B                              l944 0047  
                            l881 05B4                              l697 0B4C                              l882 05CE  
                            l946 00D0                              l884 05DD                              l876 0568  
                            l957 009C                              l958 00A8                              l966 166D  
                            l995 0854                              l998 0876                              _abs 15B8  
                            _pad 0838                              wreg 0009                      command@mode 0074  
      get_scale_val@weight_count 002D                  ?_lcd_set_cursor 007A                     ___fltol@exp1 007A  
                           l1000 0890                             l1003 030A                             l1012 03BB  
                           l1004 0314                             l1100 099F                             l1008 0332  
                           l1009 034A                             l1041 01BF                             l1033 00F9  
                           l1026 0432                             ?_abs 0073                             l1060 16DF  
                           l1029 00DD                             l1064 15D1                             l1048 07E4  
                           l3001 005D                             l1090 0006                             l3011 0089  
                           l3003 0068                             l1067 15D1                             l3021 00BE  
                           l3013 0092                             l3005 006F                             l3023 00C3  
                           l3015 0096                             l3007 0073                             l2303 1544  
                           l2311 155A                             l1079 17A8                             l1087 0837  
                           l3031 16A9                             l1096 15EB                             l3121 0E39  
                           l3025 00C7                             l3017 00A0                             l3009 007B  
                           l2305 1547                             l3201 0D9F                             l2321 01F6  
                           l2313 01C0                             l2401 0C2E                             l3033 16B1  
                           l3051 15F8                             l3043 15EC                             l3131 0E62  
                           l3123 0E42                             l3027 00C8                             l3019 00AA  
                           l2307 151F                             l3211 0DD4                             l3203 0DAE  
                           l2331 0233                             l2323 0215                             l2315 01C1  
                           l2411 0A84                             l2403 0A68                             l3035 16B5  
                           l3061 151B                             l3053 15FA                             l3045 15F1  
                           l3301 170B                             l3141 0E6F                             l3133 0E66  
                           l3125 0E4A                             l2309 154F                             l3221 0DFA  
                           l3213 0DD8                             l3205 0DB5                             l2341 026D  
                           l2333 023B                             l2325 0219                             l2317 01CB  
                           l2421 083F                             l2501 0407                             l2413 0A88  
                           l2405 0A75                             l3037 16CD                             l3063 151C  
                           l3055 15FD                             l3047 15F4                             l3311 1526  
                           l3303 170C                             l3151 0E97                             l3143 0E73  
                           l3127 0E4C                             l3119 0E35                             l3231 1574  
                           l3223 0E09                             l3215 0DE0                             l3207 0DC0  
                           l2343 027D                             l2335 023F                             l2327 0223  
                           l2319 01EC                             l2351 0F16                             l2271 1773  
                           l2263 175A                             l2431 0863                             l2423 0848  
                           l2503 040D                             l2415 0AAA                             l2407 0A78  
                           l3039 16D7                             l3057 1602                             l3049 15F6  
                           l3065 1508                             l3305 1711                             l3161 0EA3  
                           l3153 0E9C                             l3145 0E77                             l3129 0E57  
                           l2281 0803                             l3233 157C                             l3241 1722  
                           l3225 0E0E                             l3217 0DE5                             l3209 0DC8  
                           l2345 027E                             l2337 0243                             l2329 0230  
                           l2361 0F6B                             l2353 0F17                             l2441 15B8  
                           l2273 1790                             l2265 175F                             l2433 0868  
                           l2425 084D                             l2505 0412                             l2417 0ABA  
                           l2409 0A80                             l2521 0101                             l2513 00D3  
                           l2601 0638                             l3321 0BB4                             l3313 0B4F  
                           l3401 0A54                             l3059 1518                             l3307 1717  
                           l3171 0EBE                             l3163 0EA7                             l3155 0EA2  
                           l3147 0E7C                             l3139 0E68                             l3331 09D8  
                           l2283 080A                             l2451 1598                             l3235 1584  
                           l3243 172E                             l3251 1749                             l3227 0E1F  
                           l3219 0DF6                             l2339 024B                             l2347 028C  
                           l2371 0F8B                             l2363 0F78                             l2355 0F21  
                           l2443 15C5                             l2275 17A0                             l2267 1764  
                           l2291 0827                             l2435 087B                             l2427 0852  
                           l2419 083A                             l2507 0416                             l2531 0148  
                           l2523 0115                             l2515 00D8                             l2611 069C  
                           l2603 0651                             l3323 0BBC                             l3315 0B5E  
                           l3403 0A58                             l3181 0F0D                             l3173 0ECE  
                           l3165 0EAB                             l3149 0E93                             l3325 09A2  
                           l2453 159B                             l2445 158A                             l3253 1753  
                           l3245 1737                             l3237 171E                             l3229 0E23  
                           l2349 0291                             l2373 0FAD                             l2365 0F7B  
                           l2357 0F42                             l2269 1769                             l2285 0811  
                           l2293 15D3                             l2437 0884                             l2429 0857  
                           l2509 041F                             l2461 02EC                             l2381 0BC9  
                           l2541 0199                             l2533 014C                             l2525 0118  
                           l2517 00EB                             l2621 06F0                             l2613 06A5  
                           l3261 1650                             l3317 0B6D                             l3333 0893  
                           l3271 155F                             l2711 153B                             l3167 0EB4  
                           l3175 0ED2                             l3191 0C81                             l3327 09C4  
                           l2279 0803                             l2447 158D                             l3247 173C  
                           l3239 1720                             l3255 15A1                             l2375 0FBD  
                           l2367 0F83                             l2359 0F4C                             l2287 0814  
                           l2295 15D8                             l2471 0340                             l2463 030F  
                           l2455 02C3                             l2551 094C                             l2391 0BEF  
                           l2383 0BD3                             l2543 01A7                             l2527 011D  
                           l2535 0179                             l2519 00F1                             l2631 073C  
                           l2623 06F8                             l2615 06C4                             l2607 066B  
                           l3263 1652                             l3319 0B9C                             l3281 1571  
                           l3273 1560                             l2801 092D                             l2721 0CFA  
                           l2713 1531                             l3177 0ED8                             l3169 0EB9  
                           l3193 0CB6                             l3185 0C4F                             l3329 09D2  
                           l2449 1594                             l3249 1745                             l3257 15AE  
                           l2369 0F87                             l2377 0FCB                             l2289 0822  
                           l2297 15DC                             l2481 0386                             l2473 0345  
                           l2465 0324                             l2457 02D3                             l2561 0970  
                           l2553 0958                             l2393 0BF3                             l2385 0BE0  
                           l2537 0180                             l2545 01AC                             l2529 0144  
                           l2641 079D                             l2633 0745                             l2625 070A  
                           l2609 0683                             l3265 1654                             l3275 1564  
                           l3291 16EB                             l2803 092E                             l2723 0D03  
                           l2715 0CE8                             l3179 0EF9                             l2811 0AD9  
                           l3195 0CD2                             l3187 0C79                             l2571 17AA  
                           l2379 0FD0                             l2299 15E5                             l2491 03E3  
                           l2483 038A                             l2475 034F                             l2467 032A  
                           l2459 02E6                             l2563 0979                             l2395 0BFB  
                           l2387 0BE3                             l2539 018C                             l2651 07BE  
                           l2643 07A5                             l2635 0771                             l2619 06DE  
                           l3267 1665                             l3259 1648                             l3371 0A08  
                           l3363 09FF                             l3277 1568                             l3293 16F0  
                           l3285 16E0                             l2805 0935                             l2741 0D40  
                           l2733 0D21                             l2717 0CF0                             l2901 04B9  
                           l2821 0B01                             l2813 0AE4                             l2581 17E5  
                           l2573 17C7                             l3197 0D8B                             l2493 03F1  
                           l2485 038E                             l2477 0352                             l2469 033A  
                           l2565 097F                             l2557 095B                             l2549 0944  
                           l2397 0C1D                             l2389 0BEB                             l2645 07B0  
                           l2629 0724                             l3381 0A11                             l3373 0A0A  
                           l3365 0A02                             l3279 156A                             l3295 16F4  
                           l3287 16E2                             l2807 093B                             l2751 0D5E  
                           l2735 0D2A                             l2727 0D0D                             l2911 04E3  
                           l2903 04C9                             l2823 0B09                             l2583 17ED  
                           l2575 17CF                             l3199 0D97                             l2487 03C9  
                           l2495 03F6                             l2479 0357                             l2567 098F  
                           l2559 0967                             l2399 0C2D                             l2639 078B  
                           l2591 0602                             l2655 07C1                             l3391 0A43  
                           l3383 0A12                             l3375 0A0B                             l3367 0A04  
                           l3297 16F8                             l3289 16E8                             l2753 0D67  
                           l2745 0D4A                             l2729 0D16                             l2913 04E8  
                           l2921 0502                             l2905 04D1                             l2841 0B2E  
                           l2833 0B17                             l2825 0B0B                             l2817 0AED  
                           l2585 17F6                             l2577 17D8                             l2497 03FD  
                           l2489 03D6                             l2657 07DA                             l2649 07B6  
                           l2593 0608                             l3393 0A47                             l3385 0A21  
                           l3377 0A0E                             l3369 0A05                             l3299 1707  
                           l2763 0D87                             l2747 0D53                             l2739 0D37  
                           l2931 0527                             l2923 0514                             l2915 04F6  
                           l2907 04D9                             l2851 043D                             l2843 0B3C  
                           l2827 0B0F                             l2835 0B27                             l2819 0B00  
                           l2579 17E1                             l2771 1680                             l2499 0402  
                           l2595 060D                             l2587 05E9                             l3395 0A4B  
                           l3387 0A31                             l3379 0A10                             l2757 0D73  
                           l2941 053D                             l2933 052F                             l2925 0515  
                           l2917 04FA                             l2909 04E1                             l2861 0454  
                           l2853 0441                             l2845 0B41                             l2781 162E  
                           l2773 168A                             l2597 061F                             l2589 05FA  
                           l3397 0A4C                             l3389 0A3F                             ?_pad 0024  
                           l2791 08FD                             l2759 0D7C                             l2951 0551  
                           l2943 0544                             l2935 0531                             l2927 051D  
                           l2919 04FB                             l2871 0468                             l2863 0455  
                           l2855 0442                             l2847 0433                             l2783 1632  
                           l2775 169D                             l2767 1608                             l2599 0630  
                           l3399 0A50                             l2793 0908                             l2961 057A  
                           l2953 0565                             l2937 0538                             l2945 0548  
                           l2929 0521                             l2881 047F                             l2873 046C  
                           l2857 0447                             l2865 0457                             l2849 0439  
                           l2785 163C                             l2777 1624                             l2769 1670  
                           l2795 090C                             l2787 08EA                             l2971 05C2  
                           l2963 057E                             l2947 054C                             l2939 053C  
                           l2891 04A2                             l2883 0480                             l2875 046D  
                           l2867 045F                             l2859 044C                             l2779 1625  
                           l2797 0913                             l2789 08FA                             l2981 05D9  
                           l2973 05C5                             l2965 0596                             l2957 056D  
                           l2949 054D                             l2877 0472                             l2885 0482  
                           l2869 0464                             l2799 0925                             l2975 05CD  
                           l2959 0572                             l2967 059A                             l2887 0492  
                           l2895 04AB                             l2879 0477                             l2991 002F  
                           l2977 05D3                             l2969 05A7                             l2897 04B0  
                           l2889 049E                             l2993 003F                             l2979 05D7  
                           l2995 004F                             l2987 0026                             l2989 002B  
                           l2999 0058                             STR_1 183A                             STR_2 180F  
                           STR_3 1800                             STR_4 1824                             STR_5 181A  
                           STR_6 182C                             STR_7 1831                             STR_9 1831  
                           u2000 0220                             u2010 0230                             u2011 022F  
                           u2020 0243                             u2021 0242                             u2030 026D  
                           u2110 0F78                             u2031 026C                             u2111 0F77  
                           u3000 0477                             u2040 028C                             u2120 0F8B  
                           u2200 0C1D                             u3001 0476                             u2041 028B  
                           u2121 0F8A                             u2201 0C1C                             u3010 0492  
                           u2050 0291                             u2130 0FAD                             u2210 0C3C  
                           u3011 0491                             u2051 0290                             u2035 0269  
                           u2131 0FAC                             u2211 0C3B                             u3100 052F  
                           u3020 04B0                             u2140 0FCB                             u2300 15C5  
                           u2220 0A75                             u3101 052E                             u3021 04AF  
                           u2141 0FCA                             u2301 15C4                             u2205 0C19  
                           u2221 0A74                             _LATA 010C                             u3030 04E8  
                           u2150 0FD0                             u2070 0F21                             u2310 02DE  
                           u2230 0A88                             _LATB 010D                             u3031 04E7  
                           u2151 0FCF                             u2135 0FA9                             u2071 0F20  
                           u2311 02DC                             u2231 0A87                             _LATC 010E  
                           u3200 058C                             u3120 053C                             u2400 03D6  
                           u2320 02DF                             u2240 0AAA                             u3121 053B  
                           u2305 15C1                             u2401 03D5                             u2241 0AA9  
                           _LATE 0110                             u3210 05A7                             u2090 0F4C  
                           u2410 03E3                             u2330 02EC                             u2170 0BD0  
                           u2250 0AC8                             u3211 05A6                             u3115 0532  
                           u2091 0F4B                             u2411 03E2                             u2331 02EB  
                           u2251 0AC7                             u3220 05C2                             u3140 054C  
                           u3060 04FA                             u3300 0088                             u2260 083F  
                           u2420 03F1                             u2180 0BE0                             u2500 018C  
                           u3221 05C1                             u3205 0588                             u3141 054B  
                           u3061 04F9                             u3045 04E9                             u3301 0087  
                           u2261 083E                             u2421 03F0                             u2181 0BDF  
                           u2245 0AA6                             u2501 018B                             u3230 05D7  
                           u3150 0551                             u2270 084D                             u2430 03F6  
                           u2350 030F                             u2190 0BF3                             u2510 0199  
                           u3231 05D6                             u3215 05A3                             u3151 0550  
                           u3135 053E                             u3055 04F0                             u2271 084C  
                           u2431 03F5                             u2415 03DF                             u2351 030E  
                           u2191 0BF2                             u2511 0198                             u3160 0565  
                           u3080 0514                             u3320 0096                             u3240 002B  
                           u2280 0876                             u2440 03FD                             u2360 0324  
                           u2520 01A7                             u2600 05FA                             u3225 05BE  
                           u3161 0564                             u3081 0513                             u3321 0095  
                           u3241 002A                             u2281 0875                             u2441 03FC  
                           u2425 03ED                             u2361 0323                             u2521 01A6  
                           u2601 05F9                             u3170 056C                             u3090 0527  
                           u3330 009C                             u3250 002F                             u2290 087B  
                           u2450 0402                             u2370 0340                             u2530 01AC  
                           u2610 061F                             u3171 056B                             u3091 0526  
                           u3075 04FC                             u3331 009B                             u3315 008C  
                           u3251 002E                             u2291 087A                             u2451 0401  
                           u2371 033F                             u2531 01AB                             u2515 0195  
                           u2611 061E                             u2700 0D16                             u3420 0E57  
                           u3180 0572                             u3340 00A0                             u3260 004F  
                           u3500 1753                             u1900 0837                             u2460 040D  
                           u2380 0345                             u2540 0958                             u2620 0630  
                           u2701 0D15                             u3421 0E56                             u3181 0571  
                           u3085 0510                             u3341 009F                             u3261 004E  
                           u3501 1752                             u1901 0836                             u2285 0872  
                           u2461 040C                             u2381 0344                             u2365 0320  
                           u2541 0957                             u2525 01A3                             u2621 062F  
                           u3510 1564                             u2710 0D2A                             u3430 0E62  
                           u3190 057E                             u3350 00B4                             u1910 15E5  
                           u2390 03C9                             u2550 0970                             u2470 00D8  
                           u2630 0683                             u3511 1563                             u2711 0D29  
                           u3431 0E61                             u3191 057D                             u1911 15E4  
                           u2391 03C8                             u2551 096F                             u2471 00D7  
                           u2631 0682                             u3520 1571                             u2800 090C  
                           u2720 0D40                             u3360 00C3                             u3280 006E  
                           u3600 09D2                             u1920 154D                             u1840 175F  
                           u2560 0979                             u2480 00EB                             u2640 069C  
                           u3521 1570                             u2801 090B                             u2721 0D3F  
                           u3361 00C2                             u3281 006D                             u3601 09D1  
                           u1921 154C                             u1841 175E                             u2561 0978  
                           u2481 00EA                             u2641 069B                             u3530 16E8  
                           u2730 0D53                             u3450 0EA2                             u3370 00C7  
                           u1930 1525                             u1850 1764                             u2570 097F  
                           u2490 0180                             u2650 06F0                             u3531 16E7  
                           u2731 0D52                             u3451 0EA1                             u3371 00C6  
                           u3355 00B0                             u3275 0062                             u1931 1524  
                           u1851 1763                             u2395 03C5                             u2571 097E  
                           u2491 017F                             u2651 06EF                             u2820 0925  
                           u2740 0D67                             u3460 0EBE                             u2900 0B26  
                           u1940 1556                             u1860 1773                             u2580 098F  
                           u2660 073C                             u3380 16D7                             u2821 0924  
                           u2741 0D66                             u3461 0EBD                             u3445 0E69  
                           u2901 0B25                             u1941 1555                             u1861 1772  
                           u2581 098E                             u2485 00E7                             u2661 073B  
                           u3381 16D6                             u3550 16F8                             u2750 0D7C  
                           u3470 0ED8                             u2910 0B2D                             u1950 155A  
                           u1870 1790                             u2670 079D                             u3551 16F7  
                           u2815 090D                             u2751 0D7B                             u3471 0ED7  
                           u2911 0B2C                             u3295 007C                             u1951 1559  
                           u1871 178F                             u2671 079C                             u2840 093B  
                           u2680 0CF0                             u3480 0C79                             u1880 080A  
                           u2760 168A                             u1960 01CB                             u3640 0A1D  
                           u3545 16EC                             u2841 093A                             u2825 0921  
                           u2681 0CEF                             u3481 0C78                             u1881 0809  
                           u2761 1689                             u1961 01CA                             u3570 1707  
                           u2690 0D03                             u2930 0B3C                             u2850 0AE4  
                           u1890 080E                             u2770 1645                             u3490 1745  
                           u3650 0A3B                             u3571 1706                             u2835 092F  
                           u2691 0D02                             u2931 0B3B                             u2851 0AE3  
                           u1891 080D                             u2595 17BC                             u2771 1644  
                           u3491 1744                             u3707 0DB1                             u1875 178C  
                           u2780 08FA                             u2940 0B41                             u2860 0AFA  
                           u1980 01F6                             u3565 16F9                             u2781 08F9  
                           u2941 0B40                             u2925 0B2F                             u3485 0C75  
                           u3717 0DBE                             u1981 01F5                             u3590 1717  
                           u2950 0441                             u2870 0B0F                             u3591 1716  
                           u3575 1703                             u2951 0440                             u2871 0B0E  
                           u3807 17E2                             u3727 0DC9                             u2960 0447  
                           u2880 0B16                             u3585 170D                             u2961 0446  
                           u2881 0B15                             u2865 0AF6                             u3817 1585  
                           u3737 0DD5                             u2970 044C                             u2795 08FE  
                           u2971 044B                             u3827 159C                             u3747 0DE6  
                           u2980 046C                             u3837 0E63                             u2981 046B  
                           u3757 0DF7                             u3677 0A5E                             u2990 0472  
                           u3847 0E74                             u2991 0471                             u2895 0B18  
                           u3767 0E05                             u3687 0D90                             u3857 0E94  
                           u3777 0E0F                             u3697 0DA2                             u3867 0EA8  
                           u3787 0E20                             u3877 0EB1                             u3797 0E2E  
                           _WPUB 020D                             _WPUE 0210                             abs@a 0073  
                           _dbuf 012F                  ??_lcd_backlight 0073                             _main 09FF  
                           _dtoa 02C1                             _prec 012D                             _nout 0129  
                           pad@i 0027                             pad@p 0025                             fsr0h 0005  
                           fsr1h 0007                             indf0 0000                             fsr0l 0004  
                           indf1 0001                             fsr1l 0006                             pad@w 0029  
                           btemp 007E                             _utoa 00D1                             start 0002  
                ___fldiv@new_exp 0025                  ?_lcd_print_with 0026                ___bmul@multiplier 007B  
                          ??_abs 0075                            ??_pad 007C   __size_of_OSCILLATOR_Initialize 0007  
  __end_of_OSCILLATOR_Initialize 151F                    ___fltol@sign1 0079                  __end_of___aodiv 02C1  
                          ?_main 0070                            ?_dtoa 0030                  __end_of___aomod 1000  
                __end_of___fldiv 05E7                            STR_11 1834                            STR_13 1834  
                          STR_16 1837                            STR_18 1837                  __end_of___fltol 0B4D  
                __end_of___lldiv 0944                            ?_utoa 0030                  __end_of___lodiv 0C4D  
                __end_of___lomod 0AD9                  __end_of___lwdiv 171C                     vfpfcnvrt@fmt 004E  
                   vfpfcnvrt@llu 0064                            _TRISA 008C                            _TRISB 008D  
                          _TRISC 008E                            _TRISE 0090                     main@loadcell 00DC  
         scale_convert_gram@temp 0035                     lcd_print@cmd 0020                     lcd_print@str 007A  
                __end_of_lcd_cmd 15A0                  __end_of_command 1800                            _flags 00ED  
                 _WDT_Initialize 1508                            _fputc 175A                            _fputs 080F  
                          pad@fp 002B                            _width 012B                            _putch 0006  
                          dtoa@d 0030                            dtoa@i 004C                            dtoa@n 0044  
                          dtoa@p 003D                            dtoa@s 0042                            dtoa@w 0040  
       __size_of_calc_percentage 005F                            utoa@d 0030                            utoa@i 0045  
                          utoa@n 003D                            utoa@p 0038                            utoa@w 003B  
                          status 0003               _scale_convert_gram 0C4D                            wtemp0 007E  
                __end_of_sprintf 166E       __size_of_set_CELL_CLK_HIGH 000A                  __end_of_strncmp 09A0  
               ___lodiv@dividend 0028                  ??_get_scale_val 0024                  __initialization 07E5  
            ?_scale_convert_gram 0070                     __end_of_main 0A68                     __end_of_dtoa 0433  
                  command@lownib 0078                     __end_of_utoa 01C0                 __end_of_i2c_wait 080F  
               __end_of_i2c_stop 1526                           ??_main 00D6                           ??_dtoa 0038  
                         ??_utoa 007D                 ___lodiv@quotient 0071           __end_of_WDT_Initialize 150C  
           ??_scale_convert_gram 002D                get_CELL_DAT_VAL@p 0075                           ?_fputc 0070  
                         ?_fputs 0078                           _APFCON 011D                           _ANSELA 018C  
                         ?_putch 0070                           _ANSELB 018D                           _BORCON 0116  
                         _OSCCON 0099                set_CELL_CLK_LOW@p 0071                           u210lld 0F6B  
                         u206lld 02AF                           u216lld 0FEE                           u208lld 0F40  
                         u234lld 030A                           _WDTCON 0097                           u197lld 01EA  
                         _SSPADD 0212                           u199lld 0215                           _SSPBUF 0211  
             __size_of_i2c_start 000A                 __end_of___xxtofl 00D1               __size_of_i2c_write 0010  
       __end_of_get_CELL_DAT_VAL 0D8A                     vfprintf@cfmt 00A3                 __end_of_lcd_init 0E33  
                         ___bmul 155E                        ??___aodiv 0070                        ??___aomod 0070  
                      ??___fldiv 0078                        ??___fltol 0074                        ??___lldiv 0078  
                      ??___lodiv 0070                        ??___lomod 0070                        ??___lwdiv 0074  
               calc_percentage@p 003C                           pad@buf 0024                        ??_lcd_cmd 0072  
                         dtoa@fp 003F                        ??_command 0075                           _strlen 15D2  
                         fputc@c 0070                           fputs@c 0020                           fputs@i 0021  
                         fputs@s 0023                  ?_WDT_Initialize 0070                      initialize@p 00C4  
                         putch@c 0070                 __end_of_vfprintf 16E0                           utoa@fp 003A  
                      ??_sprintf 00AB                        ??_strncmp 0076                     ___xxtofl@arg 007A  
                   ___xxtofl@exp 0079                _SYSTEM_Initialize 1526                     ___xxtofl@val 0070  
        __end_of__initialization 07FD               ?_SYSTEM_Initialize 0070                   print_gram@row1 00B5  
                 print_gram@row2 00C5                       ___fltol@f1 0070              ___bmul@multiplicand 0078  
      __size_of_set_CELL_CLK_LOW 000A                   command@highnib 0077                   __pcstackCOMMON 0070  
              ??_calc_percentage 003A                     __pidataBANK2 0007              ??_SYSTEM_Initialize 0070  
                  __end_of_fputc 17A9                    __end_of_fputs 0838                    __end_of_putch 0007  
                 get_scale_val@i 0031                   get_scale_val@j 002C                   get_scale_val@p 0032  
              __end_of_i2c_start 154E                 ??_lcd_set_cursor 007C                __end_of_i2c_write 155E  
                 _OPTION_REGbits 0095               __size_of_lcd_clear 003E               __size_of_lcd_print 0024  
                        ??_fputc 0073        __end_of_SYSTEM_Initialize 1530                          ??_fputs 0079  
                        ??_putch 0070                       __pbssBANK1 00ED                       __pbssBANK2 0120  
               ??_lcd_print_with 002A                        ?_i2c_wait 0070                        ?_i2c_stop 0070  
              lcd_print_with@col 0028                lcd_print_with@row 0029                lcd_print_with@str 0026  
                     __pmaintext 09FF                          ?___bmul 0078                          ?_strlen 0070  
             set_CELL_CLK_HIGH@p 0071                        ?___xxtofl 0070               __size_of_vfpfcnvrt 01FE  
                        _OSCTUNE 0098                          _SSPCON1 0215                          _SSPCON2 0216  
                      ?_lcd_init 0070                          _SSPSTAT 0214                 ___lomod@dividend 0028  
                     ??_i2c_wait 0070                       ??_i2c_stop 0070            __end_of_lcd_backlight 1589  
              __end_of_lcd_clear 175A                  __size_of___bmul 0015                          ___aodiv 01C0  
              __end_of_lcd_print 1646                          ___aomod 0F16                          ___fldiv 0433  
                        ___fltol 0AD9                          ___lldiv 08EA                          ___lodiv 0BC9  
                        ___lomod 0A68                          ___lwdiv 16E0                        ?_vfprintf 006D  
                     _initialize 0B4D                          __ptext1 0891                          __ptext2 0B4D  
                        __ptext3 1646                          __ptext4 16A7                          __ptext5 05E7  
                        __ptext6 00D1                          __ptext7 0A68                          __ptext8 0BC9  
                        __ptext9 0944                          _lcd_cmd 1589                          _command 17A9  
                __size_of_strlen 001A            _OSCILLATOR_Initialize 1518                     __size_of_abs 001A  
                   __size_of_pad 0059                       ??___xxtofl 0074                          _segdata 015B  
       ??_PIN_MANAGER_Initialize 0070                          main@lcd 00D8       __size_of_SYSTEM_Initialize 000A  
                        _sprintf 1646                          clrloop0 150D                       ??_lcd_init 0076  
                        _strncmp 0944             end_of_initialization 07FD               clear_segment@F2765 0125  
                        fputc@fp 0072                          init_ram 1512                          fputs@fp 0078  
                        initloop 1513                  ___lldiv@divisor 0070                  ___lldiv@counter 007D  
          __end_of_get_scale_val 0F16                 _set_CELL_CLK_LOW 153A                ?_get_CELL_DAT_VAL 0070  
              __end_of_vfpfcnvrt 07E5               ??_get_CELL_DAT_VAL 0072                       ??_vfprintf 00A0  
                        strlen@a 0073                          strlen@s 0074                 ??_WDT_Initialize 0070  
                      _PORTAbits 000C                        _PORTBbits 000D                     _m_brightness 00EF  
                     _print_gram 0891                    i2c_write@data 0070        lcd_set_cursor@row_offsets 0020  
                  ___xxtofl@sign 0078                       lcd_cmd@cmd 0071      __size_of_scale_convert_gram 009A  
                    ___fldiv@grs 0027                      ___fldiv@rem 0020                       lcd_clear@p 002A  
               initialize@valstr 00B4                  _calc_percentage 09A0                       command@val 0073  
                     lcd_print@p 0021                      print_gram@p 00D5                       _write4bits 1607  
                 __end_of___bmul 1573                      vfpfcnvrt@ap 004F                      vfpfcnvrt@fp 006C  
                    vfpfcnvrt@ll 005C                      ?_initialize 0070           ?_OSCILLATOR_Initialize 0070  
                 __end_of_strlen 15EC              start_initialization 07E5                  ___lodiv@divisor 0020  
                ___lodiv@counter 0079  __size_of_PIN_MANAGER_Initialize 001B                      __end_of_abs 15D2  
                      _i2c_start 1544                      __end_of_pad 0891                        _i2c_write 154E  
              __size_of_i2c_wait 000C                __size_of_i2c_stop 0007                      vfprintf@fmt 006D  
                       ??___bmul 0079          get_scale_val@weight_add 0028                      __pdataBANK2 014F  
                       ??_strlen 0072                      ?_print_gram 0070                        ___fldiv@a 0070  
                      ___fldiv@b 0074              lcd_set_cursor@F2781 0165                        ___latbits 0003  
        __end_of_calc_percentage 09FF                    __pcstackBANK0 0020                    __pcstackBANK1 00A0  
               ___aodiv@dividend 0028                       ?_i2c_start 0070                       ?_i2c_write 0070  
              __size_of___xxtofl 00AC                __size_of_lcd_init 00A9              __size_of_initialize 007C  
               ___lwdiv@dividend 0072           _PIN_MANAGER_Initialize 15EC                        _dtoa$1179 003B  
                    ?_write4bits 0073                         ?___aodiv 0020                         ?___aomod 0020  
                       ?___fldiv 0070                 ___aodiv@quotient 0073                         ?___fltol 0070  
                       ?___lldiv 0070                         ?___lodiv 0020                         ?___lomod 0020  
                       ?___lwdiv 0070                        _lcd_clear 171C                        _lcd_print 1622  
                       ?_lcd_cmd 0071                __size_of_vfprintf 0039                         ?_command 0073  
                ___lomod@divisor 0020                  ___lomod@counter 0071         __end_of_set_CELL_CLK_LOW 1544  
               ___lwdiv@quotient 0075                         ?_sprintf 00A5                   __size_of_fputc 004F  
                 __size_of_fputs 0029                         ?_strncmp 0070                   __size_of_putch 0001  
        __size_of_lcd_set_cursor 0039                      write4bits@p 0075     get_scale_val@scale_avg_count 0020  
                      clear_ram0 150C                  lcd_set_cursor@p 0025              __size_of_print_gram 0059  
                      main@F2800 014F                        main@F2802 0169                        main@F2804 0120  
        __size_of_lcd_print_with 0018                       ?_lcd_clear 0070                        _vfpfcnvrt 05E7  
                     ?_lcd_print 007A                        lcd_init@p 0078                        main@drink 00E8  
            scale_convert_gram@p 0039        __size_of_get_CELL_DAT_VAL 00A3           __size_of_lcd_backlight 0016  
               ?_calc_percentage 0070                      ??_i2c_start 0070                      ??_i2c_write 0070  
            __size_of_write4bits 001B                         _i2c_wait 0803                         _i2c_stop 151F  
                     vfprintf@ap 006F                       vfprintf@fp 00A2          ??_OSCILLATOR_Initialize 0070  
               __size_of___aodiv 0101                 __size_of___aomod 00EA                 __size_of___fldiv 01B4  
               __size_of___fltol 0074                 __size_of___lldiv 005A                 __size_of___lodiv 0084  
               __size_of___lomod 0071                       ?_vfpfcnvrt 004E                 __size_of___lwdiv 003C  
                   ??_initialize 00B3                  ___aodiv@divisor 0020                  ___aodiv@counter 0071  
               __size_of_lcd_cmd 0017                 __size_of_command 0057                       sprintf@fmt 00A5  
     __end_of_scale_convert_gram 0CE7                         ___xxtofl 0025                  lcd_print_with@p 007D  
                ___lwdiv@divisor 0070                  ___lwdiv@counter 0077           __size_of_get_scale_val 00E3  
                       __ptext10 02C1                         __ptext11 0838                         __ptext20 0D8A  
                       __ptext12 15D2                         __ptext21 1607                         __ptext13 080F  
                       __ptext30 1544                         __ptext22 171C                         __ptext14 175A  
                       __ptext31 0803                         __ptext23 166E                         __ptext15 0006  
                       __ptext40 0CE7                         __ptext32 09A0                         __ptext24 1622  
                       __ptext16 15B8                         __ptext41 08EA                         __ptext33 0C4D  
                       __ptext25 17A9                         __ptext17 0F16                         __ptext42 16E0  
                       __ptext34 0025                         __ptext26 1573                         __ptext18 01C0  
                       __ptext43 155E                         __ptext35 0AD9                         __ptext27 1589  
                       __ptext19 15A0                         __ptext44 1526                         __ptext36 0433  
                       __ptext28 154E                         __ptext45 1508                         __ptext37 0E33  
                       __ptext29 151F                         __ptext46 15EC                         __ptext38 153A  
                       __ptext47 1518                         __ptext39 1530                         _lcd_init 0D8A  
               __size_of_sprintf 0028                 __size_of_strncmp 005C                    __size_of_main 0069  
                  __size_of_dtoa 0172                    __size_of_utoa 00EF               __end_of_initialize 0BC9  
                  write4bits@val 0073                    _lcd_backlight 1573                         lcd_cmd@p 0072  
                       _vfprintf 16A7                         command@p 0079                      ??_lcd_clear 0026  
                    ??_lcd_print 007C                 ___aomod@dividend 0028                     ??_print_gram 00B3  
                 __pstringtext10 0000          __size_of_WDT_Initialize 0004                   _lcd_set_cursor 166E  
              lcd_set_cursor@cmd 0024                lcd_set_cursor@col 007A                        sprintf@ap 00AD  
              lcd_set_cursor@row 007B                 ___lldiv@dividend 0074          ?_PIN_MANAGER_Initialize 0070  
                 ?_lcd_backlight 0070                        strncmp@_l 0070                        strncmp@_r 0072  
              _set_CELL_CLK_HIGH 1530               __end_of_print_gram 08EA                     ??_write4bits 0074  
                  _get_scale_val 0E33                   _lcd_print_with 15A0               ?_set_CELL_CLK_HIGH 0070  
                ___aomod@divisor 0020                      ??_vfpfcnvrt 0050                  ___aomod@counter 0071  
                  __pstringtext1 1800                    __pstringtext2 180F                    __pstringtext3 181A  
                  __pstringtext4 1824                    __pstringtext5 182C                    __pstringtext6 1831  
                  __pstringtext7 1834                    __pstringtext8 1837                    __pstringtext9 183A  
            ??_set_CELL_CLK_HIGH 0070                         sprintf@f 00AE                         sprintf@s 00AC  
               ___lldiv@quotient 0079                 _get_CELL_DAT_VAL 0CE7                         strncmp@l 0077  
                       strncmp@n 0074                         strncmp@r 0079                      _SSPCON1bits 0215  
                    _SSPCON2bits 0216                ?_set_CELL_CLK_LOW 0070           __end_of_lcd_set_cursor 16A7  
             ??_set_CELL_CLK_LOW 0070               __end_of_write4bits 1622                     ___aodiv@sign 0072  
 __end_of_PIN_MANAGER_Initialize 1607        __end_of_set_CELL_CLK_HIGH 153A                   lcd_backlight@p 0074  
                   ___aomod@sign 0072           __end_of_lcd_print_with 15B8                   ?_get_scale_val 0020  

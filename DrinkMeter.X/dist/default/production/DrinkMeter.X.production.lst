

Microchip MPLAB XC8 Assembler V2.32 build 20210201212658 
                                                                                               Sun Dec 19 20:14:34 2021

Microchip MPLAB XC8 C Compiler v2.32 (Free license) build 20210201212658 Og1 
     1                           	processor	16F1938
     2                           	pagewidth 120
     3                           	opt	flic
     4                           	psect	idataBANK2,global,class=CODE,delta=2,noexec
     5                           	psect	stringtext1,global,class=STRCODE,delta=2,noexec
     6                           	psect	stringtext2,global,class=STRCODE,delta=2,noexec
     7                           	psect	stringtext3,global,class=STRCODE,delta=2,noexec
     8                           	psect	stringtext4,global,class=STRCODE,delta=2,noexec
     9                           	psect	stringtext5,global,class=STRCODE,delta=2,noexec
    10                           	psect	stringtext6,global,class=STRCODE,delta=2,noexec
    11                           	psect	stringtext7,global,class=STRCODE,delta=2,noexec
    12                           	psect	stringtext8,global,class=STRCODE,delta=2,noexec
    13                           	psect	stringtext9,global,class=STRCODE,delta=2,noexec
    14                           	psect	stringtext10,global,class=STRCODE,delta=2,noexec
    15                           	psect	stringtext11,global,class=STRCODE,delta=2,noexec
    16                           	psect	cinit,global,class=CODE,merge=1,delta=2
    17                           	psect	bssBANK2,global,class=BANK2,space=1,delta=1,noexec
    18                           	psect	dataBANK2,global,class=BANK2,space=1,delta=1,noexec
    19                           	psect	bssBANK3,global,class=BANK3,space=1,delta=1,noexec
    20                           	psect	inittext,global,class=CODE,delta=2
    21                           	psect	clrtext,global,class=CODE,delta=2
    22                           	psect	cstackBANK1,global,class=BANK1,space=1,delta=1,noexec
    23                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1,noexec
    24                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,noexec
    25                           	psect	maintext,global,class=CODE,merge=1,split=1,delta=2
    26                           	psect	text1,local,class=CODE,merge=1,delta=2
    27                           	psect	text2,local,class=CODE,merge=1,delta=2
    28                           	psect	text3,local,class=CODE,merge=1,delta=2
    29                           	psect	text4,local,class=CODE,merge=1,delta=2,group=2
    30                           	psect	text5,local,class=CODE,merge=1,delta=2,group=2
    31                           	psect	text6,local,class=CODE,merge=1,delta=2,group=2
    32                           	psect	text7,local,class=CODE,merge=1,delta=2,group=2
    33                           	psect	text8,local,class=CODE,merge=1,delta=2,group=2
    34                           	psect	text9,local,class=CODE,merge=1,delta=2
    35                           	psect	text10,local,class=CODE,merge=1,delta=2
    36                           	psect	text11,local,class=CODE,merge=1,delta=2,group=3
    37                           	psect	text12,local,class=CODE,merge=1,delta=2,group=1
    38                           	psect	text13,local,class=CODE,merge=1,delta=2,group=1
    39                           	psect	text14,local,class=CODE,merge=1,delta=2,group=1
    40                           	psect	text15,local,class=CODE,merge=1,delta=2,group=2
    41                           	psect	text16,local,class=CODE,merge=1,delta=2,group=2
    42                           	psect	text17,local,class=CODE,merge=1,delta=2,group=3
    43                           	psect	text18,local,class=CODE,merge=1,delta=2,group=1
    44                           	psect	text19,local,class=CODE,merge=1,delta=2,group=1
    45                           	psect	text20,local,class=CODE,merge=1,delta=2,group=3
    46                           	psect	text21,local,class=CODE,merge=1,delta=2,group=3
    47                           	psect	text22,local,class=CODE,merge=1,delta=2,group=3
    48                           	psect	text23,local,class=CODE,merge=1,delta=2,group=3
    49                           	psect	text24,local,class=CODE,merge=1,delta=2,group=3
    50                           	psect	text25,local,class=CODE,merge=1,delta=2,group=2
    51                           	psect	text26,local,class=CODE,merge=1,delta=2,group=2
    52                           	psect	text27,local,class=CODE,merge=1,delta=2
    53                           	psect	text28,local,class=CODE,merge=1,delta=2
    54                           	psect	text29,local,class=CODE,merge=1,delta=2
    55                           	psect	text30,local,class=CODE,merge=1,delta=2
    56                           	psect	text31,local,class=CODE,merge=1,delta=2
    57                           	psect	text32,local,class=CODE,merge=1,delta=2
    58                           	psect	text33,local,class=CODE,merge=1,delta=2
    59                           	psect	text34,local,class=CODE,merge=1,delta=2
    60                           	psect	text35,local,class=CODE,merge=1,delta=2
    61                           	psect	text36,local,class=CODE,merge=1,delta=2
    62                           	psect	text37,local,class=CODE,merge=1,delta=2
    63                           	psect	text38,local,class=CODE,merge=1,delta=2
    64                           	psect	text39,local,class=CODE,merge=1,delta=2
    65                           	psect	text40,local,class=CODE,merge=1,delta=2
    66                           	psect	text41,local,class=CODE,merge=1,delta=2
    67                           	psect	text42,local,class=CODE,merge=1,delta=2
    68                           	psect	text43,local,class=CODE,merge=1,delta=2
    69                           	psect	text44,local,class=CODE,merge=1,delta=2
    70                           	psect	text45,local,class=CODE,merge=1,delta=2
    71                           	psect	text46,local,class=CODE,merge=1,delta=2
    72                           	psect	text47,local,class=CODE,merge=1,delta=2
    73                           	psect	text48,local,class=CODE,merge=1,delta=2
    74                           	psect	text49,local,class=CODE,merge=1,delta=2
    75                           	psect	text50,local,class=CODE,merge=1,delta=2
    76                           	psect	text51,local,class=CODE,merge=1,delta=2
    77                           	psect	text52,local,class=CODE,merge=1,delta=2
    78                           	psect	text53,local,class=CODE,merge=1,delta=2
    79                           	psect	text54,local,class=CODE,merge=1,delta=2
    80                           	psect	text55,local,class=CODE,merge=1,delta=2
    81                           	psect	text56,local,class=CODE,merge=1,delta=2,group=2
    82                           	psect	text57,local,class=CODE,merge=1,delta=2,group=2
    83                           	psect	text58,local,class=CODE,merge=1,delta=2
    84                           	psect	text59,local,class=CODE,merge=1,delta=2
    85                           	psect	text60,local,class=CODE,merge=1,delta=2
    86                           	psect	text61,local,class=CODE,merge=1,delta=2
    87                           	psect	text62,local,class=CODE,merge=1,delta=2,group=2
    88                           	psect	text63,local,class=CODE,merge=1,delta=2
    89                           	psect	text64,local,class=CODE,merge=1,delta=2
    90                           	psect	text65,local,class=CODE,merge=1,delta=2
    91                           	psect	text66,local,class=CODE,merge=1,delta=2
    92                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=2,noexec
    93                           	dabs	1,0x7E,2
    94  0000                     
    95                           ; Version 2.32
    96                           ; Generated 02/02/2021 GMT
    97                           ; 
    98                           ; Copyright Â© 2021, Microchip Technology Inc. and its subsidiaries ("Microchip")
    99                           ; All rights reserved.
   100                           ; 
   101                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
   102                           ; 
   103                           ; Redistribution and use in source and binary forms, with or without modification, are
   104                           ; permitted provided that the following conditions are met:
   105                           ; 
   106                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
   107                           ;        conditions and the following disclaimer.
   108                           ; 
   109                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
   110                           ;        of conditions and the following disclaimer in the documentation and/or other
   111                           ;        materials provided with the distribution. Publication is not required when
   112                           ;        this file is used in an embedded application.
   113                           ; 
   114                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
   115                           ;        software without specific prior written permission.
   116                           ; 
   117                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
   118                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
   119                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
   120                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
   121                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
   122                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
   123                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
   124                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
   125                           ; 
   126                           ; 
   127                           ; Code-generator required, PIC16F1938 Definitions
   128                           ; 
   129                           ; SFR Addresses
   130  0000                     	;# 
   131  0001                     	;# 
   132  0002                     	;# 
   133  0003                     	;# 
   134  0004                     	;# 
   135  0005                     	;# 
   136  0006                     	;# 
   137  0007                     	;# 
   138  0008                     	;# 
   139  0009                     	;# 
   140  000A                     	;# 
   141  000B                     	;# 
   142  000C                     	;# 
   143  000D                     	;# 
   144  000E                     	;# 
   145  0010                     	;# 
   146  0011                     	;# 
   147  0012                     	;# 
   148  0013                     	;# 
   149  0015                     	;# 
   150  0016                     	;# 
   151  0016                     	;# 
   152  0017                     	;# 
   153  0018                     	;# 
   154  0019                     	;# 
   155  001A                     	;# 
   156  001B                     	;# 
   157  001C                     	;# 
   158  001E                     	;# 
   159  001F                     	;# 
   160  008C                     	;# 
   161  008D                     	;# 
   162  008E                     	;# 
   163  0090                     	;# 
   164  0091                     	;# 
   165  0092                     	;# 
   166  0093                     	;# 
   167  0095                     	;# 
   168  0096                     	;# 
   169  0097                     	;# 
   170  0098                     	;# 
   171  0099                     	;# 
   172  009A                     	;# 
   173  009B                     	;# 
   174  009B                     	;# 
   175  009C                     	;# 
   176  009D                     	;# 
   177  009E                     	;# 
   178  010C                     	;# 
   179  010D                     	;# 
   180  010E                     	;# 
   181  0110                     	;# 
   182  0111                     	;# 
   183  0112                     	;# 
   184  0113                     	;# 
   185  0114                     	;# 
   186  0115                     	;# 
   187  0116                     	;# 
   188  0117                     	;# 
   189  0118                     	;# 
   190  0119                     	;# 
   191  011A                     	;# 
   192  011B                     	;# 
   193  011D                     	;# 
   194  018C                     	;# 
   195  018D                     	;# 
   196  0191                     	;# 
   197  0191                     	;# 
   198  0192                     	;# 
   199  0193                     	;# 
   200  0193                     	;# 
   201  0193                     	;# 
   202  0194                     	;# 
   203  0195                     	;# 
   204  0196                     	;# 
   205  0199                     	;# 
   206  019A                     	;# 
   207  019B                     	;# 
   208  019B                     	;# 
   209  019B                     	;# 
   210  019B                     	;# 
   211  019C                     	;# 
   212  019C                     	;# 
   213  019D                     	;# 
   214  019E                     	;# 
   215  019F                     	;# 
   216  020D                     	;# 
   217  0210                     	;# 
   218  0211                     	;# 
   219  0212                     	;# 
   220  0213                     	;# 
   221  0214                     	;# 
   222  0215                     	;# 
   223  0215                     	;# 
   224  0216                     	;# 
   225  0217                     	;# 
   226  0291                     	;# 
   227  0291                     	;# 
   228  0292                     	;# 
   229  0293                     	;# 
   230  0294                     	;# 
   231  0295                     	;# 
   232  0295                     	;# 
   233  0296                     	;# 
   234  0298                     	;# 
   235  0298                     	;# 
   236  0299                     	;# 
   237  029A                     	;# 
   238  029B                     	;# 
   239  029C                     	;# 
   240  029C                     	;# 
   241  029D                     	;# 
   242  029E                     	;# 
   243  029F                     	;# 
   244  0311                     	;# 
   245  0311                     	;# 
   246  0312                     	;# 
   247  0313                     	;# 
   248  0314                     	;# 
   249  0315                     	;# 
   250  0315                     	;# 
   251  0316                     	;# 
   252  0318                     	;# 
   253  0318                     	;# 
   254  0319                     	;# 
   255  031A                     	;# 
   256  031C                     	;# 
   257  031C                     	;# 
   258  031D                     	;# 
   259  031E                     	;# 
   260  0394                     	;# 
   261  0395                     	;# 
   262  0396                     	;# 
   263  0415                     	;# 
   264  0416                     	;# 
   265  0417                     	;# 
   266  041C                     	;# 
   267  041D                     	;# 
   268  041E                     	;# 
   269  0791                     	;# 
   270  0792                     	;# 
   271  0793                     	;# 
   272  0794                     	;# 
   273  0795                     	;# 
   274  0798                     	;# 
   275  0799                     	;# 
   276  07A0                     	;# 
   277  07A1                     	;# 
   278  07A3                     	;# 
   279  07A4                     	;# 
   280  07A6                     	;# 
   281  07A7                     	;# 
   282  07A9                     	;# 
   283  07AA                     	;# 
   284  0FE4                     	;# 
   285  0FE5                     	;# 
   286  0FE6                     	;# 
   287  0FE7                     	;# 
   288  0FE8                     	;# 
   289  0FE9                     	;# 
   290  0FEA                     	;# 
   291  0FEB                     	;# 
   292  0FED                     	;# 
   293  0FEE                     	;# 
   294  0FEF                     	;# 
   295  0000                     	;# 
   296  0001                     	;# 
   297  0002                     	;# 
   298  0003                     	;# 
   299  0004                     	;# 
   300  0005                     	;# 
   301  0006                     	;# 
   302  0007                     	;# 
   303  0008                     	;# 
   304  0009                     	;# 
   305  000A                     	;# 
   306  000B                     	;# 
   307  000C                     	;# 
   308  000D                     	;# 
   309  000E                     	;# 
   310  0010                     	;# 
   311  0011                     	;# 
   312  0012                     	;# 
   313  0013                     	;# 
   314  0015                     	;# 
   315  0016                     	;# 
   316  0016                     	;# 
   317  0017                     	;# 
   318  0018                     	;# 
   319  0019                     	;# 
   320  001A                     	;# 
   321  001B                     	;# 
   322  001C                     	;# 
   323  001E                     	;# 
   324  001F                     	;# 
   325  008C                     	;# 
   326  008D                     	;# 
   327  008E                     	;# 
   328  0090                     	;# 
   329  0091                     	;# 
   330  0092                     	;# 
   331  0093                     	;# 
   332  0095                     	;# 
   333  0096                     	;# 
   334  0097                     	;# 
   335  0098                     	;# 
   336  0099                     	;# 
   337  009A                     	;# 
   338  009B                     	;# 
   339  009B                     	;# 
   340  009C                     	;# 
   341  009D                     	;# 
   342  009E                     	;# 
   343  010C                     	;# 
   344  010D                     	;# 
   345  010E                     	;# 
   346  0110                     	;# 
   347  0111                     	;# 
   348  0112                     	;# 
   349  0113                     	;# 
   350  0114                     	;# 
   351  0115                     	;# 
   352  0116                     	;# 
   353  0117                     	;# 
   354  0118                     	;# 
   355  0119                     	;# 
   356  011A                     	;# 
   357  011B                     	;# 
   358  011D                     	;# 
   359  018C                     	;# 
   360  018D                     	;# 
   361  0191                     	;# 
   362  0191                     	;# 
   363  0192                     	;# 
   364  0193                     	;# 
   365  0193                     	;# 
   366  0193                     	;# 
   367  0194                     	;# 
   368  0195                     	;# 
   369  0196                     	;# 
   370  0199                     	;# 
   371  019A                     	;# 
   372  019B                     	;# 
   373  019B                     	;# 
   374  019B                     	;# 
   375  019B                     	;# 
   376  019C                     	;# 
   377  019C                     	;# 
   378  019D                     	;# 
   379  019E                     	;# 
   380  019F                     	;# 
   381  020D                     	;# 
   382  0210                     	;# 
   383  0211                     	;# 
   384  0212                     	;# 
   385  0213                     	;# 
   386  0214                     	;# 
   387  0215                     	;# 
   388  0215                     	;# 
   389  0216                     	;# 
   390  0217                     	;# 
   391  0291                     	;# 
   392  0291                     	;# 
   393  0292                     	;# 
   394  0293                     	;# 
   395  0294                     	;# 
   396  0295                     	;# 
   397  0295                     	;# 
   398  0296                     	;# 
   399  0298                     	;# 
   400  0298                     	;# 
   401  0299                     	;# 
   402  029A                     	;# 
   403  029B                     	;# 
   404  029C                     	;# 
   405  029C                     	;# 
   406  029D                     	;# 
   407  029E                     	;# 
   408  029F                     	;# 
   409  0311                     	;# 
   410  0311                     	;# 
   411  0312                     	;# 
   412  0313                     	;# 
   413  0314                     	;# 
   414  0315                     	;# 
   415  0315                     	;# 
   416  0316                     	;# 
   417  0318                     	;# 
   418  0318                     	;# 
   419  0319                     	;# 
   420  031A                     	;# 
   421  031C                     	;# 
   422  031C                     	;# 
   423  031D                     	;# 
   424  031E                     	;# 
   425  0394                     	;# 
   426  0395                     	;# 
   427  0396                     	;# 
   428  0415                     	;# 
   429  0416                     	;# 
   430  0417                     	;# 
   431  041C                     	;# 
   432  041D                     	;# 
   433  041E                     	;# 
   434  0791                     	;# 
   435  0792                     	;# 
   436  0793                     	;# 
   437  0794                     	;# 
   438  0795                     	;# 
   439  0798                     	;# 
   440  0799                     	;# 
   441  07A0                     	;# 
   442  07A1                     	;# 
   443  07A3                     	;# 
   444  07A4                     	;# 
   445  07A6                     	;# 
   446  07A7                     	;# 
   447  07A9                     	;# 
   448  07AA                     	;# 
   449  0FE4                     	;# 
   450  0FE5                     	;# 
   451  0FE6                     	;# 
   452  0FE7                     	;# 
   453  0FE8                     	;# 
   454  0FE9                     	;# 
   455  0FEA                     	;# 
   456  0FEB                     	;# 
   457  0FED                     	;# 
   458  0FEE                     	;# 
   459  0FEF                     	;# 
   460  0000                     	;# 
   461  0001                     	;# 
   462  0002                     	;# 
   463  0003                     	;# 
   464  0004                     	;# 
   465  0005                     	;# 
   466  0006                     	;# 
   467  0007                     	;# 
   468  0008                     	;# 
   469  0009                     	;# 
   470  000A                     	;# 
   471  000B                     	;# 
   472  000C                     	;# 
   473  000D                     	;# 
   474  000E                     	;# 
   475  0010                     	;# 
   476  0011                     	;# 
   477  0012                     	;# 
   478  0013                     	;# 
   479  0015                     	;# 
   480  0016                     	;# 
   481  0016                     	;# 
   482  0017                     	;# 
   483  0018                     	;# 
   484  0019                     	;# 
   485  001A                     	;# 
   486  001B                     	;# 
   487  001C                     	;# 
   488  001E                     	;# 
   489  001F                     	;# 
   490  008C                     	;# 
   491  008D                     	;# 
   492  008E                     	;# 
   493  0090                     	;# 
   494  0091                     	;# 
   495  0092                     	;# 
   496  0093                     	;# 
   497  0095                     	;# 
   498  0096                     	;# 
   499  0097                     	;# 
   500  0098                     	;# 
   501  0099                     	;# 
   502  009A                     	;# 
   503  009B                     	;# 
   504  009B                     	;# 
   505  009C                     	;# 
   506  009D                     	;# 
   507  009E                     	;# 
   508  010C                     	;# 
   509  010D                     	;# 
   510  010E                     	;# 
   511  0110                     	;# 
   512  0111                     	;# 
   513  0112                     	;# 
   514  0113                     	;# 
   515  0114                     	;# 
   516  0115                     	;# 
   517  0116                     	;# 
   518  0117                     	;# 
   519  0118                     	;# 
   520  0119                     	;# 
   521  011A                     	;# 
   522  011B                     	;# 
   523  011D                     	;# 
   524  018C                     	;# 
   525  018D                     	;# 
   526  0191                     	;# 
   527  0191                     	;# 
   528  0192                     	;# 
   529  0193                     	;# 
   530  0193                     	;# 
   531  0193                     	;# 
   532  0194                     	;# 
   533  0195                     	;# 
   534  0196                     	;# 
   535  0199                     	;# 
   536  019A                     	;# 
   537  019B                     	;# 
   538  019B                     	;# 
   539  019B                     	;# 
   540  019B                     	;# 
   541  019C                     	;# 
   542  019C                     	;# 
   543  019D                     	;# 
   544  019E                     	;# 
   545  019F                     	;# 
   546  020D                     	;# 
   547  0210                     	;# 
   548  0211                     	;# 
   549  0212                     	;# 
   550  0213                     	;# 
   551  0214                     	;# 
   552  0215                     	;# 
   553  0215                     	;# 
   554  0216                     	;# 
   555  0217                     	;# 
   556  0291                     	;# 
   557  0291                     	;# 
   558  0292                     	;# 
   559  0293                     	;# 
   560  0294                     	;# 
   561  0295                     	;# 
   562  0295                     	;# 
   563  0296                     	;# 
   564  0298                     	;# 
   565  0298                     	;# 
   566  0299                     	;# 
   567  029A                     	;# 
   568  029B                     	;# 
   569  029C                     	;# 
   570  029C                     	;# 
   571  029D                     	;# 
   572  029E                     	;# 
   573  029F                     	;# 
   574  0311                     	;# 
   575  0311                     	;# 
   576  0312                     	;# 
   577  0313                     	;# 
   578  0314                     	;# 
   579  0315                     	;# 
   580  0315                     	;# 
   581  0316                     	;# 
   582  0318                     	;# 
   583  0318                     	;# 
   584  0319                     	;# 
   585  031A                     	;# 
   586  031C                     	;# 
   587  031C                     	;# 
   588  031D                     	;# 
   589  031E                     	;# 
   590  0394                     	;# 
   591  0395                     	;# 
   592  0396                     	;# 
   593  0415                     	;# 
   594  0416                     	;# 
   595  0417                     	;# 
   596  041C                     	;# 
   597  041D                     	;# 
   598  041E                     	;# 
   599  0791                     	;# 
   600  0792                     	;# 
   601  0793                     	;# 
   602  0794                     	;# 
   603  0795                     	;# 
   604  0798                     	;# 
   605  0799                     	;# 
   606  07A0                     	;# 
   607  07A1                     	;# 
   608  07A3                     	;# 
   609  07A4                     	;# 
   610  07A6                     	;# 
   611  07A7                     	;# 
   612  07A9                     	;# 
   613  07AA                     	;# 
   614  0FE4                     	;# 
   615  0FE5                     	;# 
   616  0FE6                     	;# 
   617  0FE7                     	;# 
   618  0FE8                     	;# 
   619  0FE9                     	;# 
   620  0FEA                     	;# 
   621  0FEB                     	;# 
   622  0FED                     	;# 
   623  0FEE                     	;# 
   624  0FEF                     	;# 
   625  0000                     	;# 
   626  0001                     	;# 
   627  0002                     	;# 
   628  0003                     	;# 
   629  0004                     	;# 
   630  0005                     	;# 
   631  0006                     	;# 
   632  0007                     	;# 
   633  0008                     	;# 
   634  0009                     	;# 
   635  000A                     	;# 
   636  000B                     	;# 
   637  000C                     	;# 
   638  000D                     	;# 
   639  000E                     	;# 
   640  0010                     	;# 
   641  0011                     	;# 
   642  0012                     	;# 
   643  0013                     	;# 
   644  0015                     	;# 
   645  0016                     	;# 
   646  0016                     	;# 
   647  0017                     	;# 
   648  0018                     	;# 
   649  0019                     	;# 
   650  001A                     	;# 
   651  001B                     	;# 
   652  001C                     	;# 
   653  001E                     	;# 
   654  001F                     	;# 
   655  008C                     	;# 
   656  008D                     	;# 
   657  008E                     	;# 
   658  0090                     	;# 
   659  0091                     	;# 
   660  0092                     	;# 
   661  0093                     	;# 
   662  0095                     	;# 
   663  0096                     	;# 
   664  0097                     	;# 
   665  0098                     	;# 
   666  0099                     	;# 
   667  009A                     	;# 
   668  009B                     	;# 
   669  009B                     	;# 
   670  009C                     	;# 
   671  009D                     	;# 
   672  009E                     	;# 
   673  010C                     	;# 
   674  010D                     	;# 
   675  010E                     	;# 
   676  0110                     	;# 
   677  0111                     	;# 
   678  0112                     	;# 
   679  0113                     	;# 
   680  0114                     	;# 
   681  0115                     	;# 
   682  0116                     	;# 
   683  0117                     	;# 
   684  0118                     	;# 
   685  0119                     	;# 
   686  011A                     	;# 
   687  011B                     	;# 
   688  011D                     	;# 
   689  018C                     	;# 
   690  018D                     	;# 
   691  0191                     	;# 
   692  0191                     	;# 
   693  0192                     	;# 
   694  0193                     	;# 
   695  0193                     	;# 
   696  0193                     	;# 
   697  0194                     	;# 
   698  0195                     	;# 
   699  0196                     	;# 
   700  0199                     	;# 
   701  019A                     	;# 
   702  019B                     	;# 
   703  019B                     	;# 
   704  019B                     	;# 
   705  019B                     	;# 
   706  019C                     	;# 
   707  019C                     	;# 
   708  019D                     	;# 
   709  019E                     	;# 
   710  019F                     	;# 
   711  020D                     	;# 
   712  0210                     	;# 
   713  0211                     	;# 
   714  0212                     	;# 
   715  0213                     	;# 
   716  0214                     	;# 
   717  0215                     	;# 
   718  0215                     	;# 
   719  0216                     	;# 
   720  0217                     	;# 
   721  0291                     	;# 
   722  0291                     	;# 
   723  0292                     	;# 
   724  0293                     	;# 
   725  0294                     	;# 
   726  0295                     	;# 
   727  0295                     	;# 
   728  0296                     	;# 
   729  0298                     	;# 
   730  0298                     	;# 
   731  0299                     	;# 
   732  029A                     	;# 
   733  029B                     	;# 
   734  029C                     	;# 
   735  029C                     	;# 
   736  029D                     	;# 
   737  029E                     	;# 
   738  029F                     	;# 
   739  0311                     	;# 
   740  0311                     	;# 
   741  0312                     	;# 
   742  0313                     	;# 
   743  0314                     	;# 
   744  0315                     	;# 
   745  0315                     	;# 
   746  0316                     	;# 
   747  0318                     	;# 
   748  0318                     	;# 
   749  0319                     	;# 
   750  031A                     	;# 
   751  031C                     	;# 
   752  031C                     	;# 
   753  031D                     	;# 
   754  031E                     	;# 
   755  0394                     	;# 
   756  0395                     	;# 
   757  0396                     	;# 
   758  0415                     	;# 
   759  0416                     	;# 
   760  0417                     	;# 
   761  041C                     	;# 
   762  041D                     	;# 
   763  041E                     	;# 
   764  0791                     	;# 
   765  0792                     	;# 
   766  0793                     	;# 
   767  0794                     	;# 
   768  0795                     	;# 
   769  0798                     	;# 
   770  0799                     	;# 
   771  07A0                     	;# 
   772  07A1                     	;# 
   773  07A3                     	;# 
   774  07A4                     	;# 
   775  07A6                     	;# 
   776  07A7                     	;# 
   777  07A9                     	;# 
   778  07AA                     	;# 
   779  0FE4                     	;# 
   780  0FE5                     	;# 
   781  0FE6                     	;# 
   782  0FE7                     	;# 
   783  0FE8                     	;# 
   784  0FE9                     	;# 
   785  0FEA                     	;# 
   786  0FEB                     	;# 
   787  0FED                     	;# 
   788  0FEE                     	;# 
   789  0FEF                     	;# 
   790  0000                     	;# 
   791  0001                     	;# 
   792  0002                     	;# 
   793  0003                     	;# 
   794  0004                     	;# 
   795  0005                     	;# 
   796  0006                     	;# 
   797  0007                     	;# 
   798  0008                     	;# 
   799  0009                     	;# 
   800  000A                     	;# 
   801  000B                     	;# 
   802  000C                     	;# 
   803  000D                     	;# 
   804  000E                     	;# 
   805  0010                     	;# 
   806  0011                     	;# 
   807  0012                     	;# 
   808  0013                     	;# 
   809  0015                     	;# 
   810  0016                     	;# 
   811  0016                     	;# 
   812  0017                     	;# 
   813  0018                     	;# 
   814  0019                     	;# 
   815  001A                     	;# 
   816  001B                     	;# 
   817  001C                     	;# 
   818  001E                     	;# 
   819  001F                     	;# 
   820  008C                     	;# 
   821  008D                     	;# 
   822  008E                     	;# 
   823  0090                     	;# 
   824  0091                     	;# 
   825  0092                     	;# 
   826  0093                     	;# 
   827  0095                     	;# 
   828  0096                     	;# 
   829  0097                     	;# 
   830  0098                     	;# 
   831  0099                     	;# 
   832  009A                     	;# 
   833  009B                     	;# 
   834  009B                     	;# 
   835  009C                     	;# 
   836  009D                     	;# 
   837  009E                     	;# 
   838  010C                     	;# 
   839  010D                     	;# 
   840  010E                     	;# 
   841  0110                     	;# 
   842  0111                     	;# 
   843  0112                     	;# 
   844  0113                     	;# 
   845  0114                     	;# 
   846  0115                     	;# 
   847  0116                     	;# 
   848  0117                     	;# 
   849  0118                     	;# 
   850  0119                     	;# 
   851  011A                     	;# 
   852  011B                     	;# 
   853  011D                     	;# 
   854  018C                     	;# 
   855  018D                     	;# 
   856  0191                     	;# 
   857  0191                     	;# 
   858  0192                     	;# 
   859  0193                     	;# 
   860  0193                     	;# 
   861  0193                     	;# 
   862  0194                     	;# 
   863  0195                     	;# 
   864  0196                     	;# 
   865  0199                     	;# 
   866  019A                     	;# 
   867  019B                     	;# 
   868  019B                     	;# 
   869  019B                     	;# 
   870  019B                     	;# 
   871  019C                     	;# 
   872  019C                     	;# 
   873  019D                     	;# 
   874  019E                     	;# 
   875  019F                     	;# 
   876  020D                     	;# 
   877  0210                     	;# 
   878  0211                     	;# 
   879  0212                     	;# 
   880  0213                     	;# 
   881  0214                     	;# 
   882  0215                     	;# 
   883  0215                     	;# 
   884  0216                     	;# 
   885  0217                     	;# 
   886  0291                     	;# 
   887  0291                     	;# 
   888  0292                     	;# 
   889  0293                     	;# 
   890  0294                     	;# 
   891  0295                     	;# 
   892  0295                     	;# 
   893  0296                     	;# 
   894  0298                     	;# 
   895  0298                     	;# 
   896  0299                     	;# 
   897  029A                     	;# 
   898  029B                     	;# 
   899  029C                     	;# 
   900  029C                     	;# 
   901  029D                     	;# 
   902  029E                     	;# 
   903  029F                     	;# 
   904  0311                     	;# 
   905  0311                     	;# 
   906  0312                     	;# 
   907  0313                     	;# 
   908  0314                     	;# 
   909  0315                     	;# 
   910  0315                     	;# 
   911  0316                     	;# 
   912  0318                     	;# 
   913  0318                     	;# 
   914  0319                     	;# 
   915  031A                     	;# 
   916  031C                     	;# 
   917  031C                     	;# 
   918  031D                     	;# 
   919  031E                     	;# 
   920  0394                     	;# 
   921  0395                     	;# 
   922  0396                     	;# 
   923  0415                     	;# 
   924  0416                     	;# 
   925  0417                     	;# 
   926  041C                     	;# 
   927  041D                     	;# 
   928  041E                     	;# 
   929  0791                     	;# 
   930  0792                     	;# 
   931  0793                     	;# 
   932  0794                     	;# 
   933  0795                     	;# 
   934  0798                     	;# 
   935  0799                     	;# 
   936  07A0                     	;# 
   937  07A1                     	;# 
   938  07A3                     	;# 
   939  07A4                     	;# 
   940  07A6                     	;# 
   941  07A7                     	;# 
   942  07A9                     	;# 
   943  07AA                     	;# 
   944  0FE4                     	;# 
   945  0FE5                     	;# 
   946  0FE6                     	;# 
   947  0FE7                     	;# 
   948  0FE8                     	;# 
   949  0FE9                     	;# 
   950  0FEA                     	;# 
   951  0FEB                     	;# 
   952  0FED                     	;# 
   953  0FEE                     	;# 
   954  0FEF                     	;# 
   955  0000                     	;# 
   956  0001                     	;# 
   957  0002                     	;# 
   958  0003                     	;# 
   959  0004                     	;# 
   960  0005                     	;# 
   961  0006                     	;# 
   962  0007                     	;# 
   963  0008                     	;# 
   964  0009                     	;# 
   965  000A                     	;# 
   966  000B                     	;# 
   967  000C                     	;# 
   968  000D                     	;# 
   969  000E                     	;# 
   970  0010                     	;# 
   971  0011                     	;# 
   972  0012                     	;# 
   973  0013                     	;# 
   974  0015                     	;# 
   975  0016                     	;# 
   976  0016                     	;# 
   977  0017                     	;# 
   978  0018                     	;# 
   979  0019                     	;# 
   980  001A                     	;# 
   981  001B                     	;# 
   982  001C                     	;# 
   983  001E                     	;# 
   984  001F                     	;# 
   985  008C                     	;# 
   986  008D                     	;# 
   987  008E                     	;# 
   988  0090                     	;# 
   989  0091                     	;# 
   990  0092                     	;# 
   991  0093                     	;# 
   992  0095                     	;# 
   993  0096                     	;# 
   994  0097                     	;# 
   995  0098                     	;# 
   996  0099                     	;# 
   997  009A                     	;# 
   998  009B                     	;# 
   999  009B                     	;# 
  1000  009C                     	;# 
  1001  009D                     	;# 
  1002  009E                     	;# 
  1003  010C                     	;# 
  1004  010D                     	;# 
  1005  010E                     	;# 
  1006  0110                     	;# 
  1007  0111                     	;# 
  1008  0112                     	;# 
  1009  0113                     	;# 
  1010  0114                     	;# 
  1011  0115                     	;# 
  1012  0116                     	;# 
  1013  0117                     	;# 
  1014  0118                     	;# 
  1015  0119                     	;# 
  1016  011A                     	;# 
  1017  011B                     	;# 
  1018  011D                     	;# 
  1019  018C                     	;# 
  1020  018D                     	;# 
  1021  0191                     	;# 
  1022  0191                     	;# 
  1023  0192                     	;# 
  1024  0193                     	;# 
  1025  0193                     	;# 
  1026  0193                     	;# 
  1027  0194                     	;# 
  1028  0195                     	;# 
  1029  0196                     	;# 
  1030  0199                     	;# 
  1031  019A                     	;# 
  1032  019B                     	;# 
  1033  019B                     	;# 
  1034  019B                     	;# 
  1035  019B                     	;# 
  1036  019C                     	;# 
  1037  019C                     	;# 
  1038  019D                     	;# 
  1039  019E                     	;# 
  1040  019F                     	;# 
  1041  020D                     	;# 
  1042  0210                     	;# 
  1043  0211                     	;# 
  1044  0212                     	;# 
  1045  0213                     	;# 
  1046  0214                     	;# 
  1047  0215                     	;# 
  1048  0215                     	;# 
  1049  0216                     	;# 
  1050  0217                     	;# 
  1051  0291                     	;# 
  1052  0291                     	;# 
  1053  0292                     	;# 
  1054  0293                     	;# 
  1055  0294                     	;# 
  1056  0295                     	;# 
  1057  0295                     	;# 
  1058  0296                     	;# 
  1059  0298                     	;# 
  1060  0298                     	;# 
  1061  0299                     	;# 
  1062  029A                     	;# 
  1063  029B                     	;# 
  1064  029C                     	;# 
  1065  029C                     	;# 
  1066  029D                     	;# 
  1067  029E                     	;# 
  1068  029F                     	;# 
  1069  0311                     	;# 
  1070  0311                     	;# 
  1071  0312                     	;# 
  1072  0313                     	;# 
  1073  0314                     	;# 
  1074  0315                     	;# 
  1075  0315                     	;# 
  1076  0316                     	;# 
  1077  0318                     	;# 
  1078  0318                     	;# 
  1079  0319                     	;# 
  1080  031A                     	;# 
  1081  031C                     	;# 
  1082  031C                     	;# 
  1083  031D                     	;# 
  1084  031E                     	;# 
  1085  0394                     	;# 
  1086  0395                     	;# 
  1087  0396                     	;# 
  1088  0415                     	;# 
  1089  0416                     	;# 
  1090  0417                     	;# 
  1091  041C                     	;# 
  1092  041D                     	;# 
  1093  041E                     	;# 
  1094  0791                     	;# 
  1095  0792                     	;# 
  1096  0793                     	;# 
  1097  0794                     	;# 
  1098  0795                     	;# 
  1099  0798                     	;# 
  1100  0799                     	;# 
  1101  07A0                     	;# 
  1102  07A1                     	;# 
  1103  07A3                     	;# 
  1104  07A4                     	;# 
  1105  07A6                     	;# 
  1106  07A7                     	;# 
  1107  07A9                     	;# 
  1108  07AA                     	;# 
  1109  0FE4                     	;# 
  1110  0FE5                     	;# 
  1111  0FE6                     	;# 
  1112  0FE7                     	;# 
  1113  0FE8                     	;# 
  1114  0FE9                     	;# 
  1115  0FEA                     	;# 
  1116  0FEB                     	;# 
  1117  0FED                     	;# 
  1118  0FEE                     	;# 
  1119  0FEF                     	;# 
  1120  0000                     	;# 
  1121  0001                     	;# 
  1122  0002                     	;# 
  1123  0003                     	;# 
  1124  0004                     	;# 
  1125  0005                     	;# 
  1126  0006                     	;# 
  1127  0007                     	;# 
  1128  0008                     	;# 
  1129  0009                     	;# 
  1130  000A                     	;# 
  1131  000B                     	;# 
  1132  000C                     	;# 
  1133  000D                     	;# 
  1134  000E                     	;# 
  1135  0010                     	;# 
  1136  0011                     	;# 
  1137  0012                     	;# 
  1138  0013                     	;# 
  1139  0015                     	;# 
  1140  0016                     	;# 
  1141  0016                     	;# 
  1142  0017                     	;# 
  1143  0018                     	;# 
  1144  0019                     	;# 
  1145  001A                     	;# 
  1146  001B                     	;# 
  1147  001C                     	;# 
  1148  001E                     	;# 
  1149  001F                     	;# 
  1150  008C                     	;# 
  1151  008D                     	;# 
  1152  008E                     	;# 
  1153  0090                     	;# 
  1154  0091                     	;# 
  1155  0092                     	;# 
  1156  0093                     	;# 
  1157  0095                     	;# 
  1158  0096                     	;# 
  1159  0097                     	;# 
  1160  0098                     	;# 
  1161  0099                     	;# 
  1162  009A                     	;# 
  1163  009B                     	;# 
  1164  009B                     	;# 
  1165  009C                     	;# 
  1166  009D                     	;# 
  1167  009E                     	;# 
  1168  010C                     	;# 
  1169  010D                     	;# 
  1170  010E                     	;# 
  1171  0110                     	;# 
  1172  0111                     	;# 
  1173  0112                     	;# 
  1174  0113                     	;# 
  1175  0114                     	;# 
  1176  0115                     	;# 
  1177  0116                     	;# 
  1178  0117                     	;# 
  1179  0118                     	;# 
  1180  0119                     	;# 
  1181  011A                     	;# 
  1182  011B                     	;# 
  1183  011D                     	;# 
  1184  018C                     	;# 
  1185  018D                     	;# 
  1186  0191                     	;# 
  1187  0191                     	;# 
  1188  0192                     	;# 
  1189  0193                     	;# 
  1190  0193                     	;# 
  1191  0193                     	;# 
  1192  0194                     	;# 
  1193  0195                     	;# 
  1194  0196                     	;# 
  1195  0199                     	;# 
  1196  019A                     	;# 
  1197  019B                     	;# 
  1198  019B                     	;# 
  1199  019B                     	;# 
  1200  019B                     	;# 
  1201  019C                     	;# 
  1202  019C                     	;# 
  1203  019D                     	;# 
  1204  019E                     	;# 
  1205  019F                     	;# 
  1206  020D                     	;# 
  1207  0210                     	;# 
  1208  0211                     	;# 
  1209  0212                     	;# 
  1210  0213                     	;# 
  1211  0214                     	;# 
  1212  0215                     	;# 
  1213  0215                     	;# 
  1214  0216                     	;# 
  1215  0217                     	;# 
  1216  0291                     	;# 
  1217  0291                     	;# 
  1218  0292                     	;# 
  1219  0293                     	;# 
  1220  0294                     	;# 
  1221  0295                     	;# 
  1222  0295                     	;# 
  1223  0296                     	;# 
  1224  0298                     	;# 
  1225  0298                     	;# 
  1226  0299                     	;# 
  1227  029A                     	;# 
  1228  029B                     	;# 
  1229  029C                     	;# 
  1230  029C                     	;# 
  1231  029D                     	;# 
  1232  029E                     	;# 
  1233  029F                     	;# 
  1234  0311                     	;# 
  1235  0311                     	;# 
  1236  0312                     	;# 
  1237  0313                     	;# 
  1238  0314                     	;# 
  1239  0315                     	;# 
  1240  0315                     	;# 
  1241  0316                     	;# 
  1242  0318                     	;# 
  1243  0318                     	;# 
  1244  0319                     	;# 
  1245  031A                     	;# 
  1246  031C                     	;# 
  1247  031C                     	;# 
  1248  031D                     	;# 
  1249  031E                     	;# 
  1250  0394                     	;# 
  1251  0395                     	;# 
  1252  0396                     	;# 
  1253  0415                     	;# 
  1254  0416                     	;# 
  1255  0417                     	;# 
  1256  041C                     	;# 
  1257  041D                     	;# 
  1258  041E                     	;# 
  1259  0791                     	;# 
  1260  0792                     	;# 
  1261  0793                     	;# 
  1262  0794                     	;# 
  1263  0795                     	;# 
  1264  0798                     	;# 
  1265  0799                     	;# 
  1266  07A0                     	;# 
  1267  07A1                     	;# 
  1268  07A3                     	;# 
  1269  07A4                     	;# 
  1270  07A6                     	;# 
  1271  07A7                     	;# 
  1272  07A9                     	;# 
  1273  07AA                     	;# 
  1274  0FE4                     	;# 
  1275  0FE5                     	;# 
  1276  0FE6                     	;# 
  1277  0FE7                     	;# 
  1278  0FE8                     	;# 
  1279  0FE9                     	;# 
  1280  0FEA                     	;# 
  1281  0FEB                     	;# 
  1282  0FED                     	;# 
  1283  0FEE                     	;# 
  1284  0FEF                     	;# 
  1285  0000                     	;# 
  1286  0001                     	;# 
  1287  0002                     	;# 
  1288  0003                     	;# 
  1289  0004                     	;# 
  1290  0005                     	;# 
  1291  0006                     	;# 
  1292  0007                     	;# 
  1293  0008                     	;# 
  1294  0009                     	;# 
  1295  000A                     	;# 
  1296  000B                     	;# 
  1297  000C                     	;# 
  1298  000D                     	;# 
  1299  000E                     	;# 
  1300  0010                     	;# 
  1301  0011                     	;# 
  1302  0012                     	;# 
  1303  0013                     	;# 
  1304  0015                     	;# 
  1305  0016                     	;# 
  1306  0016                     	;# 
  1307  0017                     	;# 
  1308  0018                     	;# 
  1309  0019                     	;# 
  1310  001A                     	;# 
  1311  001B                     	;# 
  1312  001C                     	;# 
  1313  001E                     	;# 
  1314  001F                     	;# 
  1315  008C                     	;# 
  1316  008D                     	;# 
  1317  008E                     	;# 
  1318  0090                     	;# 
  1319  0091                     	;# 
  1320  0092                     	;# 
  1321  0093                     	;# 
  1322  0095                     	;# 
  1323  0096                     	;# 
  1324  0097                     	;# 
  1325  0098                     	;# 
  1326  0099                     	;# 
  1327  009A                     	;# 
  1328  009B                     	;# 
  1329  009B                     	;# 
  1330  009C                     	;# 
  1331  009D                     	;# 
  1332  009E                     	;# 
  1333  010C                     	;# 
  1334  010D                     	;# 
  1335  010E                     	;# 
  1336  0110                     	;# 
  1337  0111                     	;# 
  1338  0112                     	;# 
  1339  0113                     	;# 
  1340  0114                     	;# 
  1341  0115                     	;# 
  1342  0116                     	;# 
  1343  0117                     	;# 
  1344  0118                     	;# 
  1345  0119                     	;# 
  1346  011A                     	;# 
  1347  011B                     	;# 
  1348  011D                     	;# 
  1349  018C                     	;# 
  1350  018D                     	;# 
  1351  0191                     	;# 
  1352  0191                     	;# 
  1353  0192                     	;# 
  1354  0193                     	;# 
  1355  0193                     	;# 
  1356  0193                     	;# 
  1357  0194                     	;# 
  1358  0195                     	;# 
  1359  0196                     	;# 
  1360  0199                     	;# 
  1361  019A                     	;# 
  1362  019B                     	;# 
  1363  019B                     	;# 
  1364  019B                     	;# 
  1365  019B                     	;# 
  1366  019C                     	;# 
  1367  019C                     	;# 
  1368  019D                     	;# 
  1369  019E                     	;# 
  1370  019F                     	;# 
  1371  020D                     	;# 
  1372  0210                     	;# 
  1373  0211                     	;# 
  1374  0212                     	;# 
  1375  0213                     	;# 
  1376  0214                     	;# 
  1377  0215                     	;# 
  1378  0215                     	;# 
  1379  0216                     	;# 
  1380  0217                     	;# 
  1381  0291                     	;# 
  1382  0291                     	;# 
  1383  0292                     	;# 
  1384  0293                     	;# 
  1385  0294                     	;# 
  1386  0295                     	;# 
  1387  0295                     	;# 
  1388  0296                     	;# 
  1389  0298                     	;# 
  1390  0298                     	;# 
  1391  0299                     	;# 
  1392  029A                     	;# 
  1393  029B                     	;# 
  1394  029C                     	;# 
  1395  029C                     	;# 
  1396  029D                     	;# 
  1397  029E                     	;# 
  1398  029F                     	;# 
  1399  0311                     	;# 
  1400  0311                     	;# 
  1401  0312                     	;# 
  1402  0313                     	;# 
  1403  0314                     	;# 
  1404  0315                     	;# 
  1405  0315                     	;# 
  1406  0316                     	;# 
  1407  0318                     	;# 
  1408  0318                     	;# 
  1409  0319                     	;# 
  1410  031A                     	;# 
  1411  031C                     	;# 
  1412  031C                     	;# 
  1413  031D                     	;# 
  1414  031E                     	;# 
  1415  0394                     	;# 
  1416  0395                     	;# 
  1417  0396                     	;# 
  1418  0415                     	;# 
  1419  0416                     	;# 
  1420  0417                     	;# 
  1421  041C                     	;# 
  1422  041D                     	;# 
  1423  041E                     	;# 
  1424  0791                     	;# 
  1425  0792                     	;# 
  1426  0793                     	;# 
  1427  0794                     	;# 
  1428  0795                     	;# 
  1429  0798                     	;# 
  1430  0799                     	;# 
  1431  07A0                     	;# 
  1432  07A1                     	;# 
  1433  07A3                     	;# 
  1434  07A4                     	;# 
  1435  07A6                     	;# 
  1436  07A7                     	;# 
  1437  07A9                     	;# 
  1438  07AA                     	;# 
  1439  0FE4                     	;# 
  1440  0FE5                     	;# 
  1441  0FE6                     	;# 
  1442  0FE7                     	;# 
  1443  0FE8                     	;# 
  1444  0FE9                     	;# 
  1445  0FEA                     	;# 
  1446  0FEB                     	;# 
  1447  0FED                     	;# 
  1448  0FEE                     	;# 
  1449  0FEF                     	;# 
  1450  0000                     	;# 
  1451  0001                     	;# 
  1452  0002                     	;# 
  1453  0003                     	;# 
  1454  0004                     	;# 
  1455  0005                     	;# 
  1456  0006                     	;# 
  1457  0007                     	;# 
  1458  0008                     	;# 
  1459  0009                     	;# 
  1460  000A                     	;# 
  1461  000B                     	;# 
  1462  000C                     	;# 
  1463  000D                     	;# 
  1464  000E                     	;# 
  1465  0010                     	;# 
  1466  0011                     	;# 
  1467  0012                     	;# 
  1468  0013                     	;# 
  1469  0015                     	;# 
  1470  0016                     	;# 
  1471  0016                     	;# 
  1472  0017                     	;# 
  1473  0018                     	;# 
  1474  0019                     	;# 
  1475  001A                     	;# 
  1476  001B                     	;# 
  1477  001C                     	;# 
  1478  001E                     	;# 
  1479  001F                     	;# 
  1480  008C                     	;# 
  1481  008D                     	;# 
  1482  008E                     	;# 
  1483  0090                     	;# 
  1484  0091                     	;# 
  1485  0092                     	;# 
  1486  0093                     	;# 
  1487  0095                     	;# 
  1488  0096                     	;# 
  1489  0097                     	;# 
  1490  0098                     	;# 
  1491  0099                     	;# 
  1492  009A                     	;# 
  1493  009B                     	;# 
  1494  009B                     	;# 
  1495  009C                     	;# 
  1496  009D                     	;# 
  1497  009E                     	;# 
  1498  010C                     	;# 
  1499  010D                     	;# 
  1500  010E                     	;# 
  1501  0110                     	;# 
  1502  0111                     	;# 
  1503  0112                     	;# 
  1504  0113                     	;# 
  1505  0114                     	;# 
  1506  0115                     	;# 
  1507  0116                     	;# 
  1508  0117                     	;# 
  1509  0118                     	;# 
  1510  0119                     	;# 
  1511  011A                     	;# 
  1512  011B                     	;# 
  1513  011D                     	;# 
  1514  018C                     	;# 
  1515  018D                     	;# 
  1516  0191                     	;# 
  1517  0191                     	;# 
  1518  0192                     	;# 
  1519  0193                     	;# 
  1520  0193                     	;# 
  1521  0193                     	;# 
  1522  0194                     	;# 
  1523  0195                     	;# 
  1524  0196                     	;# 
  1525  0199                     	;# 
  1526  019A                     	;# 
  1527  019B                     	;# 
  1528  019B                     	;# 
  1529  019B                     	;# 
  1530  019B                     	;# 
  1531  019C                     	;# 
  1532  019C                     	;# 
  1533  019D                     	;# 
  1534  019E                     	;# 
  1535  019F                     	;# 
  1536  020D                     	;# 
  1537  0210                     	;# 
  1538  0211                     	;# 
  1539  0212                     	;# 
  1540  0213                     	;# 
  1541  0214                     	;# 
  1542  0215                     	;# 
  1543  0215                     	;# 
  1544  0216                     	;# 
  1545  0217                     	;# 
  1546  0291                     	;# 
  1547  0291                     	;# 
  1548  0292                     	;# 
  1549  0293                     	;# 
  1550  0294                     	;# 
  1551  0295                     	;# 
  1552  0295                     	;# 
  1553  0296                     	;# 
  1554  0298                     	;# 
  1555  0298                     	;# 
  1556  0299                     	;# 
  1557  029A                     	;# 
  1558  029B                     	;# 
  1559  029C                     	;# 
  1560  029C                     	;# 
  1561  029D                     	;# 
  1562  029E                     	;# 
  1563  029F                     	;# 
  1564  0311                     	;# 
  1565  0311                     	;# 
  1566  0312                     	;# 
  1567  0313                     	;# 
  1568  0314                     	;# 
  1569  0315                     	;# 
  1570  0315                     	;# 
  1571  0316                     	;# 
  1572  0318                     	;# 
  1573  0318                     	;# 
  1574  0319                     	;# 
  1575  031A                     	;# 
  1576  031C                     	;# 
  1577  031C                     	;# 
  1578  031D                     	;# 
  1579  031E                     	;# 
  1580  0394                     	;# 
  1581  0395                     	;# 
  1582  0396                     	;# 
  1583  0415                     	;# 
  1584  0416                     	;# 
  1585  0417                     	;# 
  1586  041C                     	;# 
  1587  041D                     	;# 
  1588  041E                     	;# 
  1589  0791                     	;# 
  1590  0792                     	;# 
  1591  0793                     	;# 
  1592  0794                     	;# 
  1593  0795                     	;# 
  1594  0798                     	;# 
  1595  0799                     	;# 
  1596  07A0                     	;# 
  1597  07A1                     	;# 
  1598  07A3                     	;# 
  1599  07A4                     	;# 
  1600  07A6                     	;# 
  1601  07A7                     	;# 
  1602  07A9                     	;# 
  1603  07AA                     	;# 
  1604  0FE4                     	;# 
  1605  0FE5                     	;# 
  1606  0FE6                     	;# 
  1607  0FE7                     	;# 
  1608  0FE8                     	;# 
  1609  0FE9                     	;# 
  1610  0FEA                     	;# 
  1611  0FEB                     	;# 
  1612  0FED                     	;# 
  1613  0FEE                     	;# 
  1614  0FEF                     	;# 
  1615                           
  1616                           	psect	idataBANK2
  1617  10B8                     __pidataBANK2:
  1618                           
  1619                           ;initializer for main@F2847
  1620  10B8  3402               	retlw	2
  1621  10B9  3404               	retlw	4
  1622  10BA  3400               	retlw	0
  1623  10BB  3400               	retlw	0
  1624  10BC  3400               	retlw	0
  1625  10BD  3400               	retlw	0
  1626  10BE  3400               	retlw	0
  1627  10BF  3400               	retlw	0
  1628  10C0  3400               	retlw	0
  1629  10C1  3400               	retlw	0
  1630  10C2  34F4               	retlw	244
  1631  10C3  3401               	retlw	1
  1632                           
  1633                           ;initializer for _segdata
  1634  10C4  343F               	retlw	63
  1635  10C5  3406               	retlw	6
  1636  10C6  345B               	retlw	91
  1637  10C7  344F               	retlw	79
  1638  10C8  3466               	retlw	102
  1639  10C9  346D               	retlw	109
  1640  10CA  347D               	retlw	125
  1641  10CB  3407               	retlw	7
  1642  10CC  347F               	retlw	127
  1643  10CD  346F               	retlw	111
  1644                           
  1645                           ;initializer for lcd_set_cursor@F2781
  1646  10CE  3400               	retlw	0
  1647  10CF  3440               	retlw	64
  1648  10D0  3414               	retlw	20
  1649  10D1  3454               	retlw	84
  1650                           
  1651                           ;initializer for print_digit@F2820
  1652  10D2  34FF               	retlw	255
  1653  10D3  34FF               	retlw	255
  1654  10D4  34FF               	retlw	255
  1655  10D5  34FF               	retlw	255
  1656                           
  1657                           ;initializer for main@F2849
  1658  10D6  3427               	retlw	39
  1659  10D7  3410               	retlw	16
  1660  10D8  3402               	retlw	2
  1661  10D9  3400               	retlw	0
  1662                           
  1663                           ;initializer for main@F2851
  1664  10DA  3408               	retlw	8
  1665  10DB  3410               	retlw	16
  1666  000D                     _PORTBbits	set	13
  1667  0075                     _RC5	set	117
  1668  0076                     _RC6	set	118
  1669  0077                     _RC7	set	119
  1670  0097                     _WDTCON	set	151
  1671  0098                     _OSCTUNE	set	152
  1672  0099                     _OSCCON	set	153
  1673  0095                     _OPTION_REGbits	set	149
  1674  008E                     _TRISC	set	142
  1675  008D                     _TRISB	set	141
  1676  008C                     _TRISA	set	140
  1677  0090                     _TRISE	set	144
  1678  0116                     _BORCON	set	278
  1679  011D                     _APFCON	set	285
  1680  010E                     _LATC	set	270
  1681  010D                     _LATB	set	269
  1682  010C                     _LATA	set	268
  1683  0110                     _LATE	set	272
  1684  018C                     _ANSELA	set	396
  1685  018D                     _ANSELB	set	397
  1686  0215                     _SSPCON1	set	533
  1687  0212                     _SSPADD	set	530
  1688  0215                     _SSPCON1bits	set	533
  1689  0214                     _SSPSTATbits	set	532
  1690  0211                     _SSPBUF	set	529
  1691  0216                     _SSPCON2bits	set	534
  1692  0214                     _SSPSTAT	set	532
  1693  0216                     _SSPCON2	set	534
  1694  020D                     _WPUB	set	525
  1695  0210                     _WPUE	set	528
  1696                           
  1697                           	psect	stringtext1
  1698  2000                     __pstringtext1:
  1699  2000                     STR_3:
  1700  2000  344C               	retlw	76	;'L'
  1701  2001  346F               	retlw	111	;'o'
  1702  2002  3461               	retlw	97	;'a'
  1703  2003  3464               	retlw	100	;'d'
  1704  2004  3420               	retlw	32	;' '
  1705  2005  3463               	retlw	99	;'c'
  1706  2006  3465               	retlw	101	;'e'
  1707  2007  346C               	retlw	108	;'l'
  1708  2008  346C               	retlw	108	;'l'
  1709  2009  3420               	retlw	32	;' '
  1710  200A  3455               	retlw	85	;'U'
  1711  200B  346E               	retlw	110	;'n'
  1712  200C  3469               	retlw	105	;'i'
  1713  200D  3474               	retlw	116	;'t'
  1714  200E  3400               	retlw	0
  1715                           
  1716                           	psect	stringtext2
  1717  200F                     __pstringtext2:
  1718  200F                     STR_7:
  1719  200F  346D               	retlw	109	;'m'
  1720  2010  3461               	retlw	97	;'a'
  1721  2011  3478               	retlw	120	;'x'
  1722  2012  3420               	retlw	32	;' '
  1723  2013  3467               	retlw	103	;'g'
  1724  2014  3472               	retlw	114	;'r'
  1725  2015  3461               	retlw	97	;'a'
  1726  2016  346D               	retlw	109	;'m'
  1727  2017  3420               	retlw	32	;' '
  1728  2018  3425               	retlw	37	;'%'
  1729  2019  3464               	retlw	100	;'d'
  1730  201A  3400               	retlw	0
  1731                           
  1732                           	psect	stringtext3
  1733  201B                     __pstringtext3:
  1734  201B                     STR_2:
  1735  201B  3449               	retlw	73	;'I'
  1736  201C  346E               	retlw	110	;'n'
  1737  201D  3469               	retlw	105	;'i'
  1738  201E  3474               	retlw	116	;'t'
  1739  201F  3469               	retlw	105	;'i'
  1740  2020  3461               	retlw	97	;'a'
  1741  2021  346C               	retlw	108	;'l'
  1742  2022  3469               	retlw	105	;'i'
  1743  2023  347A               	retlw	122	;'z'
  1744  2024  3465               	retlw	101	;'e'
  1745  2025  3400               	retlw	0
  1746                           
  1747                           	psect	stringtext4
  1748  2026                     __pstringtext4:
  1749  2026                     STR_5:
  1750  2026  3425               	retlw	37	;'%'
  1751  2027  3464               	retlw	100	;'d'
  1752  2028  3467               	retlw	103	;'g'
  1753  2029  3420               	retlw	32	;' '
  1754  202A  342F               	retlw	47	;'/'
  1755  202B  3420               	retlw	32	;' '
  1756  202C  3425               	retlw	37	;'%'
  1757  202D  3464               	retlw	100	;'d'
  1758  202E  3467               	retlw	103	;'g'
  1759  202F  3400               	retlw	0
  1760                           
  1761                           	psect	stringtext5
  1762  2030                     __pstringtext5:
  1763  2030                     STR_4:
  1764  2030  3425               	retlw	37	;'%'
  1765  2031  346C               	retlw	108	;'l'
  1766  2032  3475               	retlw	117	;'u'
  1767  2033  3420               	retlw	32	;' '
  1768  2034  3476               	retlw	118	;'v'
  1769  2035  3461               	retlw	97	;'a'
  1770  2036  346C               	retlw	108	;'l'
  1771  2037  3400               	retlw	0
  1772                           
  1773                           	psect	stringtext6
  1774  2038                     __pstringtext6:
  1775  2038                     STR_6:
  1776  2038  3425               	retlw	37	;'%'
  1777  2039  3464               	retlw	100	;'d'
  1778  203A  3420               	retlw	32	;' '
  1779  203B  3425               	retlw	37	;'%'
  1780  203C  3425               	retlw	37	;'%'
  1781  203D  3400               	retlw	0
  1782                           
  1783                           	psect	stringtext7
  1784  203E                     __pstringtext7:
  1785  203E                     STR_8:
  1786  203E  346C               	retlw	108	;'l'
  1787  203F  3464               	retlw	100	;'d'
  1788  2040  3400               	retlw	0
  1789                           
  1790                           	psect	stringtext8
  1791  2041                     __pstringtext8:
  1792  2041                     STR_12:
  1793  2041  346C               	retlw	108	;'l'
  1794  2042  3469               	retlw	105	;'i'
  1795  2043  3400               	retlw	0
  1796                           
  1797                           	psect	stringtext9
  1798  2044                     __pstringtext9:
  1799  2044                     STR_17:
  1800  2044  346C               	retlw	108	;'l'
  1801  2045  3475               	retlw	117	;'u'
  1802  2046  3400               	retlw	0
  1803                           
  1804                           	psect	stringtext10
  1805  2047                     __pstringtext10:
  1806  2047                     STR_1:
  1807  2047  3420               	retlw	32	;' '
  1808  2048  3400               	retlw	0
  1809                           
  1810                           	psect	stringtext11
  1811  0000                     __pstringtext11:
  1812  203E                     
  1813                           	psect	cinit
  1814  07E1                     start_initialization:	
  1815                           ; #config settings
  1816                           
  1817  07E1                     __initialization:
  1818                           
  1819                           ; Initialize objects allocated to BANK2
  1820  07E1  30B8               	movlw	low __pidataBANK2
  1821  07E2  0084               	movwf	4
  1822  07E3  3090               	movlw	(high __pidataBANK2)| (0+128)
  1823  07E4  0085               	movwf	5
  1824  07E5  3020               	movlw	low __pdataBANK2
  1825  07E6  0086               	movwf	6
  1826  07E7  3001               	movlw	high __pdataBANK2
  1827  07E8  0087               	movwf	7
  1828  07E9  3024               	movlw	36
  1829  07EA  319E  26C8  3187   	fcall	init_ram
  1830                           
  1831                           ; Clear objects allocated to BANK2
  1832  07ED  3044               	movlw	low __pbssBANK2
  1833  07EE  0084               	movwf	4
  1834  07EF  3001               	movlw	high __pbssBANK2
  1835  07F0  0085               	movwf	5
  1836  07F1  3013               	movlw	19
  1837  07F2  319E  26C2  3187   	fcall	clear_ram0
  1838                           
  1839                           ; Clear objects allocated to BANK3
  1840  07F5  30A0               	movlw	low __pbssBANK3
  1841  07F6  0084               	movwf	4
  1842  07F7  3001               	movlw	high __pbssBANK3
  1843  07F8  0085               	movwf	5
  1844  07F9  3020               	movlw	32
  1845  07FA  319E  26C2  3187   	fcall	clear_ram0
  1846  07FD                     end_of_initialization:	
  1847                           ;End of C runtime variable initialization code
  1848                           
  1849  07FD                     __end_of__initialization:
  1850  07FD  0020               	movlb	0
  1851  07FE  318B  2B89         	ljmp	_main	;jump to C main() function
  1852                           
  1853                           	psect	bssBANK2
  1854  0144                     __pbssBANK2:
  1855  0144                     main@F2853:
  1856  0144                     	ds	6
  1857  014A                     clear_segment@F2810:
  1858  014A                     	ds	4
  1859  014E                     _nout:
  1860  014E                     	ds	2
  1861  0150                     _width:
  1862  0150                     	ds	2
  1863  0152                     _prec:
  1864  0152                     	ds	2
  1865  0154                     _flags:
  1866  0154                     	ds	2
  1867  0156                     _m_brightness:
  1868  0156                     	ds	1
  1869                           
  1870                           	psect	dataBANK2
  1871  0120                     __pdataBANK2:
  1872  0120                     main@F2847:
  1873  0120                     	ds	12
  1874  012C                     _segdata:
  1875  012C                     	ds	10
  1876  0136                     lcd_set_cursor@F2781:
  1877  0136                     	ds	4
  1878  013A                     print_digit@F2820:
  1879  013A                     	ds	4
  1880  013E                     main@F2849:
  1881  013E                     	ds	4
  1882  0142                     main@F2851:
  1883  0142                     	ds	2
  1884                           
  1885                           	psect	bssBANK3
  1886  01A0                     __pbssBANK3:
  1887  01A0                     _dbuf:
  1888  01A0                     	ds	32
  1889                           
  1890                           	psect	inittext
  1891  1EC8                     init_ram:
  1892  1EC8  00FE               	movwf	btemp
  1893  1EC9                     initloop:
  1894  1EC9  0012               	moviw fsr0++
  1895  1ECA  001E               	movwi fsr1++
  1896  1ECB  0BFE               	decfsz	btemp,f
  1897  1ECC  2EC9               	goto	initloop
  1898  1ECD  3400               	retlw	0
  1899                           
  1900                           	psect	clrtext
  1901  1EC2                     clear_ram0:	
  1902                           ;	Called with FSR0 containing the base address, and
  1903                           ;	WREG with the size to clear
  1904                           
  1905  1EC2  0064               	clrwdt	;clear the watchdog before getting into this loop
  1906  1EC3                     clrloop0:
  1907  1EC3  0180               	clrf	0	;clear RAM location pointed to by FSR
  1908  1EC4  3101               	addfsr 0,1
  1909  1EC5  0B89               	decfsz	9,f	;Have we reached the end of clearing yet?
  1910  1EC6  2EC3               	goto	clrloop0	;have we reached the end yet?
  1911  1EC7  3400               	retlw	0	;all done for this memory range, return
  1912                           
  1913                           	psect	cstackBANK1
  1914  00A0                     __pcstackBANK1:
  1915  00A0                     ??_calc_percentage:
  1916  00A0                     ??_vfprintf:	
  1917                           ; 1 bytes @ 0x0
  1918                           
  1919                           
  1920                           ; 1 bytes @ 0x0
  1921  00A0                     	ds	2
  1922  00A2                     vfprintf@fp:
  1923                           
  1924                           ; 1 bytes @ 0x2
  1925  00A2                     	ds	1
  1926  00A3                     vfprintf@cfmt:
  1927                           
  1928                           ; 2 bytes @ 0x3
  1929  00A3                     	ds	2
  1930  00A5                     ?_sprintf:
  1931  00A5                     sprintf@fmt:	
  1932                           ; 2 bytes @ 0x5
  1933                           
  1934                           
  1935                           ; 2 bytes @ 0x5
  1936  00A5                     	ds	6
  1937  00AB                     ??_sprintf:
  1938                           
  1939                           ; 1 bytes @ 0xB
  1940  00AB                     	ds	1
  1941  00AC                     sprintf@ap:
  1942                           
  1943                           ; 1 bytes @ 0xC
  1944  00AC                     	ds	1
  1945  00AD                     sprintf@s:
  1946                           
  1947                           ; 1 bytes @ 0xD
  1948  00AD                     	ds	1
  1949  00AE                     sprintf@f:
  1950                           
  1951                           ; 5 bytes @ 0xE
  1952  00AE                     	ds	5
  1953  00B3                     ??_initialize:
  1954  00B3                     ??_print_gram:	
  1955                           ; 1 bytes @ 0x13
  1956                           
  1957  00B3                     ?_set_max_gram:	
  1958                           ; 1 bytes @ 0x13
  1959                           
  1960  00B3                     set_max_gram@max_gram:	
  1961                           ; 1 bytes @ 0x13
  1962                           
  1963                           
  1964                           ; 2 bytes @ 0x13
  1965  00B3                     	ds	1
  1966  00B4                     initialize@valstr:
  1967                           
  1968                           ; 16 bytes @ 0x14
  1969  00B4                     	ds	1
  1970  00B5                     print_gram@row1:
  1971  00B5                     set_max_gram@valstr:	
  1972                           ; 16 bytes @ 0x15
  1973                           
  1974                           
  1975                           ; 16 bytes @ 0x15
  1976  00B5                     	ds	15
  1977  00C4                     initialize@p:
  1978                           
  1979                           ; 1 bytes @ 0x24
  1980  00C4                     	ds	1
  1981  00C5                     set_max_gram@p:
  1982  00C5                     print_gram@row2:	
  1983                           ; 1 bytes @ 0x25
  1984                           
  1985                           
  1986                           ; 16 bytes @ 0x25
  1987  00C5                     	ds	16
  1988  00D5                     print_gram@p:
  1989                           
  1990                           ; 1 bytes @ 0x35
  1991  00D5                     	ds	1
  1992  00D6                     ??_main:
  1993                           
  1994                           ; 1 bytes @ 0x36
  1995  00D6                     	ds	2
  1996  00D8                     main@lcd:
  1997                           
  1998                           ; 4 bytes @ 0x38
  1999  00D8                     	ds	4
  2000  00DC                     main@tm1637:
  2001                           
  2002                           ; 2 bytes @ 0x3C
  2003  00DC                     	ds	2
  2004  00DE                     main@loadcell:
  2005                           
  2006                           ; 12 bytes @ 0x3E
  2007  00DE                     	ds	12
  2008  00EA                     main@drink:
  2009                           
  2010                           ; 6 bytes @ 0x4A
  2011  00EA                     	ds	6
  2012                           
  2013                           	psect	cstackCOMMON
  2014  0070                     __pcstackCOMMON:
  2015  0070                     ?_OSCILLATOR_Initialize:
  2016  0070                     ??_OSCILLATOR_Initialize:	
  2017                           ; 1 bytes @ 0x0
  2018                           
  2019  0070                     ?_WDT_Initialize:	
  2020                           ; 1 bytes @ 0x0
  2021                           
  2022  0070                     ??_WDT_Initialize:	
  2023                           ; 1 bytes @ 0x0
  2024                           
  2025  0070                     ?_initialize:	
  2026                           ; 1 bytes @ 0x0
  2027                           
  2028  0070                     ?_calc_percentage:	
  2029                           ; 1 bytes @ 0x0
  2030                           
  2031  0070                     ?_print_gram:	
  2032                           ; 1 bytes @ 0x0
  2033                           
  2034  0070                     ?_putch:	
  2035                           ; 1 bytes @ 0x0
  2036                           
  2037  0070                     ??_putch:	
  2038                           ; 1 bytes @ 0x0
  2039                           
  2040  0070                     ?_PIN_MANAGER_Initialize:	
  2041                           ; 1 bytes @ 0x0
  2042                           
  2043  0070                     ??_PIN_MANAGER_Initialize:	
  2044                           ; 1 bytes @ 0x0
  2045                           
  2046  0070                     ?_SYSTEM_Initialize:	
  2047                           ; 1 bytes @ 0x0
  2048                           
  2049  0070                     ??_SYSTEM_Initialize:	
  2050                           ; 1 bytes @ 0x0
  2051                           
  2052  0070                     ?_i2c_wait:	
  2053                           ; 1 bytes @ 0x0
  2054                           
  2055  0070                     ??_i2c_wait:	
  2056                           ; 1 bytes @ 0x0
  2057                           
  2058  0070                     ?_i2c_start:	
  2059                           ; 1 bytes @ 0x0
  2060                           
  2061  0070                     ??_i2c_start:	
  2062                           ; 1 bytes @ 0x0
  2063                           
  2064  0070                     ?_i2c_stop:	
  2065                           ; 1 bytes @ 0x0
  2066                           
  2067  0070                     ??_i2c_stop:	
  2068                           ; 1 bytes @ 0x0
  2069                           
  2070  0070                     ?_i2c_write:	
  2071                           ; 1 bytes @ 0x0
  2072                           
  2073  0070                     ??_i2c_write:	
  2074                           ; 1 bytes @ 0x0
  2075                           
  2076  0070                     ?_main:	
  2077                           ; 1 bytes @ 0x0
  2078                           
  2079  0070                     ?_CLK_SET_OUTPUT:	
  2080                           ; 1 bytes @ 0x0
  2081                           
  2082  0070                     ??_CLK_SET_OUTPUT:	
  2083                           ; 1 bytes @ 0x0
  2084                           
  2085  0070                     ?_CLK_SET_HIGH:	
  2086                           ; 1 bytes @ 0x0
  2087                           
  2088  0070                     ??_CLK_SET_HIGH:	
  2089                           ; 1 bytes @ 0x0
  2090                           
  2091  0070                     ?_CLK_SET_LOW:	
  2092                           ; 1 bytes @ 0x0
  2093                           
  2094  0070                     ??_CLK_SET_LOW:	
  2095                           ; 1 bytes @ 0x0
  2096                           
  2097  0070                     ?_DIO_SET_OUTPUT:	
  2098                           ; 1 bytes @ 0x0
  2099                           
  2100  0070                     ??_DIO_SET_OUTPUT:	
  2101                           ; 1 bytes @ 0x0
  2102                           
  2103  0070                     ?_DIO_SET_INPUT:	
  2104                           ; 1 bytes @ 0x0
  2105                           
  2106  0070                     ??_DIO_SET_INPUT:	
  2107                           ; 1 bytes @ 0x0
  2108                           
  2109  0070                     ?_DIO_SET_HIGH:	
  2110                           ; 1 bytes @ 0x0
  2111                           
  2112  0070                     ??_DIO_SET_HIGH:	
  2113                           ; 1 bytes @ 0x0
  2114                           
  2115  0070                     ?_DIO_SET_LOW:	
  2116                           ; 1 bytes @ 0x0
  2117                           
  2118  0070                     ??_DIO_SET_LOW:	
  2119                           ; 1 bytes @ 0x0
  2120                           
  2121  0070                     ?_start_segment:	
  2122                           ; 1 bytes @ 0x0
  2123                           
  2124  0070                     ?_stop_segment:	
  2125                           ; 1 bytes @ 0x0
  2126                           
  2127  0070                     ?_get_DIO_PIN_value:	
  2128                           ; 1 bytes @ 0x0
  2129                           
  2130  0070                     ??_get_DIO_PIN_value:	
  2131                           ; 1 bytes @ 0x0
  2132                           
  2133  0070                     ?_set_brigthness:	
  2134                           ; 1 bytes @ 0x0
  2135                           
  2136  0070                     ?_initialize_digit:	
  2137                           ; 1 bytes @ 0x0
  2138                           
  2139  0070                     ?_set_CELL_CLK_LOW:	
  2140                           ; 1 bytes @ 0x0
  2141                           
  2142  0070                     ??_set_CELL_CLK_LOW:	
  2143                           ; 1 bytes @ 0x0
  2144                           
  2145  0070                     ?_set_CELL_CLK_HIGH:	
  2146                           ; 1 bytes @ 0x0
  2147                           
  2148  0070                     ??_set_CELL_CLK_HIGH:	
  2149                           ; 1 bytes @ 0x0
  2150                           
  2151  0070                     ?_scale_convert_gram:	
  2152                           ; 1 bytes @ 0x0
  2153                           
  2154  0070                     ?_lcd_init:	
  2155                           ; 1 bytes @ 0x0
  2156                           
  2157  0070                     ?_lcd_backlight:	
  2158                           ; 1 bytes @ 0x0
  2159                           
  2160  0070                     ?_lcd_clear:	
  2161                           ; 1 bytes @ 0x0
  2162                           
  2163  0070                     ??___aodiv:	
  2164                           ; 1 bytes @ 0x0
  2165                           
  2166  0070                     ??___aomod:	
  2167                           ; 1 bytes @ 0x0
  2168                           
  2169  0070                     ??___lodiv:	
  2170                           ; 1 bytes @ 0x0
  2171                           
  2172  0070                     ??___lomod:	
  2173                           ; 1 bytes @ 0x0
  2174                           
  2175  0070                     ?__Umul8_16:	
  2176                           ; 1 bytes @ 0x0
  2177                           
  2178  0070                     ?_fputc:	
  2179                           ; 2 bytes @ 0x0
  2180                           
  2181  0070                     ?_strlen:	
  2182                           ; 2 bytes @ 0x0
  2183                           
  2184  0070                     ?_strncmp:	
  2185                           ; 2 bytes @ 0x0
  2186                           
  2187  0070                     ?_get_CELL_DAT_VAL:	
  2188                           ; 2 bytes @ 0x0
  2189                           
  2190  0070                     ?___awdiv:	
  2191                           ; 2 bytes @ 0x0
  2192                           
  2193  0070                     ?___awmod:	
  2194                           ; 2 bytes @ 0x0
  2195                           
  2196  0070                     ?___lldiv:	
  2197                           ; 2 bytes @ 0x0
  2198                           
  2199  0070                     ?___xxtofl:	
  2200                           ; 4 bytes @ 0x0
  2201                           
  2202  0070                     i2c_write@data:	
  2203                           ; 4 bytes @ 0x0
  2204                           
  2205  0070                     set_brigthness@brightness:	
  2206                           ; 1 bytes @ 0x0
  2207                           
  2208  0070                     __Umul8_16@multiplicand:	
  2209                           ; 1 bytes @ 0x0
  2210                           
  2211  0070                     putch@c:	
  2212                           ; 1 bytes @ 0x0
  2213                           
  2214  0070                     ___awdiv@divisor:	
  2215                           ; 1 bytes @ 0x0
  2216                           
  2217  0070                     ___awmod@divisor:	
  2218                           ; 2 bytes @ 0x0
  2219                           
  2220  0070                     fputc@c:	
  2221                           ; 2 bytes @ 0x0
  2222                           
  2223  0070                     strncmp@_l:	
  2224                           ; 2 bytes @ 0x0
  2225                           
  2226  0070                     ___lldiv@divisor:	
  2227                           ; 2 bytes @ 0x0
  2228                           
  2229  0070                     ___xxtofl@val:	
  2230                           ; 4 bytes @ 0x0
  2231                           
  2232                           
  2233                           ; 4 bytes @ 0x0
  2234  0070                     	ds	1
  2235  0071                     ?_lcd_cmd:
  2236  0071                     CLK_SET_OUTPUT@p:	
  2237                           ; 1 bytes @ 0x1
  2238                           
  2239  0071                     CLK_SET_HIGH@p:	
  2240                           ; 1 bytes @ 0x1
  2241                           
  2242  0071                     CLK_SET_LOW@p:	
  2243                           ; 1 bytes @ 0x1
  2244                           
  2245  0071                     DIO_SET_OUTPUT@p:	
  2246                           ; 1 bytes @ 0x1
  2247                           
  2248  0071                     DIO_SET_INPUT@p:	
  2249                           ; 1 bytes @ 0x1
  2250                           
  2251  0071                     DIO_SET_HIGH@p:	
  2252                           ; 1 bytes @ 0x1
  2253                           
  2254  0071                     DIO_SET_LOW@p:	
  2255                           ; 1 bytes @ 0x1
  2256                           
  2257  0071                     get_DIO_PIN_value@p:	
  2258                           ; 1 bytes @ 0x1
  2259                           
  2260  0071                     set_brigthness@on:	
  2261                           ; 1 bytes @ 0x1
  2262                           
  2263  0071                     set_CELL_CLK_LOW@p:	
  2264                           ; 1 bytes @ 0x1
  2265                           
  2266  0071                     set_CELL_CLK_HIGH@p:	
  2267                           ; 1 bytes @ 0x1
  2268                           
  2269  0071                     lcd_cmd@cmd:	
  2270                           ; 1 bytes @ 0x1
  2271                           
  2272  0071                     ___aodiv@counter:	
  2273                           ; 1 bytes @ 0x1
  2274                           
  2275  0071                     ___aomod@counter:	
  2276                           ; 1 bytes @ 0x1
  2277                           
  2278  0071                     ___lomod@counter:	
  2279                           ; 1 bytes @ 0x1
  2280                           
  2281  0071                     ___lodiv@quotient:	
  2282                           ; 1 bytes @ 0x1
  2283                           
  2284                           
  2285                           ; 8 bytes @ 0x1
  2286  0071                     	ds	1
  2287  0072                     ??__Umul8_16:
  2288  0072                     ??_strlen:	
  2289                           ; 1 bytes @ 0x2
  2290                           
  2291  0072                     ??_start_segment:	
  2292                           ; 1 bytes @ 0x2
  2293                           
  2294  0072                     ??_stop_segment:	
  2295                           ; 1 bytes @ 0x2
  2296                           
  2297  0072                     ?_write_byte:	
  2298                           ; 1 bytes @ 0x2
  2299                           
  2300  0072                     ??_set_brigthness:	
  2301                           ; 1 bytes @ 0x2
  2302                           
  2303  0072                     ??_get_CELL_DAT_VAL:	
  2304                           ; 1 bytes @ 0x2
  2305                           
  2306  0072                     ??_lcd_cmd:	
  2307                           ; 1 bytes @ 0x2
  2308                           
  2309  0072                     start_segment@p:	
  2310                           ; 1 bytes @ 0x2
  2311                           
  2312  0072                     stop_segment@p:	
  2313                           ; 1 bytes @ 0x2
  2314                           
  2315  0072                     write_byte@b:	
  2316                           ; 1 bytes @ 0x2
  2317                           
  2318  0072                     lcd_cmd@p:	
  2319                           ; 1 bytes @ 0x2
  2320                           
  2321  0072                     ___aodiv@sign:	
  2322                           ; 1 bytes @ 0x2
  2323                           
  2324  0072                     ___aomod@sign:	
  2325                           ; 1 bytes @ 0x2
  2326                           
  2327  0072                     fputc@fp:	
  2328                           ; 1 bytes @ 0x2
  2329                           
  2330  0072                     ___awdiv@dividend:	
  2331                           ; 1 bytes @ 0x2
  2332                           
  2333  0072                     ___awmod@dividend:	
  2334                           ; 2 bytes @ 0x2
  2335                           
  2336  0072                     strncmp@_r:	
  2337                           ; 2 bytes @ 0x2
  2338                           
  2339                           
  2340                           ; 2 bytes @ 0x2
  2341  0072                     	ds	1
  2342  0073                     ?_write4bits:
  2343  0073                     ?_command:	
  2344                           ; 1 bytes @ 0x3
  2345                           
  2346  0073                     ??_fputc:	
  2347                           ; 1 bytes @ 0x3
  2348                           
  2349  0073                     ??_write_byte:	
  2350                           ; 1 bytes @ 0x3
  2351                           
  2352  0073                     ??_lcd_backlight:	
  2353                           ; 1 bytes @ 0x3
  2354                           
  2355  0073                     ?_abs:	
  2356                           ; 1 bytes @ 0x3
  2357                           
  2358  0073                     set_brigthness@p:	
  2359                           ; 2 bytes @ 0x3
  2360                           
  2361  0073                     command@val:	
  2362                           ; 1 bytes @ 0x3
  2363                           
  2364  0073                     write4bits@val:	
  2365                           ; 1 bytes @ 0x3
  2366                           
  2367  0073                     strlen@a:	
  2368                           ; 1 bytes @ 0x3
  2369                           
  2370  0073                     abs@a:	
  2371                           ; 1 bytes @ 0x3
  2372                           
  2373  0073                     ___aodiv@quotient:	
  2374                           ; 2 bytes @ 0x3
  2375                           
  2376                           
  2377                           ; 8 bytes @ 0x3
  2378  0073                     	ds	1
  2379  0074                     ??_write4bits:
  2380  0074                     ??___awdiv:	
  2381                           ; 1 bytes @ 0x4
  2382                           
  2383  0074                     ??___awmod:	
  2384                           ; 1 bytes @ 0x4
  2385                           
  2386  0074                     ??___xxtofl:	
  2387                           ; 1 bytes @ 0x4
  2388                           
  2389  0074                     write_byte@ack:	
  2390                           ; 1 bytes @ 0x4
  2391                           
  2392  0074                     lcd_backlight@p:	
  2393                           ; 1 bytes @ 0x4
  2394                           
  2395  0074                     command@mode:	
  2396                           ; 1 bytes @ 0x4
  2397                           
  2398  0074                     strlen@s:	
  2399                           ; 1 bytes @ 0x4
  2400                           
  2401  0074                     __Umul8_16@product:	
  2402                           ; 1 bytes @ 0x4
  2403                           
  2404  0074                     strncmp@n:	
  2405                           ; 2 bytes @ 0x4
  2406                           
  2407  0074                     ___lldiv@dividend:	
  2408                           ; 2 bytes @ 0x4
  2409                           
  2410                           
  2411                           ; 4 bytes @ 0x4
  2412  0074                     	ds	1
  2413  0075                     ??_command:
  2414  0075                     ??_abs:	
  2415                           ; 1 bytes @ 0x5
  2416                           
  2417  0075                     write_byte@data:	
  2418                           ; 1 bytes @ 0x5
  2419                           
  2420  0075                     get_CELL_DAT_VAL@p:	
  2421                           ; 1 bytes @ 0x5
  2422                           
  2423  0075                     write4bits@p:	
  2424                           ; 1 bytes @ 0x5
  2425                           
  2426  0075                     ___awdiv@counter:	
  2427                           ; 1 bytes @ 0x5
  2428                           
  2429  0075                     ___awmod@counter:	
  2430                           ; 1 bytes @ 0x5
  2431                           
  2432                           
  2433                           ; 1 bytes @ 0x5
  2434  0075                     	ds	1
  2435  0076                     ??_strncmp:
  2436  0076                     ??_lcd_init:	
  2437                           ; 1 bytes @ 0x6
  2438                           
  2439  0076                     write_byte@i:	
  2440                           ; 1 bytes @ 0x6
  2441                           
  2442  0076                     ___awdiv@sign:	
  2443                           ; 1 bytes @ 0x6
  2444                           
  2445  0076                     ___awmod@sign:	
  2446                           ; 1 bytes @ 0x6
  2447                           
  2448  0076                     __Umul8_16@word_mpld:	
  2449                           ; 1 bytes @ 0x6
  2450                           
  2451                           
  2452                           ; 2 bytes @ 0x6
  2453  0076                     	ds	1
  2454  0077                     write_byte@p:
  2455  0077                     command@highnib:	
  2456                           ; 1 bytes @ 0x7
  2457                           
  2458  0077                     ___awdiv@quotient:	
  2459                           ; 1 bytes @ 0x7
  2460                           
  2461  0077                     strncmp@l:	
  2462                           ; 2 bytes @ 0x7
  2463                           
  2464                           
  2465                           ; 2 bytes @ 0x7
  2466  0077                     	ds	1
  2467  0078                     ?_set_segments:
  2468  0078                     ??___lldiv:	
  2469                           ; 1 bytes @ 0x8
  2470                           
  2471  0078                     ?_fputs:	
  2472                           ; 1 bytes @ 0x8
  2473                           
  2474  0078                     set_segments@segments:	
  2475                           ; 2 bytes @ 0x8
  2476                           
  2477  0078                     lcd_init@p:	
  2478                           ; 1 bytes @ 0x8
  2479                           
  2480  0078                     command@lownib:	
  2481                           ; 1 bytes @ 0x8
  2482                           
  2483  0078                     __Umul8_16@multiplier:	
  2484                           ; 1 bytes @ 0x8
  2485                           
  2486  0078                     ___xxtofl@sign:	
  2487                           ; 1 bytes @ 0x8
  2488                           
  2489  0078                     fputs@fp:	
  2490                           ; 1 bytes @ 0x8
  2491                           
  2492                           
  2493                           ; 1 bytes @ 0x8
  2494  0078                     	ds	1
  2495  0079                     ??_fputs:
  2496  0079                     ?_encode_digit:	
  2497                           ; 1 bytes @ 0x9
  2498                           
  2499  0079                     set_segments@length:	
  2500                           ; 1 bytes @ 0x9
  2501                           
  2502  0079                     encode_digit@digit:	
  2503                           ; 1 bytes @ 0x9
  2504                           
  2505  0079                     command@p:	
  2506                           ; 1 bytes @ 0x9
  2507                           
  2508  0079                     ___lodiv@counter:	
  2509                           ; 1 bytes @ 0x9
  2510                           
  2511  0079                     ___xxtofl@exp:	
  2512                           ; 1 bytes @ 0x9
  2513                           
  2514  0079                     strncmp@r:	
  2515                           ; 1 bytes @ 0x9
  2516                           
  2517  0079                     ___lldiv@quotient:	
  2518                           ; 2 bytes @ 0x9
  2519                           
  2520                           
  2521                           ; 4 bytes @ 0x9
  2522  0079                     	ds	1
  2523  007A                     ?_lcd_set_cursor:
  2524  007A                     ?_lcd_print:	
  2525                           ; 1 bytes @ 0xA
  2526                           
  2527  007A                     ??_encode_digit:	
  2528                           ; 1 bytes @ 0xA
  2529                           
  2530  007A                     set_segments@pos:	
  2531                           ; 1 bytes @ 0xA
  2532                           
  2533  007A                     encode_digit@p:	
  2534                           ; 1 bytes @ 0xA
  2535                           
  2536  007A                     lcd_set_cursor@col:	
  2537                           ; 1 bytes @ 0xA
  2538                           
  2539  007A                     lcd_print@str:	
  2540                           ; 1 bytes @ 0xA
  2541                           
  2542  007A                     ___xxtofl@arg:	
  2543                           ; 2 bytes @ 0xA
  2544                           
  2545                           
  2546                           ; 4 bytes @ 0xA
  2547  007A                     	ds	1
  2548  007B                     ??_set_segments:
  2549  007B                     lcd_set_cursor@row:	
  2550                           ; 1 bytes @ 0xB
  2551                           
  2552                           
  2553                           ; 1 bytes @ 0xB
  2554  007B                     	ds	1
  2555  007C                     ??_lcd_set_cursor:
  2556  007C                     ??_lcd_print:	
  2557                           ; 1 bytes @ 0xC
  2558                           
  2559  007C                     ??_pad:	
  2560                           ; 1 bytes @ 0xC
  2561                           
  2562                           
  2563                           ; 1 bytes @ 0xC
  2564  007C                     	ds	1
  2565  007D                     ?_print_digit:
  2566  007D                     ??_utoa:	
  2567                           ; 1 bytes @ 0xD
  2568                           
  2569  007D                     print_digit@number:	
  2570                           ; 1 bytes @ 0xD
  2571                           
  2572  007D                     lcd_print_with@p:	
  2573                           ; 1 bytes @ 0xD
  2574                           
  2575  007D                     ___lldiv@counter:	
  2576                           ; 1 bytes @ 0xD
  2577                           
  2578                           
  2579                           ; 1 bytes @ 0xD
  2580  007D                     	ds	1
  2581  007E                     ??_set_max_gram:
  2582                           
  2583                           	psect	cstackBANK0
  2584  0020                     __pcstackBANK0:	
  2585                           ; 1 bytes @ 0xE
  2586                           
  2587  0020                     ?_get_scale_val:
  2588  0020                     ?___fldiv:	
  2589                           ; 4 bytes @ 0x0
  2590                           
  2591  0020                     ?___aodiv:	
  2592                           ; 4 bytes @ 0x0
  2593                           
  2594  0020                     ?___aomod:	
  2595                           ; 8 bytes @ 0x0
  2596                           
  2597  0020                     ?___lodiv:	
  2598                           ; 8 bytes @ 0x0
  2599                           
  2600  0020                     ?___lomod:	
  2601                           ; 8 bytes @ 0x0
  2602                           
  2603  0020                     set_segments@k:	
  2604                           ; 8 bytes @ 0x0
  2605                           
  2606  0020                     get_scale_val@scale_avg_count:	
  2607                           ; 1 bytes @ 0x0
  2608                           
  2609  0020                     lcd_print@cmd:	
  2610                           ; 1 bytes @ 0x0
  2611                           
  2612  0020                     fputs@c:	
  2613                           ; 1 bytes @ 0x0
  2614                           
  2615  0020                     lcd_set_cursor@row_offsets:	
  2616                           ; 1 bytes @ 0x0
  2617                           
  2618  0020                     ___fldiv@a:	
  2619                           ; 4 bytes @ 0x0
  2620                           
  2621  0020                     ___aodiv@divisor:	
  2622                           ; 4 bytes @ 0x0
  2623                           
  2624  0020                     ___aomod@divisor:	
  2625                           ; 8 bytes @ 0x0
  2626                           
  2627  0020                     ___lodiv@divisor:	
  2628                           ; 8 bytes @ 0x0
  2629                           
  2630  0020                     ___lomod@divisor:	
  2631                           ; 8 bytes @ 0x0
  2632                           
  2633                           
  2634                           ; 8 bytes @ 0x0
  2635  0020                     	ds	1
  2636  0021                     set_segments@p:
  2637  0021                     lcd_print@p:	
  2638                           ; 1 bytes @ 0x1
  2639                           
  2640  0021                     fputs@i:	
  2641                           ; 1 bytes @ 0x1
  2642                           
  2643                           
  2644                           ; 2 bytes @ 0x1
  2645  0021                     	ds	1
  2646  0022                     ??_print_digit:
  2647                           
  2648                           ; 1 bytes @ 0x2
  2649  0022                     	ds	1
  2650  0023                     fputs@s:
  2651                           
  2652                           ; 1 bytes @ 0x3
  2653  0023                     	ds	1
  2654  0024                     ??_get_scale_val:
  2655  0024                     ?_pad:	
  2656                           ; 1 bytes @ 0x4
  2657                           
  2658  0024                     lcd_set_cursor@cmd:	
  2659                           ; 2 bytes @ 0x4
  2660                           
  2661  0024                     pad@buf:	
  2662                           ; 1 bytes @ 0x4
  2663                           
  2664  0024                     ___fldiv@b:	
  2665                           ; 1 bytes @ 0x4
  2666                           
  2667                           
  2668                           ; 4 bytes @ 0x4
  2669  0024                     	ds	1
  2670  0025                     lcd_set_cursor@p:
  2671  0025                     pad@p:	
  2672                           ; 1 bytes @ 0x5
  2673                           
  2674                           
  2675                           ; 2 bytes @ 0x5
  2676  0025                     	ds	1
  2677  0026                     ??_lcd_clear:
  2678  0026                     ?_lcd_print_with:	
  2679                           ; 1 bytes @ 0x6
  2680                           
  2681  0026                     lcd_print_with@str:	
  2682                           ; 1 bytes @ 0x6
  2683                           
  2684  0026                     print_digit@data:	
  2685                           ; 2 bytes @ 0x6
  2686                           
  2687                           
  2688                           ; 4 bytes @ 0x6
  2689  0026                     	ds	1
  2690  0027                     pad@i:
  2691                           
  2692                           ; 2 bytes @ 0x7
  2693  0027                     	ds	1
  2694  0028                     ??___fldiv:
  2695  0028                     lcd_clear@row:	
  2696                           ; 1 bytes @ 0x8
  2697                           
  2698  0028                     lcd_print_with@col:	
  2699                           ; 1 bytes @ 0x8
  2700                           
  2701  0028                     get_scale_val@weight_add:	
  2702                           ; 1 bytes @ 0x8
  2703                           
  2704  0028                     ___aodiv@dividend:	
  2705                           ; 4 bytes @ 0x8
  2706                           
  2707  0028                     ___aomod@dividend:	
  2708                           ; 8 bytes @ 0x8
  2709                           
  2710  0028                     ___lodiv@dividend:	
  2711                           ; 8 bytes @ 0x8
  2712                           
  2713  0028                     ___lomod@dividend:	
  2714                           ; 8 bytes @ 0x8
  2715                           
  2716                           
  2717                           ; 8 bytes @ 0x8
  2718  0028                     	ds	1
  2719  0029                     lcd_clear@col:
  2720  0029                     lcd_print_with@row:	
  2721                           ; 1 bytes @ 0x9
  2722                           
  2723  0029                     pad@w:	
  2724                           ; 1 bytes @ 0x9
  2725                           
  2726                           
  2727                           ; 2 bytes @ 0x9
  2728  0029                     	ds	1
  2729  002A                     ??_lcd_print_with:
  2730  002A                     print_digit@p:	
  2731                           ; 1 bytes @ 0xA
  2732                           
  2733  002A                     lcd_clear@p:	
  2734                           ; 1 bytes @ 0xA
  2735                           
  2736                           
  2737                           ; 1 bytes @ 0xA
  2738  002A                     	ds	1
  2739  002B                     print_digit@tmp:
  2740  002B                     pad@fp:	
  2741                           ; 1 bytes @ 0xB
  2742                           
  2743                           
  2744                           ; 1 bytes @ 0xB
  2745  002B                     	ds	1
  2746  002C                     ??_initialize_digit:
  2747  002C                     get_scale_val@j:	
  2748                           ; 1 bytes @ 0xC
  2749                           
  2750                           
  2751                           ; 1 bytes @ 0xC
  2752  002C                     	ds	1
  2753  002D                     initialize_digit@p:
  2754  002D                     get_scale_val@weight_count:	
  2755                           ; 1 bytes @ 0xD
  2756                           
  2757  002D                     ___fldiv@rem:	
  2758                           ; 4 bytes @ 0xD
  2759                           
  2760                           
  2761                           ; 4 bytes @ 0xD
  2762  002D                     	ds	3
  2763  0030                     ?_dtoa:
  2764  0030                     ?_utoa:	
  2765                           ; 2 bytes @ 0x10
  2766                           
  2767  0030                     dtoa@d:	
  2768                           ; 2 bytes @ 0x10
  2769                           
  2770  0030                     utoa@d:	
  2771                           ; 8 bytes @ 0x10
  2772                           
  2773                           
  2774                           ; 8 bytes @ 0x10
  2775  0030                     	ds	1
  2776  0031                     get_scale_val@i:
  2777  0031                     ___fldiv@sign:	
  2778                           ; 1 bytes @ 0x11
  2779                           
  2780                           
  2781                           ; 1 bytes @ 0x11
  2782  0031                     	ds	1
  2783  0032                     get_scale_val@p:
  2784  0032                     ___fldiv@new_exp:	
  2785                           ; 1 bytes @ 0x12
  2786                           
  2787                           
  2788                           ; 2 bytes @ 0x12
  2789  0032                     	ds	2
  2790  0034                     ___fldiv@grs:
  2791                           
  2792                           ; 4 bytes @ 0x14
  2793  0034                     	ds	4
  2794  0038                     ??_dtoa:
  2795  0038                     ___fldiv@bexp:	
  2796                           ; 1 bytes @ 0x18
  2797                           
  2798  0038                     utoa@p:	
  2799                           ; 1 bytes @ 0x18
  2800                           
  2801                           
  2802                           ; 2 bytes @ 0x18
  2803  0038                     	ds	1
  2804  0039                     ___fldiv@aexp:
  2805                           
  2806                           ; 1 bytes @ 0x19
  2807  0039                     	ds	1
  2808  003A                     ?___flmul:
  2809  003A                     utoa@fp:	
  2810                           ; 4 bytes @ 0x1A
  2811                           
  2812  003A                     ___flmul@b:	
  2813                           ; 1 bytes @ 0x1A
  2814                           
  2815                           
  2816                           ; 4 bytes @ 0x1A
  2817  003A                     	ds	1
  2818  003B                     _dtoa$1252:
  2819  003B                     utoa@w:	
  2820                           ; 2 bytes @ 0x1B
  2821                           
  2822                           
  2823                           ; 2 bytes @ 0x1B
  2824  003B                     	ds	2
  2825  003D                     dtoa@p:
  2826  003D                     utoa@n:	
  2827                           ; 2 bytes @ 0x1D
  2828                           
  2829                           
  2830                           ; 8 bytes @ 0x1D
  2831  003D                     	ds	1
  2832  003E                     ___flmul@a:
  2833                           
  2834                           ; 4 bytes @ 0x1E
  2835  003E                     	ds	1
  2836  003F                     dtoa@fp:
  2837                           
  2838                           ; 1 bytes @ 0x1F
  2839  003F                     	ds	1
  2840  0040                     dtoa@w:
  2841                           
  2842                           ; 2 bytes @ 0x20
  2843  0040                     	ds	2
  2844  0042                     ??___flmul:
  2845  0042                     dtoa@s:	
  2846                           ; 1 bytes @ 0x22
  2847                           
  2848                           
  2849                           ; 2 bytes @ 0x22
  2850  0042                     	ds	2
  2851  0044                     dtoa@n:
  2852                           
  2853                           ; 8 bytes @ 0x24
  2854  0044                     	ds	1
  2855  0045                     utoa@i:
  2856                           
  2857                           ; 2 bytes @ 0x25
  2858  0045                     	ds	2
  2859  0047                     ___flmul@sign:
  2860                           
  2861                           ; 1 bytes @ 0x27
  2862  0047                     	ds	1
  2863  0048                     ___flmul@grs:
  2864                           
  2865                           ; 4 bytes @ 0x28
  2866  0048                     	ds	4
  2867  004C                     ___flmul@aexp:
  2868  004C                     dtoa@i:	
  2869                           ; 1 bytes @ 0x2C
  2870                           
  2871                           
  2872                           ; 2 bytes @ 0x2C
  2873  004C                     	ds	1
  2874  004D                     ___flmul@bexp:
  2875                           
  2876                           ; 1 bytes @ 0x2D
  2877  004D                     	ds	1
  2878  004E                     ?_vfpfcnvrt:
  2879  004E                     vfpfcnvrt@fmt:	
  2880                           ; 2 bytes @ 0x2E
  2881                           
  2882  004E                     ___flmul@prod:	
  2883                           ; 1 bytes @ 0x2E
  2884                           
  2885                           
  2886                           ; 4 bytes @ 0x2E
  2887  004E                     	ds	1
  2888  004F                     vfpfcnvrt@ap:
  2889                           
  2890                           ; 1 bytes @ 0x2F
  2891  004F                     	ds	1
  2892  0050                     ??_vfpfcnvrt:
  2893                           
  2894                           ; 1 bytes @ 0x30
  2895  0050                     	ds	2
  2896  0052                     ___flmul@temp:
  2897                           
  2898                           ; 2 bytes @ 0x32
  2899  0052                     	ds	2
  2900  0054                     ?___fltol:
  2901  0054                     ___fltol@f1:	
  2902                           ; 4 bytes @ 0x34
  2903                           
  2904                           
  2905                           ; 4 bytes @ 0x34
  2906  0054                     	ds	4
  2907  0058                     ??___fltol:
  2908                           
  2909                           ; 1 bytes @ 0x38
  2910  0058                     	ds	4
  2911  005C                     vfpfcnvrt@ll:
  2912                           
  2913                           ; 8 bytes @ 0x3C
  2914  005C                     	ds	1
  2915  005D                     ___fltol@sign1:
  2916                           
  2917                           ; 1 bytes @ 0x3D
  2918  005D                     	ds	1
  2919  005E                     ___fltol@exp1:
  2920                           
  2921                           ; 1 bytes @ 0x3E
  2922  005E                     	ds	1
  2923  005F                     ??_scale_convert_gram:
  2924                           
  2925                           ; 1 bytes @ 0x3F
  2926  005F                     	ds	5
  2927  0064                     vfpfcnvrt@llu:
  2928                           
  2929                           ; 8 bytes @ 0x44
  2930  0064                     	ds	3
  2931  0067                     scale_convert_gram@temp:
  2932                           
  2933                           ; 4 bytes @ 0x47
  2934  0067                     	ds	4
  2935  006B                     scale_convert_gram@p:
  2936                           
  2937                           ; 1 bytes @ 0x4B
  2938  006B                     	ds	1
  2939  006C                     calc_percentage@p:
  2940  006C                     vfpfcnvrt@fp:	
  2941                           ; 1 bytes @ 0x4C
  2942                           
  2943                           
  2944                           ; 1 bytes @ 0x4C
  2945  006C                     	ds	1
  2946  006D                     ?_vfprintf:
  2947  006D                     vfprintf@fmt:	
  2948                           ; 2 bytes @ 0x4D
  2949                           
  2950                           
  2951                           ; 2 bytes @ 0x4D
  2952  006D                     	ds	2
  2953  006F                     vfprintf@ap:
  2954                           
  2955                           ; 1 bytes @ 0x4F
  2956  006F                     	ds	1
  2957                           
  2958                           	psect	maintext
  2959  0B89                     __pmaintext:	
  2960 ;;
  2961 ;;Main: autosize = 0, tempsize = 2, incstack = 0, save=0
  2962 ;;
  2963 ;; *************** function _main *****************
  2964 ;; Defined at:
  2965 ;;		line 8 in file "main.c"
  2966 ;; Parameters:    Size  Location     Type
  2967 ;;		None
  2968 ;; Auto vars:     Size  Location     Type
  2969 ;;  loadcell       12   62[BANK1 ] struct .
  2970 ;;  drink           6   74[BANK1 ] struct .
  2971 ;;  lcd             4   56[BANK1 ] struct .
  2972 ;;  tm1637          2   60[BANK1 ] struct .
  2973 ;; Return value:  Size  Location     Type
  2974 ;;                  1    wreg      void 
  2975 ;; Registers used:
  2976 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  2977 ;; Tracked objects:
  2978 ;;		On entry : B1F/0
  2979 ;;		On exit  : 0/0
  2980 ;;		Unchanged: 0/0
  2981 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  2982 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2983 ;;      Locals:         0       0      24       0       0       0       0       0       0       0       0       0       
      +0       0
  2984 ;;      Temps:          0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0
  2985 ;;      Totals:         0       0      26       0       0       0       0       0       0       0       0       0       
      +0       0
  2986 ;;Total ram usage:       26 bytes
  2987 ;; Hardware stack levels required when called: 9
  2988 ;; This function calls:
  2989 ;;		_SYSTEM_Initialize
  2990 ;;		_calc_percentage
  2991 ;;		_initialize
  2992 ;;		_print_gram
  2993 ;;		_set_max_gram
  2994 ;; This function is called by:
  2995 ;;		Startup code after reset
  2996 ;; This function uses a non-reentrant model
  2997 ;;
  2998                           
  2999                           
  3000                           ;psect for function _main
  3001  0B89                     _main:
  3002  0B89                     l3884:	
  3003                           ;incstack = 0
  3004                           ; Regs used in _main: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  3005                           
  3006                           
  3007                           ;main.c: 10:     SYSTEM_Initialize();
  3008  0B89  319E  26D6  318B   	fcall	_SYSTEM_Initialize
  3009  0B8C                     l3886:
  3010                           
  3011                           ;main.c: 13:     ANSELA = 0x00;
  3012  0B8C  0023               	movlb	3	; select bank3
  3013  0B8D  018C               	clrf	12	;volatile
  3014  0B8E                     l3888:
  3015                           
  3016                           ;main.c: 14:     ANSELB = 0x00;
  3017  0B8E  018D               	clrf	13	;volatile
  3018  0B8F                     l3890:
  3019                           
  3020                           ;main.c: 18:     TRISB = 0x04;
  3021  0B8F  3004               	movlw	4
  3022  0B90  0021               	movlb	1	; select bank1
  3023  0B91  008D               	movwf	13	;volatile
  3024  0B92                     l3892:
  3025                           
  3026                           ;main.c: 21:     TRISC = 0xF8;
  3027  0B92  30F8               	movlw	248
  3028  0B93  008E               	movwf	14	;volatile
  3029  0B94                     l3894:
  3030                           
  3031                           ;main.c: 24:     LATA = 0x00;
  3032  0B94  0022               	movlb	2	; select bank2
  3033  0B95  018C               	clrf	12	;volatile
  3034  0B96                     l3896:
  3035                           
  3036                           ;main.c: 25:     LATB = 0x00;
  3037  0B96  018D               	clrf	13	;volatile
  3038  0B97                     l3898:
  3039                           
  3040                           ;main.c: 26:     LATC = 0x00;
  3041  0B97  018E               	clrf	14	;volatile
  3042  0B98                     l3900:
  3043                           
  3044                           ;main.c: 29:     SSPADD = 0x13;
  3045  0B98  3013               	movlw	19
  3046  0B99  0024               	movlb	4	; select bank4
  3047  0B9A  0092               	movwf	18	;volatile
  3048  0B9B                     l3902:
  3049                           
  3050                           ;main.c: 30:     SSPCON1 = 0x28;
  3051  0B9B  3028               	movlw	40
  3052  0B9C  0095               	movwf	21	;volatile
  3053  0B9D                     l3904:
  3054                           
  3055                           ;main.c: 31:     SSPCON2 = 0x0;
  3056  0B9D  0196               	clrf	22	;volatile
  3057  0B9E                     l3906:
  3058                           
  3059                           ;main.c: 32:     SSPSTAT = 0;
  3060  0B9E  0194               	clrf	20	;volatile
  3061  0B9F                     l3908:
  3062                           
  3063                           ;main.c: 35:     LoadCell loadcell = {0x02, 0x04, 0, 0, 500};
  3064  0B9F  3020               	movlw	low main@F2847
  3065  0BA0  0086               	movwf	6
  3066  0BA1  3001               	movlw	high main@F2847
  3067  0BA2  0087               	movwf	7
  3068  0BA3  30DE               	movlw	low main@loadcell
  3069  0BA4  0084               	movwf	4
  3070  0BA5  3000               	movlw	high main@loadcell
  3071  0BA6  0085               	movwf	5
  3072  0BA7  300C               	movlw	12
  3073  0BA8  0021               	movlb	1	; select bank1
  3074  0BA9  00D6               	movwf	??_main^(0+128)
  3075  0BAA                     u4620:
  3076  0BAA  0016               	moviw fsr1++
  3077  0BAB  001A               	movwi fsr0++
  3078  0BAC  0BD6               	decfsz	??_main^(0+128),f
  3079  0BAD  2BAA               	goto	u4620
  3080  0BAE                     l3910:
  3081                           
  3082                           ;main.c: 37:     Lcd lcd = {0x27, 16, 2, 0};
  3083  0BAE  0022               	movlb	2	; select bank2
  3084  0BAF  0841               	movf	(main@F2849+3)^(0+256),w
  3085  0BB0  0021               	movlb	1	; select bank1
  3086  0BB1  00DB               	movwf	(main@lcd+3)^(0+128)
  3087  0BB2  0022               	movlb	2	; select bank2
  3088  0BB3  0840               	movf	(main@F2849+2)^(0+256),w
  3089  0BB4  0021               	movlb	1	; select bank1
  3090  0BB5  00DA               	movwf	(main@lcd+2)^(0+128)
  3091  0BB6  0022               	movlb	2	; select bank2
  3092  0BB7  083F               	movf	(main@F2849+1)^(0+256),w
  3093  0BB8  0021               	movlb	1	; select bank1
  3094  0BB9  00D9               	movwf	(main@lcd+1)^(0+128)
  3095  0BBA  0022               	movlb	2	; select bank2
  3096  0BBB  083E               	movf	main@F2849^(0+256),w
  3097  0BBC  0021               	movlb	1	; select bank1
  3098  0BBD  00D8               	movwf	main@lcd^(0+128)
  3099  0BBE                     l3912:
  3100                           
  3101                           ;main.c: 39:     TM1637 tm1637 = {0x08, 0x10};
  3102  0BBE  0022               	movlb	2	; select bank2
  3103  0BBF  0843               	movf	(main@F2851+1)^(0+256),w
  3104  0BC0  0021               	movlb	1	; select bank1
  3105  0BC1  00DD               	movwf	(main@tm1637+1)^(0+128)
  3106  0BC2  0022               	movlb	2	; select bank2
  3107  0BC3  0842               	movf	main@F2851^(0+256),w
  3108  0BC4  0021               	movlb	1	; select bank1
  3109  0BC5  00DC               	movwf	main@tm1637^(0+128)
  3110  0BC6                     l3914:
  3111                           
  3112                           ;main.c: 41:     DrinkMeter drink = {&loadcell, &lcd, &tm1637, 500, 0};
  3113  0BC6  3044               	movlw	low main@F2853
  3114  0BC7  0086               	movwf	6
  3115  0BC8  3001               	movlw	high main@F2853
  3116  0BC9  0087               	movwf	7
  3117  0BCA  30EA               	movlw	low main@drink
  3118  0BCB  0084               	movwf	4
  3119  0BCC  3000               	movlw	high main@drink
  3120  0BCD  0085               	movwf	5
  3121  0BCE  3006               	movlw	6
  3122  0BCF  00D6               	movwf	??_main^(0+128)
  3123  0BD0                     u4630:
  3124  0BD0  0016               	moviw fsr1++
  3125  0BD1  001A               	movwi fsr0++
  3126  0BD2  0BD6               	decfsz	??_main^(0+128),f
  3127  0BD3  2BD0               	goto	u4630
  3128  0BD4                     l3916:
  3129  0BD4  30DE               	movlw	(low (main@loadcell| 0))& (0+255)
  3130  0BD5  00D6               	movwf	??_main^(0+128)
  3131  0BD6  0856               	movf	??_main^(0+128),w
  3132  0BD7  00EA               	movwf	main@drink^(0+128)
  3133  0BD8                     l3918:
  3134  0BD8  30D8               	movlw	(low (main@lcd| 0))& (0+255)
  3135  0BD9  00D6               	movwf	??_main^(0+128)
  3136  0BDA  0856               	movf	??_main^(0+128),w
  3137  0BDB  00EB               	movwf	(low ((main@drink| 0+1)))^(0+128)
  3138  0BDC                     l3920:
  3139  0BDC  30DC               	movlw	(low (main@tm1637| 0))& (0+255)
  3140  0BDD  00D6               	movwf	??_main^(0+128)
  3141  0BDE  0856               	movf	??_main^(0+128),w
  3142  0BDF  00EC               	movwf	(low ((main@drink| 0+2)))^(0+128)
  3143  0BE0                     l3922:
  3144  0BE0  30F4               	movlw	244
  3145  0BE1  00ED               	movwf	(main@drink^(0+128)+3)
  3146  0BE2  3001               	movlw	1
  3147  0BE3  00EE               	movwf	(main@drink^(0+128)+4)
  3148  0BE4                     l3924:
  3149  0BE4  01EF               	clrf	(main@drink^(0+128)+5)
  3150  0BE5                     l3926:
  3151                           
  3152                           ;main.c: 43:     initialize(&drink);
  3153  0BE5  30EA               	movlw	(low (main@drink| 0))& (0+255)
  3154  0BE6  3196  26D7  318B   	fcall	_initialize
  3155  0BE9                     l3928:
  3156                           
  3157                           ;main.c: 46:         calc_percentage(&drink);
  3158  0BE9  30EA               	movlw	(low (main@drink| 0))& (0+255)
  3159  0BEA  3188  20D5  318B   	fcall	_calc_percentage
  3160  0BED                     l3930:
  3161                           
  3162                           ;main.c: 47:         print_gram(&drink);
  3163  0BED  30EA               	movlw	(low (main@drink| 0))& (0+255)
  3164  0BEE  3194  2496  318B   	fcall	_print_gram
  3165  0BF1                     l3932:
  3166                           
  3167                           ;main.c: 49:         if(RC7 == 0){
  3168  0BF1  0020               	movlb	0	; select bank0
  3169  0BF2  1B8E               	btfsc	14,7	;volatile
  3170  0BF3  2BF5               	goto	u4641
  3171  0BF4  2BF6               	goto	u4640
  3172  0BF5                     u4641:
  3173  0BF5  2C0C               	goto	l3938
  3174  0BF6                     u4640:
  3175  0BF6                     l3934:
  3176                           
  3177                           ;main.c: 50:             set_max_gram(&drink, 500);
  3178  0BF6  30F4               	movlw	244
  3179  0BF7  0021               	movlb	1	; select bank1
  3180  0BF8  00B3               	movwf	set_max_gram@max_gram^(0+128)
  3181  0BF9  3001               	movlw	1
  3182  0BFA  00B4               	movwf	(set_max_gram@max_gram^(0+128)+1)
  3183  0BFB  30EA               	movlw	(low (main@drink| 0))& (0+255)
  3184  0BFC  3188  2002  318B   	fcall	_set_max_gram
  3185  0BFF                     l3936:
  3186                           
  3187                           ;main.c: 51:             _delay((unsigned long)((1000)*(8000000/4000.0)));
  3188  0BFF  300B               	movlw	11
  3189  0C00  0021               	movlb	1	; select bank1
  3190  0C01  00D7               	movwf	(??_main^(0+128)+1)
  3191  0C02  3026               	movlw	38
  3192  0C03  00D6               	movwf	??_main^(0+128)
  3193  0C04  305D               	movlw	93
  3194  0C05                     u4677:
  3195  0C05  0B89               	decfsz	9,f
  3196  0C06  2C05               	goto	u4677
  3197  0C07  0BD6               	decfsz	??_main^(0+128),f
  3198  0C08  2C05               	goto	u4677
  3199  0C09  0BD7               	decfsz	(??_main^(0+128)+1),f
  3200  0C0A  2C05               	goto	u4677
  3201  0C0B  3200               	nop2
  3202  0C0C                     l3938:
  3203                           
  3204                           ;main.c: 54:         if(RC6 == 0){
  3205  0C0C  0020               	movlb	0	; select bank0
  3206  0C0D  1B0E               	btfsc	14,6	;volatile
  3207  0C0E  2C10               	goto	u4651
  3208  0C0F  2C11               	goto	u4650
  3209  0C10                     u4651:
  3210  0C10  2C27               	goto	l3944
  3211  0C11                     u4650:
  3212  0C11                     l3940:
  3213                           
  3214                           ;main.c: 55:             set_max_gram(&drink, 350);
  3215  0C11  305E               	movlw	94
  3216  0C12  0021               	movlb	1	; select bank1
  3217  0C13  00B3               	movwf	set_max_gram@max_gram^(0+128)
  3218  0C14  3001               	movlw	1
  3219  0C15  00B4               	movwf	(set_max_gram@max_gram^(0+128)+1)
  3220  0C16  30EA               	movlw	(low (main@drink| 0))& (0+255)
  3221  0C17  3188  2002  318B   	fcall	_set_max_gram
  3222  0C1A                     l3942:
  3223                           
  3224                           ;main.c: 56:             _delay((unsigned long)((1000)*(8000000/4000.0)));
  3225  0C1A  300B               	movlw	11
  3226  0C1B  0021               	movlb	1	; select bank1
  3227  0C1C  00D7               	movwf	(??_main^(0+128)+1)
  3228  0C1D  3026               	movlw	38
  3229  0C1E  00D6               	movwf	??_main^(0+128)
  3230  0C1F  305D               	movlw	93
  3231  0C20                     u4687:
  3232  0C20  0B89               	decfsz	9,f
  3233  0C21  2C20               	goto	u4687
  3234  0C22  0BD6               	decfsz	??_main^(0+128),f
  3235  0C23  2C20               	goto	u4687
  3236  0C24  0BD7               	decfsz	(??_main^(0+128)+1),f
  3237  0C25  2C20               	goto	u4687
  3238  0C26  3200               	nop2
  3239  0C27                     l3944:
  3240                           
  3241                           ;main.c: 59:         if(RC5 == 0){
  3242  0C27  0020               	movlb	0	; select bank0
  3243  0C28  1A8E               	btfsc	14,5	;volatile
  3244  0C29  2C2B               	goto	u4661
  3245  0C2A  2C2C               	goto	u4660
  3246  0C2B                     u4661:
  3247  0C2B  2BE9               	goto	l3928
  3248  0C2C                     u4660:
  3249  0C2C                     l3946:
  3250                           
  3251                           ;main.c: 60:             set_max_gram(&drink, 355);
  3252  0C2C  3063               	movlw	99
  3253  0C2D  0021               	movlb	1	; select bank1
  3254  0C2E  00B3               	movwf	set_max_gram@max_gram^(0+128)
  3255  0C2F  3001               	movlw	1
  3256  0C30  00B4               	movwf	(set_max_gram@max_gram^(0+128)+1)
  3257  0C31  30EA               	movlw	(low (main@drink| 0))& (0+255)
  3258  0C32  3188  2002  318B   	fcall	_set_max_gram
  3259  0C35                     l3948:
  3260                           
  3261                           ;main.c: 61:             _delay((unsigned long)((1000)*(8000000/4000.0)));
  3262  0C35  300B               	movlw	11
  3263  0C36  0021               	movlb	1	; select bank1
  3264  0C37  00D7               	movwf	(??_main^(0+128)+1)
  3265  0C38  3026               	movlw	38
  3266  0C39  00D6               	movwf	??_main^(0+128)
  3267  0C3A  305D               	movlw	93
  3268  0C3B                     u4697:
  3269  0C3B  0B89               	decfsz	9,f
  3270  0C3C  2C3B               	goto	u4697
  3271  0C3D  0BD6               	decfsz	??_main^(0+128),f
  3272  0C3E  2C3B               	goto	u4697
  3273  0C3F  0BD7               	decfsz	(??_main^(0+128)+1),f
  3274  0C40  2C3B               	goto	u4697
  3275  0C41  3200               	nop2
  3276  0C42  2BE9               	goto	l3928
  3277  0C43  3180  2802         	ljmp	start
  3278  0C45                     __end_of_main:
  3279                           
  3280                           	psect	text1
  3281  0802                     __ptext1:	
  3282 ;; *************** function _set_max_gram *****************
  3283 ;; Defined at:
  3284 ;;		line 54 in file "drink_meter.c"
  3285 ;; Parameters:    Size  Location     Type
  3286 ;;  p               1    wreg     PTR struct .
  3287 ;;		 -> main@drink(6), 
  3288 ;;  max_gram        2   19[BANK1 ] unsigned short 
  3289 ;; Auto vars:     Size  Location     Type
  3290 ;;  p               1   37[BANK1 ] PTR struct .
  3291 ;;		 -> main@drink(6), 
  3292 ;;  valstr         16   21[BANK1 ] unsigned char [16]
  3293 ;; Return value:  Size  Location     Type
  3294 ;;                  1    wreg      void 
  3295 ;; Registers used:
  3296 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  3297 ;; Tracked objects:
  3298 ;;		On entry : 0/0
  3299 ;;		On exit  : 0/0
  3300 ;;		Unchanged: 0/0
  3301 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  3302 ;;      Params:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0
  3303 ;;      Locals:         0       0      17       0       0       0       0       0       0       0       0       0       
      +0       0
  3304 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3305 ;;      Totals:         0       0      19       0       0       0       0       0       0       0       0       0       
      +0       0
  3306 ;;Total ram usage:       19 bytes
  3307 ;; Hardware stack levels used: 1
  3308 ;; Hardware stack levels required when called: 8
  3309 ;; This function calls:
  3310 ;;		_calc_percentage
  3311 ;;		_lcd_clear
  3312 ;;		_lcd_print
  3313 ;;		_sprintf
  3314 ;; This function is called by:
  3315 ;;		_main
  3316 ;; This function uses a non-reentrant model
  3317 ;;
  3318                           
  3319                           
  3320                           ;psect for function _set_max_gram
  3321  0802                     _set_max_gram:
  3322                           
  3323                           ;incstack = 0
  3324                           ; Regs used in _set_max_gram: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  3325                           ;set_max_gram@p stored from wreg
  3326  0802  0021               	movlb	1	; select bank1
  3327  0803  00C5               	movwf	set_max_gram@p^(0+128)
  3328  0804                     l3858:
  3329                           
  3330                           ;drink_meter.c: 55:     p->max_gram = max_gram;
  3331  0804  0845               	movf	set_max_gram@p^(0+128),w
  3332  0805  3E03               	addlw	3
  3333  0806  0086               	movwf	6
  3334  0807  0187               	clrf	7
  3335  0808  0833               	movf	set_max_gram@max_gram^(0+128),w
  3336  0809  3FC0               	movwi [0]fsr1
  3337  080A  0834               	movf	(set_max_gram@max_gram+1)^(0+128),w
  3338  080B  3FC1               	movwi [1]fsr1
  3339  080C                     l3860:
  3340                           
  3341                           ;drink_meter.c: 57:     char valstr[16];;drink_meter.c: 58:     sprintf(valstr, "max gra
      +                          m %d", max_gram);
  3342  080C  300F               	movlw	low (STR_7| (0+32768))
  3343  080D  00A5               	movwf	sprintf@fmt^(0+128)
  3344  080E  30A0               	movlw	high (STR_7| (0+32768))
  3345  080F  00A6               	movwf	(sprintf@fmt^(0+128)+1)
  3346  0810  0834               	movf	(set_max_gram@max_gram+1)^(0+128),w
  3347  0811  00A8               	movwf	((?_sprintf+1)^(0+128)+2)
  3348  0812  0833               	movf	set_max_gram@max_gram^(0+128),w
  3349  0813  00A7               	movwf	(?_sprintf^(0+128)+2)
  3350  0814  30B5               	movlw	(low (set_max_gram@valstr| 0))& (0+255)
  3351  0815  3190  20DC  3188   	fcall	_sprintf
  3352  0818                     l3862:
  3353                           
  3354                           ;drink_meter.c: 60:     lcd_clear(p->lcd);
  3355  0818  0021               	movlb	1	; select bank1
  3356  0819  0A45               	incf	set_max_gram@p^(0+128),w
  3357  081A  0086               	movwf	6
  3358  081B  0187               	clrf	7
  3359  081C  0801               	movf	1,w
  3360  081D  3191  219F  3188   	fcall	_lcd_clear
  3361  0820                     l3864:
  3362                           
  3363                           ;drink_meter.c: 61:     lcd_print(p->lcd, valstr);
  3364  0820  30B5               	movlw	low set_max_gram@valstr
  3365  0821  00FA               	movwf	lcd_print@str
  3366  0822  3000               	movlw	high set_max_gram@valstr
  3367  0823  00FB               	movwf	lcd_print@str+1
  3368  0824  0021               	movlb	1	; select bank1
  3369  0825  0A45               	incf	set_max_gram@p^(0+128),w
  3370  0826  0086               	movwf	6
  3371  0827  0187               	clrf	7
  3372  0828  0801               	movf	1,w
  3373  0829  3190  2094  3188   	fcall	_lcd_print
  3374  082C                     l3866:
  3375                           
  3376                           ;drink_meter.c: 63:     calc_percentage(p);
  3377  082C  0021               	movlb	1	; select bank1
  3378  082D  0845               	movf	set_max_gram@p^(0+128),w
  3379  082E  3188  20D5  3188   	fcall	_calc_percentage
  3380  0831                     l384:
  3381  0831  0008               	return
  3382  0832                     __end_of_set_max_gram:
  3383                           
  3384                           	psect	text2
  3385  08D5                     __ptext2:	
  3386 ;; *************** function _calc_percentage *****************
  3387 ;; Defined at:
  3388 ;;		line 25 in file "drink_meter.c"
  3389 ;; Parameters:    Size  Location     Type
  3390 ;;  p               1    wreg     PTR struct .
  3391 ;;		 -> main@drink(6), 
  3392 ;; Auto vars:     Size  Location     Type
  3393 ;;  p               1   76[BANK0 ] PTR struct .
  3394 ;;		 -> main@drink(6), 
  3395 ;; Return value:  Size  Location     Type
  3396 ;;                  1    wreg      void 
  3397 ;; Registers used:
  3398 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  3399 ;; Tracked objects:
  3400 ;;		On entry : 0/0
  3401 ;;		On exit  : 0/0
  3402 ;;		Unchanged: 0/0
  3403 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  3404 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3405 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3406 ;;      Temps:          0       0       5       0       0       0       0       0       0       0       0       0       
      +0       0
  3407 ;;      Totals:         0       1       5       0       0       0       0       0       0       0       0       0       
      +0       0
  3408 ;;Total ram usage:        6 bytes
  3409 ;; Hardware stack levels used: 1
  3410 ;; Hardware stack levels required when called: 2
  3411 ;; This function calls:
  3412 ;;		___fldiv
  3413 ;;		___flmul
  3414 ;;		___fltol
  3415 ;;		___xxtofl
  3416 ;;		_get_scale_val
  3417 ;;		_scale_convert_gram
  3418 ;; This function is called by:
  3419 ;;		_main
  3420 ;;		_set_max_gram
  3421 ;; This function uses a non-reentrant model
  3422 ;;
  3423                           
  3424                           
  3425                           ;psect for function _calc_percentage
  3426  08D5                     _calc_percentage:
  3427                           
  3428                           ;incstack = 0
  3429                           ; Regs used in _calc_percentage: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
  3430                           ;calc_percentage@p stored from wreg
  3431  08D5  0020               	movlb	0	; select bank0
  3432  08D6  00EC               	movwf	calc_percentage@p
  3433  08D7                     l3754:
  3434                           
  3435                           ;drink_meter.c: 27:     p->loadcell->weight_dat = get_scale_val(p->loadcell, 16);
  3436  08D7  3010               	movlw	16
  3437  08D8  0021               	movlb	1	; select bank1
  3438  08D9  00A0               	movwf	??_calc_percentage^(0+128)
  3439  08DA  0820               	movf	??_calc_percentage^(0+128),w
  3440  08DB  0020               	movlb	0	; select bank0
  3441  08DC  00A0               	movwf	get_scale_val@scale_avg_count
  3442  08DD  086C               	movf	calc_percentage@p,w
  3443  08DE  0086               	movwf	6
  3444  08DF  0187               	clrf	7
  3445  08E0  0801               	movf	1,w
  3446  08E1  318C  2445  3188   	fcall	_get_scale_val
  3447  08E4  0020               	movlb	0	; select bank0
  3448  08E5  086C               	movf	calc_percentage@p,w
  3449  08E6  0086               	movwf	6
  3450  08E7  0187               	clrf	7
  3451  08E8  0801               	movf	1,w
  3452  08E9  3E06               	addlw	6
  3453  08EA  0086               	movwf	6
  3454  08EB  0187               	clrf	7
  3455  08EC  0820               	movf	?_get_scale_val,w
  3456  08ED  3FC0               	movwi [0]fsr1
  3457  08EE  0821               	movf	?_get_scale_val+1,w
  3458  08EF  3FC1               	movwi [1]fsr1
  3459  08F0  0822               	movf	?_get_scale_val+2,w
  3460  08F1  3FC2               	movwi [2]fsr1
  3461  08F2  0823               	movf	?_get_scale_val+3,w
  3462  08F3  3FC3               	movwi [3]fsr1
  3463                           
  3464                           ;drink_meter.c: 28:     scale_convert_gram(p->loadcell);
  3465  08F4  086C               	movf	calc_percentage@p,w
  3466  08F5  0086               	movwf	6
  3467  08F6  0187               	clrf	7
  3468  08F7  0801               	movf	1,w
  3469  08F8  3197  2766  3188   	fcall	_scale_convert_gram
  3470  08FB                     l3756:
  3471                           
  3472                           ;drink_meter.c: 31:     if(p->loadcell->gram == 0){
  3473  08FB  0020               	movlb	0	; select bank0
  3474  08FC  086C               	movf	calc_percentage@p,w
  3475  08FD  0086               	movwf	6
  3476  08FE  0187               	clrf	7
  3477  08FF  0801               	movf	1,w
  3478  0900  3E0A               	addlw	10
  3479  0901  0086               	movwf	6
  3480  0902  0187               	clrf	7
  3481  0903  0016               	moviw fsr1++
  3482  0904  0401               	iorwf	1,w
  3483  0905  1D03               	btfss	3,2
  3484  0906  2908               	goto	u4571
  3485  0907  2909               	goto	u4570
  3486  0908                     u4571:
  3487  0908  290F               	goto	l3760
  3488  0909                     u4570:
  3489  0909                     l3758:
  3490                           
  3491                           ;drink_meter.c: 32:         p->percentage = 0;
  3492  0909  086C               	movf	calc_percentage@p,w
  3493  090A  3E05               	addlw	5
  3494  090B  0086               	movwf	6
  3495  090C  0187               	clrf	7
  3496  090D  0181               	clrf	1
  3497                           
  3498                           ;drink_meter.c: 33:     }else{
  3499  090E  2979               	goto	l378
  3500  090F                     l3760:
  3501                           
  3502                           ;drink_meter.c: 35:         p->percentage = ((float)p->loadcell->gram / (float)p->max_gr
      +                          am) * 100;
  3503  090F  086C               	movf	calc_percentage@p,w
  3504  0910  0086               	movwf	6
  3505  0911  0187               	clrf	7
  3506  0912  0801               	movf	1,w
  3507  0913  3E0A               	addlw	10
  3508  0914  0086               	movwf	6
  3509  0915  0187               	clrf	7
  3510  0916  3F40               	moviw [0]fsr1
  3511  0917  0021               	movlb	1	; select bank1
  3512  0918  00A0               	movwf	??_calc_percentage^(0+128)
  3513  0919  3F41               	moviw [1]fsr1
  3514  091A  00A1               	movwf	(??_calc_percentage^(0+128)+1)
  3515  091B  0820               	movf	??_calc_percentage^(0+128),w
  3516  091C  00F0               	movwf	___xxtofl@val
  3517  091D  0821               	movf	(??_calc_percentage+1)^(0+128),w
  3518  091E  00F1               	movwf	___xxtofl@val+1
  3519  091F  01F2               	clrf	___xxtofl@val+2
  3520  0920  01F3               	clrf	___xxtofl@val+3
  3521  0921  3000               	movlw	0
  3522  0922  318A  2223  3188   	fcall	___xxtofl
  3523  0925  0873               	movf	?___xxtofl+3,w
  3524  0926  0020               	movlb	0	; select bank0
  3525  0927  00A7               	movwf	___fldiv@b+3
  3526  0928  0872               	movf	?___xxtofl+2,w
  3527  0929  00A6               	movwf	___fldiv@b+2
  3528  092A  0871               	movf	?___xxtofl+1,w
  3529  092B  00A5               	movwf	___fldiv@b+1
  3530  092C  0870               	movf	?___xxtofl,w
  3531  092D  00A4               	movwf	___fldiv@b
  3532  092E  086C               	movf	calc_percentage@p,w
  3533  092F  3E03               	addlw	3
  3534  0930  0086               	movwf	6
  3535  0931  0187               	clrf	7
  3536  0932  3F40               	moviw [0]fsr1
  3537  0933  0021               	movlb	1	; select bank1
  3538  0934  00A2               	movwf	(??_calc_percentage+2)^(0+128)
  3539  0935  3F41               	moviw [1]fsr1
  3540  0936  00A3               	movwf	((??_calc_percentage+2)^(0+128)+1)
  3541  0937  0822               	movf	(??_calc_percentage+2)^(0+128),w
  3542  0938  00F0               	movwf	___xxtofl@val
  3543  0939  0823               	movf	(??_calc_percentage+3)^(0+128),w
  3544  093A  00F1               	movwf	___xxtofl@val+1
  3545  093B  01F2               	clrf	___xxtofl@val+2
  3546  093C  01F3               	clrf	___xxtofl@val+3
  3547  093D  3000               	movlw	0
  3548  093E  318A  2223  3188   	fcall	___xxtofl
  3549  0941  0873               	movf	?___xxtofl+3,w
  3550  0942  0020               	movlb	0	; select bank0
  3551  0943  00A3               	movwf	___fldiv@a+3
  3552  0944  0872               	movf	?___xxtofl+2,w
  3553  0945  00A2               	movwf	___fldiv@a+2
  3554  0946  0871               	movf	?___xxtofl+1,w
  3555  0947  00A1               	movwf	___fldiv@a+1
  3556  0948  0870               	movf	?___xxtofl,w
  3557  0949  00A0               	movwf	___fldiv@a
  3558  094A  3181  21DA  3188   	fcall	___fldiv
  3559  094D  0020               	movlb	0	; select bank0
  3560  094E  0823               	movf	?___fldiv+3,w
  3561  094F  00C1               	movwf	___flmul@a+3
  3562  0950  0822               	movf	?___fldiv+2,w
  3563  0951  00C0               	movwf	___flmul@a+2
  3564  0952  0821               	movf	?___fldiv+1,w
  3565  0953  00BF               	movwf	___flmul@a+1
  3566  0954  0820               	movf	?___fldiv,w
  3567  0955  00BE               	movwf	___flmul@a
  3568  0956  3042               	movlw	66
  3569  0957  00BD               	movwf	___flmul@b+3
  3570  0958  30C8               	movlw	200
  3571  0959  00BC               	movwf	___flmul@b+2
  3572  095A  3000               	movlw	0
  3573  095B  00BB               	movwf	___flmul@b+1
  3574  095C  3000               	movlw	0
  3575  095D  00BA               	movwf	___flmul@b
  3576  095E  3185  258A  3188   	fcall	___flmul
  3577  0961  0020               	movlb	0	; select bank0
  3578  0962  083D               	movf	?___flmul+3,w
  3579  0963  00D7               	movwf	___fltol@f1+3
  3580  0964  083C               	movf	?___flmul+2,w
  3581  0965  00D6               	movwf	___fltol@f1+2
  3582  0966  083B               	movf	?___flmul+1,w
  3583  0967  00D5               	movwf	___fltol@f1+1
  3584  0968  083A               	movf	?___flmul,w
  3585  0969  00D4               	movwf	___fltol@f1
  3586  096A  3195  25DE  3188   	fcall	___fltol
  3587  096D  0020               	movlb	0	; select bank0
  3588  096E  0854               	movf	?___fltol,w
  3589  096F  0021               	movlb	1	; select bank1
  3590  0970  00A4               	movwf	(??_calc_percentage+4)^(0+128)
  3591  0971  0020               	movlb	0	; select bank0
  3592  0972  086C               	movf	calc_percentage@p,w
  3593  0973  3E05               	addlw	5
  3594  0974  0086               	movwf	6
  3595  0975  0187               	clrf	7
  3596  0976  0021               	movlb	1	; select bank1
  3597  0977  0824               	movf	(??_calc_percentage+4)^(0+128),w
  3598  0978  0081               	movwf	1
  3599  0979                     l378:
  3600  0979  0008               	return
  3601  097A                     __end_of_calc_percentage:
  3602                           
  3603                           	psect	text3
  3604  1766                     __ptext3:	
  3605 ;; *************** function _scale_convert_gram *****************
  3606 ;; Defined at:
  3607 ;;		line 75 in file "loadcell.c"
  3608 ;; Parameters:    Size  Location     Type
  3609 ;;  p               1    wreg     PTR struct .
  3610 ;;		 -> NULL(0), main@loadcell(12), 
  3611 ;; Auto vars:     Size  Location     Type
  3612 ;;  p               1   75[BANK0 ] PTR struct .
  3613 ;;		 -> NULL(0), main@loadcell(12), 
  3614 ;;  temp            4   71[BANK0 ] float 
  3615 ;; Return value:  Size  Location     Type
  3616 ;;                  1    wreg      void 
  3617 ;; Registers used:
  3618 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  3619 ;; Tracked objects:
  3620 ;;		On entry : 0/0
  3621 ;;		On exit  : 0/0
  3622 ;;		Unchanged: 0/0
  3623 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  3624 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3625 ;;      Locals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3626 ;;      Temps:          0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3627 ;;      Totals:         0      13       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3628 ;;Total ram usage:       13 bytes
  3629 ;; Hardware stack levels used: 1
  3630 ;; Hardware stack levels required when called: 1
  3631 ;; This function calls:
  3632 ;;		___fldiv
  3633 ;;		___fltol
  3634 ;;		___xxtofl
  3635 ;; This function is called by:
  3636 ;;		_calc_percentage
  3637 ;; This function uses a non-reentrant model
  3638 ;;
  3639                           
  3640                           
  3641                           ;psect for function _scale_convert_gram
  3642  1766                     _scale_convert_gram:
  3643                           
  3644                           ;incstack = 0
  3645                           ; Regs used in _scale_convert_gram: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
  3646                           ;scale_convert_gram@p stored from wreg
  3647  1766  0020               	movlb	0	; select bank0
  3648  1767  00EB               	movwf	scale_convert_gram@p
  3649  1768                     l3546:
  3650                           
  3651                           ;loadcell.c: 77:     if(p->weight_dat < p->weight_zero){
  3652  1768  086B               	movf	scale_convert_gram@p,w
  3653  1769  3E02               	addlw	2
  3654  176A  0086               	movwf	6
  3655  176B  0187               	clrf	7
  3656  176C  3F40               	moviw [0]fsr1
  3657  176D  00DF               	movwf	??_scale_convert_gram
  3658  176E  3F41               	moviw [1]fsr1
  3659  176F  00E0               	movwf	??_scale_convert_gram+1
  3660  1770  3F42               	moviw [2]fsr1
  3661  1771  00E1               	movwf	??_scale_convert_gram+2
  3662  1772  3F43               	moviw [3]fsr1
  3663  1773  00E2               	movwf	??_scale_convert_gram+3
  3664  1774  086B               	movf	scale_convert_gram@p,w
  3665  1775  3E06               	addlw	6
  3666  1776  0086               	movwf	6
  3667  1777  0187               	clrf	7
  3668  1778  3F40               	moviw [0]fsr1
  3669  1779  00E3               	movwf	??_scale_convert_gram+4
  3670  177A  3F41               	moviw [1]fsr1
  3671  177B  00E4               	movwf	??_scale_convert_gram+5
  3672  177C  3F42               	moviw [2]fsr1
  3673  177D  00E5               	movwf	??_scale_convert_gram+6
  3674  177E  3F43               	moviw [3]fsr1
  3675  177F  00E6               	movwf	??_scale_convert_gram+7
  3676  1780  0862               	movf	??_scale_convert_gram+3,w
  3677  1781  0266               	subwf	??_scale_convert_gram+7,w
  3678  1782  1D03               	skipz
  3679  1783  2F8E               	goto	u4275
  3680  1784  0861               	movf	??_scale_convert_gram+2,w
  3681  1785  0265               	subwf	??_scale_convert_gram+6,w
  3682  1786  1D03               	skipz
  3683  1787  2F8E               	goto	u4275
  3684  1788  0860               	movf	??_scale_convert_gram+1,w
  3685  1789  0264               	subwf	??_scale_convert_gram+5,w
  3686  178A  1D03               	skipz
  3687  178B  2F8E               	goto	u4275
  3688  178C  085F               	movf	??_scale_convert_gram,w
  3689  178D  0263               	subwf	??_scale_convert_gram+4,w
  3690  178E                     u4275:
  3691  178E  1803               	skipnc
  3692  178F  2F91               	goto	u4271
  3693  1790  2F92               	goto	u4270
  3694  1791                     u4271:
  3695  1791  2F9A               	goto	l3552
  3696  1792                     u4270:
  3697  1792                     l3548:
  3698                           
  3699                           ;loadcell.c: 78:         p->gram = 0;
  3700  1792  086B               	movf	scale_convert_gram@p,w
  3701  1793  3E0A               	addlw	10
  3702  1794  0086               	movwf	6
  3703  1795  0187               	clrf	7
  3704  1796  3000               	movlw	0
  3705  1797  3FC0               	movwi [0]fsr1
  3706  1798  3FC1               	movwi [1]fsr1
  3707  1799  2FFF               	goto	l295
  3708  179A                     l3552:
  3709                           
  3710                           ;loadcell.c: 82:     float temp = p->weight_dat - p->weight_zero;
  3711  179A  086B               	movf	scale_convert_gram@p,w
  3712  179B  3E02               	addlw	2
  3713  179C  0086               	movwf	6
  3714  179D  0187               	clrf	7
  3715  179E  3F40               	moviw [0]fsr1
  3716  179F  00DF               	movwf	??_scale_convert_gram
  3717  17A0  3F41               	moviw [1]fsr1
  3718  17A1  00E0               	movwf	??_scale_convert_gram+1
  3719  17A2  3F42               	moviw [2]fsr1
  3720  17A3  00E1               	movwf	??_scale_convert_gram+2
  3721  17A4  3F43               	moviw [3]fsr1
  3722  17A5  00E2               	movwf	??_scale_convert_gram+3
  3723  17A6  086B               	movf	scale_convert_gram@p,w
  3724  17A7  3E06               	addlw	6
  3725  17A8  0086               	movwf	6
  3726  17A9  0187               	clrf	7
  3727  17AA  3F40               	moviw [0]fsr1
  3728  17AB  00E3               	movwf	??_scale_convert_gram+4
  3729  17AC  3F41               	moviw [1]fsr1
  3730  17AD  00E4               	movwf	??_scale_convert_gram+5
  3731  17AE  3F42               	moviw [2]fsr1
  3732  17AF  00E5               	movwf	??_scale_convert_gram+6
  3733  17B0  3F43               	moviw [3]fsr1
  3734  17B1  00E6               	movwf	??_scale_convert_gram+7
  3735  17B2  085F               	movf	??_scale_convert_gram,w
  3736  17B3  02E3               	subwf	??_scale_convert_gram+4,f
  3737  17B4  0860               	movf	??_scale_convert_gram+1,w
  3738  17B5  3BE4               	subwfb	??_scale_convert_gram+5,f
  3739  17B6  0861               	movf	??_scale_convert_gram+2,w
  3740  17B7  3BE5               	subwfb	??_scale_convert_gram+6,f
  3741  17B8  0862               	movf	??_scale_convert_gram+3,w
  3742  17B9  3BE6               	subwfb	??_scale_convert_gram+7,f
  3743  17BA  0866               	movf	??_scale_convert_gram+7,w
  3744  17BB  00F3               	movwf	___xxtofl@val+3
  3745  17BC  0865               	movf	??_scale_convert_gram+6,w
  3746  17BD  00F2               	movwf	___xxtofl@val+2
  3747  17BE  0864               	movf	??_scale_convert_gram+5,w
  3748  17BF  00F1               	movwf	___xxtofl@val+1
  3749  17C0  0863               	movf	??_scale_convert_gram+4,w
  3750  17C1  00F0               	movwf	___xxtofl@val
  3751  17C2  3000               	movlw	0
  3752  17C3  318A  2223  3197   	fcall	___xxtofl
  3753  17C6  0873               	movf	?___xxtofl+3,w
  3754  17C7  0020               	movlb	0	; select bank0
  3755  17C8  00EA               	movwf	scale_convert_gram@temp+3
  3756  17C9  0872               	movf	?___xxtofl+2,w
  3757  17CA  00E9               	movwf	scale_convert_gram@temp+2
  3758  17CB  0871               	movf	?___xxtofl+1,w
  3759  17CC  00E8               	movwf	scale_convert_gram@temp+1
  3760  17CD  0870               	movf	?___xxtofl,w
  3761  17CE  00E7               	movwf	scale_convert_gram@temp
  3762  17CF                     l3554:
  3763                           
  3764                           ;loadcell.c: 83:     temp = temp / 493;
  3765  17CF  3043               	movlw	67
  3766  17D0  00A3               	movwf	___fldiv@a+3
  3767  17D1  30F6               	movlw	246
  3768  17D2  00A2               	movwf	___fldiv@a+2
  3769  17D3  3080               	movlw	128
  3770  17D4  00A1               	movwf	___fldiv@a+1
  3771  17D5  3000               	movlw	0
  3772  17D6  00A0               	movwf	___fldiv@a
  3773  17D7  086A               	movf	scale_convert_gram@temp+3,w
  3774  17D8  00A7               	movwf	___fldiv@b+3
  3775  17D9  0869               	movf	scale_convert_gram@temp+2,w
  3776  17DA  00A6               	movwf	___fldiv@b+2
  3777  17DB  0868               	movf	scale_convert_gram@temp+1,w
  3778  17DC  00A5               	movwf	___fldiv@b+1
  3779  17DD  0867               	movf	scale_convert_gram@temp,w
  3780  17DE  00A4               	movwf	___fldiv@b
  3781  17DF  3181  21DA  3197   	fcall	___fldiv
  3782  17E2  0020               	movlb	0	; select bank0
  3783  17E3  0823               	movf	?___fldiv+3,w
  3784  17E4  00EA               	movwf	scale_convert_gram@temp+3
  3785  17E5  0822               	movf	?___fldiv+2,w
  3786  17E6  00E9               	movwf	scale_convert_gram@temp+2
  3787  17E7  0821               	movf	?___fldiv+1,w
  3788  17E8  00E8               	movwf	scale_convert_gram@temp+1
  3789  17E9  0820               	movf	?___fldiv,w
  3790  17EA  00E7               	movwf	scale_convert_gram@temp
  3791  17EB                     l3556:
  3792                           
  3793                           ;loadcell.c: 84:     p->gram = (uint16_t)temp;
  3794  17EB  086A               	movf	scale_convert_gram@temp+3,w
  3795  17EC  00D7               	movwf	___fltol@f1+3
  3796  17ED  0869               	movf	scale_convert_gram@temp+2,w
  3797  17EE  00D6               	movwf	___fltol@f1+2
  3798  17EF  0868               	movf	scale_convert_gram@temp+1,w
  3799  17F0  00D5               	movwf	___fltol@f1+1
  3800  17F1  0867               	movf	scale_convert_gram@temp,w
  3801  17F2  00D4               	movwf	___fltol@f1
  3802  17F3  3195  25DE  3197   	fcall	___fltol
  3803  17F6  0020               	movlb	0	; select bank0
  3804  17F7  086B               	movf	scale_convert_gram@p,w
  3805  17F8  3E0A               	addlw	10
  3806  17F9  0086               	movwf	6
  3807  17FA  0187               	clrf	7
  3808  17FB  0854               	movf	?___fltol,w
  3809  17FC  3FC0               	movwi [0]fsr1
  3810  17FD  0855               	movf	?___fltol+1,w
  3811  17FE  3FC1               	movwi [1]fsr1
  3812  17FF                     l295:
  3813  17FF  0008               	return
  3814  1800                     __end_of_scale_convert_gram:
  3815                           
  3816                           	psect	text4
  3817  0A23                     __ptext4:	
  3818 ;; *************** function ___xxtofl *****************
  3819 ;; Defined at:
  3820 ;;		line 10 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\xxtofl.c"
  3821 ;; Parameters:    Size  Location     Type
  3822 ;;  sign            1    wreg     unsigned char 
  3823 ;;  val             4    0[COMMON] long 
  3824 ;; Auto vars:     Size  Location     Type
  3825 ;;  sign            1    8[COMMON] unsigned char 
  3826 ;;  arg             4   10[COMMON] unsigned long 
  3827 ;;  exp             1    9[COMMON] unsigned char 
  3828 ;; Return value:  Size  Location     Type
  3829 ;;                  4    0[COMMON] unsigned char 
  3830 ;; Registers used:
  3831 ;;		wreg, status,2, status,0
  3832 ;; Tracked objects:
  3833 ;;		On entry : 0/0
  3834 ;;		On exit  : 0/0
  3835 ;;		Unchanged: 0/0
  3836 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  3837 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3838 ;;      Locals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3839 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3840 ;;      Totals:        14       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3841 ;;Total ram usage:       14 bytes
  3842 ;; Hardware stack levels used: 1
  3843 ;; This function calls:
  3844 ;;		Nothing
  3845 ;; This function is called by:
  3846 ;;		_scale_convert_gram
  3847 ;;		_calc_percentage
  3848 ;; This function uses a non-reentrant model
  3849 ;;
  3850                           
  3851                           
  3852                           ;psect for function ___xxtofl
  3853  0A23                     ___xxtofl:
  3854                           
  3855                           ;incstack = 0
  3856                           ; Regs used in ___xxtofl: [wreg+status,2+status,0]
  3857                           ;___xxtofl@sign stored from wreg
  3858  0A23  00F8               	movwf	___xxtofl@sign
  3859  0A24                     l3336:
  3860  0A24  0878               	movf	___xxtofl@sign,w
  3861  0A25  1903               	btfsc	3,2
  3862  0A26  2A28               	goto	u3981
  3863  0A27  2A29               	goto	u3980
  3864  0A28                     u3981:
  3865  0A28  2A3D               	goto	l3342
  3866  0A29                     u3980:
  3867  0A29                     l3338:
  3868  0A29  1FF3               	btfss	___xxtofl@val+3,7
  3869  0A2A  2A2C               	goto	u3991
  3870  0A2B  2A2D               	goto	u3990
  3871  0A2C                     u3991:
  3872  0A2C  2A3D               	goto	l3342
  3873  0A2D                     u3990:
  3874  0A2D                     l3340:
  3875  0A2D  0970               	comf	___xxtofl@val,w
  3876  0A2E  00FA               	movwf	___xxtofl@arg
  3877  0A2F  0971               	comf	___xxtofl@val+1,w
  3878  0A30  00FB               	movwf	___xxtofl@arg+1
  3879  0A31  0972               	comf	___xxtofl@val+2,w
  3880  0A32  00FC               	movwf	___xxtofl@arg+2
  3881  0A33  0973               	comf	___xxtofl@val+3,w
  3882  0A34  00FD               	movwf	___xxtofl@arg+3
  3883  0A35  0AFA               	incf	___xxtofl@arg,f
  3884  0A36  1903               	skipnz
  3885  0A37  0AFB               	incf	___xxtofl@arg+1,f
  3886  0A38  1903               	skipnz
  3887  0A39  0AFC               	incf	___xxtofl@arg+2,f
  3888  0A3A  1903               	skipnz
  3889  0A3B  0AFD               	incf	___xxtofl@arg+3,f
  3890  0A3C  2A45               	goto	l975
  3891  0A3D                     l3342:
  3892  0A3D  0873               	movf	___xxtofl@val+3,w
  3893  0A3E  00FD               	movwf	___xxtofl@arg+3
  3894  0A3F  0872               	movf	___xxtofl@val+2,w
  3895  0A40  00FC               	movwf	___xxtofl@arg+2
  3896  0A41  0871               	movf	___xxtofl@val+1,w
  3897  0A42  00FB               	movwf	___xxtofl@arg+1
  3898  0A43  0870               	movf	___xxtofl@val,w
  3899  0A44  00FA               	movwf	___xxtofl@arg
  3900  0A45                     l975:
  3901  0A45  0873               	movf	___xxtofl@val+3,w
  3902  0A46  0472               	iorwf	___xxtofl@val+2,w
  3903  0A47  0471               	iorwf	___xxtofl@val+1,w
  3904  0A48  0470               	iorwf	___xxtofl@val,w
  3905  0A49  1D03               	skipz
  3906  0A4A  2A4C               	goto	u4001
  3907  0A4B  2A4D               	goto	u4000
  3908  0A4C                     u4001:
  3909  0A4C  2A56               	goto	l3348
  3910  0A4D                     u4000:
  3911  0A4D                     l3344:
  3912  0A4D  3000               	movlw	0
  3913  0A4E  00F3               	movwf	?___xxtofl+3
  3914  0A4F  3000               	movlw	0
  3915  0A50  00F2               	movwf	?___xxtofl+2
  3916  0A51  3000               	movlw	0
  3917  0A52  00F1               	movwf	?___xxtofl+1
  3918  0A53  3000               	movlw	0
  3919  0A54  00F0               	movwf	?___xxtofl
  3920  0A55  2ACE               	goto	l977
  3921  0A56                     l3348:
  3922  0A56  3096               	movlw	150
  3923  0A57  00F4               	movwf	??___xxtofl
  3924  0A58  0874               	movf	??___xxtofl,w
  3925  0A59  00F9               	movwf	___xxtofl@exp
  3926  0A5A  2A66               	goto	l3352
  3927  0A5B                     l3350:
  3928  0A5B  3001               	movlw	1
  3929  0A5C  00F4               	movwf	??___xxtofl
  3930  0A5D  0874               	movf	??___xxtofl,w
  3931  0A5E  07F9               	addwf	___xxtofl@exp,f
  3932  0A5F  3001               	movlw	1
  3933  0A60                     u4015:
  3934  0A60  36FD               	lsrf	___xxtofl@arg+3,f
  3935  0A61  0CFC               	rrf	___xxtofl@arg+2,f
  3936  0A62  0CFB               	rrf	___xxtofl@arg+1,f
  3937  0A63  0CFA               	rrf	___xxtofl@arg,f
  3938  0A64  0B89               	decfsz	9,f
  3939  0A65  2A60               	goto	u4015
  3940  0A66                     l3352:
  3941  0A66  30FE               	movlw	254
  3942  0A67  057D               	andwf	___xxtofl@arg+3,w
  3943  0A68  1D03               	btfss	3,2
  3944  0A69  2A6B               	goto	u4021
  3945  0A6A  2A6C               	goto	u4020
  3946  0A6B                     u4021:
  3947  0A6B  2A5B               	goto	l3350
  3948  0A6C                     u4020:
  3949  0A6C  2A80               	goto	l981
  3950  0A6D                     l3354:
  3951  0A6D  3001               	movlw	1
  3952  0A6E  00F4               	movwf	??___xxtofl
  3953  0A6F  0874               	movf	??___xxtofl,w
  3954  0A70  07F9               	addwf	___xxtofl@exp,f
  3955  0A71                     l3356:
  3956  0A71  3001               	movlw	1
  3957  0A72  07FA               	addwf	___xxtofl@arg,f
  3958  0A73  3000               	movlw	0
  3959  0A74  3DFB               	addwfc	___xxtofl@arg+1,f
  3960  0A75  3000               	movlw	0
  3961  0A76  3DFC               	addwfc	___xxtofl@arg+2,f
  3962  0A77  3000               	movlw	0
  3963  0A78  3DFD               	addwfc	___xxtofl@arg+3,f
  3964  0A79                     l3358:
  3965  0A79  3001               	movlw	1
  3966  0A7A                     u4035:
  3967  0A7A  36FD               	lsrf	___xxtofl@arg+3,f
  3968  0A7B  0CFC               	rrf	___xxtofl@arg+2,f
  3969  0A7C  0CFB               	rrf	___xxtofl@arg+1,f
  3970  0A7D  0CFA               	rrf	___xxtofl@arg,f
  3971  0A7E  0B89               	decfsz	9,f
  3972  0A7F  2A7A               	goto	u4035
  3973  0A80                     l981:
  3974  0A80  30FF               	movlw	255
  3975  0A81  057D               	andwf	___xxtofl@arg+3,w
  3976  0A82  1D03               	btfss	3,2
  3977  0A83  2A85               	goto	u4041
  3978  0A84  2A86               	goto	u4040
  3979  0A85                     u4041:
  3980  0A85  2A6D               	goto	l3354
  3981  0A86                     u4040:
  3982  0A86  2A90               	goto	l3362
  3983  0A87                     l3360:
  3984  0A87  3001               	movlw	1
  3985  0A88  02F9               	subwf	___xxtofl@exp,f
  3986  0A89  3001               	movlw	1
  3987  0A8A                     u4055:
  3988  0A8A  35FA               	lslf	___xxtofl@arg,f
  3989  0A8B  0DFB               	rlf	___xxtofl@arg+1,f
  3990  0A8C  0DFC               	rlf	___xxtofl@arg+2,f
  3991  0A8D  0DFD               	rlf	___xxtofl@arg+3,f
  3992  0A8E  0B89               	decfsz	9,f
  3993  0A8F  2A8A               	goto	u4055
  3994  0A90                     l3362:
  3995  0A90  1BFC               	btfsc	___xxtofl@arg+2,7
  3996  0A91  2A93               	goto	u4061
  3997  0A92  2A94               	goto	u4060
  3998  0A93                     u4061:
  3999  0A93  2A9A               	goto	l988
  4000  0A94                     u4060:
  4001  0A94                     l3364:
  4002  0A94  3002               	movlw	2
  4003  0A95  0279               	subwf	___xxtofl@exp,w
  4004  0A96  1803               	skipnc
  4005  0A97  2A99               	goto	u4071
  4006  0A98  2A9A               	goto	u4070
  4007  0A99                     u4071:
  4008  0A99  2A87               	goto	l3360
  4009  0A9A                     u4070:
  4010  0A9A                     l988:
  4011  0A9A  1879               	btfsc	___xxtofl@exp,0
  4012  0A9B  2A9D               	goto	u4081
  4013  0A9C  2A9E               	goto	u4080
  4014  0A9D                     u4081:
  4015  0A9D  2AA6               	goto	l989
  4016  0A9E                     u4080:
  4017  0A9E                     l3366:
  4018  0A9E  30FF               	movlw	255
  4019  0A9F  05FA               	andwf	___xxtofl@arg,f
  4020  0AA0  30FF               	movlw	255
  4021  0AA1  05FB               	andwf	___xxtofl@arg+1,f
  4022  0AA2  307F               	movlw	127
  4023  0AA3  05FC               	andwf	___xxtofl@arg+2,f
  4024  0AA4  30FF               	movlw	255
  4025  0AA5  05FD               	andwf	___xxtofl@arg+3,f
  4026  0AA6                     l989:
  4027  0AA6  1003               	clrc
  4028  0AA7  0CF9               	rrf	___xxtofl@exp,f
  4029  0AA8                     l3368:
  4030  0AA8  0879               	movf	___xxtofl@exp,w
  4031  0AA9  00F4               	movwf	??___xxtofl
  4032  0AAA  01F5               	clrf	??___xxtofl+1
  4033  0AAB  01F6               	clrf	??___xxtofl+2
  4034  0AAC  01F7               	clrf	??___xxtofl+3
  4035  0AAD  3018               	movlw	24
  4036  0AAE                     u4095:
  4037  0AAE  35F4               	lslf	??___xxtofl,f
  4038  0AAF  0DF5               	rlf	??___xxtofl+1,f
  4039  0AB0  0DF6               	rlf	??___xxtofl+2,f
  4040  0AB1  0DF7               	rlf	??___xxtofl+3,f
  4041  0AB2                     u4090:
  4042  0AB2  0B89               	decfsz	9,f
  4043  0AB3  2AAE               	goto	u4095
  4044  0AB4  0874               	movf	??___xxtofl,w
  4045  0AB5  04FA               	iorwf	___xxtofl@arg,f
  4046  0AB6  0875               	movf	??___xxtofl+1,w
  4047  0AB7  04FB               	iorwf	___xxtofl@arg+1,f
  4048  0AB8  0876               	movf	??___xxtofl+2,w
  4049  0AB9  04FC               	iorwf	___xxtofl@arg+2,f
  4050  0ABA  0877               	movf	??___xxtofl+3,w
  4051  0ABB  04FD               	iorwf	___xxtofl@arg+3,f
  4052  0ABC                     l3370:
  4053  0ABC  0878               	movf	___xxtofl@sign,w
  4054  0ABD  1903               	btfsc	3,2
  4055  0ABE  2AC0               	goto	u4101
  4056  0ABF  2AC1               	goto	u4100
  4057  0AC0                     u4101:
  4058  0AC0  2AC6               	goto	l3376
  4059  0AC1                     u4100:
  4060  0AC1                     l3372:
  4061  0AC1  1FF3               	btfss	___xxtofl@val+3,7
  4062  0AC2  2AC4               	goto	u4111
  4063  0AC3  2AC5               	goto	u4110
  4064  0AC4                     u4111:
  4065  0AC4  2AC6               	goto	l3376
  4066  0AC5                     u4110:
  4067  0AC5                     l3374:
  4068  0AC5  17FD               	bsf	___xxtofl@arg+3,7
  4069  0AC6                     l3376:
  4070  0AC6  087D               	movf	___xxtofl@arg+3,w
  4071  0AC7  00F3               	movwf	?___xxtofl+3
  4072  0AC8  087C               	movf	___xxtofl@arg+2,w
  4073  0AC9  00F2               	movwf	?___xxtofl+2
  4074  0ACA  087B               	movf	___xxtofl@arg+1,w
  4075  0ACB  00F1               	movwf	?___xxtofl+1
  4076  0ACC  087A               	movf	___xxtofl@arg,w
  4077  0ACD  00F0               	movwf	?___xxtofl
  4078  0ACE                     l977:
  4079  0ACE  0008               	return
  4080  0ACF                     __end_of___xxtofl:
  4081                           
  4082                           	psect	text5
  4083  15DE                     __ptext5:	
  4084 ;; *************** function ___fltol *****************
  4085 ;; Defined at:
  4086 ;;		line 43 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\fltol.c"
  4087 ;; Parameters:    Size  Location     Type
  4088 ;;  f1              4   52[BANK0 ] unsigned char 
  4089 ;; Auto vars:     Size  Location     Type
  4090 ;;  exp1            1   62[BANK0 ] unsigned char 
  4091 ;;  sign1           1   61[BANK0 ] unsigned char 
  4092 ;; Return value:  Size  Location     Type
  4093 ;;                  4   52[BANK0 ] long 
  4094 ;; Registers used:
  4095 ;;		wreg, status,2, status,0
  4096 ;; Tracked objects:
  4097 ;;		On entry : 0/0
  4098 ;;		On exit  : 0/0
  4099 ;;		Unchanged: 0/0
  4100 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  4101 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4102 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4103 ;;      Temps:          0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4104 ;;      Totals:         0      11       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4105 ;;Total ram usage:       11 bytes
  4106 ;; Hardware stack levels used: 1
  4107 ;; This function calls:
  4108 ;;		Nothing
  4109 ;; This function is called by:
  4110 ;;		_scale_convert_gram
  4111 ;;		_calc_percentage
  4112 ;; This function uses a non-reentrant model
  4113 ;;
  4114                           
  4115                           
  4116                           ;psect for function ___fltol
  4117  15DE                     ___fltol:
  4118  15DE                     l3146:	
  4119                           ;incstack = 0
  4120                           ; Regs used in ___fltol: [wreg+status,2+status,0]
  4121                           
  4122  15DE  1003               	clrc
  4123  15DF  0020               	movlb	0	; select bank0
  4124  15E0  0D56               	rlf	___fltol@f1+2,w
  4125  15E1  0D57               	rlf	___fltol@f1+3,w
  4126  15E2  00D8               	movwf	??___fltol
  4127  15E3  0858               	movf	??___fltol,w
  4128  15E4  00DE               	movwf	___fltol@exp1
  4129  15E5  085E               	movf	___fltol@exp1,w
  4130  15E6  1D03               	btfss	3,2
  4131  15E7  2DE9               	goto	u3561
  4132  15E8  2DEA               	goto	u3560
  4133  15E9                     u3561:
  4134  15E9  2DF3               	goto	l3152
  4135  15EA                     u3560:
  4136  15EA                     l3148:
  4137  15EA  3000               	movlw	0
  4138  15EB  00D7               	movwf	?___fltol+3
  4139  15EC  3000               	movlw	0
  4140  15ED  00D6               	movwf	?___fltol+2
  4141  15EE  3000               	movlw	0
  4142  15EF  00D5               	movwf	?___fltol+1
  4143  15F0  3000               	movlw	0
  4144  15F1  00D4               	movwf	?___fltol
  4145  15F2  2E52               	goto	l728
  4146  15F3                     l3152:
  4147  15F3  0854               	movf	___fltol@f1,w
  4148  15F4  00D8               	movwf	??___fltol
  4149  15F5  0855               	movf	___fltol@f1+1,w
  4150  15F6  00D9               	movwf	??___fltol+1
  4151  15F7  0856               	movf	___fltol@f1+2,w
  4152  15F8  00DA               	movwf	??___fltol+2
  4153  15F9  0857               	movf	___fltol@f1+3,w
  4154  15FA  00DB               	movwf	??___fltol+3
  4155  15FB  301F               	movlw	31
  4156  15FC                     u3575:
  4157  15FC  36DB               	lsrf	??___fltol+3,f
  4158  15FD  0CDA               	rrf	??___fltol+2,f
  4159  15FE  0CD9               	rrf	??___fltol+1,f
  4160  15FF  0CD8               	rrf	??___fltol,f
  4161  1600                     u3570:
  4162  1600  0B89               	decfsz	9,f
  4163  1601  2DFC               	goto	u3575
  4164  1602  0858               	movf	??___fltol,w
  4165  1603  00DC               	movwf	??___fltol+4
  4166  1604  085C               	movf	??___fltol+4,w
  4167  1605  00DD               	movwf	___fltol@sign1
  4168  1606                     l3154:
  4169  1606  17D6               	bsf	___fltol@f1+2,7
  4170  1607                     l3156:
  4171  1607  30FF               	movlw	255
  4172  1608  05D4               	andwf	___fltol@f1,f
  4173  1609  30FF               	movlw	255
  4174  160A  05D5               	andwf	___fltol@f1+1,f
  4175  160B  30FF               	movlw	255
  4176  160C  05D6               	andwf	___fltol@f1+2,f
  4177  160D  3000               	movlw	0
  4178  160E  05D7               	andwf	___fltol@f1+3,f
  4179  160F                     l3158:
  4180  160F  3096               	movlw	150
  4181  1610  02DE               	subwf	___fltol@exp1,f
  4182  1611                     l3160:
  4183  1611  1FDE               	btfss	___fltol@exp1,7
  4184  1612  2E14               	goto	u3581
  4185  1613  2E15               	goto	u3580
  4186  1614                     u3581:
  4187  1614  2E2D               	goto	l3170
  4188  1615                     u3580:
  4189  1615                     l3162:
  4190  1615  085E               	movf	___fltol@exp1,w
  4191  1616  3A80               	xorlw	128
  4192  1617  3E97               	addlw	151
  4193  1618  1803               	skipnc
  4194  1619  2E1B               	goto	u3591
  4195  161A  2E1C               	goto	u3590
  4196  161B                     u3591:
  4197  161B  2E1D               	goto	l3168
  4198  161C                     u3590:
  4199  161C  2DEA               	goto	l3148
  4200  161D                     l3168:
  4201  161D  3001               	movlw	1
  4202  161E                     u3605:
  4203  161E  36D7               	lsrf	___fltol@f1+3,f
  4204  161F  0CD6               	rrf	___fltol@f1+2,f
  4205  1620  0CD5               	rrf	___fltol@f1+1,f
  4206  1621  0CD4               	rrf	___fltol@f1,f
  4207  1622  0B89               	decfsz	9,f
  4208  1623  2E1E               	goto	u3605
  4209  1624  3001               	movlw	1
  4210  1625  00D8               	movwf	??___fltol
  4211  1626  0858               	movf	??___fltol,w
  4212  1627  07DE               	addwf	___fltol@exp1,f
  4213  1628  1D03               	btfss	3,2
  4214  1629  2E2B               	goto	u3611
  4215  162A  2E2C               	goto	u3610
  4216  162B                     u3611:
  4217  162B  2E1D               	goto	l3168
  4218  162C                     u3610:
  4219  162C  2E42               	goto	l3178
  4220  162D                     l3170:
  4221  162D  3020               	movlw	32
  4222  162E  025E               	subwf	___fltol@exp1,w
  4223  162F  1C03               	skipc
  4224  1630  2E32               	goto	u3621
  4225  1631  2E33               	goto	u3620
  4226  1632                     u3621:
  4227  1632  2E3D               	goto	l735
  4228  1633                     u3620:
  4229  1633  2DEA               	goto	l3148
  4230  1634                     l3176:
  4231  1634  3001               	movlw	1
  4232  1635                     u3635:
  4233  1635  35D4               	lslf	___fltol@f1,f
  4234  1636  0DD5               	rlf	___fltol@f1+1,f
  4235  1637  0DD6               	rlf	___fltol@f1+2,f
  4236  1638  0DD7               	rlf	___fltol@f1+3,f
  4237  1639  0B89               	decfsz	9,f
  4238  163A  2E35               	goto	u3635
  4239  163B  3001               	movlw	1
  4240  163C  02DE               	subwf	___fltol@exp1,f
  4241  163D                     l735:
  4242  163D  085E               	movf	___fltol@exp1,w
  4243  163E  1D03               	btfss	3,2
  4244  163F  2E41               	goto	u3641
  4245  1640  2E42               	goto	u3640
  4246  1641                     u3641:
  4247  1641  2E34               	goto	l3176
  4248  1642                     u3640:
  4249  1642                     l3178:
  4250  1642  085D               	movf	___fltol@sign1,w
  4251  1643  1903               	btfsc	3,2
  4252  1644  2E46               	goto	u3651
  4253  1645  2E47               	goto	u3650
  4254  1646                     u3651:
  4255  1646  2E52               	goto	l738
  4256  1647                     u3650:
  4257  1647                     l3180:
  4258  1647  09D4               	comf	___fltol@f1,f
  4259  1648  09D5               	comf	___fltol@f1+1,f
  4260  1649  09D6               	comf	___fltol@f1+2,f
  4261  164A  09D7               	comf	___fltol@f1+3,f
  4262  164B  0AD4               	incf	___fltol@f1,f
  4263  164C  1903               	skipnz
  4264  164D  0AD5               	incf	___fltol@f1+1,f
  4265  164E  1903               	skipnz
  4266  164F  0AD6               	incf	___fltol@f1+2,f
  4267  1650  1903               	skipnz
  4268  1651  0AD7               	incf	___fltol@f1+3,f
  4269  1652                     l738:
  4270  1652                     l728:
  4271  1652  0008               	return
  4272  1653                     __end_of___fltol:
  4273                           
  4274                           	psect	text6
  4275  01DA                     __ptext6:	
  4276 ;; *************** function ___fldiv *****************
  4277 ;; Defined at:
  4278 ;;		line 8 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\sprcdiv.c"
  4279 ;; Parameters:    Size  Location     Type
  4280 ;;  a               4    0[BANK0 ] long 
  4281 ;;  b               4    4[BANK0 ] long 
  4282 ;; Auto vars:     Size  Location     Type
  4283 ;;  grs             4   20[BANK0 ] unsigned long 
  4284 ;;  rem             4   13[BANK0 ] unsigned long 
  4285 ;;  new_exp         2   18[BANK0 ] int 
  4286 ;;  aexp            1   25[BANK0 ] unsigned char 
  4287 ;;  bexp            1   24[BANK0 ] unsigned char 
  4288 ;;  sign            1   17[BANK0 ] unsigned char 
  4289 ;; Return value:  Size  Location     Type
  4290 ;;                  4    0[BANK0 ] unsigned char 
  4291 ;; Registers used:
  4292 ;;		wreg, status,2, status,0
  4293 ;; Tracked objects:
  4294 ;;		On entry : 0/0
  4295 ;;		On exit  : 0/0
  4296 ;;		Unchanged: 0/0
  4297 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  4298 ;;      Params:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4299 ;;      Locals:         0      13       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4300 ;;      Temps:          0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4301 ;;      Totals:         0      26       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4302 ;;Total ram usage:       26 bytes
  4303 ;; Hardware stack levels used: 1
  4304 ;; This function calls:
  4305 ;;		Nothing
  4306 ;; This function is called by:
  4307 ;;		_scale_convert_gram
  4308 ;;		_calc_percentage
  4309 ;; This function uses a non-reentrant model
  4310 ;;
  4311                           
  4312                           
  4313                           ;psect for function ___fldiv
  4314  01DA                     ___fldiv:
  4315  01DA                     l3182:	
  4316                           ;incstack = 0
  4317                           ; Regs used in ___fldiv: [wreg+status,2+status,0]
  4318                           
  4319  01DA  0020               	movlb	0	; select bank0
  4320  01DB  0827               	movf	___fldiv@b+3,w
  4321  01DC  3980               	andlw	128
  4322  01DD  00A8               	movwf	??___fldiv
  4323  01DE  0828               	movf	??___fldiv,w
  4324  01DF  00B1               	movwf	___fldiv@sign
  4325  01E0                     l3184:
  4326  01E0  3527               	lslf	___fldiv@b+3,w
  4327  01E1  00A8               	movwf	??___fldiv
  4328  01E2  0828               	movf	??___fldiv,w
  4329  01E3  00B8               	movwf	___fldiv@bexp
  4330  01E4                     l3186:
  4331  01E4  1FA6               	btfss	___fldiv@b+2,7
  4332  01E5  29E7               	goto	u3661
  4333  01E6  29E8               	goto	u3660
  4334  01E7                     u3661:
  4335  01E7  29E9               	goto	l3190
  4336  01E8                     u3660:
  4337  01E8                     l3188:
  4338  01E8  1438               	bsf	___fldiv@bexp,0
  4339  01E9                     l3190:
  4340  01E9  0838               	movf	___fldiv@bexp,w
  4341  01EA  1903               	btfsc	3,2
  4342  01EB  29ED               	goto	u3671
  4343  01EC  29EE               	goto	u3670
  4344  01ED                     u3671:
  4345  01ED  29FE               	goto	l3200
  4346  01EE                     u3670:
  4347  01EE                     l3192:
  4348  01EE  0A38               	incf	___fldiv@bexp,w
  4349  01EF  1D03               	btfss	3,2
  4350  01F0  29F2               	goto	u3681
  4351  01F1  29F3               	goto	u3680
  4352  01F2                     u3681:
  4353  01F2  29FB               	goto	l3196
  4354  01F3                     u3680:
  4355  01F3                     l3194:
  4356  01F3  3000               	movlw	0
  4357  01F4  00A7               	movwf	___fldiv@b+3
  4358  01F5  3000               	movlw	0
  4359  01F6  00A6               	movwf	___fldiv@b+2
  4360  01F7  3000               	movlw	0
  4361  01F8  00A5               	movwf	___fldiv@b+1
  4362  01F9  3000               	movlw	0
  4363  01FA  00A4               	movwf	___fldiv@b
  4364  01FB                     l3196:
  4365  01FB  17A6               	bsf	___fldiv@b+2,7
  4366  01FC                     l3198:
  4367  01FC  01A7               	clrf	___fldiv@b+3
  4368  01FD  2A06               	goto	l3202
  4369  01FE                     l3200:
  4370  01FE  3000               	movlw	0
  4371  01FF  00A7               	movwf	___fldiv@b+3
  4372  0200  3000               	movlw	0
  4373  0201  00A6               	movwf	___fldiv@b+2
  4374  0202  3000               	movlw	0
  4375  0203  00A5               	movwf	___fldiv@b+1
  4376  0204  3000               	movlw	0
  4377  0205  00A4               	movwf	___fldiv@b
  4378  0206                     l3202:
  4379  0206  0823               	movf	___fldiv@a+3,w
  4380  0207  3980               	andlw	128
  4381  0208  00A8               	movwf	??___fldiv
  4382  0209  0828               	movf	??___fldiv,w
  4383  020A  06B1               	xorwf	___fldiv@sign,f
  4384  020B                     l3204:
  4385  020B  3523               	lslf	___fldiv@a+3,w
  4386  020C  00A8               	movwf	??___fldiv
  4387  020D  0828               	movf	??___fldiv,w
  4388  020E  00B9               	movwf	___fldiv@aexp
  4389  020F                     l3206:
  4390  020F  1FA2               	btfss	___fldiv@a+2,7
  4391  0210  2A12               	goto	u3691
  4392  0211  2A13               	goto	u3690
  4393  0212                     u3691:
  4394  0212  2A14               	goto	l3210
  4395  0213                     u3690:
  4396  0213                     l3208:
  4397  0213  1439               	bsf	___fldiv@aexp,0
  4398  0214                     l3210:
  4399  0214  0839               	movf	___fldiv@aexp,w
  4400  0215  1903               	btfsc	3,2
  4401  0216  2A18               	goto	u3701
  4402  0217  2A19               	goto	u3700
  4403  0218                     u3701:
  4404  0218  2A29               	goto	l3220
  4405  0219                     u3700:
  4406  0219                     l3212:
  4407  0219  0A39               	incf	___fldiv@aexp,w
  4408  021A  1D03               	btfss	3,2
  4409  021B  2A1D               	goto	u3711
  4410  021C  2A1E               	goto	u3710
  4411  021D                     u3711:
  4412  021D  2A26               	goto	l3216
  4413  021E                     u3710:
  4414  021E                     l3214:
  4415  021E  3000               	movlw	0
  4416  021F  00A3               	movwf	___fldiv@a+3
  4417  0220  3000               	movlw	0
  4418  0221  00A2               	movwf	___fldiv@a+2
  4419  0222  3000               	movlw	0
  4420  0223  00A1               	movwf	___fldiv@a+1
  4421  0224  3000               	movlw	0
  4422  0225  00A0               	movwf	___fldiv@a
  4423  0226                     l3216:
  4424  0226  17A2               	bsf	___fldiv@a+2,7
  4425  0227                     l3218:
  4426  0227  01A3               	clrf	___fldiv@a+3
  4427  0228  2A31               	goto	l891
  4428  0229                     l3220:
  4429  0229  3000               	movlw	0
  4430  022A  00A3               	movwf	___fldiv@a+3
  4431  022B  3000               	movlw	0
  4432  022C  00A2               	movwf	___fldiv@a+2
  4433  022D  3000               	movlw	0
  4434  022E  00A1               	movwf	___fldiv@a+1
  4435  022F  3000               	movlw	0
  4436  0230  00A0               	movwf	___fldiv@a
  4437  0231                     l891:
  4438  0231  0823               	movf	___fldiv@a+3,w
  4439  0232  0422               	iorwf	___fldiv@a+2,w
  4440  0233  0421               	iorwf	___fldiv@a+1,w
  4441  0234  0420               	iorwf	___fldiv@a,w
  4442  0235  1D03               	skipz
  4443  0236  2A38               	goto	u3721
  4444  0237  2A39               	goto	u3720
  4445  0238                     u3721:
  4446  0238  2A52               	goto	l3230
  4447  0239                     u3720:
  4448  0239                     l3222:
  4449  0239  3000               	movlw	0
  4450  023A  00A7               	movwf	___fldiv@b+3
  4451  023B  3000               	movlw	0
  4452  023C  00A6               	movwf	___fldiv@b+2
  4453  023D  3000               	movlw	0
  4454  023E  00A5               	movwf	___fldiv@b+1
  4455  023F  3000               	movlw	0
  4456  0240  00A4               	movwf	___fldiv@b
  4457  0241  3080               	movlw	128
  4458  0242  04A6               	iorwf	___fldiv@b+2,f
  4459  0243  307F               	movlw	127
  4460  0244  04A7               	iorwf	___fldiv@b+3,f
  4461  0245                     l3224:
  4462  0245  0831               	movf	___fldiv@sign,w
  4463  0246  00A8               	movwf	??___fldiv
  4464  0247  0828               	movf	??___fldiv,w
  4465  0248  04A7               	iorwf	___fldiv@b+3,f
  4466  0249                     l3226:
  4467  0249  0827               	movf	___fldiv@b+3,w
  4468  024A  00A3               	movwf	?___fldiv+3
  4469  024B  0826               	movf	___fldiv@b+2,w
  4470  024C  00A2               	movwf	?___fldiv+2
  4471  024D  0825               	movf	___fldiv@b+1,w
  4472  024E  00A1               	movwf	?___fldiv+1
  4473  024F  0824               	movf	___fldiv@b,w
  4474  0250  00A0               	movwf	?___fldiv
  4475  0251  2B8D               	goto	l893
  4476  0252                     l3230:
  4477  0252  0838               	movf	___fldiv@bexp,w
  4478  0253  1D03               	btfss	3,2
  4479  0254  2A56               	goto	u3731
  4480  0255  2A57               	goto	u3730
  4481  0256                     u3731:
  4482  0256  2A60               	goto	l3236
  4483  0257                     u3730:
  4484  0257                     l3232:
  4485  0257  3000               	movlw	0
  4486  0258  00A3               	movwf	?___fldiv+3
  4487  0259  3000               	movlw	0
  4488  025A  00A2               	movwf	?___fldiv+2
  4489  025B  3000               	movlw	0
  4490  025C  00A1               	movwf	?___fldiv+1
  4491  025D  3000               	movlw	0
  4492  025E  00A0               	movwf	?___fldiv
  4493  025F  2B8D               	goto	l893
  4494  0260                     l3236:
  4495  0260  0838               	movf	___fldiv@bexp,w
  4496  0261  00A8               	movwf	??___fldiv
  4497  0262  01A9               	clrf	??___fldiv+1
  4498  0263  0829               	movf	??___fldiv+1,w
  4499  0264  00AB               	movwf	??___fldiv+3
  4500  0265  0839               	movf	___fldiv@aexp,w
  4501  0266  0228               	subwf	??___fldiv,w
  4502  0267  00AA               	movwf	??___fldiv+2
  4503  0268  1C03               	skipc
  4504  0269  03AB               	decf	??___fldiv+3,f
  4505  026A  082A               	movf	??___fldiv+2,w
  4506  026B  3E7F               	addlw	127
  4507  026C  00B2               	movwf	___fldiv@new_exp
  4508  026D  3000               	movlw	0
  4509  026E  3D2B               	addwfc	??___fldiv+3,w
  4510  026F  00B3               	movwf	___fldiv@new_exp+1
  4511  0270                     l3238:
  4512  0270  0827               	movf	___fldiv@b+3,w
  4513  0271  00B0               	movwf	___fldiv@rem+3
  4514  0272  0826               	movf	___fldiv@b+2,w
  4515  0273  00AF               	movwf	___fldiv@rem+2
  4516  0274  0825               	movf	___fldiv@b+1,w
  4517  0275  00AE               	movwf	___fldiv@rem+1
  4518  0276  0824               	movf	___fldiv@b,w
  4519  0277  00AD               	movwf	___fldiv@rem
  4520  0278                     l3240:
  4521  0278  3000               	movlw	0
  4522  0279  00A7               	movwf	___fldiv@b+3
  4523  027A  3000               	movlw	0
  4524  027B  00A6               	movwf	___fldiv@b+2
  4525  027C  3000               	movlw	0
  4526  027D  00A5               	movwf	___fldiv@b+1
  4527  027E  3000               	movlw	0
  4528  027F  00A4               	movwf	___fldiv@b
  4529  0280                     l3242:
  4530  0280  3000               	movlw	0
  4531  0281  00B7               	movwf	___fldiv@grs+3
  4532  0282  3000               	movlw	0
  4533  0283  00B6               	movwf	___fldiv@grs+2
  4534  0284  3000               	movlw	0
  4535  0285  00B5               	movwf	___fldiv@grs+1
  4536  0286  3000               	movlw	0
  4537  0287  00B4               	movwf	___fldiv@grs
  4538  0288                     l3244:
  4539  0288  01B9               	clrf	___fldiv@aexp
  4540  0289  2AC8               	goto	l3264
  4541  028A                     l3246:
  4542  028A  0839               	movf	___fldiv@aexp,w
  4543  028B  1903               	btfsc	3,2
  4544  028C  2A8E               	goto	u3741
  4545  028D  2A8F               	goto	u3740
  4546  028E                     u3741:
  4547  028E  2AA9               	goto	l3256
  4548  028F                     u3740:
  4549  028F                     l3248:
  4550  028F  3001               	movlw	1
  4551  0290                     u3755:
  4552  0290  35AD               	lslf	___fldiv@rem,f
  4553  0291  0DAE               	rlf	___fldiv@rem+1,f
  4554  0292  0DAF               	rlf	___fldiv@rem+2,f
  4555  0293  0DB0               	rlf	___fldiv@rem+3,f
  4556  0294  0B89               	decfsz	9,f
  4557  0295  2A90               	goto	u3755
  4558  0296  3001               	movlw	1
  4559  0297                     u3765:
  4560  0297  35A4               	lslf	___fldiv@b,f
  4561  0298  0DA5               	rlf	___fldiv@b+1,f
  4562  0299  0DA6               	rlf	___fldiv@b+2,f
  4563  029A  0DA7               	rlf	___fldiv@b+3,f
  4564  029B  0B89               	decfsz	9,f
  4565  029C  2A97               	goto	u3765
  4566  029D                     l3250:
  4567  029D  1FB7               	btfss	___fldiv@grs+3,7
  4568  029E  2AA0               	goto	u3771
  4569  029F  2AA1               	goto	u3770
  4570  02A0                     u3771:
  4571  02A0  2AA2               	goto	l3254
  4572  02A1                     u3770:
  4573  02A1                     l3252:
  4574  02A1  1424               	bsf	___fldiv@b,0
  4575  02A2                     l3254:
  4576  02A2  3001               	movlw	1
  4577  02A3                     u3785:
  4578  02A3  35B4               	lslf	___fldiv@grs,f
  4579  02A4  0DB5               	rlf	___fldiv@grs+1,f
  4580  02A5  0DB6               	rlf	___fldiv@grs+2,f
  4581  02A6  0DB7               	rlf	___fldiv@grs+3,f
  4582  02A7  0B89               	decfsz	9,f
  4583  02A8  2AA3               	goto	u3785
  4584  02A9                     l3256:
  4585  02A9  0823               	movf	___fldiv@a+3,w
  4586  02AA  0230               	subwf	___fldiv@rem+3,w
  4587  02AB  1D03               	skipz
  4588  02AC  2AB7               	goto	u3795
  4589  02AD  0822               	movf	___fldiv@a+2,w
  4590  02AE  022F               	subwf	___fldiv@rem+2,w
  4591  02AF  1D03               	skipz
  4592  02B0  2AB7               	goto	u3795
  4593  02B1  0821               	movf	___fldiv@a+1,w
  4594  02B2  022E               	subwf	___fldiv@rem+1,w
  4595  02B3  1D03               	skipz
  4596  02B4  2AB7               	goto	u3795
  4597  02B5  0820               	movf	___fldiv@a,w
  4598  02B6  022D               	subwf	___fldiv@rem,w
  4599  02B7                     u3795:
  4600  02B7  1C03               	skipc
  4601  02B8  2ABA               	goto	u3791
  4602  02B9  2ABB               	goto	u3790
  4603  02BA                     u3791:
  4604  02BA  2AC4               	goto	l3262
  4605  02BB                     u3790:
  4606  02BB                     l3258:
  4607  02BB  1737               	bsf	___fldiv@grs+3,6
  4608  02BC                     l3260:
  4609  02BC  0820               	movf	___fldiv@a,w
  4610  02BD  02AD               	subwf	___fldiv@rem,f
  4611  02BE  0821               	movf	___fldiv@a+1,w
  4612  02BF  3BAE               	subwfb	___fldiv@rem+1,f
  4613  02C0  0822               	movf	___fldiv@a+2,w
  4614  02C1  3BAF               	subwfb	___fldiv@rem+2,f
  4615  02C2  0823               	movf	___fldiv@a+3,w
  4616  02C3  3BB0               	subwfb	___fldiv@rem+3,f
  4617  02C4                     l3262:
  4618  02C4  3001               	movlw	1
  4619  02C5  00A8               	movwf	??___fldiv
  4620  02C6  0828               	movf	??___fldiv,w
  4621  02C7  07B9               	addwf	___fldiv@aexp,f
  4622  02C8                     l3264:
  4623  02C8  301A               	movlw	26
  4624  02C9  0239               	subwf	___fldiv@aexp,w
  4625  02CA  1C03               	skipc
  4626  02CB  2ACD               	goto	u3801
  4627  02CC  2ACE               	goto	u3800
  4628  02CD                     u3801:
  4629  02CD  2A8A               	goto	l3246
  4630  02CE                     u3800:
  4631  02CE                     l3266:
  4632  02CE  0830               	movf	___fldiv@rem+3,w
  4633  02CF  042F               	iorwf	___fldiv@rem+2,w
  4634  02D0  042E               	iorwf	___fldiv@rem+1,w
  4635  02D1  042D               	iorwf	___fldiv@rem,w
  4636  02D2  1903               	skipnz
  4637  02D3  2AD5               	goto	u3811
  4638  02D4  2AD6               	goto	u3810
  4639  02D5                     u3811:
  4640  02D5  2AEF               	goto	l3280
  4641  02D6                     u3810:
  4642  02D6                     l3268:
  4643  02D6  1434               	bsf	___fldiv@grs,0
  4644  02D7  2AEF               	goto	l3280
  4645  02D8                     l3270:
  4646  02D8  3001               	movlw	1
  4647  02D9                     u3825:
  4648  02D9  35A4               	lslf	___fldiv@b,f
  4649  02DA  0DA5               	rlf	___fldiv@b+1,f
  4650  02DB  0DA6               	rlf	___fldiv@b+2,f
  4651  02DC  0DA7               	rlf	___fldiv@b+3,f
  4652  02DD  0B89               	decfsz	9,f
  4653  02DE  2AD9               	goto	u3825
  4654  02DF                     l3272:
  4655  02DF  1FB7               	btfss	___fldiv@grs+3,7
  4656  02E0  2AE2               	goto	u3831
  4657  02E1  2AE3               	goto	u3830
  4658  02E2                     u3831:
  4659  02E2  2AE4               	goto	l3276
  4660  02E3                     u3830:
  4661  02E3                     l3274:
  4662  02E3  1424               	bsf	___fldiv@b,0
  4663  02E4                     l3276:
  4664  02E4  3001               	movlw	1
  4665  02E5                     u3845:
  4666  02E5  35B4               	lslf	___fldiv@grs,f
  4667  02E6  0DB5               	rlf	___fldiv@grs+1,f
  4668  02E7  0DB6               	rlf	___fldiv@grs+2,f
  4669  02E8  0DB7               	rlf	___fldiv@grs+3,f
  4670  02E9  0B89               	decfsz	9,f
  4671  02EA  2AE5               	goto	u3845
  4672  02EB                     l3278:
  4673  02EB  30FF               	movlw	255
  4674  02EC  07B2               	addwf	___fldiv@new_exp,f
  4675  02ED  30FF               	movlw	255
  4676  02EE  3DB3               	addwfc	___fldiv@new_exp+1,f
  4677  02EF                     l3280:
  4678  02EF  1FA6               	btfss	___fldiv@b+2,7
  4679  02F0  2AF2               	goto	u3851
  4680  02F1  2AF3               	goto	u3850
  4681  02F2                     u3851:
  4682  02F2  2AD8               	goto	l3270
  4683  02F3                     u3850:
  4684  02F3                     l3282:
  4685  02F3  01B9               	clrf	___fldiv@aexp
  4686  02F4                     l3284:
  4687  02F4  1FB7               	btfss	___fldiv@grs+3,7
  4688  02F5  2AF7               	goto	u3861
  4689  02F6  2AF8               	goto	u3860
  4690  02F7                     u3861:
  4691  02F7  2B14               	goto	l3292
  4692  02F8                     u3860:
  4693  02F8                     l3286:
  4694  02F8  30FF               	movlw	255
  4695  02F9  0534               	andwf	___fldiv@grs,w
  4696  02FA  00A8               	movwf	??___fldiv
  4697  02FB  30FF               	movlw	255
  4698  02FC  0535               	andwf	___fldiv@grs+1,w
  4699  02FD  00A9               	movwf	??___fldiv+1
  4700  02FE  30FF               	movlw	255
  4701  02FF  0536               	andwf	___fldiv@grs+2,w
  4702  0300  00AA               	movwf	??___fldiv+2
  4703  0301  307F               	movlw	127
  4704  0302  0537               	andwf	___fldiv@grs+3,w
  4705  0303  00AB               	movwf	??___fldiv+3
  4706  0304  082B               	movf	??___fldiv+3,w
  4707  0305  042A               	iorwf	??___fldiv+2,w
  4708  0306  0429               	iorwf	??___fldiv+1,w
  4709  0307  0428               	iorwf	??___fldiv,w
  4710  0308  1903               	skipnz
  4711  0309  2B0B               	goto	u3871
  4712  030A  2B0C               	goto	u3870
  4713  030B                     u3871:
  4714  030B  2B0F               	goto	l907
  4715  030C                     u3870:
  4716  030C                     l3288:
  4717  030C  01B9               	clrf	___fldiv@aexp
  4718  030D  0AB9               	incf	___fldiv@aexp,f
  4719  030E  2B14               	goto	l3292
  4720  030F                     l907:
  4721  030F  1C24               	btfss	___fldiv@b,0
  4722  0310  2B12               	goto	u3881
  4723  0311  2B13               	goto	u3880
  4724  0312                     u3881:
  4725  0312  2B14               	goto	l3292
  4726  0313                     u3880:
  4727  0313  2B0C               	goto	l3288
  4728  0314                     l3292:
  4729  0314  0839               	movf	___fldiv@aexp,w
  4730  0315  1903               	btfsc	3,2
  4731  0316  2B18               	goto	u3891
  4732  0317  2B19               	goto	u3890
  4733  0318                     u3891:
  4734  0318  2B41               	goto	l3302
  4735  0319                     u3890:
  4736  0319                     l3294:
  4737  0319  3001               	movlw	1
  4738  031A  07A4               	addwf	___fldiv@b,f
  4739  031B  3000               	movlw	0
  4740  031C  3DA5               	addwfc	___fldiv@b+1,f
  4741  031D  3000               	movlw	0
  4742  031E  3DA6               	addwfc	___fldiv@b+2,f
  4743  031F  3000               	movlw	0
  4744  0320  3DA7               	addwfc	___fldiv@b+3,f
  4745  0321                     l3296:
  4746  0321  1C27               	btfss	___fldiv@b+3,0
  4747  0322  2B24               	goto	u3901
  4748  0323  2B25               	goto	u3900
  4749  0324                     u3901:
  4750  0324  2B41               	goto	l3302
  4751  0325                     u3900:
  4752  0325                     l3298:
  4753  0325  0824               	movf	___fldiv@b,w
  4754  0326  00A8               	movwf	??___fldiv
  4755  0327  0825               	movf	___fldiv@b+1,w
  4756  0328  00A9               	movwf	??___fldiv+1
  4757  0329  0826               	movf	___fldiv@b+2,w
  4758  032A  00AA               	movwf	??___fldiv+2
  4759  032B  0827               	movf	___fldiv@b+3,w
  4760  032C  00AB               	movwf	??___fldiv+3
  4761  032D  3001               	movlw	1
  4762  032E  00AC               	movwf	??___fldiv+4
  4763  032F                     u3915:
  4764  032F  37AB               	asrf	??___fldiv+3,f
  4765  0330  0CAA               	rrf	??___fldiv+2,f
  4766  0331  0CA9               	rrf	??___fldiv+1,f
  4767  0332  0CA8               	rrf	??___fldiv,f
  4768  0333                     u3910:
  4769  0333  0BAC               	decfsz	??___fldiv+4,f
  4770  0334  2B2F               	goto	u3915
  4771  0335  082B               	movf	??___fldiv+3,w
  4772  0336  00A7               	movwf	___fldiv@b+3
  4773  0337  082A               	movf	??___fldiv+2,w
  4774  0338  00A6               	movwf	___fldiv@b+2
  4775  0339  0829               	movf	??___fldiv+1,w
  4776  033A  00A5               	movwf	___fldiv@b+1
  4777  033B  0828               	movf	??___fldiv,w
  4778  033C  00A4               	movwf	___fldiv@b
  4779  033D                     l3300:
  4780  033D  3001               	movlw	1
  4781  033E  07B2               	addwf	___fldiv@new_exp,f
  4782  033F  3000               	movlw	0
  4783  0340  3DB3               	addwfc	___fldiv@new_exp+1,f
  4784  0341                     l3302:
  4785  0341  0833               	movf	___fldiv@new_exp+1,w
  4786  0342  3A80               	xorlw	128
  4787  0343  00A8               	movwf	??___fldiv
  4788  0344  3080               	movlw	128
  4789  0345  0228               	subwf	??___fldiv,w
  4790  0346  1D03               	skipz
  4791  0347  2B4A               	goto	u3925
  4792  0348  30FF               	movlw	255
  4793  0349  0232               	subwf	___fldiv@new_exp,w
  4794  034A                     u3925:
  4795  034A  1C03               	skipc
  4796  034B  2B4D               	goto	u3921
  4797  034C  2B4E               	goto	u3920
  4798  034D                     u3921:
  4799  034D  2B5B               	goto	l912
  4800  034E                     u3920:
  4801  034E                     l3304:
  4802  034E  30FF               	movlw	255
  4803  034F  0020               	movlb	0	; select bank0
  4804  0350  00B2               	movwf	___fldiv@new_exp
  4805  0351  3000               	movlw	0
  4806  0352  00B3               	movwf	___fldiv@new_exp+1
  4807  0353  3000               	movlw	0
  4808  0354  00A7               	movwf	___fldiv@b+3
  4809  0355  3000               	movlw	0
  4810  0356  00A6               	movwf	___fldiv@b+2
  4811  0357  3000               	movlw	0
  4812  0358  00A5               	movwf	___fldiv@b+1
  4813  0359  3000               	movlw	0
  4814  035A  00A4               	movwf	___fldiv@b
  4815  035B                     l912:
  4816  035B  0020               	movlb	0	; select bank0
  4817  035C  0833               	movf	___fldiv@new_exp+1,w
  4818  035D  3A80               	xorlw	128
  4819  035E  00A8               	movwf	??___fldiv
  4820  035F  3080               	movlw	128
  4821  0360  0228               	subwf	??___fldiv,w
  4822  0361  1D03               	skipz
  4823  0362  2B65               	goto	u3935
  4824  0363  3001               	movlw	1
  4825  0364  0232               	subwf	___fldiv@new_exp,w
  4826  0365                     u3935:
  4827  0365  1803               	skipnc
  4828  0366  2B68               	goto	u3931
  4829  0367  2B69               	goto	u3930
  4830  0368                     u3931:
  4831  0368  2B75               	goto	l913
  4832  0369                     u3930:
  4833  0369                     l3306:
  4834  0369  0020               	movlb	0	; select bank0
  4835  036A  01B2               	clrf	___fldiv@new_exp
  4836  036B  01B3               	clrf	___fldiv@new_exp+1
  4837  036C                     l3308:
  4838  036C  3000               	movlw	0
  4839  036D  00A7               	movwf	___fldiv@b+3
  4840  036E  3000               	movlw	0
  4841  036F  00A6               	movwf	___fldiv@b+2
  4842  0370  3000               	movlw	0
  4843  0371  00A5               	movwf	___fldiv@b+1
  4844  0372  3000               	movlw	0
  4845  0373  00A4               	movwf	___fldiv@b
  4846  0374                     l3310:
  4847  0374  01B1               	clrf	___fldiv@sign
  4848  0375                     l913:
  4849  0375  0020               	movlb	0	; select bank0
  4850  0376  0832               	movf	___fldiv@new_exp,w
  4851  0377  00A8               	movwf	??___fldiv
  4852  0378  0828               	movf	??___fldiv,w
  4853  0379  00B8               	movwf	___fldiv@bexp
  4854  037A                     l3312:
  4855  037A  1C38               	btfss	___fldiv@bexp,0
  4856  037B  2B7D               	goto	u3941
  4857  037C  2B7E               	goto	u3940
  4858  037D                     u3941:
  4859  037D  2B80               	goto	l3316
  4860  037E                     u3940:
  4861  037E                     l3314:
  4862  037E  17A6               	bsf	___fldiv@b+2,7
  4863  037F  2B84               	goto	l915
  4864  0380                     l3316:
  4865  0380  307F               	movlw	127
  4866  0381  00A8               	movwf	??___fldiv
  4867  0382  0828               	movf	??___fldiv,w
  4868  0383  05A6               	andwf	___fldiv@b+2,f
  4869  0384                     l915:
  4870  0384  3638               	lsrf	___fldiv@bexp,w
  4871  0385  00A8               	movwf	??___fldiv
  4872  0386  0828               	movf	??___fldiv,w
  4873  0387  00A7               	movwf	___fldiv@b+3
  4874  0388  0831               	movf	___fldiv@sign,w
  4875  0389  00A8               	movwf	??___fldiv
  4876  038A  0828               	movf	??___fldiv,w
  4877  038B  04A7               	iorwf	___fldiv@b+3,f
  4878  038C  2A49               	goto	l3226
  4879  038D                     l893:
  4880  038D  0008               	return
  4881  038E                     __end_of___fldiv:
  4882                           
  4883                           	psect	text7
  4884  058A                     __ptext7:	
  4885 ;; *************** function ___flmul *****************
  4886 ;; Defined at:
  4887 ;;		line 8 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\sprcmul.c"
  4888 ;; Parameters:    Size  Location     Type
  4889 ;;  b               4   26[BANK0 ] unsigned char 
  4890 ;;  a               4   30[BANK0 ] unsigned char 
  4891 ;; Auto vars:     Size  Location     Type
  4892 ;;  prod            4   46[BANK0 ] struct .
  4893 ;;  grs             4   40[BANK0 ] unsigned long 
  4894 ;;  temp            2   50[BANK0 ] struct .
  4895 ;;  bexp            1   45[BANK0 ] unsigned char 
  4896 ;;  aexp            1   44[BANK0 ] unsigned char 
  4897 ;;  sign            1   39[BANK0 ] unsigned char 
  4898 ;; Return value:  Size  Location     Type
  4899 ;;                  4   26[BANK0 ] unsigned char 
  4900 ;; Registers used:
  4901 ;;		wreg, status,2, status,0, pclath, cstack
  4902 ;; Tracked objects:
  4903 ;;		On entry : 0/0
  4904 ;;		On exit  : 0/0
  4905 ;;		Unchanged: 0/0
  4906 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  4907 ;;      Params:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4908 ;;      Locals:         0      13       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4909 ;;      Temps:          0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4910 ;;      Totals:         0      26       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4911 ;;Total ram usage:       26 bytes
  4912 ;; Hardware stack levels used: 1
  4913 ;; Hardware stack levels required when called: 1
  4914 ;; This function calls:
  4915 ;;		__Umul8_16
  4916 ;; This function is called by:
  4917 ;;		_calc_percentage
  4918 ;; This function uses a non-reentrant model
  4919 ;;
  4920                           
  4921                           
  4922                           ;psect for function ___flmul
  4923  058A                     ___flmul:
  4924  058A                     l3578:	
  4925                           ;incstack = 0
  4926                           ; Regs used in ___flmul: [wreg+status,2+status,0+pclath+cstack]
  4927                           
  4928  058A  0020               	movlb	0	; select bank0
  4929  058B  083D               	movf	___flmul@b+3,w
  4930  058C  3980               	andlw	128
  4931  058D  00C2               	movwf	??___flmul
  4932  058E  0842               	movf	??___flmul,w
  4933  058F  00C7               	movwf	___flmul@sign
  4934  0590                     l3580:
  4935  0590  353D               	lslf	___flmul@b+3,w
  4936  0591  00C2               	movwf	??___flmul
  4937  0592  0842               	movf	??___flmul,w
  4938  0593  00CD               	movwf	___flmul@bexp
  4939  0594                     l3582:
  4940  0594  1FBC               	btfss	___flmul@b+2,7
  4941  0595  2D97               	goto	u4301
  4942  0596  2D98               	goto	u4300
  4943  0597                     u4301:
  4944  0597  2D99               	goto	l3586
  4945  0598                     u4300:
  4946  0598                     l3584:
  4947  0598  144D               	bsf	___flmul@bexp,0
  4948  0599                     l3586:
  4949  0599  084D               	movf	___flmul@bexp,w
  4950  059A  1903               	btfsc	3,2
  4951  059B  2D9D               	goto	u4311
  4952  059C  2D9E               	goto	u4310
  4953  059D                     u4311:
  4954  059D  2DAD               	goto	l3594
  4955  059E                     u4310:
  4956  059E                     l3588:
  4957  059E  0A4D               	incf	___flmul@bexp,w
  4958  059F  1D03               	btfss	3,2
  4959  05A0  2DA2               	goto	u4321
  4960  05A1  2DA3               	goto	u4320
  4961  05A2                     u4321:
  4962  05A2  2DAB               	goto	l3592
  4963  05A3                     u4320:
  4964  05A3                     l3590:
  4965  05A3  3000               	movlw	0
  4966  05A4  00BD               	movwf	___flmul@b+3
  4967  05A5  3000               	movlw	0
  4968  05A6  00BC               	movwf	___flmul@b+2
  4969  05A7  3000               	movlw	0
  4970  05A8  00BB               	movwf	___flmul@b+1
  4971  05A9  3000               	movlw	0
  4972  05AA  00BA               	movwf	___flmul@b
  4973  05AB                     l3592:
  4974  05AB  17BC               	bsf	___flmul@b+2,7
  4975  05AC  2DB5               	goto	l3596
  4976  05AD                     l3594:
  4977  05AD  3000               	movlw	0
  4978  05AE  00BD               	movwf	___flmul@b+3
  4979  05AF  3000               	movlw	0
  4980  05B0  00BC               	movwf	___flmul@b+2
  4981  05B1  3000               	movlw	0
  4982  05B2  00BB               	movwf	___flmul@b+1
  4983  05B3  3000               	movlw	0
  4984  05B4  00BA               	movwf	___flmul@b
  4985  05B5                     l3596:
  4986  05B5  0841               	movf	___flmul@a+3,w
  4987  05B6  3980               	andlw	128
  4988  05B7  00C2               	movwf	??___flmul
  4989  05B8  0842               	movf	??___flmul,w
  4990  05B9  06C7               	xorwf	___flmul@sign,f
  4991  05BA                     l3598:
  4992  05BA  3541               	lslf	___flmul@a+3,w
  4993  05BB  00C2               	movwf	??___flmul
  4994  05BC  0842               	movf	??___flmul,w
  4995  05BD  00CC               	movwf	___flmul@aexp
  4996  05BE                     l3600:
  4997  05BE  1FC0               	btfss	___flmul@a+2,7
  4998  05BF  2DC1               	goto	u4331
  4999  05C0  2DC2               	goto	u4330
  5000  05C1                     u4331:
  5001  05C1  2DC3               	goto	l3604
  5002  05C2                     u4330:
  5003  05C2                     l3602:
  5004  05C2  144C               	bsf	___flmul@aexp,0
  5005  05C3                     l3604:
  5006  05C3  084C               	movf	___flmul@aexp,w
  5007  05C4  1903               	btfsc	3,2
  5008  05C5  2DC7               	goto	u4341
  5009  05C6  2DC8               	goto	u4340
  5010  05C7                     u4341:
  5011  05C7  2DD7               	goto	l3612
  5012  05C8                     u4340:
  5013  05C8                     l3606:
  5014  05C8  0A4C               	incf	___flmul@aexp,w
  5015  05C9  1D03               	btfss	3,2
  5016  05CA  2DCC               	goto	u4351
  5017  05CB  2DCD               	goto	u4350
  5018  05CC                     u4351:
  5019  05CC  2DD5               	goto	l3610
  5020  05CD                     u4350:
  5021  05CD                     l3608:
  5022  05CD  3000               	movlw	0
  5023  05CE  00C1               	movwf	___flmul@a+3
  5024  05CF  3000               	movlw	0
  5025  05D0  00C0               	movwf	___flmul@a+2
  5026  05D1  3000               	movlw	0
  5027  05D2  00BF               	movwf	___flmul@a+1
  5028  05D3  3000               	movlw	0
  5029  05D4  00BE               	movwf	___flmul@a
  5030  05D5                     l3610:
  5031  05D5  17C0               	bsf	___flmul@a+2,7
  5032  05D6  2DDF               	goto	l3614
  5033  05D7                     l3612:
  5034  05D7  3000               	movlw	0
  5035  05D8  00C1               	movwf	___flmul@a+3
  5036  05D9  3000               	movlw	0
  5037  05DA  00C0               	movwf	___flmul@a+2
  5038  05DB  3000               	movlw	0
  5039  05DC  00BF               	movwf	___flmul@a+1
  5040  05DD  3000               	movlw	0
  5041  05DE  00BE               	movwf	___flmul@a
  5042  05DF                     l3614:
  5043  05DF  084C               	movf	___flmul@aexp,w
  5044  05E0  1903               	btfsc	3,2
  5045  05E1  2DE3               	goto	u4361
  5046  05E2  2DE4               	goto	u4360
  5047  05E3                     u4361:
  5048  05E3  2DE9               	goto	l3618
  5049  05E4                     u4360:
  5050  05E4                     l3616:
  5051  05E4  084D               	movf	___flmul@bexp,w
  5052  05E5  1D03               	btfss	3,2
  5053  05E6  2DE8               	goto	u4371
  5054  05E7  2DE9               	goto	u4370
  5055  05E8                     u4371:
  5056  05E8  2DF2               	goto	l3622
  5057  05E9                     u4370:
  5058  05E9                     l3618:
  5059  05E9  3000               	movlw	0
  5060  05EA  00BD               	movwf	?___flmul+3
  5061  05EB  3000               	movlw	0
  5062  05EC  00BC               	movwf	?___flmul+2
  5063  05ED  3000               	movlw	0
  5064  05EE  00BB               	movwf	?___flmul+1
  5065  05EF  3000               	movlw	0
  5066  05F0  00BA               	movwf	?___flmul
  5067  05F1  2FE0               	goto	l931
  5068  05F2                     l3622:
  5069  05F2  083A               	movf	___flmul@b,w
  5070  05F3  00C2               	movwf	??___flmul
  5071  05F4  0842               	movf	??___flmul,w
  5072  05F5  00F0               	movwf	__Umul8_16@multiplicand
  5073  05F6  0840               	movf	___flmul@a+2,w
  5074  05F7  3190  2071  3185   	fcall	__Umul8_16
  5075  05FA  0871               	movf	?__Umul8_16+1,w
  5076  05FB  0020               	movlb	0	; select bank0
  5077  05FC  00D3               	movwf	___flmul@temp+1
  5078  05FD  0870               	movf	?__Umul8_16,w
  5079  05FE  00D2               	movwf	___flmul@temp
  5080  05FF                     l3624:
  5081  05FF  0852               	movf	___flmul@temp,w
  5082  0600  00C2               	movwf	??___flmul
  5083  0601  01C3               	clrf	??___flmul+1
  5084  0602  01C4               	clrf	??___flmul+2
  5085  0603  01C5               	clrf	??___flmul+3
  5086  0604  0845               	movf	??___flmul+3,w
  5087  0605  00CB               	movwf	___flmul@grs+3
  5088  0606  0844               	movf	??___flmul+2,w
  5089  0607  00CA               	movwf	___flmul@grs+2
  5090  0608  0843               	movf	??___flmul+1,w
  5091  0609  00C9               	movwf	___flmul@grs+1
  5092  060A  0842               	movf	??___flmul,w
  5093  060B  00C8               	movwf	___flmul@grs
  5094  060C                     l3626:
  5095  060C  0853               	movf	___flmul@temp+1,w
  5096  060D  00C2               	movwf	??___flmul
  5097  060E  01C3               	clrf	??___flmul+1
  5098  060F  01C4               	clrf	??___flmul+2
  5099  0610  01C5               	clrf	??___flmul+3
  5100  0611  0845               	movf	??___flmul+3,w
  5101  0612  00D1               	movwf	___flmul@prod+3
  5102  0613  0844               	movf	??___flmul+2,w
  5103  0614  00D0               	movwf	___flmul@prod+2
  5104  0615  0843               	movf	??___flmul+1,w
  5105  0616  00CF               	movwf	___flmul@prod+1
  5106  0617  0842               	movf	??___flmul,w
  5107  0618  00CE               	movwf	___flmul@prod
  5108  0619  083B               	movf	___flmul@b+1,w
  5109  061A  00C2               	movwf	??___flmul
  5110  061B  0842               	movf	??___flmul,w
  5111  061C  00F0               	movwf	__Umul8_16@multiplicand
  5112  061D  083F               	movf	___flmul@a+1,w
  5113  061E  3190  2071  3185   	fcall	__Umul8_16
  5114  0621  0871               	movf	?__Umul8_16+1,w
  5115  0622  0020               	movlb	0	; select bank0
  5116  0623  00D3               	movwf	___flmul@temp+1
  5117  0624  0870               	movf	?__Umul8_16,w
  5118  0625  00D2               	movwf	___flmul@temp
  5119  0626                     l3628:
  5120  0626  0852               	movf	___flmul@temp,w
  5121  0627  00C2               	movwf	??___flmul
  5122  0628  01C3               	clrf	??___flmul+1
  5123  0629  01C4               	clrf	??___flmul+2
  5124  062A  01C5               	clrf	??___flmul+3
  5125  062B  0842               	movf	??___flmul,w
  5126  062C  07C8               	addwf	___flmul@grs,f
  5127  062D  0843               	movf	??___flmul+1,w
  5128  062E  3DC9               	addwfc	___flmul@grs+1,f
  5129  062F  0844               	movf	??___flmul+2,w
  5130  0630  3DCA               	addwfc	___flmul@grs+2,f
  5131  0631  0845               	movf	??___flmul+3,w
  5132  0632  3DCB               	addwfc	___flmul@grs+3,f
  5133  0633                     l3630:
  5134  0633  0853               	movf	___flmul@temp+1,w
  5135  0634  00C2               	movwf	??___flmul
  5136  0635  01C3               	clrf	??___flmul+1
  5137  0636  01C4               	clrf	??___flmul+2
  5138  0637  01C5               	clrf	??___flmul+3
  5139  0638  0842               	movf	??___flmul,w
  5140  0639  07CE               	addwf	___flmul@prod,f
  5141  063A  0843               	movf	??___flmul+1,w
  5142  063B  3DCF               	addwfc	___flmul@prod+1,f
  5143  063C  0844               	movf	??___flmul+2,w
  5144  063D  3DD0               	addwfc	___flmul@prod+2,f
  5145  063E  0845               	movf	??___flmul+3,w
  5146  063F  3DD1               	addwfc	___flmul@prod+3,f
  5147  0640  083C               	movf	___flmul@b+2,w
  5148  0641  00C2               	movwf	??___flmul
  5149  0642  0842               	movf	??___flmul,w
  5150  0643  00F0               	movwf	__Umul8_16@multiplicand
  5151  0644  083E               	movf	___flmul@a,w
  5152  0645  3190  2071  3185   	fcall	__Umul8_16
  5153  0648  0871               	movf	?__Umul8_16+1,w
  5154  0649  0020               	movlb	0	; select bank0
  5155  064A  00D3               	movwf	___flmul@temp+1
  5156  064B  0870               	movf	?__Umul8_16,w
  5157  064C  00D2               	movwf	___flmul@temp
  5158  064D                     l3632:
  5159  064D  0852               	movf	___flmul@temp,w
  5160  064E  00C2               	movwf	??___flmul
  5161  064F  01C3               	clrf	??___flmul+1
  5162  0650  01C4               	clrf	??___flmul+2
  5163  0651  01C5               	clrf	??___flmul+3
  5164  0652  0842               	movf	??___flmul,w
  5165  0653  07C8               	addwf	___flmul@grs,f
  5166  0654  0843               	movf	??___flmul+1,w
  5167  0655  3DC9               	addwfc	___flmul@grs+1,f
  5168  0656  0844               	movf	??___flmul+2,w
  5169  0657  3DCA               	addwfc	___flmul@grs+2,f
  5170  0658  0845               	movf	??___flmul+3,w
  5171  0659  3DCB               	addwfc	___flmul@grs+3,f
  5172  065A                     l3634:
  5173  065A  0853               	movf	___flmul@temp+1,w
  5174  065B  00C2               	movwf	??___flmul
  5175  065C  01C3               	clrf	??___flmul+1
  5176  065D  01C4               	clrf	??___flmul+2
  5177  065E  01C5               	clrf	??___flmul+3
  5178  065F  0842               	movf	??___flmul,w
  5179  0660  07CE               	addwf	___flmul@prod,f
  5180  0661  0843               	movf	??___flmul+1,w
  5181  0662  3DCF               	addwfc	___flmul@prod+1,f
  5182  0663  0844               	movf	??___flmul+2,w
  5183  0664  3DD0               	addwfc	___flmul@prod+2,f
  5184  0665  0845               	movf	??___flmul+3,w
  5185  0666  3DD1               	addwfc	___flmul@prod+3,f
  5186  0667                     l3636:
  5187  0667  3008               	movlw	8
  5188  0668                     u4385:
  5189  0668  35C8               	lslf	___flmul@grs,f
  5190  0669  0DC9               	rlf	___flmul@grs+1,f
  5191  066A  0DCA               	rlf	___flmul@grs+2,f
  5192  066B  0DCB               	rlf	___flmul@grs+3,f
  5193  066C  0B89               	decfsz	9,f
  5194  066D  2E68               	goto	u4385
  5195  066E                     l3638:
  5196  066E  083B               	movf	___flmul@b+1,w
  5197  066F  00C2               	movwf	??___flmul
  5198  0670  0842               	movf	??___flmul,w
  5199  0671  00F0               	movwf	__Umul8_16@multiplicand
  5200  0672  083E               	movf	___flmul@a,w
  5201  0673  3190  2071  3185   	fcall	__Umul8_16
  5202  0676  0871               	movf	?__Umul8_16+1,w
  5203  0677  0020               	movlb	0	; select bank0
  5204  0678  00D3               	movwf	___flmul@temp+1
  5205  0679  0870               	movf	?__Umul8_16,w
  5206  067A  00D2               	movwf	___flmul@temp
  5207  067B                     l3640:
  5208  067B  0852               	movf	___flmul@temp,w
  5209  067C  07C8               	addwf	___flmul@grs,f
  5210  067D  0853               	movf	___flmul@temp+1,w
  5211  067E  3DC9               	addwfc	___flmul@grs+1,f
  5212  067F  3000               	movlw	0
  5213  0680  3DCA               	addwfc	___flmul@grs+2,f
  5214  0681  3DCB               	addwfc	___flmul@grs+3,f
  5215  0682                     l3642:
  5216  0682  083A               	movf	___flmul@b,w
  5217  0683  00C2               	movwf	??___flmul
  5218  0684  0842               	movf	??___flmul,w
  5219  0685  00F0               	movwf	__Umul8_16@multiplicand
  5220  0686  083F               	movf	___flmul@a+1,w
  5221  0687  3190  2071  3185   	fcall	__Umul8_16
  5222  068A  0871               	movf	?__Umul8_16+1,w
  5223  068B  0020               	movlb	0	; select bank0
  5224  068C  00D3               	movwf	___flmul@temp+1
  5225  068D  0870               	movf	?__Umul8_16,w
  5226  068E  00D2               	movwf	___flmul@temp
  5227  068F                     l3644:
  5228  068F  0852               	movf	___flmul@temp,w
  5229  0690  07C8               	addwf	___flmul@grs,f
  5230  0691  0853               	movf	___flmul@temp+1,w
  5231  0692  3DC9               	addwfc	___flmul@grs+1,f
  5232  0693  3000               	movlw	0
  5233  0694  3DCA               	addwfc	___flmul@grs+2,f
  5234  0695  3DCB               	addwfc	___flmul@grs+3,f
  5235  0696                     l3646:
  5236  0696  3008               	movlw	8
  5237  0697                     u4395:
  5238  0697  35C8               	lslf	___flmul@grs,f
  5239  0698  0DC9               	rlf	___flmul@grs+1,f
  5240  0699  0DCA               	rlf	___flmul@grs+2,f
  5241  069A  0DCB               	rlf	___flmul@grs+3,f
  5242  069B  0B89               	decfsz	9,f
  5243  069C  2E97               	goto	u4395
  5244  069D  083A               	movf	___flmul@b,w
  5245  069E  00C2               	movwf	??___flmul
  5246  069F  0842               	movf	??___flmul,w
  5247  06A0  00F0               	movwf	__Umul8_16@multiplicand
  5248  06A1  083E               	movf	___flmul@a,w
  5249  06A2  3190  2071  3185   	fcall	__Umul8_16
  5250  06A5  0871               	movf	?__Umul8_16+1,w
  5251  06A6  0020               	movlb	0	; select bank0
  5252  06A7  00D3               	movwf	___flmul@temp+1
  5253  06A8  0870               	movf	?__Umul8_16,w
  5254  06A9  00D2               	movwf	___flmul@temp
  5255  06AA                     l3648:
  5256  06AA  0852               	movf	___flmul@temp,w
  5257  06AB  07C8               	addwf	___flmul@grs,f
  5258  06AC  0853               	movf	___flmul@temp+1,w
  5259  06AD  3DC9               	addwfc	___flmul@grs+1,f
  5260  06AE  3000               	movlw	0
  5261  06AF  3DCA               	addwfc	___flmul@grs+2,f
  5262  06B0  3DCB               	addwfc	___flmul@grs+3,f
  5263  06B1                     l3650:
  5264  06B1  083B               	movf	___flmul@b+1,w
  5265  06B2  00C2               	movwf	??___flmul
  5266  06B3  0842               	movf	??___flmul,w
  5267  06B4  00F0               	movwf	__Umul8_16@multiplicand
  5268  06B5  0840               	movf	___flmul@a+2,w
  5269  06B6  3190  2071  3185   	fcall	__Umul8_16
  5270  06B9  0871               	movf	?__Umul8_16+1,w
  5271  06BA  0020               	movlb	0	; select bank0
  5272  06BB  00D3               	movwf	___flmul@temp+1
  5273  06BC  0870               	movf	?__Umul8_16,w
  5274  06BD  00D2               	movwf	___flmul@temp
  5275  06BE  0852               	movf	___flmul@temp,w
  5276  06BF  07CE               	addwf	___flmul@prod,f
  5277  06C0  0853               	movf	___flmul@temp+1,w
  5278  06C1  3DCF               	addwfc	___flmul@prod+1,f
  5279  06C2  3000               	movlw	0
  5280  06C3  3DD0               	addwfc	___flmul@prod+2,f
  5281  06C4  3DD1               	addwfc	___flmul@prod+3,f
  5282  06C5                     l3652:
  5283  06C5  083C               	movf	___flmul@b+2,w
  5284  06C6  00C2               	movwf	??___flmul
  5285  06C7  0842               	movf	??___flmul,w
  5286  06C8  00F0               	movwf	__Umul8_16@multiplicand
  5287  06C9  083F               	movf	___flmul@a+1,w
  5288  06CA  3190  2071  3185   	fcall	__Umul8_16
  5289  06CD  0871               	movf	?__Umul8_16+1,w
  5290  06CE  0020               	movlb	0	; select bank0
  5291  06CF  00D3               	movwf	___flmul@temp+1
  5292  06D0  0870               	movf	?__Umul8_16,w
  5293  06D1  00D2               	movwf	___flmul@temp
  5294  06D2                     l3654:
  5295  06D2  0852               	movf	___flmul@temp,w
  5296  06D3  07CE               	addwf	___flmul@prod,f
  5297  06D4  0853               	movf	___flmul@temp+1,w
  5298  06D5  3DCF               	addwfc	___flmul@prod+1,f
  5299  06D6  3000               	movlw	0
  5300  06D7  3DD0               	addwfc	___flmul@prod+2,f
  5301  06D8  3DD1               	addwfc	___flmul@prod+3,f
  5302  06D9  083C               	movf	___flmul@b+2,w
  5303  06DA  00C2               	movwf	??___flmul
  5304  06DB  0842               	movf	??___flmul,w
  5305  06DC  00F0               	movwf	__Umul8_16@multiplicand
  5306  06DD  0840               	movf	___flmul@a+2,w
  5307  06DE  3190  2071  3185   	fcall	__Umul8_16
  5308  06E1  0871               	movf	?__Umul8_16+1,w
  5309  06E2  0020               	movlb	0	; select bank0
  5310  06E3  00D3               	movwf	___flmul@temp+1
  5311  06E4  0870               	movf	?__Umul8_16,w
  5312  06E5  00D2               	movwf	___flmul@temp
  5313  06E6                     l3656:
  5314  06E6  0852               	movf	___flmul@temp,w
  5315  06E7  00C2               	movwf	??___flmul
  5316  06E8  0853               	movf	___flmul@temp+1,w
  5317  06E9  00C3               	movwf	??___flmul+1
  5318  06EA  01C4               	clrf	??___flmul+2
  5319  06EB  01C5               	clrf	??___flmul+3
  5320  06EC  3008               	movlw	8
  5321  06ED                     u4405:
  5322  06ED  35C2               	lslf	??___flmul,f
  5323  06EE  0DC3               	rlf	??___flmul+1,f
  5324  06EF  0DC4               	rlf	??___flmul+2,f
  5325  06F0  0DC5               	rlf	??___flmul+3,f
  5326  06F1                     u4400:
  5327  06F1  0B89               	decfsz	9,f
  5328  06F2  2EED               	goto	u4405
  5329  06F3  0842               	movf	??___flmul,w
  5330  06F4  07CE               	addwf	___flmul@prod,f
  5331  06F5  0843               	movf	??___flmul+1,w
  5332  06F6  3DCF               	addwfc	___flmul@prod+1,f
  5333  06F7  0844               	movf	??___flmul+2,w
  5334  06F8  3DD0               	addwfc	___flmul@prod+2,f
  5335  06F9  0845               	movf	??___flmul+3,w
  5336  06FA  3DD1               	addwfc	___flmul@prod+3,f
  5337  06FB                     l3658:
  5338  06FB  0848               	movf	___flmul@grs,w
  5339  06FC  00C2               	movwf	??___flmul
  5340  06FD  0849               	movf	___flmul@grs+1,w
  5341  06FE  00C3               	movwf	??___flmul+1
  5342  06FF  084A               	movf	___flmul@grs+2,w
  5343  0700  00C4               	movwf	??___flmul+2
  5344  0701  084B               	movf	___flmul@grs+3,w
  5345  0702  00C5               	movwf	??___flmul+3
  5346  0703  3018               	movlw	24
  5347  0704                     u4415:
  5348  0704  36C5               	lsrf	??___flmul+3,f
  5349  0705  0CC4               	rrf	??___flmul+2,f
  5350  0706  0CC3               	rrf	??___flmul+1,f
  5351  0707  0CC2               	rrf	??___flmul,f
  5352  0708                     u4410:
  5353  0708  0B89               	decfsz	9,f
  5354  0709  2F04               	goto	u4415
  5355  070A  0842               	movf	??___flmul,w
  5356  070B  07CE               	addwf	___flmul@prod,f
  5357  070C  0843               	movf	??___flmul+1,w
  5358  070D  3DCF               	addwfc	___flmul@prod+1,f
  5359  070E  0844               	movf	??___flmul+2,w
  5360  070F  3DD0               	addwfc	___flmul@prod+2,f
  5361  0710  0845               	movf	??___flmul+3,w
  5362  0711  3DD1               	addwfc	___flmul@prod+3,f
  5363  0712                     l3660:
  5364  0712  3008               	movlw	8
  5365  0713                     u4425:
  5366  0713  35C8               	lslf	___flmul@grs,f
  5367  0714  0DC9               	rlf	___flmul@grs+1,f
  5368  0715  0DCA               	rlf	___flmul@grs+2,f
  5369  0716  0DCB               	rlf	___flmul@grs+3,f
  5370  0717  0B89               	decfsz	9,f
  5371  0718  2F13               	goto	u4425
  5372  0719                     l3662:
  5373  0719  084D               	movf	___flmul@bexp,w
  5374  071A  074C               	addwf	___flmul@aexp,w
  5375  071B  00C2               	movwf	??___flmul
  5376  071C  01C3               	clrf	??___flmul+1
  5377  071D  0DC3               	rlf	??___flmul+1,f
  5378  071E  0842               	movf	??___flmul,w
  5379  071F  3E82               	addlw	130
  5380  0720  00D2               	movwf	___flmul@temp
  5381  0721  30FF               	movlw	255
  5382  0722  3D43               	addwfc	??___flmul+1,w
  5383  0723  00D3               	movwf	___flmul@temp+1
  5384  0724  2F3C               	goto	l3674
  5385  0725                     l3664:
  5386  0725  3001               	movlw	1
  5387  0726                     u4435:
  5388  0726  35CE               	lslf	___flmul@prod,f
  5389  0727  0DCF               	rlf	___flmul@prod+1,f
  5390  0728  0DD0               	rlf	___flmul@prod+2,f
  5391  0729  0DD1               	rlf	___flmul@prod+3,f
  5392  072A  0B89               	decfsz	9,f
  5393  072B  2F26               	goto	u4435
  5394  072C                     l3666:
  5395  072C  1FCB               	btfss	___flmul@grs+3,7
  5396  072D  2F2F               	goto	u4441
  5397  072E  2F30               	goto	u4440
  5398  072F                     u4441:
  5399  072F  2F31               	goto	l3670
  5400  0730                     u4440:
  5401  0730                     l3668:
  5402  0730  144E               	bsf	___flmul@prod,0
  5403  0731                     l3670:
  5404  0731  3001               	movlw	1
  5405  0732                     u4455:
  5406  0732  35C8               	lslf	___flmul@grs,f
  5407  0733  0DC9               	rlf	___flmul@grs+1,f
  5408  0734  0DCA               	rlf	___flmul@grs+2,f
  5409  0735  0DCB               	rlf	___flmul@grs+3,f
  5410  0736  0B89               	decfsz	9,f
  5411  0737  2F32               	goto	u4455
  5412  0738                     l3672:
  5413  0738  30FF               	movlw	255
  5414  0739  07D2               	addwf	___flmul@temp,f
  5415  073A  30FF               	movlw	255
  5416  073B  3DD3               	addwfc	___flmul@temp+1,f
  5417  073C                     l3674:
  5418  073C  1FD0               	btfss	___flmul@prod+2,7
  5419  073D  2F3F               	goto	u4461
  5420  073E  2F40               	goto	u4460
  5421  073F                     u4461:
  5422  073F  2F25               	goto	l3664
  5423  0740                     u4460:
  5424  0740                     l3676:
  5425  0740  01CC               	clrf	___flmul@aexp
  5426  0741                     l3678:
  5427  0741  1FCB               	btfss	___flmul@grs+3,7
  5428  0742  2F44               	goto	u4471
  5429  0743  2F45               	goto	u4470
  5430  0744                     u4471:
  5431  0744  2F61               	goto	l3686
  5432  0745                     u4470:
  5433  0745                     l3680:
  5434  0745  30FF               	movlw	255
  5435  0746  0548               	andwf	___flmul@grs,w
  5436  0747  00C2               	movwf	??___flmul
  5437  0748  30FF               	movlw	255
  5438  0749  0549               	andwf	___flmul@grs+1,w
  5439  074A  00C3               	movwf	??___flmul+1
  5440  074B  30FF               	movlw	255
  5441  074C  054A               	andwf	___flmul@grs+2,w
  5442  074D  00C4               	movwf	??___flmul+2
  5443  074E  307F               	movlw	127
  5444  074F  054B               	andwf	___flmul@grs+3,w
  5445  0750  00C5               	movwf	??___flmul+3
  5446  0751  0845               	movf	??___flmul+3,w
  5447  0752  0444               	iorwf	??___flmul+2,w
  5448  0753  0443               	iorwf	??___flmul+1,w
  5449  0754  0442               	iorwf	??___flmul,w
  5450  0755  1903               	skipnz
  5451  0756  2F58               	goto	u4481
  5452  0757  2F59               	goto	u4480
  5453  0758                     u4481:
  5454  0758  2F5C               	goto	l937
  5455  0759                     u4480:
  5456  0759                     l3682:
  5457  0759  01CC               	clrf	___flmul@aexp
  5458  075A  0ACC               	incf	___flmul@aexp,f
  5459  075B  2F61               	goto	l3686
  5460  075C                     l937:
  5461  075C  1C4E               	btfss	___flmul@prod,0
  5462  075D  2F5F               	goto	u4491
  5463  075E  2F60               	goto	u4490
  5464  075F                     u4491:
  5465  075F  2F61               	goto	l3686
  5466  0760                     u4490:
  5467  0760  2F59               	goto	l3682
  5468  0761                     l3686:
  5469  0761  084C               	movf	___flmul@aexp,w
  5470  0762  1903               	btfsc	3,2
  5471  0763  2F65               	goto	u4501
  5472  0764  2F66               	goto	u4500
  5473  0765                     u4501:
  5474  0765  2F8E               	goto	l3696
  5475  0766                     u4500:
  5476  0766                     l3688:
  5477  0766  3001               	movlw	1
  5478  0767  07CE               	addwf	___flmul@prod,f
  5479  0768  3000               	movlw	0
  5480  0769  3DCF               	addwfc	___flmul@prod+1,f
  5481  076A  3000               	movlw	0
  5482  076B  3DD0               	addwfc	___flmul@prod+2,f
  5483  076C  3000               	movlw	0
  5484  076D  3DD1               	addwfc	___flmul@prod+3,f
  5485  076E                     l3690:
  5486  076E  1C51               	btfss	___flmul@prod+3,0
  5487  076F  2F71               	goto	u4511
  5488  0770  2F72               	goto	u4510
  5489  0771                     u4511:
  5490  0771  2F8E               	goto	l3696
  5491  0772                     u4510:
  5492  0772                     l3692:
  5493  0772  084E               	movf	___flmul@prod,w
  5494  0773  00C2               	movwf	??___flmul
  5495  0774  084F               	movf	___flmul@prod+1,w
  5496  0775  00C3               	movwf	??___flmul+1
  5497  0776  0850               	movf	___flmul@prod+2,w
  5498  0777  00C4               	movwf	??___flmul+2
  5499  0778  0851               	movf	___flmul@prod+3,w
  5500  0779  00C5               	movwf	??___flmul+3
  5501  077A  3001               	movlw	1
  5502  077B  00C6               	movwf	??___flmul+4
  5503  077C                     u4525:
  5504  077C  37C5               	asrf	??___flmul+3,f
  5505  077D  0CC4               	rrf	??___flmul+2,f
  5506  077E  0CC3               	rrf	??___flmul+1,f
  5507  077F  0CC2               	rrf	??___flmul,f
  5508  0780                     u4520:
  5509  0780  0BC6               	decfsz	??___flmul+4,f
  5510  0781  2F7C               	goto	u4525
  5511  0782  0845               	movf	??___flmul+3,w
  5512  0783  00D1               	movwf	___flmul@prod+3
  5513  0784  0844               	movf	??___flmul+2,w
  5514  0785  00D0               	movwf	___flmul@prod+2
  5515  0786  0843               	movf	??___flmul+1,w
  5516  0787  00CF               	movwf	___flmul@prod+1
  5517  0788  0842               	movf	??___flmul,w
  5518  0789  00CE               	movwf	___flmul@prod
  5519  078A                     l3694:
  5520  078A  3001               	movlw	1
  5521  078B  07D2               	addwf	___flmul@temp,f
  5522  078C  3000               	movlw	0
  5523  078D  3DD3               	addwfc	___flmul@temp+1,f
  5524  078E                     l3696:
  5525  078E  0853               	movf	___flmul@temp+1,w
  5526  078F  3A80               	xorlw	128
  5527  0790  00C2               	movwf	??___flmul
  5528  0791  3080               	movlw	128
  5529  0792  0242               	subwf	??___flmul,w
  5530  0793  1D03               	skipz
  5531  0794  2F97               	goto	u4535
  5532  0795  30FF               	movlw	255
  5533  0796  0252               	subwf	___flmul@temp,w
  5534  0797                     u4535:
  5535  0797  1C03               	skipc
  5536  0798  2F9A               	goto	u4531
  5537  0799  2F9B               	goto	u4530
  5538  079A                     u4531:
  5539  079A  2FA5               	goto	l3700
  5540  079B                     u4530:
  5541  079B                     l3698:
  5542  079B  307F               	movlw	127
  5543  079C  0020               	movlb	0	; select bank0
  5544  079D  00D1               	movwf	___flmul@prod+3
  5545  079E  3080               	movlw	128
  5546  079F  00D0               	movwf	___flmul@prod+2
  5547  07A0  3000               	movlw	0
  5548  07A1  00CF               	movwf	___flmul@prod+1
  5549  07A2  3000               	movlw	0
  5550  07A3  00CE               	movwf	___flmul@prod
  5551  07A4  2FD4               	goto	l943
  5552  07A5                     l3700:
  5553  07A5  0020               	movlb	0	; select bank0
  5554  07A6  0853               	movf	___flmul@temp+1,w
  5555  07A7  3A80               	xorlw	128
  5556  07A8  00C2               	movwf	??___flmul
  5557  07A9  3080               	movlw	128
  5558  07AA  0242               	subwf	??___flmul,w
  5559  07AB  1D03               	skipz
  5560  07AC  2FAF               	goto	u4545
  5561  07AD  3001               	movlw	1
  5562  07AE  0252               	subwf	___flmul@temp,w
  5563  07AF                     u4545:
  5564  07AF  1803               	skipnc
  5565  07B0  2FB2               	goto	u4541
  5566  07B1  2FB3               	goto	u4540
  5567  07B2                     u4541:
  5568  07B2  2FBE               	goto	l3706
  5569  07B3                     u4540:
  5570  07B3                     l3702:
  5571  07B3  3000               	movlw	0
  5572  07B4  0020               	movlb	0	; select bank0
  5573  07B5  00D1               	movwf	___flmul@prod+3
  5574  07B6  3000               	movlw	0
  5575  07B7  00D0               	movwf	___flmul@prod+2
  5576  07B8  3000               	movlw	0
  5577  07B9  00CF               	movwf	___flmul@prod+1
  5578  07BA  3000               	movlw	0
  5579  07BB  00CE               	movwf	___flmul@prod
  5580  07BC                     l3704:
  5581  07BC  01C7               	clrf	___flmul@sign
  5582  07BD  2FD4               	goto	l943
  5583  07BE                     l3706:
  5584  07BE  0020               	movlb	0	; select bank0
  5585  07BF  0852               	movf	___flmul@temp,w
  5586  07C0  00C2               	movwf	??___flmul
  5587  07C1  0842               	movf	??___flmul,w
  5588  07C2  00CD               	movwf	___flmul@bexp
  5589  07C3  30FF               	movlw	255
  5590  07C4  05CE               	andwf	___flmul@prod,f
  5591  07C5  30FF               	movlw	255
  5592  07C6  05CF               	andwf	___flmul@prod+1,f
  5593  07C7  307F               	movlw	127
  5594  07C8  05D0               	andwf	___flmul@prod+2,f
  5595  07C9  3000               	movlw	0
  5596  07CA  05D1               	andwf	___flmul@prod+3,f
  5597  07CB                     l3708:
  5598  07CB  1C4D               	btfss	___flmul@bexp,0
  5599  07CC  2FCE               	goto	u4551
  5600  07CD  2FCF               	goto	u4550
  5601  07CE                     u4551:
  5602  07CE  2FD0               	goto	l3712
  5603  07CF                     u4550:
  5604  07CF                     l3710:
  5605  07CF  17D0               	bsf	___flmul@prod+2,7
  5606  07D0                     l3712:
  5607  07D0  364D               	lsrf	___flmul@bexp,w
  5608  07D1  00C2               	movwf	??___flmul
  5609  07D2  0842               	movf	??___flmul,w
  5610  07D3  00D1               	movwf	___flmul@prod+3
  5611  07D4                     l943:
  5612  07D4  0847               	movf	___flmul@sign,w
  5613  07D5  00C2               	movwf	??___flmul
  5614  07D6  0842               	movf	??___flmul,w
  5615  07D7  04D1               	iorwf	___flmul@prod+3,f
  5616  07D8                     l3714:
  5617  07D8  0851               	movf	___flmul@prod+3,w
  5618  07D9  00BD               	movwf	?___flmul+3
  5619  07DA  0850               	movf	___flmul@prod+2,w
  5620  07DB  00BC               	movwf	?___flmul+2
  5621  07DC  084F               	movf	___flmul@prod+1,w
  5622  07DD  00BB               	movwf	?___flmul+1
  5623  07DE  084E               	movf	___flmul@prod,w
  5624  07DF  00BA               	movwf	?___flmul
  5625  07E0                     l931:
  5626  07E0  0008               	return
  5627  07E1                     __end_of___flmul:
  5628                           
  5629                           	psect	text8
  5630  1071                     __ptext8:	
  5631 ;; *************** function __Umul8_16 *****************
  5632 ;; Defined at:
  5633 ;;		line 4 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\Umul8_16.c"
  5634 ;; Parameters:    Size  Location     Type
  5635 ;;  multiplier      1    wreg     unsigned char 
  5636 ;;  multiplicand    1    0[COMMON] unsigned char 
  5637 ;; Auto vars:     Size  Location     Type
  5638 ;;  multiplier      1    8[COMMON] unsigned char 
  5639 ;;  word_mpld       2    6[COMMON] unsigned int 
  5640 ;;  product         2    4[COMMON] unsigned int 
  5641 ;; Return value:  Size  Location     Type
  5642 ;;                  2    0[COMMON] unsigned int 
  5643 ;; Registers used:
  5644 ;;		wreg, status,2, status,0
  5645 ;; Tracked objects:
  5646 ;;		On entry : 0/0
  5647 ;;		On exit  : 0/0
  5648 ;;		Unchanged: 0/0
  5649 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  5650 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5651 ;;      Locals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5652 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5653 ;;      Totals:         9       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5654 ;;Total ram usage:        9 bytes
  5655 ;; Hardware stack levels used: 1
  5656 ;; This function calls:
  5657 ;;		Nothing
  5658 ;; This function is called by:
  5659 ;;		___flmul
  5660 ;; This function uses a non-reentrant model
  5661 ;;
  5662                           
  5663                           
  5664                           ;psect for function __Umul8_16
  5665  1071                     __Umul8_16:
  5666                           
  5667                           ;incstack = 0
  5668                           ; Regs used in __Umul8_16: [wreg+status,2+status,0]
  5669                           ;__Umul8_16@multiplier stored from wreg
  5670  1071  00F8               	movwf	__Umul8_16@multiplier
  5671  1072                     l3322:
  5672  1072  01F4               	clrf	__Umul8_16@product
  5673  1073  01F5               	clrf	__Umul8_16@product+1
  5674  1074                     l3324:
  5675  1074  0870               	movf	__Umul8_16@multiplicand,w
  5676  1075  00F2               	movwf	??__Umul8_16
  5677  1076  01F3               	clrf	??__Umul8_16+1
  5678  1077  0872               	movf	??__Umul8_16,w
  5679  1078  00F6               	movwf	__Umul8_16@word_mpld
  5680  1079  0873               	movf	??__Umul8_16+1,w
  5681  107A  00F7               	movwf	__Umul8_16@word_mpld+1
  5682  107B                     l3326:
  5683  107B  1C78               	btfss	__Umul8_16@multiplier,0
  5684  107C  287E               	goto	u3951
  5685  107D  287F               	goto	u3950
  5686  107E                     u3951:
  5687  107E  2883               	goto	l950
  5688  107F                     u3950:
  5689  107F                     l3328:
  5690  107F  0876               	movf	__Umul8_16@word_mpld,w
  5691  1080  07F4               	addwf	__Umul8_16@product,f
  5692  1081  0877               	movf	__Umul8_16@word_mpld+1,w
  5693  1082  3DF5               	addwfc	__Umul8_16@product+1,f
  5694  1083                     l950:
  5695  1083  3001               	movlw	1
  5696  1084                     u3965:
  5697  1084  35F6               	lslf	__Umul8_16@word_mpld,f
  5698  1085  0DF7               	rlf	__Umul8_16@word_mpld+1,f
  5699  1086  0B89               	decfsz	9,f
  5700  1087  2884               	goto	u3965
  5701  1088  1003               	clrc
  5702  1089  0CF8               	rrf	__Umul8_16@multiplier,f
  5703  108A                     l3330:
  5704  108A  0878               	movf	__Umul8_16@multiplier,w
  5705  108B  1D03               	btfss	3,2
  5706  108C  288E               	goto	u3971
  5707  108D  288F               	goto	u3970
  5708  108E                     u3971:
  5709  108E  287B               	goto	l3326
  5710  108F                     u3970:
  5711  108F                     l3332:
  5712  108F  0875               	movf	__Umul8_16@product+1,w
  5713  1090  00F1               	movwf	?__Umul8_16+1
  5714  1091  0874               	movf	__Umul8_16@product,w
  5715  1092  00F0               	movwf	?__Umul8_16
  5716  1093                     l952:
  5717  1093  0008               	return
  5718  1094                     __end_of__Umul8_16:
  5719                           
  5720                           	psect	text9
  5721  1496                     __ptext9:	
  5722 ;; *************** function _print_gram *****************
  5723 ;; Defined at:
  5724 ;;		line 39 in file "drink_meter.c"
  5725 ;; Parameters:    Size  Location     Type
  5726 ;;  p               1    wreg     PTR struct .
  5727 ;;		 -> main@drink(6), 
  5728 ;; Auto vars:     Size  Location     Type
  5729 ;;  p               1   53[BANK1 ] PTR struct .
  5730 ;;		 -> main@drink(6), 
  5731 ;;  row2           16   37[BANK1 ] unsigned char [16]
  5732 ;;  row1           16   21[BANK1 ] unsigned char [16]
  5733 ;; Return value:  Size  Location     Type
  5734 ;;                  1    wreg      void 
  5735 ;; Registers used:
  5736 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  5737 ;; Tracked objects:
  5738 ;;		On entry : 0/0
  5739 ;;		On exit  : 0/0
  5740 ;;		Unchanged: 0/0
  5741 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  5742 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5743 ;;      Locals:         0       0      33       0       0       0       0       0       0       0       0       0       
      +0       0
  5744 ;;      Temps:          0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0
  5745 ;;      Totals:         0       0      35       0       0       0       0       0       0       0       0       0       
      +0       0
  5746 ;;Total ram usage:       35 bytes
  5747 ;; Hardware stack levels used: 1
  5748 ;; Hardware stack levels required when called: 8
  5749 ;; This function calls:
  5750 ;;		_lcd_clear
  5751 ;;		_lcd_print_with
  5752 ;;		_print_digit
  5753 ;;		_sprintf
  5754 ;; This function is called by:
  5755 ;;		_main
  5756 ;; This function uses a non-reentrant model
  5757 ;;
  5758                           
  5759                           
  5760                           ;psect for function _print_gram
  5761  1496                     _print_gram:
  5762                           
  5763                           ;incstack = 0
  5764                           ; Regs used in _print_gram: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  5765                           ;print_gram@p stored from wreg
  5766  1496  0021               	movlb	1	; select bank1
  5767  1497  00D5               	movwf	print_gram@p^(0+128)
  5768  1498                     l3854:
  5769                           
  5770                           ;drink_meter.c: 40:     char row1[16];;drink_meter.c: 41:     char row2[16];;drink_meter
      +                          .c: 43:     sprintf(row1, "%dg / %dg", p->loadcell->gram, p->max_gram);
  5771  1498  3026               	movlw	low (STR_5| (0+32768))
  5772  1499  00A5               	movwf	sprintf@fmt^(0+128)
  5773  149A  30A0               	movlw	high (STR_5| (0+32768))
  5774  149B  00A6               	movwf	(sprintf@fmt^(0+128)+1)
  5775  149C  0855               	movf	print_gram@p^(0+128),w
  5776  149D  0086               	movwf	6
  5777  149E  0187               	clrf	7
  5778  149F  0801               	movf	1,w
  5779  14A0  3E0A               	addlw	10
  5780  14A1  0086               	movwf	6
  5781  14A2  0187               	clrf	7
  5782  14A3  3F40               	moviw [0]fsr1
  5783  14A4  00A7               	movwf	(?_sprintf^(0+128)+2)
  5784  14A5  3F41               	moviw [1]fsr1
  5785  14A6  00A8               	movwf	((?_sprintf+1)^(0+128)+2)
  5786  14A7  0855               	movf	print_gram@p^(0+128),w
  5787  14A8  3E03               	addlw	3
  5788  14A9  0086               	movwf	6
  5789  14AA  0187               	clrf	7
  5790  14AB  3F40               	moviw [0]fsr1
  5791  14AC  00A9               	movwf	(?_sprintf^(0+128)+4)
  5792  14AD  3F41               	moviw [1]fsr1
  5793  14AE  00AA               	movwf	((?_sprintf+1)^(0+128)+4)
  5794  14AF  30B5               	movlw	(low (print_gram@row1| 0))& (0+255)
  5795  14B0  3190  20DC  3194   	fcall	_sprintf
  5796                           
  5797                           ;drink_meter.c: 44:     sprintf(row2, "%d %%", p->percentage);
  5798  14B3  3038               	movlw	low (STR_6| (0+32768))
  5799  14B4  0021               	movlb	1	; select bank1
  5800  14B5  00A5               	movwf	sprintf@fmt^(0+128)
  5801  14B6  30A0               	movlw	high (STR_6| (0+32768))
  5802  14B7  00A6               	movwf	(sprintf@fmt^(0+128)+1)
  5803  14B8  0855               	movf	print_gram@p^(0+128),w
  5804  14B9  3E05               	addlw	5
  5805  14BA  0086               	movwf	6
  5806  14BB  0187               	clrf	7
  5807  14BC  0801               	movf	1,w
  5808  14BD  00B3               	movwf	??_print_gram^(0+128)
  5809  14BE  01B4               	clrf	(??_print_gram^(0+128)+1)
  5810  14BF  0833               	movf	??_print_gram^(0+128),w
  5811  14C0  00A7               	movwf	(?_sprintf^(0+128)+2)
  5812  14C1  0834               	movf	(??_print_gram+1)^(0+128),w
  5813  14C2  00A8               	movwf	((?_sprintf+1)^(0+128)+2)
  5814  14C3  30C5               	movlw	(low (print_gram@row2| 0))& (0+255)
  5815  14C4  3190  20DC  3194   	fcall	_sprintf
  5816                           
  5817                           ;drink_meter.c: 46:     lcd_clear(p->lcd);
  5818  14C7  0021               	movlb	1	; select bank1
  5819  14C8  0A55               	incf	print_gram@p^(0+128),w
  5820  14C9  0086               	movwf	6
  5821  14CA  0187               	clrf	7
  5822  14CB  0801               	movf	1,w
  5823  14CC  3191  219F  3194   	fcall	_lcd_clear
  5824                           
  5825                           ;drink_meter.c: 48:     lcd_print_with(p->lcd, row1, 0, 0);
  5826  14CF  30B5               	movlw	low print_gram@row1
  5827  14D0  0020               	movlb	0	; select bank0
  5828  14D1  00A6               	movwf	lcd_print_with@str
  5829  14D2  3000               	movlw	high print_gram@row1
  5830  14D3  00A7               	movwf	lcd_print_with@str+1
  5831  14D4  01A8               	clrf	lcd_print_with@col
  5832  14D5  01A9               	clrf	lcd_print_with@row
  5833  14D6  0021               	movlb	1	; select bank1
  5834  14D7  0A55               	incf	print_gram@p^(0+128),w
  5835  14D8  0086               	movwf	6
  5836  14D9  0187               	clrf	7
  5837  14DA  0801               	movf	1,w
  5838  14DB  319F  27B4  3194   	fcall	_lcd_print_with
  5839                           
  5840                           ;drink_meter.c: 49:     lcd_print_with(p->lcd, row2, 0, 1);
  5841  14DE  30C5               	movlw	low print_gram@row2
  5842  14DF  0020               	movlb	0	; select bank0
  5843  14E0  00A6               	movwf	lcd_print_with@str
  5844  14E1  3000               	movlw	high print_gram@row2
  5845  14E2  00A7               	movwf	lcd_print_with@str+1
  5846  14E3  01A8               	clrf	lcd_print_with@col
  5847  14E4  01A9               	clrf	lcd_print_with@row
  5848  14E5  0AA9               	incf	lcd_print_with@row,f
  5849  14E6  0021               	movlb	1	; select bank1
  5850  14E7  0A55               	incf	print_gram@p^(0+128),w
  5851  14E8  0086               	movwf	6
  5852  14E9  0187               	clrf	7
  5853  14EA  0801               	movf	1,w
  5854  14EB  319F  27B4  3194   	fcall	_lcd_print_with
  5855  14EE                     l3856:
  5856                           
  5857                           ;drink_meter.c: 51:     print_digit(p->tm1637, p->percentage);
  5858  14EE  0021               	movlb	1	; select bank1
  5859  14EF  0855               	movf	print_gram@p^(0+128),w
  5860  14F0  0086               	movwf	6
  5861  14F1  0187               	clrf	7
  5862  14F2  3F45               	moviw [5]fsr1
  5863  14F3  00FD               	movwf	print_digit@number
  5864  14F4  0855               	movf	print_gram@p^(0+128),w
  5865  14F5  3E02               	addlw	2
  5866  14F6  0086               	movwf	6
  5867  14F7  0187               	clrf	7
  5868  14F8  0801               	movf	1,w
  5869  14F9  318A  22CF  3194   	fcall	_print_digit
  5870  14FC                     l381:
  5871  14FC  0008               	return
  5872  14FD                     __end_of_print_gram:
  5873                           
  5874                           	psect	text10
  5875  16D7                     __ptext10:	
  5876 ;; *************** function _initialize *****************
  5877 ;; Defined at:
  5878 ;;		line 5 in file "drink_meter.c"
  5879 ;; Parameters:    Size  Location     Type
  5880 ;;  p               1    wreg     PTR struct .
  5881 ;;		 -> main@drink(6), 
  5882 ;; Auto vars:     Size  Location     Type
  5883 ;;  p               1   36[BANK1 ] PTR struct .
  5884 ;;		 -> main@drink(6), 
  5885 ;;  valstr         16   20[BANK1 ] unsigned char [16]
  5886 ;; Return value:  Size  Location     Type
  5887 ;;                  1    wreg      void 
  5888 ;; Registers used:
  5889 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  5890 ;; Tracked objects:
  5891 ;;		On entry : 0/0
  5892 ;;		On exit  : 0/0
  5893 ;;		Unchanged: 0/0
  5894 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  5895 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5896 ;;      Locals:         0       0      17       0       0       0       0       0       0       0       0       0       
      +0       0
  5897 ;;      Temps:          0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0
  5898 ;;      Totals:         0       0      18       0       0       0       0       0       0       0       0       0       
      +0       0
  5899 ;;Total ram usage:       18 bytes
  5900 ;; Hardware stack levels used: 1
  5901 ;; Hardware stack levels required when called: 8
  5902 ;; This function calls:
  5903 ;;		_get_scale_val
  5904 ;;		_initialize_digit
  5905 ;;		_lcd_backlight
  5906 ;;		_lcd_clear
  5907 ;;		_lcd_init
  5908 ;;		_lcd_print
  5909 ;;		_lcd_print_with
  5910 ;;		_print_digit
  5911 ;;		_sprintf
  5912 ;; This function is called by:
  5913 ;;		_main
  5914 ;; This function uses a non-reentrant model
  5915 ;;
  5916                           
  5917                           
  5918                           ;psect for function _initialize
  5919  16D7                     _initialize:
  5920                           
  5921                           ;incstack = 0
  5922                           ; Regs used in _initialize: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  5923                           ;initialize@p stored from wreg
  5924  16D7  0021               	movlb	1	; select bank1
  5925  16D8  00C4               	movwf	initialize@p^(0+128)
  5926  16D9                     l3842:
  5927                           
  5928                           ;drink_meter.c: 6:     lcd_init(p->lcd);
  5929  16D9  0A44               	incf	initialize@p^(0+128),w
  5930  16DA  0086               	movwf	6
  5931  16DB  0187               	clrf	7
  5932  16DC  0801               	movf	1,w
  5933  16DD  3189  217A  3196   	fcall	_lcd_init
  5934                           
  5935                           ;drink_meter.c: 7:     lcd_backlight(p->lcd);
  5936  16E0  0021               	movlb	1	; select bank1
  5937  16E1  0A44               	incf	initialize@p^(0+128),w
  5938  16E2  0086               	movwf	6
  5939  16E3  0187               	clrf	7
  5940  16E4  0801               	movf	1,w
  5941  16E5  319F  2787  3196   	fcall	_lcd_backlight
  5942  16E8                     l3844:
  5943                           
  5944                           ;drink_meter.c: 9:     lcd_print_with(p->lcd, "Initialize", 0, 0);
  5945  16E8  301B               	movlw	low (STR_2| (0+32768))
  5946  16E9  0020               	movlb	0	; select bank0
  5947  16EA  00A6               	movwf	lcd_print_with@str
  5948  16EB  30A0               	movlw	high (STR_2| (0+32768))
  5949  16EC  00A7               	movwf	lcd_print_with@str+1
  5950  16ED  01A8               	clrf	lcd_print_with@col
  5951  16EE  01A9               	clrf	lcd_print_with@row
  5952  16EF  0021               	movlb	1	; select bank1
  5953  16F0  0A44               	incf	initialize@p^(0+128),w
  5954  16F1  0086               	movwf	6
  5955  16F2  0187               	clrf	7
  5956  16F3  0801               	movf	1,w
  5957  16F4  319F  27B4  3196   	fcall	_lcd_print_with
  5958  16F7                     l3846:
  5959                           
  5960                           ;drink_meter.c: 10:     lcd_print_with(p->lcd, "Load cell Unit", 0, 1);
  5961  16F7  3000               	movlw	low (STR_3| (0+32768))
  5962  16F8  0020               	movlb	0	; select bank0
  5963  16F9  00A6               	movwf	lcd_print_with@str
  5964  16FA  30A0               	movlw	high (STR_3| (0+32768))
  5965  16FB  00A7               	movwf	lcd_print_with@str+1
  5966  16FC  01A8               	clrf	lcd_print_with@col
  5967  16FD  01A9               	clrf	lcd_print_with@row
  5968  16FE  0AA9               	incf	lcd_print_with@row,f
  5969  16FF  0021               	movlb	1	; select bank1
  5970  1700  0A44               	incf	initialize@p^(0+128),w
  5971  1701  0086               	movwf	6
  5972  1702  0187               	clrf	7
  5973  1703  0801               	movf	1,w
  5974  1704  319F  27B4  3196   	fcall	_lcd_print_with
  5975                           
  5976                           ;drink_meter.c: 12:     initialize_digit(p->tm1637);
  5977  1707  0021               	movlb	1	; select bank1
  5978  1708  0844               	movf	initialize@p^(0+128),w
  5979  1709  3E02               	addlw	2
  5980  170A  0086               	movwf	6
  5981  170B  0187               	clrf	7
  5982  170C  0801               	movf	1,w
  5983  170D  319F  2760  3196   	fcall	_initialize_digit
  5984                           
  5985                           ;drink_meter.c: 13:     print_digit(p->tm1637, 0);
  5986  1710  01FD               	clrf	print_digit@number
  5987  1711  0021               	movlb	1	; select bank1
  5988  1712  0844               	movf	initialize@p^(0+128),w
  5989  1713  3E02               	addlw	2
  5990  1714  0086               	movwf	6
  5991  1715  0187               	clrf	7
  5992  1716  0801               	movf	1,w
  5993  1717  318A  22CF  3196   	fcall	_print_digit
  5994                           
  5995                           ;drink_meter.c: 16:     p->loadcell->weight_zero = get_scale_val(p->loadcell, 50);
  5996  171A  3032               	movlw	50
  5997  171B  0021               	movlb	1	; select bank1
  5998  171C  00B3               	movwf	??_initialize^(0+128)
  5999  171D  0833               	movf	??_initialize^(0+128),w
  6000  171E  0020               	movlb	0	; select bank0
  6001  171F  00A0               	movwf	get_scale_val@scale_avg_count
  6002  1720  0021               	movlb	1	; select bank1
  6003  1721  0844               	movf	initialize@p^(0+128),w
  6004  1722  0086               	movwf	6
  6005  1723  0187               	clrf	7
  6006  1724  0801               	movf	1,w
  6007  1725  318C  2445  3196   	fcall	_get_scale_val
  6008  1728  0021               	movlb	1	; select bank1
  6009  1729  0844               	movf	initialize@p^(0+128),w
  6010  172A  0086               	movwf	6
  6011  172B  0187               	clrf	7
  6012  172C  0801               	movf	1,w
  6013  172D  3E02               	addlw	2
  6014  172E  0086               	movwf	6
  6015  172F  0187               	clrf	7
  6016  1730  0020               	movlb	0	; select bank0
  6017  1731  0820               	movf	?_get_scale_val,w
  6018  1732  3FC0               	movwi [0]fsr1
  6019  1733  0821               	movf	?_get_scale_val+1,w
  6020  1734  3FC1               	movwi [1]fsr1
  6021  1735  0822               	movf	?_get_scale_val+2,w
  6022  1736  3FC2               	movwi [2]fsr1
  6023  1737  0823               	movf	?_get_scale_val+3,w
  6024  1738  3FC3               	movwi [3]fsr1
  6025  1739                     l3848:
  6026                           
  6027                           ;drink_meter.c: 18:     char valstr[16];;drink_meter.c: 19:     sprintf(valstr, "%lu val
      +                          ", p->loadcell->weight_dat);
  6028  1739  3030               	movlw	low (STR_4| (0+32768))
  6029  173A  0021               	movlb	1	; select bank1
  6030  173B  00A5               	movwf	sprintf@fmt^(0+128)
  6031  173C  30A0               	movlw	high (STR_4| (0+32768))
  6032  173D  00A6               	movwf	(sprintf@fmt^(0+128)+1)
  6033  173E  0844               	movf	initialize@p^(0+128),w
  6034  173F  0086               	movwf	6
  6035  1740  0187               	clrf	7
  6036  1741  0801               	movf	1,w
  6037  1742  3E06               	addlw	6
  6038  1743  0086               	movwf	6
  6039  1744  0187               	clrf	7
  6040  1745  3F40               	moviw [0]fsr1
  6041  1746  00A7               	movwf	(?_sprintf^(0+128)+2)
  6042  1747  3F41               	moviw [1]fsr1
  6043  1748  00A8               	movwf	((?_sprintf+1)^(0+128)+2)
  6044  1749  3F42               	moviw [2]fsr1
  6045  174A  00A9               	movwf	((?_sprintf+2)^(0+128)+2)
  6046  174B  3F43               	moviw [3]fsr1
  6047  174C  00AA               	movwf	((?_sprintf+3)^(0+128)+2)
  6048  174D  30B4               	movlw	(low (initialize@valstr| 0))& (0+255)
  6049  174E  3190  20DC  3196   	fcall	_sprintf
  6050  1751                     l3850:
  6051                           
  6052                           ;drink_meter.c: 21:     lcd_clear(p->lcd);
  6053  1751  0021               	movlb	1	; select bank1
  6054  1752  0A44               	incf	initialize@p^(0+128),w
  6055  1753  0086               	movwf	6
  6056  1754  0187               	clrf	7
  6057  1755  0801               	movf	1,w
  6058  1756  3191  219F  3196   	fcall	_lcd_clear
  6059  1759                     l3852:
  6060                           
  6061                           ;drink_meter.c: 22:     lcd_print(p->lcd, valstr);
  6062  1759  30B4               	movlw	low initialize@valstr
  6063  175A  00FA               	movwf	lcd_print@str
  6064  175B  3000               	movlw	high initialize@valstr
  6065  175C  00FB               	movwf	lcd_print@str+1
  6066  175D  0021               	movlb	1	; select bank1
  6067  175E  0A44               	incf	initialize@p^(0+128),w
  6068  175F  0086               	movwf	6
  6069  1760  0187               	clrf	7
  6070  1761  0801               	movf	1,w
  6071  1762  3190  2094  3196   	fcall	_lcd_print
  6072  1765                     l373:
  6073  1765  0008               	return
  6074  1766                     __end_of_initialize:
  6075                           
  6076                           	psect	text11
  6077  10DC                     __ptext11:	
  6078 ;; *************** function _sprintf *****************
  6079 ;; Defined at:
  6080 ;;		line 9 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\nf_sprintf.c"
  6081 ;; Parameters:    Size  Location     Type
  6082 ;;  s               1    wreg     PTR unsigned char 
  6083 ;;		 -> set_max_gram@valstr(16), print_gram@row2(16), print_gram@row1(16), initialize@valstr(16), 
  6084 ;;  fmt             2    5[BANK1 ] PTR const unsigned char 
  6085 ;;		 -> STR_7(12), STR_6(6), STR_5(10), STR_4(8), 
  6086 ;; Auto vars:     Size  Location     Type
  6087 ;;  s               1   13[BANK1 ] PTR unsigned char 
  6088 ;;		 -> set_max_gram@valstr(16), print_gram@row2(16), print_gram@row1(16), initialize@valstr(16), 
  6089 ;;  f               5   14[BANK1 ] struct _IO_FILE
  6090 ;;  ret             2    0        int 
  6091 ;;  ap              1   12[BANK1 ] PTR void [1]
  6092 ;;		 -> ?_sprintf(2), 
  6093 ;; Return value:  Size  Location     Type
  6094 ;;                  2    5[BANK1 ] int 
  6095 ;; Registers used:
  6096 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  6097 ;; Tracked objects:
  6098 ;;		On entry : 0/0
  6099 ;;		On exit  : 0/0
  6100 ;;		Unchanged: 0/0
  6101 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  6102 ;;      Params:         0       0       6       0       0       0       0       0       0       0       0       0       
      +0       0
  6103 ;;      Locals:         0       0       7       0       0       0       0       0       0       0       0       0       
      +0       0
  6104 ;;      Temps:          0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0
  6105 ;;      Totals:         0       0      14       0       0       0       0       0       0       0       0       0       
      +0       0
  6106 ;;Total ram usage:       14 bytes
  6107 ;; Hardware stack levels used: 1
  6108 ;; Hardware stack levels required when called: 7
  6109 ;; This function calls:
  6110 ;;		_vfprintf
  6111 ;; This function is called by:
  6112 ;;		_initialize
  6113 ;;		_print_gram
  6114 ;;		_set_max_gram
  6115 ;; This function uses a non-reentrant model
  6116 ;;
  6117                           
  6118                           
  6119                           ;psect for function _sprintf
  6120  10DC                     _sprintf:
  6121                           
  6122                           ;incstack = 0
  6123                           ; Regs used in _sprintf: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  6124                           ;sprintf@s stored from wreg
  6125  10DC  0021               	movlb	1	; select bank1
  6126  10DD  00AD               	movwf	sprintf@s^(0+128)
  6127  10DE                     l3828:
  6128  10DE  30A7               	movlw	(low ((?_sprintf| 0+2)))& (0+255)
  6129  10DF  00AB               	movwf	??_sprintf^(0+128)
  6130  10E0  082B               	movf	??_sprintf^(0+128),w
  6131  10E1  00AC               	movwf	sprintf@ap^(0+128)
  6132  10E2  082D               	movf	sprintf@s^(0+128),w
  6133  10E3  00AB               	movwf	??_sprintf^(0+128)
  6134  10E4  082B               	movf	??_sprintf^(0+128),w
  6135  10E5  00AE               	movwf	sprintf@f^(0+128)
  6136  10E6                     l3830:
  6137  10E6  01AF               	clrf	(sprintf@f^(0+128)+1)
  6138  10E7  01B0               	clrf	((sprintf@f+1)^(0+128)+1)
  6139  10E8                     l3832:
  6140  10E8  01B1               	clrf	(sprintf@f^(0+128)+3)
  6141  10E9  01B2               	clrf	((sprintf@f+1)^(0+128)+3)
  6142  10EA                     l3834:
  6143  10EA  0826               	movf	(sprintf@fmt+1)^(0+128),w
  6144  10EB  0020               	movlb	0	; select bank0
  6145  10EC  00EE               	movwf	vfprintf@fmt+1
  6146  10ED  0021               	movlb	1	; select bank1
  6147  10EE  0825               	movf	sprintf@fmt^(0+128),w
  6148  10EF  0020               	movlb	0	; select bank0
  6149  10F0  00ED               	movwf	vfprintf@fmt
  6150  10F1  30AC               	movlw	(low (sprintf@ap| 0))& (0+255)
  6151  10F2  0021               	movlb	1	; select bank1
  6152  10F3  00AB               	movwf	??_sprintf^(0+128)
  6153  10F4  082B               	movf	??_sprintf^(0+128),w
  6154  10F5  0020               	movlb	0	; select bank0
  6155  10F6  00EF               	movwf	vfprintf@ap
  6156  10F7  30AE               	movlw	(low (sprintf@f| 0))& (0+255)
  6157  10F8  3191  2166  3190   	fcall	_vfprintf
  6158  10FB                     l3836:
  6159  10FB  0021               	movlb	1	; select bank1
  6160  10FC  082F               	movf	(sprintf@f^(0+128)+1),w
  6161  10FD  072D               	addwf	sprintf@s^(0+128),w
  6162  10FE  00AB               	movwf	??_sprintf^(0+128)
  6163  10FF  082B               	movf	??_sprintf^(0+128),w
  6164  1100  0086               	movwf	6
  6165  1101  0187               	clrf	7
  6166  1102  0181               	clrf	1
  6167  1103                     l997:
  6168  1103  0008               	return
  6169  1104                     __end_of_sprintf:
  6170                           
  6171                           	psect	text12
  6172  1166                     __ptext12:	
  6173 ;; *************** function _vfprintf *****************
  6174 ;; Defined at:
  6175 ;;		line 1390 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c"
  6176 ;; Parameters:    Size  Location     Type
  6177 ;;  fp              1    wreg     PTR struct _IO_FILE
  6178 ;;		 -> sprintf@f(5), 
  6179 ;;  fmt             2   77[BANK0 ] PTR const unsigned char 
  6180 ;;		 -> STR_7(12), STR_6(6), STR_5(10), STR_4(8), 
  6181 ;;  ap              1   79[BANK0 ] PTR PTR void 
  6182 ;;		 -> sprintf@ap(1), 
  6183 ;; Auto vars:     Size  Location     Type
  6184 ;;  fp              1    2[BANK1 ] PTR struct _IO_FILE
  6185 ;;		 -> sprintf@f(5), 
  6186 ;;  cfmt            2    3[BANK1 ] PTR unsigned char 
  6187 ;;		 -> STR_7(12), STR_6(6), STR_5(10), STR_4(8), 
  6188 ;; Return value:  Size  Location     Type
  6189 ;;                  2   77[BANK0 ] int 
  6190 ;; Registers used:
  6191 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  6192 ;; Tracked objects:
  6193 ;;		On entry : 0/0
  6194 ;;		On exit  : 0/0
  6195 ;;		Unchanged: 0/0
  6196 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  6197 ;;      Params:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6198 ;;      Locals:         0       0       3       0       0       0       0       0       0       0       0       0       
      +0       0
  6199 ;;      Temps:          0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0
  6200 ;;      Totals:         0       3       5       0       0       0       0       0       0       0       0       0       
      +0       0
  6201 ;;Total ram usage:        8 bytes
  6202 ;; Hardware stack levels used: 1
  6203 ;; Hardware stack levels required when called: 6
  6204 ;; This function calls:
  6205 ;;		_vfpfcnvrt
  6206 ;; This function is called by:
  6207 ;;		_sprintf
  6208 ;; This function uses a non-reentrant model
  6209 ;;
  6210                           
  6211                           
  6212                           ;psect for function _vfprintf
  6213  1166                     _vfprintf:
  6214                           
  6215                           ;incstack = 0
  6216                           ; Regs used in _vfprintf: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  6217                           ;vfprintf@fp stored from wreg
  6218  1166  0021               	movlb	1	; select bank1
  6219  1167  00A2               	movwf	vfprintf@fp^(0+128)
  6220  1168                     l3718:
  6221                           
  6222                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 1390: int vfprint
      +                          f(FILE *fp, const char *fmt, va_list ap);C:\Program Files\Microchip\xc8\v2.32\pic\source
      +                          s\c99\common\doprnt.c: 1391: {;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\comm
      +                          on\doprnt.c: 1393:     char *cfmt;;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\
      +                          common\doprnt.c: 1395:     cfmt = (char *)fmt;
  6223  1168  0020               	movlb	0	; select bank0
  6224  1169  086E               	movf	vfprintf@fmt+1,w
  6225  116A  0021               	movlb	1	; select bank1
  6226  116B  00A4               	movwf	(vfprintf@cfmt+1)^(0+128)
  6227  116C  0020               	movlb	0	; select bank0
  6228  116D  086D               	movf	vfprintf@fmt,w
  6229  116E  0021               	movlb	1	; select bank1
  6230  116F  00A3               	movwf	vfprintf@cfmt^(0+128)
  6231  1170                     l3720:
  6232                           
  6233                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 1396:     nout = 
      +                          0;
  6234  1170  0022               	movlb	2	; select bank2
  6235  1171  01CE               	clrf	_nout^(0+256)
  6236  1172  01CF               	clrf	(_nout+1)^(0+256)
  6237                           
  6238                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 1397:     while (
      +                          *cfmt) {
  6239  1173  298C               	goto	l3724
  6240  1174                     l3722:
  6241                           
  6242                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 1398:         nou
      +                          t += vfpfcnvrt(fp, &cfmt, ap);
  6243  1174  30A3               	movlw	(low (vfprintf@cfmt| 0))& (0+255)
  6244  1175  00A0               	movwf	??_vfprintf^(0+128)
  6245  1176  0820               	movf	??_vfprintf^(0+128),w
  6246  1177  0020               	movlb	0	; select bank0
  6247  1178  00CE               	movwf	vfpfcnvrt@fmt
  6248  1179  086F               	movf	vfprintf@ap,w
  6249  117A  0021               	movlb	1	; select bank1
  6250  117B  00A1               	movwf	(??_vfprintf+1)^(0+128)
  6251  117C  0821               	movf	(??_vfprintf+1)^(0+128),w
  6252  117D  0020               	movlb	0	; select bank0
  6253  117E  00CF               	movwf	vfpfcnvrt@ap
  6254  117F  0021               	movlb	1	; select bank1
  6255  1180  0822               	movf	vfprintf@fp^(0+128),w
  6256  1181  3183  238E  3191   	fcall	_vfpfcnvrt
  6257  1184  0020               	movlb	0	; select bank0
  6258  1185  084E               	movf	?_vfpfcnvrt,w
  6259  1186  0022               	movlb	2	; select bank2
  6260  1187  07CE               	addwf	_nout^(0+256),f
  6261  1188  0020               	movlb	0	; select bank0
  6262  1189  084F               	movf	?_vfpfcnvrt+1,w
  6263  118A  0022               	movlb	2	; select bank2
  6264  118B  3DCF               	addwfc	(_nout+1)^(0+256),f
  6265  118C                     l3724:
  6266                           
  6267                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 1397:     while (
      +                          *cfmt) {
  6268  118C  0021               	movlb	1	; select bank1
  6269  118D  0823               	movf	vfprintf@cfmt^(0+128),w
  6270  118E  0084               	movwf	4
  6271  118F  0824               	movf	(vfprintf@cfmt+1)^(0+128),w
  6272  1190  0085               	movwf	5
  6273  1191  0012               	moviw fsr0++
  6274  1192  1D03               	btfss	3,2
  6275  1193  2995               	goto	u4561
  6276  1194  2996               	goto	u4560
  6277  1195                     u4561:
  6278  1195  2974               	goto	l3722
  6279  1196                     u4560:
  6280  1196                     l3726:
  6281                           
  6282                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 1400:     return 
      +                          nout;
  6283  1196  0022               	movlb	2	; select bank2
  6284  1197  084F               	movf	(_nout+1)^(0+256),w
  6285  1198  0020               	movlb	0	; select bank0
  6286  1199  00EE               	movwf	?_vfprintf+1
  6287  119A  0022               	movlb	2	; select bank2
  6288  119B  084E               	movf	_nout^(0+256),w
  6289  119C  0020               	movlb	0	; select bank0
  6290  119D  00ED               	movwf	?_vfprintf
  6291  119E                     l1091:
  6292  119E  0008               	return
  6293  119F                     __end_of_vfprintf:
  6294                           
  6295                           	psect	text13
  6296  038E                     __ptext13:	
  6297 ;; *************** function _vfpfcnvrt *****************
  6298 ;; Defined at:
  6299 ;;		line 692 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c"
  6300 ;; Parameters:    Size  Location     Type
  6301 ;;  fp              1    wreg     PTR struct _IO_FILE
  6302 ;;		 -> sprintf@f(5), 
  6303 ;;  fmt             1   46[BANK0 ] PTR PTR unsigned char 
  6304 ;;		 -> vfprintf@cfmt(2), 
  6305 ;;  ap              1   47[BANK0 ] PTR PTR void 
  6306 ;;		 -> sprintf@ap(1), 
  6307 ;; Auto vars:     Size  Location     Type
  6308 ;;  fp              1   76[BANK0 ] PTR struct _IO_FILE
  6309 ;;		 -> sprintf@f(5), 
  6310 ;;  llu             8   68[BANK0 ] unsigned long long 
  6311 ;;  ll              8   60[BANK0 ] long long 
  6312 ;;  f               4    0        long long 
  6313 ;;  ct              3    0        unsigned char [3]
  6314 ;;  vp              2    0        PTR void 
  6315 ;;  i               2    0        int 
  6316 ;;  done            2    0        int 
  6317 ;;  cp              2    0        PTR unsigned char 
  6318 ;;  c               1    0        unsigned char 
  6319 ;; Return value:  Size  Location     Type
  6320 ;;                  2   46[BANK0 ] int 
  6321 ;; Registers used:
  6322 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  6323 ;; Tracked objects:
  6324 ;;		On entry : 0/0
  6325 ;;		On exit  : 0/0
  6326 ;;		Unchanged: 0/0
  6327 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  6328 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6329 ;;      Locals:         0      17       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6330 ;;      Temps:          0      12       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6331 ;;      Totals:         0      31       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6332 ;;Total ram usage:       31 bytes
  6333 ;; Hardware stack levels used: 1
  6334 ;; Hardware stack levels required when called: 5
  6335 ;; This function calls:
  6336 ;;		_dtoa
  6337 ;;		_fputc
  6338 ;;		_strncmp
  6339 ;;		_utoa
  6340 ;; This function is called by:
  6341 ;;		_vfprintf
  6342 ;; This function uses a non-reentrant model
  6343 ;;
  6344                           
  6345                           
  6346                           ;psect for function _vfpfcnvrt
  6347  038E                     _vfpfcnvrt:
  6348                           
  6349                           ;incstack = 0
  6350                           ; Regs used in _vfpfcnvrt: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  6351                           ;vfpfcnvrt@fp stored from wreg
  6352  038E  0020               	movlb	0	; select bank0
  6353  038F  00EC               	movwf	vfpfcnvrt@fp
  6354  0390                     l3380:
  6355                           
  6356                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 692: static int v
      +                          fpfcnvrt(FILE *fp, char *fmt[], va_list ap);C:\Program Files\Microchip\xc8\v2.32\pic\sou
      +                          rces\c99\common\doprnt.c: 693: {;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\co
      +                          mmon\doprnt.c: 694:     char c, *cp, ct[3];;C:\Program Files\Microchip\xc8\v2.32\pic\sou
      +                          rces\c99\common\doprnt.c: 695:     int done, i;;C:\Program Files\Microchip\xc8\v2.32\pic
      +                          \sources\c99\common\doprnt.c: 696:     long long ll;;C:\Program Files\Microchip\xc8\v2.3
      +                          2\pic\sources\c99\common\doprnt.c: 697:     unsigned long long llu;
  6357  0390  084E               	movf	vfpfcnvrt@fmt,w
  6358  0391  0086               	movwf	6
  6359  0392  0187               	clrf	7
  6360  0393  3F40               	moviw [0]fsr1
  6361  0394  00D0               	movwf	??_vfpfcnvrt
  6362  0395  3F41               	moviw [1]fsr1
  6363  0396  00D1               	movwf	??_vfpfcnvrt+1
  6364  0397  0850               	movf	??_vfpfcnvrt,w
  6365  0398  0084               	movwf	4
  6366  0399  0851               	movf	??_vfpfcnvrt+1,w
  6367  039A  0085               	movwf	5
  6368  039B  0012               	moviw fsr0++
  6369  039C  3A25               	xorlw	37
  6370  039D  1D03               	btfss	3,2
  6371  039E  2BA0               	goto	u4121
  6372  039F  2BA1               	goto	u4120
  6373  03A0                     u4121:
  6374  03A0  2D66               	goto	l3448
  6375  03A1                     u4120:
  6376  03A1                     l3382:
  6377                           
  6378                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 703:         ++*f
      +                          mt;
  6379  03A1  084E               	movf	vfpfcnvrt@fmt,w
  6380  03A2  0086               	movwf	6
  6381  03A3  0187               	clrf	7
  6382  03A4  3001               	movlw	1
  6383  03A5  0781               	addwf	1,f
  6384  03A6  3141               	addfsr 1,1
  6385  03A7  1803               	skipnc
  6386  03A8  0A81               	incf	1,f
  6387  03A9                     l3384:
  6388                           
  6389                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 705:         flag
      +                          s = width = 0;
  6390  03A9  0022               	movlb	2	; select bank2
  6391  03AA  01D0               	clrf	_width^(0+256)
  6392  03AB  01D1               	clrf	(_width+1)^(0+256)
  6393  03AC  01D4               	clrf	_flags^(0+256)
  6394  03AD  01D5               	clrf	(_flags+1)^(0+256)
  6395  03AE                     l3386:
  6396                           
  6397                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 706:         prec
      +                           = -1;
  6398  03AE  30FF               	movlw	255
  6399  03AF  00D2               	movwf	_prec^(0+256)
  6400  03B0  30FF               	movlw	255
  6401  03B1  00D3               	movwf	(_prec^(0+256)+1)
  6402  03B2                     l3388:
  6403                           
  6404                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 847:         if (
      +                          (*fmt[0] == 'd') || (*fmt[0] == 'i')) {
  6405  03B2  0020               	movlb	0	; select bank0
  6406  03B3  084E               	movf	vfpfcnvrt@fmt,w
  6407  03B4  0086               	movwf	6
  6408  03B5  0187               	clrf	7
  6409  03B6  3F40               	moviw [0]fsr1
  6410  03B7  00D0               	movwf	??_vfpfcnvrt
  6411  03B8  3F41               	moviw [1]fsr1
  6412  03B9  00D1               	movwf	??_vfpfcnvrt+1
  6413  03BA  0850               	movf	??_vfpfcnvrt,w
  6414  03BB  0084               	movwf	4
  6415  03BC  0851               	movf	??_vfpfcnvrt+1,w
  6416  03BD  0085               	movwf	5
  6417  03BE  0012               	moviw fsr0++
  6418  03BF  3A64               	xorlw	100
  6419  03C0  1903               	btfsc	3,2
  6420  03C1  2BC3               	goto	u4131
  6421  03C2  2BC4               	goto	u4130
  6422  03C3                     u4131:
  6423  03C3  2BD5               	goto	l3392
  6424  03C4                     u4130:
  6425  03C4                     l3390:
  6426  03C4  084E               	movf	vfpfcnvrt@fmt,w
  6427  03C5  0086               	movwf	6
  6428  03C6  0187               	clrf	7
  6429  03C7  3F40               	moviw [0]fsr1
  6430  03C8  00D0               	movwf	??_vfpfcnvrt
  6431  03C9  3F41               	moviw [1]fsr1
  6432  03CA  00D1               	movwf	??_vfpfcnvrt+1
  6433  03CB  0850               	movf	??_vfpfcnvrt,w
  6434  03CC  0084               	movwf	4
  6435  03CD  0851               	movf	??_vfpfcnvrt+1,w
  6436  03CE  0085               	movwf	5
  6437  03CF  0012               	moviw fsr0++
  6438  03D0  3A69               	xorlw	105
  6439  03D1  1D03               	btfss	3,2
  6440  03D2  2BD4               	goto	u4141
  6441  03D3  2BD5               	goto	u4140
  6442  03D4                     u4141:
  6443  03D4  2C10               	goto	l3400
  6444  03D5                     u4140:
  6445  03D5                     l3392:
  6446                           
  6447                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 849:             
      +                          ++*fmt;
  6448  03D5  084E               	movf	vfpfcnvrt@fmt,w
  6449  03D6  0086               	movwf	6
  6450  03D7  0187               	clrf	7
  6451  03D8  3001               	movlw	1
  6452  03D9  0781               	addwf	1,f
  6453  03DA  3141               	addfsr 1,1
  6454  03DB  1803               	skipnc
  6455  03DC  0A81               	incf	1,f
  6456  03DD                     l3394:
  6457                           
  6458                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 850:             
      +                          ll = (long long)(*(int *)__va_arg(*(int **)ap, (int)0));
  6459  03DD  084F               	movf	vfpfcnvrt@ap,w
  6460  03DE  0086               	movwf	6
  6461  03DF  0187               	clrf	7
  6462  03E0  0801               	movf	1,w
  6463  03E1  0084               	movwf	4
  6464  03E2  0185               	clrf	5
  6465  03E3  3002               	movlw	2
  6466  03E4  0781               	addwf	1,f
  6467  03E5  3F00               	moviw [0]fsr0
  6468  03E6  00D0               	movwf	??_vfpfcnvrt
  6469  03E7  3F01               	moviw [1]fsr0
  6470  03E8  00D1               	movwf	??_vfpfcnvrt+1
  6471  03E9  0850               	movf	??_vfpfcnvrt,w
  6472  03EA  00DC               	movwf	vfpfcnvrt@ll
  6473  03EB  0851               	movf	??_vfpfcnvrt+1,w
  6474  03EC  00DD               	movwf	vfpfcnvrt@ll+1
  6475  03ED  0D89               	rlf	9,f
  6476  03EE  3B89               	subwfb	9,f
  6477  03EF  0989               	comf	9,f
  6478  03F0  00DE               	movwf	vfpfcnvrt@ll+2
  6479  03F1  00DF               	movwf	vfpfcnvrt@ll+3
  6480  03F2  00E0               	movwf	vfpfcnvrt@ll+4
  6481  03F3  00E1               	movwf	vfpfcnvrt@ll+5
  6482  03F4  00E2               	movwf	vfpfcnvrt@ll+6
  6483  03F5  00E3               	movwf	vfpfcnvrt@ll+7
  6484  03F6                     l3396:
  6485                           
  6486                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 852:             
      +                          return dtoa(fp, ll);
  6487  03F6  085C               	movf	vfpfcnvrt@ll,w
  6488  03F7  00B0               	movwf	dtoa@d
  6489  03F8  085D               	movf	vfpfcnvrt@ll+1,w
  6490  03F9  00B1               	movwf	dtoa@d+1
  6491  03FA  085E               	movf	vfpfcnvrt@ll+2,w
  6492  03FB  00B2               	movwf	dtoa@d+2
  6493  03FC  085F               	movf	vfpfcnvrt@ll+3,w
  6494  03FD  00B3               	movwf	dtoa@d+3
  6495  03FE  0860               	movf	vfpfcnvrt@ll+4,w
  6496  03FF  00B4               	movwf	dtoa@d+4
  6497  0400  0861               	movf	vfpfcnvrt@ll+5,w
  6498  0401  00B5               	movwf	dtoa@d+5
  6499  0402  0862               	movf	vfpfcnvrt@ll+6,w
  6500  0403  00B6               	movwf	dtoa@d+6
  6501  0404  0863               	movf	vfpfcnvrt@ll+7,w
  6502  0405  00B7               	movwf	dtoa@d+7
  6503  0406  086C               	movf	vfpfcnvrt@fp,w
  6504  0407  3180  206A  3183   	fcall	_dtoa
  6505  040A  0020               	movlb	0	; select bank0
  6506  040B  0831               	movf	?_dtoa+1,w
  6507  040C  00CF               	movwf	?_vfpfcnvrt+1
  6508  040D  0830               	movf	?_dtoa,w
  6509  040E  00CE               	movwf	?_vfpfcnvrt
  6510  040F  2D89               	goto	l1079
  6511  0410                     l3400:
  6512                           
  6513                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 857:         if (
      +                          !strncmp(*fmt, "ld", ((sizeof("ld")/sizeof("ld"[0]))-1)) || !strncmp(*fmt, "li", ((sizeo
      +                          f("li")/sizeof("li"[0]))-1))) {
  6514  0410  084E               	movf	vfpfcnvrt@fmt,w
  6515  0411  0086               	movwf	6
  6516  0412  0187               	clrf	7
  6517  0413  3F40               	moviw [0]fsr1
  6518  0414  00F0               	movwf	strncmp@_l
  6519  0415  3F41               	moviw [1]fsr1
  6520  0416  00F1               	movwf	strncmp@_l+1
  6521  0417  303E               	movlw	low (STR_8| (0+32768))
  6522  0418  00F2               	movwf	strncmp@_r
  6523  0419  30A0               	movlw	high (STR_8| (0+32768))
  6524  041A  00F3               	movwf	strncmp@_r+1
  6525  041B  3002               	movlw	2
  6526  041C  00F4               	movwf	strncmp@n
  6527  041D  3000               	movlw	0
  6528  041E  00F5               	movwf	strncmp@n+1
  6529  041F  3194  243A  3183   	fcall	_strncmp
  6530  0422  0870               	movf	?_strncmp,w
  6531  0423  0471               	iorwf	?_strncmp+1,w
  6532  0424  1903               	btfsc	3,2
  6533  0425  2C27               	goto	u4151
  6534  0426  2C28               	goto	u4150
  6535  0427                     u4151:
  6536  0427  2C41               	goto	l3404
  6537  0428                     u4150:
  6538  0428                     l3402:
  6539  0428  0020               	movlb	0	; select bank0
  6540  0429  084E               	movf	vfpfcnvrt@fmt,w
  6541  042A  0086               	movwf	6
  6542  042B  0187               	clrf	7
  6543  042C  3F40               	moviw [0]fsr1
  6544  042D  00F0               	movwf	strncmp@_l
  6545  042E  3F41               	moviw [1]fsr1
  6546  042F  00F1               	movwf	strncmp@_l+1
  6547  0430  3041               	movlw	low (STR_12| (0+32768))
  6548  0431  00F2               	movwf	strncmp@_r
  6549  0432  30A0               	movlw	high (STR_12| (0+32768))
  6550  0433  00F3               	movwf	strncmp@_r+1
  6551  0434  3002               	movlw	2
  6552  0435  00F4               	movwf	strncmp@n
  6553  0436  3000               	movlw	0
  6554  0437  00F5               	movwf	strncmp@n+1
  6555  0438  3194  243A  3183   	fcall	_strncmp
  6556  043B  0870               	movf	?_strncmp,w
  6557  043C  0471               	iorwf	?_strncmp+1,w
  6558  043D  1D03               	btfss	3,2
  6559  043E  2C40               	goto	u4161
  6560  043F  2C41               	goto	u4160
  6561  0440                     u4161:
  6562  0440  2C83               	goto	l3412
  6563  0441                     u4160:
  6564  0441                     l3404:
  6565                           
  6566                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 858: ;C:\Program 
      +                          Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 860:             *fmt += ((si
      +                          zeof("ld")/sizeof("ld"[0]))-1);
  6567  0441  0020               	movlb	0	; select bank0
  6568  0442  084E               	movf	vfpfcnvrt@fmt,w
  6569  0443  0086               	movwf	6
  6570  0444  0187               	clrf	7
  6571  0445  3002               	movlw	2
  6572  0446  0781               	addwf	1,f
  6573  0447  3141               	addfsr 1,1
  6574  0448  1803               	skipnc
  6575  0449  0A81               	incf	1,f
  6576  044A                     l3406:
  6577                           
  6578                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 861:             
      +                          ll = (long long)(*(long *)__va_arg(*(long **)ap, (long)0));
  6579  044A  084F               	movf	vfpfcnvrt@ap,w
  6580  044B  0086               	movwf	6
  6581  044C  0187               	clrf	7
  6582  044D  0801               	movf	1,w
  6583  044E  0084               	movwf	4
  6584  044F  0185               	clrf	5
  6585  0450  3004               	movlw	4
  6586  0451  0781               	addwf	1,f
  6587  0452  3F00               	moviw [0]fsr0
  6588  0453  00D0               	movwf	??_vfpfcnvrt
  6589  0454  3F01               	moviw [1]fsr0
  6590  0455  00D1               	movwf	??_vfpfcnvrt+1
  6591  0456  3F02               	moviw [2]fsr0
  6592  0457  00D2               	movwf	??_vfpfcnvrt+2
  6593  0458  3F03               	moviw [3]fsr0
  6594  0459  00D3               	movwf	??_vfpfcnvrt+3
  6595  045A  0850               	movf	??_vfpfcnvrt,w
  6596  045B  00DC               	movwf	vfpfcnvrt@ll
  6597  045C  0851               	movf	??_vfpfcnvrt+1,w
  6598  045D  00DD               	movwf	vfpfcnvrt@ll+1
  6599  045E  0852               	movf	??_vfpfcnvrt+2,w
  6600  045F  00DE               	movwf	vfpfcnvrt@ll+2
  6601  0460  0853               	movf	??_vfpfcnvrt+3,w
  6602  0461  00DF               	movwf	vfpfcnvrt@ll+3
  6603  0462  3000               	movlw	0
  6604  0463  1BDF               	btfsc	vfpfcnvrt@ll+3,7
  6605  0464  30FF               	movlw	255
  6606  0465  00E0               	movwf	vfpfcnvrt@ll+4
  6607  0466  00E1               	movwf	vfpfcnvrt@ll+5
  6608  0467  00E2               	movwf	vfpfcnvrt@ll+6
  6609  0468  00E3               	movwf	vfpfcnvrt@ll+7
  6610  0469                     l3408:
  6611                           
  6612                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 863:             
      +                          return dtoa(fp, ll);
  6613  0469  085C               	movf	vfpfcnvrt@ll,w
  6614  046A  00B0               	movwf	dtoa@d
  6615  046B  085D               	movf	vfpfcnvrt@ll+1,w
  6616  046C  00B1               	movwf	dtoa@d+1
  6617  046D  085E               	movf	vfpfcnvrt@ll+2,w
  6618  046E  00B2               	movwf	dtoa@d+2
  6619  046F  085F               	movf	vfpfcnvrt@ll+3,w
  6620  0470  00B3               	movwf	dtoa@d+3
  6621  0471  0860               	movf	vfpfcnvrt@ll+4,w
  6622  0472  00B4               	movwf	dtoa@d+4
  6623  0473  0861               	movf	vfpfcnvrt@ll+5,w
  6624  0474  00B5               	movwf	dtoa@d+5
  6625  0475  0862               	movf	vfpfcnvrt@ll+6,w
  6626  0476  00B6               	movwf	dtoa@d+6
  6627  0477  0863               	movf	vfpfcnvrt@ll+7,w
  6628  0478  00B7               	movwf	dtoa@d+7
  6629  0479  086C               	movf	vfpfcnvrt@fp,w
  6630  047A  3180  206A  3183   	fcall	_dtoa
  6631  047D  0020               	movlb	0	; select bank0
  6632  047E  0831               	movf	?_dtoa+1,w
  6633  047F  00CF               	movwf	?_vfpfcnvrt+1
  6634  0480  0830               	movf	?_dtoa,w
  6635  0481  00CE               	movwf	?_vfpfcnvrt
  6636  0482  2D89               	goto	l1079
  6637  0483                     l3412:
  6638                           
  6639                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 1204:         if 
      +                          (*fmt[0] == 'u') {
  6640  0483  0020               	movlb	0	; select bank0
  6641  0484  084E               	movf	vfpfcnvrt@fmt,w
  6642  0485  0086               	movwf	6
  6643  0486  0187               	clrf	7
  6644  0487  3F40               	moviw [0]fsr1
  6645  0488  00D0               	movwf	??_vfpfcnvrt
  6646  0489  3F41               	moviw [1]fsr1
  6647  048A  00D1               	movwf	??_vfpfcnvrt+1
  6648  048B  0850               	movf	??_vfpfcnvrt,w
  6649  048C  0084               	movwf	4
  6650  048D  0851               	movf	??_vfpfcnvrt+1,w
  6651  048E  0085               	movwf	5
  6652  048F  0012               	moviw fsr0++
  6653  0490  3A75               	xorlw	117
  6654  0491  1D03               	btfss	3,2
  6655  0492  2C94               	goto	u4171
  6656  0493  2C95               	goto	u4170
  6657  0494                     u4171:
  6658  0494  2CC9               	goto	l3422
  6659  0495                     u4170:
  6660  0495                     l3414:
  6661                           
  6662                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 1206:            
      +                           ++*fmt;
  6663  0495  084E               	movf	vfpfcnvrt@fmt,w
  6664  0496  0086               	movwf	6
  6665  0497  0187               	clrf	7
  6666  0498  3001               	movlw	1
  6667  0499  0781               	addwf	1,f
  6668  049A  3141               	addfsr 1,1
  6669  049B  1803               	skipnc
  6670  049C  0A81               	incf	1,f
  6671  049D                     l3416:
  6672                           
  6673                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 1207:            
      +                           llu = (unsigned long long)(*(unsigned int *)__va_arg(*(unsigned int **)ap, (unsigned in
      +                          t)0));
  6674  049D  084F               	movf	vfpfcnvrt@ap,w
  6675  049E  0086               	movwf	6
  6676  049F  0187               	clrf	7
  6677  04A0  0801               	movf	1,w
  6678  04A1  0084               	movwf	4
  6679  04A2  0185               	clrf	5
  6680  04A3  3002               	movlw	2
  6681  04A4  0781               	addwf	1,f
  6682  04A5  3F00               	moviw [0]fsr0
  6683  04A6  00E4               	movwf	vfpfcnvrt@llu
  6684  04A7  3F01               	moviw [1]fsr0
  6685  04A8  00E5               	movwf	vfpfcnvrt@llu+1
  6686  04A9  01E6               	clrf	vfpfcnvrt@llu+2
  6687  04AA  01E7               	clrf	vfpfcnvrt@llu+3
  6688  04AB  01E8               	clrf	vfpfcnvrt@llu+4
  6689  04AC  01E9               	clrf	vfpfcnvrt@llu+5
  6690  04AD  01EA               	clrf	vfpfcnvrt@llu+6
  6691  04AE  01EB               	clrf	vfpfcnvrt@llu+7
  6692  04AF                     l3418:
  6693                           
  6694                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 1209:            
      +                           return utoa(fp, llu);
  6695  04AF  0864               	movf	vfpfcnvrt@llu,w
  6696  04B0  00B0               	movwf	utoa@d
  6697  04B1  0865               	movf	vfpfcnvrt@llu+1,w
  6698  04B2  00B1               	movwf	utoa@d+1
  6699  04B3  0866               	movf	vfpfcnvrt@llu+2,w
  6700  04B4  00B2               	movwf	utoa@d+2
  6701  04B5  0867               	movf	vfpfcnvrt@llu+3,w
  6702  04B6  00B3               	movwf	utoa@d+3
  6703  04B7  0868               	movf	vfpfcnvrt@llu+4,w
  6704  04B8  00B4               	movwf	utoa@d+4
  6705  04B9  0869               	movf	vfpfcnvrt@llu+5,w
  6706  04BA  00B5               	movwf	utoa@d+5
  6707  04BB  086A               	movf	vfpfcnvrt@llu+6,w
  6708  04BC  00B6               	movwf	utoa@d+6
  6709  04BD  086B               	movf	vfpfcnvrt@llu+7,w
  6710  04BE  00B7               	movwf	utoa@d+7
  6711  04BF  086C               	movf	vfpfcnvrt@fp,w
  6712  04C0  318E  2612  3183   	fcall	_utoa
  6713  04C3  0020               	movlb	0	; select bank0
  6714  04C4  0831               	movf	?_utoa+1,w
  6715  04C5  00CF               	movwf	?_vfpfcnvrt+1
  6716  04C6  0830               	movf	?_utoa,w
  6717  04C7  00CE               	movwf	?_vfpfcnvrt
  6718  04C8  2D89               	goto	l1079
  6719  04C9                     l3422:
  6720                           
  6721                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 1214:         if 
      +                          (!strncmp(*fmt, "lu", ((sizeof("lu")/sizeof("lu"[0]))-1))) {
  6722  04C9  084E               	movf	vfpfcnvrt@fmt,w
  6723  04CA  0086               	movwf	6
  6724  04CB  0187               	clrf	7
  6725  04CC  3F40               	moviw [0]fsr1
  6726  04CD  00F0               	movwf	strncmp@_l
  6727  04CE  3F41               	moviw [1]fsr1
  6728  04CF  00F1               	movwf	strncmp@_l+1
  6729  04D0  3044               	movlw	low (STR_17| (0+32768))
  6730  04D1  00F2               	movwf	strncmp@_r
  6731  04D2  30A0               	movlw	high (STR_17| (0+32768))
  6732  04D3  00F3               	movwf	strncmp@_r+1
  6733  04D4  3002               	movlw	2
  6734  04D5  00F4               	movwf	strncmp@n
  6735  04D6  3000               	movlw	0
  6736  04D7  00F5               	movwf	strncmp@n+1
  6737  04D8  3194  243A  3183   	fcall	_strncmp
  6738  04DB  0870               	movf	?_strncmp,w
  6739  04DC  0471               	iorwf	?_strncmp+1,w
  6740  04DD  1D03               	btfss	3,2
  6741  04DE  2CE0               	goto	u4181
  6742  04DF  2CE1               	goto	u4180
  6743  04E0                     u4181:
  6744  04E0  2D30               	goto	l3432
  6745  04E1                     u4180:
  6746  04E1                     l3424:
  6747                           
  6748                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 1216:            
      +                           *fmt += ((sizeof("lu")/sizeof("lu"[0]))-1);
  6749  04E1  0020               	movlb	0	; select bank0
  6750  04E2  084E               	movf	vfpfcnvrt@fmt,w
  6751  04E3  0086               	movwf	6
  6752  04E4  0187               	clrf	7
  6753  04E5  3002               	movlw	2
  6754  04E6  0781               	addwf	1,f
  6755  04E7  3141               	addfsr 1,1
  6756  04E8  1803               	skipnc
  6757  04E9  0A81               	incf	1,f
  6758  04EA                     l3426:
  6759                           
  6760                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 1217:            
      +                           llu = (unsigned long long)(*(unsigned long *)__va_arg(*(unsigned long **)ap, (unsigned 
      +                          long)0));
  6761  04EA  084F               	movf	vfpfcnvrt@ap,w
  6762  04EB  0086               	movwf	6
  6763  04EC  0187               	clrf	7
  6764  04ED  0801               	movf	1,w
  6765  04EE  0084               	movwf	4
  6766  04EF  0185               	clrf	5
  6767  04F0  3004               	movlw	4
  6768  04F1  0781               	addwf	1,f
  6769  04F2  3F00               	moviw [0]fsr0
  6770  04F3  00D0               	movwf	??_vfpfcnvrt
  6771  04F4  3F01               	moviw [1]fsr0
  6772  04F5  00D1               	movwf	??_vfpfcnvrt+1
  6773  04F6  3F02               	moviw [2]fsr0
  6774  04F7  00D2               	movwf	??_vfpfcnvrt+2
  6775  04F8  3F03               	moviw [3]fsr0
  6776  04F9  00D3               	movwf	??_vfpfcnvrt+3
  6777  04FA  0850               	movf	??_vfpfcnvrt,w
  6778  04FB  00D4               	movwf	??_vfpfcnvrt+4
  6779  04FC  0851               	movf	??_vfpfcnvrt+1,w
  6780  04FD  00D5               	movwf	??_vfpfcnvrt+5
  6781  04FE  0852               	movf	??_vfpfcnvrt+2,w
  6782  04FF  00D6               	movwf	??_vfpfcnvrt+6
  6783  0500  0853               	movf	??_vfpfcnvrt+3,w
  6784  0501  00D7               	movwf	??_vfpfcnvrt+7
  6785  0502  01D8               	clrf	??_vfpfcnvrt+8
  6786  0503  01D9               	clrf	??_vfpfcnvrt+9
  6787  0504  01DA               	clrf	??_vfpfcnvrt+10
  6788  0505  01DB               	clrf	??_vfpfcnvrt+11
  6789  0506  085B               	movf	??_vfpfcnvrt+11,w
  6790  0507  00EB               	movwf	vfpfcnvrt@llu+7
  6791  0508  085A               	movf	??_vfpfcnvrt+10,w
  6792  0509  00EA               	movwf	vfpfcnvrt@llu+6
  6793  050A  0859               	movf	??_vfpfcnvrt+9,w
  6794  050B  00E9               	movwf	vfpfcnvrt@llu+5
  6795  050C  0858               	movf	??_vfpfcnvrt+8,w
  6796  050D  00E8               	movwf	vfpfcnvrt@llu+4
  6797  050E  0857               	movf	??_vfpfcnvrt+7,w
  6798  050F  00E7               	movwf	vfpfcnvrt@llu+3
  6799  0510  0856               	movf	??_vfpfcnvrt+6,w
  6800  0511  00E6               	movwf	vfpfcnvrt@llu+2
  6801  0512  0855               	movf	??_vfpfcnvrt+5,w
  6802  0513  00E5               	movwf	vfpfcnvrt@llu+1
  6803  0514  0854               	movf	??_vfpfcnvrt+4,w
  6804  0515  00E4               	movwf	vfpfcnvrt@llu
  6805  0516                     l3428:
  6806                           
  6807                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 1219:            
      +                           return utoa(fp, llu);
  6808  0516  0864               	movf	vfpfcnvrt@llu,w
  6809  0517  00B0               	movwf	utoa@d
  6810  0518  0865               	movf	vfpfcnvrt@llu+1,w
  6811  0519  00B1               	movwf	utoa@d+1
  6812  051A  0866               	movf	vfpfcnvrt@llu+2,w
  6813  051B  00B2               	movwf	utoa@d+2
  6814  051C  0867               	movf	vfpfcnvrt@llu+3,w
  6815  051D  00B3               	movwf	utoa@d+3
  6816  051E  0868               	movf	vfpfcnvrt@llu+4,w
  6817  051F  00B4               	movwf	utoa@d+4
  6818  0520  0869               	movf	vfpfcnvrt@llu+5,w
  6819  0521  00B5               	movwf	utoa@d+5
  6820  0522  086A               	movf	vfpfcnvrt@llu+6,w
  6821  0523  00B6               	movwf	utoa@d+6
  6822  0524  086B               	movf	vfpfcnvrt@llu+7,w
  6823  0525  00B7               	movwf	utoa@d+7
  6824  0526  086C               	movf	vfpfcnvrt@fp,w
  6825  0527  318E  2612  3183   	fcall	_utoa
  6826  052A  0020               	movlb	0	; select bank0
  6827  052B  0831               	movf	?_utoa+1,w
  6828  052C  00CF               	movwf	?_vfpfcnvrt+1
  6829  052D  0830               	movf	?_utoa,w
  6830  052E  00CE               	movwf	?_vfpfcnvrt
  6831  052F  2D89               	goto	l1079
  6832  0530                     l3432:
  6833                           
  6834                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 1372:         if 
      +                          ((*fmt)[0] == '%') {
  6835  0530  0020               	movlb	0	; select bank0
  6836  0531  084E               	movf	vfpfcnvrt@fmt,w
  6837  0532  0086               	movwf	6
  6838  0533  0187               	clrf	7
  6839  0534  3F40               	moviw [0]fsr1
  6840  0535  00D0               	movwf	??_vfpfcnvrt
  6841  0536  3F41               	moviw [1]fsr1
  6842  0537  00D1               	movwf	??_vfpfcnvrt+1
  6843  0538  0850               	movf	??_vfpfcnvrt,w
  6844  0539  0084               	movwf	4
  6845  053A  0851               	movf	??_vfpfcnvrt+1,w
  6846  053B  0085               	movwf	5
  6847  053C  0012               	moviw fsr0++
  6848  053D  3A25               	xorlw	37
  6849  053E  1D03               	btfss	3,2
  6850  053F  2D41               	goto	u4191
  6851  0540  2D42               	goto	u4190
  6852  0541                     u4191:
  6853  0541  2D5B               	goto	l3442
  6854  0542                     u4190:
  6855  0542                     l3434:
  6856                           
  6857                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 1373:            
      +                           ++*fmt;
  6858  0542  084E               	movf	vfpfcnvrt@fmt,w
  6859  0543  0086               	movwf	6
  6860  0544  0187               	clrf	7
  6861  0545  3001               	movlw	1
  6862  0546  0781               	addwf	1,f
  6863  0547  3141               	addfsr 1,1
  6864  0548  1803               	skipnc
  6865  0549  0A81               	incf	1,f
  6866  054A                     l3436:
  6867                           
  6868                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 1374:            
      +                           fputc((int)'%', fp);
  6869  054A  3025               	movlw	37
  6870  054B  00F0               	movwf	fputc@c
  6871  054C  3000               	movlw	0
  6872  054D  00F1               	movwf	fputc@c+1
  6873  054E  086C               	movf	vfpfcnvrt@fp,w
  6874  054F  00D0               	movwf	??_vfpfcnvrt
  6875  0550  0850               	movf	??_vfpfcnvrt,w
  6876  0551  00F2               	movwf	fputc@fp
  6877  0552  3191  21DD  3183   	fcall	_fputc
  6878  0555                     l3438:
  6879                           
  6880                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 1375:            
      +                           return 1;
  6881  0555  3001               	movlw	1
  6882  0556  0020               	movlb	0	; select bank0
  6883  0557  00CE               	movwf	?_vfpfcnvrt
  6884  0558  3000               	movlw	0
  6885  0559  00CF               	movwf	?_vfpfcnvrt+1
  6886  055A  2D89               	goto	l1079
  6887  055B                     l3442:
  6888                           
  6889                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 1379:         ++*
      +                          fmt;
  6890  055B  084E               	movf	vfpfcnvrt@fmt,w
  6891  055C  0086               	movwf	6
  6892  055D  0187               	clrf	7
  6893  055E  3001               	movlw	1
  6894  055F  0781               	addwf	1,f
  6895  0560  3141               	addfsr 1,1
  6896  0561  1803               	skipnc
  6897  0562  0A81               	incf	1,f
  6898  0563                     l3444:
  6899                           
  6900                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 1380:         ret
      +                          urn 0;
  6901  0563  01CE               	clrf	?_vfpfcnvrt
  6902  0564  01CF               	clrf	?_vfpfcnvrt+1
  6903  0565  2D89               	goto	l1079
  6904  0566                     l3448:
  6905                           
  6906                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 1384:     fputc((
      +                          int)(*fmt)[0], fp);
  6907  0566  084E               	movf	vfpfcnvrt@fmt,w
  6908  0567  0086               	movwf	6
  6909  0568  0187               	clrf	7
  6910  0569  3F40               	moviw [0]fsr1
  6911  056A  00D0               	movwf	??_vfpfcnvrt
  6912  056B  3F41               	moviw [1]fsr1
  6913  056C  00D1               	movwf	??_vfpfcnvrt+1
  6914  056D  0850               	movf	??_vfpfcnvrt,w
  6915  056E  0084               	movwf	4
  6916  056F  0851               	movf	??_vfpfcnvrt+1,w
  6917  0570  0085               	movwf	5
  6918  0571  0800               	movf	0,w	;code access
  6919  0572  00D2               	movwf	??_vfpfcnvrt+2
  6920  0573  01D3               	clrf	??_vfpfcnvrt+3
  6921  0574  0852               	movf	??_vfpfcnvrt+2,w
  6922  0575  00F0               	movwf	fputc@c
  6923  0576  0853               	movf	??_vfpfcnvrt+3,w
  6924  0577  00F1               	movwf	fputc@c+1
  6925  0578  086C               	movf	vfpfcnvrt@fp,w
  6926  0579  00D4               	movwf	??_vfpfcnvrt+4
  6927  057A  0854               	movf	??_vfpfcnvrt+4,w
  6928  057B  00F2               	movwf	fputc@fp
  6929  057C  3191  21DD  3183   	fcall	_fputc
  6930  057F                     l3450:
  6931                           
  6932                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 1385:     ++*fmt;
  6933  057F  0020               	movlb	0	; select bank0
  6934  0580  084E               	movf	vfpfcnvrt@fmt,w
  6935  0581  0086               	movwf	6
  6936  0582  0187               	clrf	7
  6937  0583  3001               	movlw	1
  6938  0584  0781               	addwf	1,f
  6939  0585  3141               	addfsr 1,1
  6940  0586  1803               	skipnc
  6941  0587  0A81               	incf	1,f
  6942  0588  2D55               	goto	l3438
  6943  0589                     l1079:
  6944  0589  0008               	return
  6945  058A                     __end_of_vfpfcnvrt:
  6946                           
  6947                           	psect	text14
  6948  0E12                     __ptext14:	
  6949 ;; *************** function _utoa *****************
  6950 ;; Defined at:
  6951 ;;		line 615 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c"
  6952 ;; Parameters:    Size  Location     Type
  6953 ;;  fp              1    wreg     PTR struct _IO_FILE
  6954 ;;		 -> sprintf@f(5), 
  6955 ;;  d               8   16[BANK0 ] unsigned long long 
  6956 ;; Auto vars:     Size  Location     Type
  6957 ;;  fp              1   26[BANK0 ] PTR struct _IO_FILE
  6958 ;;		 -> sprintf@f(5), 
  6959 ;;  n               8   29[BANK0 ] unsigned long long 
  6960 ;;  i               2   37[BANK0 ] int 
  6961 ;;  w               2   27[BANK0 ] int 
  6962 ;;  p               2   24[BANK0 ] int 
  6963 ;; Return value:  Size  Location     Type
  6964 ;;                  2   16[BANK0 ] int 
  6965 ;; Registers used:
  6966 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  6967 ;; Tracked objects:
  6968 ;;		On entry : 0/0
  6969 ;;		On exit  : 0/0
  6970 ;;		Unchanged: 0/0
  6971 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  6972 ;;      Params:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6973 ;;      Locals:         0      15       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6974 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6975 ;;      Totals:         1      23       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6976 ;;Total ram usage:       24 bytes
  6977 ;; Hardware stack levels used: 1
  6978 ;; Hardware stack levels required when called: 4
  6979 ;; This function calls:
  6980 ;;		___lodiv
  6981 ;;		___lomod
  6982 ;;		_pad
  6983 ;; This function is called by:
  6984 ;;		_vfpfcnvrt
  6985 ;; This function uses a non-reentrant model
  6986 ;;
  6987                           
  6988                           
  6989                           ;psect for function _utoa
  6990  0E12                     _utoa:
  6991                           
  6992                           ;incstack = 0
  6993                           ; Regs used in _utoa: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  6994                           ;utoa@fp stored from wreg
  6995  0E12  0020               	movlb	0	; select bank0
  6996  0E13  00BA               	movwf	utoa@fp
  6997  0E14                     l2894:
  6998                           
  6999                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 615: static int u
      +                          toa(FILE *fp, unsigned long long d);C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99
      +                          \common\doprnt.c: 616: {;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\dop
      +                          rnt.c: 617:     int i, p, w;;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common
      +                          \doprnt.c: 618:     unsigned long long n;;C:\Program Files\Microchip\xc8\v2.32\pic\sourc
      +                          es\c99\common\doprnt.c: 621:     if (!(prec < 0)) {
  7000  0E14  0022               	movlb	2	; select bank2
  7001  0E15  1BD3               	btfsc	(_prec+1)^(0+256),7
  7002  0E16  2E18               	goto	u3081
  7003  0E17  2E19               	goto	u3080
  7004  0E18                     u3081:
  7005  0E18  2E1D               	goto	l1060
  7006  0E19                     u3080:
  7007  0E19                     l2896:
  7008                           
  7009                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 622:         flag
      +                          s &= ~(1 << 1);
  7010  0E19  30FD               	movlw	253
  7011  0E1A  05D4               	andwf	_flags^(0+256),f
  7012  0E1B  30FF               	movlw	255
  7013  0E1C  05D5               	andwf	(_flags+1)^(0+256),f
  7014  0E1D                     l1060:	
  7015                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 623:     }
  7016                           
  7017                           
  7018                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 624:     p = (0 <
      +                           prec) ? prec : 1;
  7019  0E1D  0853               	movf	(_prec+1)^(0+256),w
  7020  0E1E  3A80               	xorlw	128
  7021  0E1F  00FD               	movwf	??_utoa
  7022  0E20  3080               	movlw	128
  7023  0E21  027D               	subwf	??_utoa,w
  7024  0E22  1D03               	skipz
  7025  0E23  2E26               	goto	u3095
  7026  0E24  3001               	movlw	1
  7027  0E25  0252               	subwf	_prec^(0+256),w
  7028  0E26                     u3095:
  7029  0E26  1803               	skipnc
  7030  0E27  2E29               	goto	u3091
  7031  0E28  2E2A               	goto	u3090
  7032  0E29                     u3091:
  7033  0E29  2E30               	goto	l2900
  7034  0E2A                     u3090:
  7035  0E2A                     l2898:
  7036  0E2A  3001               	movlw	1
  7037  0E2B  0020               	movlb	0	; select bank0
  7038  0E2C  00B8               	movwf	utoa@p
  7039  0E2D  3000               	movlw	0
  7040  0E2E  00B9               	movwf	utoa@p+1
  7041  0E2F  2E38               	goto	l1064
  7042  0E30                     l2900:
  7043  0E30  0022               	movlb	2	; select bank2
  7044  0E31  0853               	movf	(_prec+1)^(0+256),w
  7045  0E32  0020               	movlb	0	; select bank0
  7046  0E33  00B9               	movwf	utoa@p+1
  7047  0E34  0022               	movlb	2	; select bank2
  7048  0E35  0852               	movf	_prec^(0+256),w
  7049  0E36  0020               	movlb	0	; select bank0
  7050  0E37  00B8               	movwf	utoa@p
  7051  0E38                     l1064:
  7052                           
  7053                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 625:     w = widt
      +                          h;
  7054  0E38  0022               	movlb	2	; select bank2
  7055  0E39  0851               	movf	(_width+1)^(0+256),w
  7056  0E3A  0020               	movlb	0	; select bank0
  7057  0E3B  00BC               	movwf	utoa@w+1
  7058  0E3C  0022               	movlb	2	; select bank2
  7059  0E3D  0850               	movf	_width^(0+256),w
  7060  0E3E  0020               	movlb	0	; select bank0
  7061  0E3F  00BB               	movwf	utoa@w
  7062  0E40                     l2902:
  7063                           
  7064                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 628:     n = d;
  7065  0E40  0830               	movf	utoa@d,w
  7066  0E41  00BD               	movwf	utoa@n
  7067  0E42  0831               	movf	utoa@d+1,w
  7068  0E43  00BE               	movwf	utoa@n+1
  7069  0E44  0832               	movf	utoa@d+2,w
  7070  0E45  00BF               	movwf	utoa@n+2
  7071  0E46  0833               	movf	utoa@d+3,w
  7072  0E47  00C0               	movwf	utoa@n+3
  7073  0E48  0834               	movf	utoa@d+4,w
  7074  0E49  00C1               	movwf	utoa@n+4
  7075  0E4A  0835               	movf	utoa@d+5,w
  7076  0E4B  00C2               	movwf	utoa@n+5
  7077  0E4C  0836               	movf	utoa@d+6,w
  7078  0E4D  00C3               	movwf	utoa@n+6
  7079  0E4E  0837               	movf	utoa@d+7,w
  7080  0E4F  00C4               	movwf	utoa@n+7
  7081                           
  7082                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 629:     i = size
      +                          of(dbuf) - 1;
  7083  0E50  301F               	movlw	31
  7084  0E51  00C5               	movwf	utoa@i
  7085  0E52  3000               	movlw	0
  7086  0E53  00C6               	movwf	utoa@i+1
  7087  0E54                     l2904:
  7088                           
  7089                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 630:     dbuf[i] 
      +                          = '\0';
  7090  0E54  0023               	movlb	3	; select bank3
  7091  0E55  01BF               	clrf	(_dbuf^(0+384)+31)
  7092                           
  7093                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 631:     while (i
      +                           && (n || (0 < p) || ((0 < w) && (flags & (1 << 1))))) {
  7094  0E56  2EB8               	goto	l2916
  7095  0E57                     l2906:
  7096                           
  7097                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 632:         --i;
  7098  0E57  30FF               	movlw	255
  7099  0E58  0020               	movlb	0	; select bank0
  7100  0E59  07C5               	addwf	utoa@i,f
  7101  0E5A  30FF               	movlw	255
  7102  0E5B  3DC6               	addwfc	utoa@i+1,f
  7103  0E5C                     l2908:
  7104                           
  7105                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 633:         dbuf
      +                          [i] = '0' + (n % 10);
  7106  0E5C  300A               	movlw	10
  7107  0E5D  00A0               	movwf	___lomod@divisor
  7108  0E5E  01A1               	clrf	___lomod@divisor+1
  7109  0E5F  01A2               	clrf	___lomod@divisor+2
  7110  0E60  01A3               	clrf	___lomod@divisor+3
  7111  0E61  01A4               	clrf	___lomod@divisor+4
  7112  0E62  01A5               	clrf	___lomod@divisor+5
  7113  0E63  01A6               	clrf	___lomod@divisor+6
  7114  0E64  01A7               	clrf	___lomod@divisor+7
  7115  0E65  083D               	movf	utoa@n,w
  7116  0E66  00A8               	movwf	___lomod@dividend
  7117  0E67  083E               	movf	utoa@n+1,w
  7118  0E68  00A9               	movwf	___lomod@dividend+1
  7119  0E69  083F               	movf	utoa@n+2,w
  7120  0E6A  00AA               	movwf	___lomod@dividend+2
  7121  0E6B  0840               	movf	utoa@n+3,w
  7122  0E6C  00AB               	movwf	___lomod@dividend+3
  7123  0E6D  0841               	movf	utoa@n+4,w
  7124  0E6E  00AC               	movwf	___lomod@dividend+4
  7125  0E6F  0842               	movf	utoa@n+5,w
  7126  0E70  00AD               	movwf	___lomod@dividend+5
  7127  0E71  0843               	movf	utoa@n+6,w
  7128  0E72  00AE               	movwf	___lomod@dividend+6
  7129  0E73  0844               	movf	utoa@n+7,w
  7130  0E74  00AF               	movwf	___lomod@dividend+7
  7131  0E75  3195  256D  318E   	fcall	___lomod
  7132  0E78  0020               	movlb	0	; select bank0
  7133  0E79  0820               	movf	?___lomod,w
  7134  0E7A  3E30               	addlw	48
  7135  0E7B  00FD               	movwf	??_utoa
  7136  0E7C  0845               	movf	utoa@i,w
  7137  0E7D  3EA0               	addlw	(low (_dbuf| (0+256)))& (0+255)
  7138  0E7E  0086               	movwf	6
  7139  0E7F  3001               	movlw	1	; select bank3/4
  7140  0E80  0087               	movwf	7
  7141  0E81  087D               	movf	??_utoa,w
  7142  0E82  0081               	movwf	1
  7143  0E83                     l2910:
  7144                           
  7145                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 634:         --p;
  7146  0E83  30FF               	movlw	255
  7147  0E84  07B8               	addwf	utoa@p,f
  7148  0E85  30FF               	movlw	255
  7149  0E86  3DB9               	addwfc	utoa@p+1,f
  7150  0E87                     l2912:
  7151                           
  7152                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 635:         --w;
  7153  0E87  30FF               	movlw	255
  7154  0E88  07BB               	addwf	utoa@w,f
  7155  0E89  30FF               	movlw	255
  7156  0E8A  3DBC               	addwfc	utoa@w+1,f
  7157  0E8B                     l2914:
  7158                           
  7159                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 636:         n = 
      +                          n / 10;
  7160  0E8B  300A               	movlw	10
  7161  0E8C  00A0               	movwf	___lodiv@divisor
  7162  0E8D  01A1               	clrf	___lodiv@divisor+1
  7163  0E8E  01A2               	clrf	___lodiv@divisor+2
  7164  0E8F  01A3               	clrf	___lodiv@divisor+3
  7165  0E90  01A4               	clrf	___lodiv@divisor+4
  7166  0E91  01A5               	clrf	___lodiv@divisor+5
  7167  0E92  01A6               	clrf	___lodiv@divisor+6
  7168  0E93  01A7               	clrf	___lodiv@divisor+7
  7169  0E94  083D               	movf	utoa@n,w
  7170  0E95  00A8               	movwf	___lodiv@dividend
  7171  0E96  083E               	movf	utoa@n+1,w
  7172  0E97  00A9               	movwf	___lodiv@dividend+1
  7173  0E98  083F               	movf	utoa@n+2,w
  7174  0E99  00AA               	movwf	___lodiv@dividend+2
  7175  0E9A  0840               	movf	utoa@n+3,w
  7176  0E9B  00AB               	movwf	___lodiv@dividend+3
  7177  0E9C  0841               	movf	utoa@n+4,w
  7178  0E9D  00AC               	movwf	___lodiv@dividend+4
  7179  0E9E  0842               	movf	utoa@n+5,w
  7180  0E9F  00AD               	movwf	___lodiv@dividend+5
  7181  0EA0  0843               	movf	utoa@n+6,w
  7182  0EA1  00AE               	movwf	___lodiv@dividend+6
  7183  0EA2  0844               	movf	utoa@n+7,w
  7184  0EA3  00AF               	movwf	___lodiv@dividend+7
  7185  0EA4  3196  2653  318E   	fcall	___lodiv
  7186  0EA7  0020               	movlb	0	; select bank0
  7187  0EA8  0820               	movf	?___lodiv,w
  7188  0EA9  00BD               	movwf	utoa@n
  7189  0EAA  0821               	movf	?___lodiv+1,w
  7190  0EAB  00BE               	movwf	utoa@n+1
  7191  0EAC  0822               	movf	?___lodiv+2,w
  7192  0EAD  00BF               	movwf	utoa@n+2
  7193  0EAE  0823               	movf	?___lodiv+3,w
  7194  0EAF  00C0               	movwf	utoa@n+3
  7195  0EB0  0824               	movf	?___lodiv+4,w
  7196  0EB1  00C1               	movwf	utoa@n+4
  7197  0EB2  0825               	movf	?___lodiv+5,w
  7198  0EB3  00C2               	movwf	utoa@n+5
  7199  0EB4  0826               	movf	?___lodiv+6,w
  7200  0EB5  00C3               	movwf	utoa@n+6
  7201  0EB6  0827               	movf	?___lodiv+7,w
  7202  0EB7  00C4               	movwf	utoa@n+7
  7203  0EB8                     l2916:
  7204                           
  7205                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 631:     while (i
      +                           && (n || (0 < p) || ((0 < w) && (flags & (1 << 1))))) {
  7206  0EB8  0020               	movlb	0	; select bank0
  7207  0EB9  0845               	movf	utoa@i,w
  7208  0EBA  0446               	iorwf	utoa@i+1,w
  7209  0EBB  1903               	btfsc	3,2
  7210  0EBC  2EBE               	goto	u3101
  7211  0EBD  2EBF               	goto	u3100
  7212  0EBE                     u3101:
  7213  0EBE  2EEB               	goto	l2926
  7214  0EBF                     u3100:
  7215  0EBF                     l2918:
  7216  0EBF  083D               	movf	utoa@n,w
  7217  0EC0  043E               	iorwf	utoa@n+1,w
  7218  0EC1  043F               	iorwf	utoa@n+2,w
  7219  0EC2  0440               	iorwf	utoa@n+3,w
  7220  0EC3  0441               	iorwf	utoa@n+4,w
  7221  0EC4  0442               	iorwf	utoa@n+5,w
  7222  0EC5  0443               	iorwf	utoa@n+6,w
  7223  0EC6  0444               	iorwf	utoa@n+7,w
  7224  0EC7  1D03               	skipz
  7225  0EC8  2ECA               	goto	u3111
  7226  0EC9  2ECB               	goto	u3110
  7227  0ECA                     u3111:
  7228  0ECA  2E57               	goto	l2906
  7229  0ECB                     u3110:
  7230  0ECB                     l2920:
  7231  0ECB  0839               	movf	utoa@p+1,w
  7232  0ECC  3A80               	xorlw	128
  7233  0ECD  00FD               	movwf	??_utoa
  7234  0ECE  3080               	movlw	128
  7235  0ECF  027D               	subwf	??_utoa,w
  7236  0ED0  1D03               	skipz
  7237  0ED1  2ED4               	goto	u3125
  7238  0ED2  3001               	movlw	1
  7239  0ED3  0238               	subwf	utoa@p,w
  7240  0ED4                     u3125:
  7241  0ED4  1803               	skipnc
  7242  0ED5  2ED7               	goto	u3121
  7243  0ED6  2ED8               	goto	u3120
  7244  0ED7                     u3121:
  7245  0ED7  2E57               	goto	l2906
  7246  0ED8                     u3120:
  7247  0ED8                     l2922:
  7248  0ED8  0020               	movlb	0	; select bank0
  7249  0ED9  083C               	movf	utoa@w+1,w
  7250  0EDA  3A80               	xorlw	128
  7251  0EDB  00FD               	movwf	??_utoa
  7252  0EDC  3080               	movlw	128
  7253  0EDD  027D               	subwf	??_utoa,w
  7254  0EDE  1D03               	skipz
  7255  0EDF  2EE2               	goto	u3135
  7256  0EE0  3001               	movlw	1
  7257  0EE1  023B               	subwf	utoa@w,w
  7258  0EE2                     u3135:
  7259  0EE2  1C03               	skipc
  7260  0EE3  2EE5               	goto	u3131
  7261  0EE4  2EE6               	goto	u3130
  7262  0EE5                     u3131:
  7263  0EE5  2EEB               	goto	l2926
  7264  0EE6                     u3130:
  7265  0EE6                     l2924:
  7266  0EE6  0022               	movlb	2	; select bank2
  7267  0EE7  18D4               	btfsc	_flags^(0+256),1
  7268  0EE8  2EEA               	goto	u3141
  7269  0EE9  2EEB               	goto	u3140
  7270  0EEA                     u3141:
  7271  0EEA  2E57               	goto	l2906
  7272  0EEB                     u3140:
  7273  0EEB                     l2926:
  7274                           
  7275                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 640:     return p
      +                          ad(fp, &dbuf[i], w);
  7276  0EEB  0020               	movlb	0	; select bank0
  7277  0EEC  0845               	movf	utoa@i,w
  7278  0EED  3EA0               	addlw	(low (_dbuf| (0+256)))& (0+255)
  7279  0EEE  00FD               	movwf	??_utoa
  7280  0EEF  087D               	movf	??_utoa,w
  7281  0EF0  00A4               	movwf	pad@buf
  7282  0EF1  083C               	movf	utoa@w+1,w
  7283  0EF2  00A6               	movwf	pad@p+1
  7284  0EF3  083B               	movf	utoa@w,w
  7285  0EF4  00A5               	movwf	pad@p
  7286  0EF5  083A               	movf	utoa@fp,w
  7287  0EF6  3193  232C  318E   	fcall	_pad
  7288  0EF9  0020               	movlb	0	; select bank0
  7289  0EFA  0825               	movf	?_pad+1,w
  7290  0EFB  00B1               	movwf	?_utoa+1
  7291  0EFC  0824               	movf	?_pad,w
  7292  0EFD  00B0               	movwf	?_utoa
  7293  0EFE                     l1072:
  7294  0EFE  0008               	return
  7295  0EFF                     __end_of_utoa:
  7296                           
  7297                           	psect	text15
  7298  156D                     __ptext15:	
  7299 ;; *************** function ___lomod *****************
  7300 ;; Defined at:
  7301 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\lomod.c"
  7302 ;; Parameters:    Size  Location     Type
  7303 ;;  divisor         8    0[BANK0 ] unsigned long long 
  7304 ;;  dividend        8    8[BANK0 ] unsigned long long 
  7305 ;; Auto vars:     Size  Location     Type
  7306 ;;  counter         1    1[COMMON] unsigned char 
  7307 ;; Return value:  Size  Location     Type
  7308 ;;                  8    0[BANK0 ] unsigned long long 
  7309 ;; Registers used:
  7310 ;;		wreg, status,2, status,0
  7311 ;; Tracked objects:
  7312 ;;		On entry : 0/0
  7313 ;;		On exit  : 0/0
  7314 ;;		Unchanged: 0/0
  7315 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  7316 ;;      Params:         0      16       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7317 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7318 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7319 ;;      Totals:         2      16       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7320 ;;Total ram usage:       18 bytes
  7321 ;; Hardware stack levels used: 1
  7322 ;; This function calls:
  7323 ;;		Nothing
  7324 ;; This function is called by:
  7325 ;;		_utoa
  7326 ;; This function uses a non-reentrant model
  7327 ;;
  7328                           
  7329                           
  7330                           ;psect for function ___lomod
  7331  156D                     ___lomod:
  7332  156D                     l2748:	
  7333                           ;incstack = 0
  7334                           ; Regs used in ___lomod: [wreg+status,2+status,0]
  7335                           
  7336  156D  0020               	movlb	0	; select bank0
  7337  156E  0820               	movf	___lomod@divisor,w
  7338  156F  0421               	iorwf	___lomod@divisor+1,w
  7339  1570  0422               	iorwf	___lomod@divisor+2,w
  7340  1571  0423               	iorwf	___lomod@divisor+3,w
  7341  1572  0424               	iorwf	___lomod@divisor+4,w
  7342  1573  0425               	iorwf	___lomod@divisor+5,w
  7343  1574  0426               	iorwf	___lomod@divisor+6,w
  7344  1575  0427               	iorwf	___lomod@divisor+7,w
  7345  1576  1903               	skipnz
  7346  1577  2D79               	goto	u2801
  7347  1578  2D7A               	goto	u2800
  7348  1579                     u2801:
  7349  1579  2DCD               	goto	l777
  7350  157A                     u2800:
  7351  157A                     l2750:
  7352  157A  01F1               	clrf	___lomod@counter
  7353  157B  0AF1               	incf	___lomod@counter,f
  7354  157C  2D89               	goto	l2756
  7355  157D                     l2752:
  7356  157D  35A0               	lslf	___lomod@divisor,f
  7357  157E  0DA1               	rlf	___lomod@divisor+1,f
  7358  157F  0DA2               	rlf	___lomod@divisor+2,f
  7359  1580  0DA3               	rlf	___lomod@divisor+3,f
  7360  1581  0DA4               	rlf	___lomod@divisor+4,f
  7361  1582  0DA5               	rlf	___lomod@divisor+5,f
  7362  1583  0DA6               	rlf	___lomod@divisor+6,f
  7363  1584  0DA7               	rlf	___lomod@divisor+7,f
  7364  1585                     l2754:
  7365  1585  3001               	movlw	1
  7366  1586  00F0               	movwf	??___lomod
  7367  1587  0870               	movf	??___lomod,w
  7368  1588  07F1               	addwf	___lomod@counter,f
  7369  1589                     l2756:
  7370  1589  1FA7               	btfss	___lomod@divisor+7,7
  7371  158A  2D8C               	goto	u2811
  7372  158B  2D8D               	goto	u2810
  7373  158C                     u2811:
  7374  158C  2D7D               	goto	l2752
  7375  158D                     u2810:
  7376  158D                     l2758:
  7377  158D  0827               	movf	___lomod@divisor+7,w
  7378  158E  022F               	subwf	___lomod@dividend+7,w
  7379  158F  1D03               	skipz
  7380  1590  2DAB               	goto	u2825
  7381  1591  0826               	movf	___lomod@divisor+6,w
  7382  1592  022E               	subwf	___lomod@dividend+6,w
  7383  1593  1D03               	skipz
  7384  1594  2DAB               	goto	u2825
  7385  1595  0825               	movf	___lomod@divisor+5,w
  7386  1596  022D               	subwf	___lomod@dividend+5,w
  7387  1597  1D03               	skipz
  7388  1598  2DAB               	goto	u2825
  7389  1599  0824               	movf	___lomod@divisor+4,w
  7390  159A  022C               	subwf	___lomod@dividend+4,w
  7391  159B  1D03               	skipz
  7392  159C  2DAB               	goto	u2825
  7393  159D  0823               	movf	___lomod@divisor+3,w
  7394  159E  022B               	subwf	___lomod@dividend+3,w
  7395  159F  1D03               	skipz
  7396  15A0  2DAB               	goto	u2825
  7397  15A1  0822               	movf	___lomod@divisor+2,w
  7398  15A2  022A               	subwf	___lomod@dividend+2,w
  7399  15A3  1D03               	skipz
  7400  15A4  2DAB               	goto	u2825
  7401  15A5  0821               	movf	___lomod@divisor+1,w
  7402  15A6  0229               	subwf	___lomod@dividend+1,w
  7403  15A7  1D03               	skipz
  7404  15A8  2DAB               	goto	u2825
  7405  15A9  0820               	movf	___lomod@divisor,w
  7406  15AA  0228               	subwf	___lomod@dividend,w
  7407  15AB                     u2825:
  7408  15AB  1C03               	skipc
  7409  15AC  2DAE               	goto	u2821
  7410  15AD  2DAF               	goto	u2820
  7411  15AE                     u2821:
  7412  15AE  2DBF               	goto	l2762
  7413  15AF                     u2820:
  7414  15AF                     l2760:
  7415  15AF  0820               	movf	___lomod@divisor,w
  7416  15B0  02A8               	subwf	___lomod@dividend,f
  7417  15B1  0821               	movf	___lomod@divisor+1,w
  7418  15B2  3BA9               	subwfb	___lomod@dividend+1,f
  7419  15B3  0822               	movf	___lomod@divisor+2,w
  7420  15B4  3BAA               	subwfb	___lomod@dividend+2,f
  7421  15B5  0823               	movf	___lomod@divisor+3,w
  7422  15B6  3BAB               	subwfb	___lomod@dividend+3,f
  7423  15B7  0824               	movf	___lomod@divisor+4,w
  7424  15B8  3BAC               	subwfb	___lomod@dividend+4,f
  7425  15B9  0825               	movf	___lomod@divisor+5,w
  7426  15BA  3BAD               	subwfb	___lomod@dividend+5,f
  7427  15BB  0826               	movf	___lomod@divisor+6,w
  7428  15BC  3BAE               	subwfb	___lomod@dividend+6,f
  7429  15BD  0827               	movf	___lomod@divisor+7,w
  7430  15BE  3BAF               	subwfb	___lomod@dividend+7,f
  7431  15BF                     l2762:
  7432  15BF  36A7               	lsrf	___lomod@divisor+7,f
  7433  15C0  0CA6               	rrf	___lomod@divisor+6,f
  7434  15C1  0CA5               	rrf	___lomod@divisor+5,f
  7435  15C2  0CA4               	rrf	___lomod@divisor+4,f
  7436  15C3  0CA3               	rrf	___lomod@divisor+3,f
  7437  15C4  0CA2               	rrf	___lomod@divisor+2,f
  7438  15C5  0CA1               	rrf	___lomod@divisor+1,f
  7439  15C6  0CA0               	rrf	___lomod@divisor,f
  7440  15C7  3001               	movlw	1
  7441  15C8  02F1               	subwf	___lomod@counter,f
  7442  15C9  1D03               	btfss	3,2
  7443  15CA  2DCC               	goto	u2831
  7444  15CB  2DCD               	goto	u2830
  7445  15CC                     u2831:
  7446  15CC  2D8D               	goto	l2758
  7447  15CD                     u2830:
  7448  15CD                     l777:
  7449  15CD  0828               	movf	___lomod@dividend,w
  7450  15CE  00A0               	movwf	?___lomod
  7451  15CF  0829               	movf	___lomod@dividend+1,w
  7452  15D0  00A1               	movwf	?___lomod+1
  7453  15D1  082A               	movf	___lomod@dividend+2,w
  7454  15D2  00A2               	movwf	?___lomod+2
  7455  15D3  082B               	movf	___lomod@dividend+3,w
  7456  15D4  00A3               	movwf	?___lomod+3
  7457  15D5  082C               	movf	___lomod@dividend+4,w
  7458  15D6  00A4               	movwf	?___lomod+4
  7459  15D7  082D               	movf	___lomod@dividend+5,w
  7460  15D8  00A5               	movwf	?___lomod+5
  7461  15D9  082E               	movf	___lomod@dividend+6,w
  7462  15DA  00A6               	movwf	?___lomod+6
  7463  15DB  082F               	movf	___lomod@dividend+7,w
  7464  15DC  00A7               	movwf	?___lomod+7
  7465  15DD                     l784:
  7466  15DD  0008               	return
  7467  15DE                     __end_of___lomod:
  7468                           
  7469                           	psect	text16
  7470  1653                     __ptext16:	
  7471 ;; *************** function ___lodiv *****************
  7472 ;; Defined at:
  7473 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\lodiv.c"
  7474 ;; Parameters:    Size  Location     Type
  7475 ;;  divisor         8    0[BANK0 ] unsigned long long 
  7476 ;;  dividend        8    8[BANK0 ] unsigned long long 
  7477 ;; Auto vars:     Size  Location     Type
  7478 ;;  quotient        8    1[COMMON] unsigned long long 
  7479 ;;  counter         1    9[COMMON] unsigned char 
  7480 ;; Return value:  Size  Location     Type
  7481 ;;                  8    0[BANK0 ] unsigned long long 
  7482 ;; Registers used:
  7483 ;;		wreg, fsr1l, fsr1h, status,2, status,0
  7484 ;; Tracked objects:
  7485 ;;		On entry : 0/0
  7486 ;;		On exit  : 0/0
  7487 ;;		Unchanged: 0/0
  7488 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  7489 ;;      Params:         0      16       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7490 ;;      Locals:         9       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7491 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7492 ;;      Totals:        10      16       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7493 ;;Total ram usage:       26 bytes
  7494 ;; Hardware stack levels used: 1
  7495 ;; This function calls:
  7496 ;;		Nothing
  7497 ;; This function is called by:
  7498 ;;		_utoa
  7499 ;; This function uses a non-reentrant model
  7500 ;;
  7501                           
  7502                           
  7503                           ;psect for function ___lodiv
  7504  1653                     ___lodiv:
  7505  1653                     l2726:	
  7506                           ;incstack = 0
  7507                           ; Regs used in ___lodiv: [wreg+fsr1l+fsr1h+status,2+status,0]
  7508                           
  7509  1653  3071               	movlw	low ___lodiv@quotient
  7510  1654  0086               	movwf	6
  7511  1655  3000               	movlw	high ___lodiv@quotient
  7512  1656  0087               	movwf	7
  7513  1657  3008               	movlw	8
  7514  1658  00F0               	movwf	??___lodiv
  7515  1659  3000               	movlw	0
  7516  165A                     u2750:
  7517  165A  001E               	movwi fsr1++
  7518  165B  0BF0               	decfsz	??___lodiv,f
  7519  165C  2E5A               	goto	u2750
  7520  165D                     l2728:
  7521  165D  0020               	movlb	0	; select bank0
  7522  165E  0820               	movf	___lodiv@divisor,w
  7523  165F  0421               	iorwf	___lodiv@divisor+1,w
  7524  1660  0422               	iorwf	___lodiv@divisor+2,w
  7525  1661  0423               	iorwf	___lodiv@divisor+3,w
  7526  1662  0424               	iorwf	___lodiv@divisor+4,w
  7527  1663  0425               	iorwf	___lodiv@divisor+5,w
  7528  1664  0426               	iorwf	___lodiv@divisor+6,w
  7529  1665  0427               	iorwf	___lodiv@divisor+7,w
  7530  1666  1903               	skipnz
  7531  1667  2E69               	goto	u2761
  7532  1668  2E6A               	goto	u2760
  7533  1669                     u2761:
  7534  1669  2EC6               	goto	l767
  7535  166A                     u2760:
  7536  166A                     l2730:
  7537  166A  01F9               	clrf	___lodiv@counter
  7538  166B  0AF9               	incf	___lodiv@counter,f
  7539  166C  2E79               	goto	l2736
  7540  166D                     l2732:
  7541  166D  35A0               	lslf	___lodiv@divisor,f
  7542  166E  0DA1               	rlf	___lodiv@divisor+1,f
  7543  166F  0DA2               	rlf	___lodiv@divisor+2,f
  7544  1670  0DA3               	rlf	___lodiv@divisor+3,f
  7545  1671  0DA4               	rlf	___lodiv@divisor+4,f
  7546  1672  0DA5               	rlf	___lodiv@divisor+5,f
  7547  1673  0DA6               	rlf	___lodiv@divisor+6,f
  7548  1674  0DA7               	rlf	___lodiv@divisor+7,f
  7549  1675                     l2734:
  7550  1675  3001               	movlw	1
  7551  1676  00F0               	movwf	??___lodiv
  7552  1677  0870               	movf	??___lodiv,w
  7553  1678  07F9               	addwf	___lodiv@counter,f
  7554  1679                     l2736:
  7555  1679  1FA7               	btfss	___lodiv@divisor+7,7
  7556  167A  2E7C               	goto	u2771
  7557  167B  2E7D               	goto	u2770
  7558  167C                     u2771:
  7559  167C  2E6D               	goto	l2732
  7560  167D                     u2770:
  7561  167D                     l2738:
  7562  167D  35F1               	lslf	___lodiv@quotient,f
  7563  167E  0DF2               	rlf	___lodiv@quotient+1,f
  7564  167F  0DF3               	rlf	___lodiv@quotient+2,f
  7565  1680  0DF4               	rlf	___lodiv@quotient+3,f
  7566  1681  0DF5               	rlf	___lodiv@quotient+4,f
  7567  1682  0DF6               	rlf	___lodiv@quotient+5,f
  7568  1683  0DF7               	rlf	___lodiv@quotient+6,f
  7569  1684  0DF8               	rlf	___lodiv@quotient+7,f
  7570  1685                     l2740:
  7571  1685  0827               	movf	___lodiv@divisor+7,w
  7572  1686  022F               	subwf	___lodiv@dividend+7,w
  7573  1687  1D03               	skipz
  7574  1688  2EA3               	goto	u2785
  7575  1689  0826               	movf	___lodiv@divisor+6,w
  7576  168A  022E               	subwf	___lodiv@dividend+6,w
  7577  168B  1D03               	skipz
  7578  168C  2EA3               	goto	u2785
  7579  168D  0825               	movf	___lodiv@divisor+5,w
  7580  168E  022D               	subwf	___lodiv@dividend+5,w
  7581  168F  1D03               	skipz
  7582  1690  2EA3               	goto	u2785
  7583  1691  0824               	movf	___lodiv@divisor+4,w
  7584  1692  022C               	subwf	___lodiv@dividend+4,w
  7585  1693  1D03               	skipz
  7586  1694  2EA3               	goto	u2785
  7587  1695  0823               	movf	___lodiv@divisor+3,w
  7588  1696  022B               	subwf	___lodiv@dividend+3,w
  7589  1697  1D03               	skipz
  7590  1698  2EA3               	goto	u2785
  7591  1699  0822               	movf	___lodiv@divisor+2,w
  7592  169A  022A               	subwf	___lodiv@dividend+2,w
  7593  169B  1D03               	skipz
  7594  169C  2EA3               	goto	u2785
  7595  169D  0821               	movf	___lodiv@divisor+1,w
  7596  169E  0229               	subwf	___lodiv@dividend+1,w
  7597  169F  1D03               	skipz
  7598  16A0  2EA3               	goto	u2785
  7599  16A1  0820               	movf	___lodiv@divisor,w
  7600  16A2  0228               	subwf	___lodiv@dividend,w
  7601  16A3                     u2785:
  7602  16A3  1C03               	skipc
  7603  16A4  2EA6               	goto	u2781
  7604  16A5  2EA7               	goto	u2780
  7605  16A6                     u2781:
  7606  16A6  2EB8               	goto	l2746
  7607  16A7                     u2780:
  7608  16A7                     l2742:
  7609  16A7  0820               	movf	___lodiv@divisor,w
  7610  16A8  02A8               	subwf	___lodiv@dividend,f
  7611  16A9  0821               	movf	___lodiv@divisor+1,w
  7612  16AA  3BA9               	subwfb	___lodiv@dividend+1,f
  7613  16AB  0822               	movf	___lodiv@divisor+2,w
  7614  16AC  3BAA               	subwfb	___lodiv@dividend+2,f
  7615  16AD  0823               	movf	___lodiv@divisor+3,w
  7616  16AE  3BAB               	subwfb	___lodiv@dividend+3,f
  7617  16AF  0824               	movf	___lodiv@divisor+4,w
  7618  16B0  3BAC               	subwfb	___lodiv@dividend+4,f
  7619  16B1  0825               	movf	___lodiv@divisor+5,w
  7620  16B2  3BAD               	subwfb	___lodiv@dividend+5,f
  7621  16B3  0826               	movf	___lodiv@divisor+6,w
  7622  16B4  3BAE               	subwfb	___lodiv@dividend+6,f
  7623  16B5  0827               	movf	___lodiv@divisor+7,w
  7624  16B6  3BAF               	subwfb	___lodiv@dividend+7,f
  7625  16B7                     l2744:
  7626  16B7  1471               	bsf	___lodiv@quotient,0
  7627  16B8                     l2746:
  7628  16B8  36A7               	lsrf	___lodiv@divisor+7,f
  7629  16B9  0CA6               	rrf	___lodiv@divisor+6,f
  7630  16BA  0CA5               	rrf	___lodiv@divisor+5,f
  7631  16BB  0CA4               	rrf	___lodiv@divisor+4,f
  7632  16BC  0CA3               	rrf	___lodiv@divisor+3,f
  7633  16BD  0CA2               	rrf	___lodiv@divisor+2,f
  7634  16BE  0CA1               	rrf	___lodiv@divisor+1,f
  7635  16BF  0CA0               	rrf	___lodiv@divisor,f
  7636  16C0  3001               	movlw	1
  7637  16C1  02F9               	subwf	___lodiv@counter,f
  7638  16C2  1D03               	btfss	3,2
  7639  16C3  2EC5               	goto	u2791
  7640  16C4  2EC6               	goto	u2790
  7641  16C5                     u2791:
  7642  16C5  2E7D               	goto	l2738
  7643  16C6                     u2790:
  7644  16C6                     l767:
  7645  16C6  0871               	movf	___lodiv@quotient,w
  7646  16C7  00A0               	movwf	?___lodiv
  7647  16C8  0872               	movf	___lodiv@quotient+1,w
  7648  16C9  00A1               	movwf	?___lodiv+1
  7649  16CA  0873               	movf	___lodiv@quotient+2,w
  7650  16CB  00A2               	movwf	?___lodiv+2
  7651  16CC  0874               	movf	___lodiv@quotient+3,w
  7652  16CD  00A3               	movwf	?___lodiv+3
  7653  16CE  0875               	movf	___lodiv@quotient+4,w
  7654  16CF  00A4               	movwf	?___lodiv+4
  7655  16D0  0876               	movf	___lodiv@quotient+5,w
  7656  16D1  00A5               	movwf	?___lodiv+5
  7657  16D2  0877               	movf	___lodiv@quotient+6,w
  7658  16D3  00A6               	movwf	?___lodiv+6
  7659  16D4  0878               	movf	___lodiv@quotient+7,w
  7660  16D5  00A7               	movwf	?___lodiv+7
  7661  16D6                     l774:
  7662  16D6  0008               	return
  7663  16D7                     __end_of___lodiv:
  7664                           
  7665                           	psect	text17
  7666  143A                     __ptext17:	
  7667 ;; *************** function _strncmp *****************
  7668 ;; Defined at:
  7669 ;;		line 3 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\strncmp.c"
  7670 ;; Parameters:    Size  Location     Type
  7671 ;;  _l              2    0[COMMON] PTR const unsigned char 
  7672 ;;		 -> STR_7(12), STR_6(6), STR_5(10), STR_4(8), 
  7673 ;;  _r              2    2[COMMON] PTR const unsigned char 
  7674 ;;		 -> STR_19(3), STR_14(3), STR_10(3), 
  7675 ;;  n               2    4[COMMON] unsigned int 
  7676 ;; Auto vars:     Size  Location     Type
  7677 ;;  r               2    9[COMMON] PTR const unsigned char 
  7678 ;;		 -> STR_19(3), STR_14(3), STR_10(3), 
  7679 ;;  l               2    7[COMMON] PTR const unsigned char 
  7680 ;;		 -> STR_7(12), STR_6(6), STR_5(10), STR_4(8), 
  7681 ;; Return value:  Size  Location     Type
  7682 ;;                  2    0[COMMON] int 
  7683 ;; Registers used:
  7684 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath
  7685 ;; Tracked objects:
  7686 ;;		On entry : 0/0
  7687 ;;		On exit  : 0/0
  7688 ;;		Unchanged: 0/0
  7689 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  7690 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7691 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7692 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7693 ;;      Totals:        11       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7694 ;;Total ram usage:       11 bytes
  7695 ;; Hardware stack levels used: 1
  7696 ;; This function calls:
  7697 ;;		Nothing
  7698 ;; This function is called by:
  7699 ;;		_vfpfcnvrt
  7700 ;; This function uses a non-reentrant model
  7701 ;;
  7702                           
  7703                           
  7704                           ;psect for function _strncmp
  7705  143A                     _strncmp:
  7706  143A                     l2930:	
  7707                           ;incstack = 0
  7708                           ; Regs used in _strncmp: [wreg-fsr0h+status,2+status,0+pclath]
  7709                           
  7710  143A  0871               	movf	strncmp@_l+1,w
  7711  143B  00F8               	movwf	strncmp@l+1
  7712  143C  0870               	movf	strncmp@_l,w
  7713  143D  00F7               	movwf	strncmp@l
  7714  143E  0873               	movf	strncmp@_r+1,w
  7715  143F  00FA               	movwf	strncmp@r+1
  7716  1440  0872               	movf	strncmp@_r,w
  7717  1441  00F9               	movwf	strncmp@r
  7718  1442                     l2932:
  7719  1442  3001               	movlw	1
  7720  1443  02F4               	subwf	strncmp@n,f
  7721  1444  3000               	movlw	0
  7722  1445  3BF5               	subwfb	strncmp@n+1,f
  7723  1446  0A74               	incf	strncmp@n,w
  7724  1447  1D03               	skipz
  7725  1448  2C4D               	goto	u3151
  7726  1449  0A75               	incf	strncmp@n+1,w
  7727  144A  1D03               	btfss	3,2
  7728  144B  2C4D               	goto	u3151
  7729  144C  2C4E               	goto	u3150
  7730  144D                     u3151:
  7731  144D  2C5D               	goto	l2940
  7732  144E                     u3150:
  7733  144E                     l2934:
  7734  144E  01F0               	clrf	?_strncmp
  7735  144F  01F1               	clrf	?_strncmp+1
  7736  1450  2C95               	goto	l1131
  7737  1451                     l2938:
  7738  1451  3001               	movlw	1
  7739  1452  07F7               	addwf	strncmp@l,f
  7740  1453  3000               	movlw	0
  7741  1454  3DF8               	addwfc	strncmp@l+1,f
  7742  1455  3001               	movlw	1
  7743  1456  07F9               	addwf	strncmp@r,f
  7744  1457  3000               	movlw	0
  7745  1458  3DFA               	addwfc	strncmp@r+1,f
  7746  1459  3001               	movlw	1
  7747  145A  02F4               	subwf	strncmp@n,f
  7748  145B  3000               	movlw	0
  7749  145C  3BF5               	subwfb	strncmp@n+1,f
  7750  145D                     l2940:
  7751  145D  0877               	movf	strncmp@l,w
  7752  145E  0084               	movwf	4
  7753  145F  0878               	movf	strncmp@l+1,w
  7754  1460  0085               	movwf	5
  7755  1461  0012               	moviw fsr0++
  7756  1462  1903               	btfsc	3,2
  7757  1463  2C65               	goto	u3161
  7758  1464  2C66               	goto	u3160
  7759  1465                     u3161:
  7760  1465  2C85               	goto	l2948
  7761  1466                     u3160:
  7762  1466                     l2942:
  7763  1466  0879               	movf	strncmp@r,w
  7764  1467  0084               	movwf	4
  7765  1468  087A               	movf	strncmp@r+1,w
  7766  1469  0085               	movwf	5
  7767  146A  0012               	moviw fsr0++
  7768  146B  1903               	btfsc	3,2
  7769  146C  2C6E               	goto	u3171
  7770  146D  2C6F               	goto	u3170
  7771  146E                     u3171:
  7772  146E  2C85               	goto	l2948
  7773  146F                     u3170:
  7774  146F                     l2944:
  7775  146F  0874               	movf	strncmp@n,w
  7776  1470  0475               	iorwf	strncmp@n+1,w
  7777  1471  1903               	btfsc	3,2
  7778  1472  2C74               	goto	u3181
  7779  1473  2C75               	goto	u3180
  7780  1474                     u3181:
  7781  1474  2C85               	goto	l2948
  7782  1475                     u3180:
  7783  1475                     l2946:
  7784  1475  0879               	movf	strncmp@r,w
  7785  1476  0084               	movwf	4
  7786  1477  087A               	movf	strncmp@r+1,w
  7787  1478  0085               	movwf	5
  7788  1479  0800               	movf	0,w	;code access
  7789  147A  00F6               	movwf	??_strncmp
  7790  147B  0877               	movf	strncmp@l,w
  7791  147C  0084               	movwf	4
  7792  147D  0878               	movf	strncmp@l+1,w
  7793  147E  0085               	movwf	5
  7794  147F  0800               	movf	0,w	;code access
  7795  1480  0676               	xorwf	??_strncmp,w
  7796  1481  1903               	skipnz
  7797  1482  2C84               	goto	u3191
  7798  1483  2C85               	goto	u3190
  7799  1484                     u3191:
  7800  1484  2C51               	goto	l2938
  7801  1485                     u3190:
  7802  1485                     l2948:
  7803  1485  0877               	movf	strncmp@l,w
  7804  1486  0084               	movwf	4
  7805  1487  0878               	movf	strncmp@l+1,w
  7806  1488  0085               	movwf	5
  7807  1489  0800               	movf	0,w	;code access
  7808  148A  00F6               	movwf	??_strncmp
  7809  148B  0879               	movf	strncmp@r,w
  7810  148C  0084               	movwf	4
  7811  148D  087A               	movf	strncmp@r+1,w
  7812  148E  0085               	movwf	5
  7813  148F  0800               	movf	0,w	;code access
  7814  1490  0276               	subwf	??_strncmp,w
  7815  1491  00F0               	movwf	?_strncmp
  7816  1492  01F1               	clrf	?_strncmp+1
  7817  1493  1C03               	skipc
  7818  1494  03F1               	decf	?_strncmp+1,f
  7819  1495                     l1131:
  7820  1495  0008               	return
  7821  1496                     __end_of_strncmp:
  7822                           
  7823                           	psect	text18
  7824  006A                     __ptext18:	
  7825 ;; *************** function _dtoa *****************
  7826 ;; Defined at:
  7827 ;;		line 287 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c"
  7828 ;; Parameters:    Size  Location     Type
  7829 ;;  fp              1    wreg     PTR struct _IO_FILE
  7830 ;;		 -> sprintf@f(5), 
  7831 ;;  d               8   16[BANK0 ] long long 
  7832 ;; Auto vars:     Size  Location     Type
  7833 ;;  fp              1   31[BANK0 ] PTR struct _IO_FILE
  7834 ;;		 -> sprintf@f(5), 
  7835 ;;  n               8   36[BANK0 ] long long 
  7836 ;;  i               2   44[BANK0 ] int 
  7837 ;;  s               2   34[BANK0 ] int 
  7838 ;;  w               2   32[BANK0 ] int 
  7839 ;;  p               2   29[BANK0 ] int 
  7840 ;; Return value:  Size  Location     Type
  7841 ;;                  2   16[BANK0 ] int 
  7842 ;; Registers used:
  7843 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  7844 ;; Tracked objects:
  7845 ;;		On entry : 0/0
  7846 ;;		On exit  : 0/0
  7847 ;;		Unchanged: 0/0
  7848 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  7849 ;;      Params:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7850 ;;      Locals:         0      19       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7851 ;;      Temps:          0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7852 ;;      Totals:         0      30       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7853 ;;Total ram usage:       30 bytes
  7854 ;; Hardware stack levels used: 1
  7855 ;; Hardware stack levels required when called: 4
  7856 ;; This function calls:
  7857 ;;		___aodiv
  7858 ;;		___aomod
  7859 ;;		_abs
  7860 ;;		_pad
  7861 ;; This function is called by:
  7862 ;;		_vfpfcnvrt
  7863 ;; This function uses a non-reentrant model
  7864 ;;
  7865                           
  7866                           
  7867                           ;psect for function _dtoa
  7868  006A                     _dtoa:
  7869                           
  7870                           ;incstack = 0
  7871                           ; Regs used in _dtoa: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  7872                           ;dtoa@fp stored from wreg
  7873  006A  0020               	movlb	0	; select bank0
  7874  006B  00BF               	movwf	dtoa@fp
  7875  006C                     l2836:
  7876                           
  7877                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 287: static int d
      +                          toa(FILE *fp, long long d);C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\d
      +                          oprnt.c: 288: {;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 28
      +                          9:     int i, p, s, w;;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprn
      +                          t.c: 290:     long long n;;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\d
      +                          oprnt.c: 293:     n = d;
  7878  006C  0830               	movf	dtoa@d,w
  7879  006D  00C4               	movwf	dtoa@n
  7880  006E  0831               	movf	dtoa@d+1,w
  7881  006F  00C5               	movwf	dtoa@n+1
  7882  0070  0832               	movf	dtoa@d+2,w
  7883  0071  00C6               	movwf	dtoa@n+2
  7884  0072  0833               	movf	dtoa@d+3,w
  7885  0073  00C7               	movwf	dtoa@n+3
  7886  0074  0834               	movf	dtoa@d+4,w
  7887  0075  00C8               	movwf	dtoa@n+4
  7888  0076  0835               	movf	dtoa@d+5,w
  7889  0077  00C9               	movwf	dtoa@n+5
  7890  0078  0836               	movf	dtoa@d+6,w
  7891  0079  00CA               	movwf	dtoa@n+6
  7892  007A  0837               	movf	dtoa@d+7,w
  7893  007B  00CB               	movwf	dtoa@n+7
  7894  007C                     l2838:
  7895                           
  7896                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 294:     s = n < 
      +                          0 ? 1 : 0;
  7897  007C  3044               	movlw	low dtoa@n
  7898  007D  0086               	movwf	6
  7899  007E  3000               	movlw	high dtoa@n
  7900  007F  0087               	movwf	7
  7901  0080  3F47               	moviw [7]fsr1
  7902  0081  00B8               	movwf	??_dtoa
  7903  0082  1BB8               	btfsc	??_dtoa,7
  7904  0083  2885               	goto	u2921
  7905  0084  2887               	goto	u2920
  7906  0085                     u2921:
  7907  0085  3001               	movlw	1
  7908  0086  2888               	goto	u2930
  7909  0087                     u2920:
  7910  0087  3000               	movlw	0
  7911  0088                     u2930:
  7912  0088  0020               	movlb	0	; select bank0
  7913  0089  00B9               	movwf	??_dtoa+1
  7914  008A  01BA               	clrf	??_dtoa+2
  7915  008B  0839               	movf	??_dtoa+1,w
  7916  008C  00C2               	movwf	dtoa@s
  7917  008D  083A               	movf	??_dtoa+2,w
  7918  008E  00C3               	movwf	dtoa@s+1
  7919  008F                     l2840:
  7920                           
  7921                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 295:     if (s) {
  7922  008F  0842               	movf	dtoa@s,w
  7923  0090  0443               	iorwf	dtoa@s+1,w
  7924  0091  1903               	btfsc	3,2
  7925  0092  2894               	goto	u2941
  7926  0093  2895               	goto	u2940
  7927  0094                     u2941:
  7928  0094  28B3               	goto	l1034
  7929  0095                     u2940:
  7930  0095                     l2842:
  7931                           
  7932                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 296:         n = 
      +                          -n;
  7933  0095  09C4               	comf	dtoa@n,f
  7934  0096  09C5               	comf	dtoa@n+1,f
  7935  0097  09C6               	comf	dtoa@n+2,f
  7936  0098  09C7               	comf	dtoa@n+3,f
  7937  0099  09C8               	comf	dtoa@n+4,f
  7938  009A  09C9               	comf	dtoa@n+5,f
  7939  009B  09CA               	comf	dtoa@n+6,f
  7940  009C  09CB               	comf	dtoa@n+7,f
  7941  009D  0AC4               	incf	dtoa@n,f
  7942  009E  1D03               	skipz
  7943  009F  28B3               	goto	u295lld
  7944  00A0  0AC5               	incf	dtoa@n+1,f
  7945  00A1  1D03               	skipz
  7946  00A2  28B3               	goto	u295lld
  7947  00A3  0AC6               	incf	dtoa@n+2,f
  7948  00A4  1D03               	skipz
  7949  00A5  28B3               	goto	u295lld
  7950  00A6  0AC7               	incf	dtoa@n+3,f
  7951  00A7  1D03               	skipz
  7952  00A8  28B3               	goto	u295lld
  7953  00A9  0AC8               	incf	dtoa@n+4,f
  7954  00AA  1D03               	skipz
  7955  00AB  28B3               	goto	u295lld
  7956  00AC  0AC9               	incf	dtoa@n+5,f
  7957  00AD  1D03               	skipz
  7958  00AE  28B3               	goto	u295lld
  7959  00AF  0ACA               	incf	dtoa@n+6,f
  7960  00B0  1D03               	skipz
  7961  00B1  28B3               	goto	u295lld
  7962  00B2  0ACB               	incf	dtoa@n+7,f
  7963  00B3                     u295lld:
  7964  00B3                     l1034:	
  7965                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 297:     }
  7966                           
  7967                           
  7968                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 300:     if (!(pr
      +                          ec < 0)) {
  7969  00B3  0022               	movlb	2	; select bank2
  7970  00B4  1BD3               	btfsc	(_prec+1)^(0+256),7
  7971  00B5  28B7               	goto	u2961
  7972  00B6  28B8               	goto	u2960
  7973  00B7                     u2961:
  7974  00B7  28BC               	goto	l1035
  7975  00B8                     u2960:
  7976  00B8                     l2844:
  7977                           
  7978                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 301:         flag
      +                          s &= ~(1 << 1);
  7979  00B8  30FD               	movlw	253
  7980  00B9  05D4               	andwf	_flags^(0+256),f
  7981  00BA  30FF               	movlw	255
  7982  00BB  05D5               	andwf	(_flags+1)^(0+256),f
  7983  00BC                     l1035:	
  7984                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 302:     }
  7985                           
  7986                           
  7987                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 303:     p = (0 <
      +                           prec) ? prec : 1;
  7988  00BC  0853               	movf	(_prec+1)^(0+256),w
  7989  00BD  3A80               	xorlw	128
  7990  00BE  0020               	movlb	0	; select bank0
  7991  00BF  00B8               	movwf	??_dtoa
  7992  00C0  3080               	movlw	128
  7993  00C1  0238               	subwf	??_dtoa,w
  7994  00C2  1D03               	skipz
  7995  00C3  28C7               	goto	u2975
  7996  00C4  3001               	movlw	1
  7997  00C5  0022               	movlb	2	; select bank2
  7998  00C6  0252               	subwf	_prec^(0+256),w
  7999  00C7                     u2975:
  8000  00C7  1803               	skipnc
  8001  00C8  28CA               	goto	u2971
  8002  00C9  28CB               	goto	u2970
  8003  00CA                     u2971:
  8004  00CA  28D1               	goto	l2848
  8005  00CB                     u2970:
  8006  00CB                     l2846:
  8007  00CB  3001               	movlw	1
  8008  00CC  0020               	movlb	0	; select bank0
  8009  00CD  00BD               	movwf	dtoa@p
  8010  00CE  3000               	movlw	0
  8011  00CF  00BE               	movwf	dtoa@p+1
  8012  00D0  28D9               	goto	l1039
  8013  00D1                     l2848:
  8014  00D1  0022               	movlb	2	; select bank2
  8015  00D2  0853               	movf	(_prec+1)^(0+256),w
  8016  00D3  0020               	movlb	0	; select bank0
  8017  00D4  00BE               	movwf	dtoa@p+1
  8018  00D5  0022               	movlb	2	; select bank2
  8019  00D6  0852               	movf	_prec^(0+256),w
  8020  00D7  0020               	movlb	0	; select bank0
  8021  00D8  00BD               	movwf	dtoa@p
  8022  00D9                     l1039:
  8023                           
  8024                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 304:     w = widt
      +                          h;
  8025  00D9  0022               	movlb	2	; select bank2
  8026  00DA  0851               	movf	(_width+1)^(0+256),w
  8027  00DB  0020               	movlb	0	; select bank0
  8028  00DC  00C1               	movwf	dtoa@w+1
  8029  00DD  0022               	movlb	2	; select bank2
  8030  00DE  0850               	movf	_width^(0+256),w
  8031  00DF  0020               	movlb	0	; select bank0
  8032  00E0  00C0               	movwf	dtoa@w
  8033  00E1                     l2850:
  8034                           
  8035                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 305:     if (s ||
      +                           (flags & (1 << 2))) {
  8036  00E1  0842               	movf	dtoa@s,w
  8037  00E2  0443               	iorwf	dtoa@s+1,w
  8038  00E3  1D03               	btfss	3,2
  8039  00E4  28E6               	goto	u2981
  8040  00E5  28E7               	goto	u2980
  8041  00E6                     u2981:
  8042  00E6  28EC               	goto	l2854
  8043  00E7                     u2980:
  8044  00E7                     l2852:
  8045  00E7  0022               	movlb	2	; select bank2
  8046  00E8  1D54               	btfss	_flags^(0+256),2
  8047  00E9  28EB               	goto	u2991
  8048  00EA  28EC               	goto	u2990
  8049  00EB                     u2991:
  8050  00EB  28F1               	goto	l1040
  8051  00EC                     u2990:
  8052  00EC                     l2854:
  8053                           
  8054                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 306:         --w;
  8055  00EC  30FF               	movlw	255
  8056  00ED  0020               	movlb	0	; select bank0
  8057  00EE  07C0               	addwf	dtoa@w,f
  8058  00EF  30FF               	movlw	255
  8059  00F0  3DC1               	addwfc	dtoa@w+1,f
  8060  00F1                     l1040:	
  8061                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 307:     }
  8062                           
  8063                           
  8064                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 310:     i = size
      +                          of(dbuf) - 1;
  8065  00F1  301F               	movlw	31
  8066  00F2  0020               	movlb	0	; select bank0
  8067  00F3  00CC               	movwf	dtoa@i
  8068  00F4  3000               	movlw	0
  8069  00F5  00CD               	movwf	dtoa@i+1
  8070  00F6                     l2856:
  8071                           
  8072                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 311:     dbuf[i] 
      +                          = '\0';
  8073  00F6  0023               	movlb	3	; select bank3
  8074  00F7  01BF               	clrf	(_dbuf^(0+384)+31)
  8075                           
  8076                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 312:     while (!
      +                          (i < 1) && (n || (0 < p) || ((0 < w) && (flags & (1 << 1))))) {
  8077  00F8  2962               	goto	l1043
  8078  00F9                     l2858:
  8079                           
  8080                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 313:         --i;
  8081  00F9  30FF               	movlw	255
  8082  00FA  0020               	movlb	0	; select bank0
  8083  00FB  07CC               	addwf	dtoa@i,f
  8084  00FC  30FF               	movlw	255
  8085  00FD  3DCD               	addwfc	dtoa@i+1,f
  8086  00FE                     l2860:
  8087                           
  8088                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 314:         dbuf
      +                          [i] = (char)((int)'0' + abs(n % 10));
  8089  00FE  300A               	movlw	10
  8090  00FF  00A0               	movwf	___aomod@divisor
  8091  0100  01A1               	clrf	___aomod@divisor+1
  8092  0101  01A2               	clrf	___aomod@divisor+2
  8093  0102  01A3               	clrf	___aomod@divisor+3
  8094  0103  01A4               	clrf	___aomod@divisor+4
  8095  0104  01A5               	clrf	___aomod@divisor+5
  8096  0105  01A6               	clrf	___aomod@divisor+6
  8097  0106  01A7               	clrf	___aomod@divisor+7
  8098  0107  0844               	movf	dtoa@n,w
  8099  0108  00A8               	movwf	___aomod@dividend
  8100  0109  0845               	movf	dtoa@n+1,w
  8101  010A  00A9               	movwf	___aomod@dividend+1
  8102  010B  0846               	movf	dtoa@n+2,w
  8103  010C  00AA               	movwf	___aomod@dividend+2
  8104  010D  0847               	movf	dtoa@n+3,w
  8105  010E  00AB               	movwf	___aomod@dividend+3
  8106  010F  0848               	movf	dtoa@n+4,w
  8107  0110  00AC               	movwf	___aomod@dividend+4
  8108  0111  0849               	movf	dtoa@n+5,w
  8109  0112  00AD               	movwf	___aomod@dividend+5
  8110  0113  084A               	movf	dtoa@n+6,w
  8111  0114  00AE               	movwf	___aomod@dividend+6
  8112  0115  084B               	movf	dtoa@n+7,w
  8113  0116  00AF               	movwf	___aomod@dividend+7
  8114  0117  318D  2528  3180   	fcall	___aomod
  8115  011A  0020               	movlb	0	; select bank0
  8116  011B  0821               	movf	?___aomod+1,w
  8117  011C  00F4               	movwf	abs@a+1
  8118  011D  0820               	movf	?___aomod,w
  8119  011E  00F3               	movwf	abs@a
  8120  011F  3190  2007  3180   	fcall	_abs
  8121  0122  0873               	movf	?_abs,w
  8122  0123  3E30               	addlw	48
  8123  0124  0020               	movlb	0	; select bank0
  8124  0125  00B8               	movwf	??_dtoa
  8125  0126  084C               	movf	dtoa@i,w
  8126  0127  3EA0               	addlw	(low (_dbuf| (0+256)))& (0+255)
  8127  0128  0086               	movwf	6
  8128  0129  3001               	movlw	1	; select bank3/4
  8129  012A  0087               	movwf	7
  8130  012B  0838               	movf	??_dtoa,w
  8131  012C  0081               	movwf	1
  8132  012D                     l2862:
  8133                           
  8134                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 315:         --p;
  8135  012D  30FF               	movlw	255
  8136  012E  07BD               	addwf	dtoa@p,f
  8137  012F  30FF               	movlw	255
  8138  0130  3DBE               	addwfc	dtoa@p+1,f
  8139  0131                     l2864:
  8140                           
  8141                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 316:         --w;
  8142  0131  30FF               	movlw	255
  8143  0132  07C0               	addwf	dtoa@w,f
  8144  0133  30FF               	movlw	255
  8145  0134  3DC1               	addwfc	dtoa@w+1,f
  8146  0135                     l2866:
  8147                           
  8148                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 317:         n = 
      +                          n / 10;
  8149  0135  300A               	movlw	10
  8150  0136  00A0               	movwf	___aodiv@divisor
  8151  0137  01A1               	clrf	___aodiv@divisor+1
  8152  0138  01A2               	clrf	___aodiv@divisor+2
  8153  0139  01A3               	clrf	___aodiv@divisor+3
  8154  013A  01A4               	clrf	___aodiv@divisor+4
  8155  013B  01A5               	clrf	___aodiv@divisor+5
  8156  013C  01A6               	clrf	___aodiv@divisor+6
  8157  013D  01A7               	clrf	___aodiv@divisor+7
  8158  013E  0844               	movf	dtoa@n,w
  8159  013F  00A8               	movwf	___aodiv@dividend
  8160  0140  0845               	movf	dtoa@n+1,w
  8161  0141  00A9               	movwf	___aodiv@dividend+1
  8162  0142  0846               	movf	dtoa@n+2,w
  8163  0143  00AA               	movwf	___aodiv@dividend+2
  8164  0144  0847               	movf	dtoa@n+3,w
  8165  0145  00AB               	movwf	___aodiv@dividend+3
  8166  0146  0848               	movf	dtoa@n+4,w
  8167  0147  00AC               	movwf	___aodiv@dividend+4
  8168  0148  0849               	movf	dtoa@n+5,w
  8169  0149  00AD               	movwf	___aodiv@dividend+5
  8170  014A  084A               	movf	dtoa@n+6,w
  8171  014B  00AE               	movwf	___aodiv@dividend+6
  8172  014C  084B               	movf	dtoa@n+7,w
  8173  014D  00AF               	movwf	___aodiv@dividend+7
  8174  014E  318E  26FF  3180   	fcall	___aodiv
  8175  0151  0020               	movlb	0	; select bank0
  8176  0152  0820               	movf	?___aodiv,w
  8177  0153  00C4               	movwf	dtoa@n
  8178  0154  0821               	movf	?___aodiv+1,w
  8179  0155  00C5               	movwf	dtoa@n+1
  8180  0156  0822               	movf	?___aodiv+2,w
  8181  0157  00C6               	movwf	dtoa@n+2
  8182  0158  0823               	movf	?___aodiv+3,w
  8183  0159  00C7               	movwf	dtoa@n+3
  8184  015A  0824               	movf	?___aodiv+4,w
  8185  015B  00C8               	movwf	dtoa@n+4
  8186  015C  0825               	movf	?___aodiv+5,w
  8187  015D  00C9               	movwf	dtoa@n+5
  8188  015E  0826               	movf	?___aodiv+6,w
  8189  015F  00CA               	movwf	dtoa@n+6
  8190  0160  0827               	movf	?___aodiv+7,w
  8191  0161  00CB               	movwf	dtoa@n+7
  8192  0162                     l1043:	
  8193                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 318:     }
  8194                           
  8195                           
  8196                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 312:     while (!
      +                          (i < 1) && (n || (0 < p) || ((0 < w) && (flags & (1 << 1))))) {
  8197  0162  0020               	movlb	0	; select bank0
  8198  0163  084D               	movf	dtoa@i+1,w
  8199  0164  3A80               	xorlw	128
  8200  0165  00B8               	movwf	??_dtoa
  8201  0166  3080               	movlw	128
  8202  0167  0238               	subwf	??_dtoa,w
  8203  0168  1D03               	skipz
  8204  0169  296C               	goto	u3005
  8205  016A  3001               	movlw	1
  8206  016B  024C               	subwf	dtoa@i,w
  8207  016C                     u3005:
  8208  016C  1C03               	skipc
  8209  016D  296F               	goto	u3001
  8210  016E  2970               	goto	u3000
  8211  016F                     u3001:
  8212  016F  299D               	goto	l2876
  8213  0170                     u3000:
  8214  0170                     l2868:
  8215  0170  0020               	movlb	0	; select bank0
  8216  0171  0844               	movf	dtoa@n,w
  8217  0172  0445               	iorwf	dtoa@n+1,w
  8218  0173  0446               	iorwf	dtoa@n+2,w
  8219  0174  0447               	iorwf	dtoa@n+3,w
  8220  0175  0448               	iorwf	dtoa@n+4,w
  8221  0176  0449               	iorwf	dtoa@n+5,w
  8222  0177  044A               	iorwf	dtoa@n+6,w
  8223  0178  044B               	iorwf	dtoa@n+7,w
  8224  0179  1D03               	skipz
  8225  017A  297C               	goto	u3011
  8226  017B  297D               	goto	u3010
  8227  017C                     u3011:
  8228  017C  28F9               	goto	l2858
  8229  017D                     u3010:
  8230  017D                     l2870:
  8231  017D  083E               	movf	dtoa@p+1,w
  8232  017E  3A80               	xorlw	128
  8233  017F  00B8               	movwf	??_dtoa
  8234  0180  3080               	movlw	128
  8235  0181  0238               	subwf	??_dtoa,w
  8236  0182  1D03               	skipz
  8237  0183  2986               	goto	u3025
  8238  0184  3001               	movlw	1
  8239  0185  023D               	subwf	dtoa@p,w
  8240  0186                     u3025:
  8241  0186  1803               	skipnc
  8242  0187  2989               	goto	u3021
  8243  0188  298A               	goto	u3020
  8244  0189                     u3021:
  8245  0189  28F9               	goto	l2858
  8246  018A                     u3020:
  8247  018A                     l2872:
  8248  018A  0020               	movlb	0	; select bank0
  8249  018B  0841               	movf	dtoa@w+1,w
  8250  018C  3A80               	xorlw	128
  8251  018D  00B8               	movwf	??_dtoa
  8252  018E  3080               	movlw	128
  8253  018F  0238               	subwf	??_dtoa,w
  8254  0190  1D03               	skipz
  8255  0191  2994               	goto	u3035
  8256  0192  3001               	movlw	1
  8257  0193  0240               	subwf	dtoa@w,w
  8258  0194                     u3035:
  8259  0194  1C03               	skipc
  8260  0195  2997               	goto	u3031
  8261  0196  2998               	goto	u3030
  8262  0197                     u3031:
  8263  0197  299D               	goto	l2876
  8264  0198                     u3030:
  8265  0198                     l2874:
  8266  0198  0022               	movlb	2	; select bank2
  8267  0199  18D4               	btfsc	_flags^(0+256),1
  8268  019A  299C               	goto	u3041
  8269  019B  299D               	goto	u3040
  8270  019C                     u3041:
  8271  019C  28F9               	goto	l2858
  8272  019D                     u3040:
  8273  019D                     l2876:
  8274                           
  8275                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 321:     if (s ||
      +                           (flags & (1 << 2))) {
  8276  019D  0020               	movlb	0	; select bank0
  8277  019E  0842               	movf	dtoa@s,w
  8278  019F  0443               	iorwf	dtoa@s+1,w
  8279  01A0  1D03               	btfss	3,2
  8280  01A1  29A3               	goto	u3051
  8281  01A2  29A4               	goto	u3050
  8282  01A3                     u3051:
  8283  01A3  29A9               	goto	l2880
  8284  01A4                     u3050:
  8285  01A4                     l2878:
  8286  01A4  0022               	movlb	2	; select bank2
  8287  01A5  1D54               	btfss	_flags^(0+256),2
  8288  01A6  29A8               	goto	u3061
  8289  01A7  29A9               	goto	u3060
  8290  01A8                     u3061:
  8291  01A8  29C6               	goto	l2890
  8292  01A9                     u3060:
  8293  01A9                     l2880:
  8294                           
  8295                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 322:         --i;
  8296  01A9  30FF               	movlw	255
  8297  01AA  0020               	movlb	0	; select bank0
  8298  01AB  07CC               	addwf	dtoa@i,f
  8299  01AC  30FF               	movlw	255
  8300  01AD  3DCD               	addwfc	dtoa@i+1,f
  8301  01AE                     l2882:
  8302                           
  8303                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 323:         dbuf
      +                          [i] = s ? '-' : '+';
  8304  01AE  0842               	movf	dtoa@s,w
  8305  01AF  0443               	iorwf	dtoa@s+1,w
  8306  01B0  1D03               	btfss	3,2
  8307  01B1  29B3               	goto	u3071
  8308  01B2  29B4               	goto	u3070
  8309  01B3                     u3071:
  8310  01B3  29B9               	goto	l2886
  8311  01B4                     u3070:
  8312  01B4                     l2884:
  8313  01B4  302B               	movlw	43
  8314  01B5  00BB               	movwf	_dtoa$1252
  8315  01B6  3000               	movlw	0
  8316  01B7  00BC               	movwf	_dtoa$1252+1
  8317  01B8  29BD               	goto	l2888
  8318  01B9                     l2886:
  8319  01B9  302D               	movlw	45
  8320  01BA  00BB               	movwf	_dtoa$1252
  8321  01BB  3000               	movlw	0
  8322  01BC  00BC               	movwf	_dtoa$1252+1
  8323  01BD                     l2888:
  8324  01BD  083B               	movf	_dtoa$1252,w
  8325  01BE  00B8               	movwf	??_dtoa
  8326  01BF  084C               	movf	dtoa@i,w
  8327  01C0  3EA0               	addlw	(low (_dbuf| (0+256)))& (0+255)
  8328  01C1  0086               	movwf	6
  8329  01C2  3001               	movlw	1	; select bank3/4
  8330  01C3  0087               	movwf	7
  8331  01C4  0838               	movf	??_dtoa,w
  8332  01C5  0081               	movwf	1
  8333  01C6                     l2890:
  8334                           
  8335                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 327:     return p
      +                          ad(fp, &dbuf[i], w);
  8336  01C6  0020               	movlb	0	; select bank0
  8337  01C7  084C               	movf	dtoa@i,w
  8338  01C8  3EA0               	addlw	(low (_dbuf| (0+256)))& (0+255)
  8339  01C9  00B8               	movwf	??_dtoa
  8340  01CA  0838               	movf	??_dtoa,w
  8341  01CB  00A4               	movwf	pad@buf
  8342  01CC  0841               	movf	dtoa@w+1,w
  8343  01CD  00A6               	movwf	pad@p+1
  8344  01CE  0840               	movf	dtoa@w,w
  8345  01CF  00A5               	movwf	pad@p
  8346  01D0  083F               	movf	dtoa@fp,w
  8347  01D1  3193  232C  3180   	fcall	_pad
  8348  01D4  0020               	movlb	0	; select bank0
  8349  01D5  0825               	movf	?_pad+1,w
  8350  01D6  00B1               	movwf	?_dtoa+1
  8351  01D7  0824               	movf	?_pad,w
  8352  01D8  00B0               	movwf	?_dtoa
  8353  01D9                     l1057:
  8354  01D9  0008               	return
  8355  01DA                     __end_of_dtoa:
  8356                           
  8357                           	psect	text19
  8358  132C                     __ptext19:	
  8359 ;; *************** function _pad *****************
  8360 ;; Defined at:
  8361 ;;		line 72 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c"
  8362 ;; Parameters:    Size  Location     Type
  8363 ;;  fp              1    wreg     PTR struct _IO_FILE
  8364 ;;		 -> sprintf@f(5), 
  8365 ;;  buf             1    4[BANK0 ] PTR unsigned char 
  8366 ;;		 -> dbuf(32), 
  8367 ;;  p               2    5[BANK0 ] int 
  8368 ;; Auto vars:     Size  Location     Type
  8369 ;;  fp              1   11[BANK0 ] PTR struct _IO_FILE
  8370 ;;		 -> sprintf@f(5), 
  8371 ;;  w               2    9[BANK0 ] int 
  8372 ;;  i               2    7[BANK0 ] int 
  8373 ;; Return value:  Size  Location     Type
  8374 ;;                  2    4[BANK0 ] int 
  8375 ;; Registers used:
  8376 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  8377 ;; Tracked objects:
  8378 ;;		On entry : 0/0
  8379 ;;		On exit  : 0/0
  8380 ;;		Unchanged: 0/0
  8381 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  8382 ;;      Params:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8383 ;;      Locals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8384 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8385 ;;      Totals:         1       8       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8386 ;;Total ram usage:        9 bytes
  8387 ;; Hardware stack levels used: 1
  8388 ;; Hardware stack levels required when called: 3
  8389 ;; This function calls:
  8390 ;;		_fputc
  8391 ;;		_fputs
  8392 ;;		_strlen
  8393 ;; This function is called by:
  8394 ;;		_dtoa
  8395 ;;		_utoa
  8396 ;; This function uses a non-reentrant model
  8397 ;;
  8398                           
  8399                           
  8400                           ;psect for function _pad
  8401  132C                     _pad:
  8402                           
  8403                           ;incstack = 0
  8404                           ; Regs used in _pad: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  8405                           ;pad@fp stored from wreg
  8406  132C  0020               	movlb	0	; select bank0
  8407  132D  00AB               	movwf	pad@fp
  8408  132E                     l2764:
  8409                           
  8410                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 72: static int pa
      +                          d(FILE *fp, char *buf, int p);C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\commo
      +                          n\doprnt.c: 73: {;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 
      +                          74:     int i, w;;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 
      +                          77:     if (flags & (1 << 0)) {
  8411  132E  0022               	movlb	2	; select bank2
  8412  132F  1C54               	btfss	_flags^(0+256),0
  8413  1330  2B32               	goto	u2841
  8414  1331  2B33               	goto	u2840
  8415  1332                     u2841:
  8416  1332  2B3C               	goto	l2768
  8417  1333                     u2840:
  8418  1333                     l2766:
  8419                           
  8420                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 78:         fputs
      +                          ((const char *)buf, fp);
  8421  1333  0020               	movlb	0	; select bank0
  8422  1334  082B               	movf	pad@fp,w
  8423  1335  00FC               	movwf	??_pad
  8424  1336  087C               	movf	??_pad,w
  8425  1337  00F8               	movwf	fputs@fp
  8426  1338  0824               	movf	pad@buf,w
  8427  1339  3191  2104  3193   	fcall	_fputs
  8428  133C                     l2768:
  8429                           
  8430                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 82:     w = (p < 
      +                          0) ? 0 : p;
  8431  133C  0020               	movlb	0	; select bank0
  8432  133D  1BA6               	btfsc	pad@p+1,7
  8433  133E  2B40               	goto	u2851
  8434  133F  2B41               	goto	u2850
  8435  1340                     u2851:
  8436  1340  2B46               	goto	l2772
  8437  1341                     u2850:
  8438  1341                     l2770:
  8439  1341  0826               	movf	pad@p+1,w
  8440  1342  00AA               	movwf	pad@w+1
  8441  1343  0825               	movf	pad@p,w
  8442  1344  00A9               	movwf	pad@w
  8443  1345  2B48               	goto	l1026
  8444  1346                     l2772:
  8445  1346  01A9               	clrf	pad@w
  8446  1347  01AA               	clrf	pad@w+1
  8447  1348                     l1026:
  8448                           
  8449                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 83:     i = 0;
  8450  1348  01A7               	clrf	pad@i
  8451  1349  01A8               	clrf	pad@i+1
  8452                           
  8453                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 84:     while (i 
      +                          < w) {
  8454  134A  2B5C               	goto	l2778
  8455  134B                     l2774:
  8456                           
  8457                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 85:         fputc
      +                          (' ', fp);
  8458  134B  3020               	movlw	32
  8459  134C  00F0               	movwf	fputc@c
  8460  134D  3000               	movlw	0
  8461  134E  00F1               	movwf	fputc@c+1
  8462  134F  0020               	movlb	0	; select bank0
  8463  1350  082B               	movf	pad@fp,w
  8464  1351  00FC               	movwf	??_pad
  8465  1352  087C               	movf	??_pad,w
  8466  1353  00F2               	movwf	fputc@fp
  8467  1354  3191  21DD  3193   	fcall	_fputc
  8468  1357                     l2776:
  8469                           
  8470                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 86:         ++i;
  8471  1357  3001               	movlw	1
  8472  1358  0020               	movlb	0	; select bank0
  8473  1359  07A7               	addwf	pad@i,f
  8474  135A  3000               	movlw	0
  8475  135B  3DA8               	addwfc	pad@i+1,f
  8476  135C                     l2778:
  8477                           
  8478                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 84:     while (i 
      +                          < w) {
  8479  135C  0828               	movf	pad@i+1,w
  8480  135D  3A80               	xorlw	128
  8481  135E  00FC               	movwf	??_pad
  8482  135F  082A               	movf	pad@w+1,w
  8483  1360  3A80               	xorlw	128
  8484  1361  027C               	subwf	??_pad,w
  8485  1362  1D03               	skipz
  8486  1363  2B66               	goto	u2865
  8487  1364  0829               	movf	pad@w,w
  8488  1365  0227               	subwf	pad@i,w
  8489  1366                     u2865:
  8490  1366  1C03               	skipc
  8491  1367  2B69               	goto	u2861
  8492  1368  2B6A               	goto	u2860
  8493  1369                     u2861:
  8494  1369  2B4B               	goto	l2774
  8495  136A                     u2860:
  8496  136A                     l1029:
  8497                           
  8498                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 90:     if (!(fla
      +                          gs & (1 << 0))) {
  8499  136A  0022               	movlb	2	; select bank2
  8500  136B  1854               	btfsc	_flags^(0+256),0
  8501  136C  2B6E               	goto	u2871
  8502  136D  2B6F               	goto	u2870
  8503  136E                     u2871:
  8504  136E  2B78               	goto	l2782
  8505  136F                     u2870:
  8506  136F                     l2780:
  8507                           
  8508                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 91:         fputs
      +                          ((const char *)buf, fp);
  8509  136F  0020               	movlb	0	; select bank0
  8510  1370  082B               	movf	pad@fp,w
  8511  1371  00FC               	movwf	??_pad
  8512  1372  087C               	movf	??_pad,w
  8513  1373  00F8               	movwf	fputs@fp
  8514  1374  0824               	movf	pad@buf,w
  8515  1375  3191  2104  3193   	fcall	_fputs
  8516  1378                     l2782:
  8517                           
  8518                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 94:     return (i
      +                          nt)(strlen(buf) + (size_t)w);
  8519  1378  0020               	movlb	0	; select bank0
  8520  1379  0824               	movf	pad@buf,w
  8521  137A  3190  2021  3193   	fcall	_strlen
  8522  137D  0020               	movlb	0	; select bank0
  8523  137E  0829               	movf	pad@w,w
  8524  137F  0770               	addwf	?_strlen,w
  8525  1380  00A4               	movwf	?_pad
  8526  1381  082A               	movf	pad@w+1,w
  8527  1382  3D71               	addwfc	?_strlen+1,w
  8528  1383  00A5               	movwf	?_pad+1
  8529  1384                     l1031:
  8530  1384  0008               	return
  8531  1385                     __end_of_pad:
  8532                           
  8533                           	psect	text20
  8534  1021                     __ptext20:	
  8535 ;; *************** function _strlen *****************
  8536 ;; Defined at:
  8537 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\strlen.c"
  8538 ;; Parameters:    Size  Location     Type
  8539 ;;  s               1    wreg     PTR const unsigned char 
  8540 ;;		 -> dbuf(32), 
  8541 ;; Auto vars:     Size  Location     Type
  8542 ;;  s               1    4[COMMON] PTR const unsigned char 
  8543 ;;		 -> dbuf(32), 
  8544 ;;  a               1    3[COMMON] PTR const unsigned char 
  8545 ;;		 -> dbuf(32), 
  8546 ;; Return value:  Size  Location     Type
  8547 ;;                  2    0[COMMON] unsigned int 
  8548 ;; Registers used:
  8549 ;;		wreg, fsr1l, fsr1h, status,2, status,0
  8550 ;; Tracked objects:
  8551 ;;		On entry : 0/0
  8552 ;;		On exit  : 0/0
  8553 ;;		Unchanged: 0/0
  8554 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  8555 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8556 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8557 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8558 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8559 ;;Total ram usage:        5 bytes
  8560 ;; Hardware stack levels used: 1
  8561 ;; This function calls:
  8562 ;;		Nothing
  8563 ;; This function is called by:
  8564 ;;		_pad
  8565 ;; This function uses a non-reentrant model
  8566 ;;
  8567                           
  8568                           
  8569                           ;psect for function _strlen
  8570  1021                     _strlen:
  8571                           
  8572                           ;incstack = 0
  8573                           ; Regs used in _strlen: [wreg+fsr1l+fsr1h+status,2+status,0]
  8574                           ;strlen@s stored from wreg
  8575  1021  00F4               	movwf	strlen@s
  8576  1022                     l2576:
  8577  1022  0874               	movf	strlen@s,w
  8578  1023  00F2               	movwf	??_strlen
  8579  1024  0872               	movf	??_strlen,w
  8580  1025  00F3               	movwf	strlen@a
  8581  1026  282B               	goto	l2580
  8582  1027                     l2578:
  8583  1027  3001               	movlw	1
  8584  1028  00F2               	movwf	??_strlen
  8585  1029  0872               	movf	??_strlen,w
  8586  102A  07F4               	addwf	strlen@s,f
  8587  102B                     l2580:
  8588  102B  0874               	movf	strlen@s,w
  8589  102C  0086               	movwf	6
  8590  102D  3001               	movlw	1	; select bank2/3
  8591  102E  0087               	movwf	7
  8592  102F  0801               	movf	1,w
  8593  1030  1D03               	btfss	3,2
  8594  1031  2833               	goto	u2411
  8595  1032  2834               	goto	u2410
  8596  1033                     u2411:
  8597  1033  2827               	goto	l2578
  8598  1034                     u2410:
  8599  1034                     l2582:
  8600  1034  0873               	movf	strlen@a,w
  8601  1035  0274               	subwf	strlen@s,w
  8602  1036  00F0               	movwf	?_strlen
  8603  1037  01F1               	clrf	?_strlen+1
  8604  1038  1BF0               	btfsc	?_strlen,7
  8605  1039  03F1               	decf	?_strlen+1,f
  8606  103A                     l1127:
  8607  103A  0008               	return
  8608  103B                     __end_of_strlen:
  8609                           
  8610                           	psect	text21
  8611  1104                     __ptext21:	
  8612 ;; *************** function _fputs *****************
  8613 ;; Defined at:
  8614 ;;		line 8 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\nf_fputs.c"
  8615 ;; Parameters:    Size  Location     Type
  8616 ;;  s               1    wreg     PTR const unsigned char 
  8617 ;;		 -> dbuf(32), 
  8618 ;;  fp              1    8[COMMON] PTR struct _IO_FILE
  8619 ;;		 -> sprintf@f(5), 
  8620 ;; Auto vars:     Size  Location     Type
  8621 ;;  s               1    3[BANK0 ] PTR const unsigned char 
  8622 ;;		 -> dbuf(32), 
  8623 ;;  i               2    1[BANK0 ] int 
  8624 ;;  c               1    0[BANK0 ] unsigned char 
  8625 ;; Return value:  Size  Location     Type
  8626 ;;                  2    8[COMMON] int 
  8627 ;; Registers used:
  8628 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  8629 ;; Tracked objects:
  8630 ;;		On entry : 0/0
  8631 ;;		On exit  : 0/0
  8632 ;;		Unchanged: 0/0
  8633 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  8634 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8635 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8636 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8637 ;;      Totals:         4       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8638 ;;Total ram usage:        8 bytes
  8639 ;; Hardware stack levels used: 1
  8640 ;; Hardware stack levels required when called: 2
  8641 ;; This function calls:
  8642 ;;		_fputc
  8643 ;; This function is called by:
  8644 ;;		_pad
  8645 ;; This function uses a non-reentrant model
  8646 ;;
  8647                           
  8648                           
  8649                           ;psect for function _fputs
  8650  1104                     _fputs:
  8651                           
  8652                           ;incstack = 0
  8653                           ; Regs used in _fputs: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  8654                           ;fputs@s stored from wreg
  8655  1104  0020               	movlb	0	; select bank0
  8656  1105  00A3               	movwf	fputs@s
  8657  1106                     l2568:
  8658  1106  01A1               	clrf	fputs@i
  8659  1107  01A2               	clrf	fputs@i+1
  8660  1108  291C               	goto	l2574
  8661  1109                     l2570:
  8662  1109  0820               	movf	fputs@c,w
  8663  110A  00F9               	movwf	??_fputs
  8664  110B  01FA               	clrf	??_fputs+1
  8665  110C  0879               	movf	??_fputs,w
  8666  110D  00F0               	movwf	fputc@c
  8667  110E  087A               	movf	??_fputs+1,w
  8668  110F  00F1               	movwf	fputc@c+1
  8669  1110  0878               	movf	fputs@fp,w
  8670  1111  00FB               	movwf	??_fputs+2
  8671  1112  087B               	movf	??_fputs+2,w
  8672  1113  00F2               	movwf	fputc@fp
  8673  1114  3191  21DD  3191   	fcall	_fputc
  8674  1117                     l2572:
  8675  1117  3001               	movlw	1
  8676  1118  0020               	movlb	0	; select bank0
  8677  1119  07A1               	addwf	fputs@i,f
  8678  111A  3000               	movlw	0
  8679  111B  3DA2               	addwfc	fputs@i+1,f
  8680  111C                     l2574:
  8681  111C  0821               	movf	fputs@i,w
  8682  111D  0723               	addwf	fputs@s,w
  8683  111E  00F9               	movwf	??_fputs
  8684  111F  0879               	movf	??_fputs,w
  8685  1120  0086               	movwf	6
  8686  1121  3001               	movlw	1	; select bank2/3
  8687  1122  0087               	movwf	7
  8688  1123  0801               	movf	1,w
  8689  1124  00FA               	movwf	??_fputs+1
  8690  1125  087A               	movf	??_fputs+1,w
  8691  1126  00A0               	movwf	fputs@c
  8692  1127  0820               	movf	fputs@c,w
  8693  1128  1D03               	btfss	3,2
  8694  1129  292B               	goto	u2401
  8695  112A  292C               	goto	u2400
  8696  112B                     u2401:
  8697  112B  2909               	goto	l2570
  8698  112C                     u2400:
  8699  112C                     l1118:
  8700  112C  0008               	return
  8701  112D                     __end_of_fputs:
  8702                           
  8703                           	psect	text22
  8704  11DD                     __ptext22:	
  8705 ;; *************** function _fputc *****************
  8706 ;; Defined at:
  8707 ;;		line 8 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\nf_fputc.c"
  8708 ;; Parameters:    Size  Location     Type
  8709 ;;  c               2    0[COMMON] int 
  8710 ;;  fp              1    2[COMMON] PTR struct _IO_FILE
  8711 ;;		 -> sprintf@f(5), 
  8712 ;; Auto vars:     Size  Location     Type
  8713 ;;		None
  8714 ;; Return value:  Size  Location     Type
  8715 ;;                  2    0[COMMON] int 
  8716 ;; Registers used:
  8717 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  8718 ;; Tracked objects:
  8719 ;;		On entry : 0/0
  8720 ;;		On exit  : 0/0
  8721 ;;		Unchanged: 0/0
  8722 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  8723 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8724 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8725 ;;      Temps:          5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8726 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8727 ;;Total ram usage:        8 bytes
  8728 ;; Hardware stack levels used: 1
  8729 ;; Hardware stack levels required when called: 1
  8730 ;; This function calls:
  8731 ;;		_putch
  8732 ;; This function is called by:
  8733 ;;		_pad
  8734 ;;		_vfpfcnvrt
  8735 ;;		_fputs
  8736 ;; This function uses a non-reentrant model
  8737 ;;
  8738                           
  8739                           
  8740                           ;psect for function _fputc
  8741  11DD                     _fputc:
  8742  11DD                     l2546:	
  8743                           ;incstack = 0
  8744                           ; Regs used in _fputc: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  8745                           
  8746  11DD  0872               	movf	fputc@fp,w
  8747  11DE  1903               	btfsc	3,2
  8748  11DF  29E1               	goto	u2341
  8749  11E0  29E2               	goto	u2340
  8750  11E1                     u2341:
  8751  11E1  29E7               	goto	l2550
  8752  11E2                     u2340:
  8753  11E2                     l2548:
  8754  11E2  0872               	movf	fputc@fp,w
  8755  11E3  1D03               	btfss	3,2
  8756  11E4  29E6               	goto	u2351
  8757  11E5  29E7               	goto	u2350
  8758  11E6                     u2351:
  8759  11E6  29EC               	goto	l2552
  8760  11E7                     u2350:
  8761  11E7                     l2550:
  8762  11E7  0870               	movf	fputc@c,w
  8763  11E8  3188  2001  3191   	fcall	_putch
  8764  11EB  2A2B               	goto	l1110
  8765  11EC                     l2552:
  8766  11EC  0872               	movf	fputc@fp,w
  8767  11ED  3E03               	addlw	3
  8768  11EE  0086               	movwf	6
  8769  11EF  0187               	clrf	7
  8770  11F0  0016               	moviw fsr1++
  8771  11F1  0401               	iorwf	1,w
  8772  11F2  1903               	btfsc	3,2
  8773  11F3  29F5               	goto	u2361
  8774  11F4  29F6               	goto	u2360
  8775  11F5                     u2361:
  8776  11F5  2A13               	goto	l2556
  8777  11F6                     u2360:
  8778  11F6                     l2554:
  8779  11F6  0872               	movf	fputc@fp,w
  8780  11F7  3E03               	addlw	3
  8781  11F8  0086               	movwf	6
  8782  11F9  0187               	clrf	7
  8783  11FA  3F40               	moviw [0]fsr1
  8784  11FB  00F3               	movwf	??_fputc
  8785  11FC  3F41               	moviw [1]fsr1
  8786  11FD  00F4               	movwf	??_fputc+1
  8787  11FE  0A72               	incf	fputc@fp,w
  8788  11FF  0086               	movwf	6
  8789  1200  0187               	clrf	7
  8790  1201  3F40               	moviw [0]fsr1
  8791  1202  00F5               	movwf	??_fputc+2
  8792  1203  3F41               	moviw [1]fsr1
  8793  1204  00F6               	movwf	??_fputc+3
  8794  1205  0876               	movf	??_fputc+3,w
  8795  1206  3A80               	xorlw	128
  8796  1207  00F7               	movwf	??_fputc+4
  8797  1208  0874               	movf	??_fputc+1,w
  8798  1209  3A80               	xorlw	128
  8799  120A  0277               	subwf	??_fputc+4,w
  8800  120B  1D03               	skipz
  8801  120C  2A0F               	goto	u2375
  8802  120D  0873               	movf	??_fputc,w
  8803  120E  0275               	subwf	??_fputc+2,w
  8804  120F                     u2375:
  8805  120F  1803               	skipnc
  8806  1210  2A12               	goto	u2371
  8807  1211  2A13               	goto	u2370
  8808  1212                     u2371:
  8809  1212  2A2B               	goto	l1110
  8810  1213                     u2370:
  8811  1213                     l2556:
  8812  1213  0870               	movf	fputc@c,w
  8813  1214  00F3               	movwf	??_fputc
  8814  1215  0872               	movf	fputc@fp,w
  8815  1216  0086               	movwf	6
  8816  1217  0187               	clrf	7
  8817  1218  0A72               	incf	fputc@fp,w
  8818  1219  0084               	movwf	4
  8819  121A  0185               	clrf	5
  8820  121B  0800               	movf	0,w
  8821  121C  0701               	addwf	1,w
  8822  121D  00F4               	movwf	??_fputc+1
  8823  121E  0874               	movf	??_fputc+1,w
  8824  121F  0086               	movwf	6
  8825  1220  0187               	clrf	7
  8826  1221  0873               	movf	??_fputc,w
  8827  1222  0081               	movwf	1
  8828  1223                     l2558:
  8829  1223  0A72               	incf	fputc@fp,w
  8830  1224  0086               	movwf	6
  8831  1225  0187               	clrf	7
  8832  1226  3001               	movlw	1
  8833  1227  0781               	addwf	1,f
  8834  1228  3141               	addfsr 1,1
  8835  1229  1803               	skipnc
  8836  122A  0A81               	incf	1,f
  8837  122B                     l1110:
  8838  122B  0008               	return
  8839  122C                     __end_of_fputc:
  8840                           
  8841                           	psect	text23
  8842  0801                     __ptext23:	
  8843 ;; *************** function _putch *****************
  8844 ;; Defined at:
  8845 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\putch.c"
  8846 ;; Parameters:    Size  Location     Type
  8847 ;;  c               1    wreg     unsigned char 
  8848 ;; Auto vars:     Size  Location     Type
  8849 ;;  c               1    0[COMMON] unsigned char 
  8850 ;; Return value:  Size  Location     Type
  8851 ;;                  1    wreg      void 
  8852 ;; Registers used:
  8853 ;;		wreg
  8854 ;; Tracked objects:
  8855 ;;		On entry : 0/0
  8856 ;;		On exit  : 0/0
  8857 ;;		Unchanged: 0/0
  8858 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  8859 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8860 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8861 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8862 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8863 ;;Total ram usage:        0 bytes
  8864 ;; Hardware stack levels used: 1
  8865 ;; This function calls:
  8866 ;;		Nothing
  8867 ;; This function is called by:
  8868 ;;		_fputc
  8869 ;; This function uses a non-reentrant model
  8870 ;;
  8871                           
  8872                           
  8873                           ;psect for function _putch
  8874  0801                     _putch:
  8875  0801                     l1121:	
  8876                           ;incstack = 0
  8877                           ; Regs used in _putch: [wreg]
  8878                           
  8879  0801  0008               	return
  8880  0802                     __end_of_putch:
  8881                           
  8882                           	psect	text24
  8883  1007                     __ptext24:	
  8884 ;; *************** function _abs *****************
  8885 ;; Defined at:
  8886 ;;		line 1 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\abs.c"
  8887 ;; Parameters:    Size  Location     Type
  8888 ;;  a               2    3[COMMON] int 
  8889 ;; Auto vars:     Size  Location     Type
  8890 ;;		None
  8891 ;; Return value:  Size  Location     Type
  8892 ;;                  2    3[COMMON] int 
  8893 ;; Registers used:
  8894 ;;		wreg, status,2, status,0
  8895 ;; Tracked objects:
  8896 ;;		On entry : 0/0
  8897 ;;		On exit  : 0/0
  8898 ;;		Unchanged: 0/0
  8899 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  8900 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8901 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8902 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8903 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8904 ;;Total ram usage:        4 bytes
  8905 ;; Hardware stack levels used: 1
  8906 ;; This function calls:
  8907 ;;		Nothing
  8908 ;; This function is called by:
  8909 ;;		_dtoa
  8910 ;; This function uses a non-reentrant model
  8911 ;;
  8912                           
  8913                           
  8914                           ;psect for function _abs
  8915  1007                     _abs:
  8916  1007                     l2786:	
  8917                           ;incstack = 0
  8918                           ; Regs used in _abs: [wreg+status,2+status,0]
  8919                           
  8920  1007  0874               	movf	abs@a+1,w
  8921  1008  3A80               	xorlw	128
  8922  1009  00F5               	movwf	??_abs
  8923  100A  3080               	movlw	128
  8924  100B  0275               	subwf	??_abs,w
  8925  100C  1D03               	skipz
  8926  100D  2810               	goto	u2885
  8927  100E  3001               	movlw	1
  8928  100F  0273               	subwf	abs@a,w
  8929  1010                     u2885:
  8930  1010  1803               	skipnc
  8931  1011  2813               	goto	u2881
  8932  1012  2814               	goto	u2880
  8933  1013                     u2881:
  8934  1013  2820               	goto	l1095
  8935  1014                     u2880:
  8936  1014                     l2788:
  8937  1014  0973               	comf	abs@a,w
  8938  1015  00F5               	movwf	??_abs
  8939  1016  0974               	comf	abs@a+1,w
  8940  1017  00F6               	movwf	??_abs+1
  8941  1018  0AF5               	incf	??_abs,f
  8942  1019  1903               	skipnz
  8943  101A  0AF6               	incf	??_abs+1,f
  8944  101B  0875               	movf	??_abs,w
  8945  101C  00F3               	movwf	?_abs
  8946  101D  0876               	movf	??_abs+1,w
  8947  101E  00F4               	movwf	?_abs+1
  8948  101F  2820               	goto	l1098
  8949  1020                     l1095:
  8950  1020                     l1098:
  8951  1020  0008               	return
  8952  1021                     __end_of_abs:
  8953                           
  8954                           	psect	text25
  8955  0D28                     __ptext25:	
  8956 ;; *************** function ___aomod *****************
  8957 ;; Defined at:
  8958 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\aomod.c"
  8959 ;; Parameters:    Size  Location     Type
  8960 ;;  divisor         8    0[BANK0 ] long long 
  8961 ;;  dividend        8    8[BANK0 ] long long 
  8962 ;; Auto vars:     Size  Location     Type
  8963 ;;  sign            1    2[COMMON] unsigned char 
  8964 ;;  counter         1    1[COMMON] unsigned char 
  8965 ;; Return value:  Size  Location     Type
  8966 ;;                  8    0[BANK0 ] long long 
  8967 ;; Registers used:
  8968 ;;		wreg, fsr1l, fsr1h, status,2, status,0
  8969 ;; Tracked objects:
  8970 ;;		On entry : 0/0
  8971 ;;		On exit  : 0/0
  8972 ;;		Unchanged: 0/0
  8973 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  8974 ;;      Params:         0      16       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8975 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8976 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8977 ;;      Totals:         3      16       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8978 ;;Total ram usage:       19 bytes
  8979 ;; Hardware stack levels used: 1
  8980 ;; This function calls:
  8981 ;;		Nothing
  8982 ;; This function is called by:
  8983 ;;		_dtoa
  8984 ;; This function uses a non-reentrant model
  8985 ;;
  8986                           
  8987                           
  8988                           ;psect for function ___aomod
  8989  0D28                     ___aomod:
  8990  0D28                     l2696:	
  8991                           ;incstack = 0
  8992                           ; Regs used in ___aomod: [wreg+fsr1l+fsr1h+status,2+status,0]
  8993                           
  8994  0D28  01F2               	clrf	___aomod@sign
  8995  0D29                     l2698:
  8996  0D29  3028               	movlw	low ___aomod@dividend
  8997  0D2A  0086               	movwf	6
  8998  0D2B  3000               	movlw	high ___aomod@dividend
  8999  0D2C  0087               	movwf	7
  9000  0D2D  3F47               	moviw [7]fsr1
  9001  0D2E  00F0               	movwf	??___aomod
  9002  0D2F  1FF0               	btfss	??___aomod,7
  9003  0D30  2D32               	goto	u2651
  9004  0D31  2D33               	goto	u2650
  9005  0D32                     u2651:
  9006  0D32  2D54               	goto	l2702
  9007  0D33                     u2650:
  9008  0D33                     l2700:
  9009  0D33  0020               	movlb	0	; select bank0
  9010  0D34  09A8               	comf	___aomod@dividend,f
  9011  0D35  09A9               	comf	___aomod@dividend+1,f
  9012  0D36  09AA               	comf	___aomod@dividend+2,f
  9013  0D37  09AB               	comf	___aomod@dividend+3,f
  9014  0D38  09AC               	comf	___aomod@dividend+4,f
  9015  0D39  09AD               	comf	___aomod@dividend+5,f
  9016  0D3A  09AE               	comf	___aomod@dividend+6,f
  9017  0D3B  09AF               	comf	___aomod@dividend+7,f
  9018  0D3C  0AA8               	incf	___aomod@dividend,f
  9019  0D3D  1D03               	skipz
  9020  0D3E  2D52               	goto	u266lld
  9021  0D3F  0AA9               	incf	___aomod@dividend+1,f
  9022  0D40  1D03               	skipz
  9023  0D41  2D52               	goto	u266lld
  9024  0D42  0AAA               	incf	___aomod@dividend+2,f
  9025  0D43  1D03               	skipz
  9026  0D44  2D52               	goto	u266lld
  9027  0D45  0AAB               	incf	___aomod@dividend+3,f
  9028  0D46  1D03               	skipz
  9029  0D47  2D52               	goto	u266lld
  9030  0D48  0AAC               	incf	___aomod@dividend+4,f
  9031  0D49  1D03               	skipz
  9032  0D4A  2D52               	goto	u266lld
  9033  0D4B  0AAD               	incf	___aomod@dividend+5,f
  9034  0D4C  1D03               	skipz
  9035  0D4D  2D52               	goto	u266lld
  9036  0D4E  0AAE               	incf	___aomod@dividend+6,f
  9037  0D4F  1D03               	skipz
  9038  0D50  2D52               	goto	u266lld
  9039  0D51  0AAF               	incf	___aomod@dividend+7,f
  9040  0D52                     u266lld:
  9041  0D52  01F2               	clrf	___aomod@sign
  9042  0D53  0AF2               	incf	___aomod@sign,f
  9043  0D54                     l2702:
  9044  0D54  3020               	movlw	low ___aomod@divisor
  9045  0D55  0086               	movwf	6
  9046  0D56  3000               	movlw	high ___aomod@divisor
  9047  0D57  0087               	movwf	7
  9048  0D58  3F47               	moviw [7]fsr1
  9049  0D59  00F0               	movwf	??___aomod
  9050  0D5A  1FF0               	btfss	??___aomod,7
  9051  0D5B  2D5D               	goto	u2671
  9052  0D5C  2D5E               	goto	u2670
  9053  0D5D                     u2671:
  9054  0D5D  2D7D               	goto	l2706
  9055  0D5E                     u2670:
  9056  0D5E                     l2704:
  9057  0D5E  0020               	movlb	0	; select bank0
  9058  0D5F  09A0               	comf	___aomod@divisor,f
  9059  0D60  09A1               	comf	___aomod@divisor+1,f
  9060  0D61  09A2               	comf	___aomod@divisor+2,f
  9061  0D62  09A3               	comf	___aomod@divisor+3,f
  9062  0D63  09A4               	comf	___aomod@divisor+4,f
  9063  0D64  09A5               	comf	___aomod@divisor+5,f
  9064  0D65  09A6               	comf	___aomod@divisor+6,f
  9065  0D66  09A7               	comf	___aomod@divisor+7,f
  9066  0D67  0AA0               	incf	___aomod@divisor,f
  9067  0D68  1D03               	skipz
  9068  0D69  2D7D               	goto	u268lld
  9069  0D6A  0AA1               	incf	___aomod@divisor+1,f
  9070  0D6B  1D03               	skipz
  9071  0D6C  2D7D               	goto	u268lld
  9072  0D6D  0AA2               	incf	___aomod@divisor+2,f
  9073  0D6E  1D03               	skipz
  9074  0D6F  2D7D               	goto	u268lld
  9075  0D70  0AA3               	incf	___aomod@divisor+3,f
  9076  0D71  1D03               	skipz
  9077  0D72  2D7D               	goto	u268lld
  9078  0D73  0AA4               	incf	___aomod@divisor+4,f
  9079  0D74  1D03               	skipz
  9080  0D75  2D7D               	goto	u268lld
  9081  0D76  0AA5               	incf	___aomod@divisor+5,f
  9082  0D77  1D03               	skipz
  9083  0D78  2D7D               	goto	u268lld
  9084  0D79  0AA6               	incf	___aomod@divisor+6,f
  9085  0D7A  1D03               	skipz
  9086  0D7B  2D7D               	goto	u268lld
  9087  0D7C  0AA7               	incf	___aomod@divisor+7,f
  9088  0D7D                     u268lld:
  9089  0D7D                     l2706:
  9090  0D7D  0020               	movlb	0	; select bank0
  9091  0D7E  0820               	movf	___aomod@divisor,w
  9092  0D7F  0421               	iorwf	___aomod@divisor+1,w
  9093  0D80  0422               	iorwf	___aomod@divisor+2,w
  9094  0D81  0423               	iorwf	___aomod@divisor+3,w
  9095  0D82  0424               	iorwf	___aomod@divisor+4,w
  9096  0D83  0425               	iorwf	___aomod@divisor+5,w
  9097  0D84  0426               	iorwf	___aomod@divisor+6,w
  9098  0D85  0427               	iorwf	___aomod@divisor+7,w
  9099  0D86  1903               	skipnz
  9100  0D87  2D89               	goto	u2691
  9101  0D88  2D8A               	goto	u2690
  9102  0D89                     u2691:
  9103  0D89  2DDD               	goto	l2722
  9104  0D8A                     u2690:
  9105  0D8A                     l2708:
  9106  0D8A  01F1               	clrf	___aomod@counter
  9107  0D8B  0AF1               	incf	___aomod@counter,f
  9108  0D8C  2D99               	goto	l2714
  9109  0D8D                     l2710:
  9110  0D8D  35A0               	lslf	___aomod@divisor,f
  9111  0D8E  0DA1               	rlf	___aomod@divisor+1,f
  9112  0D8F  0DA2               	rlf	___aomod@divisor+2,f
  9113  0D90  0DA3               	rlf	___aomod@divisor+3,f
  9114  0D91  0DA4               	rlf	___aomod@divisor+4,f
  9115  0D92  0DA5               	rlf	___aomod@divisor+5,f
  9116  0D93  0DA6               	rlf	___aomod@divisor+6,f
  9117  0D94  0DA7               	rlf	___aomod@divisor+7,f
  9118  0D95                     l2712:
  9119  0D95  3001               	movlw	1
  9120  0D96  00F0               	movwf	??___aomod
  9121  0D97  0870               	movf	??___aomod,w
  9122  0D98  07F1               	addwf	___aomod@counter,f
  9123  0D99                     l2714:
  9124  0D99  1FA7               	btfss	___aomod@divisor+7,7
  9125  0D9A  2D9C               	goto	u2701
  9126  0D9B  2D9D               	goto	u2700
  9127  0D9C                     u2701:
  9128  0D9C  2D8D               	goto	l2710
  9129  0D9D                     u2700:
  9130  0D9D                     l2716:
  9131  0D9D  0827               	movf	___aomod@divisor+7,w
  9132  0D9E  022F               	subwf	___aomod@dividend+7,w
  9133  0D9F  1D03               	skipz
  9134  0DA0  2DBB               	goto	u2715
  9135  0DA1  0826               	movf	___aomod@divisor+6,w
  9136  0DA2  022E               	subwf	___aomod@dividend+6,w
  9137  0DA3  1D03               	skipz
  9138  0DA4  2DBB               	goto	u2715
  9139  0DA5  0825               	movf	___aomod@divisor+5,w
  9140  0DA6  022D               	subwf	___aomod@dividend+5,w
  9141  0DA7  1D03               	skipz
  9142  0DA8  2DBB               	goto	u2715
  9143  0DA9  0824               	movf	___aomod@divisor+4,w
  9144  0DAA  022C               	subwf	___aomod@dividend+4,w
  9145  0DAB  1D03               	skipz
  9146  0DAC  2DBB               	goto	u2715
  9147  0DAD  0823               	movf	___aomod@divisor+3,w
  9148  0DAE  022B               	subwf	___aomod@dividend+3,w
  9149  0DAF  1D03               	skipz
  9150  0DB0  2DBB               	goto	u2715
  9151  0DB1  0822               	movf	___aomod@divisor+2,w
  9152  0DB2  022A               	subwf	___aomod@dividend+2,w
  9153  0DB3  1D03               	skipz
  9154  0DB4  2DBB               	goto	u2715
  9155  0DB5  0821               	movf	___aomod@divisor+1,w
  9156  0DB6  0229               	subwf	___aomod@dividend+1,w
  9157  0DB7  1D03               	skipz
  9158  0DB8  2DBB               	goto	u2715
  9159  0DB9  0820               	movf	___aomod@divisor,w
  9160  0DBA  0228               	subwf	___aomod@dividend,w
  9161  0DBB                     u2715:
  9162  0DBB  1C03               	skipc
  9163  0DBC  2DBE               	goto	u2711
  9164  0DBD  2DBF               	goto	u2710
  9165  0DBE                     u2711:
  9166  0DBE  2DCF               	goto	l2720
  9167  0DBF                     u2710:
  9168  0DBF                     l2718:
  9169  0DBF  0820               	movf	___aomod@divisor,w
  9170  0DC0  02A8               	subwf	___aomod@dividend,f
  9171  0DC1  0821               	movf	___aomod@divisor+1,w
  9172  0DC2  3BA9               	subwfb	___aomod@dividend+1,f
  9173  0DC3  0822               	movf	___aomod@divisor+2,w
  9174  0DC4  3BAA               	subwfb	___aomod@dividend+2,f
  9175  0DC5  0823               	movf	___aomod@divisor+3,w
  9176  0DC6  3BAB               	subwfb	___aomod@dividend+3,f
  9177  0DC7  0824               	movf	___aomod@divisor+4,w
  9178  0DC8  3BAC               	subwfb	___aomod@dividend+4,f
  9179  0DC9  0825               	movf	___aomod@divisor+5,w
  9180  0DCA  3BAD               	subwfb	___aomod@dividend+5,f
  9181  0DCB  0826               	movf	___aomod@divisor+6,w
  9182  0DCC  3BAE               	subwfb	___aomod@dividend+6,f
  9183  0DCD  0827               	movf	___aomod@divisor+7,w
  9184  0DCE  3BAF               	subwfb	___aomod@dividend+7,f
  9185  0DCF                     l2720:
  9186  0DCF  36A7               	lsrf	___aomod@divisor+7,f
  9187  0DD0  0CA6               	rrf	___aomod@divisor+6,f
  9188  0DD1  0CA5               	rrf	___aomod@divisor+5,f
  9189  0DD2  0CA4               	rrf	___aomod@divisor+4,f
  9190  0DD3  0CA3               	rrf	___aomod@divisor+3,f
  9191  0DD4  0CA2               	rrf	___aomod@divisor+2,f
  9192  0DD5  0CA1               	rrf	___aomod@divisor+1,f
  9193  0DD6  0CA0               	rrf	___aomod@divisor,f
  9194  0DD7  3001               	movlw	1
  9195  0DD8  02F1               	subwf	___aomod@counter,f
  9196  0DD9  1D03               	btfss	3,2
  9197  0DDA  2DDC               	goto	u2721
  9198  0DDB  2DDD               	goto	u2720
  9199  0DDC                     u2721:
  9200  0DDC  2D9D               	goto	l2716
  9201  0DDD                     u2720:
  9202  0DDD                     l2722:
  9203  0DDD  0872               	movf	___aomod@sign,w
  9204  0DDE  1903               	btfsc	3,2
  9205  0DDF  2DE1               	goto	u2731
  9206  0DE0  2DE2               	goto	u2730
  9207  0DE1                     u2731:
  9208  0DE1  2E00               	goto	l647
  9209  0DE2                     u2730:
  9210  0DE2                     l2724:
  9211  0DE2  09A8               	comf	___aomod@dividend,f
  9212  0DE3  09A9               	comf	___aomod@dividend+1,f
  9213  0DE4  09AA               	comf	___aomod@dividend+2,f
  9214  0DE5  09AB               	comf	___aomod@dividend+3,f
  9215  0DE6  09AC               	comf	___aomod@dividend+4,f
  9216  0DE7  09AD               	comf	___aomod@dividend+5,f
  9217  0DE8  09AE               	comf	___aomod@dividend+6,f
  9218  0DE9  09AF               	comf	___aomod@dividend+7,f
  9219  0DEA  0AA8               	incf	___aomod@dividend,f
  9220  0DEB  1D03               	skipz
  9221  0DEC  2E00               	goto	u274lld
  9222  0DED  0AA9               	incf	___aomod@dividend+1,f
  9223  0DEE  1D03               	skipz
  9224  0DEF  2E00               	goto	u274lld
  9225  0DF0  0AAA               	incf	___aomod@dividend+2,f
  9226  0DF1  1D03               	skipz
  9227  0DF2  2E00               	goto	u274lld
  9228  0DF3  0AAB               	incf	___aomod@dividend+3,f
  9229  0DF4  1D03               	skipz
  9230  0DF5  2E00               	goto	u274lld
  9231  0DF6  0AAC               	incf	___aomod@dividend+4,f
  9232  0DF7  1D03               	skipz
  9233  0DF8  2E00               	goto	u274lld
  9234  0DF9  0AAD               	incf	___aomod@dividend+5,f
  9235  0DFA  1D03               	skipz
  9236  0DFB  2E00               	goto	u274lld
  9237  0DFC  0AAE               	incf	___aomod@dividend+6,f
  9238  0DFD  1D03               	skipz
  9239  0DFE  2E00               	goto	u274lld
  9240  0DFF  0AAF               	incf	___aomod@dividend+7,f
  9241  0E00                     u274lld:
  9242  0E00                     l647:
  9243  0E00  0020               	movlb	0	; select bank0
  9244  0E01  0828               	movf	___aomod@dividend,w
  9245  0E02  00A0               	movwf	?___aomod
  9246  0E03  0829               	movf	___aomod@dividend+1,w
  9247  0E04  00A1               	movwf	?___aomod+1
  9248  0E05  082A               	movf	___aomod@dividend+2,w
  9249  0E06  00A2               	movwf	?___aomod+2
  9250  0E07  082B               	movf	___aomod@dividend+3,w
  9251  0E08  00A3               	movwf	?___aomod+3
  9252  0E09  082C               	movf	___aomod@dividend+4,w
  9253  0E0A  00A4               	movwf	?___aomod+4
  9254  0E0B  082D               	movf	___aomod@dividend+5,w
  9255  0E0C  00A5               	movwf	?___aomod+5
  9256  0E0D  082E               	movf	___aomod@dividend+6,w
  9257  0E0E  00A6               	movwf	?___aomod+6
  9258  0E0F  082F               	movf	___aomod@dividend+7,w
  9259  0E10  00A7               	movwf	?___aomod+7
  9260  0E11                     l648:
  9261  0E11  0008               	return
  9262  0E12                     __end_of___aomod:
  9263                           
  9264                           	psect	text26
  9265  0EFF                     __ptext26:	
  9266 ;; *************** function ___aodiv *****************
  9267 ;; Defined at:
  9268 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\aodiv.c"
  9269 ;; Parameters:    Size  Location     Type
  9270 ;;  divisor         8    0[BANK0 ] long long 
  9271 ;;  dividend        8    8[BANK0 ] long long 
  9272 ;; Auto vars:     Size  Location     Type
  9273 ;;  quotient        8    3[COMMON] long long 
  9274 ;;  sign            1    2[COMMON] unsigned char 
  9275 ;;  counter         1    1[COMMON] unsigned char 
  9276 ;; Return value:  Size  Location     Type
  9277 ;;                  8    0[BANK0 ] long long 
  9278 ;; Registers used:
  9279 ;;		wreg, fsr1l, fsr1h, status,2, status,0
  9280 ;; Tracked objects:
  9281 ;;		On entry : 0/0
  9282 ;;		On exit  : 0/0
  9283 ;;		Unchanged: 0/0
  9284 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  9285 ;;      Params:         0      16       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9286 ;;      Locals:        10       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9287 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9288 ;;      Totals:        11      16       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9289 ;;Total ram usage:       27 bytes
  9290 ;; Hardware stack levels used: 1
  9291 ;; This function calls:
  9292 ;;		Nothing
  9293 ;; This function is called by:
  9294 ;;		_dtoa
  9295 ;; This function uses a non-reentrant model
  9296 ;;
  9297                           
  9298                           
  9299                           ;psect for function ___aodiv
  9300  0EFF                     ___aodiv:
  9301  0EFF                     l2658:	
  9302                           ;incstack = 0
  9303                           ; Regs used in ___aodiv: [wreg+fsr1l+fsr1h+status,2+status,0]
  9304                           
  9305  0EFF  01F2               	clrf	___aodiv@sign
  9306  0F00                     l2660:
  9307  0F00  3020               	movlw	low ___aodiv@divisor
  9308  0F01  0086               	movwf	6
  9309  0F02  3000               	movlw	high ___aodiv@divisor
  9310  0F03  0087               	movwf	7
  9311  0F04  3F47               	moviw [7]fsr1
  9312  0F05  00F0               	movwf	??___aodiv
  9313  0F06  1FF0               	btfss	??___aodiv,7
  9314  0F07  2F09               	goto	u2541
  9315  0F08  2F0A               	goto	u2540
  9316  0F09                     u2541:
  9317  0F09  2F2B               	goto	l2664
  9318  0F0A                     u2540:
  9319  0F0A                     l2662:
  9320  0F0A  0020               	movlb	0	; select bank0
  9321  0F0B  09A0               	comf	___aodiv@divisor,f
  9322  0F0C  09A1               	comf	___aodiv@divisor+1,f
  9323  0F0D  09A2               	comf	___aodiv@divisor+2,f
  9324  0F0E  09A3               	comf	___aodiv@divisor+3,f
  9325  0F0F  09A4               	comf	___aodiv@divisor+4,f
  9326  0F10  09A5               	comf	___aodiv@divisor+5,f
  9327  0F11  09A6               	comf	___aodiv@divisor+6,f
  9328  0F12  09A7               	comf	___aodiv@divisor+7,f
  9329  0F13  0AA0               	incf	___aodiv@divisor,f
  9330  0F14  1D03               	skipz
  9331  0F15  2F29               	goto	u255lld
  9332  0F16  0AA1               	incf	___aodiv@divisor+1,f
  9333  0F17  1D03               	skipz
  9334  0F18  2F29               	goto	u255lld
  9335  0F19  0AA2               	incf	___aodiv@divisor+2,f
  9336  0F1A  1D03               	skipz
  9337  0F1B  2F29               	goto	u255lld
  9338  0F1C  0AA3               	incf	___aodiv@divisor+3,f
  9339  0F1D  1D03               	skipz
  9340  0F1E  2F29               	goto	u255lld
  9341  0F1F  0AA4               	incf	___aodiv@divisor+4,f
  9342  0F20  1D03               	skipz
  9343  0F21  2F29               	goto	u255lld
  9344  0F22  0AA5               	incf	___aodiv@divisor+5,f
  9345  0F23  1D03               	skipz
  9346  0F24  2F29               	goto	u255lld
  9347  0F25  0AA6               	incf	___aodiv@divisor+6,f
  9348  0F26  1D03               	skipz
  9349  0F27  2F29               	goto	u255lld
  9350  0F28  0AA7               	incf	___aodiv@divisor+7,f
  9351  0F29                     u255lld:
  9352  0F29  01F2               	clrf	___aodiv@sign
  9353  0F2A  0AF2               	incf	___aodiv@sign,f
  9354  0F2B                     l2664:
  9355  0F2B  3028               	movlw	low ___aodiv@dividend
  9356  0F2C  0086               	movwf	6
  9357  0F2D  3000               	movlw	high ___aodiv@dividend
  9358  0F2E  0087               	movwf	7
  9359  0F2F  3F47               	moviw [7]fsr1
  9360  0F30  00F0               	movwf	??___aodiv
  9361  0F31  1FF0               	btfss	??___aodiv,7
  9362  0F32  2F34               	goto	u2561
  9363  0F33  2F35               	goto	u2560
  9364  0F34                     u2561:
  9365  0F34  2F58               	goto	l2670
  9366  0F35                     u2560:
  9367  0F35                     l2666:
  9368  0F35  0020               	movlb	0	; select bank0
  9369  0F36  09A8               	comf	___aodiv@dividend,f
  9370  0F37  09A9               	comf	___aodiv@dividend+1,f
  9371  0F38  09AA               	comf	___aodiv@dividend+2,f
  9372  0F39  09AB               	comf	___aodiv@dividend+3,f
  9373  0F3A  09AC               	comf	___aodiv@dividend+4,f
  9374  0F3B  09AD               	comf	___aodiv@dividend+5,f
  9375  0F3C  09AE               	comf	___aodiv@dividend+6,f
  9376  0F3D  09AF               	comf	___aodiv@dividend+7,f
  9377  0F3E  0AA8               	incf	___aodiv@dividend,f
  9378  0F3F  1D03               	skipz
  9379  0F40  2F54               	goto	u257lld
  9380  0F41  0AA9               	incf	___aodiv@dividend+1,f
  9381  0F42  1D03               	skipz
  9382  0F43  2F54               	goto	u257lld
  9383  0F44  0AAA               	incf	___aodiv@dividend+2,f
  9384  0F45  1D03               	skipz
  9385  0F46  2F54               	goto	u257lld
  9386  0F47  0AAB               	incf	___aodiv@dividend+3,f
  9387  0F48  1D03               	skipz
  9388  0F49  2F54               	goto	u257lld
  9389  0F4A  0AAC               	incf	___aodiv@dividend+4,f
  9390  0F4B  1D03               	skipz
  9391  0F4C  2F54               	goto	u257lld
  9392  0F4D  0AAD               	incf	___aodiv@dividend+5,f
  9393  0F4E  1D03               	skipz
  9394  0F4F  2F54               	goto	u257lld
  9395  0F50  0AAE               	incf	___aodiv@dividend+6,f
  9396  0F51  1D03               	skipz
  9397  0F52  2F54               	goto	u257lld
  9398  0F53  0AAF               	incf	___aodiv@dividend+7,f
  9399  0F54                     u257lld:
  9400  0F54                     l2668:
  9401  0F54  3001               	movlw	1
  9402  0F55  00F0               	movwf	??___aodiv
  9403  0F56  0870               	movf	??___aodiv,w
  9404  0F57  06F2               	xorwf	___aodiv@sign,f
  9405  0F58                     l2670:
  9406  0F58  3073               	movlw	low ___aodiv@quotient
  9407  0F59  0086               	movwf	6
  9408  0F5A  3000               	movlw	high ___aodiv@quotient
  9409  0F5B  0087               	movwf	7
  9410  0F5C  3008               	movlw	8
  9411  0F5D  00F0               	movwf	??___aodiv
  9412  0F5E  3000               	movlw	0
  9413  0F5F                     u2580:
  9414  0F5F  001E               	movwi fsr1++
  9415  0F60  0BF0               	decfsz	??___aodiv,f
  9416  0F61  2F5F               	goto	u2580
  9417  0F62                     l2672:
  9418  0F62  0020               	movlb	0	; select bank0
  9419  0F63  0820               	movf	___aodiv@divisor,w
  9420  0F64  0421               	iorwf	___aodiv@divisor+1,w
  9421  0F65  0422               	iorwf	___aodiv@divisor+2,w
  9422  0F66  0423               	iorwf	___aodiv@divisor+3,w
  9423  0F67  0424               	iorwf	___aodiv@divisor+4,w
  9424  0F68  0425               	iorwf	___aodiv@divisor+5,w
  9425  0F69  0426               	iorwf	___aodiv@divisor+6,w
  9426  0F6A  0427               	iorwf	___aodiv@divisor+7,w
  9427  0F6B  1903               	skipnz
  9428  0F6C  2F6E               	goto	u2591
  9429  0F6D  2F6F               	goto	u2590
  9430  0F6E                     u2591:
  9431  0F6E  2FCB               	goto	l2692
  9432  0F6F                     u2590:
  9433  0F6F                     l2674:
  9434  0F6F  01F1               	clrf	___aodiv@counter
  9435  0F70  0AF1               	incf	___aodiv@counter,f
  9436  0F71  2F7E               	goto	l2680
  9437  0F72                     l2676:
  9438  0F72  35A0               	lslf	___aodiv@divisor,f
  9439  0F73  0DA1               	rlf	___aodiv@divisor+1,f
  9440  0F74  0DA2               	rlf	___aodiv@divisor+2,f
  9441  0F75  0DA3               	rlf	___aodiv@divisor+3,f
  9442  0F76  0DA4               	rlf	___aodiv@divisor+4,f
  9443  0F77  0DA5               	rlf	___aodiv@divisor+5,f
  9444  0F78  0DA6               	rlf	___aodiv@divisor+6,f
  9445  0F79  0DA7               	rlf	___aodiv@divisor+7,f
  9446  0F7A                     l2678:
  9447  0F7A  3001               	movlw	1
  9448  0F7B  00F0               	movwf	??___aodiv
  9449  0F7C  0870               	movf	??___aodiv,w
  9450  0F7D  07F1               	addwf	___aodiv@counter,f
  9451  0F7E                     l2680:
  9452  0F7E  1FA7               	btfss	___aodiv@divisor+7,7
  9453  0F7F  2F81               	goto	u2601
  9454  0F80  2F82               	goto	u2600
  9455  0F81                     u2601:
  9456  0F81  2F72               	goto	l2676
  9457  0F82                     u2600:
  9458  0F82                     l2682:
  9459  0F82  35F3               	lslf	___aodiv@quotient,f
  9460  0F83  0DF4               	rlf	___aodiv@quotient+1,f
  9461  0F84  0DF5               	rlf	___aodiv@quotient+2,f
  9462  0F85  0DF6               	rlf	___aodiv@quotient+3,f
  9463  0F86  0DF7               	rlf	___aodiv@quotient+4,f
  9464  0F87  0DF8               	rlf	___aodiv@quotient+5,f
  9465  0F88  0DF9               	rlf	___aodiv@quotient+6,f
  9466  0F89  0DFA               	rlf	___aodiv@quotient+7,f
  9467  0F8A                     l2684:
  9468  0F8A  0827               	movf	___aodiv@divisor+7,w
  9469  0F8B  022F               	subwf	___aodiv@dividend+7,w
  9470  0F8C  1D03               	skipz
  9471  0F8D  2FA8               	goto	u2615
  9472  0F8E  0826               	movf	___aodiv@divisor+6,w
  9473  0F8F  022E               	subwf	___aodiv@dividend+6,w
  9474  0F90  1D03               	skipz
  9475  0F91  2FA8               	goto	u2615
  9476  0F92  0825               	movf	___aodiv@divisor+5,w
  9477  0F93  022D               	subwf	___aodiv@dividend+5,w
  9478  0F94  1D03               	skipz
  9479  0F95  2FA8               	goto	u2615
  9480  0F96  0824               	movf	___aodiv@divisor+4,w
  9481  0F97  022C               	subwf	___aodiv@dividend+4,w
  9482  0F98  1D03               	skipz
  9483  0F99  2FA8               	goto	u2615
  9484  0F9A  0823               	movf	___aodiv@divisor+3,w
  9485  0F9B  022B               	subwf	___aodiv@dividend+3,w
  9486  0F9C  1D03               	skipz
  9487  0F9D  2FA8               	goto	u2615
  9488  0F9E  0822               	movf	___aodiv@divisor+2,w
  9489  0F9F  022A               	subwf	___aodiv@dividend+2,w
  9490  0FA0  1D03               	skipz
  9491  0FA1  2FA8               	goto	u2615
  9492  0FA2  0821               	movf	___aodiv@divisor+1,w
  9493  0FA3  0229               	subwf	___aodiv@dividend+1,w
  9494  0FA4  1D03               	skipz
  9495  0FA5  2FA8               	goto	u2615
  9496  0FA6  0820               	movf	___aodiv@divisor,w
  9497  0FA7  0228               	subwf	___aodiv@dividend,w
  9498  0FA8                     u2615:
  9499  0FA8  1C03               	skipc
  9500  0FA9  2FAB               	goto	u2611
  9501  0FAA  2FAC               	goto	u2610
  9502  0FAB                     u2611:
  9503  0FAB  2FBD               	goto	l2690
  9504  0FAC                     u2610:
  9505  0FAC                     l2686:
  9506  0FAC  0820               	movf	___aodiv@divisor,w
  9507  0FAD  02A8               	subwf	___aodiv@dividend,f
  9508  0FAE  0821               	movf	___aodiv@divisor+1,w
  9509  0FAF  3BA9               	subwfb	___aodiv@dividend+1,f
  9510  0FB0  0822               	movf	___aodiv@divisor+2,w
  9511  0FB1  3BAA               	subwfb	___aodiv@dividend+2,f
  9512  0FB2  0823               	movf	___aodiv@divisor+3,w
  9513  0FB3  3BAB               	subwfb	___aodiv@dividend+3,f
  9514  0FB4  0824               	movf	___aodiv@divisor+4,w
  9515  0FB5  3BAC               	subwfb	___aodiv@dividend+4,f
  9516  0FB6  0825               	movf	___aodiv@divisor+5,w
  9517  0FB7  3BAD               	subwfb	___aodiv@dividend+5,f
  9518  0FB8  0826               	movf	___aodiv@divisor+6,w
  9519  0FB9  3BAE               	subwfb	___aodiv@dividend+6,f
  9520  0FBA  0827               	movf	___aodiv@divisor+7,w
  9521  0FBB  3BAF               	subwfb	___aodiv@dividend+7,f
  9522  0FBC                     l2688:
  9523  0FBC  1473               	bsf	___aodiv@quotient,0
  9524  0FBD                     l2690:
  9525  0FBD  36A7               	lsrf	___aodiv@divisor+7,f
  9526  0FBE  0CA6               	rrf	___aodiv@divisor+6,f
  9527  0FBF  0CA5               	rrf	___aodiv@divisor+5,f
  9528  0FC0  0CA4               	rrf	___aodiv@divisor+4,f
  9529  0FC1  0CA3               	rrf	___aodiv@divisor+3,f
  9530  0FC2  0CA2               	rrf	___aodiv@divisor+2,f
  9531  0FC3  0CA1               	rrf	___aodiv@divisor+1,f
  9532  0FC4  0CA0               	rrf	___aodiv@divisor,f
  9533  0FC5  3001               	movlw	1
  9534  0FC6  02F1               	subwf	___aodiv@counter,f
  9535  0FC7  1D03               	btfss	3,2
  9536  0FC8  2FCA               	goto	u2621
  9537  0FC9  2FCB               	goto	u2620
  9538  0FCA                     u2621:
  9539  0FCA  2F82               	goto	l2682
  9540  0FCB                     u2620:
  9541  0FCB                     l2692:
  9542  0FCB  0872               	movf	___aodiv@sign,w
  9543  0FCC  1903               	btfsc	3,2
  9544  0FCD  2FCF               	goto	u2631
  9545  0FCE  2FD0               	goto	u2630
  9546  0FCF                     u2631:
  9547  0FCF  2FEE               	goto	l634
  9548  0FD0                     u2630:
  9549  0FD0                     l2694:
  9550  0FD0  09F3               	comf	___aodiv@quotient,f
  9551  0FD1  09F4               	comf	___aodiv@quotient+1,f
  9552  0FD2  09F5               	comf	___aodiv@quotient+2,f
  9553  0FD3  09F6               	comf	___aodiv@quotient+3,f
  9554  0FD4  09F7               	comf	___aodiv@quotient+4,f
  9555  0FD5  09F8               	comf	___aodiv@quotient+5,f
  9556  0FD6  09F9               	comf	___aodiv@quotient+6,f
  9557  0FD7  09FA               	comf	___aodiv@quotient+7,f
  9558  0FD8  0AF3               	incf	___aodiv@quotient,f
  9559  0FD9  1D03               	skipz
  9560  0FDA  2FEE               	goto	u264lld
  9561  0FDB  0AF4               	incf	___aodiv@quotient+1,f
  9562  0FDC  1D03               	skipz
  9563  0FDD  2FEE               	goto	u264lld
  9564  0FDE  0AF5               	incf	___aodiv@quotient+2,f
  9565  0FDF  1D03               	skipz
  9566  0FE0  2FEE               	goto	u264lld
  9567  0FE1  0AF6               	incf	___aodiv@quotient+3,f
  9568  0FE2  1D03               	skipz
  9569  0FE3  2FEE               	goto	u264lld
  9570  0FE4  0AF7               	incf	___aodiv@quotient+4,f
  9571  0FE5  1D03               	skipz
  9572  0FE6  2FEE               	goto	u264lld
  9573  0FE7  0AF8               	incf	___aodiv@quotient+5,f
  9574  0FE8  1D03               	skipz
  9575  0FE9  2FEE               	goto	u264lld
  9576  0FEA  0AF9               	incf	___aodiv@quotient+6,f
  9577  0FEB  1D03               	skipz
  9578  0FEC  2FEE               	goto	u264lld
  9579  0FED  0AFA               	incf	___aodiv@quotient+7,f
  9580  0FEE                     u264lld:
  9581  0FEE                     l634:
  9582  0FEE  0873               	movf	___aodiv@quotient,w
  9583  0FEF  0020               	movlb	0	; select bank0
  9584  0FF0  00A0               	movwf	?___aodiv
  9585  0FF1  0874               	movf	___aodiv@quotient+1,w
  9586  0FF2  00A1               	movwf	?___aodiv+1
  9587  0FF3  0875               	movf	___aodiv@quotient+2,w
  9588  0FF4  00A2               	movwf	?___aodiv+2
  9589  0FF5  0876               	movf	___aodiv@quotient+3,w
  9590  0FF6  00A3               	movwf	?___aodiv+3
  9591  0FF7  0877               	movf	___aodiv@quotient+4,w
  9592  0FF8  00A4               	movwf	?___aodiv+4
  9593  0FF9  0878               	movf	___aodiv@quotient+5,w
  9594  0FFA  00A5               	movwf	?___aodiv+5
  9595  0FFB  0879               	movf	___aodiv@quotient+6,w
  9596  0FFC  00A6               	movwf	?___aodiv+6
  9597  0FFD  087A               	movf	___aodiv@quotient+7,w
  9598  0FFE  00A7               	movwf	?___aodiv+7
  9599  0FFF                     l635:
  9600  0FFF  0008               	return
  9601  1000                     __end_of___aodiv:
  9602                           
  9603                           	psect	text27
  9604  1FB4                     __ptext27:	
  9605 ;; *************** function _lcd_print_with *****************
  9606 ;; Defined at:
  9607 ;;		line 135 in file "lcd_lib.c"
  9608 ;; Parameters:    Size  Location     Type
  9609 ;;  p               1    wreg     PTR struct .
  9610 ;;		 -> NULL(0), main@lcd(4), 
  9611 ;;  str             2    6[BANK0 ] PTR unsigned char 
  9612 ;;		 -> print_gram@row2(16), print_gram@row1(16), STR_3(15), STR_2(11), 
  9613 ;;  col             1    8[BANK0 ] unsigned char 
  9614 ;;  row             1    9[BANK0 ] unsigned char 
  9615 ;; Auto vars:     Size  Location     Type
  9616 ;;  p               1   13[COMMON] PTR struct .
  9617 ;;		 -> NULL(0), main@lcd(4), 
  9618 ;; Return value:  Size  Location     Type
  9619 ;;                  1    wreg      void 
  9620 ;; Registers used:
  9621 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  9622 ;; Tracked objects:
  9623 ;;		On entry : 0/0
  9624 ;;		On exit  : 0/0
  9625 ;;		Unchanged: 0/0
  9626 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  9627 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9628 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9629 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9630 ;;      Totals:         1       6       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9631 ;;Total ram usage:        7 bytes
  9632 ;; Hardware stack levels used: 1
  9633 ;; Hardware stack levels required when called: 5
  9634 ;; This function calls:
  9635 ;;		_lcd_print
  9636 ;;		_lcd_set_cursor
  9637 ;; This function is called by:
  9638 ;;		_initialize
  9639 ;;		_print_gram
  9640 ;; This function uses a non-reentrant model
  9641 ;;
  9642                           
  9643                           
  9644                           ;psect for function _lcd_print_with
  9645  1FB4                     _lcd_print_with:
  9646                           
  9647                           ;incstack = 0
  9648                           ; Regs used in _lcd_print_with: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  9649                           ;lcd_print_with@p stored from wreg
  9650  1FB4  00FD               	movwf	lcd_print_with@p
  9651  1FB5                     l3824:
  9652                           
  9653                           ;lcd_lib.c: 136:     lcd_set_cursor(p, col, row);
  9654  1FB5  0020               	movlb	0	; select bank0
  9655  1FB6  0828               	movf	lcd_print_with@col,w
  9656  1FB7  00AA               	movwf	??_lcd_print_with
  9657  1FB8  082A               	movf	??_lcd_print_with,w
  9658  1FB9  00FA               	movwf	lcd_set_cursor@col
  9659  1FBA  0829               	movf	lcd_print_with@row,w
  9660  1FBB  00AB               	movwf	??_lcd_print_with+1
  9661  1FBC  082B               	movf	??_lcd_print_with+1,w
  9662  1FBD  00FB               	movwf	lcd_set_cursor@row
  9663  1FBE  087D               	movf	lcd_print_with@p,w
  9664  1FBF  3191  212D  319F   	fcall	_lcd_set_cursor
  9665  1FC2                     l3826:
  9666                           
  9667                           ;lcd_lib.c: 137:     lcd_print(p, str);
  9668  1FC2  0020               	movlb	0	; select bank0
  9669  1FC3  0827               	movf	lcd_print_with@str+1,w
  9670  1FC4  00FB               	movwf	lcd_print@str+1
  9671  1FC5  0826               	movf	lcd_print_with@str,w
  9672  1FC6  00FA               	movwf	lcd_print@str
  9673  1FC7  087D               	movf	lcd_print_with@p,w
  9674  1FC8  3190  2094  319F   	fcall	_lcd_print
  9675  1FCB                     l344:
  9676  1FCB  0008               	return
  9677  1FCC                     __end_of_lcd_print_with:
  9678                           
  9679                           	psect	text28
  9680  097A                     __ptext28:	
  9681 ;; *************** function _lcd_init *****************
  9682 ;; Defined at:
  9683 ;;		line 18 in file "lcd_lib.c"
  9684 ;; Parameters:    Size  Location     Type
  9685 ;;  p               1    wreg     PTR struct .
  9686 ;;		 -> NULL(0), main@lcd(4), 
  9687 ;; Auto vars:     Size  Location     Type
  9688 ;;  p               1    8[COMMON] PTR struct .
  9689 ;;		 -> NULL(0), main@lcd(4), 
  9690 ;; Return value:  Size  Location     Type
  9691 ;;                  1    wreg      void 
  9692 ;; Registers used:
  9693 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  9694 ;; Tracked objects:
  9695 ;;		On entry : 0/0
  9696 ;;		On exit  : 0/0
  9697 ;;		Unchanged: 0/0
  9698 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  9699 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9700 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9701 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9702 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9703 ;;Total ram usage:        3 bytes
  9704 ;; Hardware stack levels used: 1
  9705 ;; Hardware stack levels required when called: 4
  9706 ;; This function calls:
  9707 ;;		_write4bits
  9708 ;; This function is called by:
  9709 ;;		_initialize
  9710 ;; This function uses a non-reentrant model
  9711 ;;
  9712                           
  9713                           
  9714                           ;psect for function _lcd_init
  9715  097A                     _lcd_init:
  9716                           
  9717                           ;incstack = 0
  9718                           ; Regs used in _lcd_init: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
  9719                           ;lcd_init@p stored from wreg
  9720  097A  00F8               	movwf	lcd_init@p
  9721  097B                     l3766:
  9722                           
  9723                           ;lcd_lib.c: 19:     _delay((unsigned long)((400)*(8000000/4000.0)));
  9724  097B  3005               	movlw	5
  9725  097C  00F7               	movwf	??_lcd_init+1
  9726  097D  300F               	movlw	15
  9727  097E  00F6               	movwf	??_lcd_init
  9728  097F  30F1               	movlw	241
  9729  0980                     u4707:
  9730  0980  0B89               	decfsz	9,f
  9731  0981  2980               	goto	u4707
  9732  0982  0BF6               	decfsz	??_lcd_init,f
  9733  0983  2980               	goto	u4707
  9734  0984  0BF7               	decfsz	??_lcd_init+1,f
  9735  0985  2980               	goto	u4707
  9736  0986  0000               	nop
  9737  0987                     l3768:
  9738                           
  9739                           ;lcd_lib.c: 21:     write4bits(p, 0x30);
  9740  0987  3030               	movlw	48
  9741  0988  00F6               	movwf	??_lcd_init
  9742  0989  0876               	movf	??_lcd_init,w
  9743  098A  00F3               	movwf	write4bits@val
  9744  098B  0878               	movf	lcd_init@p,w
  9745  098C  3190  2056  3189   	fcall	_write4bits
  9746  098F                     l3770:
  9747                           
  9748                           ;lcd_lib.c: 22:     _delay((unsigned long)((5)*(8000000/4000.0)));
  9749  098F  300D               	movlw	13
  9750  0990  00F6               	movwf	??_lcd_init
  9751  0991  30FC               	movlw	252
  9752  0992                     u4717:
  9753  0992  0B89               	decfsz	9,f
  9754  0993  2992               	goto	u4717
  9755  0994  0BF6               	decfsz	??_lcd_init,f
  9756  0995  2992               	goto	u4717
  9757                           
  9758                           ;lcd_lib.c: 24:     write4bits(p, 0x30);
  9759  0996  3030               	movlw	48
  9760  0997  00F6               	movwf	??_lcd_init
  9761  0998  0876               	movf	??_lcd_init,w
  9762  0999  00F3               	movwf	write4bits@val
  9763  099A  0878               	movf	lcd_init@p,w
  9764  099B  3190  2056  3189   	fcall	_write4bits
  9765  099E                     l3772:
  9766                           
  9767                           ;lcd_lib.c: 25:     _delay((unsigned long)((5)*(8000000/4000.0)));
  9768  099E  300D               	movlw	13
  9769  099F  00F6               	movwf	??_lcd_init
  9770  09A0  30FC               	movlw	252
  9771  09A1                     u4727:
  9772  09A1  0B89               	decfsz	9,f
  9773  09A2  29A1               	goto	u4727
  9774  09A3  0BF6               	decfsz	??_lcd_init,f
  9775  09A4  29A1               	goto	u4727
  9776  09A5                     l3774:
  9777                           
  9778                           ;lcd_lib.c: 27:     write4bits(p, 0x30);
  9779  09A5  3030               	movlw	48
  9780  09A6  00F6               	movwf	??_lcd_init
  9781  09A7  0876               	movf	??_lcd_init,w
  9782  09A8  00F3               	movwf	write4bits@val
  9783  09A9  0878               	movf	lcd_init@p,w
  9784  09AA  3190  2056  3189   	fcall	_write4bits
  9785                           
  9786                           ;lcd_lib.c: 28:     _delay((unsigned long)((300)*(8000000/4000000.0)));
  9787  09AD  30C8               	movlw	200
  9788  09AE                     u4737:
  9789  09AE  0B89               	decfsz	9,f
  9790  09AF  29AE               	goto	u4737
  9791  09B0                     l3776:
  9792                           
  9793                           ;lcd_lib.c: 30:     write4bits(p, 0x20);
  9794  09B0  3020               	movlw	32
  9795  09B1  00F6               	movwf	??_lcd_init
  9796  09B2  0876               	movf	??_lcd_init,w
  9797  09B3  00F3               	movwf	write4bits@val
  9798  09B4  0878               	movf	lcd_init@p,w
  9799  09B5  3190  2056  3189   	fcall	_write4bits
  9800  09B8                     l3778:
  9801                           
  9802                           ;lcd_lib.c: 31:     _delay((unsigned long)((10)*(8000000/4000000.0)));
  9803  09B8  3006               	movlw	6
  9804  09B9                     u4747:
  9805  09B9  0B89               	decfsz	9,f
  9806  09BA  29B9               	goto	u4747
  9807  09BB  3200               	nop2
  9808                           
  9809                           ;lcd_lib.c: 34:     write4bits(p, 0x20);
  9810  09BC  3020               	movlw	32
  9811  09BD  00F6               	movwf	??_lcd_init
  9812  09BE  0876               	movf	??_lcd_init,w
  9813  09BF  00F3               	movwf	write4bits@val
  9814  09C0  0878               	movf	lcd_init@p,w
  9815  09C1  3190  2056  3189   	fcall	_write4bits
  9816  09C4                     l3780:
  9817                           
  9818                           ;lcd_lib.c: 36:     _delay((unsigned long)((100)*(8000000/4000000.0)));
  9819  09C4  3042               	movlw	66
  9820  09C5                     u4757:
  9821  09C5  0B89               	decfsz	9,f
  9822  09C6  29C5               	goto	u4757
  9823  09C7  3200               	nop2
  9824  09C8                     l3782:
  9825                           
  9826                           ;lcd_lib.c: 38:     write4bits(p, 0x80);
  9827  09C8  3080               	movlw	128
  9828  09C9  00F6               	movwf	??_lcd_init
  9829  09CA  0876               	movf	??_lcd_init,w
  9830  09CB  00F3               	movwf	write4bits@val
  9831  09CC  0878               	movf	lcd_init@p,w
  9832  09CD  3190  2056  3189   	fcall	_write4bits
  9833  09D0                     l3784:
  9834                           
  9835                           ;lcd_lib.c: 43:     write4bits(p, 0x00);
  9836  09D0  01F3               	clrf	write4bits@val
  9837  09D1  0878               	movf	lcd_init@p,w
  9838  09D2  3190  2056  3189   	fcall	_write4bits
  9839  09D5                     l3786:
  9840                           
  9841                           ;lcd_lib.c: 45:     _delay((unsigned long)((100)*(8000000/4000000.0)));
  9842  09D5  3042               	movlw	66
  9843  09D6                     u4767:
  9844  09D6  0B89               	decfsz	9,f
  9845  09D7  29D6               	goto	u4767
  9846  09D8  3200               	nop2
  9847                           
  9848                           ;lcd_lib.c: 47:     write4bits(p, 0xC0);
  9849  09D9  30C0               	movlw	192
  9850  09DA  00F6               	movwf	??_lcd_init
  9851  09DB  0876               	movf	??_lcd_init,w
  9852  09DC  00F3               	movwf	write4bits@val
  9853  09DD  0878               	movf	lcd_init@p,w
  9854  09DE  3190  2056  3189   	fcall	_write4bits
  9855                           
  9856                           ;lcd_lib.c: 51:     write4bits(p, 0x00);
  9857  09E1  01F3               	clrf	write4bits@val
  9858  09E2  0878               	movf	lcd_init@p,w
  9859  09E3  3190  2056  3189   	fcall	_write4bits
  9860  09E6                     l3788:
  9861                           
  9862                           ;lcd_lib.c: 53:     _delay((unsigned long)((100)*(8000000/4000000.0)));
  9863  09E6  3042               	movlw	66
  9864  09E7                     u4777:
  9865  09E7  0B89               	decfsz	9,f
  9866  09E8  29E7               	goto	u4777
  9867  09E9  3200               	nop2
  9868  09EA                     l3790:
  9869                           
  9870                           ;lcd_lib.c: 55:     write4bits(p, 0x10);
  9871  09EA  3010               	movlw	16
  9872  09EB  00F6               	movwf	??_lcd_init
  9873  09EC  0876               	movf	??_lcd_init,w
  9874  09ED  00F3               	movwf	write4bits@val
  9875  09EE  0878               	movf	lcd_init@p,w
  9876  09EF  3190  2056  3189   	fcall	_write4bits
  9877                           
  9878                           ;lcd_lib.c: 57:     _delay((unsigned long)((5)*(8000000/4000.0)));
  9879  09F2  300D               	movlw	13
  9880  09F3  00F6               	movwf	??_lcd_init
  9881  09F4  30FC               	movlw	252
  9882  09F5                     u4787:
  9883  09F5  0B89               	decfsz	9,f
  9884  09F6  29F5               	goto	u4787
  9885  09F7  0BF6               	decfsz	??_lcd_init,f
  9886  09F8  29F5               	goto	u4787
  9887  09F9                     l3792:
  9888                           
  9889                           ;lcd_lib.c: 60:     write4bits(p, 0x00);
  9890  09F9  01F3               	clrf	write4bits@val
  9891  09FA  0878               	movf	lcd_init@p,w
  9892  09FB  3190  2056  3189   	fcall	_write4bits
  9893  09FE                     l3794:
  9894                           
  9895                           ;lcd_lib.c: 62:     _delay((unsigned long)((100)*(8000000/4000000.0)));
  9896  09FE  3042               	movlw	66
  9897  09FF                     u4797:
  9898  09FF  0B89               	decfsz	9,f
  9899  0A00  29FF               	goto	u4797
  9900  0A01  3200               	nop2
  9901                           
  9902                           ;lcd_lib.c: 64:     write4bits(p, 0x60);
  9903  0A02  3060               	movlw	96
  9904  0A03  00F6               	movwf	??_lcd_init
  9905  0A04  0876               	movf	??_lcd_init,w
  9906  0A05  00F3               	movwf	write4bits@val
  9907  0A06  0878               	movf	lcd_init@p,w
  9908  0A07  3190  2056  3189   	fcall	_write4bits
  9909                           
  9910                           ;lcd_lib.c: 68:     write4bits(p, 0x00);
  9911  0A0A  01F3               	clrf	write4bits@val
  9912  0A0B  0878               	movf	lcd_init@p,w
  9913  0A0C  3190  2056  3189   	fcall	_write4bits
  9914  0A0F                     l3796:
  9915                           
  9916                           ;lcd_lib.c: 70:     _delay((unsigned long)((100)*(8000000/4000000.0)));
  9917  0A0F  3042               	movlw	66
  9918  0A10                     u4807:
  9919  0A10  0B89               	decfsz	9,f
  9920  0A11  2A10               	goto	u4807
  9921  0A12  3200               	nop2
  9922  0A13                     l3798:
  9923                           
  9924                           ;lcd_lib.c: 72:     write4bits(p, 0x20);
  9925  0A13  3020               	movlw	32
  9926  0A14  00F6               	movwf	??_lcd_init
  9927  0A15  0876               	movf	??_lcd_init,w
  9928  0A16  00F3               	movwf	write4bits@val
  9929  0A17  0878               	movf	lcd_init@p,w
  9930  0A18  3190  2056  3189   	fcall	_write4bits
  9931                           
  9932                           ;lcd_lib.c: 74:     _delay((unsigned long)((3)*(8000000/4000.0)));
  9933  0A1B  3008               	movlw	8
  9934  0A1C  00F6               	movwf	??_lcd_init
  9935  0A1D  30CA               	movlw	202
  9936  0A1E                     u4817:
  9937  0A1E  0B89               	decfsz	9,f
  9938  0A1F  2A1E               	goto	u4817
  9939  0A20  0BF6               	decfsz	??_lcd_init,f
  9940  0A21  2A1E               	goto	u4817
  9941  0A22                     l317:
  9942  0A22  0008               	return
  9943  0A23                     __end_of_lcd_init:
  9944                           
  9945                           	psect	text29
  9946  1056                     __ptext29:	
  9947 ;; *************** function _write4bits *****************
  9948 ;; Defined at:
  9949 ;;		line 155 in file "lcd_lib.c"
  9950 ;; Parameters:    Size  Location     Type
  9951 ;;  p               1    wreg     PTR struct .
  9952 ;;		 -> NULL(0), main@lcd(4), 
  9953 ;;  val             1    3[COMMON] unsigned char 
  9954 ;; Auto vars:     Size  Location     Type
  9955 ;;  p               1    5[COMMON] PTR struct .
  9956 ;;		 -> NULL(0), main@lcd(4), 
  9957 ;; Return value:  Size  Location     Type
  9958 ;;                  1    wreg      void 
  9959 ;; Registers used:
  9960 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  9961 ;; Tracked objects:
  9962 ;;		On entry : 0/0
  9963 ;;		On exit  : 0/0
  9964 ;;		Unchanged: 0/0
  9965 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  9966 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9967 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9968 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9969 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9970 ;;Total ram usage:        3 bytes
  9971 ;; Hardware stack levels used: 1
  9972 ;; Hardware stack levels required when called: 3
  9973 ;; This function calls:
  9974 ;;		_lcd_cmd
  9975 ;; This function is called by:
  9976 ;;		_lcd_init
  9977 ;; This function uses a non-reentrant model
  9978 ;;
  9979                           
  9980                           
  9981                           ;psect for function _write4bits
  9982  1056                     _write4bits:
  9983                           
  9984                           ;incstack = 0
  9985                           ; Regs used in _write4bits: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
  9986                           ;write4bits@p stored from wreg
  9987  1056  00F5               	movwf	write4bits@p
  9988  1057                     l3558:
  9989                           
  9990                           ;lcd_lib.c: 156:     lcd_cmd(p, val);
  9991  1057  0873               	movf	write4bits@val,w
  9992  1058  00F4               	movwf	??_write4bits
  9993  1059  0874               	movf	??_write4bits,w
  9994  105A  00F1               	movwf	lcd_cmd@cmd
  9995  105B  0875               	movf	write4bits@p,w
  9996  105C  319F  279D  3190   	fcall	_lcd_cmd
  9997                           
  9998                           ;lcd_lib.c: 157:     lcd_cmd(p, val | 0b00000100);
  9999  105F  0873               	movf	write4bits@val,w
 10000  1060  3804               	iorlw	4
 10001  1061  00F4               	movwf	??_write4bits
 10002  1062  0874               	movf	??_write4bits,w
 10003  1063  00F1               	movwf	lcd_cmd@cmd
 10004  1064  0875               	movf	write4bits@p,w
 10005  1065  319F  279D  3190   	fcall	_lcd_cmd
 10006                           
 10007                           ;lcd_lib.c: 158:     lcd_cmd(p, val);
 10008  1068  0873               	movf	write4bits@val,w
 10009  1069  00F4               	movwf	??_write4bits
 10010  106A  0874               	movf	??_write4bits,w
 10011  106B  00F1               	movwf	lcd_cmd@cmd
 10012  106C  0875               	movf	write4bits@p,w
 10013  106D  319F  279D  3190   	fcall	_lcd_cmd
 10014  1070                     l350:
 10015  1070  0008               	return
 10016  1071                     __end_of_write4bits:
 10017                           
 10018                           	psect	text30
 10019  119F                     __ptext30:	
 10020 ;; *************** function _lcd_clear *****************
 10021 ;; Defined at:
 10022 ;;		line 91 in file "lcd_lib.c"
 10023 ;; Parameters:    Size  Location     Type
 10024 ;;  p               1    wreg     PTR struct .
 10025 ;;		 -> NULL(0), main@lcd(4), 
 10026 ;; Auto vars:     Size  Location     Type
 10027 ;;  p               1   10[BANK0 ] PTR struct .
 10028 ;;		 -> NULL(0), main@lcd(4), 
 10029 ;;  col             1    9[BANK0 ] unsigned char 
 10030 ;;  row             1    8[BANK0 ] unsigned char 
 10031 ;; Return value:  Size  Location     Type
 10032 ;;                  1    wreg      void 
 10033 ;; Registers used:
 10034 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 10035 ;; Tracked objects:
 10036 ;;		On entry : 0/0
 10037 ;;		On exit  : 0/0
 10038 ;;		Unchanged: 0/0
 10039 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 10040 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10041 ;;      Locals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10042 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10043 ;;      Totals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10044 ;;Total ram usage:        5 bytes
 10045 ;; Hardware stack levels used: 1
 10046 ;; Hardware stack levels required when called: 5
 10047 ;; This function calls:
 10048 ;;		_lcd_print
 10049 ;;		_lcd_set_cursor
 10050 ;; This function is called by:
 10051 ;;		_initialize
 10052 ;;		_print_gram
 10053 ;;		_set_max_gram
 10054 ;; This function uses a non-reentrant model
 10055 ;;
 10056                           
 10057                           
 10058                           ;psect for function _lcd_clear
 10059  119F                     _lcd_clear:
 10060                           
 10061                           ;incstack = 0
 10062                           ; Regs used in _lcd_clear: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 10063                           ;lcd_clear@p stored from wreg
 10064  119F  0020               	movlb	0	; select bank0
 10065  11A0  00AA               	movwf	lcd_clear@p
 10066  11A1                     l3806:
 10067                           
 10068                           ;lcd_lib.c: 92:     for(uint8_t row = 0; row < (p->ROW); row++){
 10069  11A1  01A8               	clrf	lcd_clear@row
 10070  11A2  29CC               	goto	l3820
 10071  11A3                     l3808:
 10072                           
 10073                           ;lcd_lib.c: 93:         for(uint8_t col = 0; col < (p->COL); col++){
 10074  11A3  01A9               	clrf	lcd_clear@col
 10075  11A4  29BF               	goto	l3816
 10076  11A5                     l3810:
 10077                           
 10078                           ;lcd_lib.c: 94:             lcd_set_cursor(p, col, row);
 10079  11A5  0829               	movf	lcd_clear@col,w
 10080  11A6  00A6               	movwf	??_lcd_clear
 10081  11A7  0826               	movf	??_lcd_clear,w
 10082  11A8  00FA               	movwf	lcd_set_cursor@col
 10083  11A9  0828               	movf	lcd_clear@row,w
 10084  11AA  00A7               	movwf	??_lcd_clear+1
 10085  11AB  0827               	movf	??_lcd_clear+1,w
 10086  11AC  00FB               	movwf	lcd_set_cursor@row
 10087  11AD  082A               	movf	lcd_clear@p,w
 10088  11AE  3191  212D  3191   	fcall	_lcd_set_cursor
 10089  11B1                     l3812:
 10090                           
 10091                           ;lcd_lib.c: 95:             lcd_print(p, " ");
 10092  11B1  3047               	movlw	low (STR_1| (0+32768))
 10093  11B2  00FA               	movwf	lcd_print@str
 10094  11B3  30A0               	movlw	high (STR_1| (0+32768))
 10095  11B4  00FB               	movwf	lcd_print@str+1
 10096  11B5  0020               	movlb	0	; select bank0
 10097  11B6  082A               	movf	lcd_clear@p,w
 10098  11B7  3190  2094  3191   	fcall	_lcd_print
 10099  11BA                     l3814:
 10100                           
 10101                           ;lcd_lib.c: 96:         }
 10102  11BA  3001               	movlw	1
 10103  11BB  0020               	movlb	0	; select bank0
 10104  11BC  00A6               	movwf	??_lcd_clear
 10105  11BD  0826               	movf	??_lcd_clear,w
 10106  11BE  07A9               	addwf	lcd_clear@col,f
 10107  11BF                     l3816:
 10108  11BF  0A2A               	incf	lcd_clear@p,w
 10109  11C0  0086               	movwf	6
 10110  11C1  0187               	clrf	7
 10111  11C2  0801               	movf	1,w
 10112  11C3  0229               	subwf	lcd_clear@col,w
 10113  11C4  1C03               	skipc
 10114  11C5  29C7               	goto	u4581
 10115  11C6  29C8               	goto	u4580
 10116  11C7                     u4581:
 10117  11C7  29A5               	goto	l3810
 10118  11C8                     u4580:
 10119  11C8                     l3818:
 10120                           
 10121                           ;lcd_lib.c: 97:     }
 10122  11C8  3001               	movlw	1
 10123  11C9  00A6               	movwf	??_lcd_clear
 10124  11CA  0826               	movf	??_lcd_clear,w
 10125  11CB  07A8               	addwf	lcd_clear@row,f
 10126  11CC                     l3820:
 10127  11CC  082A               	movf	lcd_clear@p,w
 10128  11CD  3E02               	addlw	2
 10129  11CE  0086               	movwf	6
 10130  11CF  0187               	clrf	7
 10131  11D0  0801               	movf	1,w
 10132  11D1  0228               	subwf	lcd_clear@row,w
 10133  11D2  1C03               	skipc
 10134  11D3  29D5               	goto	u4591
 10135  11D4  29D6               	goto	u4590
 10136  11D5                     u4591:
 10137  11D5  29A3               	goto	l3808
 10138  11D6                     u4590:
 10139  11D6                     l3822:
 10140                           
 10141                           ;lcd_lib.c: 99:     lcd_set_cursor(p, 0, 0);
 10142  11D6  01FA               	clrf	lcd_set_cursor@col
 10143  11D7  01FB               	clrf	lcd_set_cursor@row
 10144  11D8  082A               	movf	lcd_clear@p,w
 10145  11D9  3191  212D  3191   	fcall	_lcd_set_cursor
 10146  11DC                     l329:
 10147  11DC  0008               	return
 10148  11DD                     __end_of_lcd_clear:
 10149                           
 10150                           	psect	text31
 10151  112D                     __ptext31:	
 10152 ;; *************** function _lcd_set_cursor *****************
 10153 ;; Defined at:
 10154 ;;		line 107 in file "lcd_lib.c"
 10155 ;; Parameters:    Size  Location     Type
 10156 ;;  p               1    wreg     PTR struct .
 10157 ;;		 -> NULL(0), main@lcd(4), 
 10158 ;;  col             1   10[COMMON] unsigned char 
 10159 ;;  row             1   11[COMMON] unsigned char 
 10160 ;; Auto vars:     Size  Location     Type
 10161 ;;  p               1    5[BANK0 ] PTR struct .
 10162 ;;		 -> NULL(0), main@lcd(4), 
 10163 ;;  row_offsets     4    0[BANK0 ] unsigned char [4]
 10164 ;;  cmd             1    4[BANK0 ] unsigned char 
 10165 ;; Return value:  Size  Location     Type
 10166 ;;                  1    wreg      void 
 10167 ;; Registers used:
 10168 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 10169 ;; Tracked objects:
 10170 ;;		On entry : 0/0
 10171 ;;		On exit  : 0/0
 10172 ;;		Unchanged: 0/0
 10173 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 10174 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10175 ;;      Locals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10176 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10177 ;;      Totals:         3       6       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10178 ;;Total ram usage:        9 bytes
 10179 ;; Hardware stack levels used: 1
 10180 ;; Hardware stack levels required when called: 4
 10181 ;; This function calls:
 10182 ;;		_command
 10183 ;; This function is called by:
 10184 ;;		_lcd_clear
 10185 ;;		_lcd_print_with
 10186 ;; This function uses a non-reentrant model
 10187 ;;
 10188                           
 10189                           
 10190                           ;psect for function _lcd_set_cursor
 10191  112D                     _lcd_set_cursor:
 10192                           
 10193                           ;incstack = 0
 10194                           ; Regs used in _lcd_set_cursor: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
 10195                           ;lcd_set_cursor@p stored from wreg
 10196  112D  0020               	movlb	0	; select bank0
 10197  112E  00A5               	movwf	lcd_set_cursor@p
 10198  112F                     l3560:
 10199                           
 10200                           ;lcd_lib.c: 108:     uint8_t row_offsets[] = {0x00, 0x40, 0x14, 0x54};
 10201  112F  0022               	movlb	2	; select bank2
 10202  1130  0839               	movf	(lcd_set_cursor@F2781+3)^(0+256),w
 10203  1131  0020               	movlb	0	; select bank0
 10204  1132  00A3               	movwf	lcd_set_cursor@row_offsets+3
 10205  1133  0022               	movlb	2	; select bank2
 10206  1134  0838               	movf	(lcd_set_cursor@F2781+2)^(0+256),w
 10207  1135  0020               	movlb	0	; select bank0
 10208  1136  00A2               	movwf	lcd_set_cursor@row_offsets+2
 10209  1137  0022               	movlb	2	; select bank2
 10210  1138  0837               	movf	(lcd_set_cursor@F2781+1)^(0+256),w
 10211  1139  0020               	movlb	0	; select bank0
 10212  113A  00A1               	movwf	lcd_set_cursor@row_offsets+1
 10213  113B  0022               	movlb	2	; select bank2
 10214  113C  0836               	movf	lcd_set_cursor@F2781^(0+256),w
 10215  113D  0020               	movlb	0	; select bank0
 10216  113E  00A0               	movwf	lcd_set_cursor@row_offsets
 10217  113F                     l3562:
 10218                           
 10219                           ;lcd_lib.c: 109:     if(row > p->ROW){
 10220  113F  0825               	movf	lcd_set_cursor@p,w
 10221  1140  3E02               	addlw	2
 10222  1141  0086               	movwf	6
 10223  1142  0187               	clrf	7
 10224  1143  087B               	movf	lcd_set_cursor@row,w
 10225  1144  0201               	subwf	1,w
 10226  1145  1803               	skipnc
 10227  1146  2948               	goto	u4281
 10228  1147  2949               	goto	u4280
 10229  1148                     u4281:
 10230  1148  2952               	goto	l334
 10231  1149                     u4280:
 10232  1149                     l3564:
 10233                           
 10234                           ;lcd_lib.c: 110:         row = p->ROW - 1;
 10235  1149  0825               	movf	lcd_set_cursor@p,w
 10236  114A  3E02               	addlw	2
 10237  114B  0086               	movwf	6
 10238  114C  0187               	clrf	7
 10239  114D  0801               	movf	1,w
 10240  114E  3EFF               	addlw	255
 10241  114F  00FC               	movwf	??_lcd_set_cursor
 10242  1150  087C               	movf	??_lcd_set_cursor,w
 10243  1151  00FB               	movwf	lcd_set_cursor@row
 10244  1152                     l334:	
 10245                           ;lcd_lib.c: 111:     }
 10246                           
 10247                           
 10248                           ;lcd_lib.c: 112:     uint8_t cmd = 0x80 | (col + row_offsets[row]);
 10249  1152  087B               	movf	lcd_set_cursor@row,w
 10250  1153  3E20               	addlw	(low (lcd_set_cursor@row_offsets| 0))& (0+255)
 10251  1154  0086               	movwf	6
 10252  1155  0187               	clrf	7
 10253  1156  0801               	movf	1,w
 10254  1157  077A               	addwf	lcd_set_cursor@col,w
 10255  1158  3880               	iorlw	128
 10256  1159  00FC               	movwf	??_lcd_set_cursor
 10257  115A  087C               	movf	??_lcd_set_cursor,w
 10258  115B  00A4               	movwf	lcd_set_cursor@cmd
 10259  115C                     l3566:
 10260                           
 10261                           ;lcd_lib.c: 113:     command(p, cmd, 0);
 10262  115C  0824               	movf	lcd_set_cursor@cmd,w
 10263  115D  00FC               	movwf	??_lcd_set_cursor
 10264  115E  087C               	movf	??_lcd_set_cursor,w
 10265  115F  00F3               	movwf	command@val
 10266  1160  01F4               	clrf	command@mode
 10267  1161  0825               	movf	lcd_set_cursor@p,w
 10268  1162  3192  22D5  3191   	fcall	_command
 10269  1165                     l335:
 10270  1165  0008               	return
 10271  1166                     __end_of_lcd_set_cursor:
 10272                           
 10273                           	psect	text32
 10274  1094                     __ptext32:	
 10275 ;; *************** function _lcd_print *****************
 10276 ;; Defined at:
 10277 ;;		line 121 in file "lcd_lib.c"
 10278 ;; Parameters:    Size  Location     Type
 10279 ;;  p               1    wreg     PTR struct .
 10280 ;;		 -> NULL(0), main@lcd(4), 
 10281 ;;  str             2   10[COMMON] PTR unsigned char 
 10282 ;;		 -> set_max_gram@valstr(16), print_gram@row2(16), print_gram@row1(16), initialize@valstr(16), 
 10283 ;;		 -> STR_3(15), STR_2(11), STR_1(2), 
 10284 ;; Auto vars:     Size  Location     Type
 10285 ;;  p               1    1[BANK0 ] PTR struct .
 10286 ;;		 -> NULL(0), main@lcd(4), 
 10287 ;;  cmd             1    0[BANK0 ] unsigned char 
 10288 ;; Return value:  Size  Location     Type
 10289 ;;                  1    wreg      void 
 10290 ;; Registers used:
 10291 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 10292 ;; Tracked objects:
 10293 ;;		On entry : 0/0
 10294 ;;		On exit  : 0/0
 10295 ;;		Unchanged: 0/0
 10296 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 10297 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10298 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10299 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10300 ;;      Totals:         3       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10301 ;;Total ram usage:        5 bytes
 10302 ;; Hardware stack levels used: 1
 10303 ;; Hardware stack levels required when called: 4
 10304 ;; This function calls:
 10305 ;;		_command
 10306 ;; This function is called by:
 10307 ;;		_lcd_clear
 10308 ;;		_lcd_print_with
 10309 ;;		_initialize
 10310 ;;		_set_max_gram
 10311 ;; This function uses a non-reentrant model
 10312 ;;
 10313                           
 10314                           
 10315                           ;psect for function _lcd_print
 10316  1094                     _lcd_print:
 10317                           
 10318                           ;incstack = 0
 10319                           ; Regs used in _lcd_print: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 10320                           ;lcd_print@p stored from wreg
 10321  1094  0020               	movlb	0	; select bank0
 10322  1095  00A1               	movwf	lcd_print@p
 10323  1096                     l3568:
 10324                           
 10325                           ;lcd_lib.c: 122:     while (*str) {
 10326  1096  28AE               	goto	l3576
 10327  1097                     l3570:
 10328                           
 10329                           ;lcd_lib.c: 123:         uint8_t cmd = *str++;
 10330  1097  087A               	movf	lcd_print@str,w
 10331  1098  0084               	movwf	4
 10332  1099  087B               	movf	lcd_print@str+1,w
 10333  109A  0085               	movwf	5
 10334  109B  0800               	movf	0,w	;code access
 10335  109C  00FC               	movwf	??_lcd_print
 10336  109D  087C               	movf	??_lcd_print,w
 10337  109E  0020               	movlb	0	; select bank0
 10338  109F  00A0               	movwf	lcd_print@cmd
 10339  10A0                     l3572:
 10340  10A0  3001               	movlw	1
 10341  10A1  07FA               	addwf	lcd_print@str,f
 10342  10A2  3000               	movlw	0
 10343  10A3  3DFB               	addwfc	lcd_print@str+1,f
 10344  10A4                     l3574:
 10345                           
 10346                           ;lcd_lib.c: 124:         command(p, cmd, 0b00000001);
 10347  10A4  0820               	movf	lcd_print@cmd,w
 10348  10A5  00FC               	movwf	??_lcd_print
 10349  10A6  087C               	movf	??_lcd_print,w
 10350  10A7  00F3               	movwf	command@val
 10351  10A8  01F4               	clrf	command@mode
 10352  10A9  0AF4               	incf	command@mode,f
 10353  10AA  0821               	movf	lcd_print@p,w
 10354  10AB  3192  22D5  3190   	fcall	_command
 10355  10AE                     l3576:
 10356                           
 10357                           ;lcd_lib.c: 122:     while (*str) {
 10358  10AE  087A               	movf	lcd_print@str,w
 10359  10AF  0084               	movwf	4
 10360  10B0  087B               	movf	lcd_print@str+1,w
 10361  10B1  0085               	movwf	5
 10362  10B2  0012               	moviw fsr0++
 10363  10B3  1D03               	btfss	3,2
 10364  10B4  28B6               	goto	u4291
 10365  10B5  28B7               	goto	u4290
 10366  10B6                     u4291:
 10367  10B6  2897               	goto	l3570
 10368  10B7                     u4290:
 10369  10B7                     l341:
 10370  10B7  0008               	return
 10371  10B8                     __end_of_lcd_print:
 10372                           
 10373                           	psect	text33
 10374  12D5                     __ptext33:	
 10375 ;; *************** function _command *****************
 10376 ;; Defined at:
 10377 ;;		line 140 in file "lcd_lib.c"
 10378 ;; Parameters:    Size  Location     Type
 10379 ;;  p               1    wreg     PTR struct .
 10380 ;;		 -> NULL(0), main@lcd(4), 
 10381 ;;  val             1    3[COMMON] unsigned char 
 10382 ;;  mode            1    4[COMMON] unsigned char 
 10383 ;; Auto vars:     Size  Location     Type
 10384 ;;  p               1    9[COMMON] PTR struct .
 10385 ;;		 -> NULL(0), main@lcd(4), 
 10386 ;;  lownib          1    8[COMMON] unsigned char 
 10387 ;;  highnib         1    7[COMMON] unsigned char 
 10388 ;; Return value:  Size  Location     Type
 10389 ;;                  1    wreg      void 
 10390 ;; Registers used:
 10391 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 10392 ;; Tracked objects:
 10393 ;;		On entry : 0/0
 10394 ;;		On exit  : 0/0
 10395 ;;		Unchanged: 0/0
 10396 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 10397 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10398 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10399 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10400 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10401 ;;Total ram usage:        7 bytes
 10402 ;; Hardware stack levels used: 1
 10403 ;; Hardware stack levels required when called: 3
 10404 ;; This function calls:
 10405 ;;		_lcd_cmd
 10406 ;; This function is called by:
 10407 ;;		_lcd_set_cursor
 10408 ;;		_lcd_print
 10409 ;; This function uses a non-reentrant model
 10410 ;;
 10411                           
 10412                           
 10413                           ;psect for function _command
 10414  12D5                     _command:
 10415                           
 10416                           ;incstack = 0
 10417                           ; Regs used in _command: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
 10418                           ;command@p stored from wreg
 10419  12D5  00F9               	movwf	command@p
 10420  12D6                     l3024:
 10421                           
 10422                           ;lcd_lib.c: 141:     uint8_t highnib = (val & 0xf0) | p->_backlightval | mode;
 10423  12D6  0879               	movf	command@p,w
 10424  12D7  3E03               	addlw	3
 10425  12D8  0086               	movwf	6
 10426  12D9  0187               	clrf	7
 10427  12DA  0873               	movf	command@val,w
 10428  12DB  39F0               	andlw	240
 10429  12DC  0401               	iorwf	1,w
 10430  12DD  0474               	iorwf	command@mode,w
 10431  12DE  00F5               	movwf	??_command
 10432  12DF  0875               	movf	??_command,w
 10433  12E0  00F7               	movwf	command@highnib
 10434                           
 10435                           ;lcd_lib.c: 142:  uint8_t lownib = ((val << 4) & 0xf0) | p->_backlightval | mode;
 10436  12E1  0879               	movf	command@p,w
 10437  12E2  3E03               	addlw	3
 10438  12E3  0086               	movwf	6
 10439  12E4  0187               	clrf	7
 10440  12E5  0873               	movf	command@val,w
 10441  12E6  00F5               	movwf	??_command
 10442  12E7  3003               	movlw	3
 10443  12E8                     u3295:
 10444  12E8  35F5               	lslf	??_command,f
 10445  12E9  3EFF               	addlw	-1
 10446  12EA  1D03               	skipz
 10447  12EB  2AE8               	goto	u3295
 10448  12EC  3575               	lslf	??_command,w
 10449  12ED  39F0               	andlw	240
 10450  12EE  0401               	iorwf	1,w
 10451  12EF  0474               	iorwf	command@mode,w
 10452  12F0  00F6               	movwf	??_command+1
 10453  12F1  0876               	movf	??_command+1,w
 10454  12F2  00F8               	movwf	command@lownib
 10455  12F3                     l3026:
 10456                           
 10457                           ;lcd_lib.c: 144:  lcd_cmd(p, highnib);
 10458  12F3  0877               	movf	command@highnib,w
 10459  12F4  00F5               	movwf	??_command
 10460  12F5  0875               	movf	??_command,w
 10461  12F6  00F1               	movwf	lcd_cmd@cmd
 10462  12F7  0879               	movf	command@p,w
 10463  12F8  319F  279D  3192   	fcall	_lcd_cmd
 10464  12FB                     l3028:
 10465                           
 10466                           ;lcd_lib.c: 145:     lcd_cmd(p, highnib | 0b00000100);
 10467  12FB  0877               	movf	command@highnib,w
 10468  12FC  3804               	iorlw	4
 10469  12FD  00F5               	movwf	??_command
 10470  12FE  0875               	movf	??_command,w
 10471  12FF  00F1               	movwf	lcd_cmd@cmd
 10472  1300  0879               	movf	command@p,w
 10473  1301  319F  279D  3192   	fcall	_lcd_cmd
 10474  1304                     l3030:
 10475                           
 10476                           ;lcd_lib.c: 146:     lcd_cmd(p, highnib & ~0b00000100);
 10477  1304  0877               	movf	command@highnib,w
 10478  1305  39FB               	andlw	251
 10479  1306  00F5               	movwf	??_command
 10480  1307  0875               	movf	??_command,w
 10481  1308  00F1               	movwf	lcd_cmd@cmd
 10482  1309  0879               	movf	command@p,w
 10483  130A  319F  279D  3192   	fcall	_lcd_cmd
 10484  130D                     l3032:
 10485                           
 10486                           ;lcd_lib.c: 148:     _delay((unsigned long)((100)*(8000000/4000000.0)));
 10487  130D  3042               	movlw	66
 10488  130E                     u4827:
 10489  130E  0B89               	decfsz	9,f
 10490  130F  2B0E               	goto	u4827
 10491  1310  3200               	nop2
 10492  1311                     l3034:
 10493                           
 10494                           ;lcd_lib.c: 150:  lcd_cmd(p, lownib);
 10495  1311  0878               	movf	command@lownib,w
 10496  1312  00F5               	movwf	??_command
 10497  1313  0875               	movf	??_command,w
 10498  1314  00F1               	movwf	lcd_cmd@cmd
 10499  1315  0879               	movf	command@p,w
 10500  1316  319F  279D  3192   	fcall	_lcd_cmd
 10501  1319                     l3036:
 10502                           
 10503                           ;lcd_lib.c: 151:     lcd_cmd(p, lownib | 0b00000100);
 10504  1319  0878               	movf	command@lownib,w
 10505  131A  3804               	iorlw	4
 10506  131B  00F5               	movwf	??_command
 10507  131C  0875               	movf	??_command,w
 10508  131D  00F1               	movwf	lcd_cmd@cmd
 10509  131E  0879               	movf	command@p,w
 10510  131F  319F  279D  3192   	fcall	_lcd_cmd
 10511  1322                     l3038:
 10512                           
 10513                           ;lcd_lib.c: 152:     lcd_cmd(p, lownib & ~0b00000100);
 10514  1322  0878               	movf	command@lownib,w
 10515  1323  39FB               	andlw	251
 10516  1324  00F5               	movwf	??_command
 10517  1325  0875               	movf	??_command,w
 10518  1326  00F1               	movwf	lcd_cmd@cmd
 10519  1327  0879               	movf	command@p,w
 10520  1328  319F  279D  3192   	fcall	_lcd_cmd
 10521  132B                     l347:
 10522  132B  0008               	return
 10523  132C                     __end_of_command:
 10524                           
 10525                           	psect	text34
 10526  1F87                     __ptext34:	
 10527 ;; *************** function _lcd_backlight *****************
 10528 ;; Defined at:
 10529 ;;		line 81 in file "lcd_lib.c"
 10530 ;; Parameters:    Size  Location     Type
 10531 ;;  p               1    wreg     PTR struct .
 10532 ;;		 -> NULL(0), main@lcd(4), 
 10533 ;; Auto vars:     Size  Location     Type
 10534 ;;  p               1    4[COMMON] PTR struct .
 10535 ;;		 -> NULL(0), main@lcd(4), 
 10536 ;; Return value:  Size  Location     Type
 10537 ;;                  1    wreg      void 
 10538 ;; Registers used:
 10539 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 10540 ;; Tracked objects:
 10541 ;;		On entry : 0/0
 10542 ;;		On exit  : 0/0
 10543 ;;		Unchanged: 0/0
 10544 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 10545 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10546 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10547 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10548 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10549 ;;Total ram usage:        2 bytes
 10550 ;; Hardware stack levels used: 1
 10551 ;; Hardware stack levels required when called: 3
 10552 ;; This function calls:
 10553 ;;		_lcd_cmd
 10554 ;; This function is called by:
 10555 ;;		_initialize
 10556 ;; This function uses a non-reentrant model
 10557 ;;
 10558                           
 10559                           
 10560                           ;psect for function _lcd_backlight
 10561  1F87                     _lcd_backlight:
 10562                           
 10563                           ;incstack = 0
 10564                           ; Regs used in _lcd_backlight: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
 10565                           ;lcd_backlight@p stored from wreg
 10566  1F87  00F4               	movwf	lcd_backlight@p
 10567  1F88                     l3800:
 10568                           
 10569                           ;lcd_lib.c: 82:     lcd_cmd(p, 0x08);
 10570  1F88  3008               	movlw	8
 10571  1F89  00F3               	movwf	??_lcd_backlight
 10572  1F8A  0873               	movf	??_lcd_backlight,w
 10573  1F8B  00F1               	movwf	lcd_cmd@cmd
 10574  1F8C  0874               	movf	lcd_backlight@p,w
 10575  1F8D  319F  279D  319F   	fcall	_lcd_cmd
 10576  1F90                     l3802:
 10577                           
 10578                           ;lcd_lib.c: 83:     p->_backlightval = 0x08;
 10579  1F90  3008               	movlw	8
 10580  1F91  00F3               	movwf	??_lcd_backlight
 10581  1F92  0874               	movf	lcd_backlight@p,w
 10582  1F93  3E03               	addlw	3
 10583  1F94  0086               	movwf	6
 10584  1F95  0187               	clrf	7
 10585  1F96  0873               	movf	??_lcd_backlight,w
 10586  1F97  0081               	movwf	1
 10587  1F98                     l3804:
 10588                           
 10589                           ;lcd_lib.c: 84:     _delay((unsigned long)((10)*(8000000/4000000.0)));
 10590  1F98  3006               	movlw	6
 10591  1F99                     u4837:
 10592  1F99  0B89               	decfsz	9,f
 10593  1F9A  2F99               	goto	u4837
 10594  1F9B  3200               	nop2
 10595  1F9C                     l320:
 10596  1F9C  0008               	return
 10597  1F9D                     __end_of_lcd_backlight:
 10598                           
 10599                           	psect	text35
 10600  1F9D                     __ptext35:	
 10601 ;; *************** function _lcd_cmd *****************
 10602 ;; Defined at:
 10603 ;;		line 6 in file "lcd_lib.c"
 10604 ;; Parameters:    Size  Location     Type
 10605 ;;  p               1    wreg     PTR struct .
 10606 ;;		 -> NULL(0), main@lcd(4), 
 10607 ;;  cmd             1    1[COMMON] unsigned char 
 10608 ;; Auto vars:     Size  Location     Type
 10609 ;;  p               1    2[COMMON] PTR struct .
 10610 ;;		 -> NULL(0), main@lcd(4), 
 10611 ;; Return value:  Size  Location     Type
 10612 ;;                  1    wreg      void 
 10613 ;; Registers used:
 10614 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 10615 ;; Tracked objects:
 10616 ;;		On entry : 0/0
 10617 ;;		On exit  : 0/0
 10618 ;;		Unchanged: 0/0
 10619 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 10620 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10621 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10622 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10623 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10624 ;;Total ram usage:        2 bytes
 10625 ;; Hardware stack levels used: 1
 10626 ;; Hardware stack levels required when called: 2
 10627 ;; This function calls:
 10628 ;;		_i2c_start
 10629 ;;		_i2c_stop
 10630 ;;		_i2c_write
 10631 ;; This function is called by:
 10632 ;;		_lcd_backlight
 10633 ;;		_command
 10634 ;;		_write4bits
 10635 ;; This function uses a non-reentrant model
 10636 ;;
 10637                           
 10638                           
 10639                           ;psect for function _lcd_cmd
 10640  1F9D                     _lcd_cmd:
 10641                           
 10642                           ;incstack = 0
 10643                           ; Regs used in _lcd_cmd: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
 10644                           ;lcd_cmd@p stored from wreg
 10645  1F9D  00F2               	movwf	lcd_cmd@p
 10646  1F9E                     l2826:
 10647                           
 10648                           ;lcd_lib.c: 7:     i2c_start();
 10649  1F9E  319F  273A  319F   	fcall	_i2c_start
 10650  1FA1                     l2828:
 10651                           
 10652                           ;lcd_lib.c: 8:     i2c_write(p->lcd_address << 1);
 10653  1FA1  0872               	movf	lcd_cmd@p,w
 10654  1FA2  0086               	movwf	6
 10655  1FA3  0187               	clrf	7
 10656  1FA4  3501               	lslf	1,w
 10657  1FA5  319F  2750  319F   	fcall	_i2c_write
 10658  1FA8                     l2830:
 10659                           
 10660                           ;lcd_lib.c: 9:     i2c_write(cmd);
 10661  1FA8  0871               	movf	lcd_cmd@cmd,w
 10662  1FA9  319F  2750  319F   	fcall	_i2c_write
 10663  1FAC                     l2832:
 10664                           
 10665                           ;lcd_lib.c: 10:     i2c_stop();
 10666  1FAC  3180  2004  319F   	fcall	_i2c_stop
 10667  1FAF                     l2834:
 10668                           
 10669                           ;lcd_lib.c: 11:     _delay((unsigned long)((10)*(8000000/4000000.0)));
 10670  1FAF  3006               	movlw	6
 10671  1FB0                     u4847:
 10672  1FB0  0B89               	decfsz	9,f
 10673  1FB1  2FB0               	goto	u4847
 10674  1FB2  3200               	nop2
 10675  1FB3                     l314:
 10676  1FB3  0008               	return
 10677  1FB4                     __end_of_lcd_cmd:
 10678                           
 10679                           	psect	text36
 10680  1F50                     __ptext36:	
 10681 ;; *************** function _i2c_write *****************
 10682 ;; Defined at:
 10683 ;;		line 25 in file "i2c.c"
 10684 ;; Parameters:    Size  Location     Type
 10685 ;;  data            1    wreg     unsigned char 
 10686 ;; Auto vars:     Size  Location     Type
 10687 ;;  data            1    0[COMMON] unsigned char 
 10688 ;; Return value:  Size  Location     Type
 10689 ;;                  1    wreg      void 
 10690 ;; Registers used:
 10691 ;;		wreg, status,2, status,0, pclath, cstack
 10692 ;; Tracked objects:
 10693 ;;		On entry : 0/0
 10694 ;;		On exit  : 0/0
 10695 ;;		Unchanged: 0/0
 10696 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 10697 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10698 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10699 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10700 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10701 ;;Total ram usage:        1 bytes
 10702 ;; Hardware stack levels used: 1
 10703 ;; Hardware stack levels required when called: 1
 10704 ;; This function calls:
 10705 ;;		_i2c_wait
 10706 ;; This function is called by:
 10707 ;;		_lcd_cmd
 10708 ;; This function uses a non-reentrant model
 10709 ;;
 10710                           
 10711                           
 10712                           ;psect for function _i2c_write
 10713  1F50                     _i2c_write:
 10714                           
 10715                           ;incstack = 0
 10716                           ; Regs used in _i2c_write: [wreg+status,2+status,0+pclath+cstack]
 10717                           ;i2c_write@data stored from wreg
 10718  1F50  00F0               	movwf	i2c_write@data
 10719  1F51                     l2592:
 10720                           
 10721                           ;i2c.c: 26:     SSPBUF = data;
 10722  1F51  0870               	movf	i2c_write@data,w
 10723  1F52  0024               	movlb	4	; select bank4
 10724  1F53  0091               	movwf	17	;volatile
 10725  1F54                     l96:	
 10726                           ;i2c.c: 27:     while(SSPSTATbits.BF);
 10727                           
 10728  1F54  1814               	btfsc	20,0	;volatile
 10729  1F55  2F57               	goto	u2441
 10730  1F56  2F58               	goto	u2440
 10731  1F57                     u2441:
 10732  1F57  2F54               	goto	l96
 10733  1F58                     u2440:
 10734  1F58                     l99:
 10735  1F58  1B16               	btfsc	22,6	;volatile
 10736  1F59  2F5B               	goto	u2451
 10737  1F5A  2F5C               	goto	u2450
 10738  1F5B                     u2451:
 10739  1F5B  2F58               	goto	l99
 10740  1F5C                     u2450:
 10741  1F5C                     l2594:
 10742                           
 10743                           ;i2c.c: 29:     i2c_wait();
 10744  1F5C  319F  2744  319F   	fcall	_i2c_wait
 10745  1F5F                     l102:
 10746  1F5F  0008               	return
 10747  1F60                     __end_of_i2c_write:
 10748                           
 10749                           	psect	text37
 10750  0004                     __ptext37:	
 10751 ;; *************** function _i2c_stop *****************
 10752 ;; Defined at:
 10753 ;;		line 14 in file "i2c.c"
 10754 ;; Parameters:    Size  Location     Type
 10755 ;;		None
 10756 ;; Auto vars:     Size  Location     Type
 10757 ;;		None
 10758 ;; Return value:  Size  Location     Type
 10759 ;;                  1    wreg      void 
 10760 ;; Registers used:
 10761 ;;		None
 10762 ;; Tracked objects:
 10763 ;;		On entry : 0/0
 10764 ;;		On exit  : 0/0
 10765 ;;		Unchanged: 0/0
 10766 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 10767 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10768 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10769 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10770 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10771 ;;Total ram usage:        0 bytes
 10772 ;; Hardware stack levels used: 1
 10773 ;; This function calls:
 10774 ;;		Nothing
 10775 ;; This function is called by:
 10776 ;;		_lcd_cmd
 10777 ;; This function uses a non-reentrant model
 10778 ;;
 10779                           
 10780                           
 10781                           ;psect for function _i2c_stop
 10782  0004                     _i2c_stop:
 10783  0004                     l2590:	
 10784                           ;incstack = 0
 10785                           ; Regs used in _i2c_stop: []
 10786                           
 10787                           
 10788                           ;i2c.c: 15:     SSPCON2bits.PEN = 1;
 10789  0004  0024               	movlb	4	; select bank4
 10790  0005  1516               	bsf	22,2	;volatile
 10791  0006                     l84:	
 10792                           ;i2c.c: 16:     while(SSPCON2bits.PEN);
 10793                           
 10794  0006  1916               	btfsc	22,2	;volatile
 10795  0007  2809               	goto	u2431
 10796  0008  280A               	goto	u2430
 10797  0009                     u2431:
 10798  0009  2806               	goto	l84
 10799  000A                     u2430:
 10800  000A                     l87:
 10801  000A  0008               	return
 10802  000B                     __end_of_i2c_stop:
 10803                           
 10804                           	psect	text38
 10805  1F3A                     __ptext38:	
 10806 ;; *************** function _i2c_start *****************
 10807 ;; Defined at:
 10808 ;;		line 8 in file "i2c.c"
 10809 ;; Parameters:    Size  Location     Type
 10810 ;;		None
 10811 ;; Auto vars:     Size  Location     Type
 10812 ;;		None
 10813 ;; Return value:  Size  Location     Type
 10814 ;;                  1    wreg      void 
 10815 ;; Registers used:
 10816 ;;		wreg, status,2, status,0, pclath, cstack
 10817 ;; Tracked objects:
 10818 ;;		On entry : 0/0
 10819 ;;		On exit  : 0/0
 10820 ;;		Unchanged: 0/0
 10821 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 10822 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10823 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10824 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10825 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10826 ;;Total ram usage:        0 bytes
 10827 ;; Hardware stack levels used: 1
 10828 ;; Hardware stack levels required when called: 1
 10829 ;; This function calls:
 10830 ;;		_i2c_wait
 10831 ;; This function is called by:
 10832 ;;		_lcd_cmd
 10833 ;; This function uses a non-reentrant model
 10834 ;;
 10835                           
 10836                           
 10837                           ;psect for function _i2c_start
 10838  1F3A                     _i2c_start:
 10839  1F3A                     l2586:	
 10840                           ;incstack = 0
 10841                           ; Regs used in _i2c_start: [wreg+status,2+status,0+pclath+cstack]
 10842                           
 10843                           
 10844                           ;i2c.c: 9:     i2c_wait();
 10845  1F3A  319F  2744  319F   	fcall	_i2c_wait
 10846  1F3D                     l2588:
 10847                           
 10848                           ;i2c.c: 10:     SSPCON2bits.SEN = 1;
 10849  1F3D  0024               	movlb	4	; select bank4
 10850  1F3E  1416               	bsf	22,0	;volatile
 10851  1F3F                     l78:	
 10852                           ;i2c.c: 11:     while(SSPCON2bits.SEN);
 10853                           
 10854  1F3F  1816               	btfsc	22,0	;volatile
 10855  1F40  2F42               	goto	u2421
 10856  1F41  2F43               	goto	u2420
 10857  1F42                     u2421:
 10858  1F42  2F3F               	goto	l78
 10859  1F43                     u2420:
 10860  1F43                     l81:
 10861  1F43  0008               	return
 10862  1F44                     __end_of_i2c_start:
 10863                           
 10864                           	psect	text39
 10865  1F44                     __ptext39:	
 10866 ;; *************** function _i2c_wait *****************
 10867 ;; Defined at:
 10868 ;;		line 4 in file "i2c.c"
 10869 ;; Parameters:    Size  Location     Type
 10870 ;;		None
 10871 ;; Auto vars:     Size  Location     Type
 10872 ;;		None
 10873 ;; Return value:  Size  Location     Type
 10874 ;;                  1    wreg      void 
 10875 ;; Registers used:
 10876 ;;		wreg, status,2
 10877 ;; Tracked objects:
 10878 ;;		On entry : 0/0
 10879 ;;		On exit  : 0/0
 10880 ;;		Unchanged: 0/0
 10881 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 10882 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10883 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10884 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10885 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10886 ;;Total ram usage:        0 bytes
 10887 ;; Hardware stack levels used: 1
 10888 ;; This function calls:
 10889 ;;		Nothing
 10890 ;; This function is called by:
 10891 ;;		_i2c_start
 10892 ;;		_i2c_write
 10893 ;;		_i2c_repeated_start
 10894 ;;		_i2c_read
 10895 ;; This function uses a non-reentrant model
 10896 ;;
 10897                           
 10898                           
 10899                           ;psect for function _i2c_wait
 10900  1F44                     _i2c_wait:
 10901  1F44                     l2562:	
 10902                           ;incstack = 0
 10903                           ; Regs used in _i2c_wait: [wreg+status,2]
 10904                           
 10905  1F44                     l2564:	
 10906                           ;i2c.c: 5:     while((SSPCON2 & 0x1F) || (SSPSTAT & 0x04));
 10907                           
 10908  1F44  0024               	movlb	4	; select bank4
 10909  1F45  0816               	movf	22,w	;volatile
 10910  1F46  391F               	andlw	31
 10911  1F47  1D03               	btfss	3,2
 10912  1F48  2F4A               	goto	u2381
 10913  1F49  2F4B               	goto	u2380
 10914  1F4A                     u2381:
 10915  1F4A  2F44               	goto	l2564
 10916  1F4B                     u2380:
 10917  1F4B                     l2566:
 10918  1F4B  1914               	btfsc	20,2	;volatile
 10919  1F4C  2F4E               	goto	u2391
 10920  1F4D  2F4F               	goto	u2390
 10921  1F4E                     u2391:
 10922  1F4E  2F44               	goto	l2564
 10923  1F4F                     u2390:
 10924  1F4F                     l75:
 10925  1F4F  0008               	return
 10926  1F50                     __end_of_i2c_wait:
 10927                           
 10928                           	psect	text40
 10929  1F60                     __ptext40:	
 10930 ;; *************** function _initialize_digit *****************
 10931 ;; Defined at:
 10932 ;;		line 187 in file "tm1637.c"
 10933 ;; Parameters:    Size  Location     Type
 10934 ;;  p               1    wreg     PTR struct .
 10935 ;;		 -> NULL(0), main@tm1637(2), 
 10936 ;; Auto vars:     Size  Location     Type
 10937 ;;  p               1   13[BANK0 ] PTR struct .
 10938 ;;		 -> NULL(0), main@tm1637(2), 
 10939 ;; Return value:  Size  Location     Type
 10940 ;;                  1    wreg      void 
 10941 ;; Registers used:
 10942 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 10943 ;; Tracked objects:
 10944 ;;		On entry : 0/0
 10945 ;;		On exit  : 0/0
 10946 ;;		Unchanged: 0/0
 10947 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 10948 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10949 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10950 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10951 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10952 ;;Total ram usage:        2 bytes
 10953 ;; Hardware stack levels used: 1
 10954 ;; Hardware stack levels required when called: 4
 10955 ;; This function calls:
 10956 ;;		_print_digit
 10957 ;;		_set_brigthness
 10958 ;; This function is called by:
 10959 ;;		_initialize
 10960 ;; This function uses a non-reentrant model
 10961 ;;
 10962                           
 10963                           
 10964                           ;psect for function _initialize_digit
 10965  1F60                     _initialize_digit:
 10966                           
 10967                           ;incstack = 0
 10968                           ; Regs used in _initialize_digit: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
 10969                           ;initialize_digit@p stored from wreg
 10970  1F60  0020               	movlb	0	; select bank0
 10971  1F61  00AD               	movwf	initialize_digit@p
 10972  1F62                     l3762:
 10973                           
 10974                           ;tm1637.c: 188:     set_brigthness(p, 0x0f, 1);
 10975  1F62  300F               	movlw	15
 10976  1F63  00AC               	movwf	??_initialize_digit
 10977  1F64  082C               	movf	??_initialize_digit,w
 10978  1F65  00F0               	movwf	set_brigthness@brightness
 10979  1F66  01F1               	clrf	set_brigthness@on
 10980  1F67  0AF1               	incf	set_brigthness@on,f
 10981  1F68  082D               	movf	initialize_digit@p,w
 10982  1F69  319F  2773  319F   	fcall	_set_brigthness
 10983  1F6C                     l3764:
 10984                           
 10985                           ;tm1637.c: 189:     print_digit(p, 0);
 10986  1F6C  01FD               	clrf	print_digit@number
 10987  1F6D  0020               	movlb	0	; select bank0
 10988  1F6E  082D               	movf	initialize_digit@p,w
 10989  1F6F  318A  22CF  319F   	fcall	_print_digit
 10990  1F72                     l247:
 10991  1F72  0008               	return
 10992  1F73                     __end_of_initialize_digit:
 10993                           
 10994                           	psect	text41
 10995  1F73                     __ptext41:	
 10996 ;; *************** function _set_brigthness *****************
 10997 ;; Defined at:
 10998 ;;		line 133 in file "tm1637.c"
 10999 ;; Parameters:    Size  Location     Type
 11000 ;;  p               1    wreg     PTR struct .
 11001 ;;		 -> NULL(0), main@tm1637(2), 
 11002 ;;  brightness      1    0[COMMON] unsigned char 
 11003 ;;  on              1    1[COMMON] unsigned char 
 11004 ;; Auto vars:     Size  Location     Type
 11005 ;;  p               1    3[COMMON] PTR struct .
 11006 ;;		 -> NULL(0), main@tm1637(2), 
 11007 ;; Return value:  Size  Location     Type
 11008 ;;                  1    wreg      void 
 11009 ;; Registers used:
 11010 ;;		wreg, status,2, status,0
 11011 ;; Tracked objects:
 11012 ;;		On entry : 0/0
 11013 ;;		On exit  : 0/0
 11014 ;;		Unchanged: 0/0
 11015 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 11016 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11017 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11018 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11019 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11020 ;;Total ram usage:        4 bytes
 11021 ;; Hardware stack levels used: 1
 11022 ;; This function calls:
 11023 ;;		Nothing
 11024 ;; This function is called by:
 11025 ;;		_initialize_digit
 11026 ;; This function uses a non-reentrant model
 11027 ;;
 11028                           
 11029                           
 11030                           ;psect for function _set_brigthness
 11031  1F73                     _set_brigthness:
 11032  1F73                     l3456:	
 11033                           ;incstack = 0
 11034                           ; Regs used in _set_brigthness: [wreg+status,2+status,0]
 11035                           
 11036                           
 11037                           ;tm1637.c: 134:     if(on == 1){
 11038  1F73  0371               	decf	set_brigthness@on,w
 11039  1F74  1D03               	btfss	3,2
 11040  1F75  2F77               	goto	u4201
 11041  1F76  2F78               	goto	u4200
 11042  1F77                     u4201:
 11043  1F77  2F80               	goto	l3460
 11044  1F78                     u4200:
 11045  1F78                     l3458:
 11046                           
 11047                           ;tm1637.c: 135:         m_brightness = (brightness & 0x7 | 0x08);
 11048  1F78  0870               	movf	set_brigthness@brightness,w
 11049  1F79  3907               	andlw	7
 11050  1F7A  3808               	iorlw	8
 11051  1F7B  00F2               	movwf	??_set_brigthness
 11052  1F7C  0872               	movf	??_set_brigthness,w
 11053  1F7D  0022               	movlb	2	; select bank2
 11054  1F7E  00D6               	movwf	_m_brightness^(0+256)
 11055                           
 11056                           ;tm1637.c: 136:     }else{
 11057  1F7F  2F86               	goto	l230
 11058  1F80                     l3460:
 11059                           
 11060                           ;tm1637.c: 137:         m_brightness = (brightness & 0x7 | 0x00);
 11061  1F80  0870               	movf	set_brigthness@brightness,w
 11062  1F81  3907               	andlw	7
 11063  1F82  00F2               	movwf	??_set_brigthness
 11064  1F83  0872               	movf	??_set_brigthness,w
 11065  1F84  0022               	movlb	2	; select bank2
 11066  1F85  00D6               	movwf	_m_brightness^(0+256)
 11067  1F86                     l230:
 11068  1F86  0008               	return
 11069  1F87                     __end_of_set_brigthness:
 11070                           
 11071                           	psect	text42
 11072  0ACF                     __ptext42:	
 11073 ;; *************** function _print_digit *****************
 11074 ;; Defined at:
 11075 ;;		line 192 in file "tm1637.c"
 11076 ;; Parameters:    Size  Location     Type
 11077 ;;  p               1    wreg     PTR struct .
 11078 ;;		 -> NULL(0), main@tm1637(2), 
 11079 ;;  number          1   13[COMMON] unsigned char 
 11080 ;; Auto vars:     Size  Location     Type
 11081 ;;  p               1   10[BANK0 ] PTR struct .
 11082 ;;		 -> NULL(0), main@tm1637(2), 
 11083 ;;  data            4    6[BANK0 ] unsigned char [4]
 11084 ;;  tmp             1   11[BANK0 ] unsigned char 
 11085 ;; Return value:  Size  Location     Type
 11086 ;;                  1    wreg      void 
 11087 ;; Registers used:
 11088 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 11089 ;; Tracked objects:
 11090 ;;		On entry : 0/0
 11091 ;;		On exit  : 0/0
 11092 ;;		Unchanged: 0/0
 11093 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 11094 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11095 ;;      Locals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11096 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11097 ;;      Totals:         1      10       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11098 ;;Total ram usage:       11 bytes
 11099 ;; Hardware stack levels used: 1
 11100 ;; Hardware stack levels required when called: 3
 11101 ;; This function calls:
 11102 ;;		___awdiv
 11103 ;;		___awmod
 11104 ;;		_encode_digit
 11105 ;;		_set_segments
 11106 ;; This function is called by:
 11107 ;;		_initialize_digit
 11108 ;;		_initialize
 11109 ;;		_print_gram
 11110 ;; This function uses a non-reentrant model
 11111 ;;
 11112                           
 11113                           
 11114                           ;psect for function _print_digit
 11115  0ACF                     _print_digit:
 11116                           
 11117                           ;incstack = 0
 11118                           ; Regs used in _print_digit: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
 11119                           ;print_digit@p stored from wreg
 11120  0ACF  0020               	movlb	0	; select bank0
 11121  0AD0  00AA               	movwf	print_digit@p
 11122  0AD1                     l3462:
 11123                           
 11124                           ;tm1637.c: 193:     uint8_t data[] = {0xff, 0xff, 0xff, 0xff};
 11125  0AD1  0022               	movlb	2	; select bank2
 11126  0AD2  083D               	movf	(print_digit@F2820+3)^(0+256),w
 11127  0AD3  0020               	movlb	0	; select bank0
 11128  0AD4  00A9               	movwf	print_digit@data+3
 11129  0AD5  0022               	movlb	2	; select bank2
 11130  0AD6  083C               	movf	(print_digit@F2820+2)^(0+256),w
 11131  0AD7  0020               	movlb	0	; select bank0
 11132  0AD8  00A8               	movwf	print_digit@data+2
 11133  0AD9  0022               	movlb	2	; select bank2
 11134  0ADA  083B               	movf	(print_digit@F2820+1)^(0+256),w
 11135  0ADB  0020               	movlb	0	; select bank0
 11136  0ADC  00A7               	movwf	print_digit@data+1
 11137  0ADD  0022               	movlb	2	; select bank2
 11138  0ADE  083A               	movf	print_digit@F2820^(0+256),w
 11139  0ADF  0020               	movlb	0	; select bank0
 11140  0AE0  00A6               	movwf	print_digit@data
 11141                           
 11142                           ;tm1637.c: 196:     uint8_t tmp = number;
 11143  0AE1  087D               	movf	print_digit@number,w
 11144  0AE2  00A2               	movwf	??_print_digit
 11145  0AE3  0822               	movf	??_print_digit,w
 11146  0AE4  00AB               	movwf	print_digit@tmp
 11147  0AE5                     l3464:
 11148                           
 11149                           ;tm1637.c: 197:     data[0] = encode_digit(p, tmp / 1000);
 11150  0AE5  30E8               	movlw	232
 11151  0AE6  00F0               	movwf	___awdiv@divisor
 11152  0AE7  3003               	movlw	3
 11153  0AE8  00F1               	movwf	___awdiv@divisor+1
 11154  0AE9  082B               	movf	print_digit@tmp,w
 11155  0AEA  00A2               	movwf	??_print_digit
 11156  0AEB  01A3               	clrf	??_print_digit+1
 11157  0AEC  0822               	movf	??_print_digit,w
 11158  0AED  00F2               	movwf	___awdiv@dividend
 11159  0AEE  0823               	movf	??_print_digit+1,w
 11160  0AEF  00F3               	movwf	___awdiv@dividend+1
 11161  0AF0  3180  200B  318A   	fcall	___awdiv
 11162  0AF3  0870               	movf	?___awdiv,w
 11163  0AF4  0020               	movlb	0	; select bank0
 11164  0AF5  00A4               	movwf	??_print_digit+2
 11165  0AF6  0824               	movf	??_print_digit+2,w
 11166  0AF7  00F9               	movwf	encode_digit@digit
 11167  0AF8  082A               	movf	print_digit@p,w
 11168  0AF9  319E  26CE  318A   	fcall	_encode_digit
 11169  0AFC  0020               	movlb	0	; select bank0
 11170  0AFD  00A5               	movwf	??_print_digit+3
 11171  0AFE  0825               	movf	??_print_digit+3,w
 11172  0AFF  00A6               	movwf	print_digit@data
 11173  0B00                     l3466:
 11174                           
 11175                           ;tm1637.c: 198:     tmp %= 1000;
 11176  0B00  30E8               	movlw	232
 11177  0B01  00F0               	movwf	___awmod@divisor
 11178  0B02  3003               	movlw	3
 11179  0B03  00F1               	movwf	___awmod@divisor+1
 11180  0B04  082B               	movf	print_digit@tmp,w
 11181  0B05  00A2               	movwf	??_print_digit
 11182  0B06  01A3               	clrf	??_print_digit+1
 11183  0B07  0822               	movf	??_print_digit,w
 11184  0B08  00F2               	movwf	___awmod@dividend
 11185  0B09  0823               	movf	??_print_digit+1,w
 11186  0B0A  00F3               	movwf	___awmod@dividend+1
 11187  0B0B  3192  222C  318A   	fcall	___awmod
 11188  0B0E  0870               	movf	?___awmod,w
 11189  0B0F  0020               	movlb	0	; select bank0
 11190  0B10  00A4               	movwf	??_print_digit+2
 11191  0B11  0824               	movf	??_print_digit+2,w
 11192  0B12  00AB               	movwf	print_digit@tmp
 11193  0B13                     l3468:
 11194                           
 11195                           ;tm1637.c: 199:     data[1] = encode_digit(p, tmp / 100);
 11196  0B13  3064               	movlw	100
 11197  0B14  00F0               	movwf	___awdiv@divisor
 11198  0B15  3000               	movlw	0
 11199  0B16  00F1               	movwf	___awdiv@divisor+1
 11200  0B17  082B               	movf	print_digit@tmp,w
 11201  0B18  00A2               	movwf	??_print_digit
 11202  0B19  01A3               	clrf	??_print_digit+1
 11203  0B1A  0822               	movf	??_print_digit,w
 11204  0B1B  00F2               	movwf	___awdiv@dividend
 11205  0B1C  0823               	movf	??_print_digit+1,w
 11206  0B1D  00F3               	movwf	___awdiv@dividend+1
 11207  0B1E  3180  200B  318A   	fcall	___awdiv
 11208  0B21  0870               	movf	?___awdiv,w
 11209  0B22  0020               	movlb	0	; select bank0
 11210  0B23  00A4               	movwf	??_print_digit+2
 11211  0B24  0824               	movf	??_print_digit+2,w
 11212  0B25  00F9               	movwf	encode_digit@digit
 11213  0B26  082A               	movf	print_digit@p,w
 11214  0B27  319E  26CE  318A   	fcall	_encode_digit
 11215  0B2A  0020               	movlb	0	; select bank0
 11216  0B2B  00A5               	movwf	??_print_digit+3
 11217  0B2C  0825               	movf	??_print_digit+3,w
 11218  0B2D  00A7               	movwf	print_digit@data+1
 11219  0B2E                     l3470:
 11220                           
 11221                           ;tm1637.c: 200:     tmp %= 100;
 11222  0B2E  3064               	movlw	100
 11223  0B2F  00F0               	movwf	___awmod@divisor
 11224  0B30  3000               	movlw	0
 11225  0B31  00F1               	movwf	___awmod@divisor+1
 11226  0B32  082B               	movf	print_digit@tmp,w
 11227  0B33  00A2               	movwf	??_print_digit
 11228  0B34  01A3               	clrf	??_print_digit+1
 11229  0B35  0822               	movf	??_print_digit,w
 11230  0B36  00F2               	movwf	___awmod@dividend
 11231  0B37  0823               	movf	??_print_digit+1,w
 11232  0B38  00F3               	movwf	___awmod@dividend+1
 11233  0B39  3192  222C  318A   	fcall	___awmod
 11234  0B3C  0870               	movf	?___awmod,w
 11235  0B3D  0020               	movlb	0	; select bank0
 11236  0B3E  00A4               	movwf	??_print_digit+2
 11237  0B3F  0824               	movf	??_print_digit+2,w
 11238  0B40  00AB               	movwf	print_digit@tmp
 11239  0B41                     l3472:
 11240                           
 11241                           ;tm1637.c: 201:     data[2] = encode_digit(p, tmp / 10);
 11242  0B41  300A               	movlw	10
 11243  0B42  00F0               	movwf	___awdiv@divisor
 11244  0B43  3000               	movlw	0
 11245  0B44  00F1               	movwf	___awdiv@divisor+1
 11246  0B45  082B               	movf	print_digit@tmp,w
 11247  0B46  00A2               	movwf	??_print_digit
 11248  0B47  01A3               	clrf	??_print_digit+1
 11249  0B48  0822               	movf	??_print_digit,w
 11250  0B49  00F2               	movwf	___awdiv@dividend
 11251  0B4A  0823               	movf	??_print_digit+1,w
 11252  0B4B  00F3               	movwf	___awdiv@dividend+1
 11253  0B4C  3180  200B  318A   	fcall	___awdiv
 11254  0B4F  0870               	movf	?___awdiv,w
 11255  0B50  0020               	movlb	0	; select bank0
 11256  0B51  00A4               	movwf	??_print_digit+2
 11257  0B52  0824               	movf	??_print_digit+2,w
 11258  0B53  00F9               	movwf	encode_digit@digit
 11259  0B54  082A               	movf	print_digit@p,w
 11260  0B55  319E  26CE  318A   	fcall	_encode_digit
 11261  0B58  0020               	movlb	0	; select bank0
 11262  0B59  00A5               	movwf	??_print_digit+3
 11263  0B5A  0825               	movf	??_print_digit+3,w
 11264  0B5B  00A8               	movwf	print_digit@data+2
 11265  0B5C                     l3474:
 11266                           
 11267                           ;tm1637.c: 202:     tmp %= 10;
 11268  0B5C  300A               	movlw	10
 11269  0B5D  00F0               	movwf	___awmod@divisor
 11270  0B5E  3000               	movlw	0
 11271  0B5F  00F1               	movwf	___awmod@divisor+1
 11272  0B60  082B               	movf	print_digit@tmp,w
 11273  0B61  00A2               	movwf	??_print_digit
 11274  0B62  01A3               	clrf	??_print_digit+1
 11275  0B63  0822               	movf	??_print_digit,w
 11276  0B64  00F2               	movwf	___awmod@dividend
 11277  0B65  0823               	movf	??_print_digit+1,w
 11278  0B66  00F3               	movwf	___awmod@dividend+1
 11279  0B67  3192  222C  318A   	fcall	___awmod
 11280  0B6A  0870               	movf	?___awmod,w
 11281  0B6B  0020               	movlb	0	; select bank0
 11282  0B6C  00A4               	movwf	??_print_digit+2
 11283  0B6D  0824               	movf	??_print_digit+2,w
 11284  0B6E  00AB               	movwf	print_digit@tmp
 11285  0B6F                     l3476:
 11286                           
 11287                           ;tm1637.c: 203:     data[3] = encode_digit(p, tmp);
 11288  0B6F  082B               	movf	print_digit@tmp,w
 11289  0B70  00A2               	movwf	??_print_digit
 11290  0B71  0822               	movf	??_print_digit,w
 11291  0B72  00F9               	movwf	encode_digit@digit
 11292  0B73  082A               	movf	print_digit@p,w
 11293  0B74  319E  26CE  318A   	fcall	_encode_digit
 11294  0B77  0020               	movlb	0	; select bank0
 11295  0B78  00A3               	movwf	??_print_digit+1
 11296  0B79  0823               	movf	??_print_digit+1,w
 11297  0B7A  00A9               	movwf	print_digit@data+3
 11298  0B7B                     l3478:
 11299                           
 11300                           ;tm1637.c: 205:     set_segments(p, data, 4, 0);
 11301  0B7B  3026               	movlw	(low (print_digit@data| 0))& (0+255)
 11302  0B7C  00A2               	movwf	??_print_digit
 11303  0B7D  0822               	movf	??_print_digit,w
 11304  0B7E  00F8               	movwf	set_segments@segments
 11305  0B7F  3004               	movlw	4
 11306  0B80  00A3               	movwf	??_print_digit+1
 11307  0B81  0823               	movf	??_print_digit+1,w
 11308  0B82  00F9               	movwf	set_segments@length
 11309  0B83  01FA               	clrf	set_segments@pos
 11310  0B84  082A               	movf	print_digit@p,w
 11311  0B85  3193  23DF  318A   	fcall	_set_segments
 11312  0B88                     l252:
 11313  0B88  0008               	return
 11314  0B89                     __end_of_print_digit:
 11315                           
 11316                           	psect	text43
 11317  13DF                     __ptext43:	
 11318 ;; *************** function _set_segments *****************
 11319 ;; Defined at:
 11320 ;;		line 147 in file "tm1637.c"
 11321 ;; Parameters:    Size  Location     Type
 11322 ;;  p               1    wreg     PTR struct .
 11323 ;;		 -> NULL(0), main@tm1637(2), 
 11324 ;;  segments        1    8[COMMON] PTR const unsigned char 
 11325 ;;		 -> print_digit@data(4), clear_segment@data(4), 
 11326 ;;  length          1    9[COMMON] unsigned char 
 11327 ;;  pos             1   10[COMMON] unsigned char 
 11328 ;; Auto vars:     Size  Location     Type
 11329 ;;  p               1    1[BANK0 ] PTR struct .
 11330 ;;		 -> NULL(0), main@tm1637(2), 
 11331 ;;  k               1    0[BANK0 ] unsigned char 
 11332 ;; Return value:  Size  Location     Type
 11333 ;;                  1    wreg      void 
 11334 ;; Registers used:
 11335 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 11336 ;; Tracked objects:
 11337 ;;		On entry : 0/0
 11338 ;;		On exit  : 0/0
 11339 ;;		Unchanged: 0/0
 11340 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 11341 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11342 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11343 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11344 ;;      Totals:         5       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11345 ;;Total ram usage:        7 bytes
 11346 ;; Hardware stack levels used: 1
 11347 ;; Hardware stack levels required when called: 2
 11348 ;; This function calls:
 11349 ;;		_start_segment
 11350 ;;		_stop_segment
 11351 ;;		_write_byte
 11352 ;; This function is called by:
 11353 ;;		_print_digit
 11354 ;;		_clear_segment
 11355 ;; This function uses a non-reentrant model
 11356 ;;
 11357                           
 11358                           
 11359                           ;psect for function _set_segments
 11360  13DF                     _set_segments:
 11361                           
 11362                           ;incstack = 0
 11363                           ; Regs used in _set_segments: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
 11364                           ;set_segments@p stored from wreg
 11365  13DF  0020               	movlb	0	; select bank0
 11366  13E0  00A1               	movwf	set_segments@p
 11367  13E1                     l2952:
 11368                           
 11369                           ;tm1637.c: 149:     start_segment(p);
 11370  13E1  0821               	movf	set_segments@p,w
 11371  13E2  319F  27CC  3193   	fcall	_start_segment
 11372                           
 11373                           ;tm1637.c: 150:     write_byte(p, 0x40);
 11374  13E5  3040               	movlw	64
 11375  13E6  00FB               	movwf	??_set_segments
 11376  13E7  087B               	movf	??_set_segments,w
 11377  13E8  00F2               	movwf	write_byte@b
 11378  13E9  0020               	movlb	0	; select bank0
 11379  13EA  0821               	movf	set_segments@p,w
 11380  13EB  3192  227F  3193   	fcall	_write_byte
 11381                           
 11382                           ;tm1637.c: 151:     stop_segment(p);
 11383  13EE  0020               	movlb	0	; select bank0
 11384  13EF  0821               	movf	set_segments@p,w
 11385  13F0  319F  27E6  3193   	fcall	_stop_segment
 11386                           
 11387                           ;tm1637.c: 154:     start_segment(p);
 11388  13F3  0020               	movlb	0	; select bank0
 11389  13F4  0821               	movf	set_segments@p,w
 11390  13F5  319F  27CC  3193   	fcall	_start_segment
 11391                           
 11392                           ;tm1637.c: 155:     write_byte(p, 0xC0 + (pos & 0x03));
 11393  13F8  087A               	movf	set_segments@pos,w
 11394  13F9  3903               	andlw	3
 11395  13FA  3EC0               	addlw	192
 11396  13FB  00FB               	movwf	??_set_segments
 11397  13FC  087B               	movf	??_set_segments,w
 11398  13FD  00F2               	movwf	write_byte@b
 11399  13FE  0020               	movlb	0	; select bank0
 11400  13FF  0821               	movf	set_segments@p,w
 11401  1400  3192  227F  3193   	fcall	_write_byte
 11402  1403                     l2954:
 11403                           
 11404                           ;tm1637.c: 158:     for(uint8_t k = 0; k < length; k++){
 11405  1403  0020               	movlb	0	; select bank0
 11406  1404  01A0               	clrf	set_segments@k
 11407  1405  2C19               	goto	l2960
 11408  1406                     l2956:
 11409                           
 11410                           ;tm1637.c: 159:         write_byte(p, segments[k]);
 11411  1406  0820               	movf	set_segments@k,w
 11412  1407  0778               	addwf	set_segments@segments,w
 11413  1408  00FB               	movwf	??_set_segments
 11414  1409  087B               	movf	??_set_segments,w
 11415  140A  0086               	movwf	6
 11416  140B  0187               	clrf	7
 11417  140C  0801               	movf	1,w
 11418  140D  00FC               	movwf	??_set_segments+1
 11419  140E  087C               	movf	??_set_segments+1,w
 11420  140F  00F2               	movwf	write_byte@b
 11421  1410  0821               	movf	set_segments@p,w
 11422  1411  3192  227F  3193   	fcall	_write_byte
 11423  1414                     l2958:
 11424                           
 11425                           ;tm1637.c: 160:     }
 11426  1414  3001               	movlw	1
 11427  1415  00FB               	movwf	??_set_segments
 11428  1416  087B               	movf	??_set_segments,w
 11429  1417  0020               	movlb	0	; select bank0
 11430  1418  07A0               	addwf	set_segments@k,f
 11431  1419                     l2960:
 11432  1419  0879               	movf	set_segments@length,w
 11433  141A  0220               	subwf	set_segments@k,w
 11434  141B  1C03               	skipc
 11435  141C  2C1E               	goto	u3201
 11436  141D  2C1F               	goto	u3200
 11437  141E                     u3201:
 11438  141E  2C06               	goto	l2956
 11439  141F                     u3200:
 11440  141F                     l2962:
 11441                           
 11442                           ;tm1637.c: 162:     stop_segment(p);
 11443  141F  0821               	movf	set_segments@p,w
 11444  1420  319F  27E6  3193   	fcall	_stop_segment
 11445                           
 11446                           ;tm1637.c: 165:     start_segment(p);
 11447  1423  0020               	movlb	0	; select bank0
 11448  1424  0821               	movf	set_segments@p,w
 11449  1425  319F  27CC  3193   	fcall	_start_segment
 11450                           
 11451                           ;tm1637.c: 166:     write_byte(p, 0x80 + (m_brightness & 0x0f));
 11452  1428  0022               	movlb	2	; select bank2
 11453  1429  0856               	movf	_m_brightness^(0+256),w
 11454  142A  390F               	andlw	15
 11455  142B  3E80               	addlw	128
 11456  142C  00FB               	movwf	??_set_segments
 11457  142D  087B               	movf	??_set_segments,w
 11458  142E  00F2               	movwf	write_byte@b
 11459  142F  0020               	movlb	0	; select bank0
 11460  1430  0821               	movf	set_segments@p,w
 11461  1431  3192  227F  3193   	fcall	_write_byte
 11462                           
 11463                           ;tm1637.c: 167:     stop_segment(p);
 11464  1434  0020               	movlb	0	; select bank0
 11465  1435  0821               	movf	set_segments@p,w
 11466  1436  319F  27E6  3193   	fcall	_stop_segment
 11467  1439                     l236:
 11468  1439  0008               	return
 11469  143A                     __end_of_set_segments:
 11470                           
 11471                           	psect	text44
 11472  127F                     __ptext44:	
 11473 ;; *************** function _write_byte *****************
 11474 ;; Defined at:
 11475 ;;		line 78 in file "tm1637.c"
 11476 ;; Parameters:    Size  Location     Type
 11477 ;;  p               1    wreg     PTR struct .
 11478 ;;		 -> NULL(0), main@tm1637(2), 
 11479 ;;  b               1    2[COMMON] unsigned char 
 11480 ;; Auto vars:     Size  Location     Type
 11481 ;;  p               1    7[COMMON] PTR struct .
 11482 ;;		 -> NULL(0), main@tm1637(2), 
 11483 ;;  i               1    6[COMMON] unsigned char 
 11484 ;;  data            1    5[COMMON] unsigned char 
 11485 ;;  ack             1    4[COMMON] unsigned char 
 11486 ;; Return value:  Size  Location     Type
 11487 ;;                  1    wreg      unsigned char 
 11488 ;; Registers used:
 11489 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 11490 ;; Tracked objects:
 11491 ;;		On entry : 0/0
 11492 ;;		On exit  : 0/0
 11493 ;;		Unchanged: 0/0
 11494 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 11495 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11496 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11497 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11498 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11499 ;;Total ram usage:        6 bytes
 11500 ;; Hardware stack levels used: 1
 11501 ;; Hardware stack levels required when called: 1
 11502 ;; This function calls:
 11503 ;;		_CLK_SET_HIGH
 11504 ;;		_CLK_SET_LOW
 11505 ;;		_CLK_SET_OUTPUT
 11506 ;;		_DIO_SET_HIGH
 11507 ;;		_DIO_SET_INPUT
 11508 ;;		_DIO_SET_LOW
 11509 ;;		_DIO_SET_OUTPUT
 11510 ;;		_get_DIO_PIN_value
 11511 ;; This function is called by:
 11512 ;;		_set_segments
 11513 ;; This function uses a non-reentrant model
 11514 ;;
 11515                           
 11516                           
 11517                           ;psect for function _write_byte
 11518  127F                     _write_byte:
 11519                           
 11520                           ;incstack = 0
 11521                           ; Regs used in _write_byte: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
 11522                           ;write_byte@p stored from wreg
 11523  127F  00F7               	movwf	write_byte@p
 11524  1280                     l2794:
 11525                           
 11526                           ;tm1637.c: 79:     uint8_t data = b;
 11527  1280  0872               	movf	write_byte@b,w
 11528  1281  00F3               	movwf	??_write_byte
 11529  1282  0873               	movf	??_write_byte,w
 11530  1283  00F5               	movwf	write_byte@data
 11531  1284                     l2796:
 11532                           
 11533                           ;tm1637.c: 82:     CLK_SET_OUTPUT(p);
 11534  1284  0877               	movf	write_byte@p,w
 11535  1285  319F  2708  3192   	fcall	_CLK_SET_OUTPUT
 11536  1288                     l2798:
 11537                           
 11538                           ;tm1637.c: 83:     for(uint8_t i = 0; i < 8; i++){
 11539  1288  01F6               	clrf	write_byte@i
 11540  1289                     l2804:
 11541                           
 11542                           ;tm1637.c: 85:         CLK_SET_LOW(p);
 11543  1289  0877               	movf	write_byte@p,w
 11544  128A  319E  26FE  3192   	fcall	_CLK_SET_LOW
 11545  128D                     l2806:
 11546                           
 11547                           ;tm1637.c: 87:         if(data & 0x01){
 11548  128D  1C75               	btfss	write_byte@data,0
 11549  128E  2A90               	goto	u2891
 11550  128F  2A91               	goto	u2890
 11551  1290                     u2891:
 11552  1290  2A96               	goto	l2810
 11553  1291                     u2890:
 11554  1291                     l2808:
 11555                           
 11556                           ;tm1637.c: 89:             DIO_SET_HIGH(p);
 11557  1291  0877               	movf	write_byte@p,w
 11558  1292  319F  2712  3192   	fcall	_DIO_SET_HIGH
 11559                           
 11560                           ;tm1637.c: 90:         }else{
 11561  1295  2A9A               	goto	l223
 11562  1296                     l2810:
 11563                           
 11564                           ;tm1637.c: 92:             DIO_SET_LOW(p);
 11565  1296  0877               	movf	write_byte@p,w
 11566  1297  319F  271C  3192   	fcall	_DIO_SET_LOW
 11567  129A                     l223:	
 11568                           ;tm1637.c: 93:         }
 11569                           
 11570                           
 11571                           ;tm1637.c: 96:         CLK_SET_HIGH(p);
 11572  129A  0877               	movf	write_byte@p,w
 11573  129B  319E  26F4  3192   	fcall	_CLK_SET_HIGH
 11574  129E                     l2812:
 11575                           
 11576                           ;tm1637.c: 98:         data = data >> 1;
 11577  129E  3675               	lsrf	write_byte@data,w
 11578  129F  00F3               	movwf	??_write_byte
 11579  12A0  0873               	movf	??_write_byte,w
 11580  12A1  00F5               	movwf	write_byte@data
 11581  12A2                     l2814:
 11582                           
 11583                           ;tm1637.c: 99:     }
 11584  12A2  3001               	movlw	1
 11585  12A3  00F3               	movwf	??_write_byte
 11586  12A4  0873               	movf	??_write_byte,w
 11587  12A5  07F6               	addwf	write_byte@i,f
 11588  12A6                     l2816:
 11589  12A6  3008               	movlw	8
 11590  12A7  0276               	subwf	write_byte@i,w
 11591  12A8  1C03               	skipc
 11592  12A9  2AAB               	goto	u2901
 11593  12AA  2AAC               	goto	u2900
 11594  12AB                     u2901:
 11595  12AB  2A89               	goto	l2804
 11596  12AC                     u2900:
 11597  12AC                     l2818:
 11598                           
 11599                           ;tm1637.c: 104:     CLK_SET_LOW(p);
 11600  12AC  0877               	movf	write_byte@p,w
 11601  12AD  319E  26FE  3192   	fcall	_CLK_SET_LOW
 11602                           
 11603                           ;tm1637.c: 105:     DIO_SET_HIGH(p);
 11604  12B0  0877               	movf	write_byte@p,w
 11605  12B1  319F  2712  3192   	fcall	_DIO_SET_HIGH
 11606                           
 11607                           ;tm1637.c: 108:     CLK_SET_HIGH(p);
 11608  12B4  0877               	movf	write_byte@p,w
 11609  12B5  319E  26F4  3192   	fcall	_CLK_SET_HIGH
 11610                           
 11611                           ;tm1637.c: 111:     DIO_SET_INPUT(p);
 11612  12B8  0877               	movf	write_byte@p,w
 11613  12B9  319F  2730  3192   	fcall	_DIO_SET_INPUT
 11614                           
 11615                           ;tm1637.c: 113:     uint8_t ack = get_DIO_PIN_value(p);
 11616  12BC  0877               	movf	write_byte@p,w
 11617  12BD  3194  24FD  3192   	fcall	_get_DIO_PIN_value
 11618  12C0  00F3               	movwf	??_write_byte
 11619  12C1  0873               	movf	??_write_byte,w
 11620  12C2  00F4               	movwf	write_byte@ack
 11621  12C3                     l2820:
 11622                           
 11623                           ;tm1637.c: 114:     if(ack == 0){
 11624  12C3  0874               	movf	write_byte@ack,w
 11625  12C4  1D03               	btfss	3,2
 11626  12C5  2AC7               	goto	u2911
 11627  12C6  2AC8               	goto	u2910
 11628  12C7                     u2911:
 11629  12C7  2AD0               	goto	l224
 11630  12C8                     u2910:
 11631  12C8                     l2822:
 11632                           
 11633                           ;tm1637.c: 116:         DIO_SET_OUTPUT(p);
 11634  12C8  0877               	movf	write_byte@p,w
 11635  12C9  319F  2726  3192   	fcall	_DIO_SET_OUTPUT
 11636                           
 11637                           ;tm1637.c: 119:         DIO_SET_LOW(p);
 11638  12CC  0877               	movf	write_byte@p,w
 11639  12CD  319F  271C  3192   	fcall	_DIO_SET_LOW
 11640  12D0                     l224:	
 11641                           ;tm1637.c: 120:     }
 11642                           
 11643                           
 11644                           ;tm1637.c: 123:     DIO_SET_OUTPUT(p);
 11645  12D0  0877               	movf	write_byte@p,w
 11646  12D1  319F  2726  3192   	fcall	_DIO_SET_OUTPUT
 11647  12D4                     l225:
 11648  12D4  0008               	return
 11649  12D5                     __end_of_write_byte:
 11650                           
 11651                           	psect	text45
 11652  14FD                     __ptext45:	
 11653 ;; *************** function _get_DIO_PIN_value *****************
 11654 ;; Defined at:
 11655 ;;		line 67 in file "tm1637.c"
 11656 ;; Parameters:    Size  Location     Type
 11657 ;;  p               1    wreg     PTR struct .
 11658 ;;		 -> NULL(0), main@tm1637(2), 
 11659 ;; Auto vars:     Size  Location     Type
 11660 ;;  p               1    1[COMMON] PTR struct .
 11661 ;;		 -> NULL(0), main@tm1637(2), 
 11662 ;; Return value:  Size  Location     Type
 11663 ;;                  1    wreg      unsigned char 
 11664 ;; Registers used:
 11665 ;;		wreg, fsr1l, fsr1h, status,2, status,0
 11666 ;; Tracked objects:
 11667 ;;		On entry : 0/0
 11668 ;;		On exit  : 0/0
 11669 ;;		Unchanged: 0/0
 11670 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 11671 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11672 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11673 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11674 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11675 ;;Total ram usage:        2 bytes
 11676 ;; Hardware stack levels used: 1
 11677 ;; This function calls:
 11678 ;;		Nothing
 11679 ;; This function is called by:
 11680 ;;		_write_byte
 11681 ;; This function uses a non-reentrant model
 11682 ;;
 11683                           
 11684                           
 11685                           ;psect for function _get_DIO_PIN_value
 11686  14FD                     _get_DIO_PIN_value:
 11687                           
 11688                           ;incstack = 0
 11689                           ; Regs used in _get_DIO_PIN_value: [wreg+fsr1l+fsr1h+status,2+status,0]
 11690                           ;get_DIO_PIN_value@p stored from wreg
 11691  14FD  00F1               	movwf	get_DIO_PIN_value@p
 11692  14FE                     l2610:
 11693                           
 11694                           ;tm1637.c: 68:     if(p->dat_pin == 0x01){ return PORTBbits.RB0; }
 11695  14FE  0A71               	incf	get_DIO_PIN_value@p,w
 11696  14FF  0086               	movwf	6
 11697  1500  0187               	clrf	7
 11698  1501  0301               	decf	1,w
 11699  1502  1D03               	btfss	3,2
 11700  1503  2D05               	goto	u2461
 11701  1504  2D06               	goto	u2460
 11702  1505                     u2461:
 11703  1505  2D0A               	goto	l2616
 11704  1506                     u2460:
 11705  1506                     l2612:
 11706  1506  0020               	movlb	0	; select bank0
 11707  1507  080D               	movf	13,w	;volatile
 11708  1508  3901               	andlw	1
 11709  1509  2D6C               	goto	l210
 11710  150A                     l2616:
 11711                           
 11712                           ;tm1637.c: 69:     if(p->dat_pin == 0x02){ return PORTBbits.RB1; }
 11713  150A  0A71               	incf	get_DIO_PIN_value@p,w
 11714  150B  0086               	movwf	6
 11715  150C  0187               	clrf	7
 11716  150D  3002               	movlw	2
 11717  150E  0601               	xorwf	1,w
 11718  150F  1D03               	btfss	3,2
 11719  1510  2D12               	goto	u2471
 11720  1511  2D13               	goto	u2470
 11721  1512                     u2471:
 11722  1512  2D17               	goto	l2622
 11723  1513                     u2470:
 11724  1513                     l2618:
 11725  1513  0020               	movlb	0	; select bank0
 11726  1514  0C0D               	rrf	13,w	;volatile
 11727  1515  3901               	andlw	1
 11728  1516  2D6C               	goto	l210
 11729  1517                     l2622:
 11730                           
 11731                           ;tm1637.c: 70:     if(p->dat_pin == 0x04){ return PORTBbits.RB2; }
 11732  1517  0A71               	incf	get_DIO_PIN_value@p,w
 11733  1518  0086               	movwf	6
 11734  1519  0187               	clrf	7
 11735  151A  3004               	movlw	4
 11736  151B  0601               	xorwf	1,w
 11737  151C  1D03               	btfss	3,2
 11738  151D  2D1F               	goto	u2481
 11739  151E  2D20               	goto	u2480
 11740  151F                     u2481:
 11741  151F  2D25               	goto	l2628
 11742  1520                     u2480:
 11743  1520                     l2624:
 11744  1520  0020               	movlb	0	; select bank0
 11745  1521  0C0D               	rrf	13,w	;volatile
 11746  1522  0C89               	rrf	9,f
 11747  1523  3901               	andlw	1
 11748  1524  2D6C               	goto	l210
 11749  1525                     l2628:
 11750                           
 11751                           ;tm1637.c: 71:     if(p->dat_pin == 0x08){ return PORTBbits.RB3; }
 11752  1525  0A71               	incf	get_DIO_PIN_value@p,w
 11753  1526  0086               	movwf	6
 11754  1527  0187               	clrf	7
 11755  1528  3008               	movlw	8
 11756  1529  0601               	xorwf	1,w
 11757  152A  1D03               	btfss	3,2
 11758  152B  2D2D               	goto	u2491
 11759  152C  2D2E               	goto	u2490
 11760  152D                     u2491:
 11761  152D  2D35               	goto	l2634
 11762  152E                     u2490:
 11763  152E                     l2630:
 11764  152E  0020               	movlb	0	; select bank0
 11765  152F  0C0D               	rrf	13,w	;volatile
 11766  1530  00F0               	movwf	??_get_DIO_PIN_value
 11767  1531  0CF0               	rrf	??_get_DIO_PIN_value,f
 11768  1532  0C70               	rrf	??_get_DIO_PIN_value,w
 11769  1533  3901               	andlw	1
 11770  1534  2D6C               	goto	l210
 11771  1535                     l2634:
 11772                           
 11773                           ;tm1637.c: 72:     if(p->dat_pin == 0x10){ return PORTBbits.RB4; }
 11774  1535  0A71               	incf	get_DIO_PIN_value@p,w
 11775  1536  0086               	movwf	6
 11776  1537  0187               	clrf	7
 11777  1538  3010               	movlw	16
 11778  1539  0601               	xorwf	1,w
 11779  153A  1D03               	btfss	3,2
 11780  153B  2D3D               	goto	u2501
 11781  153C  2D3E               	goto	u2500
 11782  153D                     u2501:
 11783  153D  2D42               	goto	l2640
 11784  153E                     u2500:
 11785  153E                     l2636:
 11786  153E  0020               	movlb	0	; select bank0
 11787  153F  0E0D               	swapf	13,w	;volatile
 11788  1540  3901               	andlw	1
 11789  1541  2D6C               	goto	l210
 11790  1542                     l2640:
 11791                           
 11792                           ;tm1637.c: 73:     if(p->dat_pin == 0x20){ return PORTBbits.RB5; }
 11793  1542  0A71               	incf	get_DIO_PIN_value@p,w
 11794  1543  0086               	movwf	6
 11795  1544  0187               	clrf	7
 11796  1545  3020               	movlw	32
 11797  1546  0601               	xorwf	1,w
 11798  1547  1D03               	btfss	3,2
 11799  1548  2D4A               	goto	u2511
 11800  1549  2D4B               	goto	u2510
 11801  154A                     u2511:
 11802  154A  2D50               	goto	l2646
 11803  154B                     u2510:
 11804  154B                     l2642:
 11805  154B  0020               	movlb	0	; select bank0
 11806  154C  0E0D               	swapf	13,w	;volatile
 11807  154D  0C89               	rrf	9,f
 11808  154E  3901               	andlw	1
 11809  154F  2D6C               	goto	l210
 11810  1550                     l2646:
 11811                           
 11812                           ;tm1637.c: 74:     if(p->dat_pin == 0x40){ return PORTBbits.RB6; }
 11813  1550  0A71               	incf	get_DIO_PIN_value@p,w
 11814  1551  0086               	movwf	6
 11815  1552  0187               	clrf	7
 11816  1553  3040               	movlw	64
 11817  1554  0601               	xorwf	1,w
 11818  1555  1D03               	btfss	3,2
 11819  1556  2D58               	goto	u2521
 11820  1557  2D59               	goto	u2520
 11821  1558                     u2521:
 11822  1558  2D5F               	goto	l2652
 11823  1559                     u2520:
 11824  1559                     l2648:
 11825  1559  0020               	movlb	0	; select bank0
 11826  155A  0E0D               	swapf	13,w	;volatile
 11827  155B  0C89               	rrf	9,f
 11828  155C  0C89               	rrf	9,f
 11829  155D  3901               	andlw	1
 11830  155E  2D6C               	goto	l210
 11831  155F                     l2652:
 11832                           
 11833                           ;tm1637.c: 75:     if(p->dat_pin == 0x80){ return PORTBbits.RB7; }
 11834  155F  0A71               	incf	get_DIO_PIN_value@p,w
 11835  1560  0086               	movwf	6
 11836  1561  0187               	clrf	7
 11837  1562  3080               	movlw	128
 11838  1563  0601               	xorwf	1,w
 11839  1564  1D03               	btfss	3,2
 11840  1565  2D67               	goto	u2531
 11841  1566  2D68               	goto	u2530
 11842  1567                     u2531:
 11843  1567  2D6C               	goto	l210
 11844  1568                     u2530:
 11845  1568                     l2654:
 11846  1568  0020               	movlb	0	; select bank0
 11847  1569  0D0D               	rlf	13,w	;volatile
 11848  156A  0D0D               	rlf	13,w	;volatile
 11849  156B  3901               	andlw	1
 11850  156C                     l210:
 11851  156C  0008               	return
 11852  156D                     __end_of_get_DIO_PIN_value:
 11853                           
 11854                           	psect	text46
 11855  1F30                     __ptext46:	
 11856 ;; *************** function _DIO_SET_INPUT *****************
 11857 ;; Defined at:
 11858 ;;		line 32 in file "tm1637.c"
 11859 ;; Parameters:    Size  Location     Type
 11860 ;;  p               1    wreg     PTR struct .
 11861 ;;		 -> NULL(0), main@tm1637(2), 
 11862 ;; Auto vars:     Size  Location     Type
 11863 ;;  p               1    1[COMMON] PTR struct .
 11864 ;;		 -> NULL(0), main@tm1637(2), 
 11865 ;; Return value:  Size  Location     Type
 11866 ;;                  1    wreg      void 
 11867 ;; Registers used:
 11868 ;;		wreg, fsr1l, fsr1h, status,2, status,0
 11869 ;; Tracked objects:
 11870 ;;		On entry : 0/0
 11871 ;;		On exit  : 0/0
 11872 ;;		Unchanged: 0/0
 11873 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 11874 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11875 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11876 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11877 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11878 ;;Total ram usage:        2 bytes
 11879 ;; Hardware stack levels used: 1
 11880 ;; This function calls:
 11881 ;;		Nothing
 11882 ;; This function is called by:
 11883 ;;		_write_byte
 11884 ;; This function uses a non-reentrant model
 11885 ;;
 11886                           
 11887                           
 11888                           ;psect for function _DIO_SET_INPUT
 11889  1F30                     _DIO_SET_INPUT:
 11890                           
 11891                           ;incstack = 0
 11892                           ; Regs used in _DIO_SET_INPUT: [wreg+fsr1l+fsr1h+status,2+status,0]
 11893                           ;DIO_SET_INPUT@p stored from wreg
 11894  1F30  00F1               	movwf	DIO_SET_INPUT@p
 11895  1F31                     l2604:
 11896  1F31  0A71               	incf	DIO_SET_INPUT@p,w
 11897  1F32  0086               	movwf	6
 11898  1F33  0187               	clrf	7
 11899  1F34  0801               	movf	1,w
 11900  1F35  00F0               	movwf	??_DIO_SET_INPUT
 11901  1F36  0870               	movf	??_DIO_SET_INPUT,w
 11902  1F37  0021               	movlb	1	; select bank1
 11903  1F38  048D               	iorwf	13,f	;volatile
 11904  1F39                     l194:
 11905  1F39  0008               	return
 11906  1F3A                     __end_of_DIO_SET_INPUT:
 11907                           
 11908                           	psect	text47
 11909  1FE6                     __ptext47:	
 11910 ;; *************** function _stop_segment *****************
 11911 ;; Defined at:
 11912 ;;		line 53 in file "tm1637.c"
 11913 ;; Parameters:    Size  Location     Type
 11914 ;;  p               1    wreg     PTR struct .
 11915 ;;		 -> NULL(0), main@tm1637(2), 
 11916 ;; Auto vars:     Size  Location     Type
 11917 ;;  p               1    2[COMMON] PTR struct .
 11918 ;;		 -> NULL(0), main@tm1637(2), 
 11919 ;; Return value:  Size  Location     Type
 11920 ;;                  1    wreg      void 
 11921 ;; Registers used:
 11922 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 11923 ;; Tracked objects:
 11924 ;;		On entry : 0/0
 11925 ;;		On exit  : 0/0
 11926 ;;		Unchanged: 0/0
 11927 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 11928 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11929 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11930 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11931 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11932 ;;Total ram usage:        1 bytes
 11933 ;; Hardware stack levels used: 1
 11934 ;; Hardware stack levels required when called: 1
 11935 ;; This function calls:
 11936 ;;		_CLK_SET_HIGH
 11937 ;;		_CLK_SET_LOW
 11938 ;;		_CLK_SET_OUTPUT
 11939 ;;		_DIO_SET_HIGH
 11940 ;;		_DIO_SET_LOW
 11941 ;;		_DIO_SET_OUTPUT
 11942 ;; This function is called by:
 11943 ;;		_set_segments
 11944 ;; This function uses a non-reentrant model
 11945 ;;
 11946                           
 11947                           
 11948                           ;psect for function _stop_segment
 11949  1FE6                     _stop_segment:
 11950                           
 11951                           ;incstack = 0
 11952                           ; Regs used in _stop_segment: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
 11953                           ;stop_segment@p stored from wreg
 11954  1FE6  00F2               	movwf	stop_segment@p
 11955  1FE7                     l2792:
 11956                           
 11957                           ;tm1637.c: 55:     DIO_SET_OUTPUT(p);
 11958  1FE7  0872               	movf	stop_segment@p,w
 11959  1FE8  319F  2726  319F   	fcall	_DIO_SET_OUTPUT
 11960                           
 11961                           ;tm1637.c: 56:     CLK_SET_OUTPUT(p);
 11962  1FEB  0872               	movf	stop_segment@p,w
 11963  1FEC  319F  2708  319F   	fcall	_CLK_SET_OUTPUT
 11964                           
 11965                           ;tm1637.c: 59:     CLK_SET_LOW(p);
 11966  1FEF  0872               	movf	stop_segment@p,w
 11967  1FF0  319E  26FE  319F   	fcall	_CLK_SET_LOW
 11968                           
 11969                           ;tm1637.c: 60:     DIO_SET_LOW(p);
 11970  1FF3  0872               	movf	stop_segment@p,w
 11971  1FF4  319F  271C  319F   	fcall	_DIO_SET_LOW
 11972                           
 11973                           ;tm1637.c: 63:     CLK_SET_HIGH(p);
 11974  1FF7  0872               	movf	stop_segment@p,w
 11975  1FF8  319E  26F4  319F   	fcall	_CLK_SET_HIGH
 11976                           
 11977                           ;tm1637.c: 64:     DIO_SET_HIGH(p);
 11978  1FFB  0872               	movf	stop_segment@p,w
 11979  1FFC  319F  2712  319F   	fcall	_DIO_SET_HIGH
 11980  1FFF                     l206:
 11981  1FFF  0008               	return
 11982  2000                     __end_of_stop_segment:
 11983                           
 11984                           	psect	text48
 11985  1FCC                     __ptext48:	
 11986 ;; *************** function _start_segment *****************
 11987 ;; Defined at:
 11988 ;;		line 39 in file "tm1637.c"
 11989 ;; Parameters:    Size  Location     Type
 11990 ;;  p               1    wreg     PTR struct .
 11991 ;;		 -> NULL(0), main@tm1637(2), 
 11992 ;; Auto vars:     Size  Location     Type
 11993 ;;  p               1    2[COMMON] PTR struct .
 11994 ;;		 -> NULL(0), main@tm1637(2), 
 11995 ;; Return value:  Size  Location     Type
 11996 ;;                  1    wreg      void 
 11997 ;; Registers used:
 11998 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 11999 ;; Tracked objects:
 12000 ;;		On entry : 0/0
 12001 ;;		On exit  : 0/0
 12002 ;;		Unchanged: 0/0
 12003 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 12004 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12005 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12006 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12007 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12008 ;;Total ram usage:        1 bytes
 12009 ;; Hardware stack levels used: 1
 12010 ;; Hardware stack levels required when called: 1
 12011 ;; This function calls:
 12012 ;;		_CLK_SET_HIGH
 12013 ;;		_CLK_SET_LOW
 12014 ;;		_CLK_SET_OUTPUT
 12015 ;;		_DIO_SET_HIGH
 12016 ;;		_DIO_SET_LOW
 12017 ;;		_DIO_SET_OUTPUT
 12018 ;; This function is called by:
 12019 ;;		_set_segments
 12020 ;; This function uses a non-reentrant model
 12021 ;;
 12022                           
 12023                           
 12024                           ;psect for function _start_segment
 12025  1FCC                     _start_segment:
 12026                           
 12027                           ;incstack = 0
 12028                           ; Regs used in _start_segment: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
 12029                           ;start_segment@p stored from wreg
 12030  1FCC  00F2               	movwf	start_segment@p
 12031  1FCD                     l2790:
 12032                           
 12033                           ;tm1637.c: 41:     DIO_SET_OUTPUT(p);
 12034  1FCD  0872               	movf	start_segment@p,w
 12035  1FCE  319F  2726  319F   	fcall	_DIO_SET_OUTPUT
 12036                           
 12037                           ;tm1637.c: 42:     CLK_SET_OUTPUT(p);
 12038  1FD1  0872               	movf	start_segment@p,w
 12039  1FD2  319F  2708  319F   	fcall	_CLK_SET_OUTPUT
 12040                           
 12041                           ;tm1637.c: 45:     DIO_SET_HIGH(p);
 12042  1FD5  0872               	movf	start_segment@p,w
 12043  1FD6  319F  2712  319F   	fcall	_DIO_SET_HIGH
 12044                           
 12045                           ;tm1637.c: 46:     CLK_SET_HIGH(p);
 12046  1FD9  0872               	movf	start_segment@p,w
 12047  1FDA  319E  26F4  319F   	fcall	_CLK_SET_HIGH
 12048                           
 12049                           ;tm1637.c: 49:     DIO_SET_LOW(p);
 12050  1FDD  0872               	movf	start_segment@p,w
 12051  1FDE  319F  271C  319F   	fcall	_DIO_SET_LOW
 12052                           
 12053                           ;tm1637.c: 50:     CLK_SET_LOW(p);
 12054  1FE1  0872               	movf	start_segment@p,w
 12055  1FE2  319E  26FE  319F   	fcall	_CLK_SET_LOW
 12056  1FE5                     l203:
 12057  1FE5  0008               	return
 12058  1FE6                     __end_of_start_segment:
 12059                           
 12060                           	psect	text49
 12061  1F26                     __ptext49:	
 12062 ;; *************** function _DIO_SET_OUTPUT *****************
 12063 ;; Defined at:
 12064 ;;		line 30 in file "tm1637.c"
 12065 ;; Parameters:    Size  Location     Type
 12066 ;;  p               1    wreg     PTR struct .
 12067 ;;		 -> NULL(0), main@tm1637(2), 
 12068 ;; Auto vars:     Size  Location     Type
 12069 ;;  p               1    1[COMMON] PTR struct .
 12070 ;;		 -> NULL(0), main@tm1637(2), 
 12071 ;; Return value:  Size  Location     Type
 12072 ;;                  1    wreg      void 
 12073 ;; Registers used:
 12074 ;;		wreg, fsr1l, fsr1h, status,2, status,0
 12075 ;; Tracked objects:
 12076 ;;		On entry : 0/0
 12077 ;;		On exit  : 0/0
 12078 ;;		Unchanged: 0/0
 12079 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 12080 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12081 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12082 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12083 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12084 ;;Total ram usage:        2 bytes
 12085 ;; Hardware stack levels used: 1
 12086 ;; This function calls:
 12087 ;;		Nothing
 12088 ;; This function is called by:
 12089 ;;		_start_segment
 12090 ;;		_stop_segment
 12091 ;;		_write_byte
 12092 ;; This function uses a non-reentrant model
 12093 ;;
 12094                           
 12095                           
 12096                           ;psect for function _DIO_SET_OUTPUT
 12097  1F26                     _DIO_SET_OUTPUT:
 12098                           
 12099                           ;incstack = 0
 12100                           ; Regs used in _DIO_SET_OUTPUT: [wreg+fsr1l+fsr1h+status,2+status,0]
 12101                           ;DIO_SET_OUTPUT@p stored from wreg
 12102  1F26  00F1               	movwf	DIO_SET_OUTPUT@p
 12103  1F27                     l2602:
 12104  1F27  0A71               	incf	DIO_SET_OUTPUT@p,w
 12105  1F28  0086               	movwf	6
 12106  1F29  0187               	clrf	7
 12107  1F2A  0901               	comf	1,w
 12108  1F2B  00F0               	movwf	??_DIO_SET_OUTPUT
 12109  1F2C  0870               	movf	??_DIO_SET_OUTPUT,w
 12110  1F2D  0021               	movlb	1	; select bank1
 12111  1F2E  058D               	andwf	13,f	;volatile
 12112  1F2F                     l191:
 12113  1F2F  0008               	return
 12114  1F30                     __end_of_DIO_SET_OUTPUT:
 12115                           
 12116                           	psect	text50
 12117  1F1C                     __ptext50:	
 12118 ;; *************** function _DIO_SET_LOW *****************
 12119 ;; Defined at:
 12120 ;;		line 36 in file "tm1637.c"
 12121 ;; Parameters:    Size  Location     Type
 12122 ;;  p               1    wreg     PTR struct .
 12123 ;;		 -> NULL(0), main@tm1637(2), 
 12124 ;; Auto vars:     Size  Location     Type
 12125 ;;  p               1    1[COMMON] PTR struct .
 12126 ;;		 -> NULL(0), main@tm1637(2), 
 12127 ;; Return value:  Size  Location     Type
 12128 ;;                  1    wreg      void 
 12129 ;; Registers used:
 12130 ;;		wreg, fsr1l, fsr1h, status,2, status,0
 12131 ;; Tracked objects:
 12132 ;;		On entry : 0/0
 12133 ;;		On exit  : 0/0
 12134 ;;		Unchanged: 0/0
 12135 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 12136 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12137 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12138 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12139 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12140 ;;Total ram usage:        2 bytes
 12141 ;; Hardware stack levels used: 1
 12142 ;; This function calls:
 12143 ;;		Nothing
 12144 ;; This function is called by:
 12145 ;;		_start_segment
 12146 ;;		_stop_segment
 12147 ;;		_write_byte
 12148 ;; This function uses a non-reentrant model
 12149 ;;
 12150                           
 12151                           
 12152                           ;psect for function _DIO_SET_LOW
 12153  1F1C                     _DIO_SET_LOW:
 12154                           
 12155                           ;incstack = 0
 12156                           ; Regs used in _DIO_SET_LOW: [wreg+fsr1l+fsr1h+status,2+status,0]
 12157                           ;DIO_SET_LOW@p stored from wreg
 12158  1F1C  00F1               	movwf	DIO_SET_LOW@p
 12159  1F1D                     l2608:
 12160  1F1D  0A71               	incf	DIO_SET_LOW@p,w
 12161  1F1E  0086               	movwf	6
 12162  1F1F  0187               	clrf	7
 12163  1F20  0901               	comf	1,w
 12164  1F21  00F0               	movwf	??_DIO_SET_LOW
 12165  1F22  0870               	movf	??_DIO_SET_LOW,w
 12166  1F23  0022               	movlb	2	; select bank2
 12167  1F24  058D               	andwf	13,f	;volatile
 12168  1F25                     l200:
 12169  1F25  0008               	return
 12170  1F26                     __end_of_DIO_SET_LOW:
 12171                           
 12172                           	psect	text51
 12173  1F12                     __ptext51:	
 12174 ;; *************** function _DIO_SET_HIGH *****************
 12175 ;; Defined at:
 12176 ;;		line 34 in file "tm1637.c"
 12177 ;; Parameters:    Size  Location     Type
 12178 ;;  p               1    wreg     PTR struct .
 12179 ;;		 -> NULL(0), main@tm1637(2), 
 12180 ;; Auto vars:     Size  Location     Type
 12181 ;;  p               1    1[COMMON] PTR struct .
 12182 ;;		 -> NULL(0), main@tm1637(2), 
 12183 ;; Return value:  Size  Location     Type
 12184 ;;                  1    wreg      void 
 12185 ;; Registers used:
 12186 ;;		wreg, fsr1l, fsr1h, status,2, status,0
 12187 ;; Tracked objects:
 12188 ;;		On entry : 0/0
 12189 ;;		On exit  : 0/0
 12190 ;;		Unchanged: 0/0
 12191 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 12192 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12193 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12194 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12195 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12196 ;;Total ram usage:        2 bytes
 12197 ;; Hardware stack levels used: 1
 12198 ;; This function calls:
 12199 ;;		Nothing
 12200 ;; This function is called by:
 12201 ;;		_start_segment
 12202 ;;		_stop_segment
 12203 ;;		_write_byte
 12204 ;; This function uses a non-reentrant model
 12205 ;;
 12206                           
 12207                           
 12208                           ;psect for function _DIO_SET_HIGH
 12209  1F12                     _DIO_SET_HIGH:
 12210                           
 12211                           ;incstack = 0
 12212                           ; Regs used in _DIO_SET_HIGH: [wreg+fsr1l+fsr1h+status,2+status,0]
 12213                           ;DIO_SET_HIGH@p stored from wreg
 12214  1F12  00F1               	movwf	DIO_SET_HIGH@p
 12215  1F13                     l2606:
 12216  1F13  0A71               	incf	DIO_SET_HIGH@p,w
 12217  1F14  0086               	movwf	6
 12218  1F15  0187               	clrf	7
 12219  1F16  0801               	movf	1,w
 12220  1F17  00F0               	movwf	??_DIO_SET_HIGH
 12221  1F18  0870               	movf	??_DIO_SET_HIGH,w
 12222  1F19  0022               	movlb	2	; select bank2
 12223  1F1A  048D               	iorwf	13,f	;volatile
 12224  1F1B                     l197:
 12225  1F1B  0008               	return
 12226  1F1C                     __end_of_DIO_SET_HIGH:
 12227                           
 12228                           	psect	text52
 12229  1F08                     __ptext52:	
 12230 ;; *************** function _CLK_SET_OUTPUT *****************
 12231 ;; Defined at:
 12232 ;;		line 22 in file "tm1637.c"
 12233 ;; Parameters:    Size  Location     Type
 12234 ;;  p               1    wreg     PTR struct .
 12235 ;;		 -> NULL(0), main@tm1637(2), 
 12236 ;; Auto vars:     Size  Location     Type
 12237 ;;  p               1    1[COMMON] PTR struct .
 12238 ;;		 -> NULL(0), main@tm1637(2), 
 12239 ;; Return value:  Size  Location     Type
 12240 ;;                  1    wreg      void 
 12241 ;; Registers used:
 12242 ;;		wreg, fsr1l, fsr1h, status,2, status,0
 12243 ;; Tracked objects:
 12244 ;;		On entry : 0/0
 12245 ;;		On exit  : 0/0
 12246 ;;		Unchanged: 0/0
 12247 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 12248 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12249 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12250 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12251 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12252 ;;Total ram usage:        2 bytes
 12253 ;; Hardware stack levels used: 1
 12254 ;; This function calls:
 12255 ;;		Nothing
 12256 ;; This function is called by:
 12257 ;;		_start_segment
 12258 ;;		_stop_segment
 12259 ;;		_write_byte
 12260 ;; This function uses a non-reentrant model
 12261 ;;
 12262                           
 12263                           
 12264                           ;psect for function _CLK_SET_OUTPUT
 12265  1F08                     _CLK_SET_OUTPUT:
 12266                           
 12267                           ;incstack = 0
 12268                           ; Regs used in _CLK_SET_OUTPUT: [wreg+fsr1l+fsr1h+status,2+status,0]
 12269                           ;CLK_SET_OUTPUT@p stored from wreg
 12270  1F08  00F1               	movwf	CLK_SET_OUTPUT@p
 12271  1F09                     l2596:
 12272  1F09  0871               	movf	CLK_SET_OUTPUT@p,w
 12273  1F0A  0086               	movwf	6
 12274  1F0B  0187               	clrf	7
 12275  1F0C  0901               	comf	1,w
 12276  1F0D  00F0               	movwf	??_CLK_SET_OUTPUT
 12277  1F0E  0870               	movf	??_CLK_SET_OUTPUT,w
 12278  1F0F  0021               	movlb	1	; select bank1
 12279  1F10  058D               	andwf	13,f	;volatile
 12280  1F11                     l182:
 12281  1F11  0008               	return
 12282  1F12                     __end_of_CLK_SET_OUTPUT:
 12283                           
 12284                           	psect	text53
 12285  1EFE                     __ptext53:	
 12286 ;; *************** function _CLK_SET_LOW *****************
 12287 ;; Defined at:
 12288 ;;		line 27 in file "tm1637.c"
 12289 ;; Parameters:    Size  Location     Type
 12290 ;;  p               1    wreg     PTR struct .
 12291 ;;		 -> NULL(0), main@tm1637(2), 
 12292 ;; Auto vars:     Size  Location     Type
 12293 ;;  p               1    1[COMMON] PTR struct .
 12294 ;;		 -> NULL(0), main@tm1637(2), 
 12295 ;; Return value:  Size  Location     Type
 12296 ;;                  1    wreg      void 
 12297 ;; Registers used:
 12298 ;;		wreg, fsr1l, fsr1h, status,2, status,0
 12299 ;; Tracked objects:
 12300 ;;		On entry : 0/0
 12301 ;;		On exit  : 0/0
 12302 ;;		Unchanged: 0/0
 12303 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 12304 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12305 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12306 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12307 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12308 ;;Total ram usage:        2 bytes
 12309 ;; Hardware stack levels used: 1
 12310 ;; This function calls:
 12311 ;;		Nothing
 12312 ;; This function is called by:
 12313 ;;		_start_segment
 12314 ;;		_stop_segment
 12315 ;;		_write_byte
 12316 ;; This function uses a non-reentrant model
 12317 ;;
 12318                           
 12319                           
 12320                           ;psect for function _CLK_SET_LOW
 12321  1EFE                     _CLK_SET_LOW:
 12322                           
 12323                           ;incstack = 0
 12324                           ; Regs used in _CLK_SET_LOW: [wreg+fsr1l+fsr1h+status,2+status,0]
 12325                           ;CLK_SET_LOW@p stored from wreg
 12326  1EFE  00F1               	movwf	CLK_SET_LOW@p
 12327  1EFF                     l2600:
 12328  1EFF  0871               	movf	CLK_SET_LOW@p,w
 12329  1F00  0086               	movwf	6
 12330  1F01  0187               	clrf	7
 12331  1F02  0901               	comf	1,w
 12332  1F03  00F0               	movwf	??_CLK_SET_LOW
 12333  1F04  0870               	movf	??_CLK_SET_LOW,w
 12334  1F05  0022               	movlb	2	; select bank2
 12335  1F06  058D               	andwf	13,f	;volatile
 12336  1F07                     l188:
 12337  1F07  0008               	return
 12338  1F08                     __end_of_CLK_SET_LOW:
 12339                           
 12340                           	psect	text54
 12341  1EF4                     __ptext54:	
 12342 ;; *************** function _CLK_SET_HIGH *****************
 12343 ;; Defined at:
 12344 ;;		line 25 in file "tm1637.c"
 12345 ;; Parameters:    Size  Location     Type
 12346 ;;  p               1    wreg     PTR struct .
 12347 ;;		 -> NULL(0), main@tm1637(2), 
 12348 ;; Auto vars:     Size  Location     Type
 12349 ;;  p               1    1[COMMON] PTR struct .
 12350 ;;		 -> NULL(0), main@tm1637(2), 
 12351 ;; Return value:  Size  Location     Type
 12352 ;;                  1    wreg      void 
 12353 ;; Registers used:
 12354 ;;		wreg, fsr1l, fsr1h, status,2, status,0
 12355 ;; Tracked objects:
 12356 ;;		On entry : 0/0
 12357 ;;		On exit  : 0/0
 12358 ;;		Unchanged: 0/0
 12359 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 12360 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12361 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12362 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12363 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12364 ;;Total ram usage:        2 bytes
 12365 ;; Hardware stack levels used: 1
 12366 ;; This function calls:
 12367 ;;		Nothing
 12368 ;; This function is called by:
 12369 ;;		_start_segment
 12370 ;;		_stop_segment
 12371 ;;		_write_byte
 12372 ;; This function uses a non-reentrant model
 12373 ;;
 12374                           
 12375                           
 12376                           ;psect for function _CLK_SET_HIGH
 12377  1EF4                     _CLK_SET_HIGH:
 12378                           
 12379                           ;incstack = 0
 12380                           ; Regs used in _CLK_SET_HIGH: [wreg+fsr1l+fsr1h+status,2+status,0]
 12381                           ;CLK_SET_HIGH@p stored from wreg
 12382  1EF4  00F1               	movwf	CLK_SET_HIGH@p
 12383  1EF5                     l2598:
 12384  1EF5  0871               	movf	CLK_SET_HIGH@p,w
 12385  1EF6  0086               	movwf	6
 12386  1EF7  0187               	clrf	7
 12387  1EF8  0801               	movf	1,w
 12388  1EF9  00F0               	movwf	??_CLK_SET_HIGH
 12389  1EFA  0870               	movf	??_CLK_SET_HIGH,w
 12390  1EFB  0022               	movlb	2	; select bank2
 12391  1EFC  048D               	iorwf	13,f	;volatile
 12392  1EFD                     l185:
 12393  1EFD  0008               	return
 12394  1EFE                     __end_of_CLK_SET_HIGH:
 12395                           
 12396                           	psect	text55
 12397  1ECE                     __ptext55:	
 12398 ;; *************** function _encode_digit *****************
 12399 ;; Defined at:
 12400 ;;		line 183 in file "tm1637.c"
 12401 ;; Parameters:    Size  Location     Type
 12402 ;;  p               1    wreg     PTR struct .
 12403 ;;		 -> NULL(0), main@tm1637(2), 
 12404 ;;  digit           1    9[COMMON] unsigned char 
 12405 ;; Auto vars:     Size  Location     Type
 12406 ;;  p               1   10[COMMON] PTR struct .
 12407 ;;		 -> NULL(0), main@tm1637(2), 
 12408 ;; Return value:  Size  Location     Type
 12409 ;;                  1    wreg      unsigned char 
 12410 ;; Registers used:
 12411 ;;		wreg, fsr1l, fsr1h, status,2, status,0
 12412 ;; Tracked objects:
 12413 ;;		On entry : 0/0
 12414 ;;		On exit  : 0/0
 12415 ;;		Unchanged: 0/0
 12416 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 12417 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12418 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12419 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12420 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12421 ;;Total ram usage:        2 bytes
 12422 ;; Hardware stack levels used: 1
 12423 ;; This function calls:
 12424 ;;		Nothing
 12425 ;; This function is called by:
 12426 ;;		_print_digit
 12427 ;; This function uses a non-reentrant model
 12428 ;;
 12429                           
 12430                           
 12431                           ;psect for function _encode_digit
 12432  1ECE                     _encode_digit:
 12433  1ECE                     l2964:	
 12434                           ;incstack = 0
 12435                           ; Regs used in _encode_digit: [wreg+fsr1l+fsr1h+status,2+status,0]
 12436                           
 12437                           
 12438                           ;tm1637.c: 184:     return segdata[digit & 0x0f];
 12439  1ECE  0879               	movf	encode_digit@digit,w
 12440  1ECF  390F               	andlw	15
 12441  1ED0  3E2C               	addlw	(low (_segdata| (0+256)))& (0+255)
 12442  1ED1  0086               	movwf	6
 12443  1ED2  3001               	movlw	1	; select bank2/3
 12444  1ED3  0087               	movwf	7
 12445  1ED4  0801               	movf	1,w
 12446  1ED5                     l244:
 12447  1ED5  0008               	return
 12448  1ED6                     __end_of_encode_digit:
 12449                           
 12450                           	psect	text56
 12451  122C                     __ptext56:	
 12452 ;; *************** function ___awmod *****************
 12453 ;; Defined at:
 12454 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\awmod.c"
 12455 ;; Parameters:    Size  Location     Type
 12456 ;;  divisor         2    0[COMMON] int 
 12457 ;;  dividend        2    2[COMMON] int 
 12458 ;; Auto vars:     Size  Location     Type
 12459 ;;  sign            1    6[COMMON] unsigned char 
 12460 ;;  counter         1    5[COMMON] unsigned char 
 12461 ;; Return value:  Size  Location     Type
 12462 ;;                  2    0[COMMON] int 
 12463 ;; Registers used:
 12464 ;;		wreg, status,2, status,0
 12465 ;; Tracked objects:
 12466 ;;		On entry : 0/0
 12467 ;;		On exit  : 0/0
 12468 ;;		Unchanged: 0/0
 12469 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 12470 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12471 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12472 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12473 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12474 ;;Total ram usage:        7 bytes
 12475 ;; Hardware stack levels used: 1
 12476 ;; This function calls:
 12477 ;;		Nothing
 12478 ;; This function is called by:
 12479 ;;		_print_digit
 12480 ;; This function uses a non-reentrant model
 12481 ;;
 12482                           
 12483                           
 12484                           ;psect for function ___awmod
 12485  122C                     ___awmod:
 12486  122C                     l3108:	
 12487                           ;incstack = 0
 12488                           ; Regs used in ___awmod: [wreg+status,2+status,0]
 12489                           
 12490  122C  01F6               	clrf	___awmod@sign
 12491  122D                     l3110:
 12492  122D  1FF3               	btfss	___awmod@dividend+1,7
 12493  122E  2A30               	goto	u3471
 12494  122F  2A31               	goto	u3470
 12495  1230                     u3471:
 12496  1230  2A38               	goto	l3116
 12497  1231                     u3470:
 12498  1231                     l3112:
 12499  1231  09F2               	comf	___awmod@dividend,f
 12500  1232  09F3               	comf	___awmod@dividend+1,f
 12501  1233  0AF2               	incf	___awmod@dividend,f
 12502  1234  1903               	skipnz
 12503  1235  0AF3               	incf	___awmod@dividend+1,f
 12504  1236                     l3114:
 12505  1236  01F6               	clrf	___awmod@sign
 12506  1237  0AF6               	incf	___awmod@sign,f
 12507  1238                     l3116:
 12508  1238  1FF1               	btfss	___awmod@divisor+1,7
 12509  1239  2A3B               	goto	u3481
 12510  123A  2A3C               	goto	u3480
 12511  123B                     u3481:
 12512  123B  2A41               	goto	l3120
 12513  123C                     u3480:
 12514  123C                     l3118:
 12515  123C  09F0               	comf	___awmod@divisor,f
 12516  123D  09F1               	comf	___awmod@divisor+1,f
 12517  123E  0AF0               	incf	___awmod@divisor,f
 12518  123F  1903               	skipnz
 12519  1240  0AF1               	incf	___awmod@divisor+1,f
 12520  1241                     l3120:
 12521  1241  0870               	movf	___awmod@divisor,w
 12522  1242  0471               	iorwf	___awmod@divisor+1,w
 12523  1243  1903               	btfsc	3,2
 12524  1244  2A46               	goto	u3491
 12525  1245  2A47               	goto	u3490
 12526  1246                     u3491:
 12527  1246  2A70               	goto	l3138
 12528  1247                     u3490:
 12529  1247                     l3122:
 12530  1247  01F5               	clrf	___awmod@counter
 12531  1248  0AF5               	incf	___awmod@counter,f
 12532  1249  2A53               	goto	l3128
 12533  124A                     l3124:
 12534  124A  3001               	movlw	1
 12535  124B                     u3505:
 12536  124B  35F0               	lslf	___awmod@divisor,f
 12537  124C  0DF1               	rlf	___awmod@divisor+1,f
 12538  124D  0B89               	decfsz	9,f
 12539  124E  2A4B               	goto	u3505
 12540  124F                     l3126:
 12541  124F  3001               	movlw	1
 12542  1250  00F4               	movwf	??___awmod
 12543  1251  0874               	movf	??___awmod,w
 12544  1252  07F5               	addwf	___awmod@counter,f
 12545  1253                     l3128:
 12546  1253  1FF1               	btfss	___awmod@divisor+1,7
 12547  1254  2A56               	goto	u3511
 12548  1255  2A57               	goto	u3510
 12549  1256                     u3511:
 12550  1256  2A4A               	goto	l3124
 12551  1257                     u3510:
 12552  1257                     l3130:
 12553  1257  0871               	movf	___awmod@divisor+1,w
 12554  1258  0273               	subwf	___awmod@dividend+1,w
 12555  1259  1D03               	skipz
 12556  125A  2A5D               	goto	u3525
 12557  125B  0870               	movf	___awmod@divisor,w
 12558  125C  0272               	subwf	___awmod@dividend,w
 12559  125D                     u3525:
 12560  125D  1C03               	skipc
 12561  125E  2A60               	goto	u3521
 12562  125F  2A61               	goto	u3520
 12563  1260                     u3521:
 12564  1260  2A65               	goto	l3134
 12565  1261                     u3520:
 12566  1261                     l3132:
 12567  1261  0870               	movf	___awmod@divisor,w
 12568  1262  02F2               	subwf	___awmod@dividend,f
 12569  1263  0871               	movf	___awmod@divisor+1,w
 12570  1264  3BF3               	subwfb	___awmod@dividend+1,f
 12571  1265                     l3134:
 12572  1265  3001               	movlw	1
 12573  1266                     u3535:
 12574  1266  36F1               	lsrf	___awmod@divisor+1,f
 12575  1267  0CF0               	rrf	___awmod@divisor,f
 12576  1268  0B89               	decfsz	9,f
 12577  1269  2A66               	goto	u3535
 12578  126A                     l3136:
 12579  126A  3001               	movlw	1
 12580  126B  02F5               	subwf	___awmod@counter,f
 12581  126C  1D03               	btfss	3,2
 12582  126D  2A6F               	goto	u3541
 12583  126E  2A70               	goto	u3540
 12584  126F                     u3541:
 12585  126F  2A57               	goto	l3130
 12586  1270                     u3540:
 12587  1270                     l3138:
 12588  1270  0876               	movf	___awmod@sign,w
 12589  1271  1903               	btfsc	3,2
 12590  1272  2A74               	goto	u3551
 12591  1273  2A75               	goto	u3550
 12592  1274                     u3551:
 12593  1274  2A7A               	goto	l3142
 12594  1275                     u3550:
 12595  1275                     l3140:
 12596  1275  09F2               	comf	___awmod@dividend,f
 12597  1276  09F3               	comf	___awmod@dividend+1,f
 12598  1277  0AF2               	incf	___awmod@dividend,f
 12599  1278  1903               	skipnz
 12600  1279  0AF3               	incf	___awmod@dividend+1,f
 12601  127A                     l3142:
 12602  127A  0873               	movf	___awmod@dividend+1,w
 12603  127B  00F1               	movwf	?___awmod+1
 12604  127C  0872               	movf	___awmod@dividend,w
 12605  127D  00F0               	movwf	?___awmod
 12606  127E                     l700:
 12607  127E  0008               	return
 12608  127F                     __end_of___awmod:
 12609                           
 12610                           	psect	text57
 12611  000B                     __ptext57:	
 12612 ;; *************** function ___awdiv *****************
 12613 ;; Defined at:
 12614 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\awdiv.c"
 12615 ;; Parameters:    Size  Location     Type
 12616 ;;  divisor         2    0[COMMON] int 
 12617 ;;  dividend        2    2[COMMON] int 
 12618 ;; Auto vars:     Size  Location     Type
 12619 ;;  quotient        2    7[COMMON] int 
 12620 ;;  sign            1    6[COMMON] unsigned char 
 12621 ;;  counter         1    5[COMMON] unsigned char 
 12622 ;; Return value:  Size  Location     Type
 12623 ;;                  2    0[COMMON] int 
 12624 ;; Registers used:
 12625 ;;		wreg, status,2, status,0
 12626 ;; Tracked objects:
 12627 ;;		On entry : 0/0
 12628 ;;		On exit  : 0/0
 12629 ;;		Unchanged: 0/0
 12630 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 12631 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12632 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12633 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12634 ;;      Totals:         9       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12635 ;;Total ram usage:        9 bytes
 12636 ;; Hardware stack levels used: 1
 12637 ;; This function calls:
 12638 ;;		Nothing
 12639 ;; This function is called by:
 12640 ;;		_print_digit
 12641 ;; This function uses a non-reentrant model
 12642 ;;
 12643                           
 12644                           
 12645                           ;psect for function ___awdiv
 12646  000B                     ___awdiv:
 12647  000B                     l3064:	
 12648                           ;incstack = 0
 12649                           ; Regs used in ___awdiv: [wreg+status,2+status,0]
 12650                           
 12651  000B  01F6               	clrf	___awdiv@sign
 12652  000C                     l3066:
 12653  000C  1FF1               	btfss	___awdiv@divisor+1,7
 12654  000D  280F               	goto	u3371
 12655  000E  2810               	goto	u3370
 12656  000F                     u3371:
 12657  000F  2817               	goto	l3072
 12658  0010                     u3370:
 12659  0010                     l3068:
 12660  0010  09F0               	comf	___awdiv@divisor,f
 12661  0011  09F1               	comf	___awdiv@divisor+1,f
 12662  0012  0AF0               	incf	___awdiv@divisor,f
 12663  0013  1903               	skipnz
 12664  0014  0AF1               	incf	___awdiv@divisor+1,f
 12665  0015                     l3070:
 12666  0015  01F6               	clrf	___awdiv@sign
 12667  0016  0AF6               	incf	___awdiv@sign,f
 12668  0017                     l3072:
 12669  0017  1FF3               	btfss	___awdiv@dividend+1,7
 12670  0018  281A               	goto	u3381
 12671  0019  281B               	goto	u3380
 12672  001A                     u3381:
 12673  001A  2824               	goto	l3078
 12674  001B                     u3380:
 12675  001B                     l3074:
 12676  001B  09F2               	comf	___awdiv@dividend,f
 12677  001C  09F3               	comf	___awdiv@dividend+1,f
 12678  001D  0AF2               	incf	___awdiv@dividend,f
 12679  001E  1903               	skipnz
 12680  001F  0AF3               	incf	___awdiv@dividend+1,f
 12681  0020                     l3076:
 12682  0020  3001               	movlw	1
 12683  0021  00F4               	movwf	??___awdiv
 12684  0022  0874               	movf	??___awdiv,w
 12685  0023  06F6               	xorwf	___awdiv@sign,f
 12686  0024                     l3078:
 12687  0024  01F7               	clrf	___awdiv@quotient
 12688  0025  01F8               	clrf	___awdiv@quotient+1
 12689  0026                     l3080:
 12690  0026  0870               	movf	___awdiv@divisor,w
 12691  0027  0471               	iorwf	___awdiv@divisor+1,w
 12692  0028  1903               	btfsc	3,2
 12693  0029  282B               	goto	u3391
 12694  002A  282C               	goto	u3390
 12695  002B                     u3391:
 12696  002B  285B               	goto	l3100
 12697  002C                     u3390:
 12698  002C                     l3082:
 12699  002C  01F5               	clrf	___awdiv@counter
 12700  002D  0AF5               	incf	___awdiv@counter,f
 12701  002E  2838               	goto	l3088
 12702  002F                     l3084:
 12703  002F  3001               	movlw	1
 12704  0030                     u3405:
 12705  0030  35F0               	lslf	___awdiv@divisor,f
 12706  0031  0DF1               	rlf	___awdiv@divisor+1,f
 12707  0032  0B89               	decfsz	9,f
 12708  0033  2830               	goto	u3405
 12709  0034                     l3086:
 12710  0034  3001               	movlw	1
 12711  0035  00F4               	movwf	??___awdiv
 12712  0036  0874               	movf	??___awdiv,w
 12713  0037  07F5               	addwf	___awdiv@counter,f
 12714  0038                     l3088:
 12715  0038  1FF1               	btfss	___awdiv@divisor+1,7
 12716  0039  283B               	goto	u3411
 12717  003A  283C               	goto	u3410
 12718  003B                     u3411:
 12719  003B  282F               	goto	l3084
 12720  003C                     u3410:
 12721  003C                     l3090:
 12722  003C  3001               	movlw	1
 12723  003D                     u3425:
 12724  003D  35F7               	lslf	___awdiv@quotient,f
 12725  003E  0DF8               	rlf	___awdiv@quotient+1,f
 12726  003F  0B89               	decfsz	9,f
 12727  0040  283D               	goto	u3425
 12728  0041  0871               	movf	___awdiv@divisor+1,w
 12729  0042  0273               	subwf	___awdiv@dividend+1,w
 12730  0043  1D03               	skipz
 12731  0044  2847               	goto	u3435
 12732  0045  0870               	movf	___awdiv@divisor,w
 12733  0046  0272               	subwf	___awdiv@dividend,w
 12734  0047                     u3435:
 12735  0047  1C03               	skipc
 12736  0048  284A               	goto	u3431
 12737  0049  284B               	goto	u3430
 12738  004A                     u3431:
 12739  004A  2850               	goto	l3096
 12740  004B                     u3430:
 12741  004B                     l3092:
 12742  004B  0870               	movf	___awdiv@divisor,w
 12743  004C  02F2               	subwf	___awdiv@dividend,f
 12744  004D  0871               	movf	___awdiv@divisor+1,w
 12745  004E  3BF3               	subwfb	___awdiv@dividend+1,f
 12746  004F                     l3094:
 12747  004F  1477               	bsf	___awdiv@quotient,0
 12748  0050                     l3096:
 12749  0050  3001               	movlw	1
 12750  0051                     u3445:
 12751  0051  36F1               	lsrf	___awdiv@divisor+1,f
 12752  0052  0CF0               	rrf	___awdiv@divisor,f
 12753  0053  0B89               	decfsz	9,f
 12754  0054  2851               	goto	u3445
 12755  0055                     l3098:
 12756  0055  3001               	movlw	1
 12757  0056  02F5               	subwf	___awdiv@counter,f
 12758  0057  1D03               	btfss	3,2
 12759  0058  285A               	goto	u3451
 12760  0059  285B               	goto	u3450
 12761  005A                     u3451:
 12762  005A  283C               	goto	l3090
 12763  005B                     u3450:
 12764  005B                     l3100:
 12765  005B  0876               	movf	___awdiv@sign,w
 12766  005C  1903               	btfsc	3,2
 12767  005D  285F               	goto	u3461
 12768  005E  2860               	goto	u3460
 12769  005F                     u3461:
 12770  005F  2865               	goto	l3104
 12771  0060                     u3460:
 12772  0060                     l3102:
 12773  0060  09F7               	comf	___awdiv@quotient,f
 12774  0061  09F8               	comf	___awdiv@quotient+1,f
 12775  0062  0AF7               	incf	___awdiv@quotient,f
 12776  0063  1903               	skipnz
 12777  0064  0AF8               	incf	___awdiv@quotient+1,f
 12778  0065                     l3104:
 12779  0065  0878               	movf	___awdiv@quotient+1,w
 12780  0066  00F1               	movwf	?___awdiv+1
 12781  0067  0877               	movf	___awdiv@quotient,w
 12782  0068  00F0               	movwf	?___awdiv
 12783  0069                     l687:
 12784  0069  0008               	return
 12785  006A                     __end_of___awdiv:
 12786                           
 12787                           	psect	text58
 12788  0C45                     __ptext58:	
 12789 ;; *************** function _get_scale_val *****************
 12790 ;; Defined at:
 12791 ;;		line 34 in file "loadcell.c"
 12792 ;; Parameters:    Size  Location     Type
 12793 ;;  p               1    wreg     PTR struct .
 12794 ;;		 -> NULL(0), main@loadcell(12), 
 12795 ;;  scale_avg_co    1    0[BANK0 ] unsigned char 
 12796 ;; Auto vars:     Size  Location     Type
 12797 ;;  p               1   18[BANK0 ] PTR struct .
 12798 ;;		 -> NULL(0), main@loadcell(12), 
 12799 ;;  i               1   17[BANK0 ] unsigned char 
 12800 ;;  j               1   12[BANK0 ] unsigned char 
 12801 ;;  weight_count    4   13[BANK0 ] unsigned long 
 12802 ;;  weight_add      4    8[BANK0 ] unsigned long 
 12803 ;; Return value:  Size  Location     Type
 12804 ;;                  4    0[BANK0 ] unsigned long 
 12805 ;; Registers used:
 12806 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 12807 ;; Tracked objects:
 12808 ;;		On entry : 0/0
 12809 ;;		On exit  : 0/0
 12810 ;;		Unchanged: 0/0
 12811 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 12812 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12813 ;;      Locals:         0      11       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12814 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12815 ;;      Totals:         0      19       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12816 ;;Total ram usage:       19 bytes
 12817 ;; Hardware stack levels used: 1
 12818 ;; Hardware stack levels required when called: 1
 12819 ;; This function calls:
 12820 ;;		___lldiv
 12821 ;;		_get_CELL_DAT_VAL
 12822 ;;		_set_CELL_CLK_HIGH
 12823 ;;		_set_CELL_CLK_LOW
 12824 ;; This function is called by:
 12825 ;;		_initialize
 12826 ;;		_calc_percentage
 12827 ;; This function uses a non-reentrant model
 12828 ;;
 12829                           
 12830                           
 12831                           ;psect for function _get_scale_val
 12832  0C45                     _get_scale_val:
 12833                           
 12834                           ;incstack = 0
 12835                           ; Regs used in _get_scale_val: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
 12836                           ;get_scale_val@p stored from wreg
 12837  0C45  0020               	movlb	0	; select bank0
 12838  0C46  00B2               	movwf	get_scale_val@p
 12839  0C47                     l3480:
 12840                           
 12841                           ;loadcell.c: 35:     set_CELL_CLK_LOW(p);
 12842  0C47  0832               	movf	get_scale_val@p,w
 12843  0C48  319E  26EA  318C   	fcall	_set_CELL_CLK_LOW
 12844  0C4B                     l3482:
 12845                           
 12846                           ;loadcell.c: 36:     unsigned long weight_count = 0;
 12847  0C4B  3000               	movlw	0
 12848  0C4C  0020               	movlb	0	; select bank0
 12849  0C4D  00B0               	movwf	get_scale_val@weight_count+3
 12850  0C4E  3000               	movlw	0
 12851  0C4F  00AF               	movwf	get_scale_val@weight_count+2
 12852  0C50  3000               	movlw	0
 12853  0C51  00AE               	movwf	get_scale_val@weight_count+1
 12854  0C52  3000               	movlw	0
 12855  0C53  00AD               	movwf	get_scale_val@weight_count
 12856  0C54                     l3484:
 12857                           
 12858                           ;loadcell.c: 37:     unsigned long weight_add = 0;
 12859  0C54  3000               	movlw	0
 12860  0C55  00AB               	movwf	get_scale_val@weight_add+3
 12861  0C56  3000               	movlw	0
 12862  0C57  00AA               	movwf	get_scale_val@weight_add+2
 12863  0C58  3000               	movlw	0
 12864  0C59  00A9               	movwf	get_scale_val@weight_add+1
 12865  0C5A  3000               	movlw	0
 12866  0C5B  00A8               	movwf	get_scale_val@weight_add
 12867  0C5C                     l3486:
 12868                           
 12869                           ;loadcell.c: 38:     for (uint8_t j = 0; j < scale_avg_count; j++)
 12870  0C5C  01AC               	clrf	get_scale_val@j
 12871  0C5D  2CE4               	goto	l3536
 12872  0C5E                     l3488:
 12873  0C5E  0020               	movlb	0	; select bank0
 12874  0C5F  0832               	movf	get_scale_val@p,w
 12875  0C60  3188  2032  318C   	fcall	_get_CELL_DAT_VAL
 12876  0C63  0870               	movf	?_get_CELL_DAT_VAL,w
 12877  0C64  0471               	iorwf	?_get_CELL_DAT_VAL+1,w
 12878  0C65  1903               	btfsc	3,2
 12879  0C66  2C68               	goto	u4211
 12880  0C67  2C69               	goto	u4210
 12881  0C68                     u4211:
 12882  0C68  2C5E               	goto	l3488
 12883  0C69                     u4210:
 12884  0C69                     l3490:
 12885  0C69  0020               	movlb	0	; select bank0
 12886  0C6A  0832               	movf	get_scale_val@p,w
 12887  0C6B  3188  2032  318C   	fcall	_get_CELL_DAT_VAL
 12888  0C6E  0370               	decf	?_get_CELL_DAT_VAL,w
 12889  0C6F  0471               	iorwf	?_get_CELL_DAT_VAL+1,w
 12890  0C70  1903               	btfsc	3,2
 12891  0C71  2C73               	goto	u4221
 12892  0C72  2C74               	goto	u4220
 12893  0C73                     u4221:
 12894  0C73  2C69               	goto	l3490
 12895  0C74                     u4220:
 12896  0C74                     l3492:
 12897                           
 12898                           ;loadcell.c: 42:         _delay((unsigned long)((10)*(8000000/4000000.0)));
 12899  0C74  3006               	movlw	6
 12900  0C75                     u4857:
 12901  0C75  0B89               	decfsz	9,f
 12902  0C76  2C75               	goto	u4857
 12903  0C77  3200               	nop2
 12904  0C78                     l3494:
 12905                           
 12906                           ;loadcell.c: 44:         uint8_t i;;loadcell.c: 45:         for (i = 0; i < 24; i++){
 12907  0C78  0020               	movlb	0	; select bank0
 12908  0C79  01B1               	clrf	get_scale_val@i
 12909  0C7A                     l3500:
 12910                           
 12911                           ;loadcell.c: 46:             weight_count <<= 1;
 12912  0C7A  3001               	movlw	1
 12913  0C7B                     u4235:
 12914  0C7B  35AD               	lslf	get_scale_val@weight_count,f
 12915  0C7C  0DAE               	rlf	get_scale_val@weight_count+1,f
 12916  0C7D  0DAF               	rlf	get_scale_val@weight_count+2,f
 12917  0C7E  0DB0               	rlf	get_scale_val@weight_count+3,f
 12918  0C7F  0B89               	decfsz	9,f
 12919  0C80  2C7B               	goto	u4235
 12920  0C81                     l3502:
 12921                           
 12922                           ;loadcell.c: 47:             set_CELL_CLK_HIGH(p);
 12923  0C81  0832               	movf	get_scale_val@p,w
 12924  0C82  319E  26E0  318C   	fcall	_set_CELL_CLK_HIGH
 12925  0C85                     l3504:
 12926                           
 12927                           ;loadcell.c: 48:             _delay((unsigned long)((10)*(8000000/4000000.0)));
 12928  0C85  3006               	movlw	6
 12929  0C86                     u4867:
 12930  0C86  0B89               	decfsz	9,f
 12931  0C87  2C86               	goto	u4867
 12932  0C88  3200               	nop2
 12933  0C89                     l3506:
 12934                           
 12935                           ;loadcell.c: 49:             set_CELL_CLK_LOW(p);
 12936  0C89  0020               	movlb	0	; select bank0
 12937  0C8A  0832               	movf	get_scale_val@p,w
 12938  0C8B  319E  26EA  318C   	fcall	_set_CELL_CLK_LOW
 12939  0C8E                     l3508:
 12940                           
 12941                           ;loadcell.c: 50:             weight_count += get_CELL_DAT_VAL(p);
 12942  0C8E  0020               	movlb	0	; select bank0
 12943  0C8F  0832               	movf	get_scale_val@p,w
 12944  0C90  3188  2032  318C   	fcall	_get_CELL_DAT_VAL
 12945  0C93  0870               	movf	?_get_CELL_DAT_VAL,w
 12946  0C94  0020               	movlb	0	; select bank0
 12947  0C95  00A4               	movwf	??_get_scale_val
 12948  0C96  0871               	movf	?_get_CELL_DAT_VAL+1,w
 12949  0C97  00A5               	movwf	??_get_scale_val+1
 12950  0C98  3000               	movlw	0
 12951  0C99  1BA5               	btfsc	??_get_scale_val+1,7
 12952  0C9A  30FF               	movlw	255
 12953  0C9B  00A6               	movwf	??_get_scale_val+2
 12954  0C9C  00A7               	movwf	??_get_scale_val+3
 12955  0C9D  0824               	movf	??_get_scale_val,w
 12956  0C9E  07AD               	addwf	get_scale_val@weight_count,f
 12957  0C9F  0825               	movf	??_get_scale_val+1,w
 12958  0CA0  3DAE               	addwfc	get_scale_val@weight_count+1,f
 12959  0CA1  0826               	movf	??_get_scale_val+2,w
 12960  0CA2  3DAF               	addwfc	get_scale_val@weight_count+2,f
 12961  0CA3  0827               	movf	??_get_scale_val+3,w
 12962  0CA4  3DB0               	addwfc	get_scale_val@weight_count+3,f
 12963  0CA5                     l3510:
 12964                           
 12965                           ;loadcell.c: 51:             _delay((unsigned long)((10)*(8000000/4000000.0)));
 12966  0CA5  3006               	movlw	6
 12967  0CA6                     u4877:
 12968  0CA6  0B89               	decfsz	9,f
 12969  0CA7  2CA6               	goto	u4877
 12970  0CA8  3200               	nop2
 12971  0CA9                     l3512:
 12972                           
 12973                           ;loadcell.c: 52:         }
 12974  0CA9  3001               	movlw	1
 12975  0CAA  0020               	movlb	0	; select bank0
 12976  0CAB  00A4               	movwf	??_get_scale_val
 12977  0CAC  0824               	movf	??_get_scale_val,w
 12978  0CAD  07B1               	addwf	get_scale_val@i,f
 12979  0CAE                     l3514:
 12980  0CAE  3018               	movlw	24
 12981  0CAF  0231               	subwf	get_scale_val@i,w
 12982  0CB0  1C03               	skipc
 12983  0CB1  2CB3               	goto	u4241
 12984  0CB2  2CB4               	goto	u4240
 12985  0CB3                     u4241:
 12986  0CB3  2C7A               	goto	l3500
 12987  0CB4                     u4240:
 12988  0CB4                     l3516:
 12989                           
 12990                           ;loadcell.c: 54:         for (i = 0; i < 1; i++){
 12991  0CB4  01B1               	clrf	get_scale_val@i
 12992  0CB5                     l3522:
 12993                           
 12994                           ;loadcell.c: 55:             set_CELL_CLK_HIGH(p);
 12995  0CB5  0832               	movf	get_scale_val@p,w
 12996  0CB6  319E  26E0  318C   	fcall	_set_CELL_CLK_HIGH
 12997  0CB9                     l3524:
 12998                           
 12999                           ;loadcell.c: 56:             _delay((unsigned long)((10)*(8000000/4000000.0)));
 13000  0CB9  3006               	movlw	6
 13001  0CBA                     u4887:
 13002  0CBA  0B89               	decfsz	9,f
 13003  0CBB  2CBA               	goto	u4887
 13004  0CBC  3200               	nop2
 13005  0CBD                     l3526:
 13006                           
 13007                           ;loadcell.c: 57:             set_CELL_CLK_LOW(p);
 13008  0CBD  0020               	movlb	0	; select bank0
 13009  0CBE  0832               	movf	get_scale_val@p,w
 13010  0CBF  319E  26EA  318C   	fcall	_set_CELL_CLK_LOW
 13011                           
 13012                           ;loadcell.c: 58:             _delay((unsigned long)((10)*(8000000/4000000.0)));
 13013  0CC2  3006               	movlw	6
 13014  0CC3                     u4897:
 13015  0CC3  0B89               	decfsz	9,f
 13016  0CC4  2CC3               	goto	u4897
 13017  0CC5  3200               	nop2
 13018  0CC6                     l3528:
 13019                           
 13020                           ;loadcell.c: 59:         };
 13021  0CC6  3001               	movlw	1
 13022  0CC7  0020               	movlb	0	; select bank0
 13023  0CC8  00A4               	movwf	??_get_scale_val
 13024  0CC9  0824               	movf	??_get_scale_val,w
 13025  0CCA  07B1               	addwf	get_scale_val@i,f
 13026  0CCB                     l3530:
 13027  0CCB  0831               	movf	get_scale_val@i,w
 13028  0CCC  1903               	btfsc	3,2
 13029  0CCD  2CCF               	goto	u4251
 13030  0CCE  2CD0               	goto	u4250
 13031  0CCF                     u4251:
 13032  0CCF  2CB5               	goto	l3522
 13033  0CD0                     u4250:
 13034  0CD0                     l3532:
 13035                           
 13036                           ;loadcell.c: 60:         weight_add += weight_count;
 13037  0CD0  082D               	movf	get_scale_val@weight_count,w
 13038  0CD1  07A8               	addwf	get_scale_val@weight_add,f
 13039  0CD2  082E               	movf	get_scale_val@weight_count+1,w
 13040  0CD3  3DA9               	addwfc	get_scale_val@weight_add+1,f
 13041  0CD4  082F               	movf	get_scale_val@weight_count+2,w
 13042  0CD5  3DAA               	addwfc	get_scale_val@weight_add+2,f
 13043  0CD6  0830               	movf	get_scale_val@weight_count+3,w
 13044  0CD7  3DAB               	addwfc	get_scale_val@weight_add+3,f
 13045                           
 13046                           ;loadcell.c: 61:         weight_count = 0;
 13047  0CD8  3000               	movlw	0
 13048  0CD9  00B0               	movwf	get_scale_val@weight_count+3
 13049  0CDA  3000               	movlw	0
 13050  0CDB  00AF               	movwf	get_scale_val@weight_count+2
 13051  0CDC  3000               	movlw	0
 13052  0CDD  00AE               	movwf	get_scale_val@weight_count+1
 13053  0CDE  3000               	movlw	0
 13054  0CDF  00AD               	movwf	get_scale_val@weight_count
 13055  0CE0                     l3534:
 13056                           
 13057                           ;loadcell.c: 62:     }
 13058  0CE0  3001               	movlw	1
 13059  0CE1  00A4               	movwf	??_get_scale_val
 13060  0CE2  0824               	movf	??_get_scale_val,w
 13061  0CE3  07AC               	addwf	get_scale_val@j,f
 13062  0CE4                     l3536:
 13063  0CE4  0820               	movf	get_scale_val@scale_avg_count,w
 13064  0CE5  022C               	subwf	get_scale_val@j,w
 13065  0CE6  1C03               	skipc
 13066  0CE7  2CE9               	goto	u4261
 13067  0CE8  2CEA               	goto	u4260
 13068  0CE9                     u4261:
 13069  0CE9  2C5E               	goto	l3488
 13070  0CEA                     u4260:
 13071  0CEA                     l3538:
 13072                           
 13073                           ;loadcell.c: 63:     weight_count = weight_add / scale_avg_count;
 13074  0CEA  0820               	movf	get_scale_val@scale_avg_count,w
 13075  0CEB  00A4               	movwf	??_get_scale_val
 13076  0CEC  01A5               	clrf	??_get_scale_val+1
 13077  0CED  01A6               	clrf	??_get_scale_val+2
 13078  0CEE  01A7               	clrf	??_get_scale_val+3
 13079  0CEF  0827               	movf	??_get_scale_val+3,w
 13080  0CF0  00F3               	movwf	___lldiv@divisor+3
 13081  0CF1  0826               	movf	??_get_scale_val+2,w
 13082  0CF2  00F2               	movwf	___lldiv@divisor+2
 13083  0CF3  0825               	movf	??_get_scale_val+1,w
 13084  0CF4  00F1               	movwf	___lldiv@divisor+1
 13085  0CF5  0824               	movf	??_get_scale_val,w
 13086  0CF6  00F0               	movwf	___lldiv@divisor
 13087  0CF7  082B               	movf	get_scale_val@weight_add+3,w
 13088  0CF8  00F7               	movwf	___lldiv@dividend+3
 13089  0CF9  082A               	movf	get_scale_val@weight_add+2,w
 13090  0CFA  00F6               	movwf	___lldiv@dividend+2
 13091  0CFB  0829               	movf	get_scale_val@weight_add+1,w
 13092  0CFC  00F5               	movwf	___lldiv@dividend+1
 13093  0CFD  0828               	movf	get_scale_val@weight_add,w
 13094  0CFE  00F4               	movwf	___lldiv@dividend
 13095  0CFF  3193  2385  318C   	fcall	___lldiv
 13096  0D02  0873               	movf	?___lldiv+3,w
 13097  0D03  0020               	movlb	0	; select bank0
 13098  0D04  00B0               	movwf	get_scale_val@weight_count+3
 13099  0D05  0872               	movf	?___lldiv+2,w
 13100  0D06  00AF               	movwf	get_scale_val@weight_count+2
 13101  0D07  0871               	movf	?___lldiv+1,w
 13102  0D08  00AE               	movwf	get_scale_val@weight_count+1
 13103  0D09  0870               	movf	?___lldiv,w
 13104  0D0A  00AD               	movwf	get_scale_val@weight_count
 13105  0D0B                     l3540:
 13106                           
 13107                           ;loadcell.c: 66:     weight_count = weight_count ^ 0x800000;
 13108  0D0B  3000               	movlw	0
 13109  0D0C  062D               	xorwf	get_scale_val@weight_count,w
 13110  0D0D  00A4               	movwf	??_get_scale_val
 13111  0D0E  3000               	movlw	0
 13112  0D0F  062E               	xorwf	get_scale_val@weight_count+1,w
 13113  0D10  00A5               	movwf	??_get_scale_val+1
 13114  0D11  3080               	movlw	128
 13115  0D12  062F               	xorwf	get_scale_val@weight_count+2,w
 13116  0D13  00A6               	movwf	??_get_scale_val+2
 13117  0D14  3000               	movlw	0
 13118  0D15  0630               	xorwf	get_scale_val@weight_count+3,w
 13119  0D16  00A7               	movwf	??_get_scale_val+3
 13120  0D17  0827               	movf	??_get_scale_val+3,w
 13121  0D18  00B0               	movwf	get_scale_val@weight_count+3
 13122  0D19  0826               	movf	??_get_scale_val+2,w
 13123  0D1A  00AF               	movwf	get_scale_val@weight_count+2
 13124  0D1B  0825               	movf	??_get_scale_val+1,w
 13125  0D1C  00AE               	movwf	get_scale_val@weight_count+1
 13126  0D1D  0824               	movf	??_get_scale_val,w
 13127  0D1E  00AD               	movwf	get_scale_val@weight_count
 13128  0D1F                     l3542:
 13129                           
 13130                           ;loadcell.c: 67:     return weight_count;
 13131  0D1F  0830               	movf	get_scale_val@weight_count+3,w
 13132  0D20  00A3               	movwf	?_get_scale_val+3
 13133  0D21  082F               	movf	get_scale_val@weight_count+2,w
 13134  0D22  00A2               	movwf	?_get_scale_val+2
 13135  0D23  082E               	movf	get_scale_val@weight_count+1,w
 13136  0D24  00A1               	movwf	?_get_scale_val+1
 13137  0D25  082D               	movf	get_scale_val@weight_count,w
 13138  0D26  00A0               	movwf	?_get_scale_val
 13139  0D27                     l291:
 13140  0D27  0008               	return
 13141  0D28                     __end_of_get_scale_val:
 13142                           
 13143                           	psect	text59
 13144  1EEA                     __ptext59:	
 13145 ;; *************** function _set_CELL_CLK_LOW *****************
 13146 ;; Defined at:
 13147 ;;		line 7 in file "loadcell.c"
 13148 ;; Parameters:    Size  Location     Type
 13149 ;;  p               1    wreg     PTR struct .
 13150 ;;		 -> NULL(0), main@loadcell(12), 
 13151 ;; Auto vars:     Size  Location     Type
 13152 ;;  p               1    1[COMMON] PTR struct .
 13153 ;;		 -> NULL(0), main@loadcell(12), 
 13154 ;; Return value:  Size  Location     Type
 13155 ;;                  1    wreg      void 
 13156 ;; Registers used:
 13157 ;;		wreg, fsr1l, fsr1h, status,2, status,0
 13158 ;; Tracked objects:
 13159 ;;		On entry : 0/0
 13160 ;;		On exit  : 0/0
 13161 ;;		Unchanged: 0/0
 13162 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 13163 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13164 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13165 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13166 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13167 ;;Total ram usage:        2 bytes
 13168 ;; Hardware stack levels used: 1
 13169 ;; This function calls:
 13170 ;;		Nothing
 13171 ;; This function is called by:
 13172 ;;		_get_scale_val
 13173 ;; This function uses a non-reentrant model
 13174 ;;
 13175                           
 13176                           
 13177                           ;psect for function _set_CELL_CLK_LOW
 13178  1EEA                     _set_CELL_CLK_LOW:
 13179                           
 13180                           ;incstack = 0
 13181                           ; Regs used in _set_CELL_CLK_LOW: [wreg+fsr1l+fsr1h+status,2+status,0]
 13182                           ;set_CELL_CLK_LOW@p stored from wreg
 13183  1EEA  00F1               	movwf	set_CELL_CLK_LOW@p
 13184  1EEB                     l2968:
 13185  1EEB  0871               	movf	set_CELL_CLK_LOW@p,w
 13186  1EEC  0086               	movwf	6
 13187  1EED  0187               	clrf	7
 13188  1EEE  0901               	comf	1,w
 13189  1EEF  00F0               	movwf	??_set_CELL_CLK_LOW
 13190  1EF0  0870               	movf	??_set_CELL_CLK_LOW,w
 13191  1EF1  0022               	movlb	2	; select bank2
 13192  1EF2  058D               	andwf	13,f	;volatile
 13193  1EF3                     l261:
 13194  1EF3  0008               	return
 13195  1EF4                     __end_of_set_CELL_CLK_LOW:
 13196                           
 13197                           	psect	text60
 13198  1EE0                     __ptext60:	
 13199 ;; *************** function _set_CELL_CLK_HIGH *****************
 13200 ;; Defined at:
 13201 ;;		line 12 in file "loadcell.c"
 13202 ;; Parameters:    Size  Location     Type
 13203 ;;  p               1    wreg     PTR struct .
 13204 ;;		 -> NULL(0), main@loadcell(12), 
 13205 ;; Auto vars:     Size  Location     Type
 13206 ;;  p               1    1[COMMON] PTR struct .
 13207 ;;		 -> NULL(0), main@loadcell(12), 
 13208 ;; Return value:  Size  Location     Type
 13209 ;;                  1    wreg      void 
 13210 ;; Registers used:
 13211 ;;		wreg, fsr1l, fsr1h, status,2, status,0
 13212 ;; Tracked objects:
 13213 ;;		On entry : 0/0
 13214 ;;		On exit  : 0/0
 13215 ;;		Unchanged: 0/0
 13216 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 13217 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13218 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13219 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13220 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13221 ;;Total ram usage:        2 bytes
 13222 ;; Hardware stack levels used: 1
 13223 ;; This function calls:
 13224 ;;		Nothing
 13225 ;; This function is called by:
 13226 ;;		_get_scale_val
 13227 ;; This function uses a non-reentrant model
 13228 ;;
 13229                           
 13230                           
 13231                           ;psect for function _set_CELL_CLK_HIGH
 13232  1EE0                     _set_CELL_CLK_HIGH:
 13233                           
 13234                           ;incstack = 0
 13235                           ; Regs used in _set_CELL_CLK_HIGH: [wreg+fsr1l+fsr1h+status,2+status,0]
 13236                           ;set_CELL_CLK_HIGH@p stored from wreg
 13237  1EE0  00F1               	movwf	set_CELL_CLK_HIGH@p
 13238  1EE1                     l2970:
 13239  1EE1  0871               	movf	set_CELL_CLK_HIGH@p,w
 13240  1EE2  0086               	movwf	6
 13241  1EE3  0187               	clrf	7
 13242  1EE4  0801               	movf	1,w
 13243  1EE5  00F0               	movwf	??_set_CELL_CLK_HIGH
 13244  1EE6  0870               	movf	??_set_CELL_CLK_HIGH,w
 13245  1EE7  0022               	movlb	2	; select bank2
 13246  1EE8  048D               	iorwf	13,f	;volatile
 13247  1EE9                     l264:
 13248  1EE9  0008               	return
 13249  1EEA                     __end_of_set_CELL_CLK_HIGH:
 13250                           
 13251                           	psect	text61
 13252  0832                     __ptext61:	
 13253 ;; *************** function _get_CELL_DAT_VAL *****************
 13254 ;; Defined at:
 13255 ;;		line 15 in file "loadcell.c"
 13256 ;; Parameters:    Size  Location     Type
 13257 ;;  p               1    wreg     PTR struct .
 13258 ;;		 -> NULL(0), main@loadcell(12), 
 13259 ;; Auto vars:     Size  Location     Type
 13260 ;;  p               1    5[COMMON] PTR struct .
 13261 ;;		 -> NULL(0), main@loadcell(12), 
 13262 ;; Return value:  Size  Location     Type
 13263 ;;                  2    0[COMMON] int 
 13264 ;; Registers used:
 13265 ;;		wreg, fsr1l, fsr1h, status,2, status,0
 13266 ;; Tracked objects:
 13267 ;;		On entry : 0/0
 13268 ;;		On exit  : 0/0
 13269 ;;		Unchanged: 0/0
 13270 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 13271 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13272 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13273 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13274 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13275 ;;Total ram usage:        6 bytes
 13276 ;; Hardware stack levels used: 1
 13277 ;; This function calls:
 13278 ;;		Nothing
 13279 ;; This function is called by:
 13280 ;;		_get_scale_val
 13281 ;; This function uses a non-reentrant model
 13282 ;;
 13283                           
 13284                           
 13285                           ;psect for function _get_CELL_DAT_VAL
 13286  0832                     _get_CELL_DAT_VAL:
 13287                           
 13288                           ;incstack = 0
 13289                           ; Regs used in _get_CELL_DAT_VAL: [wreg+fsr1l+fsr1h+status,2+status,0]
 13290                           ;get_CELL_DAT_VAL@p stored from wreg
 13291  0832  00F5               	movwf	get_CELL_DAT_VAL@p
 13292  0833                     l2972:
 13293                           
 13294                           ;loadcell.c: 16:     if(p->cell_dat == 0x01){ return PORTBbits.RB0; }
 13295  0833  0A75               	incf	get_CELL_DAT_VAL@p,w
 13296  0834  0086               	movwf	6
 13297  0835  0187               	clrf	7
 13298  0836  0301               	decf	1,w
 13299  0837  1D03               	btfss	3,2
 13300  0838  283A               	goto	u3211
 13301  0839  283B               	goto	u3210
 13302  083A                     u3211:
 13303  083A  2845               	goto	l2978
 13304  083B                     u3210:
 13305  083B                     l2974:
 13306  083B  0020               	movlb	0	; select bank0
 13307  083C  080D               	movf	13,w	;volatile
 13308  083D  3901               	andlw	1
 13309  083E  00F2               	movwf	??_get_CELL_DAT_VAL
 13310  083F  01F3               	clrf	??_get_CELL_DAT_VAL+1
 13311  0840  0872               	movf	??_get_CELL_DAT_VAL,w
 13312  0841  00F0               	movwf	?_get_CELL_DAT_VAL
 13313  0842  0873               	movf	??_get_CELL_DAT_VAL+1,w
 13314  0843  00F1               	movwf	?_get_CELL_DAT_VAL+1
 13315  0844  28D4               	goto	l268
 13316  0845                     l2978:
 13317                           
 13318                           ;loadcell.c: 17:     if(p->cell_dat == 0x02){ return PORTBbits.RB1; }
 13319  0845  0A75               	incf	get_CELL_DAT_VAL@p,w
 13320  0846  0086               	movwf	6
 13321  0847  0187               	clrf	7
 13322  0848  3002               	movlw	2
 13323  0849  0601               	xorwf	1,w
 13324  084A  1D03               	btfss	3,2
 13325  084B  284D               	goto	u3221
 13326  084C  284E               	goto	u3220
 13327  084D                     u3221:
 13328  084D  2858               	goto	l2984
 13329  084E                     u3220:
 13330  084E                     l2980:
 13331  084E  0020               	movlb	0	; select bank0
 13332  084F  0C0D               	rrf	13,w	;volatile
 13333  0850  3901               	andlw	1
 13334  0851  00F2               	movwf	??_get_CELL_DAT_VAL
 13335  0852  01F3               	clrf	??_get_CELL_DAT_VAL+1
 13336  0853  0872               	movf	??_get_CELL_DAT_VAL,w
 13337  0854  00F0               	movwf	?_get_CELL_DAT_VAL
 13338  0855  0873               	movf	??_get_CELL_DAT_VAL+1,w
 13339  0856  00F1               	movwf	?_get_CELL_DAT_VAL+1
 13340  0857  28D4               	goto	l268
 13341  0858                     l2984:
 13342                           
 13343                           ;loadcell.c: 18:     if(p->cell_dat == 0x04){ return PORTBbits.RB2; }
 13344  0858  0A75               	incf	get_CELL_DAT_VAL@p,w
 13345  0859  0086               	movwf	6
 13346  085A  0187               	clrf	7
 13347  085B  3004               	movlw	4
 13348  085C  0601               	xorwf	1,w
 13349  085D  1D03               	btfss	3,2
 13350  085E  2860               	goto	u3231
 13351  085F  2861               	goto	u3230
 13352  0860                     u3231:
 13353  0860  286C               	goto	l2990
 13354  0861                     u3230:
 13355  0861                     l2986:
 13356  0861  0020               	movlb	0	; select bank0
 13357  0862  0C0D               	rrf	13,w	;volatile
 13358  0863  0C89               	rrf	9,f
 13359  0864  3901               	andlw	1
 13360  0865  00F2               	movwf	??_get_CELL_DAT_VAL
 13361  0866  01F3               	clrf	??_get_CELL_DAT_VAL+1
 13362  0867  0872               	movf	??_get_CELL_DAT_VAL,w
 13363  0868  00F0               	movwf	?_get_CELL_DAT_VAL
 13364  0869  0873               	movf	??_get_CELL_DAT_VAL+1,w
 13365  086A  00F1               	movwf	?_get_CELL_DAT_VAL+1
 13366  086B  28D4               	goto	l268
 13367  086C                     l2990:
 13368                           
 13369                           ;loadcell.c: 19:     if(p->cell_dat == 0x08){ return PORTBbits.RB3; }
 13370  086C  0A75               	incf	get_CELL_DAT_VAL@p,w
 13371  086D  0086               	movwf	6
 13372  086E  0187               	clrf	7
 13373  086F  3008               	movlw	8
 13374  0870  0601               	xorwf	1,w
 13375  0871  1D03               	btfss	3,2
 13376  0872  2874               	goto	u3241
 13377  0873  2875               	goto	u3240
 13378  0874                     u3241:
 13379  0874  2882               	goto	l2996
 13380  0875                     u3240:
 13381  0875                     l2992:
 13382  0875  0020               	movlb	0	; select bank0
 13383  0876  0C0D               	rrf	13,w	;volatile
 13384  0877  00F2               	movwf	??_get_CELL_DAT_VAL
 13385  0878  0CF2               	rrf	??_get_CELL_DAT_VAL,f
 13386  0879  0C72               	rrf	??_get_CELL_DAT_VAL,w
 13387  087A  3901               	andlw	1
 13388  087B  00F3               	movwf	??_get_CELL_DAT_VAL+1
 13389  087C  01F4               	clrf	??_get_CELL_DAT_VAL+2
 13390  087D  0873               	movf	??_get_CELL_DAT_VAL+1,w
 13391  087E  00F0               	movwf	?_get_CELL_DAT_VAL
 13392  087F  0874               	movf	??_get_CELL_DAT_VAL+2,w
 13393  0880  00F1               	movwf	?_get_CELL_DAT_VAL+1
 13394  0881  28D4               	goto	l268
 13395  0882                     l2996:
 13396                           
 13397                           ;loadcell.c: 20:     if(p->cell_dat == 0x10){ return PORTBbits.RB4; }
 13398  0882  0A75               	incf	get_CELL_DAT_VAL@p,w
 13399  0883  0086               	movwf	6
 13400  0884  0187               	clrf	7
 13401  0885  3010               	movlw	16
 13402  0886  0601               	xorwf	1,w
 13403  0887  1D03               	btfss	3,2
 13404  0888  288A               	goto	u3251
 13405  0889  288B               	goto	u3250
 13406  088A                     u3251:
 13407  088A  2895               	goto	l3002
 13408  088B                     u3250:
 13409  088B                     l2998:
 13410  088B  0020               	movlb	0	; select bank0
 13411  088C  0E0D               	swapf	13,w	;volatile
 13412  088D  3901               	andlw	1
 13413  088E  00F2               	movwf	??_get_CELL_DAT_VAL
 13414  088F  01F3               	clrf	??_get_CELL_DAT_VAL+1
 13415  0890  0872               	movf	??_get_CELL_DAT_VAL,w
 13416  0891  00F0               	movwf	?_get_CELL_DAT_VAL
 13417  0892  0873               	movf	??_get_CELL_DAT_VAL+1,w
 13418  0893  00F1               	movwf	?_get_CELL_DAT_VAL+1
 13419  0894  28D4               	goto	l268
 13420  0895                     l3002:
 13421                           
 13422                           ;loadcell.c: 21:     if(p->cell_dat == 0x20){ return PORTBbits.RB5; }
 13423  0895  0A75               	incf	get_CELL_DAT_VAL@p,w
 13424  0896  0086               	movwf	6
 13425  0897  0187               	clrf	7
 13426  0898  3020               	movlw	32
 13427  0899  0601               	xorwf	1,w
 13428  089A  1D03               	btfss	3,2
 13429  089B  289D               	goto	u3261
 13430  089C  289E               	goto	u3260
 13431  089D                     u3261:
 13432  089D  28A9               	goto	l3008
 13433  089E                     u3260:
 13434  089E                     l3004:
 13435  089E  0020               	movlb	0	; select bank0
 13436  089F  0E0D               	swapf	13,w	;volatile
 13437  08A0  0C89               	rrf	9,f
 13438  08A1  3901               	andlw	1
 13439  08A2  00F2               	movwf	??_get_CELL_DAT_VAL
 13440  08A3  01F3               	clrf	??_get_CELL_DAT_VAL+1
 13441  08A4  0872               	movf	??_get_CELL_DAT_VAL,w
 13442  08A5  00F0               	movwf	?_get_CELL_DAT_VAL
 13443  08A6  0873               	movf	??_get_CELL_DAT_VAL+1,w
 13444  08A7  00F1               	movwf	?_get_CELL_DAT_VAL+1
 13445  08A8  28D4               	goto	l268
 13446  08A9                     l3008:
 13447                           
 13448                           ;loadcell.c: 22:     if(p->cell_dat == 0x40){ return PORTBbits.RB6; }
 13449  08A9  0A75               	incf	get_CELL_DAT_VAL@p,w
 13450  08AA  0086               	movwf	6
 13451  08AB  0187               	clrf	7
 13452  08AC  3040               	movlw	64
 13453  08AD  0601               	xorwf	1,w
 13454  08AE  1D03               	btfss	3,2
 13455  08AF  28B1               	goto	u3271
 13456  08B0  28B2               	goto	u3270
 13457  08B1                     u3271:
 13458  08B1  28BE               	goto	l3014
 13459  08B2                     u3270:
 13460  08B2                     l3010:
 13461  08B2  0020               	movlb	0	; select bank0
 13462  08B3  0E0D               	swapf	13,w	;volatile
 13463  08B4  0C89               	rrf	9,f
 13464  08B5  0C89               	rrf	9,f
 13465  08B6  3901               	andlw	1
 13466  08B7  00F2               	movwf	??_get_CELL_DAT_VAL
 13467  08B8  01F3               	clrf	??_get_CELL_DAT_VAL+1
 13468  08B9  0872               	movf	??_get_CELL_DAT_VAL,w
 13469  08BA  00F0               	movwf	?_get_CELL_DAT_VAL
 13470  08BB  0873               	movf	??_get_CELL_DAT_VAL+1,w
 13471  08BC  00F1               	movwf	?_get_CELL_DAT_VAL+1
 13472  08BD  28D4               	goto	l268
 13473  08BE                     l3014:
 13474                           
 13475                           ;loadcell.c: 23:     if(p->cell_dat == 0x80){ return PORTBbits.RB7; }
 13476  08BE  0A75               	incf	get_CELL_DAT_VAL@p,w
 13477  08BF  0086               	movwf	6
 13478  08C0  0187               	clrf	7
 13479  08C1  3080               	movlw	128
 13480  08C2  0601               	xorwf	1,w
 13481  08C3  1D03               	btfss	3,2
 13482  08C4  28C6               	goto	u3281
 13483  08C5  28C7               	goto	u3280
 13484  08C6                     u3281:
 13485  08C6  28D2               	goto	l3020
 13486  08C7                     u3280:
 13487  08C7                     l3016:
 13488  08C7  0020               	movlb	0	; select bank0
 13489  08C8  0D0D               	rlf	13,w	;volatile
 13490  08C9  0D0D               	rlf	13,w	;volatile
 13491  08CA  3901               	andlw	1
 13492  08CB  00F2               	movwf	??_get_CELL_DAT_VAL
 13493  08CC  01F3               	clrf	??_get_CELL_DAT_VAL+1
 13494  08CD  0872               	movf	??_get_CELL_DAT_VAL,w
 13495  08CE  00F0               	movwf	?_get_CELL_DAT_VAL
 13496  08CF  0873               	movf	??_get_CELL_DAT_VAL+1,w
 13497  08D0  00F1               	movwf	?_get_CELL_DAT_VAL+1
 13498  08D1  28D4               	goto	l268
 13499  08D2                     l3020:
 13500                           
 13501                           ;loadcell.c: 25:     return 0;
 13502  08D2  01F0               	clrf	?_get_CELL_DAT_VAL
 13503  08D3  01F1               	clrf	?_get_CELL_DAT_VAL+1
 13504  08D4                     l268:
 13505  08D4  0008               	return
 13506  08D5                     __end_of_get_CELL_DAT_VAL:
 13507                           
 13508                           	psect	text62
 13509  1385                     __ptext62:	
 13510 ;; *************** function ___lldiv *****************
 13511 ;; Defined at:
 13512 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\__lldiv.c"
 13513 ;; Parameters:    Size  Location     Type
 13514 ;;  divisor         4    0[COMMON] unsigned long 
 13515 ;;  dividend        4    4[COMMON] unsigned long 
 13516 ;; Auto vars:     Size  Location     Type
 13517 ;;  quotient        4    9[COMMON] unsigned long 
 13518 ;;  counter         1   13[COMMON] unsigned char 
 13519 ;; Return value:  Size  Location     Type
 13520 ;;                  4    0[COMMON] unsigned long 
 13521 ;; Registers used:
 13522 ;;		wreg, status,2, status,0
 13523 ;; Tracked objects:
 13524 ;;		On entry : 0/0
 13525 ;;		On exit  : 0/0
 13526 ;;		Unchanged: 0/0
 13527 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 13528 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13529 ;;      Locals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13530 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13531 ;;      Totals:        14       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13532 ;;Total ram usage:       14 bytes
 13533 ;; Hardware stack levels used: 1
 13534 ;; This function calls:
 13535 ;;		Nothing
 13536 ;; This function is called by:
 13537 ;;		_get_scale_val
 13538 ;; This function uses a non-reentrant model
 13539 ;;
 13540                           
 13541                           
 13542                           ;psect for function ___lldiv
 13543  1385                     ___lldiv:
 13544  1385                     l3040:	
 13545                           ;incstack = 0
 13546                           ; Regs used in ___lldiv: [wreg+status,2+status,0]
 13547                           
 13548  1385  3000               	movlw	0
 13549  1386  00FC               	movwf	___lldiv@quotient+3
 13550  1387  3000               	movlw	0
 13551  1388  00FB               	movwf	___lldiv@quotient+2
 13552  1389  3000               	movlw	0
 13553  138A  00FA               	movwf	___lldiv@quotient+1
 13554  138B  3000               	movlw	0
 13555  138C  00F9               	movwf	___lldiv@quotient
 13556  138D  0873               	movf	___lldiv@divisor+3,w
 13557  138E  0472               	iorwf	___lldiv@divisor+2,w
 13558  138F  0471               	iorwf	___lldiv@divisor+1,w
 13559  1390  0470               	iorwf	___lldiv@divisor,w
 13560  1391  1903               	skipnz
 13561  1392  2B94               	goto	u3301
 13562  1393  2B95               	goto	u3300
 13563  1394                     u3301:
 13564  1394  2BD6               	goto	l3060
 13565  1395                     u3300:
 13566  1395                     l3042:
 13567  1395  01FD               	clrf	___lldiv@counter
 13568  1396  0AFD               	incf	___lldiv@counter,f
 13569  1397  2BA3               	goto	l3046
 13570  1398                     l3044:
 13571  1398  3001               	movlw	1
 13572  1399                     u3315:
 13573  1399  35F0               	lslf	___lldiv@divisor,f
 13574  139A  0DF1               	rlf	___lldiv@divisor+1,f
 13575  139B  0DF2               	rlf	___lldiv@divisor+2,f
 13576  139C  0DF3               	rlf	___lldiv@divisor+3,f
 13577  139D  0B89               	decfsz	9,f
 13578  139E  2B99               	goto	u3315
 13579  139F  3001               	movlw	1
 13580  13A0  00F8               	movwf	??___lldiv
 13581  13A1  0878               	movf	??___lldiv,w
 13582  13A2  07FD               	addwf	___lldiv@counter,f
 13583  13A3                     l3046:
 13584  13A3  1FF3               	btfss	___lldiv@divisor+3,7
 13585  13A4  2BA6               	goto	u3321
 13586  13A5  2BA7               	goto	u3320
 13587  13A6                     u3321:
 13588  13A6  2B98               	goto	l3044
 13589  13A7                     u3320:
 13590  13A7                     l3048:
 13591  13A7  3001               	movlw	1
 13592  13A8                     u3335:
 13593  13A8  35F9               	lslf	___lldiv@quotient,f
 13594  13A9  0DFA               	rlf	___lldiv@quotient+1,f
 13595  13AA  0DFB               	rlf	___lldiv@quotient+2,f
 13596  13AB  0DFC               	rlf	___lldiv@quotient+3,f
 13597  13AC  0B89               	decfsz	9,f
 13598  13AD  2BA8               	goto	u3335
 13599  13AE                     l3050:
 13600  13AE  0873               	movf	___lldiv@divisor+3,w
 13601  13AF  0277               	subwf	___lldiv@dividend+3,w
 13602  13B0  1D03               	skipz
 13603  13B1  2BBC               	goto	u3345
 13604  13B2  0872               	movf	___lldiv@divisor+2,w
 13605  13B3  0276               	subwf	___lldiv@dividend+2,w
 13606  13B4  1D03               	skipz
 13607  13B5  2BBC               	goto	u3345
 13608  13B6  0871               	movf	___lldiv@divisor+1,w
 13609  13B7  0275               	subwf	___lldiv@dividend+1,w
 13610  13B8  1D03               	skipz
 13611  13B9  2BBC               	goto	u3345
 13612  13BA  0870               	movf	___lldiv@divisor,w
 13613  13BB  0274               	subwf	___lldiv@dividend,w
 13614  13BC                     u3345:
 13615  13BC  1C03               	skipc
 13616  13BD  2BBF               	goto	u3341
 13617  13BE  2BC0               	goto	u3340
 13618  13BF                     u3341:
 13619  13BF  2BC9               	goto	l3056
 13620  13C0                     u3340:
 13621  13C0                     l3052:
 13622  13C0  0870               	movf	___lldiv@divisor,w
 13623  13C1  02F4               	subwf	___lldiv@dividend,f
 13624  13C2  0871               	movf	___lldiv@divisor+1,w
 13625  13C3  3BF5               	subwfb	___lldiv@dividend+1,f
 13626  13C4  0872               	movf	___lldiv@divisor+2,w
 13627  13C5  3BF6               	subwfb	___lldiv@dividend+2,f
 13628  13C6  0873               	movf	___lldiv@divisor+3,w
 13629  13C7  3BF7               	subwfb	___lldiv@dividend+3,f
 13630  13C8                     l3054:
 13631  13C8  1479               	bsf	___lldiv@quotient,0
 13632  13C9                     l3056:
 13633  13C9  3001               	movlw	1
 13634  13CA                     u3355:
 13635  13CA  36F3               	lsrf	___lldiv@divisor+3,f
 13636  13CB  0CF2               	rrf	___lldiv@divisor+2,f
 13637  13CC  0CF1               	rrf	___lldiv@divisor+1,f
 13638  13CD  0CF0               	rrf	___lldiv@divisor,f
 13639  13CE  0B89               	decfsz	9,f
 13640  13CF  2BCA               	goto	u3355
 13641  13D0                     l3058:
 13642  13D0  3001               	movlw	1
 13643  13D1  02FD               	subwf	___lldiv@counter,f
 13644  13D2  1D03               	btfss	3,2
 13645  13D3  2BD5               	goto	u3361
 13646  13D4  2BD6               	goto	u3360
 13647  13D5                     u3361:
 13648  13D5  2BA7               	goto	l3048
 13649  13D6                     u3360:
 13650  13D6                     l3060:
 13651  13D6  087C               	movf	___lldiv@quotient+3,w
 13652  13D7  00F3               	movwf	?___lldiv+3
 13653  13D8  087B               	movf	___lldiv@quotient+2,w
 13654  13D9  00F2               	movwf	?___lldiv+2
 13655  13DA  087A               	movf	___lldiv@quotient+1,w
 13656  13DB  00F1               	movwf	?___lldiv+1
 13657  13DC  0879               	movf	___lldiv@quotient,w
 13658  13DD  00F0               	movwf	?___lldiv
 13659  13DE                     l570:
 13660  13DE  0008               	return
 13661  13DF                     __end_of___lldiv:
 13662                           
 13663                           	psect	text63
 13664  1ED6                     __ptext63:	
 13665 ;; *************** function _SYSTEM_Initialize *****************
 13666 ;; Defined at:
 13667 ;;		line 50 in file "mcc_generated_files/mcc.c"
 13668 ;; Parameters:    Size  Location     Type
 13669 ;;		None
 13670 ;; Auto vars:     Size  Location     Type
 13671 ;;		None
 13672 ;; Return value:  Size  Location     Type
 13673 ;;                  1    wreg      void 
 13674 ;; Registers used:
 13675 ;;		wreg, status,2, status,0, pclath, cstack
 13676 ;; Tracked objects:
 13677 ;;		On entry : 0/0
 13678 ;;		On exit  : 0/0
 13679 ;;		Unchanged: 0/0
 13680 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 13681 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13682 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13683 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13684 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13685 ;;Total ram usage:        0 bytes
 13686 ;; Hardware stack levels used: 1
 13687 ;; Hardware stack levels required when called: 1
 13688 ;; This function calls:
 13689 ;;		_OSCILLATOR_Initialize
 13690 ;;		_PIN_MANAGER_Initialize
 13691 ;;		_WDT_Initialize
 13692 ;; This function is called by:
 13693 ;;		_main
 13694 ;; This function uses a non-reentrant model
 13695 ;;
 13696                           
 13697                           
 13698                           ;psect for function _SYSTEM_Initialize
 13699  1ED6                     _SYSTEM_Initialize:
 13700  1ED6                     l3840:	
 13701                           ;incstack = 0
 13702                           ; Regs used in _SYSTEM_Initialize: [wreg+status,2+status,0+pclath+cstack]
 13703                           
 13704                           
 13705                           ;mcc_generated_files/mcc.c: 53:     PIN_MANAGER_Initialize();
 13706  1ED6  3190  203B  319E   	fcall	_PIN_MANAGER_Initialize
 13707                           
 13708                           ;mcc_generated_files/mcc.c: 54:     OSCILLATOR_Initialize();
 13709  1ED9  3190  2000  319E   	fcall	_OSCILLATOR_Initialize
 13710                           
 13711                           ;mcc_generated_files/mcc.c: 55:     WDT_Initialize();
 13712  1EDC  319E  26BE  319E   	fcall	_WDT_Initialize
 13713  1EDF                     l51:
 13714  1EDF  0008               	return
 13715  1EE0                     __end_of_SYSTEM_Initialize:
 13716                           
 13717                           	psect	text64
 13718  1EBE                     __ptext64:	
 13719 ;; *************** function _WDT_Initialize *****************
 13720 ;; Defined at:
 13721 ;;		line 68 in file "mcc_generated_files/mcc.c"
 13722 ;; Parameters:    Size  Location     Type
 13723 ;;		None
 13724 ;; Auto vars:     Size  Location     Type
 13725 ;;		None
 13726 ;; Return value:  Size  Location     Type
 13727 ;;                  1    wreg      void 
 13728 ;; Registers used:
 13729 ;;		wreg
 13730 ;; Tracked objects:
 13731 ;;		On entry : 0/0
 13732 ;;		On exit  : 0/0
 13733 ;;		Unchanged: 0/0
 13734 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 13735 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13736 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13737 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13738 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13739 ;;Total ram usage:        0 bytes
 13740 ;; Hardware stack levels used: 1
 13741 ;; This function calls:
 13742 ;;		Nothing
 13743 ;; This function is called by:
 13744 ;;		_SYSTEM_Initialize
 13745 ;; This function uses a non-reentrant model
 13746 ;;
 13747                           
 13748                           
 13749                           ;psect for function _WDT_Initialize
 13750  1EBE                     _WDT_Initialize:
 13751  1EBE                     l3752:	
 13752                           ;incstack = 0
 13753                           ; Regs used in _WDT_Initialize: [wreg]
 13754                           
 13755                           
 13756                           ;mcc_generated_files/mcc.c: 71:     WDTCON = 0x16;
 13757  1EBE  3016               	movlw	22
 13758  1EBF  0021               	movlb	1	; select bank1
 13759  1EC0  0097               	movwf	23	;volatile
 13760  1EC1                     l57:
 13761  1EC1  0008               	return
 13762  1EC2                     __end_of_WDT_Initialize:
 13763                           
 13764                           	psect	text65
 13765  103B                     __ptext65:	
 13766 ;; *************** function _PIN_MANAGER_Initialize *****************
 13767 ;; Defined at:
 13768 ;;		line 55 in file "mcc_generated_files/pin_manager.c"
 13769 ;; Parameters:    Size  Location     Type
 13770 ;;		None
 13771 ;; Auto vars:     Size  Location     Type
 13772 ;;		None
 13773 ;; Return value:  Size  Location     Type
 13774 ;;                  1    wreg      void 
 13775 ;; Registers used:
 13776 ;;		wreg, status,2
 13777 ;; Tracked objects:
 13778 ;;		On entry : 0/0
 13779 ;;		On exit  : 0/0
 13780 ;;		Unchanged: 0/0
 13781 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 13782 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13783 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13784 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13785 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13786 ;;Total ram usage:        0 bytes
 13787 ;; Hardware stack levels used: 1
 13788 ;; This function calls:
 13789 ;;		Nothing
 13790 ;; This function is called by:
 13791 ;;		_SYSTEM_Initialize
 13792 ;; This function uses a non-reentrant model
 13793 ;;
 13794                           
 13795                           
 13796                           ;psect for function _PIN_MANAGER_Initialize
 13797  103B                     _PIN_MANAGER_Initialize:
 13798  103B                     l3730:	
 13799                           ;incstack = 0
 13800                           ; Regs used in _PIN_MANAGER_Initialize: [wreg+status,2]
 13801                           
 13802                           
 13803                           ;mcc_generated_files/pin_manager.c: 60:     LATE = 0x00;
 13804  103B  0022               	movlb	2	; select bank2
 13805  103C  0190               	clrf	16	;volatile
 13806                           
 13807                           ;mcc_generated_files/pin_manager.c: 61:     LATA = 0x00;
 13808  103D  018C               	clrf	12	;volatile
 13809                           
 13810                           ;mcc_generated_files/pin_manager.c: 62:     LATB = 0x00;
 13811  103E  018D               	clrf	13	;volatile
 13812                           
 13813                           ;mcc_generated_files/pin_manager.c: 63:     LATC = 0x00;
 13814  103F  018E               	clrf	14	;volatile
 13815  1040                     l3732:
 13816                           
 13817                           ;mcc_generated_files/pin_manager.c: 68:     TRISE = 0x08;
 13818  1040  3008               	movlw	8
 13819  1041  0021               	movlb	1	; select bank1
 13820  1042  0090               	movwf	16	;volatile
 13821  1043                     l3734:
 13822                           
 13823                           ;mcc_generated_files/pin_manager.c: 69:     TRISA = 0xFF;
 13824  1043  30FF               	movlw	255
 13825  1044  008C               	movwf	12	;volatile
 13826  1045                     l3736:
 13827                           
 13828                           ;mcc_generated_files/pin_manager.c: 70:     TRISB = 0xFF;
 13829  1045  30FF               	movlw	255
 13830  1046  008D               	movwf	13	;volatile
 13831  1047                     l3738:
 13832                           
 13833                           ;mcc_generated_files/pin_manager.c: 71:     TRISC = 0xFF;
 13834  1047  30FF               	movlw	255
 13835  1048  008E               	movwf	14	;volatile
 13836  1049                     l3740:
 13837                           
 13838                           ;mcc_generated_files/pin_manager.c: 76:     ANSELB = 0xFE;
 13839  1049  30FE               	movlw	254
 13840  104A  0023               	movlb	3	; select bank3
 13841  104B  008D               	movwf	13	;volatile
 13842  104C                     l3742:
 13843                           
 13844                           ;mcc_generated_files/pin_manager.c: 77:     ANSELA = 0x1F;
 13845  104C  301F               	movlw	31
 13846  104D  008C               	movwf	12	;volatile
 13847                           
 13848                           ;mcc_generated_files/pin_manager.c: 82:     WPUE = 0x00;
 13849  104E  0024               	movlb	4	; select bank4
 13850  104F  0190               	clrf	16	;volatile
 13851                           
 13852                           ;mcc_generated_files/pin_manager.c: 83:     WPUB = 0x00;
 13853  1050  018D               	clrf	13	;volatile
 13854  1051                     l3744:
 13855                           
 13856                           ;mcc_generated_files/pin_manager.c: 84:     OPTION_REGbits.nWPUEN = 1;
 13857  1051  0021               	movlb	1	; select bank1
 13858  1052  1795               	bsf	21,7	;volatile
 13859                           
 13860                           ;mcc_generated_files/pin_manager.c: 90:     APFCON = 0x00;
 13861  1053  0022               	movlb	2	; select bank2
 13862  1054  019D               	clrf	29	;volatile
 13863  1055                     l31:
 13864  1055  0008               	return
 13865  1056                     __end_of_PIN_MANAGER_Initialize:
 13866                           
 13867                           	psect	text66
 13868  1000                     __ptext66:	
 13869 ;; *************** function _OSCILLATOR_Initialize *****************
 13870 ;; Defined at:
 13871 ;;		line 58 in file "mcc_generated_files/mcc.c"
 13872 ;; Parameters:    Size  Location     Type
 13873 ;;		None
 13874 ;; Auto vars:     Size  Location     Type
 13875 ;;		None
 13876 ;; Return value:  Size  Location     Type
 13877 ;;                  1    wreg      void 
 13878 ;; Registers used:
 13879 ;;		wreg, status,2
 13880 ;; Tracked objects:
 13881 ;;		On entry : 0/0
 13882 ;;		On exit  : 0/0
 13883 ;;		Unchanged: 0/0
 13884 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 13885 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13886 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13887 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13888 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13889 ;;Total ram usage:        0 bytes
 13890 ;; Hardware stack levels used: 1
 13891 ;; This function calls:
 13892 ;;		Nothing
 13893 ;; This function is called by:
 13894 ;;		_SYSTEM_Initialize
 13895 ;; This function uses a non-reentrant model
 13896 ;;
 13897                           
 13898                           
 13899                           ;psect for function _OSCILLATOR_Initialize
 13900  1000                     _OSCILLATOR_Initialize:
 13901  1000                     l3746:	
 13902                           ;incstack = 0
 13903                           ; Regs used in _OSCILLATOR_Initialize: [wreg+status,2]
 13904                           
 13905                           
 13906                           ;mcc_generated_files/mcc.c: 61:     OSCCON = 0x70;
 13907  1000  3070               	movlw	112
 13908  1001  0021               	movlb	1	; select bank1
 13909  1002  0099               	movwf	25	;volatile
 13910  1003                     l3748:
 13911                           
 13912                           ;mcc_generated_files/mcc.c: 63:     OSCTUNE = 0x00;
 13913  1003  0198               	clrf	24	;volatile
 13914  1004                     l3750:
 13915                           
 13916                           ;mcc_generated_files/mcc.c: 65:     BORCON = 0x00;
 13917  1004  0022               	movlb	2	; select bank2
 13918  1005  0196               	clrf	22	;volatile
 13919  1006                     l54:
 13920  1006  0008               	return
 13921  1007                     __end_of_OSCILLATOR_Initialize:
 13922  007E                     btemp	set	126	;btemp
 13923  007E                     wtemp0	set	126
 13924                           
 13925                           	psect	config
 13926                           
 13927                           ;Config register CONFIG1 @ 0x8007
 13928                           ;	Oscillator Selection
 13929                           ;	FOSC = INTOSC, INTOSC oscillator: I/O function on CLKIN pin
 13930                           ;	Watchdog Timer Enable
 13931                           ;	WDTE = OFF, WDT disabled
 13932                           ;	Power-up Timer Enable
 13933                           ;	PWRTE = OFF, PWRT disabled
 13934                           ;	MCLR Pin Function Select
 13935                           ;	MCLRE = ON, MCLR/VPP pin function is MCLR
 13936                           ;	Flash Program Memory Code Protection
 13937                           ;	CP = OFF, Program memory code protection is disabled
 13938                           ;	Data Memory Code Protection
 13939                           ;	CPD = OFF, Data memory code protection is disabled
 13940                           ;	Brown-out Reset Enable
 13941                           ;	BOREN = ON, Brown-out Reset enabled
 13942                           ;	Clock Out Enable
 13943                           ;	CLKOUTEN = OFF, CLKOUT function is disabled. I/O or oscillator function on the CLKOUT 
      +                          pin
 13944                           ;	Internal/External Switchover
 13945                           ;	IESO = ON, Internal/External Switchover mode is enabled
 13946                           ;	Fail-Safe Clock Monitor Enable
 13947                           ;	FCMEN = ON, Fail-Safe Clock Monitor is enabled
 13948  8007                     	org	32775
 13949  8007  3FE4               	dw	16356
 13950                           
 13951                           ;Config register CONFIG2 @ 0x8008
 13952                           ;	Flash Memory Self-Write Protection
 13953                           ;	WRT = OFF, Write protection off
 13954                           ;	Voltage Regulator Capacitor Enable
 13955                           ;	VCAPEN = OFF, All VCAP pin functionality is disabled
 13956                           ;	PLL Enable
 13957                           ;	PLLEN = OFF, 4x PLL disabled
 13958                           ;	Stack Overflow/Underflow Reset Enable
 13959                           ;	STVREN = ON, Stack Overflow or Underflow will cause a Reset
 13960                           ;	Brown-out Reset Voltage Selection
 13961                           ;	BORV = LO, Brown-out Reset Voltage (Vbor), low trip point selected.
 13962                           ;	Low-Voltage Programming Enable
 13963                           ;	LVP = OFF, High-voltage on MCLR/VPP must be used for programming
 13964  8008                     	org	32776
 13965  8008  1EFF               	dw	7935

Data Sizes:
    Strings     73
    Constant    0
    Data        36
    BSS         51
    Persistent  32
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14     14      14
    BANK0            80     80      80
    BANK1            80     80      80
    BANK2            80      0      55
    BANK3            80      0      32
    BANK4            80      0       0
    BANK5            80      0       0
    BANK6            80      0       0
    BANK7            80      0       0
    BANK8            80      0       0
    BANK9            80      0       0
    BANK10           80      0       0
    BANK11           80      0       0
    BANK12           48      0       0

Pointer List with Targets:

    encode_digit@p	PTR struct . size(1) Largest target is 2
		 -> NULL(NULL[0]), main@tm1637(BANK1[2]), 

    set_brigthness@p	PTR struct . size(1) Largest target is 2
		 -> NULL(NULL[0]), main@tm1637(BANK1[2]), 

    strncmp@_r	PTR const unsigned char  size(2) Largest target is 3
		 -> STR_19(CODE[3]), STR_14(CODE[3]), STR_10(CODE[3]), 

    strncmp@r	PTR const unsigned char  size(2) Largest target is 3
		 -> STR_19(CODE[3]), STR_14(CODE[3]), STR_10(CODE[3]), 

    strncmp@_l	PTR const unsigned char  size(2) Largest target is 12
		 -> STR_7(CODE[12]), STR_6(CODE[6]), STR_5(CODE[10]), STR_4(CODE[8]), 

    strncmp@l	PTR const unsigned char  size(2) Largest target is 12
		 -> STR_7(CODE[12]), STR_6(CODE[6]), STR_5(CODE[10]), STR_4(CODE[8]), 

    strlen@s	PTR const unsigned char  size(1) Largest target is 32
		 -> dbuf(BANK3[32]), 

    strlen@a	PTR const unsigned char  size(1) Largest target is 32
		 -> dbuf(BANK3[32]), 

    fputs@s	PTR const unsigned char  size(1) Largest target is 32
		 -> dbuf(BANK3[32]), 

    fputs@fp	PTR struct _IO_FILE size(1) Largest target is 6
		 -> sprintf@f(BANK1[5]), 

    fputc@fp.buffer	PTR unsigned char  size(1) Largest target is 16
		 -> set_max_gram@valstr(BANK1[16]), print_gram@row2(BANK1[16]), print_gram@row1(BANK1[16]), initialize@valstr(BANK1[16]), 

    fputc@fp	PTR struct _IO_FILE size(1) Largest target is 6
		 -> sprintf@f(BANK1[5]), 

    vfprintf@ap	PTR PTR void  size(1) Largest target is 1
		 -> sprintf@ap(BANK1[1]), 

    vfprintf@fp	PTR struct _IO_FILE size(1) Largest target is 6
		 -> sprintf@f(BANK1[5]), 

    vfprintf@fmt	PTR const unsigned char  size(2) Largest target is 12
		 -> STR_7(CODE[12]), STR_6(CODE[6]), STR_5(CODE[10]), STR_4(CODE[8]), 

    vfprintf@cfmt	PTR unsigned char  size(2) Largest target is 12
		 -> STR_7(CODE[12]), STR_6(CODE[6]), STR_5(CODE[10]), STR_4(CODE[8]), 

    vfpfcnvrt@fp	PTR struct _IO_FILE size(1) Largest target is 6
		 -> sprintf@f(BANK1[5]), 

    vfpfcnvrt@ap	PTR PTR void  size(1) Largest target is 1
		 -> sprintf@ap(BANK1[1]), 

    vfpfcnvrt@fmt	PTR PTR unsigned char  size(1) Largest target is 2
		 -> vfprintf@cfmt(BANK1[2]), 

    utoa@fp	PTR struct _IO_FILE size(1) Largest target is 6
		 -> sprintf@f(BANK1[5]), 

    dtoa@fp	PTR struct _IO_FILE size(1) Largest target is 6
		 -> sprintf@f(BANK1[5]), 

    pad@fp	PTR struct _IO_FILE size(1) Largest target is 6
		 -> sprintf@f(BANK1[5]), 

    pad@buf	PTR unsigned char  size(1) Largest target is 32
		 -> dbuf(BANK3[32]), 

    sprintf@fmt	PTR const unsigned char  size(2) Largest target is 12
		 -> STR_7(CODE[12]), STR_6(CODE[6]), STR_5(CODE[10]), STR_4(CODE[8]), 

    sprintf@s	PTR unsigned char  size(1) Largest target is 16
		 -> set_max_gram@valstr(BANK1[16]), print_gram@row2(BANK1[16]), print_gram@row1(BANK1[16]), initialize@valstr(BANK1[16]), 

    sprintf@ap	PTR void [1] size(1) Largest target is 2
		 -> ?_sprintf(BANK1[2]), 

    S1172_IO_FILE$buffer	PTR unsigned char  size(1) Largest target is 16
		 -> set_max_gram@valstr(BANK1[16]), print_gram@row2(BANK1[16]), print_gram@row1(BANK1[16]), initialize@valstr(BANK1[16]), 

    f.buffer	PTR unsigned char  size(1) Largest target is 16
		 -> set_max_gram@valstr(BANK1[16]), print_gram@row2(BANK1[16]), print_gram@row1(BANK1[16]), initialize@valstr(BANK1[16]), 

    set_max_gram@p.tm1637	PTR struct . size(1) Largest target is 2
		 -> NULL(NULL[0]), main@tm1637(BANK1[2]), 

    set_max_gram@p.lcd	PTR struct . size(1) Largest target is 4
		 -> NULL(NULL[0]), main@lcd(BANK1[4]), 

    set_max_gram@p.loadcell	PTR struct . size(1) Largest target is 12
		 -> NULL(NULL[0]), main@loadcell(BANK1[12]), 

    set_max_gram@p	PTR struct . size(1) Largest target is 9
		 -> main@drink(BANK1[6]), 

    print_gram@p.tm1637	PTR struct . size(1) Largest target is 2
		 -> NULL(NULL[0]), main@tm1637(BANK1[2]), 

    print_gram@p.lcd	PTR struct . size(1) Largest target is 4
		 -> NULL(NULL[0]), main@lcd(BANK1[4]), 

    print_gram@p.loadcell	PTR struct . size(1) Largest target is 12
		 -> NULL(NULL[0]), main@loadcell(BANK1[12]), 

    print_gram@p	PTR struct . size(1) Largest target is 9
		 -> main@drink(BANK1[6]), 

    calc_percentage@p.tm1637	PTR struct . size(1) Largest target is 2
		 -> NULL(NULL[0]), main@tm1637(BANK1[2]), 

    calc_percentage@p.lcd	PTR struct . size(1) Largest target is 4
		 -> NULL(NULL[0]), main@lcd(BANK1[4]), 

    calc_percentage@p.loadcell	PTR struct . size(1) Largest target is 12
		 -> NULL(NULL[0]), main@loadcell(BANK1[12]), 

    calc_percentage@p	PTR struct . size(1) Largest target is 9
		 -> main@drink(BANK1[6]), 

    initialize@p.tm1637	PTR struct . size(1) Largest target is 2
		 -> NULL(NULL[0]), main@tm1637(BANK1[2]), 

    initialize@p.lcd	PTR struct . size(1) Largest target is 4
		 -> NULL(NULL[0]), main@lcd(BANK1[4]), 

    initialize@p.loadcell	PTR struct . size(1) Largest target is 12
		 -> NULL(NULL[0]), main@loadcell(BANK1[12]), 

    initialize@p	PTR struct . size(1) Largest target is 9
		 -> main@drink(BANK1[6]), 

    write4bits@p	PTR struct . size(1) Largest target is 4
		 -> NULL(NULL[0]), main@lcd(BANK1[4]), 

    command@p	PTR struct . size(1) Largest target is 4
		 -> NULL(NULL[0]), main@lcd(BANK1[4]), 

    lcd_print_with@str	PTR unsigned char  size(2) Largest target is 16
		 -> print_gram@row2(BANK1[16]), print_gram@row1(BANK1[16]), STR_3(CODE[15]), STR_2(CODE[11]), 

    lcd_print_with@p	PTR struct . size(1) Largest target is 4
		 -> NULL(NULL[0]), main@lcd(BANK1[4]), 

    lcd_print@p	PTR struct . size(1) Largest target is 4
		 -> NULL(NULL[0]), main@lcd(BANK1[4]), 

    lcd_print@str	PTR unsigned char  size(2) Largest target is 16
		 -> set_max_gram@valstr(BANK1[16]), print_gram@row2(BANK1[16]), print_gram@row1(BANK1[16]), initialize@valstr(BANK1[16]), 
		 -> STR_3(CODE[15]), STR_2(CODE[11]), STR_1(CODE[2]), 

    lcd_set_cursor@p	PTR struct . size(1) Largest target is 4
		 -> NULL(NULL[0]), main@lcd(BANK1[4]), 

    lcd_clear@p	PTR struct . size(1) Largest target is 4
		 -> NULL(NULL[0]), main@lcd(BANK1[4]), 

    lcd_backlight@p	PTR struct . size(1) Largest target is 4
		 -> NULL(NULL[0]), main@lcd(BANK1[4]), 

    lcd_init@p	PTR struct . size(1) Largest target is 4
		 -> NULL(NULL[0]), main@lcd(BANK1[4]), 

    lcd_cmd@p	PTR struct . size(1) Largest target is 4
		 -> NULL(NULL[0]), main@lcd(BANK1[4]), 

    scale_convert_gram@p	PTR struct . size(1) Largest target is 12
		 -> NULL(NULL[0]), main@loadcell(BANK1[12]), 

    get_scale_val@p	PTR struct . size(1) Largest target is 12
		 -> NULL(NULL[0]), main@loadcell(BANK1[12]), 

    get_CELL_DAT_VAL@p	PTR struct . size(1) Largest target is 12
		 -> NULL(NULL[0]), main@loadcell(BANK1[12]), 

    set_CELL_CLK_HIGH@p	PTR struct . size(1) Largest target is 12
		 -> NULL(NULL[0]), main@loadcell(BANK1[12]), 

    set_CELL_CLK_LOW@p	PTR struct . size(1) Largest target is 12
		 -> NULL(NULL[0]), main@loadcell(BANK1[12]), 

    print_digit@p	PTR struct . size(1) Largest target is 2
		 -> NULL(NULL[0]), main@tm1637(BANK1[2]), 

    initialize_digit@p	PTR struct . size(1) Largest target is 2
		 -> NULL(NULL[0]), main@tm1637(BANK1[2]), 

    set_segments@segments	PTR const unsigned char  size(1) Largest target is 4
		 -> print_digit@data(BANK0[4]), clear_segment@data(COMMON[4]), 

    set_segments@p	PTR struct . size(1) Largest target is 2
		 -> NULL(NULL[0]), main@tm1637(BANK1[2]), 

    write_byte@p	PTR struct . size(1) Largest target is 2
		 -> NULL(NULL[0]), main@tm1637(BANK1[2]), 

    get_DIO_PIN_value@p	PTR struct . size(1) Largest target is 2
		 -> NULL(NULL[0]), main@tm1637(BANK1[2]), 

    stop_segment@p	PTR struct . size(1) Largest target is 2
		 -> NULL(NULL[0]), main@tm1637(BANK1[2]), 

    start_segment@p	PTR struct . size(1) Largest target is 2
		 -> NULL(NULL[0]), main@tm1637(BANK1[2]), 

    DIO_SET_LOW@p	PTR struct . size(1) Largest target is 2
		 -> NULL(NULL[0]), main@tm1637(BANK1[2]), 

    DIO_SET_HIGH@p	PTR struct . size(1) Largest target is 2
		 -> NULL(NULL[0]), main@tm1637(BANK1[2]), 

    DIO_SET_INPUT@p	PTR struct . size(1) Largest target is 2
		 -> NULL(NULL[0]), main@tm1637(BANK1[2]), 

    DIO_SET_OUTPUT@p	PTR struct . size(1) Largest target is 2
		 -> NULL(NULL[0]), main@tm1637(BANK1[2]), 

    CLK_SET_LOW@p	PTR struct . size(1) Largest target is 2
		 -> NULL(NULL[0]), main@tm1637(BANK1[2]), 

    CLK_SET_HIGH@p	PTR struct . size(1) Largest target is 2
		 -> NULL(NULL[0]), main@tm1637(BANK1[2]), 

    CLK_SET_OUTPUT@p	PTR struct . size(1) Largest target is 2
		 -> NULL(NULL[0]), main@tm1637(BANK1[2]), 

    drink.tm1637	PTR struct . size(1) Largest target is 2
		 -> NULL(NULL[0]), main@tm1637(BANK1[2]), 

    drink.lcd	PTR struct . size(1) Largest target is 4
		 -> NULL(NULL[0]), main@lcd(BANK1[4]), 

    drink.loadcell	PTR struct . size(1) Largest target is 12
		 -> NULL(NULL[0]), main@loadcell(BANK1[12]), 

    S225$tm1637	PTR struct . size(1) Largest target is 2
		 -> NULL(NULL[0]), main@tm1637(BANK1[2]), 

    F2853.tm1637	PTR struct . size(1) Largest target is 2
		 -> NULL(NULL[0]), main@tm1637(BANK1[2]), 

    S225$lcd	PTR struct . size(1) Largest target is 4
		 -> NULL(NULL[0]), main@lcd(BANK1[4]), 

    F2853.lcd	PTR struct . size(1) Largest target is 4
		 -> NULL(NULL[0]), main@lcd(BANK1[4]), 

    S225$loadcell	PTR struct . size(1) Largest target is 12
		 -> NULL(NULL[0]), main@loadcell(BANK1[12]), 

    F2853.loadcell	PTR struct . size(1) Largest target is 12
		 -> NULL(NULL[0]), main@loadcell(BANK1[12]), 


Critical Paths under _main in COMMON

    _calc_percentage->___xxtofl
    _scale_convert_gram->___xxtofl
    ___fltol->___xxtofl
    ___fldiv->___xxtofl
    ___flmul->___xxtofl
    _print_gram->_lcd_print_with
    _print_gram->_print_digit
    _initialize->_lcd_print_with
    _initialize->_print_digit
    _vfpfcnvrt->_utoa
    _utoa->_pad
    _dtoa->_pad
    _pad->_fputs
    _fputs->_fputc
    _abs->___aomod
    _lcd_print_with->_lcd_print
    _lcd_print_with->_lcd_set_cursor
    _lcd_init->_write4bits
    _write4bits->_lcd_cmd
    _lcd_clear->_lcd_print
    _lcd_clear->_lcd_set_cursor
    _lcd_set_cursor->_command
    _lcd_print->_command
    _command->_lcd_cmd
    _lcd_backlight->_lcd_cmd
    _lcd_cmd->_i2c_write
    _initialize_digit->_print_digit
    _print_digit->_set_segments
    _set_segments->_write_byte
    _write_byte->_CLK_SET_HIGH
    _write_byte->_CLK_SET_LOW
    _write_byte->_CLK_SET_OUTPUT
    _write_byte->_DIO_SET_HIGH
    _write_byte->_DIO_SET_INPUT
    _write_byte->_DIO_SET_LOW
    _write_byte->_DIO_SET_OUTPUT
    _write_byte->_get_DIO_PIN_value
    _stop_segment->_CLK_SET_HIGH
    _stop_segment->_CLK_SET_LOW
    _stop_segment->_CLK_SET_OUTPUT
    _stop_segment->_DIO_SET_HIGH
    _stop_segment->_DIO_SET_LOW
    _stop_segment->_DIO_SET_OUTPUT
    _start_segment->_CLK_SET_HIGH
    _start_segment->_CLK_SET_LOW
    _start_segment->_CLK_SET_OUTPUT
    _start_segment->_DIO_SET_HIGH
    _start_segment->_DIO_SET_LOW
    _start_segment->_DIO_SET_OUTPUT
    _encode_digit->___awdiv
    _get_scale_val->___lldiv

Critical Paths under _main in BANK0

    _calc_percentage->_scale_convert_gram
    _scale_convert_gram->___fltol
    ___fltol->___flmul
    ___flmul->___fldiv
    _sprintf->_vfprintf
    _vfprintf->_vfpfcnvrt
    _vfpfcnvrt->_dtoa
    _utoa->___lodiv
    _utoa->___lomod
    _dtoa->___aodiv
    _dtoa->___aomod
    _pad->_fputs
    _abs->___aomod
    _lcd_print_with->_lcd_set_cursor
    _lcd_clear->_lcd_set_cursor
    _initialize_digit->_print_digit
    _print_digit->_set_segments

Critical Paths under _main in BANK1

    _main->_print_gram
    _set_max_gram->_sprintf
    _print_gram->_sprintf
    _initialize->_sprintf
    _sprintf->_vfprintf

Critical Paths under _main in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _main in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                26    26      0  118573
                                             54 BANK1     26    26      0
                  _SYSTEM_Initialize
                    _calc_percentage
                         _initialize
                         _print_gram
                       _set_max_gram
 ---------------------------------------------------------------------------------
 (1) _set_max_gram                                        19    17      2   29250
                                             19 BANK1     19    17      2
                    _calc_percentage
                          _lcd_clear
                          _lcd_print
                            _sprintf
 ---------------------------------------------------------------------------------
 (2) _calc_percentage                                      6     6      0    9030
                                             76 BANK0      1     1      0
                                              0 BANK1      5     5      0
                            ___fldiv
                            ___flmul
                            ___fltol
                           ___xxtofl
                      _get_scale_val
                 _scale_convert_gram
 ---------------------------------------------------------------------------------
 (3) _scale_convert_gram                                  13    13      0    2567
                                             63 BANK0     13    13      0
                            ___fldiv
                            ___fltol
                           ___xxtofl
 ---------------------------------------------------------------------------------
 (4) ___xxtofl                                            14    10      4     550
                                              0 COMMON    14    10      4
 ---------------------------------------------------------------------------------
 (4) ___fltol                                             11     7      4     381
                                             52 BANK0     11     7      4
                            ___fldiv (ARG)
                            ___flmul (ARG)
                           ___xxtofl (ARG)
 ---------------------------------------------------------------------------------
 (4) ___fldiv                                             26    18      8    1425
                                              0 BANK0     26    18      8
                           ___xxtofl (ARG)
 ---------------------------------------------------------------------------------
 (3) ___flmul                                             26    18      8    2417
                                             26 BANK0     26    18      8
                          __Umul8_16
                            ___fldiv (ARG)
                           ___xxtofl (ARG)
 ---------------------------------------------------------------------------------
 (4) __Umul8_16                                            9     7      2     799
                                              0 COMMON     9     7      2
 ---------------------------------------------------------------------------------
 (1) _print_gram                                          35    35      0   31699
                                             19 BANK1     35    35      0
                          _lcd_clear
                     _lcd_print_with
                        _print_digit
                            _sprintf
 ---------------------------------------------------------------------------------
 (1) _initialize                                          18    18      0   48212
                                             19 BANK1     18    18      0
                      _get_scale_val
                   _initialize_digit
                      _lcd_backlight
                          _lcd_clear
                           _lcd_init
                          _lcd_print
                     _lcd_print_with
                        _print_digit
                            _sprintf
 ---------------------------------------------------------------------------------
 (2) _sprintf                                             16    10      6   11851
                                              5 BANK1     14     8      6
                           _vfprintf
 ---------------------------------------------------------------------------------
 (3) _vfprintf                                             8     5      3   11210
                                             77 BANK0      3     0      3
                                              0 BANK1      5     5      0
                          _vfpfcnvrt
 ---------------------------------------------------------------------------------
 (4) _vfpfcnvrt                                           47    45      2   10889
                                             46 BANK0     31    29      2
                               _dtoa
                              _fputc
                            _strncmp
                               _utoa
 ---------------------------------------------------------------------------------
 (5) _utoa                                                24    16      8    3838
                                             13 COMMON     1     1      0
                                             16 BANK0     23    15      8
                            ___lodiv
                            ___lomod
                                _pad
 ---------------------------------------------------------------------------------
 (6) ___lomod                                             18     2     16     311
                                              0 COMMON     2     2      0
                                              0 BANK0     16     0     16
 ---------------------------------------------------------------------------------
 (6) ___lodiv                                             26    10     16     314
                                              0 COMMON    10    10      0
                                              0 BANK0     16     0     16
 ---------------------------------------------------------------------------------
 (5) _strncmp                                             11     5      6     909
                                              0 COMMON    11     5      6
 ---------------------------------------------------------------------------------
 (5) _dtoa                                                30    22      8    4437
                                             16 BANK0     30    22      8
                            ___aodiv
                            ___aomod
                                _abs
                                _pad
 ---------------------------------------------------------------------------------
 (6) _pad                                                  9     6      3    2722
                                             12 COMMON     1     1      0
                                              4 BANK0      8     5      3
                              _fputc
                              _fputs
                             _strlen
 ---------------------------------------------------------------------------------
 (7) _strlen                                               5     3      2     123
                                              0 COMMON     5     3      2
 ---------------------------------------------------------------------------------
 (7) _fputs                                                8     7      1    1149
                                              8 COMMON     4     3      1
                                              0 BANK0      4     4      0
                              _fputc
 ---------------------------------------------------------------------------------
 (8) _fputc                                                8     5      3     834
                                              0 COMMON     8     5      3
                              _putch
 ---------------------------------------------------------------------------------
 (9) _putch                                                1     1      0       0
 ---------------------------------------------------------------------------------
 (6) _abs                                                  4     2      2     142
                                              3 COMMON     4     2      2
                            ___aomod (ARG)
 ---------------------------------------------------------------------------------
 (6) ___aomod                                             19     3     16     448
                                              0 COMMON     3     3      0
                                              0 BANK0     16     0     16
 ---------------------------------------------------------------------------------
 (6) ___aodiv                                             27    11     16     452
                                              0 COMMON    11    11      0
                                              0 BANK0     16     0     16
 ---------------------------------------------------------------------------------
 (2) _lcd_print_with                                       7     3      4    6263
                                             13 COMMON     1     1      0
                                              6 BANK0      6     2      4
                          _lcd_print
                     _lcd_set_cursor
 ---------------------------------------------------------------------------------
 (2) _lcd_init                                             3     3      0    3155
                                              6 COMMON     3     3      0
                         _write4bits
 ---------------------------------------------------------------------------------
 (3) _write4bits                                           3     2      1    2814
                                              3 COMMON     3     2      1
                            _lcd_cmd
 ---------------------------------------------------------------------------------
 (2) _lcd_clear                                            5     5      0    5410
                                              6 BANK0      5     5      0
                          _lcd_print
                     _lcd_set_cursor
 ---------------------------------------------------------------------------------
 (3) _lcd_set_cursor                                       9     7      2    2659
                                             10 COMMON     3     1      2
                                              0 BANK0      6     6      0
                            _command
 ---------------------------------------------------------------------------------
 (2) _lcd_print                                            5     3      2    2450
                                             10 COMMON     3     1      2
                                              0 BANK0      2     2      0
                            _command
 ---------------------------------------------------------------------------------
 (3) _command                                              7     5      2    1924
                                              3 COMMON     7     5      2
                            _lcd_cmd
 ---------------------------------------------------------------------------------
 (2) _lcd_backlight                                        2     2      0    1233
                                              3 COMMON     2     2      0
                            _lcd_cmd
 ---------------------------------------------------------------------------------
 (4) _lcd_cmd                                              2     1      1    1156
                                              1 COMMON     2     1      1
                          _i2c_start
                           _i2c_stop
                          _i2c_write
 ---------------------------------------------------------------------------------
 (5) _i2c_write                                            1     1      0      22
                                              0 COMMON     1     1      0
                           _i2c_wait
 ---------------------------------------------------------------------------------
 (5) _i2c_stop                                             0     0      0       0
 ---------------------------------------------------------------------------------
 (5) _i2c_start                                            0     0      0       0
                           _i2c_wait
 ---------------------------------------------------------------------------------
 (6) _i2c_wait                                             0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _initialize_digit                                     2     2      0    8211
                                             12 BANK0      2     2      0
                        _print_digit
                     _set_brigthness
 ---------------------------------------------------------------------------------
 (3) _set_brigthness                                       4     2      2     268
                                              0 COMMON     4     2      2
 ---------------------------------------------------------------------------------
 (2) _print_digit                                         11    10      1    7866
                                             13 COMMON     1     0      1
                                              2 BANK0     10    10      0
                            ___awdiv
                            ___awmod
                       _encode_digit
                       _set_segments
 ---------------------------------------------------------------------------------
 (3) _set_segments                                         7     4      3    5118
                                              8 COMMON     5     2      3
                                              0 BANK0      2     2      0
                      _start_segment
                       _stop_segment
                         _write_byte
 ---------------------------------------------------------------------------------
 (4) _write_byte                                           6     5      1    2020
                                              2 COMMON     6     5      1
                       _CLK_SET_HIGH
                        _CLK_SET_LOW
                     _CLK_SET_OUTPUT
                       _DIO_SET_HIGH
                      _DIO_SET_INPUT
                        _DIO_SET_LOW
                     _DIO_SET_OUTPUT
                  _get_DIO_PIN_value
 ---------------------------------------------------------------------------------
 (5) _get_DIO_PIN_value                                    2     2      0     209
                                              0 COMMON     2     2      0
 ---------------------------------------------------------------------------------
 (5) _DIO_SET_INPUT                                        2     2      0      55
                                              0 COMMON     2     2      0
 ---------------------------------------------------------------------------------
 (4) _stop_segment                                         1     1      0    1122
                                              2 COMMON     1     1      0
                       _CLK_SET_HIGH
                        _CLK_SET_LOW
                     _CLK_SET_OUTPUT
                       _DIO_SET_HIGH
                        _DIO_SET_LOW
                     _DIO_SET_OUTPUT
 ---------------------------------------------------------------------------------
 (4) _start_segment                                        1     1      0    1122
                                              2 COMMON     1     1      0
                       _CLK_SET_HIGH
                        _CLK_SET_LOW
                     _CLK_SET_OUTPUT
                       _DIO_SET_HIGH
                        _DIO_SET_LOW
                     _DIO_SET_OUTPUT
 ---------------------------------------------------------------------------------
 (5) _DIO_SET_OUTPUT                                       2     2      0     154
                                              0 COMMON     2     2      0
 ---------------------------------------------------------------------------------
 (5) _DIO_SET_LOW                                          2     2      0     154
                                              0 COMMON     2     2      0
 ---------------------------------------------------------------------------------
 (5) _DIO_SET_HIGH                                         2     2      0     154
                                              0 COMMON     2     2      0
 ---------------------------------------------------------------------------------
 (5) _CLK_SET_OUTPUT                                       2     2      0     121
                                              0 COMMON     2     2      0
 ---------------------------------------------------------------------------------
 (5) _CLK_SET_LOW                                          2     2      0     154
                                              0 COMMON     2     2      0
 ---------------------------------------------------------------------------------
 (5) _CLK_SET_HIGH                                         2     2      0     154
                                              0 COMMON     2     2      0
 ---------------------------------------------------------------------------------
 (3) _encode_digit                                         2     1      1     526
                                              9 COMMON     2     1      1
                            ___awdiv (ARG)
 ---------------------------------------------------------------------------------
 (3) ___awmod                                              7     3      4     752
                                              0 COMMON     7     3      4
 ---------------------------------------------------------------------------------
 (3) ___awdiv                                              9     5      4     756
                                              0 COMMON     9     5      4
 ---------------------------------------------------------------------------------
 (3) _get_scale_val                                       19    15      4    1448
                                              0 BANK0     19    15      4
                            ___lldiv
                   _get_CELL_DAT_VAL
                  _set_CELL_CLK_HIGH
                   _set_CELL_CLK_LOW
 ---------------------------------------------------------------------------------
 (4) _set_CELL_CLK_LOW                                     2     2      0     121
                                              0 COMMON     2     2      0
 ---------------------------------------------------------------------------------
 (4) _set_CELL_CLK_HIGH                                    2     2      0      88
                                              0 COMMON     2     2      0
 ---------------------------------------------------------------------------------
 (4) _get_CELL_DAT_VAL                                     6     4      2     275
                                              0 COMMON     6     4      2
 ---------------------------------------------------------------------------------
 (4) ___lldiv                                             14     6      8     314
                                              0 COMMON    14     6      8
 ---------------------------------------------------------------------------------
 (1) _SYSTEM_Initialize                                    0     0      0       0
              _OSCILLATOR_Initialize
             _PIN_MANAGER_Initialize
                     _WDT_Initialize
 ---------------------------------------------------------------------------------
 (2) _WDT_Initialize                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _PIN_MANAGER_Initialize                               0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _OSCILLATOR_Initialize                                0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 9
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _SYSTEM_Initialize
     _OSCILLATOR_Initialize
     _PIN_MANAGER_Initialize
     _WDT_Initialize
   _calc_percentage
     ___fldiv
       ___xxtofl (ARG)
     ___flmul
       __Umul8_16
       ___fldiv (ARG)
       ___xxtofl (ARG)
     ___fltol
       ___fldiv (ARG)
       ___flmul (ARG)
       ___xxtofl (ARG)
     ___xxtofl
     _get_scale_val
       ___lldiv
       _get_CELL_DAT_VAL
       _set_CELL_CLK_HIGH
       _set_CELL_CLK_LOW
     _scale_convert_gram
       ___fldiv
       ___fltol
       ___xxtofl
   _initialize
     _get_scale_val
     _initialize_digit
       _print_digit
         ___awdiv
         ___awmod
         _encode_digit
           ___awdiv (ARG)
         _set_segments
           _start_segment
             _CLK_SET_HIGH
             _CLK_SET_LOW
             _CLK_SET_OUTPUT
             _DIO_SET_HIGH
             _DIO_SET_LOW
             _DIO_SET_OUTPUT
           _stop_segment
             _CLK_SET_HIGH
             _CLK_SET_LOW
             _CLK_SET_OUTPUT
             _DIO_SET_HIGH
             _DIO_SET_LOW
             _DIO_SET_OUTPUT
           _write_byte
             _CLK_SET_HIGH
             _CLK_SET_LOW
             _CLK_SET_OUTPUT
             _DIO_SET_HIGH
             _DIO_SET_INPUT
             _DIO_SET_LOW
             _DIO_SET_OUTPUT
             _get_DIO_PIN_value
       _set_brigthness
     _lcd_backlight
       _lcd_cmd
         _i2c_start
           _i2c_wait
         _i2c_stop
         _i2c_write
           _i2c_wait
     _lcd_clear
       _lcd_print
         _command
           _lcd_cmd
       _lcd_set_cursor
         _command
     _lcd_init
       _write4bits
         _lcd_cmd
     _lcd_print
     _lcd_print_with
       _lcd_print
       _lcd_set_cursor
     _print_digit
     _sprintf
       _vfprintf
         _vfpfcnvrt
           _dtoa
             ___aodiv
             ___aomod
             _abs
               ___aomod (ARG)
             _pad
               _fputc
                 _putch
               _fputs
                 _fputc
               _strlen
           _fputc
           _strncmp
           _utoa
             ___lodiv
             ___lomod
             _pad
   _print_gram
     _lcd_clear
     _lcd_print_with
     _print_digit
     _sprintf
   _set_max_gram
     _calc_percentage
     _lcd_clear
     _lcd_print
     _sprintf

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             3F0      0       0       0        0.0%
EEDATA             100      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
BITCOMMON            E      0       0       1        0.0%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
COMMON               E      E       E       2      100.0%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
BITSFR2              0      0       0       3        0.0%
SFR2                 0      0       0       3        0.0%
STACK                0      0       0       3        0.0%
BITBANK0            50      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
BANK0               50     50      50       5      100.0%
BITSFR4              0      0       0       5        0.0%
SFR4                 0      0       0       5        0.0%
BITBANK1            50      0       0       6        0.0%
BITSFR5              0      0       0       6        0.0%
SFR5                 0      0       0       6        0.0%
BANK1               50     50      50       7      100.0%
BITSFR6              0      0       0       7        0.0%
SFR6                 0      0       0       7        0.0%
BITBANK2            50      0       0       8        0.0%
BITSFR7              0      0       0       8        0.0%
SFR7                 0      0       0       8        0.0%
BANK2               50      0      37       9       68.8%
BITSFR8              0      0       0       9        0.0%
SFR8                 0      0       0       9        0.0%
BITBANK3            50      0       0      10        0.0%
BITSFR9              0      0       0      10        0.0%
SFR9                 0      0       0      10        0.0%
BANK3               50      0      20      11       40.0%
BITSFR10             0      0       0      11        0.0%
SFR10                0      0       0      11        0.0%
BITBANK4            50      0       0      12        0.0%
BITSFR11             0      0       0      12        0.0%
SFR11                0      0       0      12        0.0%
BANK4               50      0       0      13        0.0%
BITSFR12             0      0       0      13        0.0%
SFR12                0      0       0      13        0.0%
BITBANK5            50      0       0      14        0.0%
BITSFR13             0      0       0      14        0.0%
SFR13                0      0       0      14        0.0%
BANK5               50      0       0      15        0.0%
BITSFR14             0      0       0      15        0.0%
SFR14                0      0       0      15        0.0%
BITBANK6            50      0       0      16        0.0%
BITSFR15             0      0       0      16        0.0%
SFR15                0      0       0      16        0.0%
BANK6               50      0       0      17        0.0%
BITSFR16             0      0       0      17        0.0%
SFR16                0      0       0      17        0.0%
BITBANK7            50      0       0      18        0.0%
BITSFR17             0      0       0      18        0.0%
SFR17                0      0       0      18        0.0%
BANK7               50      0       0      19        0.0%
BITSFR18             0      0       0      19        0.0%
SFR18                0      0       0      19        0.0%
BITSFR19             0      0       0      20        0.0%
SFR19                0      0       0      20        0.0%
ABS                  0      0     105      20        0.0%
BITBANK8            50      0       0      21        0.0%
BITSFR20             0      0       0      21        0.0%
SFR20                0      0       0      21        0.0%
BANK8               50      0       0      22        0.0%
BITSFR21             0      0       0      22        0.0%
SFR21                0      0       0      22        0.0%
BITBANK9            50      0       0      23        0.0%
BITSFR22             0      0       0      23        0.0%
SFR22                0      0       0      23        0.0%
BANK9               50      0       0      24        0.0%
BITSFR23             0      0       0      24        0.0%
SFR23                0      0       0      24        0.0%
BITBANK10           50      0       0      25        0.0%
BITSFR24             0      0       0      25        0.0%
SFR24                0      0       0      25        0.0%
BANK10              50      0       0      26        0.0%
BITSFR25             0      0       0      26        0.0%
SFR25                0      0       0      26        0.0%
BITBANK11           50      0       0      27        0.0%
BITSFR26             0      0       0      27        0.0%
SFR26                0      0       0      27        0.0%
BANK11              50      0       0      28        0.0%
BITSFR27             0      0       0      28        0.0%
SFR27                0      0       0      28        0.0%
BITBANK12           30      0       0      29        0.0%
BITSFR28             0      0       0      29        0.0%
SFR28                0      0       0      29        0.0%
BANK12              30      0       0      30        0.0%
BITSFR29             0      0       0      30        0.0%
SFR29                0      0       0      30        0.0%
BITSFR30             0      0       0      31        0.0%
SFR30                0      0       0      31        0.0%
DATA                 0      0     105      31        0.0%
BITSFR31             0      0       0      32        0.0%
SFR31                0      0       0      32        0.0%


Microchip Technology PIC Macro Assembler V2.32 build 20210201212658 
Symbol Table                                                                                   Sun Dec 19 20:14:34 2021

                   ___fldiv@aexp 0039                     ___fldiv@bexp 0038                     ___fldiv@sign 0031  
         __size_of_start_segment 001A                      _SSPSTATbits 0214                               l31 1055  
                             l51 1EDF                               l54 1006                               l57 1EC1  
                             l81 1F43                               l75 1F4F                               l84 0006  
                             l78 1F3F                               l87 000A                               l96 1F54  
                             l99 1F58                     ___awdiv@sign 0076                     lcd_clear@col 0029  
            __Umul8_16@word_mpld 0076                     lcd_clear@row 0028                              l102 1F5F  
                            l200 1F25                              l210 156C                              l203 1FE5  
                            l206 1FFF                              l230 1F86                              l223 129A  
                            l224 12D0                              l320 1F9C                              l225 12D4  
                            l314 1FB3                              l244 1ED5                              l236 1439  
                            l252 0B88                              l261 1EF3                              l341 10B7  
                            l317 0A22                              l182 1F11                              l334 1152  
                            l350 1070                              l191 1F2F                              l247 1F72  
                            l335 1165                              l264 1EE9                              l344 1FCB  
                            l185 1EFD                              l329 11DC                              l194 1F39  
                            l291 0D27                              l347 132B                              l268 08D4  
                            l700 127E                              l188 1F07                              l197 1F1B  
                            l373 1765                              l381 14FC                              l295 17FF  
                            l384 0831                              l570 13DE                              l634 0FEE  
                            l378 0979                              l635 0FFF                              l647 0E00  
                            l735 163D                              l648 0E11                              l912 035B  
                            l728 1652                              l913 0375                              l738 1652  
                            l931 07E0                              l915 0384                              l907 030F  
                            l774 16D6                              l950 1083                              l687 0069  
                            l767 16C6                              l943 07D4                              l784 15DD  
                            l952 1093                              l777 15CD                              l937 075C  
                            l891 0231                              l893 038D                              l981 0A80  
                            l975 0A45                              l977 0ACE                              l988 0A9A  
                            l997 1103                              l989 0AA6                              _RC5 0075  
                            _RC6 0076                              _RC7 0077                              _abs 1007  
                            _pad 132C                     ___awmod@sign 0076                              wreg 0009  
                   ___flmul@aexp 004C                     ___flmul@bexp 004D                      command@mode 0074  
                   ___flmul@sign 0047                     ___flmul@temp 0052                     ___flmul@prod 004E  
      get_scale_val@weight_count 002D                  ?_lcd_set_cursor 007A                   ??_encode_digit 007A  
                   ___fltol@exp1 005E                             l1110 122B                             l1031 1384  
                           l1040 00F1                             l1121 0801                             l1026 1348  
                           l1034 00B3                             l1043 0162                             l1035 00BC  
                           l1131 1495                             ?_abs 0073                             l1060 0E1D  
                           l1029 136A                             l1118 112C                             l1127 103A  
                           l1039 00D9                             l1072 0EFE                             l1064 0E38  
                           l1057 01D9                             l3010 08B2                             l3002 0895  
                           l1091 119E                             l3020 08D2                             l3004 089E  
                           l3100 005B                             l3014 08BE                             l3102 0060  
                           l3110 122D                             l3030 1304                             l1095 1020  
                           l1079 0589                             l3040 1385                             l3016 08C7  
                           l3008 08A9                             l3104 0065                             l3120 1241  
                           l3112 1231                             l3032 130D                             l3024 12D6  
                           l3200 01FE                             l3050 13AE                             l3042 1395  
                           l3130 1257                             l3122 1247                             l3114 1236  
                           l3034 1311                             l3026 12F3                             l1098 1020  
                           l3210 0214                             l3202 0206                             l3052 13C0  
                           l3044 1398                             l3060 13D6                             l3140 1275  
                           l3132 1261                             l3124 124A                             l3116 1238  
                           l3108 122C                             l3036 1319                             l3028 12FB  
                           l3300 033D                             l3212 0219                             l3220 0229  
                           l3204 020B                             l3054 13C8                             l3046 13A3  
                           l3070 0015                             l3142 127A                             l3134 1265  
                           l3126 124F                             l3118 123C                             l3038 1322  
                           l3310 0374                             l3302 0341                             l3222 0239  
                           l3230 0252                             l3214 021E                             l3206 020F  
                           l3056 13C9                             l3048 13A7                             l3080 0026  
                           l3072 0017                             l3064 000B                             l3136 126A  
                           l3128 1253                             l2600 1EFF                             l3400 0410  
                           l3312 037A                             l3304 034E                             l3240 0278  
                           l3232 0257                             l3224 0245                             l3216 0226  
                           l3208 0213                             l3160 1611                             l3152 15F3  
                           l3058 13D0                             l3090 003C                             l3082 002C  
                           l3074 001B                             l3066 000C                             l3138 1270  
                           l2602 1F27                             l2610 14FE                             l3402 0428  
                           l3330 108A                             l3322 1072                             l3314 037E  
                           l3306 0369                             l3250 029D                             l3242 0280  
                           l3226 0249                             l3218 0227                             l3162 1615  
                           l3170 162D                             l3154 1606                             l3146 15DE  
                           l3500 0C7A                             l3092 004B                             l3084 002F  
                           l3076 0020                             l3068 0010                             l2604 1F31  
                           l2612 1506                             l2700 0D33                             l3412 0483  
                           l3404 0441                             l3332 108F                             l3324 1074  
                           l3316 0380                             l3308 036C                             l3260 02BC  
                           l3252 02A1                             l3244 0288                             l3236 0260  
                           l3180 1647                             l3156 1607                             l3148 15EA  
                           l3340 0A2D                             l3510 0CA5                             l3502 0C81  
                           l3094 004F                             l3086 0034                             l3078 0024  
                           l2606 1F13                             l2630 152E                             l2622 1517  
                           l2710 0D8D                             l2702 0D54                             l2550 11E7  
                           l3414 0495                             l3422 04C9                             l3406 044A  
                           l3326 107B                             l3270 02D8                             l3262 02C4  
                           l3254 02A2                             l3246 028A                             l3238 0270  
                           l3190 01E9                             l3182 01DA                             l3158 160F  
                           l3350 0A5B                             l3342 0A3D                             l3512 0CA9  
                           l3504 0C85                             l3096 0050                             l3088 0038  
                           l2608 1F1D                             l2640 1542                             l2624 1520  
                           l2616 150A                             l2720 0DCF                             l2712 0D95  
                           l2704 0D5E                             l2552 11EC                             l3424 04E1  
                           l3432 0530                             l3416 049D                             l3408 0469  
                           l3328 107F                             l3600 05BE                             l3272 02DF  
                           l3280 02EF                             l3248 028F                             l3256 02A9  
                           l3264 02C8                             l3192 01EE                             l3184 01E0  
                           l3176 1634                             l3168 161D                             l3360 0A87  
                           l3352 0A66                             l3344 0A4D                             l3336 0A24  
                           l3530 0CCB                             l3522 0CB5                             l3514 0CAE  
                           l3506 0C89                             l3098 0055                             l2642 154B  
                           l2634 1535                             l2618 1513                             l2810 1296  
                           l2562 1F44                             l2714 0D99                             l2722 0DDD  
                           l2706 0D7D                             l2554 11F6                             l2546 11DD  
                           l2570 1109                             l2730 166A                             l3450 057F  
                           l3434 0542                             l3442 055B                             l3426 04EA  
                           l3418 04AF                             l3610 05D5                             l3602 05C2  
                           l3282 02F3                             l3274 02E3                             l3266 02CE  
                           l3258 02BB                             l3194 01F3                             l3186 01E4  
                           l3178 1642                             l3370 0ABC                             l3362 0A90  
                           l3354 0A6D                             l3338 0A29                             l3540 0D0B  
                           l3532 0CD0                             l3524 0CB9                             l3516 0CB4  
                           l3508 0C8E                             l2652 155F                             l2636 153E  
                           l2628 1525                             l2820 12C3                             l2812 129E  
                           l2804 1289                             l3460 1F80                             l2564 1F44  
                           l2660 0F00                             l2724 0DE2                             l2716 0D9D  
                           l2708 0D8A                             l2556 1213                             l2548 11E2  
                           l2572 1117                             l2580 102B                             l2740 1685  
                           l2732 166D                             l2900 0E30                             l3444 0563  
                           l3436 054A                             l3428 0516                             l3380 0390  
                           l3700 07A5                             l3612 05D7                             l3604 05C3  
                           l3292 0314                             l3284 02F4                             l3276 02E4  
                           l3268 02D6                             l3196 01FB                             l3188 01E8  
                           l3372 0AC1                             l3364 0A94                             l3356 0A71  
                           l3348 0A56                             l3542 0D1F                             l3534 0CE0  
                           l3526 0CBD                             l2654 1568                             l2646 1550  
                           l2822 12C8                             l2814 12A2                             l2806 128D  
                           l3470 0B2E                             l3462 0AD1                             l2566 1F4B  
                           l2590 0004                             l2830 1FA8                             l2670 0F58  
                           l2662 0F0A                             l2718 0DBF                             l2558 1223  
                           l2574 111C                             l2582 1034                             l2742 16A7  
                           l2734 1675                             l2726 1653                             l2750 157A  
                           l2910 0E83                             l2902 0E40                             l3438 0555  
                           l3390 03C4                             l3382 03A1                             l3710 07CF  
                           l3702 07B3                             l3630 0633                             l3622 05F2  
                           l3614 05DF                             l3606 05C8                             l3294 0319  
                           l3286 02F8                             l3278 02EB                             l3198 01FC  
                           l3374 0AC5                             l3366 0A9E                             l3358 0A79  
                           l3528 0CC6                             l3536 0CE4                             l3480 0C47  
                           l2648 1559                             l2816 12A6                             l2808 1291  
                           l3472 0B41                             l3464 0AE5                             l3456 1F73  
                           l2592 1F51                             l2832 1FAC                             l3800 1F88  
                           l3560 112F                             l2680 0F7E                             l2672 0F62  
                           l2664 0F2B                             l2568 1106                             l2576 1022  
                           l2840 008F                             l2744 16B7                             l2736 1679  
                           l2728 165D                             l2760 15AF                             l2752 157D  
                           l2920 0ECB                             l2912 0E87                             l2904 0E54  
                           l3392 03D5                             l3384 03A9                             l3448 0566  
                           l3720 1170                             l3712 07D0                             l3704 07BC  
                           l3640 067B                             l3632 064D                             l3624 05FF  
                           l3616 05E4                             l3608 05CD                             l3296 0321  
                           l3288 030C                             l3376 0AC6                             l3368 0AA8  
                           l3552 179A                             l3730 103B                             l3538 0CEA  
                           l3490 0C69                             l3482 0C4B                             l2818 12AC  
                           l3474 0B5C                             l3466 0B00                             l3458 1F78  
                           l2586 1F3A                             l2594 1F5C                             l2834 1FAF  
                           l2826 1F9E                             l3802 1F90                             l3570 1097  
                           l3562 113F                             l3810 11A5                             l2690 0FBD  
                           l2682 0F82                             l2674 0F6F                             l2666 0F35  
                           l2658 0EFF                             l2578 1027                             l2770 1341  
                           l2850 00E1                             l2842 0095                             l2930 143A  
                           l2746 16B8                             l2738 167D                             l2762 15BF  
                           l2754 1585                             l2922 0ED8                             l2914 0E8B  
                           l2906 0E57                             l3394 03DD                             l3386 03AE  
                           l3722 1174                             l3714 07D8                             l3706 07BE  
                           l3650 06B1                             l3642 0682                             l3634 065A  
                           l3626 060C                             l3618 05E9                             l3298 0325  
                           l3554 17CF                             l3546 1768                             l3740 1049  
                           l3732 1040                             l3492 0C74                             l3484 0C54  
                           l2596 1F09                             l3476 0B6F                             l3468 0B13  
                           l2588 1F3D                             l2828 1FA1                             l3804 1F98  
                           l3572 10A0                             l3564 1149                             l3812 11B1  
                           l3820 11CC                             l2684 0F8A                             l2676 0F72  
                           l2692 0FCB                             l2668 0F54                             l2780 136F  
                           l2772 1346                             l2764 132E                             l2860 00FE  
                           l2852 00E7                             l2844 00B8                             l2836 006C  
                           l2940 145D                             l2932 1442                             l2756 1589  
                           l2748 156D                             l2924 0EE6                             l2908 0E5C  
                           l2916 0EB8                             l3396 03F6                             l3388 03B2  
                           l3724 118C                             l3708 07CB                             l3660 0712  
                           l3652 06C5                             l3644 068F                             l3636 0667  
                           l3628 0626                             l3580 0590                             l3556 17EB  
                           l3548 1792                             l3900 0B98                             l3750 1004  
                           l3742 104C                             l3734 1043                             l3494 0C78  
                           l3486 0C5C                             l2598 1EF5                             l2790 1FCD  
                           l3478 0B7B                             l3574 10A4                             l3566 115C  
                           l3822 11D6                             l3814 11BA                             l3806 11A1  
                           l3558 1057                             l2694 0FD0                             l2686 0FAC  
                           l2678 0F7A                             l2782 1378                             l2774 134B  
                           l2766 1333                             l2870 017D                             l2862 012D  
                           l2854 00EC                             l2846 00CB                             l2838 007C  
                           l2942 1466                             l2934 144E                             l2758 158D  
                           l2918 0EBF                             l2926 0EEB                             l3726 1196  
                           l3718 1168                             l3830 10E6                             l3670 0731  
                           l3662 0719                             l3654 06D2                             l3646 0696  
                           l3638 066E                             l3590 05A3                             l3582 0594  
                           l3910 0BAE                             l3902 0B9B                             ?_pad 0024  
                           l3744 1051                             l3736 1045                             l3752 1EBE  
                           l3840 1ED6                             l3488 0C5E                             l2792 1FE7  
                           l2960 1419                             l2952 13E1                             l3576 10AE  
                           l3568 1096                             l3816 11BF                             l3808 11A3  
                           l3824 1FB5                             l2688 0FBC                             l2696 0D28  
                           l2776 1357                             l2768 133C                             l2880 01A9  
                           l2872 018A                             l2864 0131                             l2856 00F6  
                           l2848 00D1                             l2944 146F                             l3832 10E8  
                           l3680 0745                             l3672 0738                             l3664 0725  
                           l3656 06E6                             l3648 06AA                             l3592 05AB  
                           l3584 0598                             l3760 090F                             l3920 0BDC  
                           l3912 0BBE                             l3904 0B9D                             l3746 1000  
                           l3738 1047                             l2970 1EE1                             l2794 1280  
                           l2962 141F                             l2954 1403                             l3762 1F62  
                           l3818 11C8                             l3770 098F                             l3826 1FC2  
                           l2698 0D29                             l2786 1007                             l2778 135C  
                           l2882 01AE                             l2890 01C6                             l2874 0198  
                           l2866 0135                             l2858 00F9                             l2946 1475  
                           l2938 1451                             l3834 10EA                             l3850 1751  
                           l3842 16D9                             l3690 076E                             l3682 0759  
                           l3666 072C                             l3674 073C                             l3658 06FB  
                           l3594 05AD                             l3586 0599                             l3578 058A  
                           l3754 08D7                             l3930 0BED                             l3922 0BE0  
                           l3914 0BC6                             l3906 0B9E                             l3748 1003  
                           l2980 084E                             l2972 0833                             l2964 1ECE  
                           l2796 1284                             l2956 1406                             l3764 1F6C  
                           l3780 09C4                             l3772 099E                             l2788 1014  
                           l2884 01B4                             l2868 0170                             l2876 019D  
                           l2948 1485                             l3836 10FB                             l3828 10DE  
                           l3852 1759                             l3844 16E8                             l3692 0772  
                           l3676 0740                             l3668 0730                             l3596 05B5  
                           l3588 059E                             l3756 08FB                             l3860 080C  
                           l3940 0C11                             l3932 0BF1                             l3924 0BE4  
                           l3916 0BD4                             l3908 0B9F                             l2990 086C  
                           l2974 083B                             l2798 1288                             l2958 1414  
                           l3790 09EA                             l3782 09C8                             l3774 09A5  
                           l3766 097B                             l2886 01B9                             l2878 01A4  
                           l2894 0E14                             l3846 16F7                             l3854 1498  
                           l3694 078A                             l3686 0761                             l3678 0741  
                           l3598 05BA                             l3758 0909                             l3862 0818  
                           l3942 0C1A                             l3934 0BF6                             l3926 0BE5  
                           l3918 0BD8                             l2992 0875                             l2984 0858  
                           l2968 1EEB                             l3792 09F9                             l3784 09D0  
                           l3776 09B0                             l3768 0987                             l2888 01BD  
                           l2896 0E19                             l3848 1739                             l3856 14EE  
                           l3688 0766                             l3696 078E                             l3864 0820  
                           l3944 0C27                             l3936 0BFF                             l3928 0BE9  
                           l2986 0861                             l2978 0845                             l3794 09FE  
                           l3786 09D5                             l3778 09B8                             l2898 0E2A  
                           l3698 079B                             l3866 082C                             l3858 0804  
                           l3946 0C2C                             l3938 0C0C                             l3890 0B8F  
                           l2996 0882                             l3796 0A0F                             l3788 09E6  
                           l3948 0C35                             l3892 0B92                             l3884 0B89  
                           l2998 088B                             l3798 0A13                             l3894 0B94  
                           l3886 0B8C                             l3896 0B96                             l3888 0B8E  
                           l3898 0B97                             STR_1 2047                             STR_2 201B  
                           STR_3 2000                             STR_4 2030                             STR_5 2026  
                           STR_6 2038                             STR_7 200F                             STR_8 203E  
                           u3000 0170                             u3001 016F                             u3010 017D  
                           u3011 017C                             u3020 018A                             u3100 0EBF  
                           u3021 0189                             u3005 016C                             u3101 0EBE  
                           _LATA 010C                             u3030 0198                             u3110 0ECB  
                           _LATB 010D                             u3031 0197                             u3111 0ECA  
                           _LATC 010E                             u3200 141F                             u2400 112C  
                           u3040 019D                             u3120 0ED8                             u4000 0A4D  
                           u3201 141E                             u2401 112B                             u3041 019C  
                           u3025 0186                             u3121 0ED7                             u4001 0A4C  
                           _LATE 0110                             u3210 083B                             u2410 1034  
                           u3050 01A4                             u3130 0EE6                             u3211 083A  
                           u2411 1033                             u3051 01A3                             u3035 0194  
                           u3131 0EE5                             u3300 1395                             u3220 084E  
                           u2500 153E                             u2420 1F43                             u2340 11E2  
                           u3060 01A9                             u3140 0EEB                             u4100 0AC1  
                           u4020 0A6C                             u3301 1394                             u3221 084D  
                           u2501 153D                             u2421 1F42                             u2341 11E1  
                           u3061 01A8                             u3141 0EEA                             u3125 0ED4  
                           u4101 0AC0                             u4021 0A6B                             u3230 0861  
                           u2510 154B                             u2430 000A                             u2350 11E7  
                           u3070 01B4                             u3150 144E                             u4110 0AC5  
                           u3231 0860                             u2511 154A                             u2431 0009  
                           u2351 11E6                             u3071 01B3                             u3151 144D  
                           u3135 0EE2                             u4111 0AC4                             u4015 0A60  
                           u3320 13A7                             u3240 0875                             u2520 1559  
                           u4200 1F78                             u2440 1F58                             u2600 0F82  
                           u2360 11F6                             u3160 1466                             u3080 0E19  
                           u4120 03A1                             u4040 0A86                             u3321 13A6  
                           u3241 0874                             u2521 1558                             u4201 1F77  
                           u2441 1F57                             u2601 0F81                             u2361 11F5  
                           u3161 1465                             u3081 0E18                             u4121 03A0  
                           u4041 0A85                             u3250 088B                             u4210 0C69  
                           u3410 003C                             u2530 1568                             u2450 1F5C  
                           u2610 0FAC                             u2370 1213                             u3170 146F  
                           u3090 0E2A                             u4130 03C4                             u3315 1399  
                           u3251 088A                             u4211 0C68                             u3411 003B  
                           u2531 1567                             u2451 1F5B                             u2611 0FAB  
                           u2371 1212                             u3171 146E                             u3091 0E29  
                           u4131 03C3                             u4035 0A7A                             u3340 13C0  
                           u3260 089E                             u4220 0C74                             u2460 1506  
                           u2380 1F4B                             u2620 0FCB                             u2540 0F0A  
                           u2700 0D9D                             u3180 1475                             u4140 03D5  
                           u4300 0598                             u4060 0A94                             u3341 13BF  
                           u3261 089D                             u4221 0C73                             u3405 0030  
                           u2461 1505                             u2381 1F4A                             u2621 0FCA  
                           u2541 0F09                             u2701 0D9C                             u3181 1474  
                           u4141 03D4                             u4301 0597                             u4061 0A93  
                           u3270 08B2                             u3430 004B                             u3510 1257  
                           u2470 1513                             u2390 1F4F                             u2630 0FD0  
                           u2710 0DBF                             u3190 1485                             u4150 0428  
                           u4310 059E                             u4070 0A9A                             u3335 13A8  
                           u3271 08B1                             u3431 004A                             u3511 1256  
                           u2471 1512                             u2391 1F4E                             u2631 0FCF  
                           u2615 0FA8                             u2711 0DBE                             u2375 120F  
                           u3191 1484                             u3095 0E26                             u4151 0427  
                           u4311 059D                             u4071 0A99                             u4055 0A8A  
                           u3360 13D6                             u3280 08C7                             u4240 0CB4  
                           u3520 1261                             u2480 1520                             u2560 0F35  
                           u2720 0DDD                             u2800 157A                             u4160 0441  
                           u4400 06F1                             u4320 05A3                             u4080 0A9E  
                           u3361 13D5                             u3345 13BC                             u3281 08C6  
                           u4241 0CB3                             u3425 003D                             u3521 1260  
                           u3505 124B                             u2481 151F                             u2561 0F34  
                           u2721 0DDC                             u2801 1579                             u4161 0440  
                           u4321 05A2                             u4081 0A9D                             u4250 0CD0  
                           u3450 005B                             u3370 0010                             u2490 152E  
                           u2730 0DE2                             u2650 0D33                             u2810 158D  
                           u4170 0495                             u4410 0708                             u4330 05C2  
                           u3610 162C                             u4090 0AB2                             u3355 13CA  
                           u4251 0CCF                             u4235 0C7B                             u3451 005A  
                           u3435 0047                             u3371 000F                             u2491 152D  
                           u2731 0DE1                             u2715 0DBB                             u2651 0D32  
                           u2811 158C                             u4171 0494                             u4331 05C1  
                           u3611 162B                             u4260 0CEA                             u3460 0060  
                           u3380 001B                             u3540 1270                             u2900 12AC  
                           u2580 0F5F                             u2820 15AF                             u4180 04E1  
                           u4500 0766                             u4340 05C8                             u3700 0219  
                           u3620 1633                             u4261 0CE9                             u3461 005F  
                           u3445 0051                             u3381 001A                             u3541 126F  
                           u3525 125D                             u2901 12AB                             u2821 15AE  
                           u4181 04E0                             u4501 0765                             u4405 06ED  
                           u4341 05C7                             u3701 0218                             u3621 1632  
                           u3605 161E                             u3390 002C                             u3550 1275  
                           u3470 1231                             u2910 12C8                             u2590 0F6F  
                           u2670 0D5E                             u2750 165A                             u2830 15CD  
                           u4190 0542                             u4510 0772                             u4350 05CD  
                           u3710 021E                             u4270 1792                             u3391 002B  
                           u3551 1274                             u3535 1266                             u3471 1230  
                           u2911 12C7                             u3295 12E8                             u2591 0F6E  
                           u2671 0D5D                             u2831 15CC                             u4191 0541  
                           u4511 0771                             u4415 0704                             u4351 05CC  
                           u3711 021D                             u4095 0AAE                             u4271 1791  
                           u3480 123C                             u4280 1149                             u2840 1333  
                           u2920 0087                             u2760 166A                             u4520 0780  
                           u4440 0730                             u4360 05E4                             u3800 02CE  
                           u3720 0239                             u3640 1642                             u3560 15EA  
                           u3481 123B                             u4281 1148                             u2841 1332  
                           u2921 0085                             u2761 1669                             u2825 15AB  
                           u4441 072F                             u4425 0713                             u4361 05E3  
                           u3801 02CD                             u3721 0238                             u3641 1641  
                           u3561 15E9                             u3490 1247                             u4290 10B7  
                           u2690 0D8A                             u2850 1341                             u2930 0088  
                           u2770 167D                             u4530 079B                             u4370 05E9  
                           u3810 02D6                             u3730 0257                             u3650 1647  
                           u3570 1600                             u3491 1246                             u4291 10B6  
                           u2691 0D89                             u2851 1340                             u2771 167C  
                           u4531 079A                             u4435 0726                             u4371 05E8  
                           u3811 02D5                             u3731 0256                             u3651 1646  
                           u3635 1635                             u4275 178E                             u2860 136A  
                           u2940 0095                             u2780 16A7                             u4540 07B3  
                           u4460 0740                             u3900 0325                             u3740 028F  
                           u3660 01E8                             u3580 1615                             u4620 0BAA  
                           u2861 1369                             u2941 0094                             u2781 16A6  
                           u4541 07B2                             u4525 077C                             u4461 073F  
                           u3901 0324                             u3741 028E                             u3661 01E7  
                           u3581 1614                             u2870 136F                             u2790 16C6  
                           u4550 07CF                             u4470 0745                             u3910 0333  
                           u3830 02E3                             u3670 01EE                             u3590 161C  
                           u4630 0BD0                             u2871 136E                             u2791 16C5  
                           u4551 07CE                             u4535 0797                             u4471 0744  
                           u4455 0732                             u3831 02E2                             u3671 01ED  
                           u3591 161B                             u3575 15FC                             u2880 1014  
                           u2960 00B8                             u4560 1196                             u4480 0759  
                           u3920 034E                             u3680 01F3                             u4640 0BF6  
                           u2881 1013                             u2865 1366                             u2961 00B7  
                           u2785 16A3                             u4561 1195                             u4545 07AF  
                           u4481 0758                             u4385 0668                             u3921 034D  
                           u3825 02D9                             u3681 01F2                             u4641 0BF5  
                           u2890 1291                             u2970 00CB                             u4490 0760  
                           u3930 0369                             u3850 02F3                             u3770 02A1  
                           u3690 0213                             u4570 0909                             u4650 0C11  
                           u2891 1290                             u4707 0980                             u2971 00CA  
                           u4491 075F                             u4395 0697                             u3931 0368  
                           u3915 032F                             u3851 02F2                             u3771 02A0  
                           u3755 0290                             u3691 0212                             u4571 0908  
                           u4651 0C10                             u4580 11C8                             u2980 00E7  
                           u3940 037E                             u3860 02F8                             u4660 0C2C  
                           u4581 11C7                             u4717 0992                             u2885 1010  
                           u2981 00E6                             u3941 037D                             u3925 034A  
                           u3861 02F7                             u3845 02E5                             u3765 0297  
                           u4661 0C2B                             u4590 11D6                             u2990 00EC  
                           u3950 107F                             u3870 030C                             u3790 02BB  
                           u4591 11D5                             u4807 0A10                             u4727 09A1  
                           u2991 00EB                             u2975 00C7                             u3951 107E  
                           u3935 0365                             u3871 030B                             u3791 02BA  
                           u3880 0313                             u4817 0A1E                             u4737 09AE  
                           u3881 0312                             u3785 02A3                             u3970 108F  
                           u3890 0319                             u4827 130E                             u4747 09B9  
                           u3971 108E                             u3891 0318                             u3795 02B7  
                           u3980 0A29                             u4837 1F99                             u4757 09C5  
                           u3965 1084                             u3981 0A28                             u4677 0C05  
                           u3990 0A2D                             u4847 1FB0                             u4767 09D6  
                           u3991 0A2C                             u4687 0C20                             u4857 0C75  
                           u4777 09E7                             u4697 0C3B                             u4867 0C86  
                           u4787 09F5                             u4877 0CA6                             u4797 09FF  
                           u4887 0CBA                             u4897 0CC3                    encode_digit@p 007A  
                           _WPUB 020D                             _WPUE 0210                             abs@a 0073  
                           _dbuf 01A0                  ??_lcd_backlight 0073                             _main 0B89  
                           _dtoa 006A                             _prec 0152                    write_byte@ack 0074  
                           _nout 014E                             pad@i 0027                             pad@p 0025  
                           fsr0h 0005                             fsr1h 0007                             indf0 0000  
                           fsr0l 0004                             indf1 0001                             fsr1l 0006  
                           pad@w 0029                             btemp 007E                             _utoa 0E12  
                   print_digit@p 002A                             start 0002                  ___fldiv@new_exp 0032  
                ?_lcd_print_with 0026                initialize_digit@p 002D                            ??_abs 0075  
                          ??_pad 007C   __size_of_OSCILLATOR_Initialize 0007    __end_of_OSCILLATOR_Initialize 1007  
          __size_of_stop_segment 001A                    ___fltol@sign1 005D                  __end_of___aodiv 1000  
                          ?_main 0070                            ?_dtoa 0030                  __end_of___aomod 0E12  
                __end_of___fldiv 038E                  __end_of___awdiv 006A                            STR_10 203E  
                          STR_12 2041                            STR_14 2041                            STR_17 2044  
                          STR_19 2044                  __end_of___awmod 127F                  __end_of___flmul 07E1  
                __end_of___fltol 1653                  __end_of___lldiv 13DF                            ?_utoa 0030  
                __end_of___lodiv 16D7                  ___awdiv@divisor 0070                  __end_of___lomod 15DE  
                ___awdiv@counter 0075                     vfpfcnvrt@fmt 004E                     vfpfcnvrt@llu 0064  
                          _TRISA 008C                            _TRISB 008D                            _TRISC 008E  
                          _TRISE 0090                     main@loadcell 00DE           scale_convert_gram@temp 0067  
                   lcd_print@cmd 0020                     lcd_print@str 007A                  __end_of_lcd_cmd 1FB4  
                __end_of_command 132C                            _flags 0154                   _WDT_Initialize 1EBE  
                          _fputc 11DD                            _fputs 1104                    _start_segment 1FCC  
                 write_byte@data 0075                            pad@fp 002B                            _width 0150  
                          _putch 0801                            dtoa@d 0030                            dtoa@i 004C  
                          dtoa@n 0044                            dtoa@p 003D                            dtoa@s 0042  
                          dtoa@w 0040         __size_of_calc_percentage 00A5                            utoa@d 0030  
                          utoa@i 0045                            utoa@n 003D                            utoa@p 0038  
                          utoa@w 003B                            status 0003               _scale_convert_gram 1766  
                          wtemp0 007E                  __end_of_sprintf 1104       __size_of_set_CELL_CLK_HIGH 000A  
                __end_of_strncmp 1496                 ___lodiv@dividend 0028                  ??_get_scale_val 0024  
           __end_of_CLK_SET_HIGH 1EFE                  __initialization 07E1                     _stop_segment 1FE6  
            ?_scale_convert_gram 0070                     __end_of_main 0C45                     __end_of_dtoa 01DA  
                  command@lownib 0078                     __end_of_utoa 0EFF             __end_of_DIO_SET_HIGH 1F1C  
               __end_of_i2c_wait 1F50                 __end_of_i2c_stop 000B                           ??_main 00D6  
                         ??_dtoa 0038                           ??_utoa 007D             __size_of_CLK_SET_LOW 000A  
               ___lodiv@quotient 0071           __end_of_WDT_Initialize 1EC2             __size_of_DIO_SET_LOW 000A  
           ??_scale_convert_gram 005F                  set_segments@pos 007A                   ?_start_segment 0070  
                DIO_SET_OUTPUT@p 0071                get_CELL_DAT_VAL@p 0075                           ?_fputc 0070  
                         ?_fputs 0078                 ___awdiv@dividend 0072                           _APFCON 011D  
                         _ANSELA 018C                           ?_putch 0070                           _ANSELB 018D  
                         _BORCON 0116                           _OSCCON 0099                set_CELL_CLK_LOW@p 0071  
                         u255lld 0F29                           u264lld 0FEE                           u257lld 0F54  
                         _WDTCON 0097                           u274lld 0E00                           u266lld 0D52  
                         u268lld 0D7D                           _SSPADD 0212                           u295lld 00B3  
                         _SSPBUF 0211               __size_of_i2c_start 000A                 __end_of___xxtofl 0ACF  
             __size_of_i2c_write 0010                ?_initialize_digit 0070         __end_of_get_CELL_DAT_VAL 08D5  
             ??_initialize_digit 002C                     vfprintf@cfmt 00A3                 __end_of_lcd_init 0A23  
                      ??___aodiv 0070                        ??___aomod 0070                        ??___fldiv 0028  
                      ??___awdiv 0074                        ??___awmod 0074                        ??___flmul 0042  
                      ??___fltol 0058                        ??___lldiv 0078                        ??___lodiv 0070  
                      ??___lomod 0070             __end_of_encode_digit 1ED6                 calc_percentage@p 006C  
               ___awdiv@quotient 0077                  ___awmod@divisor 0070                  ___awmod@counter 0075  
                         pad@buf 0024                        ??_lcd_cmd 0072                           dtoa@fp 003F  
                      ??_command 0075                           _strlen 1021                           fputc@c 0070  
                         fputs@c 0020                           fputs@i 0021                           fputs@s 0023  
             __size_of__Umul8_16 0023                  ?_WDT_Initialize 0070                      initialize@p 00C4  
                         putch@c 0070                   print_digit@tmp 002B                 __end_of_vfprintf 119F  
                         utoa@fp 003A                        ??_sprintf 00AB          __size_of_set_brigthness 0014  
                      ??_strncmp 0076                     ?_print_digit 007D                     ___xxtofl@arg 007A  
                   ___xxtofl@exp 0079                _SYSTEM_Initialize 1ED6                     ___xxtofl@val 0070  
        __end_of__initialization 07FD               ?_SYSTEM_Initialize 0070                   print_gram@row1 00B5  
                 print_gram@row2 00C5          __size_of_CLK_SET_OUTPUT 000A                       ___fltol@f1 0054  
      __size_of_set_CELL_CLK_LOW 000A                   command@highnib 0077         set_brigthness@brightness 0070  
                 __pcstackCOMMON 0070                ??_calc_percentage 00A0                     __pidataBANK2 10B8  
            ??_SYSTEM_Initialize 0070                    __end_of_fputc 122C                    __end_of_fputs 112D  
                  __end_of_putch 0802                   get_scale_val@i 0031                   get_scale_val@j 002C  
                 get_scale_val@p 0032            __end_of_DIO_SET_INPUT 1F3A                __end_of_i2c_start 1F44  
               ??_lcd_set_cursor 007C                __end_of_i2c_write 1F60                   _OPTION_REGbits 0095  
                ??_start_segment 0072               __size_of_lcd_clear 003E               __size_of_lcd_print 0024  
                        ??_fputc 0073        __end_of_SYSTEM_Initialize 1EE0                          ??_fputs 0079  
                        ??_putch 0070                       __pbssBANK2 0144                       __pbssBANK3 01A0  
          __size_of_CLK_SET_HIGH 000A                 ??_lcd_print_with 002A                        ?_i2c_wait 0070  
                      ?_i2c_stop 0070                lcd_print_with@col 0028                _get_DIO_PIN_value 14FD  
              lcd_print_with@row 0029                lcd_print_with@str 0026          __size_of_DIO_SET_OUTPUT 000A  
             ?_get_DIO_PIN_value 0070            __size_of_DIO_SET_HIGH 000A                __end_of__Umul8_16 1094  
                     __pmaintext 0B89              ??_get_DIO_PIN_value 0070                          ?_strlen 0070  
             set_CELL_CLK_HIGH@p 0071               set_segments@length 0079                        ?___xxtofl 0070  
                   _CLK_SET_HIGH 1EF4               __size_of_vfpfcnvrt 01FC                          _OSCTUNE 0098  
                        _SSPCON1 0215                          _SSPCON2 0216                        ?_lcd_init 0070  
                        _SSPSTAT 0214                 ___lomod@dividend 0028        __end_of_get_DIO_PIN_value 156D  
                   _DIO_SET_HIGH 1F12                       ??_i2c_wait 0070                       ??_i2c_stop 0070  
           set_max_gram@max_gram 00B3            __end_of_lcd_backlight 1F9D            __size_of_encode_digit 0008  
                  ?_set_max_gram 00B3                __end_of_lcd_clear 11DD                          ___aodiv 0EFF  
              __end_of_lcd_print 10B8                          ___aomod 0D28                          ___fldiv 01DA  
                        ___awdiv 000B                          ___awmod 122C                          ___flmul 058A  
                        ___fltol 15DE                          ___lldiv 1385                          ___lodiv 1653  
                        ___lomod 156D                        ?_vfprintf 006D                    ?_set_segments 0078  
                     _initialize 16D7                          __ptext1 0802                          __ptext2 08D5  
                        __ptext3 1766                          __ptext4 0A23                          __ptext5 15DE  
                        __ptext6 01DA                          __ptext7 058A                          __ptext8 1071  
                        __ptext9 1496                          _lcd_cmd 1F9D                          _command 12D5  
                __size_of_strlen 001A            _OSCILLATOR_Initialize 1000                     __size_of_abs 001A  
                   __size_of_pad 0059                       ??___xxtofl 0074                 ___awmod@dividend 0072  
                        _segdata 012C         ??_PIN_MANAGER_Initialize 0070                   _set_brigthness 1F73  
                        main@lcd 00D8       __size_of_SYSTEM_Initialize 000A                          _sprintf 10DC  
                        clrloop0 1EC3                       ??_lcd_init 0076                          _strncmp 143A  
           end_of_initialization 07FD                     _encode_digit 1ECE               clear_segment@F2810 014A  
                        fputc@fp 0072                          init_ram 1EC8                          fputs@fp 0078  
                        initloop 1EC9                   _CLK_SET_OUTPUT 1F08             __size_of_print_digit 00BA  
           set_segments@segments 0078                  ___lldiv@divisor 0070                   ??_set_max_gram 007E  
                ___lldiv@counter 007D            __end_of_get_scale_val 0D28                 _set_CELL_CLK_LOW 1EEA  
              ?_get_CELL_DAT_VAL 0070                __end_of_vfpfcnvrt 058A                  print_digit@data 0026  
             ??_get_CELL_DAT_VAL 0072                   ??_set_segments 007B                       ??_vfprintf 00A0  
                  ??_CLK_SET_LOW 0070                          strlen@a 0073                          strlen@s 0074  
               ??_WDT_Initialize 0070                        _PORTBbits 000D                    ??_DIO_SET_LOW 0070  
      __size_of_initialize_digit 0013                     _m_brightness 0156                       _print_gram 1496  
                  i2c_write@data 0070           __end_of_set_brigthness 1F87        lcd_set_cursor@row_offsets 0020  
                  ___xxtofl@sign 0078                       lcd_cmd@cmd 0071      __size_of_scale_convert_gram 009A  
                    ___fldiv@grs 0034                      ___fldiv@rem 002D                       lcd_clear@p 002A  
               initialize@valstr 00B4       __size_of_get_DIO_PIN_value 0070                  _calc_percentage 08D5  
         __end_of_CLK_SET_OUTPUT 1F12                       main@tm1637 00DC                      ___flmul@grs 0048  
                     command@val 0073                   _DIO_SET_OUTPUT 1F26                       lcd_print@p 0021  
                    print_gram@p 00D5                       _write4bits 1056                      vfpfcnvrt@ap 004F  
                    vfpfcnvrt@fp 006C                      vfpfcnvrt@ll 005C                       _write_byte 127F  
                    ?_initialize 0070           ?_OSCILLATOR_Initialize 0070                   __end_of_strlen 103B  
            start_initialization 07E1                  ___lodiv@divisor 0020                  ?_set_brigthness 0070  
            __end_of_CLK_SET_LOW 1F08                  ___lodiv@counter 0079  __size_of_PIN_MANAGER_Initialize 001B  
                    __end_of_abs 1021                        _i2c_start 1F3A                      __end_of_pad 1385  
                      _i2c_write 1F50              __end_of_DIO_SET_LOW 1F26                   DIO_SET_INPUT@p 0071  
                ?_CLK_SET_OUTPUT 0070           __end_of_DIO_SET_OUTPUT 1F30                __size_of_i2c_wait 000C  
              __size_of_i2c_stop 0007                      vfprintf@fmt 006D                        __Umul8_16 1071  
        get_scale_val@weight_add 0028                      __pdataBANK2 0120                         ??_strlen 0072  
                    ?_print_gram 0070                        ___fldiv@a 0020                        ___fldiv@b 0024  
            lcd_set_cursor@F2781 0136                        ___flmul@a 003E                        ___flmul@b 003A  
                      ___latbits 0003          __end_of_calc_percentage 097A                    __pcstackBANK0 0020  
                  __pcstackBANK1 00A0                 ___aodiv@dividend 0028             __end_of_set_max_gram 0832  
                     ?_i2c_start 0070                       ?_i2c_write 0070            __end_of_start_segment 1FE6  
              __size_of___xxtofl 00AC             __end_of_set_segments 143A                  ?_DIO_SET_OUTPUT 0070  
              __size_of_lcd_init 00A9              __size_of_initialize 008F           __size_of_DIO_SET_INPUT 000A  
               set_brigthness@on 0071           _PIN_MANAGER_Initialize 103B                        _dtoa$1252 003B  
                  ?_stop_segment 0070                      ?_write4bits 0073                         ?___aodiv 0020  
                       ?___aomod 0020                         ?___fldiv 0020                         ?___awdiv 0070  
               ___aodiv@quotient 0073                         ?___awmod 0070                         ?___flmul 003A  
                       ?___fltol 0054                         ?___lldiv 0070                         ?___lodiv 0020  
                       ?___lomod 0020                       ?__Umul8_16 0070                        _lcd_clear 119F  
                    _CLK_SET_LOW 1EFE                      ?_write_byte 0072                        _lcd_print 1094  
                       ?_lcd_cmd 0071                __size_of_vfprintf 0039                 _initialize_digit 1F60  
                       ?_command 0073                  ___lomod@divisor 0020                      _DIO_SET_LOW 1F1C  
                ___lomod@counter 0071         __end_of_set_CELL_CLK_LOW 1EF4                         ?_sprintf 00A5  
                 __size_of_fputc 004F                   __size_of_fputs 0029                         ?_strncmp 0070  
                 __size_of_putch 0001          __size_of_lcd_set_cursor 0039                      write4bits@p 0075  
   get_scale_val@scale_avg_count 0020                    CLK_SET_HIGH@p 0071                        clear_ram0 1EC2  
                lcd_set_cursor@p 0025              __size_of_print_gram 0067                   ??_stop_segment 0072  
                      main@F2851 0142                        main@F2853 0144                        main@F2847 0120  
                      main@F2849 013E          __size_of_lcd_print_with 0018                    set_max_gram@p 00C5  
                     ?_lcd_clear 0070                encode_digit@digit 0079                        _vfpfcnvrt 038E  
                     ?_lcd_print 007A                        lcd_init@p 0078                    _DIO_SET_INPUT 1F30  
                      main@drink 00EA              scale_convert_gram@p 006B                      write_byte@b 0072  
                    write_byte@i 0076                      write_byte@p 0077        __size_of_get_CELL_DAT_VAL 00A3  
         __size_of_lcd_backlight 0016                 ?_calc_percentage 0070                      ??_i2c_start 0070  
                    ??_i2c_write 0070              __size_of_write4bits 001B                    ??_print_digit 0022  
                       _i2c_wait 1F44                    DIO_SET_HIGH@p 0071                         _i2c_stop 0004  
            __size_of_write_byte 0056                    set_segments@k 0020                    set_segments@p 0021  
                     vfprintf@ap 006F                       vfprintf@fp 00A2                    stop_segment@p 0072  
        ??_OSCILLATOR_Initialize 0070                      ??__Umul8_16 0072                 __size_of___aodiv 0101  
               __size_of___aomod 00EA                 __size_of___fldiv 01B4                 __size_of___awdiv 005F  
               __size_of___awmod 0053                 __size_of___flmul 0257                 __size_of___fltol 0075  
               __size_of___lldiv 005A                 __size_of___lodiv 0084                 __size_of___lomod 0071  
                     ?_vfpfcnvrt 004E                     ??_initialize 00B3                 ??_set_brigthness 0072  
                ___aodiv@divisor 0020            __size_of_set_max_gram 0030                  ___aodiv@counter 0071  
                 ?_DIO_SET_INPUT 0070                 __size_of_lcd_cmd 0017                 __size_of_command 0057  
                     sprintf@fmt 00A5       __end_of_scale_convert_gram 1800                         ___xxtofl 0A23  
                lcd_print_with@p 007D                  set_brigthness@p 0073            __size_of_set_segments 005B  
               ??_CLK_SET_OUTPUT 0070           __size_of_get_scale_val 00E3                         __ptext10 16D7  
                       __ptext11 10DC                         __ptext20 1021                         __ptext12 1166  
                       __ptext21 1104                         __ptext13 038E                         __ptext30 119F  
                       __ptext22 11DD                         __ptext14 0E12                         __ptext31 112D  
                       __ptext23 0801                         __ptext15 156D                         __ptext40 1F60  
                       __ptext32 1094                         __ptext24 1007                         __ptext16 1653  
                       __ptext41 1F73                         __ptext33 12D5                         __ptext25 0D28  
                       __ptext17 143A                         __ptext50 1F1C                         __ptext42 0ACF  
                       __ptext34 1F87                         __ptext26 0EFF                         __ptext18 006A  
                       __ptext51 1F12                         __ptext43 13DF                         __ptext35 1F9D  
                       __ptext27 1FB4                         __ptext19 132C                         __ptext60 1EE0  
                       __ptext52 1F08                         __ptext44 127F                         __ptext36 1F50  
                       __ptext28 097A                         __ptext61 0832                         __ptext53 1EFE  
                       __ptext45 14FD                         __ptext37 0004                         __ptext29 1056  
                       __ptext62 1385                         __ptext54 1EF4                         __ptext46 1F30  
                       __ptext38 1F3A                         __ptext63 1ED6                         __ptext55 1ECE  
                       __ptext47 1FE6                         __ptext39 1F44                         __ptext64 1EBE  
                       __ptext56 122C                         __ptext48 1FCC                         __ptext65 103B  
                       __ptext57 000B                         __ptext49 1F26                         __ptext66 1000  
                       __ptext58 0C45                         __ptext59 1EEA                         _lcd_init 097A  
               __size_of_sprintf 0028                 __size_of_strncmp 005C               set_max_gram@valstr 00B5  
                  __size_of_main 00BC                    __size_of_dtoa 0170                    __size_of_utoa 00ED  
             __end_of_initialize 1766                    write4bits@val 0073                     CLK_SET_LOW@p 0071  
            __end_of_print_digit 0B89                    _lcd_backlight 1F87                     _set_max_gram 0802  
                       lcd_cmd@p 0072                         _vfprintf 1166                         command@p 0079  
                    ??_lcd_clear 0026                     _set_segments 13DF                      ??_lcd_print 007C  
               ___aomod@dividend 0028                     ??_print_gram 00B3                    ?_CLK_SET_HIGH 0070  
                   DIO_SET_LOW@p 0071                print_digit@number 007D             __end_of_stop_segment 2000  
               ??_DIO_SET_OUTPUT 0070                  CLK_SET_OUTPUT@p 0071                   __pstringtext10 2047  
                 __pstringtext11 0000          __size_of_WDT_Initialize 0004                    ?_DIO_SET_HIGH 0070  
                 _lcd_set_cursor 112D                lcd_set_cursor@cmd 0024                lcd_set_cursor@col 007A  
                      sprintf@ap 00AC                lcd_set_cursor@row 007B                 ___lldiv@dividend 0074  
        ?_PIN_MANAGER_Initialize 0070               get_DIO_PIN_value@p 0071         __end_of_initialize_digit 1F73  
               print_digit@F2820 013A                   ?_lcd_backlight 0070                        strncmp@_l 0070  
                      strncmp@_r 0072                _set_CELL_CLK_HIGH 1EE0               __end_of_print_gram 14FD  
                   ??_write4bits 0074                    _get_scale_val 0C45                   _lcd_print_with 1FB4  
             ?_set_CELL_CLK_HIGH 0070                  ___aomod@divisor 0020                      ??_vfpfcnvrt 0050  
                ___aomod@counter 0071                     ?_CLK_SET_LOW 0070                     ??_write_byte 0073  
                ??_DIO_SET_INPUT 0070                    __pstringtext1 2000                    __pstringtext2 200F  
                  __pstringtext3 201B                    __pstringtext4 2026                    __pstringtext5 2030  
                  __pstringtext6 2038                    __pstringtext7 203E                    __pstringtext8 2041  
                  __pstringtext9 2044              ??_set_CELL_CLK_HIGH 0070           __Umul8_16@multiplicand 0070  
                   ?_DIO_SET_LOW 0070                   ??_CLK_SET_HIGH 0070                         sprintf@f 00AE  
                       sprintf@s 00AD                 ___lldiv@quotient 0079                 _get_CELL_DAT_VAL 0832  
                       strncmp@l 0077                         strncmp@n 0074                         strncmp@r 0079  
                    _SSPCON1bits 0215                      _SSPCON2bits 0216                ?_set_CELL_CLK_LOW 0070  
         __end_of_lcd_set_cursor 1166                   start_segment@p 0072                   ??_DIO_SET_HIGH 0070  
                  ?_encode_digit 0079               ??_set_CELL_CLK_LOW 0070               __end_of_write4bits 1071  
                   ___aodiv@sign 0072   __end_of_PIN_MANAGER_Initialize 1056                      _print_digit 0ACF  
      __end_of_set_CELL_CLK_HIGH 1EEA             __Umul8_16@multiplier 0078               __end_of_write_byte 12D5  
                 lcd_backlight@p 0074                     ___aomod@sign 0072           __end_of_lcd_print_with 1FCC  
                 ?_get_scale_val 0020                __Umul8_16@product 0074  

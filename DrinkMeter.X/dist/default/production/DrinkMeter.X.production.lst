

Microchip MPLAB XC8 Assembler V2.32 build 20210201212658 
                                                                                               Sun Nov 28 18:44:20 2021

Microchip MPLAB XC8 C Compiler v2.32 (Free license) build 20210201212658 Og1 
     1                           	processor	16F1827
     2                           	pagewidth 120
     3                           	opt	flic
     4                           	psect	idataBANK0,global,class=CODE,delta=2,noexec
     5                           	psect	stringtext1,global,class=STRCODE,delta=2,noexec
     6                           	psect	stringtext2,global,class=STRCODE,delta=2,noexec
     7                           	psect	cinit,global,class=CODE,merge=1,delta=2
     8                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,noexec
     9                           	psect	dataBANK0,global,class=BANK0,space=1,delta=1,noexec
    10                           	psect	inittext,global,class=CODE,delta=2
    11                           	psect	clrtext,global,class=CODE,delta=2
    12                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1,noexec
    13                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,noexec
    14                           	psect	maintext,global,class=CODE,merge=1,split=1,delta=2
    15                           	psect	text1,local,class=CODE,merge=1,delta=2
    16                           	psect	text2,local,class=CODE,merge=1,delta=2
    17                           	psect	text3,local,class=CODE,merge=1,delta=2
    18                           	psect	text4,local,class=CODE,merge=1,delta=2
    19                           	psect	text5,local,class=CODE,merge=1,delta=2
    20                           	psect	text6,local,class=CODE,merge=1,delta=2
    21                           	psect	text7,local,class=CODE,merge=1,delta=2
    22                           	psect	text8,local,class=CODE,merge=1,delta=2
    23                           	psect	text9,local,class=CODE,merge=1,delta=2
    24                           	psect	text10,local,class=CODE,merge=1,delta=2
    25                           	psect	text11,local,class=CODE,merge=1,delta=2
    26                           	psect	text12,local,class=CODE,merge=1,delta=2
    27                           	psect	text13,local,class=CODE,merge=1,delta=2
    28                           	psect	text14,local,class=CODE,merge=1,delta=2
    29                           	psect	text15,local,class=CODE,merge=1,delta=2
    30                           	psect	text16,local,class=CODE,merge=1,delta=2
    31                           	psect	text17,local,class=CODE,merge=1,delta=2
    32                           	psect	text18,local,class=CODE,merge=1,delta=2
    33                           	psect	text19,local,class=CODE,merge=1,delta=2
    34                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=2,noexec
    35                           	dabs	1,0x7E,2
    36  0000                     
    37                           ; Version 2.32
    38                           ; Generated 02/02/2021 GMT
    39                           ; 
    40                           ; Copyright Â© 2021, Microchip Technology Inc. and its subsidiaries ("Microchip")
    41                           ; All rights reserved.
    42                           ; 
    43                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    44                           ; 
    45                           ; Redistribution and use in source and binary forms, with or without modification, are
    46                           ; permitted provided that the following conditions are met:
    47                           ; 
    48                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    49                           ;        conditions and the following disclaimer.
    50                           ; 
    51                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    52                           ;        of conditions and the following disclaimer in the documentation and/or other
    53                           ;        materials provided with the distribution. Publication is not required when
    54                           ;        this file is used in an embedded application.
    55                           ; 
    56                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    57                           ;        software without specific prior written permission.
    58                           ; 
    59                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    60                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    61                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    62                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    63                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    64                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    65                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    66                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    67                           ; 
    68                           ; 
    69                           ; Code-generator required, PIC16F1827 Definitions
    70                           ; 
    71                           ; SFR Addresses
    72  0000                     	;# 
    73  0001                     	;# 
    74  0002                     	;# 
    75  0003                     	;# 
    76  0004                     	;# 
    77  0005                     	;# 
    78  0006                     	;# 
    79  0007                     	;# 
    80  0008                     	;# 
    81  0009                     	;# 
    82  000A                     	;# 
    83  000B                     	;# 
    84  000C                     	;# 
    85  000D                     	;# 
    86  0011                     	;# 
    87  0012                     	;# 
    88  0013                     	;# 
    89  0014                     	;# 
    90  0015                     	;# 
    91  0016                     	;# 
    92  0016                     	;# 
    93  0017                     	;# 
    94  0018                     	;# 
    95  0019                     	;# 
    96  001A                     	;# 
    97  001B                     	;# 
    98  001C                     	;# 
    99  001E                     	;# 
   100  001F                     	;# 
   101  008C                     	;# 
   102  008D                     	;# 
   103  0091                     	;# 
   104  0092                     	;# 
   105  0093                     	;# 
   106  0094                     	;# 
   107  0095                     	;# 
   108  0096                     	;# 
   109  0097                     	;# 
   110  0098                     	;# 
   111  0099                     	;# 
   112  009A                     	;# 
   113  009B                     	;# 
   114  009B                     	;# 
   115  009C                     	;# 
   116  009D                     	;# 
   117  009E                     	;# 
   118  010C                     	;# 
   119  010D                     	;# 
   120  0111                     	;# 
   121  0112                     	;# 
   122  0113                     	;# 
   123  0114                     	;# 
   124  0115                     	;# 
   125  0116                     	;# 
   126  0117                     	;# 
   127  0118                     	;# 
   128  0119                     	;# 
   129  011A                     	;# 
   130  011B                     	;# 
   131  011D                     	;# 
   132  011E                     	;# 
   133  018C                     	;# 
   134  018D                     	;# 
   135  0191                     	;# 
   136  0191                     	;# 
   137  0192                     	;# 
   138  0193                     	;# 
   139  0193                     	;# 
   140  0193                     	;# 
   141  0194                     	;# 
   142  0195                     	;# 
   143  0196                     	;# 
   144  0199                     	;# 
   145  019A                     	;# 
   146  019B                     	;# 
   147  019B                     	;# 
   148  019B                     	;# 
   149  019B                     	;# 
   150  019C                     	;# 
   151  019C                     	;# 
   152  019D                     	;# 
   153  019E                     	;# 
   154  019F                     	;# 
   155  020C                     	;# 
   156  020D                     	;# 
   157  0211                     	;# 
   158  0211                     	;# 
   159  0212                     	;# 
   160  0212                     	;# 
   161  0213                     	;# 
   162  0213                     	;# 
   163  0214                     	;# 
   164  0214                     	;# 
   165  0215                     	;# 
   166  0215                     	;# 
   167  0215                     	;# 
   168  0216                     	;# 
   169  0216                     	;# 
   170  0217                     	;# 
   171  0217                     	;# 
   172  0219                     	;# 
   173  021A                     	;# 
   174  021B                     	;# 
   175  021C                     	;# 
   176  021D                     	;# 
   177  021E                     	;# 
   178  021F                     	;# 
   179  0291                     	;# 
   180  0291                     	;# 
   181  0292                     	;# 
   182  0293                     	;# 
   183  0294                     	;# 
   184  0295                     	;# 
   185  0295                     	;# 
   186  0296                     	;# 
   187  0298                     	;# 
   188  0298                     	;# 
   189  0299                     	;# 
   190  029A                     	;# 
   191  029B                     	;# 
   192  029C                     	;# 
   193  029C                     	;# 
   194  029D                     	;# 
   195  029E                     	;# 
   196  029E                     	;# 
   197  0311                     	;# 
   198  0311                     	;# 
   199  0312                     	;# 
   200  0313                     	;# 
   201  0318                     	;# 
   202  0318                     	;# 
   203  0319                     	;# 
   204  031A                     	;# 
   205  0394                     	;# 
   206  0395                     	;# 
   207  0396                     	;# 
   208  039A                     	;# 
   209  039C                     	;# 
   210  039D                     	;# 
   211  039E                     	;# 
   212  039F                     	;# 
   213  0415                     	;# 
   214  0416                     	;# 
   215  0417                     	;# 
   216  041C                     	;# 
   217  041D                     	;# 
   218  041E                     	;# 
   219  0FE4                     	;# 
   220  0FE5                     	;# 
   221  0FE6                     	;# 
   222  0FE7                     	;# 
   223  0FE8                     	;# 
   224  0FE9                     	;# 
   225  0FEA                     	;# 
   226  0FEB                     	;# 
   227  0FED                     	;# 
   228  0FEE                     	;# 
   229  0FEF                     	;# 
   230  0000                     	;# 
   231  0001                     	;# 
   232  0002                     	;# 
   233  0003                     	;# 
   234  0004                     	;# 
   235  0005                     	;# 
   236  0006                     	;# 
   237  0007                     	;# 
   238  0008                     	;# 
   239  0009                     	;# 
   240  000A                     	;# 
   241  000B                     	;# 
   242  000C                     	;# 
   243  000D                     	;# 
   244  0011                     	;# 
   245  0012                     	;# 
   246  0013                     	;# 
   247  0014                     	;# 
   248  0015                     	;# 
   249  0016                     	;# 
   250  0016                     	;# 
   251  0017                     	;# 
   252  0018                     	;# 
   253  0019                     	;# 
   254  001A                     	;# 
   255  001B                     	;# 
   256  001C                     	;# 
   257  001E                     	;# 
   258  001F                     	;# 
   259  008C                     	;# 
   260  008D                     	;# 
   261  0091                     	;# 
   262  0092                     	;# 
   263  0093                     	;# 
   264  0094                     	;# 
   265  0095                     	;# 
   266  0096                     	;# 
   267  0097                     	;# 
   268  0098                     	;# 
   269  0099                     	;# 
   270  009A                     	;# 
   271  009B                     	;# 
   272  009B                     	;# 
   273  009C                     	;# 
   274  009D                     	;# 
   275  009E                     	;# 
   276  010C                     	;# 
   277  010D                     	;# 
   278  0111                     	;# 
   279  0112                     	;# 
   280  0113                     	;# 
   281  0114                     	;# 
   282  0115                     	;# 
   283  0116                     	;# 
   284  0117                     	;# 
   285  0118                     	;# 
   286  0119                     	;# 
   287  011A                     	;# 
   288  011B                     	;# 
   289  011D                     	;# 
   290  011E                     	;# 
   291  018C                     	;# 
   292  018D                     	;# 
   293  0191                     	;# 
   294  0191                     	;# 
   295  0192                     	;# 
   296  0193                     	;# 
   297  0193                     	;# 
   298  0193                     	;# 
   299  0194                     	;# 
   300  0195                     	;# 
   301  0196                     	;# 
   302  0199                     	;# 
   303  019A                     	;# 
   304  019B                     	;# 
   305  019B                     	;# 
   306  019B                     	;# 
   307  019B                     	;# 
   308  019C                     	;# 
   309  019C                     	;# 
   310  019D                     	;# 
   311  019E                     	;# 
   312  019F                     	;# 
   313  020C                     	;# 
   314  020D                     	;# 
   315  0211                     	;# 
   316  0211                     	;# 
   317  0212                     	;# 
   318  0212                     	;# 
   319  0213                     	;# 
   320  0213                     	;# 
   321  0214                     	;# 
   322  0214                     	;# 
   323  0215                     	;# 
   324  0215                     	;# 
   325  0215                     	;# 
   326  0216                     	;# 
   327  0216                     	;# 
   328  0217                     	;# 
   329  0217                     	;# 
   330  0219                     	;# 
   331  021A                     	;# 
   332  021B                     	;# 
   333  021C                     	;# 
   334  021D                     	;# 
   335  021E                     	;# 
   336  021F                     	;# 
   337  0291                     	;# 
   338  0291                     	;# 
   339  0292                     	;# 
   340  0293                     	;# 
   341  0294                     	;# 
   342  0295                     	;# 
   343  0295                     	;# 
   344  0296                     	;# 
   345  0298                     	;# 
   346  0298                     	;# 
   347  0299                     	;# 
   348  029A                     	;# 
   349  029B                     	;# 
   350  029C                     	;# 
   351  029C                     	;# 
   352  029D                     	;# 
   353  029E                     	;# 
   354  029E                     	;# 
   355  0311                     	;# 
   356  0311                     	;# 
   357  0312                     	;# 
   358  0313                     	;# 
   359  0318                     	;# 
   360  0318                     	;# 
   361  0319                     	;# 
   362  031A                     	;# 
   363  0394                     	;# 
   364  0395                     	;# 
   365  0396                     	;# 
   366  039A                     	;# 
   367  039C                     	;# 
   368  039D                     	;# 
   369  039E                     	;# 
   370  039F                     	;# 
   371  0415                     	;# 
   372  0416                     	;# 
   373  0417                     	;# 
   374  041C                     	;# 
   375  041D                     	;# 
   376  041E                     	;# 
   377  0FE4                     	;# 
   378  0FE5                     	;# 
   379  0FE6                     	;# 
   380  0FE7                     	;# 
   381  0FE8                     	;# 
   382  0FE9                     	;# 
   383  0FEA                     	;# 
   384  0FEB                     	;# 
   385  0FED                     	;# 
   386  0FEE                     	;# 
   387  0FEF                     	;# 
   388  0000                     	;# 
   389  0001                     	;# 
   390  0002                     	;# 
   391  0003                     	;# 
   392  0004                     	;# 
   393  0005                     	;# 
   394  0006                     	;# 
   395  0007                     	;# 
   396  0008                     	;# 
   397  0009                     	;# 
   398  000A                     	;# 
   399  000B                     	;# 
   400  000C                     	;# 
   401  000D                     	;# 
   402  0011                     	;# 
   403  0012                     	;# 
   404  0013                     	;# 
   405  0014                     	;# 
   406  0015                     	;# 
   407  0016                     	;# 
   408  0016                     	;# 
   409  0017                     	;# 
   410  0018                     	;# 
   411  0019                     	;# 
   412  001A                     	;# 
   413  001B                     	;# 
   414  001C                     	;# 
   415  001E                     	;# 
   416  001F                     	;# 
   417  008C                     	;# 
   418  008D                     	;# 
   419  0091                     	;# 
   420  0092                     	;# 
   421  0093                     	;# 
   422  0094                     	;# 
   423  0095                     	;# 
   424  0096                     	;# 
   425  0097                     	;# 
   426  0098                     	;# 
   427  0099                     	;# 
   428  009A                     	;# 
   429  009B                     	;# 
   430  009B                     	;# 
   431  009C                     	;# 
   432  009D                     	;# 
   433  009E                     	;# 
   434  010C                     	;# 
   435  010D                     	;# 
   436  0111                     	;# 
   437  0112                     	;# 
   438  0113                     	;# 
   439  0114                     	;# 
   440  0115                     	;# 
   441  0116                     	;# 
   442  0117                     	;# 
   443  0118                     	;# 
   444  0119                     	;# 
   445  011A                     	;# 
   446  011B                     	;# 
   447  011D                     	;# 
   448  011E                     	;# 
   449  018C                     	;# 
   450  018D                     	;# 
   451  0191                     	;# 
   452  0191                     	;# 
   453  0192                     	;# 
   454  0193                     	;# 
   455  0193                     	;# 
   456  0193                     	;# 
   457  0194                     	;# 
   458  0195                     	;# 
   459  0196                     	;# 
   460  0199                     	;# 
   461  019A                     	;# 
   462  019B                     	;# 
   463  019B                     	;# 
   464  019B                     	;# 
   465  019B                     	;# 
   466  019C                     	;# 
   467  019C                     	;# 
   468  019D                     	;# 
   469  019E                     	;# 
   470  019F                     	;# 
   471  020C                     	;# 
   472  020D                     	;# 
   473  0211                     	;# 
   474  0211                     	;# 
   475  0212                     	;# 
   476  0212                     	;# 
   477  0213                     	;# 
   478  0213                     	;# 
   479  0214                     	;# 
   480  0214                     	;# 
   481  0215                     	;# 
   482  0215                     	;# 
   483  0215                     	;# 
   484  0216                     	;# 
   485  0216                     	;# 
   486  0217                     	;# 
   487  0217                     	;# 
   488  0219                     	;# 
   489  021A                     	;# 
   490  021B                     	;# 
   491  021C                     	;# 
   492  021D                     	;# 
   493  021E                     	;# 
   494  021F                     	;# 
   495  0291                     	;# 
   496  0291                     	;# 
   497  0292                     	;# 
   498  0293                     	;# 
   499  0294                     	;# 
   500  0295                     	;# 
   501  0295                     	;# 
   502  0296                     	;# 
   503  0298                     	;# 
   504  0298                     	;# 
   505  0299                     	;# 
   506  029A                     	;# 
   507  029B                     	;# 
   508  029C                     	;# 
   509  029C                     	;# 
   510  029D                     	;# 
   511  029E                     	;# 
   512  029E                     	;# 
   513  0311                     	;# 
   514  0311                     	;# 
   515  0312                     	;# 
   516  0313                     	;# 
   517  0318                     	;# 
   518  0318                     	;# 
   519  0319                     	;# 
   520  031A                     	;# 
   521  0394                     	;# 
   522  0395                     	;# 
   523  0396                     	;# 
   524  039A                     	;# 
   525  039C                     	;# 
   526  039D                     	;# 
   527  039E                     	;# 
   528  039F                     	;# 
   529  0415                     	;# 
   530  0416                     	;# 
   531  0417                     	;# 
   532  041C                     	;# 
   533  041D                     	;# 
   534  041E                     	;# 
   535  0FE4                     	;# 
   536  0FE5                     	;# 
   537  0FE6                     	;# 
   538  0FE7                     	;# 
   539  0FE8                     	;# 
   540  0FE9                     	;# 
   541  0FEA                     	;# 
   542  0FEB                     	;# 
   543  0FED                     	;# 
   544  0FEE                     	;# 
   545  0FEF                     	;# 
   546  0000                     	;# 
   547  0001                     	;# 
   548  0002                     	;# 
   549  0003                     	;# 
   550  0004                     	;# 
   551  0005                     	;# 
   552  0006                     	;# 
   553  0007                     	;# 
   554  0008                     	;# 
   555  0009                     	;# 
   556  000A                     	;# 
   557  000B                     	;# 
   558  000C                     	;# 
   559  000D                     	;# 
   560  0011                     	;# 
   561  0012                     	;# 
   562  0013                     	;# 
   563  0014                     	;# 
   564  0015                     	;# 
   565  0016                     	;# 
   566  0016                     	;# 
   567  0017                     	;# 
   568  0018                     	;# 
   569  0019                     	;# 
   570  001A                     	;# 
   571  001B                     	;# 
   572  001C                     	;# 
   573  001E                     	;# 
   574  001F                     	;# 
   575  008C                     	;# 
   576  008D                     	;# 
   577  0091                     	;# 
   578  0092                     	;# 
   579  0093                     	;# 
   580  0094                     	;# 
   581  0095                     	;# 
   582  0096                     	;# 
   583  0097                     	;# 
   584  0098                     	;# 
   585  0099                     	;# 
   586  009A                     	;# 
   587  009B                     	;# 
   588  009B                     	;# 
   589  009C                     	;# 
   590  009D                     	;# 
   591  009E                     	;# 
   592  010C                     	;# 
   593  010D                     	;# 
   594  0111                     	;# 
   595  0112                     	;# 
   596  0113                     	;# 
   597  0114                     	;# 
   598  0115                     	;# 
   599  0116                     	;# 
   600  0117                     	;# 
   601  0118                     	;# 
   602  0119                     	;# 
   603  011A                     	;# 
   604  011B                     	;# 
   605  011D                     	;# 
   606  011E                     	;# 
   607  018C                     	;# 
   608  018D                     	;# 
   609  0191                     	;# 
   610  0191                     	;# 
   611  0192                     	;# 
   612  0193                     	;# 
   613  0193                     	;# 
   614  0193                     	;# 
   615  0194                     	;# 
   616  0195                     	;# 
   617  0196                     	;# 
   618  0199                     	;# 
   619  019A                     	;# 
   620  019B                     	;# 
   621  019B                     	;# 
   622  019B                     	;# 
   623  019B                     	;# 
   624  019C                     	;# 
   625  019C                     	;# 
   626  019D                     	;# 
   627  019E                     	;# 
   628  019F                     	;# 
   629  020C                     	;# 
   630  020D                     	;# 
   631  0211                     	;# 
   632  0211                     	;# 
   633  0212                     	;# 
   634  0212                     	;# 
   635  0213                     	;# 
   636  0213                     	;# 
   637  0214                     	;# 
   638  0214                     	;# 
   639  0215                     	;# 
   640  0215                     	;# 
   641  0215                     	;# 
   642  0216                     	;# 
   643  0216                     	;# 
   644  0217                     	;# 
   645  0217                     	;# 
   646  0219                     	;# 
   647  021A                     	;# 
   648  021B                     	;# 
   649  021C                     	;# 
   650  021D                     	;# 
   651  021E                     	;# 
   652  021F                     	;# 
   653  0291                     	;# 
   654  0291                     	;# 
   655  0292                     	;# 
   656  0293                     	;# 
   657  0294                     	;# 
   658  0295                     	;# 
   659  0295                     	;# 
   660  0296                     	;# 
   661  0298                     	;# 
   662  0298                     	;# 
   663  0299                     	;# 
   664  029A                     	;# 
   665  029B                     	;# 
   666  029C                     	;# 
   667  029C                     	;# 
   668  029D                     	;# 
   669  029E                     	;# 
   670  029E                     	;# 
   671  0311                     	;# 
   672  0311                     	;# 
   673  0312                     	;# 
   674  0313                     	;# 
   675  0318                     	;# 
   676  0318                     	;# 
   677  0319                     	;# 
   678  031A                     	;# 
   679  0394                     	;# 
   680  0395                     	;# 
   681  0396                     	;# 
   682  039A                     	;# 
   683  039C                     	;# 
   684  039D                     	;# 
   685  039E                     	;# 
   686  039F                     	;# 
   687  0415                     	;# 
   688  0416                     	;# 
   689  0417                     	;# 
   690  041C                     	;# 
   691  041D                     	;# 
   692  041E                     	;# 
   693  0FE4                     	;# 
   694  0FE5                     	;# 
   695  0FE6                     	;# 
   696  0FE7                     	;# 
   697  0FE8                     	;# 
   698  0FE9                     	;# 
   699  0FEA                     	;# 
   700  0FEB                     	;# 
   701  0FED                     	;# 
   702  0FEE                     	;# 
   703  0FEF                     	;# 
   704  0000                     	;# 
   705  0001                     	;# 
   706  0002                     	;# 
   707  0003                     	;# 
   708  0004                     	;# 
   709  0005                     	;# 
   710  0006                     	;# 
   711  0007                     	;# 
   712  0008                     	;# 
   713  0009                     	;# 
   714  000A                     	;# 
   715  000B                     	;# 
   716  000C                     	;# 
   717  000D                     	;# 
   718  0011                     	;# 
   719  0012                     	;# 
   720  0013                     	;# 
   721  0014                     	;# 
   722  0015                     	;# 
   723  0016                     	;# 
   724  0016                     	;# 
   725  0017                     	;# 
   726  0018                     	;# 
   727  0019                     	;# 
   728  001A                     	;# 
   729  001B                     	;# 
   730  001C                     	;# 
   731  001E                     	;# 
   732  001F                     	;# 
   733  008C                     	;# 
   734  008D                     	;# 
   735  0091                     	;# 
   736  0092                     	;# 
   737  0093                     	;# 
   738  0094                     	;# 
   739  0095                     	;# 
   740  0096                     	;# 
   741  0097                     	;# 
   742  0098                     	;# 
   743  0099                     	;# 
   744  009A                     	;# 
   745  009B                     	;# 
   746  009B                     	;# 
   747  009C                     	;# 
   748  009D                     	;# 
   749  009E                     	;# 
   750  010C                     	;# 
   751  010D                     	;# 
   752  0111                     	;# 
   753  0112                     	;# 
   754  0113                     	;# 
   755  0114                     	;# 
   756  0115                     	;# 
   757  0116                     	;# 
   758  0117                     	;# 
   759  0118                     	;# 
   760  0119                     	;# 
   761  011A                     	;# 
   762  011B                     	;# 
   763  011D                     	;# 
   764  011E                     	;# 
   765  018C                     	;# 
   766  018D                     	;# 
   767  0191                     	;# 
   768  0191                     	;# 
   769  0192                     	;# 
   770  0193                     	;# 
   771  0193                     	;# 
   772  0193                     	;# 
   773  0194                     	;# 
   774  0195                     	;# 
   775  0196                     	;# 
   776  0199                     	;# 
   777  019A                     	;# 
   778  019B                     	;# 
   779  019B                     	;# 
   780  019B                     	;# 
   781  019B                     	;# 
   782  019C                     	;# 
   783  019C                     	;# 
   784  019D                     	;# 
   785  019E                     	;# 
   786  019F                     	;# 
   787  020C                     	;# 
   788  020D                     	;# 
   789  0211                     	;# 
   790  0211                     	;# 
   791  0212                     	;# 
   792  0212                     	;# 
   793  0213                     	;# 
   794  0213                     	;# 
   795  0214                     	;# 
   796  0214                     	;# 
   797  0215                     	;# 
   798  0215                     	;# 
   799  0215                     	;# 
   800  0216                     	;# 
   801  0216                     	;# 
   802  0217                     	;# 
   803  0217                     	;# 
   804  0219                     	;# 
   805  021A                     	;# 
   806  021B                     	;# 
   807  021C                     	;# 
   808  021D                     	;# 
   809  021E                     	;# 
   810  021F                     	;# 
   811  0291                     	;# 
   812  0291                     	;# 
   813  0292                     	;# 
   814  0293                     	;# 
   815  0294                     	;# 
   816  0295                     	;# 
   817  0295                     	;# 
   818  0296                     	;# 
   819  0298                     	;# 
   820  0298                     	;# 
   821  0299                     	;# 
   822  029A                     	;# 
   823  029B                     	;# 
   824  029C                     	;# 
   825  029C                     	;# 
   826  029D                     	;# 
   827  029E                     	;# 
   828  029E                     	;# 
   829  0311                     	;# 
   830  0311                     	;# 
   831  0312                     	;# 
   832  0313                     	;# 
   833  0318                     	;# 
   834  0318                     	;# 
   835  0319                     	;# 
   836  031A                     	;# 
   837  0394                     	;# 
   838  0395                     	;# 
   839  0396                     	;# 
   840  039A                     	;# 
   841  039C                     	;# 
   842  039D                     	;# 
   843  039E                     	;# 
   844  039F                     	;# 
   845  0415                     	;# 
   846  0416                     	;# 
   847  0417                     	;# 
   848  041C                     	;# 
   849  041D                     	;# 
   850  041E                     	;# 
   851  0FE4                     	;# 
   852  0FE5                     	;# 
   853  0FE6                     	;# 
   854  0FE7                     	;# 
   855  0FE8                     	;# 
   856  0FE9                     	;# 
   857  0FEA                     	;# 
   858  0FEB                     	;# 
   859  0FED                     	;# 
   860  0FEE                     	;# 
   861  0FEF                     	;# 
   862  0000                     	;# 
   863  0001                     	;# 
   864  0002                     	;# 
   865  0003                     	;# 
   866  0004                     	;# 
   867  0005                     	;# 
   868  0006                     	;# 
   869  0007                     	;# 
   870  0008                     	;# 
   871  0009                     	;# 
   872  000A                     	;# 
   873  000B                     	;# 
   874  000C                     	;# 
   875  000D                     	;# 
   876  0011                     	;# 
   877  0012                     	;# 
   878  0013                     	;# 
   879  0014                     	;# 
   880  0015                     	;# 
   881  0016                     	;# 
   882  0016                     	;# 
   883  0017                     	;# 
   884  0018                     	;# 
   885  0019                     	;# 
   886  001A                     	;# 
   887  001B                     	;# 
   888  001C                     	;# 
   889  001E                     	;# 
   890  001F                     	;# 
   891  008C                     	;# 
   892  008D                     	;# 
   893  0091                     	;# 
   894  0092                     	;# 
   895  0093                     	;# 
   896  0094                     	;# 
   897  0095                     	;# 
   898  0096                     	;# 
   899  0097                     	;# 
   900  0098                     	;# 
   901  0099                     	;# 
   902  009A                     	;# 
   903  009B                     	;# 
   904  009B                     	;# 
   905  009C                     	;# 
   906  009D                     	;# 
   907  009E                     	;# 
   908  010C                     	;# 
   909  010D                     	;# 
   910  0111                     	;# 
   911  0112                     	;# 
   912  0113                     	;# 
   913  0114                     	;# 
   914  0115                     	;# 
   915  0116                     	;# 
   916  0117                     	;# 
   917  0118                     	;# 
   918  0119                     	;# 
   919  011A                     	;# 
   920  011B                     	;# 
   921  011D                     	;# 
   922  011E                     	;# 
   923  018C                     	;# 
   924  018D                     	;# 
   925  0191                     	;# 
   926  0191                     	;# 
   927  0192                     	;# 
   928  0193                     	;# 
   929  0193                     	;# 
   930  0193                     	;# 
   931  0194                     	;# 
   932  0195                     	;# 
   933  0196                     	;# 
   934  0199                     	;# 
   935  019A                     	;# 
   936  019B                     	;# 
   937  019B                     	;# 
   938  019B                     	;# 
   939  019B                     	;# 
   940  019C                     	;# 
   941  019C                     	;# 
   942  019D                     	;# 
   943  019E                     	;# 
   944  019F                     	;# 
   945  020C                     	;# 
   946  020D                     	;# 
   947  0211                     	;# 
   948  0211                     	;# 
   949  0212                     	;# 
   950  0212                     	;# 
   951  0213                     	;# 
   952  0213                     	;# 
   953  0214                     	;# 
   954  0214                     	;# 
   955  0215                     	;# 
   956  0215                     	;# 
   957  0215                     	;# 
   958  0216                     	;# 
   959  0216                     	;# 
   960  0217                     	;# 
   961  0217                     	;# 
   962  0219                     	;# 
   963  021A                     	;# 
   964  021B                     	;# 
   965  021C                     	;# 
   966  021D                     	;# 
   967  021E                     	;# 
   968  021F                     	;# 
   969  0291                     	;# 
   970  0291                     	;# 
   971  0292                     	;# 
   972  0293                     	;# 
   973  0294                     	;# 
   974  0295                     	;# 
   975  0295                     	;# 
   976  0296                     	;# 
   977  0298                     	;# 
   978  0298                     	;# 
   979  0299                     	;# 
   980  029A                     	;# 
   981  029B                     	;# 
   982  029C                     	;# 
   983  029C                     	;# 
   984  029D                     	;# 
   985  029E                     	;# 
   986  029E                     	;# 
   987  0311                     	;# 
   988  0311                     	;# 
   989  0312                     	;# 
   990  0313                     	;# 
   991  0318                     	;# 
   992  0318                     	;# 
   993  0319                     	;# 
   994  031A                     	;# 
   995  0394                     	;# 
   996  0395                     	;# 
   997  0396                     	;# 
   998  039A                     	;# 
   999  039C                     	;# 
  1000  039D                     	;# 
  1001  039E                     	;# 
  1002  039F                     	;# 
  1003  0415                     	;# 
  1004  0416                     	;# 
  1005  0417                     	;# 
  1006  041C                     	;# 
  1007  041D                     	;# 
  1008  041E                     	;# 
  1009  0FE4                     	;# 
  1010  0FE5                     	;# 
  1011  0FE6                     	;# 
  1012  0FE7                     	;# 
  1013  0FE8                     	;# 
  1014  0FE9                     	;# 
  1015  0FEA                     	;# 
  1016  0FEB                     	;# 
  1017  0FED                     	;# 
  1018  0FEE                     	;# 
  1019  0FEF                     	;# 
  1020  0000                     	;# 
  1021  0001                     	;# 
  1022  0002                     	;# 
  1023  0003                     	;# 
  1024  0004                     	;# 
  1025  0005                     	;# 
  1026  0006                     	;# 
  1027  0007                     	;# 
  1028  0008                     	;# 
  1029  0009                     	;# 
  1030  000A                     	;# 
  1031  000B                     	;# 
  1032  000C                     	;# 
  1033  000D                     	;# 
  1034  0011                     	;# 
  1035  0012                     	;# 
  1036  0013                     	;# 
  1037  0014                     	;# 
  1038  0015                     	;# 
  1039  0016                     	;# 
  1040  0016                     	;# 
  1041  0017                     	;# 
  1042  0018                     	;# 
  1043  0019                     	;# 
  1044  001A                     	;# 
  1045  001B                     	;# 
  1046  001C                     	;# 
  1047  001E                     	;# 
  1048  001F                     	;# 
  1049  008C                     	;# 
  1050  008D                     	;# 
  1051  0091                     	;# 
  1052  0092                     	;# 
  1053  0093                     	;# 
  1054  0094                     	;# 
  1055  0095                     	;# 
  1056  0096                     	;# 
  1057  0097                     	;# 
  1058  0098                     	;# 
  1059  0099                     	;# 
  1060  009A                     	;# 
  1061  009B                     	;# 
  1062  009B                     	;# 
  1063  009C                     	;# 
  1064  009D                     	;# 
  1065  009E                     	;# 
  1066  010C                     	;# 
  1067  010D                     	;# 
  1068  0111                     	;# 
  1069  0112                     	;# 
  1070  0113                     	;# 
  1071  0114                     	;# 
  1072  0115                     	;# 
  1073  0116                     	;# 
  1074  0117                     	;# 
  1075  0118                     	;# 
  1076  0119                     	;# 
  1077  011A                     	;# 
  1078  011B                     	;# 
  1079  011D                     	;# 
  1080  011E                     	;# 
  1081  018C                     	;# 
  1082  018D                     	;# 
  1083  0191                     	;# 
  1084  0191                     	;# 
  1085  0192                     	;# 
  1086  0193                     	;# 
  1087  0193                     	;# 
  1088  0193                     	;# 
  1089  0194                     	;# 
  1090  0195                     	;# 
  1091  0196                     	;# 
  1092  0199                     	;# 
  1093  019A                     	;# 
  1094  019B                     	;# 
  1095  019B                     	;# 
  1096  019B                     	;# 
  1097  019B                     	;# 
  1098  019C                     	;# 
  1099  019C                     	;# 
  1100  019D                     	;# 
  1101  019E                     	;# 
  1102  019F                     	;# 
  1103  020C                     	;# 
  1104  020D                     	;# 
  1105  0211                     	;# 
  1106  0211                     	;# 
  1107  0212                     	;# 
  1108  0212                     	;# 
  1109  0213                     	;# 
  1110  0213                     	;# 
  1111  0214                     	;# 
  1112  0214                     	;# 
  1113  0215                     	;# 
  1114  0215                     	;# 
  1115  0215                     	;# 
  1116  0216                     	;# 
  1117  0216                     	;# 
  1118  0217                     	;# 
  1119  0217                     	;# 
  1120  0219                     	;# 
  1121  021A                     	;# 
  1122  021B                     	;# 
  1123  021C                     	;# 
  1124  021D                     	;# 
  1125  021E                     	;# 
  1126  021F                     	;# 
  1127  0291                     	;# 
  1128  0291                     	;# 
  1129  0292                     	;# 
  1130  0293                     	;# 
  1131  0294                     	;# 
  1132  0295                     	;# 
  1133  0295                     	;# 
  1134  0296                     	;# 
  1135  0298                     	;# 
  1136  0298                     	;# 
  1137  0299                     	;# 
  1138  029A                     	;# 
  1139  029B                     	;# 
  1140  029C                     	;# 
  1141  029C                     	;# 
  1142  029D                     	;# 
  1143  029E                     	;# 
  1144  029E                     	;# 
  1145  0311                     	;# 
  1146  0311                     	;# 
  1147  0312                     	;# 
  1148  0313                     	;# 
  1149  0318                     	;# 
  1150  0318                     	;# 
  1151  0319                     	;# 
  1152  031A                     	;# 
  1153  0394                     	;# 
  1154  0395                     	;# 
  1155  0396                     	;# 
  1156  039A                     	;# 
  1157  039C                     	;# 
  1158  039D                     	;# 
  1159  039E                     	;# 
  1160  039F                     	;# 
  1161  0415                     	;# 
  1162  0416                     	;# 
  1163  0417                     	;# 
  1164  041C                     	;# 
  1165  041D                     	;# 
  1166  041E                     	;# 
  1167  0FE4                     	;# 
  1168  0FE5                     	;# 
  1169  0FE6                     	;# 
  1170  0FE7                     	;# 
  1171  0FE8                     	;# 
  1172  0FE9                     	;# 
  1173  0FEA                     	;# 
  1174  0FEB                     	;# 
  1175  0FED                     	;# 
  1176  0FEE                     	;# 
  1177  0FEF                     	;# 
  1178  0000                     	;# 
  1179  0001                     	;# 
  1180  0002                     	;# 
  1181  0003                     	;# 
  1182  0004                     	;# 
  1183  0005                     	;# 
  1184  0006                     	;# 
  1185  0007                     	;# 
  1186  0008                     	;# 
  1187  0009                     	;# 
  1188  000A                     	;# 
  1189  000B                     	;# 
  1190  000C                     	;# 
  1191  000D                     	;# 
  1192  0011                     	;# 
  1193  0012                     	;# 
  1194  0013                     	;# 
  1195  0014                     	;# 
  1196  0015                     	;# 
  1197  0016                     	;# 
  1198  0016                     	;# 
  1199  0017                     	;# 
  1200  0018                     	;# 
  1201  0019                     	;# 
  1202  001A                     	;# 
  1203  001B                     	;# 
  1204  001C                     	;# 
  1205  001E                     	;# 
  1206  001F                     	;# 
  1207  008C                     	;# 
  1208  008D                     	;# 
  1209  0091                     	;# 
  1210  0092                     	;# 
  1211  0093                     	;# 
  1212  0094                     	;# 
  1213  0095                     	;# 
  1214  0096                     	;# 
  1215  0097                     	;# 
  1216  0098                     	;# 
  1217  0099                     	;# 
  1218  009A                     	;# 
  1219  009B                     	;# 
  1220  009B                     	;# 
  1221  009C                     	;# 
  1222  009D                     	;# 
  1223  009E                     	;# 
  1224  010C                     	;# 
  1225  010D                     	;# 
  1226  0111                     	;# 
  1227  0112                     	;# 
  1228  0113                     	;# 
  1229  0114                     	;# 
  1230  0115                     	;# 
  1231  0116                     	;# 
  1232  0117                     	;# 
  1233  0118                     	;# 
  1234  0119                     	;# 
  1235  011A                     	;# 
  1236  011B                     	;# 
  1237  011D                     	;# 
  1238  011E                     	;# 
  1239  018C                     	;# 
  1240  018D                     	;# 
  1241  0191                     	;# 
  1242  0191                     	;# 
  1243  0192                     	;# 
  1244  0193                     	;# 
  1245  0193                     	;# 
  1246  0193                     	;# 
  1247  0194                     	;# 
  1248  0195                     	;# 
  1249  0196                     	;# 
  1250  0199                     	;# 
  1251  019A                     	;# 
  1252  019B                     	;# 
  1253  019B                     	;# 
  1254  019B                     	;# 
  1255  019B                     	;# 
  1256  019C                     	;# 
  1257  019C                     	;# 
  1258  019D                     	;# 
  1259  019E                     	;# 
  1260  019F                     	;# 
  1261  020C                     	;# 
  1262  020D                     	;# 
  1263  0211                     	;# 
  1264  0211                     	;# 
  1265  0212                     	;# 
  1266  0212                     	;# 
  1267  0213                     	;# 
  1268  0213                     	;# 
  1269  0214                     	;# 
  1270  0214                     	;# 
  1271  0215                     	;# 
  1272  0215                     	;# 
  1273  0215                     	;# 
  1274  0216                     	;# 
  1275  0216                     	;# 
  1276  0217                     	;# 
  1277  0217                     	;# 
  1278  0219                     	;# 
  1279  021A                     	;# 
  1280  021B                     	;# 
  1281  021C                     	;# 
  1282  021D                     	;# 
  1283  021E                     	;# 
  1284  021F                     	;# 
  1285  0291                     	;# 
  1286  0291                     	;# 
  1287  0292                     	;# 
  1288  0293                     	;# 
  1289  0294                     	;# 
  1290  0295                     	;# 
  1291  0295                     	;# 
  1292  0296                     	;# 
  1293  0298                     	;# 
  1294  0298                     	;# 
  1295  0299                     	;# 
  1296  029A                     	;# 
  1297  029B                     	;# 
  1298  029C                     	;# 
  1299  029C                     	;# 
  1300  029D                     	;# 
  1301  029E                     	;# 
  1302  029E                     	;# 
  1303  0311                     	;# 
  1304  0311                     	;# 
  1305  0312                     	;# 
  1306  0313                     	;# 
  1307  0318                     	;# 
  1308  0318                     	;# 
  1309  0319                     	;# 
  1310  031A                     	;# 
  1311  0394                     	;# 
  1312  0395                     	;# 
  1313  0396                     	;# 
  1314  039A                     	;# 
  1315  039C                     	;# 
  1316  039D                     	;# 
  1317  039E                     	;# 
  1318  039F                     	;# 
  1319  0415                     	;# 
  1320  0416                     	;# 
  1321  0417                     	;# 
  1322  041C                     	;# 
  1323  041D                     	;# 
  1324  041E                     	;# 
  1325  0FE4                     	;# 
  1326  0FE5                     	;# 
  1327  0FE6                     	;# 
  1328  0FE7                     	;# 
  1329  0FE8                     	;# 
  1330  0FE9                     	;# 
  1331  0FEA                     	;# 
  1332  0FEB                     	;# 
  1333  0FED                     	;# 
  1334  0FEE                     	;# 
  1335  0FEF                     	;# 
  1336                           
  1337                           	psect	idataBANK0
  1338  06CC                     __pidataBANK0:
  1339                           
  1340                           ;initializer for _segdata
  1341  06CC  343F               	retlw	63
  1342  06CD  3406               	retlw	6
  1343  06CE  345B               	retlw	91
  1344  06CF  344F               	retlw	79
  1345  06D0  3466               	retlw	102
  1346  06D1  346D               	retlw	109
  1347  06D2  347D               	retlw	125
  1348  06D3  3407               	retlw	7
  1349  06D4  347F               	retlw	127
  1350  06D5  346F               	retlw	111
  1351                           
  1352                           ;initializer for lcd_set_cursor@F2546
  1353  06D6  3400               	retlw	0
  1354  06D7  3440               	retlw	64
  1355  06D8  3414               	retlw	20
  1356  06D9  3454               	retlw	84
  1357                           
  1358                           ;initializer for main@F2569
  1359  06DA  34FF               	retlw	255
  1360  06DB  34FF               	retlw	255
  1361  06DC  34FF               	retlw	255
  1362  06DD  34FF               	retlw	255
  1363                           
  1364                           ;initializer for main@F2567
  1365  06DE  3427               	retlw	39
  1366  06DF  3410               	retlw	16
  1367  06E0  3402               	retlw	2
  1368  06E1  3400               	retlw	0
  1369  000C                     _PORTAbits	set	12
  1370  0097                     _WDTCON	set	151
  1371  0098                     _OSCTUNE	set	152
  1372  0099                     _OSCCON	set	153
  1373  0095                     _OPTION_REGbits	set	149
  1374  008D                     _TRISB	set	141
  1375  008C                     _TRISA	set	140
  1376  0116                     _BORCON	set	278
  1377  011E                     _APFCON1	set	286
  1378  011D                     _APFCON0	set	285
  1379  010D                     _LATB	set	269
  1380  010C                     _LATA	set	268
  1381  018C                     _ANSELA	set	396
  1382  018D                     _ANSELB	set	397
  1383  0215                     _SSPCON1bits	set	533
  1384  0214                     _SSPSTATbits	set	532
  1385  0211                     _SSPBUF	set	529
  1386  0216                     _SSPCON2bits	set	534
  1387  0214                     _SSPSTAT	set	532
  1388  0216                     _SSPCON2	set	534
  1389  020C                     _WPUA	set	524
  1390  020D                     _WPUB	set	525
  1391                           
  1392                           	psect	stringtext1
  1393  0800                     __pstringtext1:
  1394  0800                     STR_1:
  1395  0800  3420               	retlw	32	;' '
  1396  0801  3400               	retlw	0
  1397                           
  1398                           	psect	stringtext2
  1399  0000                     __pstringtext2:
  1400                           
  1401                           	psect	cinit
  1402  07E9                     start_initialization:	
  1403                           ; #config settings
  1404                           
  1405  07E9                     __initialization:
  1406                           
  1407                           ; Initialize objects allocated to BANK0
  1408  07E9  30CC               	movlw	low __pidataBANK0
  1409  07EA  0084               	movwf	4
  1410  07EB  3086               	movlw	(high __pidataBANK0)| (0+128)
  1411  07EC  0085               	movwf	5
  1412  07ED  3020               	movlw	low __pdataBANK0
  1413  07EE  0086               	movwf	6
  1414  07EF  3000               	movlw	high __pdataBANK0
  1415  07F0  0087               	movwf	7
  1416  07F1  3016               	movlw	22
  1417  07F2  3186  2649  3187   	fcall	init_ram
  1418                           
  1419                           ; Clear objects allocated to BANK0
  1420  07F5  3036               	movlw	low __pbssBANK0
  1421  07F6  0084               	movwf	4
  1422  07F7  3000               	movlw	high __pbssBANK0
  1423  07F8  0085               	movwf	5
  1424  07F9  3011               	movlw	17
  1425  07FA  3186  2643  3187   	fcall	clear_ram0
  1426  07FD                     end_of_initialization:	
  1427                           ;End of C runtime variable initialization code
  1428                           
  1429  07FD                     __end_of__initialization:
  1430  07FD  0020               	movlb	0
  1431  07FE  3187  2F66         	ljmp	_main	;jump to C main() function
  1432                           
  1433                           	psect	bssBANK0
  1434  0036                     __pbssBANK0:
  1435  0036                     main@F2565:
  1436  0036                     	ds	12
  1437  0042                     clear_segment@F2530:
  1438  0042                     	ds	4
  1439  0046                     _m_brightness:
  1440  0046                     	ds	1
  1441                           
  1442                           	psect	dataBANK0
  1443  0020                     __pdataBANK0:
  1444  0020                     _segdata:
  1445  0020                     	ds	10
  1446  002A                     lcd_set_cursor@F2546:
  1447  002A                     	ds	4
  1448  002E                     main@F2569:
  1449  002E                     	ds	4
  1450  0032                     main@F2567:
  1451  0032                     	ds	4
  1452                           
  1453                           	psect	inittext
  1454  0649                     init_ram:
  1455  0649  00FE               	movwf	btemp
  1456  064A                     initloop:
  1457  064A  0012               	moviw fsr0++
  1458  064B  001E               	movwi fsr1++
  1459  064C  0BFE               	decfsz	btemp,f
  1460  064D  2E4A               	goto	initloop
  1461  064E  3400               	retlw	0
  1462                           
  1463                           	psect	clrtext
  1464  0643                     clear_ram0:	
  1465                           ;	Called with FSR0 containing the base address, and
  1466                           ;	WREG with the size to clear
  1467                           
  1468  0643  0064               	clrwdt	;clear the watchdog before getting into this loop
  1469  0644                     clrloop0:
  1470  0644  0180               	clrf	0	;clear RAM location pointed to by FSR
  1471  0645  3101               	addfsr 0,1
  1472  0646  0B89               	decfsz	9,f	;Have we reached the end of clearing yet?
  1473  0647  2E44               	goto	clrloop0	;have we reached the end yet?
  1474  0648  3400               	retlw	0	;all done for this memory range, return
  1475                           
  1476                           	psect	cstackCOMMON
  1477  0070                     __pcstackCOMMON:
  1478  0070                     ?_OSCILLATOR_Initialize:
  1479  0070                     ??_OSCILLATOR_Initialize:	
  1480                           ; 1 bytes @ 0x0
  1481                           
  1482  0070                     ?_WDT_Initialize:	
  1483                           ; 1 bytes @ 0x0
  1484                           
  1485  0070                     ??_WDT_Initialize:	
  1486                           ; 1 bytes @ 0x0
  1487                           
  1488  0070                     ?_clear_segment:	
  1489                           ; 1 bytes @ 0x0
  1490                           
  1491  0070                     ?_encode_digit:	
  1492                           ; 1 bytes @ 0x0
  1493                           
  1494  0070                     ??_encode_digit:	
  1495                           ; 1 bytes @ 0x0
  1496                           
  1497  0070                     ?_set_brigthness:	
  1498                           ; 1 bytes @ 0x0
  1499                           
  1500  0070                     ?_PIN_MANAGER_Initialize:	
  1501                           ; 1 bytes @ 0x0
  1502                           
  1503  0070                     ??_PIN_MANAGER_Initialize:	
  1504                           ; 1 bytes @ 0x0
  1505                           
  1506  0070                     ?_SYSTEM_Initialize:	
  1507                           ; 1 bytes @ 0x0
  1508                           
  1509  0070                     ??_SYSTEM_Initialize:	
  1510                           ; 1 bytes @ 0x0
  1511                           
  1512  0070                     ?_main:	
  1513                           ; 1 bytes @ 0x0
  1514                           
  1515  0070                     ?_CLK_SET_OUTPUT:	
  1516                           ; 1 bytes @ 0x0
  1517                           
  1518  0070                     ??_CLK_SET_OUTPUT:	
  1519                           ; 1 bytes @ 0x0
  1520                           
  1521  0070                     ?_CLK_SET_HIGH:	
  1522                           ; 1 bytes @ 0x0
  1523                           
  1524  0070                     ??_CLK_SET_HIGH:	
  1525                           ; 1 bytes @ 0x0
  1526                           
  1527  0070                     ?_CLK_SET_LOW:	
  1528                           ; 1 bytes @ 0x0
  1529                           
  1530  0070                     ??_CLK_SET_LOW:	
  1531                           ; 1 bytes @ 0x0
  1532                           
  1533  0070                     ?_DIO_SET_OUTPUT:	
  1534                           ; 1 bytes @ 0x0
  1535                           
  1536  0070                     ??_DIO_SET_OUTPUT:	
  1537                           ; 1 bytes @ 0x0
  1538                           
  1539  0070                     ?_DIO_SET_INPUT:	
  1540                           ; 1 bytes @ 0x0
  1541                           
  1542  0070                     ??_DIO_SET_INPUT:	
  1543                           ; 1 bytes @ 0x0
  1544                           
  1545  0070                     ?_DIO_SET_HIGH:	
  1546                           ; 1 bytes @ 0x0
  1547                           
  1548  0070                     ??_DIO_SET_HIGH:	
  1549                           ; 1 bytes @ 0x0
  1550                           
  1551  0070                     ?_DIO_SET_LOW:	
  1552                           ; 1 bytes @ 0x0
  1553                           
  1554  0070                     ??_DIO_SET_LOW:	
  1555                           ; 1 bytes @ 0x0
  1556                           
  1557  0070                     ?_start_segment:	
  1558                           ; 1 bytes @ 0x0
  1559                           
  1560  0070                     ?_stop_segment:	
  1561                           ; 1 bytes @ 0x0
  1562                           
  1563  0070                     ?_get_DIO_PIN_value:	
  1564                           ; 1 bytes @ 0x0
  1565                           
  1566  0070                     ??_get_DIO_PIN_value:	
  1567                           ; 1 bytes @ 0x0
  1568                           
  1569  0070                     ?_write_byte:	
  1570                           ; 1 bytes @ 0x0
  1571                           
  1572  0070                     set_brigthness@on:	
  1573                           ; 1 bytes @ 0x0
  1574                           
  1575  0070                     encode_digit@digit:	
  1576                           ; 1 bytes @ 0x0
  1577                           
  1578                           
  1579                           ; 1 bytes @ 0x0
  1580  0070                     	ds	1
  1581  0071                     ??_set_brigthness:
  1582  0071                     ??_start_segment:	
  1583                           ; 1 bytes @ 0x1
  1584                           
  1585  0071                     ??_stop_segment:	
  1586                           ; 1 bytes @ 0x1
  1587                           
  1588  0071                     ??_write_byte:	
  1589                           ; 1 bytes @ 0x1
  1590                           
  1591                           
  1592                           ; 1 bytes @ 0x1
  1593  0071                     	ds	1
  1594  0072                     write_byte@b:
  1595  0072                     set_brigthness@brightness:	
  1596                           ; 1 bytes @ 0x2
  1597                           
  1598                           
  1599                           ; 1 bytes @ 0x2
  1600  0072                     	ds	1
  1601  0073                     write_byte@ack:
  1602                           
  1603                           ; 1 bytes @ 0x3
  1604  0073                     	ds	1
  1605  0074                     write_byte@data:
  1606                           
  1607                           ; 1 bytes @ 0x4
  1608  0074                     	ds	1
  1609  0075                     write_byte@i:
  1610                           
  1611                           ; 1 bytes @ 0x5
  1612  0075                     	ds	1
  1613  0076                     ?_set_segments:
  1614  0076                     set_segments@length:	
  1615                           ; 1 bytes @ 0x6
  1616                           
  1617                           
  1618                           ; 1 bytes @ 0x6
  1619  0076                     	ds	1
  1620  0077                     set_segments@pos:
  1621                           
  1622                           ; 1 bytes @ 0x7
  1623  0077                     	ds	1
  1624  0078                     ??_set_segments:
  1625                           
  1626                           ; 1 bytes @ 0x8
  1627  0078                     	ds	1
  1628  0079                     set_segments@segments:
  1629                           
  1630                           ; 1 bytes @ 0x9
  1631  0079                     	ds	1
  1632  007A                     set_segments@k:
  1633                           
  1634                           ; 1 bytes @ 0xA
  1635  007A                     	ds	1
  1636  007B                     ??_clear_segment:
  1637                           
  1638                           ; 1 bytes @ 0xB
  1639  007B                     	ds	1
  1640  007C                     ??_main:
  1641                           
  1642                           ; 1 bytes @ 0xC
  1643  007C                     	ds	2
  1644                           
  1645                           	psect	cstackBANK0
  1646  0047                     __pcstackBANK0:
  1647  0047                     clear_segment@data:
  1648                           
  1649                           ; 4 bytes @ 0x0
  1650  0047                     	ds	4
  1651  004B                     main@k:
  1652                           
  1653                           ; 1 bytes @ 0x4
  1654  004B                     	ds	1
  1655  004C                     main@data:
  1656                           
  1657                           ; 4 bytes @ 0x5
  1658  004C                     	ds	4
  1659  0050                     main@i:
  1660                           
  1661                           ; 1 bytes @ 0x9
  1662  0050                     	ds	1
  1663                           
  1664                           	psect	maintext
  1665  0766                     __pmaintext:	
  1666 ;;
  1667 ;;Main: autosize = 0, tempsize = 2, incstack = 0, save=0
  1668 ;;
  1669 ;; *************** function _main *****************
  1670 ;; Defined at:
  1671 ;;		line 8 in file "main.c"
  1672 ;; Parameters:    Size  Location     Type
  1673 ;;		None
  1674 ;; Auto vars:     Size  Location     Type
  1675 ;;  i               1    9[BANK0 ] unsigned char 
  1676 ;;  loadcell       12    0        struct .
  1677 ;;  data            4    5[BANK0 ] unsigned char [4]
  1678 ;;  lcd             4    0        struct .
  1679 ;;  k               1    4[BANK0 ] unsigned char 
  1680 ;; Return value:  Size  Location     Type
  1681 ;;                  1    wreg      void 
  1682 ;; Registers used:
  1683 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  1684 ;; Tracked objects:
  1685 ;;		On entry : B1F/0
  1686 ;;		On exit  : 0/0
  1687 ;;		Unchanged: 0/0
  1688 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  1689 ;;      Params:         0       0       0       0       0       0
  1690 ;;      Locals:         0       6       0       0       0       0
  1691 ;;      Temps:          2       0       0       0       0       0
  1692 ;;      Totals:         2       6       0       0       0       0
  1693 ;;Total ram usage:        8 bytes
  1694 ;; Hardware stack levels required when called: 4
  1695 ;; This function calls:
  1696 ;;		_SYSTEM_Initialize
  1697 ;;		_clear_segment
  1698 ;;		_encode_digit
  1699 ;;		_set_brigthness
  1700 ;;		_set_segments
  1701 ;; This function is called by:
  1702 ;;		Startup code after reset
  1703 ;; This function uses a non-reentrant model
  1704 ;;
  1705                           
  1706                           
  1707                           ;psect for function _main
  1708  0766                     _main:
  1709  0766                     l1587:	
  1710                           ;incstack = 0
  1711                           ; Regs used in _main: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  1712                           
  1713                           
  1714                           ;main.c: 11:     SYSTEM_Initialize();
  1715  0766  3186  265E  3187   	fcall	_SYSTEM_Initialize
  1716  0769                     l1589:
  1717  0769                     l1591:
  1718  0769                     l1593:
  1719                           
  1720                           ;main.c: 16:     ANSELA = 0x00;
  1721  0769  0023               	movlb	3	; select bank3
  1722  076A  018C               	clrf	12	;volatile
  1723  076B                     l1595:
  1724                           
  1725                           ;main.c: 17:     TRISA = 0x00;
  1726  076B  0021               	movlb	1	; select bank1
  1727  076C  018C               	clrf	12	;volatile
  1728  076D                     l1597:
  1729                           
  1730                           ;main.c: 18:     LATA = 0x00;
  1731  076D  0022               	movlb	2	; select bank2
  1732  076E  018C               	clrf	12	;volatile
  1733  076F                     l1599:
  1734                           
  1735                           ;main.c: 20:     LATA |= 0x80;
  1736  076F  178C               	bsf	12,7	;volatile
  1737  0770                     l1601:
  1738                           
  1739                           ;main.c: 22:     uint8_t data[] = {0xff, 0xff, 0xff, 0xff};
  1740  0770  0020               	movlb	0	; select bank0
  1741  0771  0831               	movf	main@F2569+3,w
  1742  0772  00CF               	movwf	main@data+3
  1743  0773  0830               	movf	main@F2569+2,w
  1744  0774  00CE               	movwf	main@data+2
  1745  0775  082F               	movf	main@F2569+1,w
  1746  0776  00CD               	movwf	main@data+1
  1747  0777  082E               	movf	main@F2569,w
  1748  0778  00CC               	movwf	main@data
  1749  0779                     l1603:
  1750                           
  1751                           ;main.c: 24:     clear_segment();
  1752  0779  3186  268E  3187   	fcall	_clear_segment
  1753  077C                     l1605:
  1754                           
  1755                           ;main.c: 26:     data[0] = encode_digit(1);
  1756  077C  3001               	movlw	1
  1757  077D  3186  2656  3187   	fcall	_encode_digit
  1758  0780  00FC               	movwf	??_main
  1759  0781  087C               	movf	??_main,w
  1760  0782  0020               	movlb	0	; select bank0
  1761  0783  00CC               	movwf	main@data
  1762  0784                     l1607:
  1763                           
  1764                           ;main.c: 27:     data[1] = encode_digit(9);
  1765  0784  3009               	movlw	9
  1766  0785  3186  2656  3187   	fcall	_encode_digit
  1767  0788  00FC               	movwf	??_main
  1768  0789  087C               	movf	??_main,w
  1769  078A  0020               	movlb	0	; select bank0
  1770  078B  00CD               	movwf	main@data+1
  1771  078C                     l1609:
  1772                           
  1773                           ;main.c: 28:     data[2] = encode_digit(8);
  1774  078C  3008               	movlw	8
  1775  078D  3186  2656  3187   	fcall	_encode_digit
  1776  0790  00FC               	movwf	??_main
  1777  0791  087C               	movf	??_main,w
  1778  0792  0020               	movlb	0	; select bank0
  1779  0793  00CE               	movwf	main@data+2
  1780  0794                     l1611:
  1781                           
  1782                           ;main.c: 29:     data[3] = encode_digit(4);
  1783  0794  3004               	movlw	4
  1784  0795  3186  2656  3187   	fcall	_encode_digit
  1785  0798  00FC               	movwf	??_main
  1786  0799  087C               	movf	??_main,w
  1787  079A  0020               	movlb	0	; select bank0
  1788  079B  00CF               	movwf	main@data+3
  1789  079C                     l1613:
  1790                           
  1791                           ;main.c: 32:     set_brigthness(0x0f, 1);
  1792  079C  01F0               	clrf	set_brigthness@on
  1793  079D  0AF0               	incf	set_brigthness@on,f
  1794  079E  300F               	movlw	15
  1795  079F  3186  26A1  3187   	fcall	_set_brigthness
  1796  07A2                     l1615:
  1797                           
  1798                           ;main.c: 33:     set_segments(data, 4, 0);
  1799  07A2  3004               	movlw	4
  1800  07A3  00FC               	movwf	??_main
  1801  07A4  087C               	movf	??_main,w
  1802  07A5  00F6               	movwf	set_segments@length
  1803  07A6  01F7               	clrf	set_segments@pos
  1804  07A7  304C               	movlw	(low (main@data| 0))& (0+255)
  1805  07A8  3186  26E2  3187   	fcall	_set_segments
  1806  07AB                     l1617:
  1807                           
  1808                           ;main.c: 35:     uint8_t k = 0;
  1809  07AB  0020               	movlb	0	; select bank0
  1810  07AC  01CB               	clrf	main@k
  1811  07AD                     l1619:
  1812                           
  1813                           ;main.c: 39:     {;main.c: 40:         LATA |= 0x80;
  1814  07AD  0022               	movlb	2	; select bank2
  1815  07AE  178C               	bsf	12,7	;volatile
  1816  07AF                     l1621:
  1817                           
  1818                           ;main.c: 42:         for(uint8_t i = 0; i < 4; i++){
  1819  07AF  0020               	movlb	0	; select bank0
  1820  07B0  01D0               	clrf	main@i
  1821  07B1                     l1627:
  1822                           
  1823                           ;main.c: 43:             data[i] = encode_digit(i + k);
  1824  07B1  0850               	movf	main@i,w
  1825  07B2  074B               	addwf	main@k,w
  1826  07B3  3186  2656  3187   	fcall	_encode_digit
  1827  07B6  00FC               	movwf	??_main
  1828  07B7  0020               	movlb	0	; select bank0
  1829  07B8  0850               	movf	main@i,w
  1830  07B9  3E4C               	addlw	(low (main@data| 0))& (0+255)
  1831  07BA  0086               	movwf	6
  1832  07BB  0187               	clrf	7
  1833  07BC  087C               	movf	??_main,w
  1834  07BD  0081               	movwf	1
  1835  07BE                     l1629:
  1836                           
  1837                           ;main.c: 44:         }
  1838  07BE  3001               	movlw	1
  1839  07BF  00FC               	movwf	??_main
  1840  07C0  087C               	movf	??_main,w
  1841  07C1  07D0               	addwf	main@i,f
  1842  07C2                     l1631:
  1843  07C2  3004               	movlw	4
  1844  07C3  0250               	subwf	main@i,w
  1845  07C4  1C03               	skipc
  1846  07C5  2FC7               	goto	u501
  1847  07C6  2FC8               	goto	u500
  1848  07C7                     u501:
  1849  07C7  2FB1               	goto	l1627
  1850  07C8                     u500:
  1851  07C8                     l1633:
  1852                           
  1853                           ;main.c: 46:         set_segments(data, 4, 0);
  1854  07C8  3004               	movlw	4
  1855  07C9  00FC               	movwf	??_main
  1856  07CA  087C               	movf	??_main,w
  1857  07CB  00F6               	movwf	set_segments@length
  1858  07CC  01F7               	clrf	set_segments@pos
  1859  07CD  304C               	movlw	(low (main@data| 0))& (0+255)
  1860  07CE  3186  26E2  3187   	fcall	_set_segments
  1861  07D1                     l1635:
  1862                           
  1863                           ;main.c: 47:         _delay((unsigned long)((1000)*(8000000/4000.0)));
  1864  07D1  300B               	movlw	11
  1865  07D2  00FD               	movwf	??_main+1
  1866  07D3  3026               	movlw	38
  1867  07D4  00FC               	movwf	??_main
  1868  07D5  305E               	movlw	94
  1869  07D6                     u547:
  1870  07D6  0B89               	decfsz	9,f
  1871  07D7  2FD6               	goto	u547
  1872  07D8  0BFC               	decfsz	??_main,f
  1873  07D9  2FD6               	goto	u547
  1874  07DA  0BFD               	decfsz	??_main+1,f
  1875  07DB  2FD6               	goto	u547
  1876  07DC                     l1637:
  1877                           
  1878                           ;main.c: 48:         k++;
  1879  07DC  3001               	movlw	1
  1880  07DD  00FC               	movwf	??_main
  1881  07DE  087C               	movf	??_main,w
  1882  07DF  0020               	movlb	0	; select bank0
  1883  07E0  07CB               	addwf	main@k,f
  1884  07E1                     l1639:
  1885                           
  1886                           ;main.c: 50:         LATA &= ~ 0x80;
  1887  07E1  307F               	movlw	127
  1888  07E2  00FC               	movwf	??_main
  1889  07E3  087C               	movf	??_main,w
  1890  07E4  0022               	movlb	2	; select bank2
  1891  07E5  058C               	andwf	12,f	;volatile
  1892  07E6  2FAD               	goto	l1619
  1893  07E7  3180  2802         	ljmp	start
  1894  07E9                     __end_of_main:
  1895                           
  1896                           	psect	text1
  1897  06A1                     __ptext1:	
  1898 ;; *************** function _set_brigthness *****************
  1899 ;; Defined at:
  1900 ;;		line 141 in file "tm1637.c"
  1901 ;; Parameters:    Size  Location     Type
  1902 ;;  brightness      1    wreg     unsigned char 
  1903 ;;  on              1    0[COMMON] unsigned char 
  1904 ;; Auto vars:     Size  Location     Type
  1905 ;;  brightness      1    2[COMMON] unsigned char 
  1906 ;; Return value:  Size  Location     Type
  1907 ;;                  1    wreg      void 
  1908 ;; Registers used:
  1909 ;;		wreg, status,2, status,0
  1910 ;; Tracked objects:
  1911 ;;		On entry : 0/0
  1912 ;;		On exit  : 0/0
  1913 ;;		Unchanged: 0/0
  1914 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  1915 ;;      Params:         1       0       0       0       0       0
  1916 ;;      Locals:         1       0       0       0       0       0
  1917 ;;      Temps:          1       0       0       0       0       0
  1918 ;;      Totals:         3       0       0       0       0       0
  1919 ;;Total ram usage:        3 bytes
  1920 ;; Hardware stack levels used: 1
  1921 ;; This function calls:
  1922 ;;		Nothing
  1923 ;; This function is called by:
  1924 ;;		_main
  1925 ;; This function uses a non-reentrant model
  1926 ;;
  1927                           
  1928                           
  1929                           ;psect for function _set_brigthness
  1930  06A1                     _set_brigthness:
  1931                           
  1932                           ;incstack = 0
  1933                           ; Regs used in _set_brigthness: [wreg+status,2+status,0]
  1934                           ;set_brigthness@brightness stored from wreg
  1935  06A1  00F2               	movwf	set_brigthness@brightness
  1936  06A2                     l1537:
  1937                           
  1938                           ;tm1637.c: 142:     if(on == 1){
  1939  06A2  0370               	decf	set_brigthness@on,w
  1940  06A3  1D03               	btfss	3,2
  1941  06A4  2EA6               	goto	u451
  1942  06A5  2EA7               	goto	u450
  1943  06A6                     u451:
  1944  06A6  2EAF               	goto	l1541
  1945  06A7                     u450:
  1946  06A7                     l1539:
  1947                           
  1948                           ;tm1637.c: 143:         m_brightness = (brightness & 0x7 | 0x08);
  1949  06A7  0872               	movf	set_brigthness@brightness,w
  1950  06A8  3907               	andlw	7
  1951  06A9  3808               	iorlw	8
  1952  06AA  00F1               	movwf	??_set_brigthness
  1953  06AB  0871               	movf	??_set_brigthness,w
  1954  06AC  0020               	movlb	0	; select bank0
  1955  06AD  00C6               	movwf	_m_brightness
  1956                           
  1957                           ;tm1637.c: 144:     }else{
  1958  06AE  2EB5               	goto	l197
  1959  06AF                     l1541:
  1960                           
  1961                           ;tm1637.c: 145:         m_brightness = (brightness & 0x7 | 0x00);
  1962  06AF  0872               	movf	set_brigthness@brightness,w
  1963  06B0  3907               	andlw	7
  1964  06B1  00F1               	movwf	??_set_brigthness
  1965  06B2  0871               	movf	??_set_brigthness,w
  1966  06B3  0020               	movlb	0	; select bank0
  1967  06B4  00C6               	movwf	_m_brightness
  1968  06B5                     l197:
  1969  06B5  0008               	return
  1970  06B6                     __end_of_set_brigthness:
  1971                           
  1972                           	psect	text2
  1973  0656                     __ptext2:	
  1974 ;; *************** function _encode_digit *****************
  1975 ;; Defined at:
  1976 ;;		line 191 in file "tm1637.c"
  1977 ;; Parameters:    Size  Location     Type
  1978 ;;  digit           1    wreg     unsigned char 
  1979 ;; Auto vars:     Size  Location     Type
  1980 ;;  digit           1    0[COMMON] unsigned char 
  1981 ;; Return value:  Size  Location     Type
  1982 ;;                  1    wreg      unsigned char 
  1983 ;; Registers used:
  1984 ;;		wreg, fsr1l, fsr1h, status,2, status,0
  1985 ;; Tracked objects:
  1986 ;;		On entry : 0/0
  1987 ;;		On exit  : 0/0
  1988 ;;		Unchanged: 0/0
  1989 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  1990 ;;      Params:         0       0       0       0       0       0
  1991 ;;      Locals:         1       0       0       0       0       0
  1992 ;;      Temps:          0       0       0       0       0       0
  1993 ;;      Totals:         1       0       0       0       0       0
  1994 ;;Total ram usage:        1 bytes
  1995 ;; Hardware stack levels used: 1
  1996 ;; This function calls:
  1997 ;;		Nothing
  1998 ;; This function is called by:
  1999 ;;		_main
  2000 ;; This function uses a non-reentrant model
  2001 ;;
  2002                           
  2003                           
  2004                           ;psect for function _encode_digit
  2005  0656                     _encode_digit:
  2006                           
  2007                           ;incstack = 0
  2008                           ; Regs used in _encode_digit: [wreg+fsr1l+fsr1h+status,2+status,0]
  2009                           ;encode_digit@digit stored from wreg
  2010  0656  00F0               	movwf	encode_digit@digit
  2011  0657                     l1533:
  2012                           
  2013                           ;tm1637.c: 192:     return segdata[digit & 0x0f];
  2014  0657  0870               	movf	encode_digit@digit,w
  2015  0658  390F               	andlw	15
  2016  0659  3E20               	addlw	(low (_segdata| 0))& (0+255)
  2017  065A  0086               	movwf	6
  2018  065B  0187               	clrf	7
  2019  065C  0801               	movf	1,w
  2020  065D                     l211:
  2021  065D  0008               	return
  2022  065E                     __end_of_encode_digit:
  2023                           
  2024                           	psect	text3
  2025  068E                     __ptext3:	
  2026 ;; *************** function _clear_segment *****************
  2027 ;; Defined at:
  2028 ;;		line 181 in file "tm1637.c"
  2029 ;; Parameters:    Size  Location     Type
  2030 ;;		None
  2031 ;; Auto vars:     Size  Location     Type
  2032 ;;  data            4    0[BANK0 ] unsigned char [4]
  2033 ;; Return value:  Size  Location     Type
  2034 ;;                  1    wreg      void 
  2035 ;; Registers used:
  2036 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  2037 ;; Tracked objects:
  2038 ;;		On entry : 0/0
  2039 ;;		On exit  : 0/0
  2040 ;;		Unchanged: 0/0
  2041 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  2042 ;;      Params:         0       0       0       0       0       0
  2043 ;;      Locals:         0       4       0       0       0       0
  2044 ;;      Temps:          1       0       0       0       0       0
  2045 ;;      Totals:         1       4       0       0       0       0
  2046 ;;Total ram usage:        5 bytes
  2047 ;; Hardware stack levels used: 1
  2048 ;; Hardware stack levels required when called: 3
  2049 ;; This function calls:
  2050 ;;		_set_segments
  2051 ;; This function is called by:
  2052 ;;		_main
  2053 ;; This function uses a non-reentrant model
  2054 ;;
  2055                           
  2056                           
  2057                           ;psect for function _clear_segment
  2058  068E                     _clear_segment:
  2059  068E                     l1529:	
  2060                           ;incstack = 0
  2061                           ; Regs used in _clear_segment: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
  2062                           
  2063                           
  2064                           ;tm1637.c: 182:     uint8_t data[] = { 0, 0, 0, 0 };
  2065  068E  3000               	movlw	0
  2066  068F  0020               	movlb	0	; select bank0
  2067  0690  00CA               	movwf	clear_segment@data+3
  2068  0691  3000               	movlw	0
  2069  0692  00C9               	movwf	clear_segment@data+2
  2070  0693  3000               	movlw	0
  2071  0694  00C8               	movwf	clear_segment@data+1
  2072  0695  3000               	movlw	0
  2073  0696  00C7               	movwf	clear_segment@data
  2074  0697                     l1531:
  2075                           
  2076                           ;tm1637.c: 183:  set_segments(data, 4, 0);
  2077  0697  3004               	movlw	4
  2078  0698  00FB               	movwf	??_clear_segment
  2079  0699  087B               	movf	??_clear_segment,w
  2080  069A  00F6               	movwf	set_segments@length
  2081  069B  01F7               	clrf	set_segments@pos
  2082  069C  3047               	movlw	(low (clear_segment@data| 0))& (0+255)
  2083  069D  3186  26E2  3186   	fcall	_set_segments
  2084  06A0                     l208:
  2085  06A0  0008               	return
  2086  06A1                     __end_of_clear_segment:
  2087                           
  2088                           	psect	text4
  2089  06E2                     __ptext4:	
  2090 ;; *************** function _set_segments *****************
  2091 ;; Defined at:
  2092 ;;		line 155 in file "tm1637.c"
  2093 ;; Parameters:    Size  Location     Type
  2094 ;;  segments        1    wreg     PTR const unsigned char 
  2095 ;;		 -> clear_segment@data(4), main@data(4), 
  2096 ;;  length          1    6[COMMON] unsigned char 
  2097 ;;  pos             1    7[COMMON] unsigned char 
  2098 ;; Auto vars:     Size  Location     Type
  2099 ;;  segments        1    9[COMMON] PTR const unsigned char 
  2100 ;;		 -> clear_segment@data(4), main@data(4), 
  2101 ;;  k               1   10[COMMON] unsigned char 
  2102 ;; Return value:  Size  Location     Type
  2103 ;;                  1    wreg      void 
  2104 ;; Registers used:
  2105 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  2106 ;; Tracked objects:
  2107 ;;		On entry : 0/0
  2108 ;;		On exit  : 0/0
  2109 ;;		Unchanged: 0/0
  2110 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  2111 ;;      Params:         2       0       0       0       0       0
  2112 ;;      Locals:         2       0       0       0       0       0
  2113 ;;      Temps:          1       0       0       0       0       0
  2114 ;;      Totals:         5       0       0       0       0       0
  2115 ;;Total ram usage:        5 bytes
  2116 ;; Hardware stack levels used: 1
  2117 ;; Hardware stack levels required when called: 2
  2118 ;; This function calls:
  2119 ;;		_start_segment
  2120 ;;		_stop_segment
  2121 ;;		_write_byte
  2122 ;; This function is called by:
  2123 ;;		_main
  2124 ;;		_clear_segment
  2125 ;; This function uses a non-reentrant model
  2126 ;;
  2127                           
  2128                           
  2129                           ;psect for function _set_segments
  2130  06E2                     _set_segments:
  2131                           
  2132                           ;incstack = 0
  2133                           ; Regs used in _set_segments: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
  2134                           ;set_segments@segments stored from wreg
  2135  06E2  00F9               	movwf	set_segments@segments
  2136  06E3                     l1515:
  2137                           
  2138                           ;tm1637.c: 157:     start_segment();
  2139  06E3  3186  2668  3186   	fcall	_start_segment
  2140                           
  2141                           ;tm1637.c: 158:     write_byte(0x40);
  2142  06E6  3040               	movlw	64
  2143  06E7  3187  271D  3186   	fcall	_write_byte
  2144                           
  2145                           ;tm1637.c: 159:     stop_segment();
  2146  06EA  3186  267B  3186   	fcall	_stop_segment
  2147                           
  2148                           ;tm1637.c: 162:     start_segment();
  2149  06ED  3186  2668  3186   	fcall	_start_segment
  2150                           
  2151                           ;tm1637.c: 163:     write_byte(0xC0 + (pos & 0x03));
  2152  06F0  0877               	movf	set_segments@pos,w
  2153  06F1  3903               	andlw	3
  2154  06F2  3EC0               	addlw	192
  2155  06F3  3187  271D  3186   	fcall	_write_byte
  2156  06F6                     l1517:
  2157                           
  2158                           ;tm1637.c: 166:     for(uint8_t k = 0; k < length; k++){
  2159  06F6  01FA               	clrf	set_segments@k
  2160  06F7  2F06               	goto	l1523
  2161  06F8                     l1519:
  2162                           
  2163                           ;tm1637.c: 167:         write_byte(segments[k]);
  2164  06F8  087A               	movf	set_segments@k,w
  2165  06F9  0779               	addwf	set_segments@segments,w
  2166  06FA  00F8               	movwf	??_set_segments
  2167  06FB  0878               	movf	??_set_segments,w
  2168  06FC  0086               	movwf	6
  2169  06FD  0187               	clrf	7
  2170  06FE  0801               	movf	1,w
  2171  06FF  3187  271D  3186   	fcall	_write_byte
  2172  0702                     l1521:
  2173                           
  2174                           ;tm1637.c: 168:     }
  2175  0702  3001               	movlw	1
  2176  0703  00F8               	movwf	??_set_segments
  2177  0704  0878               	movf	??_set_segments,w
  2178  0705  07FA               	addwf	set_segments@k,f
  2179  0706                     l1523:
  2180  0706  0876               	movf	set_segments@length,w
  2181  0707  027A               	subwf	set_segments@k,w
  2182  0708  1C03               	skipc
  2183  0709  2F0B               	goto	u441
  2184  070A  2F0C               	goto	u440
  2185  070B                     u441:
  2186  070B  2EF8               	goto	l1519
  2187  070C                     u440:
  2188  070C                     l1525:
  2189                           
  2190                           ;tm1637.c: 170:     stop_segment();
  2191  070C  3186  267B  3186   	fcall	_stop_segment
  2192                           
  2193                           ;tm1637.c: 173:     start_segment();
  2194  070F  3186  2668  3186   	fcall	_start_segment
  2195                           
  2196                           ;tm1637.c: 174:     write_byte(0x80 + (m_brightness & 0x0f));
  2197  0712  0020               	movlb	0	; select bank0
  2198  0713  0846               	movf	_m_brightness,w
  2199  0714  390F               	andlw	15
  2200  0715  3E80               	addlw	128
  2201  0716  3187  271D  3186   	fcall	_write_byte
  2202                           
  2203                           ;tm1637.c: 175:     stop_segment();
  2204  0719  3186  267B  3186   	fcall	_stop_segment
  2205  071C                     l203:
  2206  071C  0008               	return
  2207  071D                     __end_of_set_segments:
  2208                           
  2209                           	psect	text5
  2210  071D                     __ptext5:	
  2211 ;; *************** function _write_byte *****************
  2212 ;; Defined at:
  2213 ;;		line 86 in file "tm1637.c"
  2214 ;; Parameters:    Size  Location     Type
  2215 ;;  b               1    wreg     unsigned char 
  2216 ;; Auto vars:     Size  Location     Type
  2217 ;;  b               1    2[COMMON] unsigned char 
  2218 ;;  i               1    5[COMMON] unsigned char 
  2219 ;;  data            1    4[COMMON] unsigned char 
  2220 ;;  ack             1    3[COMMON] unsigned char 
  2221 ;; Return value:  Size  Location     Type
  2222 ;;                  1    wreg      unsigned char 
  2223 ;; Registers used:
  2224 ;;		wreg, status,2, status,0, pclath, cstack
  2225 ;; Tracked objects:
  2226 ;;		On entry : 0/0
  2227 ;;		On exit  : 0/0
  2228 ;;		Unchanged: 0/0
  2229 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  2230 ;;      Params:         0       0       0       0       0       0
  2231 ;;      Locals:         4       0       0       0       0       0
  2232 ;;      Temps:          1       0       0       0       0       0
  2233 ;;      Totals:         5       0       0       0       0       0
  2234 ;;Total ram usage:        5 bytes
  2235 ;; Hardware stack levels used: 1
  2236 ;; Hardware stack levels required when called: 1
  2237 ;; This function calls:
  2238 ;;		_CLK_SET_HIGH
  2239 ;;		_CLK_SET_LOW
  2240 ;;		_CLK_SET_OUTPUT
  2241 ;;		_DIO_SET_HIGH
  2242 ;;		_DIO_SET_INPUT
  2243 ;;		_DIO_SET_LOW
  2244 ;;		_DIO_SET_OUTPUT
  2245 ;;		_get_DIO_PIN_value
  2246 ;; This function is called by:
  2247 ;;		_set_segments
  2248 ;; This function uses a non-reentrant model
  2249 ;;
  2250                           
  2251                           
  2252                           ;psect for function _write_byte
  2253  071D                     _write_byte:
  2254                           
  2255                           ;incstack = 0
  2256                           ; Regs used in _write_byte: [wreg+status,2+status,0+pclath+cstack]
  2257                           ;write_byte@b stored from wreg
  2258  071D  00F2               	movwf	write_byte@b
  2259  071E                     l1445:
  2260                           
  2261                           ;tm1637.c: 87:     uint8_t data = b;
  2262  071E  0872               	movf	write_byte@b,w
  2263  071F  00F1               	movwf	??_write_byte
  2264  0720  0871               	movf	??_write_byte,w
  2265  0721  00F4               	movwf	write_byte@data
  2266  0722                     l1447:
  2267                           
  2268                           ;tm1637.c: 90:     CLK_SET_OUTPUT();
  2269  0722  3186  2631  3187   	fcall	_CLK_SET_OUTPUT
  2270  0725                     l1449:
  2271                           
  2272                           ;tm1637.c: 91:     for(uint8_t i = 0; i < 8; i++){
  2273  0725  01F5               	clrf	write_byte@i
  2274  0726                     l1455:
  2275                           
  2276                           ;tm1637.c: 93:         CLK_SET_LOW();
  2277  0726  3186  262B  3187   	fcall	_CLK_SET_LOW
  2278  0729                     l1457:
  2279                           
  2280                           ;tm1637.c: 95:         if(data & 0x01){
  2281  0729  1C74               	btfss	write_byte@data,0
  2282  072A  2F2C               	goto	u371
  2283  072B  2F2D               	goto	u370
  2284  072C                     u371:
  2285  072C  2F31               	goto	l1461
  2286  072D                     u370:
  2287  072D                     l1459:
  2288                           
  2289                           ;tm1637.c: 97:             DIO_SET_HIGH();
  2290  072D  3186  261C  3187   	fcall	_DIO_SET_HIGH
  2291                           
  2292                           ;tm1637.c: 98:         }else{
  2293  0730  2F34               	goto	l1463
  2294  0731                     l1461:
  2295                           
  2296                           ;tm1637.c: 100:             DIO_SET_LOW();
  2297  0731  3186  2637  3187   	fcall	_DIO_SET_LOW
  2298  0734                     l1463:
  2299                           
  2300                           ;tm1637.c: 104:         CLK_SET_HIGH();
  2301  0734  3186  2619  3187   	fcall	_CLK_SET_HIGH
  2302  0737                     l1465:
  2303                           
  2304                           ;tm1637.c: 106:         data = data >> 1;
  2305  0737  3674               	lsrf	write_byte@data,w
  2306  0738  00F1               	movwf	??_write_byte
  2307  0739  0871               	movf	??_write_byte,w
  2308  073A  00F4               	movwf	write_byte@data
  2309  073B                     l1467:
  2310                           
  2311                           ;tm1637.c: 107:     }
  2312  073B  3001               	movlw	1
  2313  073C  00F1               	movwf	??_write_byte
  2314  073D  0871               	movf	??_write_byte,w
  2315  073E  07F5               	addwf	write_byte@i,f
  2316  073F  3008               	movlw	8
  2317  0740  0275               	subwf	write_byte@i,w
  2318  0741  1C03               	skipc
  2319  0742  2F44               	goto	u381
  2320  0743  2F45               	goto	u380
  2321  0744                     u381:
  2322  0744  2F26               	goto	l1455
  2323  0745                     u380:
  2324  0745                     l1469:
  2325                           
  2326                           ;tm1637.c: 112:     CLK_SET_LOW();
  2327  0745  3186  262B  3187   	fcall	_CLK_SET_LOW
  2328  0748                     l1471:
  2329                           
  2330                           ;tm1637.c: 113:     DIO_SET_HIGH();
  2331  0748  3186  261C  3187   	fcall	_DIO_SET_HIGH
  2332  074B                     l1473:
  2333                           
  2334                           ;tm1637.c: 116:     CLK_SET_HIGH();
  2335  074B  3186  2619  3187   	fcall	_CLK_SET_HIGH
  2336  074E                     l1475:
  2337                           
  2338                           ;tm1637.c: 119:     DIO_SET_INPUT();
  2339  074E  3186  261F  3187   	fcall	_DIO_SET_INPUT
  2340  0751                     l1477:
  2341                           
  2342                           ;tm1637.c: 121:     uint8_t ack = get_DIO_PIN_value();
  2343  0751  3186  2626  3187   	fcall	_get_DIO_PIN_value
  2344  0754  00F1               	movwf	??_write_byte
  2345  0755  0871               	movf	??_write_byte,w
  2346  0756  00F3               	movwf	write_byte@ack
  2347  0757                     l1479:
  2348                           
  2349                           ;tm1637.c: 122:     if(ack == 0){
  2350  0757  0873               	movf	write_byte@ack,w
  2351  0758  1D03               	btfss	3,2
  2352  0759  2F5B               	goto	u391
  2353  075A  2F5C               	goto	u390
  2354  075B                     u391:
  2355  075B  2F62               	goto	l191
  2356  075C                     u390:
  2357  075C                     l1481:
  2358                           
  2359                           ;tm1637.c: 124:         DIO_SET_OUTPUT();
  2360  075C  3186  263D  3187   	fcall	_DIO_SET_OUTPUT
  2361                           
  2362                           ;tm1637.c: 127:         DIO_SET_LOW();
  2363  075F  3186  2637  3187   	fcall	_DIO_SET_LOW
  2364  0762                     l191:	
  2365                           ;tm1637.c: 128:     }
  2366                           
  2367                           
  2368                           ;tm1637.c: 131:     DIO_SET_OUTPUT();
  2369  0762  3186  263D  3187   	fcall	_DIO_SET_OUTPUT
  2370  0765                     l192:
  2371  0765  0008               	return
  2372  0766                     __end_of_write_byte:
  2373                           
  2374                           	psect	text6
  2375  0626                     __ptext6:	
  2376 ;; *************** function _get_DIO_PIN_value *****************
  2377 ;; Defined at:
  2378 ;;		line 75 in file "tm1637.c"
  2379 ;; Parameters:    Size  Location     Type
  2380 ;;		None
  2381 ;; Auto vars:     Size  Location     Type
  2382 ;;		None
  2383 ;; Return value:  Size  Location     Type
  2384 ;;                  1    wreg      unsigned char 
  2385 ;; Registers used:
  2386 ;;		wreg, status,2, status,0
  2387 ;; Tracked objects:
  2388 ;;		On entry : 0/0
  2389 ;;		On exit  : 0/0
  2390 ;;		Unchanged: 0/0
  2391 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  2392 ;;      Params:         0       0       0       0       0       0
  2393 ;;      Locals:         0       0       0       0       0       0
  2394 ;;      Temps:          0       0       0       0       0       0
  2395 ;;      Totals:         0       0       0       0       0       0
  2396 ;;Total ram usage:        0 bytes
  2397 ;; Hardware stack levels used: 1
  2398 ;; This function calls:
  2399 ;;		Nothing
  2400 ;; This function is called by:
  2401 ;;		_write_byte
  2402 ;; This function uses a non-reentrant model
  2403 ;;
  2404                           
  2405                           
  2406                           ;psect for function _get_DIO_PIN_value
  2407  0626                     _get_DIO_PIN_value:
  2408  0626                     l1393:	
  2409                           ;incstack = 0
  2410                           ; Regs used in _get_DIO_PIN_value: [wreg+status,2+status,0]
  2411                           
  2412  0626                     l1403:	
  2413                           ;tm1637.c: 76:     if(0x04 == 0x01){ return PORTAbits.RA0; }
  2414                           
  2415  0626  0020               	movlb	0	; select bank0
  2416  0627  0C0C               	rrf	12,w	;volatile
  2417  0628  0C89               	rrf	9,f
  2418  0629  3901               	andlw	1
  2419  062A                     l177:
  2420  062A  0008               	return
  2421  062B                     __end_of_get_DIO_PIN_value:
  2422                           
  2423                           	psect	text7
  2424  061F                     __ptext7:	
  2425 ;; *************** function _DIO_SET_INPUT *****************
  2426 ;; Defined at:
  2427 ;;		line 41 in file "tm1637.c"
  2428 ;; Parameters:    Size  Location     Type
  2429 ;;		None
  2430 ;; Auto vars:     Size  Location     Type
  2431 ;;		None
  2432 ;; Return value:  Size  Location     Type
  2433 ;;                  1    wreg      void 
  2434 ;; Registers used:
  2435 ;;		None
  2436 ;; Tracked objects:
  2437 ;;		On entry : 0/0
  2438 ;;		On exit  : 0/0
  2439 ;;		Unchanged: 0/0
  2440 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  2441 ;;      Params:         0       0       0       0       0       0
  2442 ;;      Locals:         0       0       0       0       0       0
  2443 ;;      Temps:          0       0       0       0       0       0
  2444 ;;      Totals:         0       0       0       0       0       0
  2445 ;;Total ram usage:        0 bytes
  2446 ;; Hardware stack levels used: 1
  2447 ;; This function calls:
  2448 ;;		Nothing
  2449 ;; This function is called by:
  2450 ;;		_write_byte
  2451 ;; This function uses a non-reentrant model
  2452 ;;
  2453                           
  2454                           
  2455                           ;psect for function _DIO_SET_INPUT
  2456  061F                     _DIO_SET_INPUT:
  2457  061F                     l1387:	
  2458                           ;incstack = 0
  2459                           ; Regs used in _DIO_SET_INPUT: []
  2460                           
  2461  061F  0021               	movlb	1	; select bank1
  2462  0620  150C               	bsf	12,2	;volatile
  2463  0621                     l161:
  2464  0621  0008               	return
  2465  0622                     __end_of_DIO_SET_INPUT:
  2466                           
  2467                           	psect	text8
  2468  067B                     __ptext8:	
  2469 ;; *************** function _stop_segment *****************
  2470 ;; Defined at:
  2471 ;;		line 61 in file "tm1637.c"
  2472 ;; Parameters:    Size  Location     Type
  2473 ;;		None
  2474 ;; Auto vars:     Size  Location     Type
  2475 ;;		None
  2476 ;; Return value:  Size  Location     Type
  2477 ;;                  1    wreg      void 
  2478 ;; Registers used:
  2479 ;;		wreg, status,2, status,0, pclath, cstack
  2480 ;; Tracked objects:
  2481 ;;		On entry : 0/0
  2482 ;;		On exit  : 0/0
  2483 ;;		Unchanged: 0/0
  2484 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  2485 ;;      Params:         0       0       0       0       0       0
  2486 ;;      Locals:         0       0       0       0       0       0
  2487 ;;      Temps:          0       0       0       0       0       0
  2488 ;;      Totals:         0       0       0       0       0       0
  2489 ;;Total ram usage:        0 bytes
  2490 ;; Hardware stack levels used: 1
  2491 ;; Hardware stack levels required when called: 1
  2492 ;; This function calls:
  2493 ;;		_CLK_SET_HIGH
  2494 ;;		_CLK_SET_LOW
  2495 ;;		_CLK_SET_OUTPUT
  2496 ;;		_DIO_SET_HIGH
  2497 ;;		_DIO_SET_LOW
  2498 ;;		_DIO_SET_OUTPUT
  2499 ;; This function is called by:
  2500 ;;		_set_segments
  2501 ;; This function uses a non-reentrant model
  2502 ;;
  2503                           
  2504                           
  2505                           ;psect for function _stop_segment
  2506  067B                     _stop_segment:
  2507  067B                     l1439:	
  2508                           ;incstack = 0
  2509                           ; Regs used in _stop_segment: [wreg+status,2+status,0+pclath+cstack]
  2510                           
  2511                           
  2512                           ;tm1637.c: 63:     DIO_SET_OUTPUT();
  2513  067B  3186  263D  3186   	fcall	_DIO_SET_OUTPUT
  2514                           
  2515                           ;tm1637.c: 64:     CLK_SET_OUTPUT();
  2516  067E  3186  2631  3186   	fcall	_CLK_SET_OUTPUT
  2517                           
  2518                           ;tm1637.c: 67:     CLK_SET_LOW();
  2519  0681  3186  262B  3186   	fcall	_CLK_SET_LOW
  2520                           
  2521                           ;tm1637.c: 68:     DIO_SET_LOW();
  2522  0684  3186  2637  3186   	fcall	_DIO_SET_LOW
  2523  0687                     l1441:
  2524                           
  2525                           ;tm1637.c: 71:     CLK_SET_HIGH();
  2526  0687  3186  2619  3186   	fcall	_CLK_SET_HIGH
  2527  068A                     l1443:
  2528                           
  2529                           ;tm1637.c: 72:     DIO_SET_HIGH();
  2530  068A  3186  261C  3186   	fcall	_DIO_SET_HIGH
  2531  068D                     l173:
  2532  068D  0008               	return
  2533  068E                     __end_of_stop_segment:
  2534                           
  2535                           	psect	text9
  2536  0668                     __ptext9:	
  2537 ;; *************** function _start_segment *****************
  2538 ;; Defined at:
  2539 ;;		line 47 in file "tm1637.c"
  2540 ;; Parameters:    Size  Location     Type
  2541 ;;		None
  2542 ;; Auto vars:     Size  Location     Type
  2543 ;;		None
  2544 ;; Return value:  Size  Location     Type
  2545 ;;                  1    wreg      void 
  2546 ;; Registers used:
  2547 ;;		wreg, status,2, status,0, pclath, cstack
  2548 ;; Tracked objects:
  2549 ;;		On entry : 0/0
  2550 ;;		On exit  : 0/0
  2551 ;;		Unchanged: 0/0
  2552 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  2553 ;;      Params:         0       0       0       0       0       0
  2554 ;;      Locals:         0       0       0       0       0       0
  2555 ;;      Temps:          0       0       0       0       0       0
  2556 ;;      Totals:         0       0       0       0       0       0
  2557 ;;Total ram usage:        0 bytes
  2558 ;; Hardware stack levels used: 1
  2559 ;; Hardware stack levels required when called: 1
  2560 ;; This function calls:
  2561 ;;		_CLK_SET_HIGH
  2562 ;;		_CLK_SET_LOW
  2563 ;;		_CLK_SET_OUTPUT
  2564 ;;		_DIO_SET_HIGH
  2565 ;;		_DIO_SET_LOW
  2566 ;;		_DIO_SET_OUTPUT
  2567 ;; This function is called by:
  2568 ;;		_set_segments
  2569 ;; This function uses a non-reentrant model
  2570 ;;
  2571                           
  2572                           
  2573                           ;psect for function _start_segment
  2574  0668                     _start_segment:
  2575  0668                     l1433:	
  2576                           ;incstack = 0
  2577                           ; Regs used in _start_segment: [wreg+status,2+status,0+pclath+cstack]
  2578                           
  2579                           
  2580                           ;tm1637.c: 49:     DIO_SET_OUTPUT();
  2581  0668  3186  263D  3186   	fcall	_DIO_SET_OUTPUT
  2582                           
  2583                           ;tm1637.c: 50:     CLK_SET_OUTPUT();
  2584  066B  3186  2631  3186   	fcall	_CLK_SET_OUTPUT
  2585  066E                     l1435:
  2586                           
  2587                           ;tm1637.c: 53:     DIO_SET_HIGH();
  2588  066E  3186  261C  3186   	fcall	_DIO_SET_HIGH
  2589  0671                     l1437:
  2590                           
  2591                           ;tm1637.c: 54:     CLK_SET_HIGH();
  2592  0671  3186  2619  3186   	fcall	_CLK_SET_HIGH
  2593                           
  2594                           ;tm1637.c: 57:     DIO_SET_LOW();
  2595  0674  3186  2637  3186   	fcall	_DIO_SET_LOW
  2596                           
  2597                           ;tm1637.c: 58:     CLK_SET_LOW();
  2598  0677  3186  262B  3186   	fcall	_CLK_SET_LOW
  2599  067A                     l170:
  2600  067A  0008               	return
  2601  067B                     __end_of_start_segment:
  2602                           
  2603                           	psect	text10
  2604  063D                     __ptext10:	
  2605 ;; *************** function _DIO_SET_OUTPUT *****************
  2606 ;; Defined at:
  2607 ;;		line 39 in file "tm1637.c"
  2608 ;; Parameters:    Size  Location     Type
  2609 ;;		None
  2610 ;; Auto vars:     Size  Location     Type
  2611 ;;		None
  2612 ;; Return value:  Size  Location     Type
  2613 ;;                  1    wreg      void 
  2614 ;; Registers used:
  2615 ;;		wreg, status,2, status,0
  2616 ;; Tracked objects:
  2617 ;;		On entry : 0/0
  2618 ;;		On exit  : 0/0
  2619 ;;		Unchanged: 0/0
  2620 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  2621 ;;      Params:         0       0       0       0       0       0
  2622 ;;      Locals:         0       0       0       0       0       0
  2623 ;;      Temps:          1       0       0       0       0       0
  2624 ;;      Totals:         1       0       0       0       0       0
  2625 ;;Total ram usage:        1 bytes
  2626 ;; Hardware stack levels used: 1
  2627 ;; This function calls:
  2628 ;;		Nothing
  2629 ;; This function is called by:
  2630 ;;		_start_segment
  2631 ;;		_stop_segment
  2632 ;;		_write_byte
  2633 ;; This function uses a non-reentrant model
  2634 ;;
  2635                           
  2636                           
  2637                           ;psect for function _DIO_SET_OUTPUT
  2638  063D                     _DIO_SET_OUTPUT:
  2639  063D                     l1385:	
  2640                           ;incstack = 0
  2641                           ; Regs used in _DIO_SET_OUTPUT: [wreg+status,2+status,0]
  2642                           
  2643  063D  30FB               	movlw	251
  2644  063E  00F0               	movwf	??_DIO_SET_OUTPUT
  2645  063F  0870               	movf	??_DIO_SET_OUTPUT,w
  2646  0640  0021               	movlb	1	; select bank1
  2647  0641  058C               	andwf	12,f	;volatile
  2648  0642                     l158:
  2649  0642  0008               	return
  2650  0643                     __end_of_DIO_SET_OUTPUT:
  2651                           
  2652                           	psect	text11
  2653  0637                     __ptext11:	
  2654 ;; *************** function _DIO_SET_LOW *****************
  2655 ;; Defined at:
  2656 ;;		line 45 in file "tm1637.c"
  2657 ;; Parameters:    Size  Location     Type
  2658 ;;		None
  2659 ;; Auto vars:     Size  Location     Type
  2660 ;;		None
  2661 ;; Return value:  Size  Location     Type
  2662 ;;                  1    wreg      void 
  2663 ;; Registers used:
  2664 ;;		wreg, status,2, status,0
  2665 ;; Tracked objects:
  2666 ;;		On entry : 0/0
  2667 ;;		On exit  : 0/0
  2668 ;;		Unchanged: 0/0
  2669 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  2670 ;;      Params:         0       0       0       0       0       0
  2671 ;;      Locals:         0       0       0       0       0       0
  2672 ;;      Temps:          1       0       0       0       0       0
  2673 ;;      Totals:         1       0       0       0       0       0
  2674 ;;Total ram usage:        1 bytes
  2675 ;; Hardware stack levels used: 1
  2676 ;; This function calls:
  2677 ;;		Nothing
  2678 ;; This function is called by:
  2679 ;;		_start_segment
  2680 ;;		_stop_segment
  2681 ;;		_write_byte
  2682 ;; This function uses a non-reentrant model
  2683 ;;
  2684                           
  2685                           
  2686                           ;psect for function _DIO_SET_LOW
  2687  0637                     _DIO_SET_LOW:
  2688  0637                     l1391:	
  2689                           ;incstack = 0
  2690                           ; Regs used in _DIO_SET_LOW: [wreg+status,2+status,0]
  2691                           
  2692  0637  30FB               	movlw	251
  2693  0638  00F0               	movwf	??_DIO_SET_LOW
  2694  0639  0870               	movf	??_DIO_SET_LOW,w
  2695  063A  0022               	movlb	2	; select bank2
  2696  063B  058C               	andwf	12,f	;volatile
  2697  063C                     l167:
  2698  063C  0008               	return
  2699  063D                     __end_of_DIO_SET_LOW:
  2700                           
  2701                           	psect	text12
  2702  061C                     __ptext12:	
  2703 ;; *************** function _DIO_SET_HIGH *****************
  2704 ;; Defined at:
  2705 ;;		line 43 in file "tm1637.c"
  2706 ;; Parameters:    Size  Location     Type
  2707 ;;		None
  2708 ;; Auto vars:     Size  Location     Type
  2709 ;;		None
  2710 ;; Return value:  Size  Location     Type
  2711 ;;                  1    wreg      void 
  2712 ;; Registers used:
  2713 ;;		None
  2714 ;; Tracked objects:
  2715 ;;		On entry : 0/0
  2716 ;;		On exit  : 0/0
  2717 ;;		Unchanged: 0/0
  2718 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  2719 ;;      Params:         0       0       0       0       0       0
  2720 ;;      Locals:         0       0       0       0       0       0
  2721 ;;      Temps:          0       0       0       0       0       0
  2722 ;;      Totals:         0       0       0       0       0       0
  2723 ;;Total ram usage:        0 bytes
  2724 ;; Hardware stack levels used: 1
  2725 ;; This function calls:
  2726 ;;		Nothing
  2727 ;; This function is called by:
  2728 ;;		_start_segment
  2729 ;;		_stop_segment
  2730 ;;		_write_byte
  2731 ;; This function uses a non-reentrant model
  2732 ;;
  2733                           
  2734                           
  2735                           ;psect for function _DIO_SET_HIGH
  2736  061C                     _DIO_SET_HIGH:
  2737  061C                     l1389:	
  2738                           ;incstack = 0
  2739                           ; Regs used in _DIO_SET_HIGH: []
  2740                           
  2741  061C  0022               	movlb	2	; select bank2
  2742  061D  150C               	bsf	12,2	;volatile
  2743  061E                     l164:
  2744  061E  0008               	return
  2745  061F                     __end_of_DIO_SET_HIGH:
  2746                           
  2747                           	psect	text13
  2748  0631                     __ptext13:	
  2749 ;; *************** function _CLK_SET_OUTPUT *****************
  2750 ;; Defined at:
  2751 ;;		line 31 in file "tm1637.c"
  2752 ;; Parameters:    Size  Location     Type
  2753 ;;		None
  2754 ;; Auto vars:     Size  Location     Type
  2755 ;;		None
  2756 ;; Return value:  Size  Location     Type
  2757 ;;                  1    wreg      void 
  2758 ;; Registers used:
  2759 ;;		wreg, status,2, status,0
  2760 ;; Tracked objects:
  2761 ;;		On entry : 0/0
  2762 ;;		On exit  : 0/0
  2763 ;;		Unchanged: 0/0
  2764 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  2765 ;;      Params:         0       0       0       0       0       0
  2766 ;;      Locals:         0       0       0       0       0       0
  2767 ;;      Temps:          1       0       0       0       0       0
  2768 ;;      Totals:         1       0       0       0       0       0
  2769 ;;Total ram usage:        1 bytes
  2770 ;; Hardware stack levels used: 1
  2771 ;; This function calls:
  2772 ;;		Nothing
  2773 ;; This function is called by:
  2774 ;;		_start_segment
  2775 ;;		_stop_segment
  2776 ;;		_write_byte
  2777 ;; This function uses a non-reentrant model
  2778 ;;
  2779                           
  2780                           
  2781                           ;psect for function _CLK_SET_OUTPUT
  2782  0631                     _CLK_SET_OUTPUT:
  2783  0631                     l1379:	
  2784                           ;incstack = 0
  2785                           ; Regs used in _CLK_SET_OUTPUT: [wreg+status,2+status,0]
  2786                           
  2787  0631  30FD               	movlw	253
  2788  0632  00F0               	movwf	??_CLK_SET_OUTPUT
  2789  0633  0870               	movf	??_CLK_SET_OUTPUT,w
  2790  0634  0021               	movlb	1	; select bank1
  2791  0635  058C               	andwf	12,f	;volatile
  2792  0636                     l149:
  2793  0636  0008               	return
  2794  0637                     __end_of_CLK_SET_OUTPUT:
  2795                           
  2796                           	psect	text14
  2797  062B                     __ptext14:	
  2798 ;; *************** function _CLK_SET_LOW *****************
  2799 ;; Defined at:
  2800 ;;		line 36 in file "tm1637.c"
  2801 ;; Parameters:    Size  Location     Type
  2802 ;;		None
  2803 ;; Auto vars:     Size  Location     Type
  2804 ;;		None
  2805 ;; Return value:  Size  Location     Type
  2806 ;;                  1    wreg      void 
  2807 ;; Registers used:
  2808 ;;		wreg, status,2, status,0
  2809 ;; Tracked objects:
  2810 ;;		On entry : 0/0
  2811 ;;		On exit  : 0/0
  2812 ;;		Unchanged: 0/0
  2813 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  2814 ;;      Params:         0       0       0       0       0       0
  2815 ;;      Locals:         0       0       0       0       0       0
  2816 ;;      Temps:          1       0       0       0       0       0
  2817 ;;      Totals:         1       0       0       0       0       0
  2818 ;;Total ram usage:        1 bytes
  2819 ;; Hardware stack levels used: 1
  2820 ;; This function calls:
  2821 ;;		Nothing
  2822 ;; This function is called by:
  2823 ;;		_start_segment
  2824 ;;		_stop_segment
  2825 ;;		_write_byte
  2826 ;; This function uses a non-reentrant model
  2827 ;;
  2828                           
  2829                           
  2830                           ;psect for function _CLK_SET_LOW
  2831  062B                     _CLK_SET_LOW:
  2832  062B                     l1383:	
  2833                           ;incstack = 0
  2834                           ; Regs used in _CLK_SET_LOW: [wreg+status,2+status,0]
  2835                           
  2836  062B  30FD               	movlw	253
  2837  062C  00F0               	movwf	??_CLK_SET_LOW
  2838  062D  0870               	movf	??_CLK_SET_LOW,w
  2839  062E  0022               	movlb	2	; select bank2
  2840  062F  058C               	andwf	12,f	;volatile
  2841  0630                     l155:
  2842  0630  0008               	return
  2843  0631                     __end_of_CLK_SET_LOW:
  2844                           
  2845                           	psect	text15
  2846  0619                     __ptext15:	
  2847 ;; *************** function _CLK_SET_HIGH *****************
  2848 ;; Defined at:
  2849 ;;		line 34 in file "tm1637.c"
  2850 ;; Parameters:    Size  Location     Type
  2851 ;;		None
  2852 ;; Auto vars:     Size  Location     Type
  2853 ;;		None
  2854 ;; Return value:  Size  Location     Type
  2855 ;;                  1    wreg      void 
  2856 ;; Registers used:
  2857 ;;		None
  2858 ;; Tracked objects:
  2859 ;;		On entry : 0/0
  2860 ;;		On exit  : 0/0
  2861 ;;		Unchanged: 0/0
  2862 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  2863 ;;      Params:         0       0       0       0       0       0
  2864 ;;      Locals:         0       0       0       0       0       0
  2865 ;;      Temps:          0       0       0       0       0       0
  2866 ;;      Totals:         0       0       0       0       0       0
  2867 ;;Total ram usage:        0 bytes
  2868 ;; Hardware stack levels used: 1
  2869 ;; This function calls:
  2870 ;;		Nothing
  2871 ;; This function is called by:
  2872 ;;		_start_segment
  2873 ;;		_stop_segment
  2874 ;;		_write_byte
  2875 ;; This function uses a non-reentrant model
  2876 ;;
  2877                           
  2878                           
  2879                           ;psect for function _CLK_SET_HIGH
  2880  0619                     _CLK_SET_HIGH:
  2881  0619                     l1381:	
  2882                           ;incstack = 0
  2883                           ; Regs used in _CLK_SET_HIGH: []
  2884                           
  2885  0619  0022               	movlb	2	; select bank2
  2886  061A  148C               	bsf	12,1	;volatile
  2887  061B                     l152:
  2888  061B  0008               	return
  2889  061C                     __end_of_CLK_SET_HIGH:
  2890                           
  2891                           	psect	text16
  2892  065E                     __ptext16:	
  2893 ;; *************** function _SYSTEM_Initialize *****************
  2894 ;; Defined at:
  2895 ;;		line 50 in file "mcc_generated_files/mcc.c"
  2896 ;; Parameters:    Size  Location     Type
  2897 ;;		None
  2898 ;; Auto vars:     Size  Location     Type
  2899 ;;		None
  2900 ;; Return value:  Size  Location     Type
  2901 ;;                  1    wreg      void 
  2902 ;; Registers used:
  2903 ;;		wreg, status,2, status,0, pclath, cstack
  2904 ;; Tracked objects:
  2905 ;;		On entry : 0/0
  2906 ;;		On exit  : 0/0
  2907 ;;		Unchanged: 0/0
  2908 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  2909 ;;      Params:         0       0       0       0       0       0
  2910 ;;      Locals:         0       0       0       0       0       0
  2911 ;;      Temps:          0       0       0       0       0       0
  2912 ;;      Totals:         0       0       0       0       0       0
  2913 ;;Total ram usage:        0 bytes
  2914 ;; Hardware stack levels used: 1
  2915 ;; Hardware stack levels required when called: 1
  2916 ;; This function calls:
  2917 ;;		_OSCILLATOR_Initialize
  2918 ;;		_PIN_MANAGER_Initialize
  2919 ;;		_WDT_Initialize
  2920 ;; This function is called by:
  2921 ;;		_main
  2922 ;; This function uses a non-reentrant model
  2923 ;;
  2924                           
  2925                           
  2926                           ;psect for function _SYSTEM_Initialize
  2927  065E                     _SYSTEM_Initialize:
  2928  065E                     l1527:	
  2929                           ;incstack = 0
  2930                           ; Regs used in _SYSTEM_Initialize: [wreg+status,2+status,0+pclath+cstack]
  2931                           
  2932                           
  2933                           ;mcc_generated_files/mcc.c: 53:     PIN_MANAGER_Initialize();
  2934  065E  3186  26B6  3186   	fcall	_PIN_MANAGER_Initialize
  2935                           
  2936                           ;mcc_generated_files/mcc.c: 54:     OSCILLATOR_Initialize();
  2937  0661  3186  264F  3186   	fcall	_OSCILLATOR_Initialize
  2938                           
  2939                           ;mcc_generated_files/mcc.c: 55:     WDT_Initialize();
  2940  0664  3186  2622  3186   	fcall	_WDT_Initialize
  2941  0667                     l45:
  2942  0667  0008               	return
  2943  0668                     __end_of_SYSTEM_Initialize:
  2944                           
  2945                           	psect	text17
  2946  0622                     __ptext17:	
  2947 ;; *************** function _WDT_Initialize *****************
  2948 ;; Defined at:
  2949 ;;		line 68 in file "mcc_generated_files/mcc.c"
  2950 ;; Parameters:    Size  Location     Type
  2951 ;;		None
  2952 ;; Auto vars:     Size  Location     Type
  2953 ;;		None
  2954 ;; Return value:  Size  Location     Type
  2955 ;;                  1    wreg      void 
  2956 ;; Registers used:
  2957 ;;		wreg
  2958 ;; Tracked objects:
  2959 ;;		On entry : 0/0
  2960 ;;		On exit  : 0/0
  2961 ;;		Unchanged: 0/0
  2962 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  2963 ;;      Params:         0       0       0       0       0       0
  2964 ;;      Locals:         0       0       0       0       0       0
  2965 ;;      Temps:          0       0       0       0       0       0
  2966 ;;      Totals:         0       0       0       0       0       0
  2967 ;;Total ram usage:        0 bytes
  2968 ;; Hardware stack levels used: 1
  2969 ;; This function calls:
  2970 ;;		Nothing
  2971 ;; This function is called by:
  2972 ;;		_SYSTEM_Initialize
  2973 ;; This function uses a non-reentrant model
  2974 ;;
  2975                           
  2976                           
  2977                           ;psect for function _WDT_Initialize
  2978  0622                     _WDT_Initialize:
  2979  0622                     l1503:	
  2980                           ;incstack = 0
  2981                           ; Regs used in _WDT_Initialize: [wreg]
  2982                           
  2983                           
  2984                           ;mcc_generated_files/mcc.c: 71:     WDTCON = 0x16;
  2985  0622  3016               	movlw	22
  2986  0623  0021               	movlb	1	; select bank1
  2987  0624  0097               	movwf	23	;volatile
  2988  0625                     l51:
  2989  0625  0008               	return
  2990  0626                     __end_of_WDT_Initialize:
  2991                           
  2992                           	psect	text18
  2993  06B6                     __ptext18:	
  2994 ;; *************** function _PIN_MANAGER_Initialize *****************
  2995 ;; Defined at:
  2996 ;;		line 55 in file "mcc_generated_files/pin_manager.c"
  2997 ;; Parameters:    Size  Location     Type
  2998 ;;		None
  2999 ;; Auto vars:     Size  Location     Type
  3000 ;;		None
  3001 ;; Return value:  Size  Location     Type
  3002 ;;                  1    wreg      void 
  3003 ;; Registers used:
  3004 ;;		wreg, status,2
  3005 ;; Tracked objects:
  3006 ;;		On entry : 0/0
  3007 ;;		On exit  : 0/0
  3008 ;;		Unchanged: 0/0
  3009 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  3010 ;;      Params:         0       0       0       0       0       0
  3011 ;;      Locals:         0       0       0       0       0       0
  3012 ;;      Temps:          0       0       0       0       0       0
  3013 ;;      Totals:         0       0       0       0       0       0
  3014 ;;Total ram usage:        0 bytes
  3015 ;; Hardware stack levels used: 1
  3016 ;; This function calls:
  3017 ;;		Nothing
  3018 ;; This function is called by:
  3019 ;;		_SYSTEM_Initialize
  3020 ;; This function uses a non-reentrant model
  3021 ;;
  3022                           
  3023                           
  3024                           ;psect for function _PIN_MANAGER_Initialize
  3025  06B6                     _PIN_MANAGER_Initialize:
  3026  06B6                     l1485:	
  3027                           ;incstack = 0
  3028                           ; Regs used in _PIN_MANAGER_Initialize: [wreg+status,2]
  3029                           
  3030                           
  3031                           ;mcc_generated_files/pin_manager.c: 60:     LATA = 0x00;
  3032  06B6  0022               	movlb	2	; select bank2
  3033  06B7  018C               	clrf	12	;volatile
  3034                           
  3035                           ;mcc_generated_files/pin_manager.c: 61:     LATB = 0x00;
  3036  06B8  018D               	clrf	13	;volatile
  3037  06B9                     l1487:
  3038                           
  3039                           ;mcc_generated_files/pin_manager.c: 66:     TRISA = 0xFF;
  3040  06B9  30FF               	movlw	255
  3041  06BA  0021               	movlb	1	; select bank1
  3042  06BB  008C               	movwf	12	;volatile
  3043  06BC                     l1489:
  3044                           
  3045                           ;mcc_generated_files/pin_manager.c: 67:     TRISB = 0xFF;
  3046  06BC  30FF               	movlw	255
  3047  06BD  008D               	movwf	13	;volatile
  3048  06BE                     l1491:
  3049                           
  3050                           ;mcc_generated_files/pin_manager.c: 72:     ANSELB = 0xFE;
  3051  06BE  30FE               	movlw	254
  3052  06BF  0023               	movlb	3	; select bank3
  3053  06C0  008D               	movwf	13	;volatile
  3054  06C1                     l1493:
  3055                           
  3056                           ;mcc_generated_files/pin_manager.c: 73:     ANSELA = 0x1F;
  3057  06C1  301F               	movlw	31
  3058  06C2  008C               	movwf	12	;volatile
  3059                           
  3060                           ;mcc_generated_files/pin_manager.c: 78:     WPUB = 0x00;
  3061  06C3  0024               	movlb	4	; select bank4
  3062  06C4  018D               	clrf	13	;volatile
  3063                           
  3064                           ;mcc_generated_files/pin_manager.c: 79:     WPUA = 0x00;
  3065  06C5  018C               	clrf	12	;volatile
  3066  06C6                     l1495:
  3067                           
  3068                           ;mcc_generated_files/pin_manager.c: 80:     OPTION_REGbits.nWPUEN = 1;
  3069  06C6  0021               	movlb	1	; select bank1
  3070  06C7  1795               	bsf	21,7	;volatile
  3071                           
  3072                           ;mcc_generated_files/pin_manager.c: 86:     APFCON0 = 0x00;
  3073  06C8  0022               	movlb	2	; select bank2
  3074  06C9  019D               	clrf	29	;volatile
  3075                           
  3076                           ;mcc_generated_files/pin_manager.c: 87:     APFCON1 = 0x00;
  3077  06CA  019E               	clrf	30	;volatile
  3078  06CB                     l25:
  3079  06CB  0008               	return
  3080  06CC                     __end_of_PIN_MANAGER_Initialize:
  3081                           
  3082                           	psect	text19
  3083  064F                     __ptext19:	
  3084 ;; *************** function _OSCILLATOR_Initialize *****************
  3085 ;; Defined at:
  3086 ;;		line 58 in file "mcc_generated_files/mcc.c"
  3087 ;; Parameters:    Size  Location     Type
  3088 ;;		None
  3089 ;; Auto vars:     Size  Location     Type
  3090 ;;		None
  3091 ;; Return value:  Size  Location     Type
  3092 ;;                  1    wreg      void 
  3093 ;; Registers used:
  3094 ;;		wreg, status,2
  3095 ;; Tracked objects:
  3096 ;;		On entry : 0/0
  3097 ;;		On exit  : 0/0
  3098 ;;		Unchanged: 0/0
  3099 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  3100 ;;      Params:         0       0       0       0       0       0
  3101 ;;      Locals:         0       0       0       0       0       0
  3102 ;;      Temps:          0       0       0       0       0       0
  3103 ;;      Totals:         0       0       0       0       0       0
  3104 ;;Total ram usage:        0 bytes
  3105 ;; Hardware stack levels used: 1
  3106 ;; This function calls:
  3107 ;;		Nothing
  3108 ;; This function is called by:
  3109 ;;		_SYSTEM_Initialize
  3110 ;; This function uses a non-reentrant model
  3111 ;;
  3112                           
  3113                           
  3114                           ;psect for function _OSCILLATOR_Initialize
  3115  064F                     _OSCILLATOR_Initialize:
  3116  064F                     l1497:	
  3117                           ;incstack = 0
  3118                           ; Regs used in _OSCILLATOR_Initialize: [wreg+status,2]
  3119                           
  3120                           
  3121                           ;mcc_generated_files/mcc.c: 61:     OSCCON = 0x70;
  3122  064F  3070               	movlw	112
  3123  0650  0021               	movlb	1	; select bank1
  3124  0651  0099               	movwf	25	;volatile
  3125  0652                     l1499:
  3126                           
  3127                           ;mcc_generated_files/mcc.c: 63:     OSCTUNE = 0x00;
  3128  0652  0198               	clrf	24	;volatile
  3129  0653                     l1501:
  3130                           
  3131                           ;mcc_generated_files/mcc.c: 65:     BORCON = 0x00;
  3132  0653  0022               	movlb	2	; select bank2
  3133  0654  0196               	clrf	22	;volatile
  3134  0655                     l48:
  3135  0655  0008               	return
  3136  0656                     __end_of_OSCILLATOR_Initialize:
  3137  007E                     btemp	set	126	;btemp
  3138  007E                     wtemp0	set	126
  3139                           
  3140                           	psect	config
  3141                           
  3142                           ;Config register CONFIG1 @ 0x8007
  3143                           ;	Oscillator Selection
  3144                           ;	FOSC = INTOSC, INTOSC oscillator: I/O function on CLKIN pin
  3145                           ;	Watchdog Timer Enable
  3146                           ;	WDTE = OFF, WDT disabled
  3147                           ;	Power-up Timer Enable
  3148                           ;	PWRTE = OFF, PWRT disabled
  3149                           ;	MCLR Pin Function Select
  3150                           ;	MCLRE = ON, MCLR/VPP pin function is MCLR
  3151                           ;	Flash Program Memory Code Protection
  3152                           ;	CP = OFF, Program memory code protection is disabled
  3153                           ;	Data Memory Code Protection
  3154                           ;	CPD = OFF, Data memory code protection is disabled
  3155                           ;	Brown-out Reset Enable
  3156                           ;	BOREN = ON, Brown-out Reset enabled
  3157                           ;	Clock Out Enable
  3158                           ;	CLKOUTEN = OFF, CLKOUT function is disabled. I/O or oscillator function on the CLKOUT 
      +                          pin
  3159                           ;	Internal/External Switchover
  3160                           ;	IESO = ON, Internal/External Switchover mode is enabled
  3161                           ;	Fail-Safe Clock Monitor Enable
  3162                           ;	FCMEN = ON, Fail-Safe Clock Monitor is enabled
  3163  8007                     	org	32775
  3164  8007  3FE4               	dw	16356
  3165                           
  3166                           ;Config register CONFIG2 @ 0x8008
  3167                           ;	Flash Memory Self-Write Protection
  3168                           ;	WRT = OFF, Write protection off
  3169                           ;	PLL Enable
  3170                           ;	PLLEN = OFF, 4x PLL disabled
  3171                           ;	Stack Overflow/Underflow Reset Enable
  3172                           ;	STVREN = ON, Stack Overflow or Underflow will cause a Reset
  3173                           ;	Brown-out Reset Voltage Selection
  3174                           ;	BORV = LO, Brown-out Reset Voltage (Vbor), low trip point selected.
  3175                           ;	Low-Voltage Programming Enable
  3176                           ;	LVP = OFF, High-voltage on MCLR/VPP must be used for programming
  3177  8008                     	org	32776
  3178  8008  1EFF               	dw	7935

Data Sizes:
    Strings     2
    Constant    0
    Data        22
    BSS         17
    Persistent  32
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14     14      14
    BANK0            80     10      49
    BANK1            80      0       0
    BANK2            80      0       0
    BANK3            80      0       0
    BANK4            48      0       0

Pointer List with Targets:

    set_segments@segments	PTR const unsigned char  size(1) Largest target is 4
		 -> clear_segment@data(BANK0[4]), main@data(BANK0[4]), 


Critical Paths under _main in COMMON

    _main->_clear_segment
    _clear_segment->_set_segments
    _set_segments->_write_byte
    _write_byte->_CLK_SET_LOW
    _write_byte->_CLK_SET_OUTPUT
    _write_byte->_DIO_SET_LOW
    _write_byte->_DIO_SET_OUTPUT
    _stop_segment->_CLK_SET_LOW
    _stop_segment->_CLK_SET_OUTPUT
    _stop_segment->_DIO_SET_LOW
    _stop_segment->_DIO_SET_OUTPUT
    _start_segment->_CLK_SET_LOW
    _start_segment->_CLK_SET_OUTPUT
    _start_segment->_DIO_SET_LOW
    _start_segment->_DIO_SET_OUTPUT

Critical Paths under _main in BANK0

    _main->_clear_segment

Critical Paths under _main in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                24    24      0    2067
                                             12 COMMON     2     2      0
                                              4 BANK0      6     6      0
                  _SYSTEM_Initialize
                      _clear_segment
                       _encode_digit
                     _set_brigthness
                       _set_segments
 ---------------------------------------------------------------------------------
 (1) _set_brigthness                                       3     2      1     142
                                              0 COMMON     3     2      1
 ---------------------------------------------------------------------------------
 (1) _encode_digit                                         1     1      0      22
                                              0 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (1) _clear_segment                                        5     5      0     834
                                             11 COMMON     1     1      0
                                              0 BANK0      4     4      0
                       _set_segments
 ---------------------------------------------------------------------------------
 (1) _set_segments                                         5     3      2     810
                                              6 COMMON     5     3      2
                      _start_segment
                       _stop_segment
                         _write_byte
 ---------------------------------------------------------------------------------
 (2) _write_byte                                           5     5      0     143
                                              1 COMMON     5     5      0
                       _CLK_SET_HIGH
                        _CLK_SET_LOW
                     _CLK_SET_OUTPUT
                       _DIO_SET_HIGH
                      _DIO_SET_INPUT
                        _DIO_SET_LOW
                     _DIO_SET_OUTPUT
                  _get_DIO_PIN_value
 ---------------------------------------------------------------------------------
 (3) _get_DIO_PIN_value                                    0     0      0       0
 ---------------------------------------------------------------------------------
 (3) _DIO_SET_INPUT                                        0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _stop_segment                                         0     0      0       0
                       _CLK_SET_HIGH
                        _CLK_SET_LOW
                     _CLK_SET_OUTPUT
                       _DIO_SET_HIGH
                        _DIO_SET_LOW
                     _DIO_SET_OUTPUT
 ---------------------------------------------------------------------------------
 (2) _start_segment                                        0     0      0       0
                       _CLK_SET_HIGH
                        _CLK_SET_LOW
                     _CLK_SET_OUTPUT
                       _DIO_SET_HIGH
                        _DIO_SET_LOW
                     _DIO_SET_OUTPUT
 ---------------------------------------------------------------------------------
 (3) _DIO_SET_OUTPUT                                       1     1      0       0
                                              0 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (3) _DIO_SET_LOW                                          1     1      0       0
                                              0 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (3) _DIO_SET_HIGH                                         0     0      0       0
 ---------------------------------------------------------------------------------
 (3) _CLK_SET_OUTPUT                                       1     1      0       0
                                              0 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (3) _CLK_SET_LOW                                          1     1      0       0
                                              0 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (3) _CLK_SET_HIGH                                         0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _SYSTEM_Initialize                                    0     0      0       0
              _OSCILLATOR_Initialize
             _PIN_MANAGER_Initialize
                     _WDT_Initialize
 ---------------------------------------------------------------------------------
 (2) _WDT_Initialize                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _PIN_MANAGER_Initialize                               0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _OSCILLATOR_Initialize                                0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 3
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _SYSTEM_Initialize
     _OSCILLATOR_Initialize
     _PIN_MANAGER_Initialize
     _WDT_Initialize
   _clear_segment
     _set_segments
       _start_segment
         _CLK_SET_HIGH
         _CLK_SET_LOW
         _CLK_SET_OUTPUT
         _DIO_SET_HIGH
         _DIO_SET_LOW
         _DIO_SET_OUTPUT
       _stop_segment
         _CLK_SET_HIGH
         _CLK_SET_LOW
         _CLK_SET_OUTPUT
         _DIO_SET_HIGH
         _DIO_SET_LOW
         _DIO_SET_OUTPUT
       _write_byte
         _CLK_SET_HIGH
         _CLK_SET_LOW
         _CLK_SET_OUTPUT
         _DIO_SET_HIGH
         _DIO_SET_INPUT
         _DIO_SET_LOW
         _DIO_SET_OUTPUT
         _get_DIO_PIN_value
   _encode_digit
   _set_brigthness
   _set_segments

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             170      0       0       0        0.0%
EEDATA             100      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
BITCOMMON            E      0       0       1        0.0%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
COMMON               E      E       E       2      100.0%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
BITSFR2              0      0       0       3        0.0%
SFR2                 0      0       0       3        0.0%
STACK                0      0       0       3        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
ABS                  0      0      3F       4        0.0%
BITBANK0            50      0       0       5        0.0%
BITSFR4              0      0       0       5        0.0%
SFR4                 0      0       0       5        0.0%
BANK0               50      A      31       6       61.3%
BITSFR5              0      0       0       6        0.0%
SFR5                 0      0       0       6        0.0%
BITBANK1            50      0       0       7        0.0%
BITSFR6              0      0       0       7        0.0%
SFR6                 0      0       0       7        0.0%
BANK1               50      0       0       8        0.0%
BITSFR7              0      0       0       8        0.0%
SFR7                 0      0       0       8        0.0%
BITBANK2            50      0       0       9        0.0%
BITSFR8              0      0       0       9        0.0%
SFR8                 0      0       0       9        0.0%
BANK2               50      0       0      10        0.0%
BITSFR9              0      0       0      10        0.0%
SFR9                 0      0       0      10        0.0%
BITBANK3            50      0       0      11        0.0%
BITSFR10             0      0       0      11        0.0%
SFR10                0      0       0      11        0.0%
BANK3               50      0       0      12        0.0%
BITSFR11             0      0       0      12        0.0%
SFR11                0      0       0      12        0.0%
BITBANK4            30      0       0      13        0.0%
BITSFR12             0      0       0      13        0.0%
SFR12                0      0       0      13        0.0%
BANK4               30      0       0      14        0.0%
BITSFR13             0      0       0      14        0.0%
SFR13                0      0       0      14        0.0%
BITSFR14             0      0       0      15        0.0%
SFR14                0      0       0      15        0.0%
DATA                 0      0      3F      15        0.0%
BITSFR15             0      0       0      16        0.0%
SFR15                0      0       0      16        0.0%
BITSFR16             0      0       0      17        0.0%
SFR16                0      0       0      17        0.0%
BITSFR17             0      0       0      18        0.0%
SFR17                0      0       0      18        0.0%
BITSFR18             0      0       0      19        0.0%
SFR18                0      0       0      19        0.0%
BITSFR19             0      0       0      20        0.0%
SFR19                0      0       0      20        0.0%
BITSFR20             0      0       0      21        0.0%
SFR20                0      0       0      21        0.0%
BITSFR21             0      0       0      22        0.0%
SFR21                0      0       0      22        0.0%
BITSFR22             0      0       0      23        0.0%
SFR22                0      0       0      23        0.0%
BITSFR23             0      0       0      24        0.0%
SFR23                0      0       0      24        0.0%
BITSFR24             0      0       0      25        0.0%
SFR24                0      0       0      25        0.0%
BITSFR25             0      0       0      26        0.0%
SFR25                0      0       0      26        0.0%
BITSFR26             0      0       0      27        0.0%
SFR26                0      0       0      27        0.0%
BITSFR27             0      0       0      28        0.0%
SFR27                0      0       0      28        0.0%
BITSFR28             0      0       0      29        0.0%
SFR28                0      0       0      29        0.0%
BITSFR29             0      0       0      30        0.0%
SFR29                0      0       0      30        0.0%
BITSFR30             0      0       0      31        0.0%
SFR30                0      0       0      31        0.0%
BITSFR31             0      0       0      32        0.0%
SFR31                0      0       0      32        0.0%


Microchip Technology PIC Macro Assembler V2.32 build 20210201212658 
Symbol Table                                                                                   Sun Nov 28 18:44:20 2021

         __size_of_start_segment 0013                      _SSPSTATbits 0214                               l25 06CB  
                             l51 0625                               l45 0667                               l48 0655  
                            l203 071C                              l211 065D                              l152 061B  
                            l208 06A0                              l161 0621                              l170 067A  
                            l155 0630                              l164 061E                              l149 0636  
                            l173 068D                              l158 0642                              l167 063C  
                            l191 0762                              l192 0765                              l177 062A  
                            l197 06B5                              u500 07C8                              u501 07C7  
                            u440 070C                              u441 070B                              u370 072D  
                            u450 06A7                              u371 072C                              u451 06A6  
                            u380 0745                              u381 0744                              u390 075C  
                            u391 075B                              u547 07D6                              wreg 0009  
                 ??_encode_digit 0070                             l1403 0626                             l1501 0653  
                           l1503 0622                             l1433 0668                             l1441 0687  
                           l1521 0702                             l1601 0770                             l1435 066E  
                           l1443 068A                             l1523 0706                             l1515 06E3  
                           l1531 0697                             l1611 0794                             l1603 0779  
                           l1381 0619                             l1437 0671                             l1461 0731  
                           l1445 071E                             l1525 070C                             l1517 06F6  
                           l1533 0657                             l1541 06AF                             l1621 07AF  
                           l1613 079C                             l1605 077C                             l1527 065E  
                           l1383 062B                             l1391 0637                             l1439 067B  
                           l1471 0748                             l1463 0734                             l1455 0726  
                           l1447 0722                             l1519 06F8                             l1631 07C2  
                           l1615 07A2                             l1607 0784                             l1385 063D  
                           l1393 0626                             l1481 075C                             l1473 074B  
                           l1465 0737                             l1457 0729                             l1449 0725  
                           l1529 068E                             l1537 06A2                             l1633 07C8  
                           l1617 07AB                             l1609 078C                             l1491 06BE  
                           l1379 0631                             l1387 061F                             l1475 074E  
                           l1467 073B                             l1459 072D                             l1539 06A7  
                           l1635 07D1                             l1627 07B1                             l1619 07AD  
                           l1493 06C1                             l1485 06B6                             l1389 061C  
                           l1477 0751                             l1469 0745                             l1637 07DC  
                           l1629 07BE                             l1495 06C6                             l1487 06B9  
                           l1479 0757                             l1639 07E1                             l1591 0769  
                           l1497 064F                             l1489 06BC                             l1593 0769  
                           l1499 0652                             l1595 076B                             l1587 0766  
                           l1597 076D                             l1589 0769                             l1599 076F  
                           STR_1 0800                             _LATA 010C                             _LATB 010D  
                           _WPUA 020C                             _WPUB 020D                             _main 0766  
                  write_byte@ack 0073                             fsr0h 0005                             fsr1h 0007  
                           indf0 0000                             fsr0l 0004                             indf1 0001  
                           fsr1l 0006                             btemp 007E                             start 0002  
 __size_of_OSCILLATOR_Initialize 0007    __end_of_OSCILLATOR_Initialize 0656            __size_of_stop_segment 0013  
                          ?_main 0070                            _TRISA 008C                            _TRISB 008D  
                 _WDT_Initialize 0622                    _start_segment 0668                   write_byte@data 0074  
                          main@i 0050                            main@k 004B                            status 0003  
                          wtemp0 007E             __end_of_CLK_SET_HIGH 061C                  __initialization 07E9  
                   _stop_segment 067B                     __end_of_main 07E9             __end_of_DIO_SET_HIGH 061F  
                         ??_main 007C             __size_of_CLK_SET_LOW 0006           __end_of_WDT_Initialize 0626  
           __size_of_DIO_SET_LOW 0006                  set_segments@pos 0077                   ?_start_segment 0070  
                         _ANSELA 018C                           _ANSELB 018D                           _BORCON 0116  
                         _OSCCON 0099                           _WDTCON 0097                           _SSPBUF 0211  
          __end_of_clear_segment 06A1             __end_of_encode_digit 065E                  ?_WDT_Initialize 0070  
        __size_of_set_brigthness 0015                _SYSTEM_Initialize 065E          __end_of__initialization 07FD  
             ?_SYSTEM_Initialize 0070          __size_of_CLK_SET_OUTPUT 0006         set_brigthness@brightness 0072  
                 __pcstackCOMMON 0070                     __pidataBANK0 06CC              ??_SYSTEM_Initialize 0070  
          __end_of_DIO_SET_INPUT 0622                   _OPTION_REGbits 0095                  ??_start_segment 0071  
      __end_of_SYSTEM_Initialize 0668                       __pbssBANK0 0036            __size_of_CLK_SET_HIGH 0003  
              _get_DIO_PIN_value 0626          __size_of_DIO_SET_OUTPUT 0006               ?_get_DIO_PIN_value 0070  
          __size_of_DIO_SET_HIGH 0003                       __pmaintext 0766              ??_get_DIO_PIN_value 0070  
                        _APFCON0 011D                          _APFCON1 011E               set_segments@length 0076  
                   _CLK_SET_HIGH 0619                          _OSCTUNE 0098                          _SSPCON2 0216  
                        _SSPSTAT 0214        __end_of_get_DIO_PIN_value 062B                     _DIO_SET_HIGH 061C  
          __size_of_encode_digit 0008                    ?_set_segments 0076                          __ptext1 06A1  
                        __ptext2 0656                          __ptext3 068E                          __ptext4 06E2  
                        __ptext5 071D                          __ptext6 0626                          __ptext7 061F  
                        __ptext8 067B                          __ptext9 0668            _OSCILLATOR_Initialize 064F  
                        _segdata 0020         ??_PIN_MANAGER_Initialize 0070                   _set_brigthness 06A1  
     __size_of_SYSTEM_Initialize 000A                          clrloop0 0644             end_of_initialization 07FD  
                   _encode_digit 0656               clear_segment@F2530 0042                          init_ram 0649  
                        initloop 064A                   _CLK_SET_OUTPUT 0631             set_segments@segments 0079  
                 ??_set_segments 0078                    ??_CLK_SET_LOW 0070                 ??_WDT_Initialize 0070  
                      _PORTAbits 000C                    ??_DIO_SET_LOW 0070                     _m_brightness 0046  
         __end_of_set_brigthness 06B6       __size_of_get_DIO_PIN_value 0005           __end_of_CLK_SET_OUTPUT 0637  
                 _DIO_SET_OUTPUT 063D                       _write_byte 071D           ?_OSCILLATOR_Initialize 0070  
            start_initialization 07E9                  ?_set_brigthness 0070              __end_of_CLK_SET_LOW 0631  
__size_of_PIN_MANAGER_Initialize 0016           __size_of_clear_segment 0013              __end_of_DIO_SET_LOW 063D  
                ?_CLK_SET_OUTPUT 0070           __end_of_DIO_SET_OUTPUT 0643                      __pdataBANK0 0020  
            lcd_set_cursor@F2546 002A                        ___latbits 0001                    __pcstackBANK0 0047  
          __end_of_start_segment 067B             __end_of_set_segments 071D                  ?_DIO_SET_OUTPUT 0070  
         __size_of_DIO_SET_INPUT 0003                 set_brigthness@on 0070           _PIN_MANAGER_Initialize 06B6  
                  ?_stop_segment 0070                    _clear_segment 068E                      _CLK_SET_LOW 062B  
                    ?_write_byte 0070                      _DIO_SET_LOW 0637                        clear_ram0 0643  
                 ??_stop_segment 0071                   ?_clear_segment 0070                clear_segment@data 0047  
                      main@F2565 0036                        main@F2567 0032                        main@F2569 002E  
              encode_digit@digit 0070                    _DIO_SET_INPUT 061F                      write_byte@b 0072  
                    write_byte@i 0075              __size_of_write_byte 0049                    set_segments@k 007A  
        ??_OSCILLATOR_Initialize 0070                 ??_set_brigthness 0071                   ?_DIO_SET_INPUT 0070  
          __size_of_set_segments 003B                 ??_CLK_SET_OUTPUT 0070                         __ptext10 063D  
                       __ptext11 0637                         __ptext12 061C                         __ptext13 0631  
                       __ptext14 062B                         __ptext15 0619                         __ptext16 065E  
                       __ptext17 0622                         __ptext18 06B6                         __ptext19 064F  
                  __size_of_main 0083                  ??_clear_segment 007B                         main@data 004C  
                   _set_segments 06E2                    ?_CLK_SET_HIGH 0070             __end_of_stop_segment 068E  
               ??_DIO_SET_OUTPUT 0070          __size_of_WDT_Initialize 0004                    ?_DIO_SET_HIGH 0070  
        ?_PIN_MANAGER_Initialize 0070                     ?_CLK_SET_LOW 0070                     ??_write_byte 0071  
                ??_DIO_SET_INPUT 0070                    __pstringtext1 0800                    __pstringtext2 0000  
                   ?_DIO_SET_LOW 0070                   ??_CLK_SET_HIGH 0070                      _SSPCON1bits 0215  
                    _SSPCON2bits 0216                   ??_DIO_SET_HIGH 0070                    ?_encode_digit 0070  
 __end_of_PIN_MANAGER_Initialize 06CC               __end_of_write_byte 0766  

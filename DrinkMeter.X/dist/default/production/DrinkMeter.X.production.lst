

Microchip MPLAB XC8 Assembler V2.32 build 20210201212658 
                                                                                               Sun Dec 19 15:46:01 2021

Microchip MPLAB XC8 C Compiler v2.32 (Free license) build 20210201212658 Og1 
     1                           	processor	16F1938
     2                           	pagewidth 120
     3                           	opt	flic
     4                           	psect	idataBANK2,global,class=CODE,delta=2,noexec
     5                           	psect	stringtext1,global,class=STRCODE,delta=2,noexec
     6                           	psect	stringtext2,global,class=STRCODE,delta=2,noexec
     7                           	psect	stringtext3,global,class=STRCODE,delta=2,noexec
     8                           	psect	stringtext4,global,class=STRCODE,delta=2,noexec
     9                           	psect	stringtext5,global,class=STRCODE,delta=2,noexec
    10                           	psect	stringtext6,global,class=STRCODE,delta=2,noexec
    11                           	psect	stringtext7,global,class=STRCODE,delta=2,noexec
    12                           	psect	stringtext8,global,class=STRCODE,delta=2,noexec
    13                           	psect	stringtext9,global,class=STRCODE,delta=2,noexec
    14                           	psect	stringtext10,global,class=STRCODE,delta=2,noexec
    15                           	psect	cinit,global,class=CODE,merge=1,delta=2
    16                           	psect	bssBANK2,global,class=BANK2,space=1,delta=1,noexec
    17                           	psect	dataBANK2,global,class=BANK2,space=1,delta=1,noexec
    18                           	psect	bssBANK3,global,class=BANK3,space=1,delta=1,noexec
    19                           	psect	inittext,global,class=CODE,delta=2
    20                           	psect	clrtext,global,class=CODE,delta=2
    21                           	psect	cstackBANK1,global,class=BANK1,space=1,delta=1,noexec
    22                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1,noexec
    23                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,noexec
    24                           	psect	maintext,global,class=CODE,merge=1,split=1,delta=2
    25                           	psect	text1,local,class=CODE,merge=1,delta=2
    26                           	psect	text2,local,class=CODE,merge=1,delta=2
    27                           	psect	text3,local,class=CODE,merge=1,delta=2,group=3
    28                           	psect	text4,local,class=CODE,merge=1,delta=2,group=1
    29                           	psect	text5,local,class=CODE,merge=1,delta=2,group=1
    30                           	psect	text6,local,class=CODE,merge=1,delta=2,group=1
    31                           	psect	text7,local,class=CODE,merge=1,delta=2,group=2
    32                           	psect	text8,local,class=CODE,merge=1,delta=2,group=2
    33                           	psect	text9,local,class=CODE,merge=1,delta=2,group=3
    34                           	psect	text10,local,class=CODE,merge=1,delta=2,group=1
    35                           	psect	text11,local,class=CODE,merge=1,delta=2,group=1
    36                           	psect	text12,local,class=CODE,merge=1,delta=2,group=3
    37                           	psect	text13,local,class=CODE,merge=1,delta=2,group=3
    38                           	psect	text14,local,class=CODE,merge=1,delta=2,group=3
    39                           	psect	text15,local,class=CODE,merge=1,delta=2,group=3
    40                           	psect	text16,local,class=CODE,merge=1,delta=2,group=3
    41                           	psect	text17,local,class=CODE,merge=1,delta=2,group=2
    42                           	psect	text18,local,class=CODE,merge=1,delta=2,group=2
    43                           	psect	text19,local,class=CODE,merge=1,delta=2
    44                           	psect	text20,local,class=CODE,merge=1,delta=2
    45                           	psect	text21,local,class=CODE,merge=1,delta=2
    46                           	psect	text22,local,class=CODE,merge=1,delta=2
    47                           	psect	text23,local,class=CODE,merge=1,delta=2
    48                           	psect	text24,local,class=CODE,merge=1,delta=2
    49                           	psect	text25,local,class=CODE,merge=1,delta=2
    50                           	psect	text26,local,class=CODE,merge=1,delta=2
    51                           	psect	text27,local,class=CODE,merge=1,delta=2
    52                           	psect	text28,local,class=CODE,merge=1,delta=2
    53                           	psect	text29,local,class=CODE,merge=1,delta=2
    54                           	psect	text30,local,class=CODE,merge=1,delta=2
    55                           	psect	text31,local,class=CODE,merge=1,delta=2
    56                           	psect	text32,local,class=CODE,merge=1,delta=2
    57                           	psect	text33,local,class=CODE,merge=1,delta=2
    58                           	psect	text34,local,class=CODE,merge=1,delta=2
    59                           	psect	text35,local,class=CODE,merge=1,delta=2
    60                           	psect	text36,local,class=CODE,merge=1,delta=2
    61                           	psect	text37,local,class=CODE,merge=1,delta=2
    62                           	psect	text38,local,class=CODE,merge=1,delta=2
    63                           	psect	text39,local,class=CODE,merge=1,delta=2
    64                           	psect	text40,local,class=CODE,merge=1,delta=2
    65                           	psect	text41,local,class=CODE,merge=1,delta=2
    66                           	psect	text42,local,class=CODE,merge=1,delta=2
    67                           	psect	text43,local,class=CODE,merge=1,delta=2
    68                           	psect	text44,local,class=CODE,merge=1,delta=2
    69                           	psect	text45,local,class=CODE,merge=1,delta=2
    70                           	psect	text46,local,class=CODE,merge=1,delta=2
    71                           	psect	text47,local,class=CODE,merge=1,delta=2
    72                           	psect	text48,local,class=CODE,merge=1,delta=2,group=2
    73                           	psect	text49,local,class=CODE,merge=1,delta=2,group=2
    74                           	psect	text50,local,class=CODE,merge=1,delta=2
    75                           	psect	text51,local,class=CODE,merge=1,delta=2
    76                           	psect	text52,local,class=CODE,merge=1,delta=2,group=2
    77                           	psect	text53,local,class=CODE,merge=1,delta=2,group=2
    78                           	psect	text54,local,class=CODE,merge=1,delta=2,group=2
    79                           	psect	text55,local,class=CODE,merge=1,delta=2
    80                           	psect	text56,local,class=CODE,merge=1,delta=2
    81                           	psect	text57,local,class=CODE,merge=1,delta=2
    82                           	psect	text58,local,class=CODE,merge=1,delta=2
    83                           	psect	text59,local,class=CODE,merge=1,delta=2,group=2
    84                           	psect	text60,local,class=CODE,merge=1,delta=2,group=2
    85                           	psect	text61,local,class=CODE,merge=1,delta=2,group=2
    86                           	psect	text62,local,class=CODE,merge=1,delta=2
    87                           	psect	text63,local,class=CODE,merge=1,delta=2
    88                           	psect	text64,local,class=CODE,merge=1,delta=2
    89                           	psect	text65,local,class=CODE,merge=1,delta=2
    90                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=2,noexec
    91                           	dabs	1,0x7E,2
    92  0000                     
    93                           ; Version 2.32
    94                           ; Generated 02/02/2021 GMT
    95                           ; 
    96                           ; Copyright Â© 2021, Microchip Technology Inc. and its subsidiaries ("Microchip")
    97                           ; All rights reserved.
    98                           ; 
    99                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
   100                           ; 
   101                           ; Redistribution and use in source and binary forms, with or without modification, are
   102                           ; permitted provided that the following conditions are met:
   103                           ; 
   104                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
   105                           ;        conditions and the following disclaimer.
   106                           ; 
   107                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
   108                           ;        of conditions and the following disclaimer in the documentation and/or other
   109                           ;        materials provided with the distribution. Publication is not required when
   110                           ;        this file is used in an embedded application.
   111                           ; 
   112                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
   113                           ;        software without specific prior written permission.
   114                           ; 
   115                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
   116                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
   117                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
   118                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
   119                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
   120                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
   121                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
   122                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
   123                           ; 
   124                           ; 
   125                           ; Code-generator required, PIC16F1938 Definitions
   126                           ; 
   127                           ; SFR Addresses
   128  0000                     	;# 
   129  0001                     	;# 
   130  0002                     	;# 
   131  0003                     	;# 
   132  0004                     	;# 
   133  0005                     	;# 
   134  0006                     	;# 
   135  0007                     	;# 
   136  0008                     	;# 
   137  0009                     	;# 
   138  000A                     	;# 
   139  000B                     	;# 
   140  000C                     	;# 
   141  000D                     	;# 
   142  000E                     	;# 
   143  0010                     	;# 
   144  0011                     	;# 
   145  0012                     	;# 
   146  0013                     	;# 
   147  0015                     	;# 
   148  0016                     	;# 
   149  0016                     	;# 
   150  0017                     	;# 
   151  0018                     	;# 
   152  0019                     	;# 
   153  001A                     	;# 
   154  001B                     	;# 
   155  001C                     	;# 
   156  001E                     	;# 
   157  001F                     	;# 
   158  008C                     	;# 
   159  008D                     	;# 
   160  008E                     	;# 
   161  0090                     	;# 
   162  0091                     	;# 
   163  0092                     	;# 
   164  0093                     	;# 
   165  0095                     	;# 
   166  0096                     	;# 
   167  0097                     	;# 
   168  0098                     	;# 
   169  0099                     	;# 
   170  009A                     	;# 
   171  009B                     	;# 
   172  009B                     	;# 
   173  009C                     	;# 
   174  009D                     	;# 
   175  009E                     	;# 
   176  010C                     	;# 
   177  010D                     	;# 
   178  010E                     	;# 
   179  0110                     	;# 
   180  0111                     	;# 
   181  0112                     	;# 
   182  0113                     	;# 
   183  0114                     	;# 
   184  0115                     	;# 
   185  0116                     	;# 
   186  0117                     	;# 
   187  0118                     	;# 
   188  0119                     	;# 
   189  011A                     	;# 
   190  011B                     	;# 
   191  011D                     	;# 
   192  018C                     	;# 
   193  018D                     	;# 
   194  0191                     	;# 
   195  0191                     	;# 
   196  0192                     	;# 
   197  0193                     	;# 
   198  0193                     	;# 
   199  0193                     	;# 
   200  0194                     	;# 
   201  0195                     	;# 
   202  0196                     	;# 
   203  0199                     	;# 
   204  019A                     	;# 
   205  019B                     	;# 
   206  019B                     	;# 
   207  019B                     	;# 
   208  019B                     	;# 
   209  019C                     	;# 
   210  019C                     	;# 
   211  019D                     	;# 
   212  019E                     	;# 
   213  019F                     	;# 
   214  020D                     	;# 
   215  0210                     	;# 
   216  0211                     	;# 
   217  0212                     	;# 
   218  0213                     	;# 
   219  0214                     	;# 
   220  0215                     	;# 
   221  0215                     	;# 
   222  0216                     	;# 
   223  0217                     	;# 
   224  0291                     	;# 
   225  0291                     	;# 
   226  0292                     	;# 
   227  0293                     	;# 
   228  0294                     	;# 
   229  0295                     	;# 
   230  0295                     	;# 
   231  0296                     	;# 
   232  0298                     	;# 
   233  0298                     	;# 
   234  0299                     	;# 
   235  029A                     	;# 
   236  029B                     	;# 
   237  029C                     	;# 
   238  029C                     	;# 
   239  029D                     	;# 
   240  029E                     	;# 
   241  029F                     	;# 
   242  0311                     	;# 
   243  0311                     	;# 
   244  0312                     	;# 
   245  0313                     	;# 
   246  0314                     	;# 
   247  0315                     	;# 
   248  0315                     	;# 
   249  0316                     	;# 
   250  0318                     	;# 
   251  0318                     	;# 
   252  0319                     	;# 
   253  031A                     	;# 
   254  031C                     	;# 
   255  031C                     	;# 
   256  031D                     	;# 
   257  031E                     	;# 
   258  0394                     	;# 
   259  0395                     	;# 
   260  0396                     	;# 
   261  0415                     	;# 
   262  0416                     	;# 
   263  0417                     	;# 
   264  041C                     	;# 
   265  041D                     	;# 
   266  041E                     	;# 
   267  0791                     	;# 
   268  0792                     	;# 
   269  0793                     	;# 
   270  0794                     	;# 
   271  0795                     	;# 
   272  0798                     	;# 
   273  0799                     	;# 
   274  07A0                     	;# 
   275  07A1                     	;# 
   276  07A3                     	;# 
   277  07A4                     	;# 
   278  07A6                     	;# 
   279  07A7                     	;# 
   280  07A9                     	;# 
   281  07AA                     	;# 
   282  0FE4                     	;# 
   283  0FE5                     	;# 
   284  0FE6                     	;# 
   285  0FE7                     	;# 
   286  0FE8                     	;# 
   287  0FE9                     	;# 
   288  0FEA                     	;# 
   289  0FEB                     	;# 
   290  0FED                     	;# 
   291  0FEE                     	;# 
   292  0FEF                     	;# 
   293  0000                     	;# 
   294  0001                     	;# 
   295  0002                     	;# 
   296  0003                     	;# 
   297  0004                     	;# 
   298  0005                     	;# 
   299  0006                     	;# 
   300  0007                     	;# 
   301  0008                     	;# 
   302  0009                     	;# 
   303  000A                     	;# 
   304  000B                     	;# 
   305  000C                     	;# 
   306  000D                     	;# 
   307  000E                     	;# 
   308  0010                     	;# 
   309  0011                     	;# 
   310  0012                     	;# 
   311  0013                     	;# 
   312  0015                     	;# 
   313  0016                     	;# 
   314  0016                     	;# 
   315  0017                     	;# 
   316  0018                     	;# 
   317  0019                     	;# 
   318  001A                     	;# 
   319  001B                     	;# 
   320  001C                     	;# 
   321  001E                     	;# 
   322  001F                     	;# 
   323  008C                     	;# 
   324  008D                     	;# 
   325  008E                     	;# 
   326  0090                     	;# 
   327  0091                     	;# 
   328  0092                     	;# 
   329  0093                     	;# 
   330  0095                     	;# 
   331  0096                     	;# 
   332  0097                     	;# 
   333  0098                     	;# 
   334  0099                     	;# 
   335  009A                     	;# 
   336  009B                     	;# 
   337  009B                     	;# 
   338  009C                     	;# 
   339  009D                     	;# 
   340  009E                     	;# 
   341  010C                     	;# 
   342  010D                     	;# 
   343  010E                     	;# 
   344  0110                     	;# 
   345  0111                     	;# 
   346  0112                     	;# 
   347  0113                     	;# 
   348  0114                     	;# 
   349  0115                     	;# 
   350  0116                     	;# 
   351  0117                     	;# 
   352  0118                     	;# 
   353  0119                     	;# 
   354  011A                     	;# 
   355  011B                     	;# 
   356  011D                     	;# 
   357  018C                     	;# 
   358  018D                     	;# 
   359  0191                     	;# 
   360  0191                     	;# 
   361  0192                     	;# 
   362  0193                     	;# 
   363  0193                     	;# 
   364  0193                     	;# 
   365  0194                     	;# 
   366  0195                     	;# 
   367  0196                     	;# 
   368  0199                     	;# 
   369  019A                     	;# 
   370  019B                     	;# 
   371  019B                     	;# 
   372  019B                     	;# 
   373  019B                     	;# 
   374  019C                     	;# 
   375  019C                     	;# 
   376  019D                     	;# 
   377  019E                     	;# 
   378  019F                     	;# 
   379  020D                     	;# 
   380  0210                     	;# 
   381  0211                     	;# 
   382  0212                     	;# 
   383  0213                     	;# 
   384  0214                     	;# 
   385  0215                     	;# 
   386  0215                     	;# 
   387  0216                     	;# 
   388  0217                     	;# 
   389  0291                     	;# 
   390  0291                     	;# 
   391  0292                     	;# 
   392  0293                     	;# 
   393  0294                     	;# 
   394  0295                     	;# 
   395  0295                     	;# 
   396  0296                     	;# 
   397  0298                     	;# 
   398  0298                     	;# 
   399  0299                     	;# 
   400  029A                     	;# 
   401  029B                     	;# 
   402  029C                     	;# 
   403  029C                     	;# 
   404  029D                     	;# 
   405  029E                     	;# 
   406  029F                     	;# 
   407  0311                     	;# 
   408  0311                     	;# 
   409  0312                     	;# 
   410  0313                     	;# 
   411  0314                     	;# 
   412  0315                     	;# 
   413  0315                     	;# 
   414  0316                     	;# 
   415  0318                     	;# 
   416  0318                     	;# 
   417  0319                     	;# 
   418  031A                     	;# 
   419  031C                     	;# 
   420  031C                     	;# 
   421  031D                     	;# 
   422  031E                     	;# 
   423  0394                     	;# 
   424  0395                     	;# 
   425  0396                     	;# 
   426  0415                     	;# 
   427  0416                     	;# 
   428  0417                     	;# 
   429  041C                     	;# 
   430  041D                     	;# 
   431  041E                     	;# 
   432  0791                     	;# 
   433  0792                     	;# 
   434  0793                     	;# 
   435  0794                     	;# 
   436  0795                     	;# 
   437  0798                     	;# 
   438  0799                     	;# 
   439  07A0                     	;# 
   440  07A1                     	;# 
   441  07A3                     	;# 
   442  07A4                     	;# 
   443  07A6                     	;# 
   444  07A7                     	;# 
   445  07A9                     	;# 
   446  07AA                     	;# 
   447  0FE4                     	;# 
   448  0FE5                     	;# 
   449  0FE6                     	;# 
   450  0FE7                     	;# 
   451  0FE8                     	;# 
   452  0FE9                     	;# 
   453  0FEA                     	;# 
   454  0FEB                     	;# 
   455  0FED                     	;# 
   456  0FEE                     	;# 
   457  0FEF                     	;# 
   458  0000                     	;# 
   459  0001                     	;# 
   460  0002                     	;# 
   461  0003                     	;# 
   462  0004                     	;# 
   463  0005                     	;# 
   464  0006                     	;# 
   465  0007                     	;# 
   466  0008                     	;# 
   467  0009                     	;# 
   468  000A                     	;# 
   469  000B                     	;# 
   470  000C                     	;# 
   471  000D                     	;# 
   472  000E                     	;# 
   473  0010                     	;# 
   474  0011                     	;# 
   475  0012                     	;# 
   476  0013                     	;# 
   477  0015                     	;# 
   478  0016                     	;# 
   479  0016                     	;# 
   480  0017                     	;# 
   481  0018                     	;# 
   482  0019                     	;# 
   483  001A                     	;# 
   484  001B                     	;# 
   485  001C                     	;# 
   486  001E                     	;# 
   487  001F                     	;# 
   488  008C                     	;# 
   489  008D                     	;# 
   490  008E                     	;# 
   491  0090                     	;# 
   492  0091                     	;# 
   493  0092                     	;# 
   494  0093                     	;# 
   495  0095                     	;# 
   496  0096                     	;# 
   497  0097                     	;# 
   498  0098                     	;# 
   499  0099                     	;# 
   500  009A                     	;# 
   501  009B                     	;# 
   502  009B                     	;# 
   503  009C                     	;# 
   504  009D                     	;# 
   505  009E                     	;# 
   506  010C                     	;# 
   507  010D                     	;# 
   508  010E                     	;# 
   509  0110                     	;# 
   510  0111                     	;# 
   511  0112                     	;# 
   512  0113                     	;# 
   513  0114                     	;# 
   514  0115                     	;# 
   515  0116                     	;# 
   516  0117                     	;# 
   517  0118                     	;# 
   518  0119                     	;# 
   519  011A                     	;# 
   520  011B                     	;# 
   521  011D                     	;# 
   522  018C                     	;# 
   523  018D                     	;# 
   524  0191                     	;# 
   525  0191                     	;# 
   526  0192                     	;# 
   527  0193                     	;# 
   528  0193                     	;# 
   529  0193                     	;# 
   530  0194                     	;# 
   531  0195                     	;# 
   532  0196                     	;# 
   533  0199                     	;# 
   534  019A                     	;# 
   535  019B                     	;# 
   536  019B                     	;# 
   537  019B                     	;# 
   538  019B                     	;# 
   539  019C                     	;# 
   540  019C                     	;# 
   541  019D                     	;# 
   542  019E                     	;# 
   543  019F                     	;# 
   544  020D                     	;# 
   545  0210                     	;# 
   546  0211                     	;# 
   547  0212                     	;# 
   548  0213                     	;# 
   549  0214                     	;# 
   550  0215                     	;# 
   551  0215                     	;# 
   552  0216                     	;# 
   553  0217                     	;# 
   554  0291                     	;# 
   555  0291                     	;# 
   556  0292                     	;# 
   557  0293                     	;# 
   558  0294                     	;# 
   559  0295                     	;# 
   560  0295                     	;# 
   561  0296                     	;# 
   562  0298                     	;# 
   563  0298                     	;# 
   564  0299                     	;# 
   565  029A                     	;# 
   566  029B                     	;# 
   567  029C                     	;# 
   568  029C                     	;# 
   569  029D                     	;# 
   570  029E                     	;# 
   571  029F                     	;# 
   572  0311                     	;# 
   573  0311                     	;# 
   574  0312                     	;# 
   575  0313                     	;# 
   576  0314                     	;# 
   577  0315                     	;# 
   578  0315                     	;# 
   579  0316                     	;# 
   580  0318                     	;# 
   581  0318                     	;# 
   582  0319                     	;# 
   583  031A                     	;# 
   584  031C                     	;# 
   585  031C                     	;# 
   586  031D                     	;# 
   587  031E                     	;# 
   588  0394                     	;# 
   589  0395                     	;# 
   590  0396                     	;# 
   591  0415                     	;# 
   592  0416                     	;# 
   593  0417                     	;# 
   594  041C                     	;# 
   595  041D                     	;# 
   596  041E                     	;# 
   597  0791                     	;# 
   598  0792                     	;# 
   599  0793                     	;# 
   600  0794                     	;# 
   601  0795                     	;# 
   602  0798                     	;# 
   603  0799                     	;# 
   604  07A0                     	;# 
   605  07A1                     	;# 
   606  07A3                     	;# 
   607  07A4                     	;# 
   608  07A6                     	;# 
   609  07A7                     	;# 
   610  07A9                     	;# 
   611  07AA                     	;# 
   612  0FE4                     	;# 
   613  0FE5                     	;# 
   614  0FE6                     	;# 
   615  0FE7                     	;# 
   616  0FE8                     	;# 
   617  0FE9                     	;# 
   618  0FEA                     	;# 
   619  0FEB                     	;# 
   620  0FED                     	;# 
   621  0FEE                     	;# 
   622  0FEF                     	;# 
   623  0000                     	;# 
   624  0001                     	;# 
   625  0002                     	;# 
   626  0003                     	;# 
   627  0004                     	;# 
   628  0005                     	;# 
   629  0006                     	;# 
   630  0007                     	;# 
   631  0008                     	;# 
   632  0009                     	;# 
   633  000A                     	;# 
   634  000B                     	;# 
   635  000C                     	;# 
   636  000D                     	;# 
   637  000E                     	;# 
   638  0010                     	;# 
   639  0011                     	;# 
   640  0012                     	;# 
   641  0013                     	;# 
   642  0015                     	;# 
   643  0016                     	;# 
   644  0016                     	;# 
   645  0017                     	;# 
   646  0018                     	;# 
   647  0019                     	;# 
   648  001A                     	;# 
   649  001B                     	;# 
   650  001C                     	;# 
   651  001E                     	;# 
   652  001F                     	;# 
   653  008C                     	;# 
   654  008D                     	;# 
   655  008E                     	;# 
   656  0090                     	;# 
   657  0091                     	;# 
   658  0092                     	;# 
   659  0093                     	;# 
   660  0095                     	;# 
   661  0096                     	;# 
   662  0097                     	;# 
   663  0098                     	;# 
   664  0099                     	;# 
   665  009A                     	;# 
   666  009B                     	;# 
   667  009B                     	;# 
   668  009C                     	;# 
   669  009D                     	;# 
   670  009E                     	;# 
   671  010C                     	;# 
   672  010D                     	;# 
   673  010E                     	;# 
   674  0110                     	;# 
   675  0111                     	;# 
   676  0112                     	;# 
   677  0113                     	;# 
   678  0114                     	;# 
   679  0115                     	;# 
   680  0116                     	;# 
   681  0117                     	;# 
   682  0118                     	;# 
   683  0119                     	;# 
   684  011A                     	;# 
   685  011B                     	;# 
   686  011D                     	;# 
   687  018C                     	;# 
   688  018D                     	;# 
   689  0191                     	;# 
   690  0191                     	;# 
   691  0192                     	;# 
   692  0193                     	;# 
   693  0193                     	;# 
   694  0193                     	;# 
   695  0194                     	;# 
   696  0195                     	;# 
   697  0196                     	;# 
   698  0199                     	;# 
   699  019A                     	;# 
   700  019B                     	;# 
   701  019B                     	;# 
   702  019B                     	;# 
   703  019B                     	;# 
   704  019C                     	;# 
   705  019C                     	;# 
   706  019D                     	;# 
   707  019E                     	;# 
   708  019F                     	;# 
   709  020D                     	;# 
   710  0210                     	;# 
   711  0211                     	;# 
   712  0212                     	;# 
   713  0213                     	;# 
   714  0214                     	;# 
   715  0215                     	;# 
   716  0215                     	;# 
   717  0216                     	;# 
   718  0217                     	;# 
   719  0291                     	;# 
   720  0291                     	;# 
   721  0292                     	;# 
   722  0293                     	;# 
   723  0294                     	;# 
   724  0295                     	;# 
   725  0295                     	;# 
   726  0296                     	;# 
   727  0298                     	;# 
   728  0298                     	;# 
   729  0299                     	;# 
   730  029A                     	;# 
   731  029B                     	;# 
   732  029C                     	;# 
   733  029C                     	;# 
   734  029D                     	;# 
   735  029E                     	;# 
   736  029F                     	;# 
   737  0311                     	;# 
   738  0311                     	;# 
   739  0312                     	;# 
   740  0313                     	;# 
   741  0314                     	;# 
   742  0315                     	;# 
   743  0315                     	;# 
   744  0316                     	;# 
   745  0318                     	;# 
   746  0318                     	;# 
   747  0319                     	;# 
   748  031A                     	;# 
   749  031C                     	;# 
   750  031C                     	;# 
   751  031D                     	;# 
   752  031E                     	;# 
   753  0394                     	;# 
   754  0395                     	;# 
   755  0396                     	;# 
   756  0415                     	;# 
   757  0416                     	;# 
   758  0417                     	;# 
   759  041C                     	;# 
   760  041D                     	;# 
   761  041E                     	;# 
   762  0791                     	;# 
   763  0792                     	;# 
   764  0793                     	;# 
   765  0794                     	;# 
   766  0795                     	;# 
   767  0798                     	;# 
   768  0799                     	;# 
   769  07A0                     	;# 
   770  07A1                     	;# 
   771  07A3                     	;# 
   772  07A4                     	;# 
   773  07A6                     	;# 
   774  07A7                     	;# 
   775  07A9                     	;# 
   776  07AA                     	;# 
   777  0FE4                     	;# 
   778  0FE5                     	;# 
   779  0FE6                     	;# 
   780  0FE7                     	;# 
   781  0FE8                     	;# 
   782  0FE9                     	;# 
   783  0FEA                     	;# 
   784  0FEB                     	;# 
   785  0FED                     	;# 
   786  0FEE                     	;# 
   787  0FEF                     	;# 
   788  0000                     	;# 
   789  0001                     	;# 
   790  0002                     	;# 
   791  0003                     	;# 
   792  0004                     	;# 
   793  0005                     	;# 
   794  0006                     	;# 
   795  0007                     	;# 
   796  0008                     	;# 
   797  0009                     	;# 
   798  000A                     	;# 
   799  000B                     	;# 
   800  000C                     	;# 
   801  000D                     	;# 
   802  000E                     	;# 
   803  0010                     	;# 
   804  0011                     	;# 
   805  0012                     	;# 
   806  0013                     	;# 
   807  0015                     	;# 
   808  0016                     	;# 
   809  0016                     	;# 
   810  0017                     	;# 
   811  0018                     	;# 
   812  0019                     	;# 
   813  001A                     	;# 
   814  001B                     	;# 
   815  001C                     	;# 
   816  001E                     	;# 
   817  001F                     	;# 
   818  008C                     	;# 
   819  008D                     	;# 
   820  008E                     	;# 
   821  0090                     	;# 
   822  0091                     	;# 
   823  0092                     	;# 
   824  0093                     	;# 
   825  0095                     	;# 
   826  0096                     	;# 
   827  0097                     	;# 
   828  0098                     	;# 
   829  0099                     	;# 
   830  009A                     	;# 
   831  009B                     	;# 
   832  009B                     	;# 
   833  009C                     	;# 
   834  009D                     	;# 
   835  009E                     	;# 
   836  010C                     	;# 
   837  010D                     	;# 
   838  010E                     	;# 
   839  0110                     	;# 
   840  0111                     	;# 
   841  0112                     	;# 
   842  0113                     	;# 
   843  0114                     	;# 
   844  0115                     	;# 
   845  0116                     	;# 
   846  0117                     	;# 
   847  0118                     	;# 
   848  0119                     	;# 
   849  011A                     	;# 
   850  011B                     	;# 
   851  011D                     	;# 
   852  018C                     	;# 
   853  018D                     	;# 
   854  0191                     	;# 
   855  0191                     	;# 
   856  0192                     	;# 
   857  0193                     	;# 
   858  0193                     	;# 
   859  0193                     	;# 
   860  0194                     	;# 
   861  0195                     	;# 
   862  0196                     	;# 
   863  0199                     	;# 
   864  019A                     	;# 
   865  019B                     	;# 
   866  019B                     	;# 
   867  019B                     	;# 
   868  019B                     	;# 
   869  019C                     	;# 
   870  019C                     	;# 
   871  019D                     	;# 
   872  019E                     	;# 
   873  019F                     	;# 
   874  020D                     	;# 
   875  0210                     	;# 
   876  0211                     	;# 
   877  0212                     	;# 
   878  0213                     	;# 
   879  0214                     	;# 
   880  0215                     	;# 
   881  0215                     	;# 
   882  0216                     	;# 
   883  0217                     	;# 
   884  0291                     	;# 
   885  0291                     	;# 
   886  0292                     	;# 
   887  0293                     	;# 
   888  0294                     	;# 
   889  0295                     	;# 
   890  0295                     	;# 
   891  0296                     	;# 
   892  0298                     	;# 
   893  0298                     	;# 
   894  0299                     	;# 
   895  029A                     	;# 
   896  029B                     	;# 
   897  029C                     	;# 
   898  029C                     	;# 
   899  029D                     	;# 
   900  029E                     	;# 
   901  029F                     	;# 
   902  0311                     	;# 
   903  0311                     	;# 
   904  0312                     	;# 
   905  0313                     	;# 
   906  0314                     	;# 
   907  0315                     	;# 
   908  0315                     	;# 
   909  0316                     	;# 
   910  0318                     	;# 
   911  0318                     	;# 
   912  0319                     	;# 
   913  031A                     	;# 
   914  031C                     	;# 
   915  031C                     	;# 
   916  031D                     	;# 
   917  031E                     	;# 
   918  0394                     	;# 
   919  0395                     	;# 
   920  0396                     	;# 
   921  0415                     	;# 
   922  0416                     	;# 
   923  0417                     	;# 
   924  041C                     	;# 
   925  041D                     	;# 
   926  041E                     	;# 
   927  0791                     	;# 
   928  0792                     	;# 
   929  0793                     	;# 
   930  0794                     	;# 
   931  0795                     	;# 
   932  0798                     	;# 
   933  0799                     	;# 
   934  07A0                     	;# 
   935  07A1                     	;# 
   936  07A3                     	;# 
   937  07A4                     	;# 
   938  07A6                     	;# 
   939  07A7                     	;# 
   940  07A9                     	;# 
   941  07AA                     	;# 
   942  0FE4                     	;# 
   943  0FE5                     	;# 
   944  0FE6                     	;# 
   945  0FE7                     	;# 
   946  0FE8                     	;# 
   947  0FE9                     	;# 
   948  0FEA                     	;# 
   949  0FEB                     	;# 
   950  0FED                     	;# 
   951  0FEE                     	;# 
   952  0FEF                     	;# 
   953  0000                     	;# 
   954  0001                     	;# 
   955  0002                     	;# 
   956  0003                     	;# 
   957  0004                     	;# 
   958  0005                     	;# 
   959  0006                     	;# 
   960  0007                     	;# 
   961  0008                     	;# 
   962  0009                     	;# 
   963  000A                     	;# 
   964  000B                     	;# 
   965  000C                     	;# 
   966  000D                     	;# 
   967  000E                     	;# 
   968  0010                     	;# 
   969  0011                     	;# 
   970  0012                     	;# 
   971  0013                     	;# 
   972  0015                     	;# 
   973  0016                     	;# 
   974  0016                     	;# 
   975  0017                     	;# 
   976  0018                     	;# 
   977  0019                     	;# 
   978  001A                     	;# 
   979  001B                     	;# 
   980  001C                     	;# 
   981  001E                     	;# 
   982  001F                     	;# 
   983  008C                     	;# 
   984  008D                     	;# 
   985  008E                     	;# 
   986  0090                     	;# 
   987  0091                     	;# 
   988  0092                     	;# 
   989  0093                     	;# 
   990  0095                     	;# 
   991  0096                     	;# 
   992  0097                     	;# 
   993  0098                     	;# 
   994  0099                     	;# 
   995  009A                     	;# 
   996  009B                     	;# 
   997  009B                     	;# 
   998  009C                     	;# 
   999  009D                     	;# 
  1000  009E                     	;# 
  1001  010C                     	;# 
  1002  010D                     	;# 
  1003  010E                     	;# 
  1004  0110                     	;# 
  1005  0111                     	;# 
  1006  0112                     	;# 
  1007  0113                     	;# 
  1008  0114                     	;# 
  1009  0115                     	;# 
  1010  0116                     	;# 
  1011  0117                     	;# 
  1012  0118                     	;# 
  1013  0119                     	;# 
  1014  011A                     	;# 
  1015  011B                     	;# 
  1016  011D                     	;# 
  1017  018C                     	;# 
  1018  018D                     	;# 
  1019  0191                     	;# 
  1020  0191                     	;# 
  1021  0192                     	;# 
  1022  0193                     	;# 
  1023  0193                     	;# 
  1024  0193                     	;# 
  1025  0194                     	;# 
  1026  0195                     	;# 
  1027  0196                     	;# 
  1028  0199                     	;# 
  1029  019A                     	;# 
  1030  019B                     	;# 
  1031  019B                     	;# 
  1032  019B                     	;# 
  1033  019B                     	;# 
  1034  019C                     	;# 
  1035  019C                     	;# 
  1036  019D                     	;# 
  1037  019E                     	;# 
  1038  019F                     	;# 
  1039  020D                     	;# 
  1040  0210                     	;# 
  1041  0211                     	;# 
  1042  0212                     	;# 
  1043  0213                     	;# 
  1044  0214                     	;# 
  1045  0215                     	;# 
  1046  0215                     	;# 
  1047  0216                     	;# 
  1048  0217                     	;# 
  1049  0291                     	;# 
  1050  0291                     	;# 
  1051  0292                     	;# 
  1052  0293                     	;# 
  1053  0294                     	;# 
  1054  0295                     	;# 
  1055  0295                     	;# 
  1056  0296                     	;# 
  1057  0298                     	;# 
  1058  0298                     	;# 
  1059  0299                     	;# 
  1060  029A                     	;# 
  1061  029B                     	;# 
  1062  029C                     	;# 
  1063  029C                     	;# 
  1064  029D                     	;# 
  1065  029E                     	;# 
  1066  029F                     	;# 
  1067  0311                     	;# 
  1068  0311                     	;# 
  1069  0312                     	;# 
  1070  0313                     	;# 
  1071  0314                     	;# 
  1072  0315                     	;# 
  1073  0315                     	;# 
  1074  0316                     	;# 
  1075  0318                     	;# 
  1076  0318                     	;# 
  1077  0319                     	;# 
  1078  031A                     	;# 
  1079  031C                     	;# 
  1080  031C                     	;# 
  1081  031D                     	;# 
  1082  031E                     	;# 
  1083  0394                     	;# 
  1084  0395                     	;# 
  1085  0396                     	;# 
  1086  0415                     	;# 
  1087  0416                     	;# 
  1088  0417                     	;# 
  1089  041C                     	;# 
  1090  041D                     	;# 
  1091  041E                     	;# 
  1092  0791                     	;# 
  1093  0792                     	;# 
  1094  0793                     	;# 
  1095  0794                     	;# 
  1096  0795                     	;# 
  1097  0798                     	;# 
  1098  0799                     	;# 
  1099  07A0                     	;# 
  1100  07A1                     	;# 
  1101  07A3                     	;# 
  1102  07A4                     	;# 
  1103  07A6                     	;# 
  1104  07A7                     	;# 
  1105  07A9                     	;# 
  1106  07AA                     	;# 
  1107  0FE4                     	;# 
  1108  0FE5                     	;# 
  1109  0FE6                     	;# 
  1110  0FE7                     	;# 
  1111  0FE8                     	;# 
  1112  0FE9                     	;# 
  1113  0FEA                     	;# 
  1114  0FEB                     	;# 
  1115  0FED                     	;# 
  1116  0FEE                     	;# 
  1117  0FEF                     	;# 
  1118  0000                     	;# 
  1119  0001                     	;# 
  1120  0002                     	;# 
  1121  0003                     	;# 
  1122  0004                     	;# 
  1123  0005                     	;# 
  1124  0006                     	;# 
  1125  0007                     	;# 
  1126  0008                     	;# 
  1127  0009                     	;# 
  1128  000A                     	;# 
  1129  000B                     	;# 
  1130  000C                     	;# 
  1131  000D                     	;# 
  1132  000E                     	;# 
  1133  0010                     	;# 
  1134  0011                     	;# 
  1135  0012                     	;# 
  1136  0013                     	;# 
  1137  0015                     	;# 
  1138  0016                     	;# 
  1139  0016                     	;# 
  1140  0017                     	;# 
  1141  0018                     	;# 
  1142  0019                     	;# 
  1143  001A                     	;# 
  1144  001B                     	;# 
  1145  001C                     	;# 
  1146  001E                     	;# 
  1147  001F                     	;# 
  1148  008C                     	;# 
  1149  008D                     	;# 
  1150  008E                     	;# 
  1151  0090                     	;# 
  1152  0091                     	;# 
  1153  0092                     	;# 
  1154  0093                     	;# 
  1155  0095                     	;# 
  1156  0096                     	;# 
  1157  0097                     	;# 
  1158  0098                     	;# 
  1159  0099                     	;# 
  1160  009A                     	;# 
  1161  009B                     	;# 
  1162  009B                     	;# 
  1163  009C                     	;# 
  1164  009D                     	;# 
  1165  009E                     	;# 
  1166  010C                     	;# 
  1167  010D                     	;# 
  1168  010E                     	;# 
  1169  0110                     	;# 
  1170  0111                     	;# 
  1171  0112                     	;# 
  1172  0113                     	;# 
  1173  0114                     	;# 
  1174  0115                     	;# 
  1175  0116                     	;# 
  1176  0117                     	;# 
  1177  0118                     	;# 
  1178  0119                     	;# 
  1179  011A                     	;# 
  1180  011B                     	;# 
  1181  011D                     	;# 
  1182  018C                     	;# 
  1183  018D                     	;# 
  1184  0191                     	;# 
  1185  0191                     	;# 
  1186  0192                     	;# 
  1187  0193                     	;# 
  1188  0193                     	;# 
  1189  0193                     	;# 
  1190  0194                     	;# 
  1191  0195                     	;# 
  1192  0196                     	;# 
  1193  0199                     	;# 
  1194  019A                     	;# 
  1195  019B                     	;# 
  1196  019B                     	;# 
  1197  019B                     	;# 
  1198  019B                     	;# 
  1199  019C                     	;# 
  1200  019C                     	;# 
  1201  019D                     	;# 
  1202  019E                     	;# 
  1203  019F                     	;# 
  1204  020D                     	;# 
  1205  0210                     	;# 
  1206  0211                     	;# 
  1207  0212                     	;# 
  1208  0213                     	;# 
  1209  0214                     	;# 
  1210  0215                     	;# 
  1211  0215                     	;# 
  1212  0216                     	;# 
  1213  0217                     	;# 
  1214  0291                     	;# 
  1215  0291                     	;# 
  1216  0292                     	;# 
  1217  0293                     	;# 
  1218  0294                     	;# 
  1219  0295                     	;# 
  1220  0295                     	;# 
  1221  0296                     	;# 
  1222  0298                     	;# 
  1223  0298                     	;# 
  1224  0299                     	;# 
  1225  029A                     	;# 
  1226  029B                     	;# 
  1227  029C                     	;# 
  1228  029C                     	;# 
  1229  029D                     	;# 
  1230  029E                     	;# 
  1231  029F                     	;# 
  1232  0311                     	;# 
  1233  0311                     	;# 
  1234  0312                     	;# 
  1235  0313                     	;# 
  1236  0314                     	;# 
  1237  0315                     	;# 
  1238  0315                     	;# 
  1239  0316                     	;# 
  1240  0318                     	;# 
  1241  0318                     	;# 
  1242  0319                     	;# 
  1243  031A                     	;# 
  1244  031C                     	;# 
  1245  031C                     	;# 
  1246  031D                     	;# 
  1247  031E                     	;# 
  1248  0394                     	;# 
  1249  0395                     	;# 
  1250  0396                     	;# 
  1251  0415                     	;# 
  1252  0416                     	;# 
  1253  0417                     	;# 
  1254  041C                     	;# 
  1255  041D                     	;# 
  1256  041E                     	;# 
  1257  0791                     	;# 
  1258  0792                     	;# 
  1259  0793                     	;# 
  1260  0794                     	;# 
  1261  0795                     	;# 
  1262  0798                     	;# 
  1263  0799                     	;# 
  1264  07A0                     	;# 
  1265  07A1                     	;# 
  1266  07A3                     	;# 
  1267  07A4                     	;# 
  1268  07A6                     	;# 
  1269  07A7                     	;# 
  1270  07A9                     	;# 
  1271  07AA                     	;# 
  1272  0FE4                     	;# 
  1273  0FE5                     	;# 
  1274  0FE6                     	;# 
  1275  0FE7                     	;# 
  1276  0FE8                     	;# 
  1277  0FE9                     	;# 
  1278  0FEA                     	;# 
  1279  0FEB                     	;# 
  1280  0FED                     	;# 
  1281  0FEE                     	;# 
  1282  0FEF                     	;# 
  1283  0000                     	;# 
  1284  0001                     	;# 
  1285  0002                     	;# 
  1286  0003                     	;# 
  1287  0004                     	;# 
  1288  0005                     	;# 
  1289  0006                     	;# 
  1290  0007                     	;# 
  1291  0008                     	;# 
  1292  0009                     	;# 
  1293  000A                     	;# 
  1294  000B                     	;# 
  1295  000C                     	;# 
  1296  000D                     	;# 
  1297  000E                     	;# 
  1298  0010                     	;# 
  1299  0011                     	;# 
  1300  0012                     	;# 
  1301  0013                     	;# 
  1302  0015                     	;# 
  1303  0016                     	;# 
  1304  0016                     	;# 
  1305  0017                     	;# 
  1306  0018                     	;# 
  1307  0019                     	;# 
  1308  001A                     	;# 
  1309  001B                     	;# 
  1310  001C                     	;# 
  1311  001E                     	;# 
  1312  001F                     	;# 
  1313  008C                     	;# 
  1314  008D                     	;# 
  1315  008E                     	;# 
  1316  0090                     	;# 
  1317  0091                     	;# 
  1318  0092                     	;# 
  1319  0093                     	;# 
  1320  0095                     	;# 
  1321  0096                     	;# 
  1322  0097                     	;# 
  1323  0098                     	;# 
  1324  0099                     	;# 
  1325  009A                     	;# 
  1326  009B                     	;# 
  1327  009B                     	;# 
  1328  009C                     	;# 
  1329  009D                     	;# 
  1330  009E                     	;# 
  1331  010C                     	;# 
  1332  010D                     	;# 
  1333  010E                     	;# 
  1334  0110                     	;# 
  1335  0111                     	;# 
  1336  0112                     	;# 
  1337  0113                     	;# 
  1338  0114                     	;# 
  1339  0115                     	;# 
  1340  0116                     	;# 
  1341  0117                     	;# 
  1342  0118                     	;# 
  1343  0119                     	;# 
  1344  011A                     	;# 
  1345  011B                     	;# 
  1346  011D                     	;# 
  1347  018C                     	;# 
  1348  018D                     	;# 
  1349  0191                     	;# 
  1350  0191                     	;# 
  1351  0192                     	;# 
  1352  0193                     	;# 
  1353  0193                     	;# 
  1354  0193                     	;# 
  1355  0194                     	;# 
  1356  0195                     	;# 
  1357  0196                     	;# 
  1358  0199                     	;# 
  1359  019A                     	;# 
  1360  019B                     	;# 
  1361  019B                     	;# 
  1362  019B                     	;# 
  1363  019B                     	;# 
  1364  019C                     	;# 
  1365  019C                     	;# 
  1366  019D                     	;# 
  1367  019E                     	;# 
  1368  019F                     	;# 
  1369  020D                     	;# 
  1370  0210                     	;# 
  1371  0211                     	;# 
  1372  0212                     	;# 
  1373  0213                     	;# 
  1374  0214                     	;# 
  1375  0215                     	;# 
  1376  0215                     	;# 
  1377  0216                     	;# 
  1378  0217                     	;# 
  1379  0291                     	;# 
  1380  0291                     	;# 
  1381  0292                     	;# 
  1382  0293                     	;# 
  1383  0294                     	;# 
  1384  0295                     	;# 
  1385  0295                     	;# 
  1386  0296                     	;# 
  1387  0298                     	;# 
  1388  0298                     	;# 
  1389  0299                     	;# 
  1390  029A                     	;# 
  1391  029B                     	;# 
  1392  029C                     	;# 
  1393  029C                     	;# 
  1394  029D                     	;# 
  1395  029E                     	;# 
  1396  029F                     	;# 
  1397  0311                     	;# 
  1398  0311                     	;# 
  1399  0312                     	;# 
  1400  0313                     	;# 
  1401  0314                     	;# 
  1402  0315                     	;# 
  1403  0315                     	;# 
  1404  0316                     	;# 
  1405  0318                     	;# 
  1406  0318                     	;# 
  1407  0319                     	;# 
  1408  031A                     	;# 
  1409  031C                     	;# 
  1410  031C                     	;# 
  1411  031D                     	;# 
  1412  031E                     	;# 
  1413  0394                     	;# 
  1414  0395                     	;# 
  1415  0396                     	;# 
  1416  0415                     	;# 
  1417  0416                     	;# 
  1418  0417                     	;# 
  1419  041C                     	;# 
  1420  041D                     	;# 
  1421  041E                     	;# 
  1422  0791                     	;# 
  1423  0792                     	;# 
  1424  0793                     	;# 
  1425  0794                     	;# 
  1426  0795                     	;# 
  1427  0798                     	;# 
  1428  0799                     	;# 
  1429  07A0                     	;# 
  1430  07A1                     	;# 
  1431  07A3                     	;# 
  1432  07A4                     	;# 
  1433  07A6                     	;# 
  1434  07A7                     	;# 
  1435  07A9                     	;# 
  1436  07AA                     	;# 
  1437  0FE4                     	;# 
  1438  0FE5                     	;# 
  1439  0FE6                     	;# 
  1440  0FE7                     	;# 
  1441  0FE8                     	;# 
  1442  0FE9                     	;# 
  1443  0FEA                     	;# 
  1444  0FEB                     	;# 
  1445  0FED                     	;# 
  1446  0FEE                     	;# 
  1447  0FEF                     	;# 
  1448  0000                     	;# 
  1449  0001                     	;# 
  1450  0002                     	;# 
  1451  0003                     	;# 
  1452  0004                     	;# 
  1453  0005                     	;# 
  1454  0006                     	;# 
  1455  0007                     	;# 
  1456  0008                     	;# 
  1457  0009                     	;# 
  1458  000A                     	;# 
  1459  000B                     	;# 
  1460  000C                     	;# 
  1461  000D                     	;# 
  1462  000E                     	;# 
  1463  0010                     	;# 
  1464  0011                     	;# 
  1465  0012                     	;# 
  1466  0013                     	;# 
  1467  0015                     	;# 
  1468  0016                     	;# 
  1469  0016                     	;# 
  1470  0017                     	;# 
  1471  0018                     	;# 
  1472  0019                     	;# 
  1473  001A                     	;# 
  1474  001B                     	;# 
  1475  001C                     	;# 
  1476  001E                     	;# 
  1477  001F                     	;# 
  1478  008C                     	;# 
  1479  008D                     	;# 
  1480  008E                     	;# 
  1481  0090                     	;# 
  1482  0091                     	;# 
  1483  0092                     	;# 
  1484  0093                     	;# 
  1485  0095                     	;# 
  1486  0096                     	;# 
  1487  0097                     	;# 
  1488  0098                     	;# 
  1489  0099                     	;# 
  1490  009A                     	;# 
  1491  009B                     	;# 
  1492  009B                     	;# 
  1493  009C                     	;# 
  1494  009D                     	;# 
  1495  009E                     	;# 
  1496  010C                     	;# 
  1497  010D                     	;# 
  1498  010E                     	;# 
  1499  0110                     	;# 
  1500  0111                     	;# 
  1501  0112                     	;# 
  1502  0113                     	;# 
  1503  0114                     	;# 
  1504  0115                     	;# 
  1505  0116                     	;# 
  1506  0117                     	;# 
  1507  0118                     	;# 
  1508  0119                     	;# 
  1509  011A                     	;# 
  1510  011B                     	;# 
  1511  011D                     	;# 
  1512  018C                     	;# 
  1513  018D                     	;# 
  1514  0191                     	;# 
  1515  0191                     	;# 
  1516  0192                     	;# 
  1517  0193                     	;# 
  1518  0193                     	;# 
  1519  0193                     	;# 
  1520  0194                     	;# 
  1521  0195                     	;# 
  1522  0196                     	;# 
  1523  0199                     	;# 
  1524  019A                     	;# 
  1525  019B                     	;# 
  1526  019B                     	;# 
  1527  019B                     	;# 
  1528  019B                     	;# 
  1529  019C                     	;# 
  1530  019C                     	;# 
  1531  019D                     	;# 
  1532  019E                     	;# 
  1533  019F                     	;# 
  1534  020D                     	;# 
  1535  0210                     	;# 
  1536  0211                     	;# 
  1537  0212                     	;# 
  1538  0213                     	;# 
  1539  0214                     	;# 
  1540  0215                     	;# 
  1541  0215                     	;# 
  1542  0216                     	;# 
  1543  0217                     	;# 
  1544  0291                     	;# 
  1545  0291                     	;# 
  1546  0292                     	;# 
  1547  0293                     	;# 
  1548  0294                     	;# 
  1549  0295                     	;# 
  1550  0295                     	;# 
  1551  0296                     	;# 
  1552  0298                     	;# 
  1553  0298                     	;# 
  1554  0299                     	;# 
  1555  029A                     	;# 
  1556  029B                     	;# 
  1557  029C                     	;# 
  1558  029C                     	;# 
  1559  029D                     	;# 
  1560  029E                     	;# 
  1561  029F                     	;# 
  1562  0311                     	;# 
  1563  0311                     	;# 
  1564  0312                     	;# 
  1565  0313                     	;# 
  1566  0314                     	;# 
  1567  0315                     	;# 
  1568  0315                     	;# 
  1569  0316                     	;# 
  1570  0318                     	;# 
  1571  0318                     	;# 
  1572  0319                     	;# 
  1573  031A                     	;# 
  1574  031C                     	;# 
  1575  031C                     	;# 
  1576  031D                     	;# 
  1577  031E                     	;# 
  1578  0394                     	;# 
  1579  0395                     	;# 
  1580  0396                     	;# 
  1581  0415                     	;# 
  1582  0416                     	;# 
  1583  0417                     	;# 
  1584  041C                     	;# 
  1585  041D                     	;# 
  1586  041E                     	;# 
  1587  0791                     	;# 
  1588  0792                     	;# 
  1589  0793                     	;# 
  1590  0794                     	;# 
  1591  0795                     	;# 
  1592  0798                     	;# 
  1593  0799                     	;# 
  1594  07A0                     	;# 
  1595  07A1                     	;# 
  1596  07A3                     	;# 
  1597  07A4                     	;# 
  1598  07A6                     	;# 
  1599  07A7                     	;# 
  1600  07A9                     	;# 
  1601  07AA                     	;# 
  1602  0FE4                     	;# 
  1603  0FE5                     	;# 
  1604  0FE6                     	;# 
  1605  0FE7                     	;# 
  1606  0FE8                     	;# 
  1607  0FE9                     	;# 
  1608  0FEA                     	;# 
  1609  0FEB                     	;# 
  1610  0FED                     	;# 
  1611  0FEE                     	;# 
  1612  0FEF                     	;# 
  1613                           
  1614                           	psect	idataBANK2
  1615  113A                     __pidataBANK2:
  1616                           
  1617                           ;initializer for main@F2847
  1618  113A  3402               	retlw	2
  1619  113B  3404               	retlw	4
  1620  113C  3400               	retlw	0
  1621  113D  3400               	retlw	0
  1622  113E  3400               	retlw	0
  1623  113F  3400               	retlw	0
  1624  1140  3400               	retlw	0
  1625  1141  3400               	retlw	0
  1626  1142  3400               	retlw	0
  1627  1143  3400               	retlw	0
  1628  1144  34F4               	retlw	244
  1629  1145  3401               	retlw	1
  1630                           
  1631                           ;initializer for _segdata
  1632  1146  343F               	retlw	63
  1633  1147  3406               	retlw	6
  1634  1148  345B               	retlw	91
  1635  1149  344F               	retlw	79
  1636  114A  3466               	retlw	102
  1637  114B  346D               	retlw	109
  1638  114C  347D               	retlw	125
  1639  114D  3407               	retlw	7
  1640  114E  347F               	retlw	127
  1641  114F  346F               	retlw	111
  1642                           
  1643                           ;initializer for lcd_set_cursor@F2781
  1644  1150  3400               	retlw	0
  1645  1151  3440               	retlw	64
  1646  1152  3414               	retlw	20
  1647  1153  3454               	retlw	84
  1648                           
  1649                           ;initializer for print_digit@F2820
  1650  1154  34FF               	retlw	255
  1651  1155  34FF               	retlw	255
  1652  1156  34FF               	retlw	255
  1653  1157  34FF               	retlw	255
  1654                           
  1655                           ;initializer for main@F2849
  1656  1158  3427               	retlw	39
  1657  1159  3410               	retlw	16
  1658  115A  3402               	retlw	2
  1659  115B  3400               	retlw	0
  1660                           
  1661                           ;initializer for main@F2851
  1662  115C  3408               	retlw	8
  1663  115D  3410               	retlw	16
  1664  000D                     _PORTBbits	set	13
  1665  0097                     _WDTCON	set	151
  1666  0098                     _OSCTUNE	set	152
  1667  0099                     _OSCCON	set	153
  1668  0095                     _OPTION_REGbits	set	149
  1669  008E                     _TRISC	set	142
  1670  008D                     _TRISB	set	141
  1671  008C                     _TRISA	set	140
  1672  0090                     _TRISE	set	144
  1673  0116                     _BORCON	set	278
  1674  011D                     _APFCON	set	285
  1675  010E                     _LATC	set	270
  1676  010D                     _LATB	set	269
  1677  010C                     _LATA	set	268
  1678  0110                     _LATE	set	272
  1679  018C                     _ANSELA	set	396
  1680  018D                     _ANSELB	set	397
  1681  0215                     _SSPCON1	set	533
  1682  0212                     _SSPADD	set	530
  1683  0215                     _SSPCON1bits	set	533
  1684  0214                     _SSPSTATbits	set	532
  1685  0211                     _SSPBUF	set	529
  1686  0216                     _SSPCON2bits	set	534
  1687  0214                     _SSPSTAT	set	532
  1688  0216                     _SSPCON2	set	534
  1689  020D                     _WPUB	set	525
  1690  0210                     _WPUE	set	528
  1691                           
  1692                           	psect	stringtext1
  1693  2000                     __pstringtext1:
  1694  2000                     STR_3:
  1695  2000  344C               	retlw	76	;'L'
  1696  2001  346F               	retlw	111	;'o'
  1697  2002  3461               	retlw	97	;'a'
  1698  2003  3464               	retlw	100	;'d'
  1699  2004  3420               	retlw	32	;' '
  1700  2005  3463               	retlw	99	;'c'
  1701  2006  3465               	retlw	101	;'e'
  1702  2007  346C               	retlw	108	;'l'
  1703  2008  346C               	retlw	108	;'l'
  1704  2009  3420               	retlw	32	;' '
  1705  200A  3455               	retlw	85	;'U'
  1706  200B  346E               	retlw	110	;'n'
  1707  200C  3469               	retlw	105	;'i'
  1708  200D  3474               	retlw	116	;'t'
  1709  200E  3400               	retlw	0
  1710                           
  1711                           	psect	stringtext2
  1712  200F                     __pstringtext2:
  1713  200F                     STR_2:
  1714  200F  3449               	retlw	73	;'I'
  1715  2010  346E               	retlw	110	;'n'
  1716  2011  3469               	retlw	105	;'i'
  1717  2012  3474               	retlw	116	;'t'
  1718  2013  3469               	retlw	105	;'i'
  1719  2014  3461               	retlw	97	;'a'
  1720  2015  346C               	retlw	108	;'l'
  1721  2016  3469               	retlw	105	;'i'
  1722  2017  347A               	retlw	122	;'z'
  1723  2018  3465               	retlw	101	;'e'
  1724  2019  3400               	retlw	0
  1725                           
  1726                           	psect	stringtext3
  1727  201A                     __pstringtext3:
  1728  201A                     STR_5:
  1729  201A  3425               	retlw	37	;'%'
  1730  201B  3464               	retlw	100	;'d'
  1731  201C  3467               	retlw	103	;'g'
  1732  201D  3420               	retlw	32	;' '
  1733  201E  342F               	retlw	47	;'/'
  1734  201F  3420               	retlw	32	;' '
  1735  2020  3425               	retlw	37	;'%'
  1736  2021  3464               	retlw	100	;'d'
  1737  2022  3467               	retlw	103	;'g'
  1738  2023  3400               	retlw	0
  1739                           
  1740                           	psect	stringtext4
  1741  2024                     __pstringtext4:
  1742  2024                     STR_4:
  1743  2024  3425               	retlw	37	;'%'
  1744  2025  346C               	retlw	108	;'l'
  1745  2026  3475               	retlw	117	;'u'
  1746  2027  3420               	retlw	32	;' '
  1747  2028  3476               	retlw	118	;'v'
  1748  2029  3461               	retlw	97	;'a'
  1749  202A  346C               	retlw	108	;'l'
  1750  202B  3400               	retlw	0
  1751                           
  1752                           	psect	stringtext5
  1753  202C                     __pstringtext5:
  1754  202C                     STR_6:
  1755  202C  3425               	retlw	37	;'%'
  1756  202D  3464               	retlw	100	;'d'
  1757  202E  3420               	retlw	32	;' '
  1758  202F  3425               	retlw	37	;'%'
  1759  2030  3425               	retlw	37	;'%'
  1760  2031  3400               	retlw	0
  1761                           
  1762                           	psect	stringtext6
  1763  2032                     __pstringtext6:
  1764  2032                     STR_7:
  1765  2032  346C               	retlw	108	;'l'
  1766  2033  3464               	retlw	100	;'d'
  1767  2034  3400               	retlw	0
  1768                           
  1769                           	psect	stringtext7
  1770  2035                     __pstringtext7:
  1771  2035                     STR_11:
  1772  2035  346C               	retlw	108	;'l'
  1773  2036  3469               	retlw	105	;'i'
  1774  2037  3400               	retlw	0
  1775                           
  1776                           	psect	stringtext8
  1777  2038                     __pstringtext8:
  1778  2038                     STR_16:
  1779  2038  346C               	retlw	108	;'l'
  1780  2039  3475               	retlw	117	;'u'
  1781  203A  3400               	retlw	0
  1782                           
  1783                           	psect	stringtext9
  1784  203B                     __pstringtext9:
  1785  203B                     STR_1:
  1786  203B  3420               	retlw	32	;' '
  1787  203C  3400               	retlw	0
  1788                           
  1789                           	psect	stringtext10
  1790  0000                     __pstringtext10:
  1791  2032                     
  1792                           	psect	cinit
  1793  07E1                     start_initialization:	
  1794                           ; #config settings
  1795                           
  1796  07E1                     __initialization:
  1797                           
  1798                           ; Initialize objects allocated to BANK2
  1799  07E1  303A               	movlw	low __pidataBANK2
  1800  07E2  0084               	movwf	4
  1801  07E3  3091               	movlw	(high __pidataBANK2)| (0+128)
  1802  07E4  0085               	movwf	5
  1803  07E5  3020               	movlw	low __pdataBANK2
  1804  07E6  0086               	movwf	6
  1805  07E7  3001               	movlw	high __pdataBANK2
  1806  07E8  0087               	movwf	7
  1807  07E9  3024               	movlw	36
  1808  07EA  319F  274A  3187   	fcall	init_ram
  1809                           
  1810                           ; Clear objects allocated to BANK2
  1811  07ED  3044               	movlw	low __pbssBANK2
  1812  07EE  0084               	movwf	4
  1813  07EF  3001               	movlw	high __pbssBANK2
  1814  07F0  0085               	movwf	5
  1815  07F1  3013               	movlw	19
  1816  07F2  319F  2744  3187   	fcall	clear_ram0
  1817                           
  1818                           ; Clear objects allocated to BANK3
  1819  07F5  30A0               	movlw	low __pbssBANK3
  1820  07F6  0084               	movwf	4
  1821  07F7  3001               	movlw	high __pbssBANK3
  1822  07F8  0085               	movwf	5
  1823  07F9  3020               	movlw	32
  1824  07FA  319F  2744  3187   	fcall	clear_ram0
  1825  07FD                     end_of_initialization:	
  1826                           ;End of C runtime variable initialization code
  1827                           
  1828  07FD                     __end_of__initialization:
  1829  07FD  0020               	movlb	0
  1830  07FE  3196  2E82         	ljmp	_main	;jump to C main() function
  1831                           
  1832                           	psect	bssBANK2
  1833  0144                     __pbssBANK2:
  1834  0144                     main@F2853:
  1835  0144                     	ds	6
  1836  014A                     clear_segment@F2810:
  1837  014A                     	ds	4
  1838  014E                     _nout:
  1839  014E                     	ds	2
  1840  0150                     _width:
  1841  0150                     	ds	2
  1842  0152                     _prec:
  1843  0152                     	ds	2
  1844  0154                     _flags:
  1845  0154                     	ds	2
  1846  0156                     _m_brightness:
  1847  0156                     	ds	1
  1848                           
  1849                           	psect	dataBANK2
  1850  0120                     __pdataBANK2:
  1851  0120                     main@F2847:
  1852  0120                     	ds	12
  1853  012C                     _segdata:
  1854  012C                     	ds	10
  1855  0136                     lcd_set_cursor@F2781:
  1856  0136                     	ds	4
  1857  013A                     print_digit@F2820:
  1858  013A                     	ds	4
  1859  013E                     main@F2849:
  1860  013E                     	ds	4
  1861  0142                     main@F2851:
  1862  0142                     	ds	2
  1863                           
  1864                           	psect	bssBANK3
  1865  01A0                     __pbssBANK3:
  1866  01A0                     _dbuf:
  1867  01A0                     	ds	32
  1868                           
  1869                           	psect	inittext
  1870  1F4A                     init_ram:
  1871  1F4A  00FE               	movwf	btemp
  1872  1F4B                     initloop:
  1873  1F4B  0012               	moviw fsr0++
  1874  1F4C  001E               	movwi fsr1++
  1875  1F4D  0BFE               	decfsz	btemp,f
  1876  1F4E  2F4B               	goto	initloop
  1877  1F4F  3400               	retlw	0
  1878                           
  1879                           	psect	clrtext
  1880  1F44                     clear_ram0:	
  1881                           ;	Called with FSR0 containing the base address, and
  1882                           ;	WREG with the size to clear
  1883                           
  1884  1F44  0064               	clrwdt	;clear the watchdog before getting into this loop
  1885  1F45                     clrloop0:
  1886  1F45  0180               	clrf	0	;clear RAM location pointed to by FSR
  1887  1F46  3101               	addfsr 0,1
  1888  1F47  0B89               	decfsz	9,f	;Have we reached the end of clearing yet?
  1889  1F48  2F45               	goto	clrloop0	;have we reached the end yet?
  1890  1F49  3400               	retlw	0	;all done for this memory range, return
  1891                           
  1892                           	psect	cstackBANK1
  1893  00A0                     __pcstackBANK1:
  1894  00A0                     ??_calc_percentage:
  1895  00A0                     ??_vfprintf:	
  1896                           ; 1 bytes @ 0x0
  1897                           
  1898                           
  1899                           ; 1 bytes @ 0x0
  1900  00A0                     	ds	2
  1901  00A2                     vfprintf@fp:
  1902                           
  1903                           ; 1 bytes @ 0x2
  1904  00A2                     	ds	1
  1905  00A3                     vfprintf@cfmt:
  1906                           
  1907                           ; 2 bytes @ 0x3
  1908  00A3                     	ds	2
  1909  00A5                     ?_sprintf:
  1910  00A5                     sprintf@fmt:	
  1911                           ; 2 bytes @ 0x5
  1912                           
  1913                           
  1914                           ; 2 bytes @ 0x5
  1915  00A5                     	ds	6
  1916  00AB                     ??_sprintf:
  1917                           
  1918                           ; 1 bytes @ 0xB
  1919  00AB                     	ds	1
  1920  00AC                     sprintf@s:
  1921                           
  1922                           ; 1 bytes @ 0xC
  1923  00AC                     	ds	1
  1924  00AD                     sprintf@ap:
  1925                           
  1926                           ; 1 bytes @ 0xD
  1927  00AD                     	ds	1
  1928  00AE                     sprintf@f:
  1929                           
  1930                           ; 5 bytes @ 0xE
  1931  00AE                     	ds	5
  1932  00B3                     ??_initialize:
  1933  00B3                     ??_print_gram:	
  1934                           ; 1 bytes @ 0x13
  1935                           
  1936                           
  1937                           ; 1 bytes @ 0x13
  1938  00B3                     	ds	1
  1939  00B4                     initialize@valstr:
  1940                           
  1941                           ; 16 bytes @ 0x14
  1942  00B4                     	ds	1
  1943  00B5                     print_gram@row1:
  1944                           
  1945                           ; 16 bytes @ 0x15
  1946  00B5                     	ds	15
  1947  00C4                     initialize@p:
  1948                           
  1949                           ; 1 bytes @ 0x24
  1950  00C4                     	ds	1
  1951  00C5                     print_gram@row2:
  1952                           
  1953                           ; 16 bytes @ 0x25
  1954  00C5                     	ds	16
  1955  00D5                     print_gram@p:
  1956                           
  1957                           ; 1 bytes @ 0x35
  1958  00D5                     	ds	1
  1959  00D6                     ??_main:
  1960                           
  1961                           ; 1 bytes @ 0x36
  1962  00D6                     	ds	2
  1963  00D8                     main@lcd:
  1964                           
  1965                           ; 4 bytes @ 0x38
  1966  00D8                     	ds	4
  1967  00DC                     main@tm1637:
  1968                           
  1969                           ; 2 bytes @ 0x3C
  1970  00DC                     	ds	2
  1971  00DE                     main@loadcell:
  1972                           
  1973                           ; 12 bytes @ 0x3E
  1974  00DE                     	ds	12
  1975  00EA                     main@drink:
  1976                           
  1977                           ; 6 bytes @ 0x4A
  1978  00EA                     	ds	6
  1979                           
  1980                           	psect	cstackCOMMON
  1981  0070                     __pcstackCOMMON:
  1982  0070                     ?_OSCILLATOR_Initialize:
  1983  0070                     ??_OSCILLATOR_Initialize:	
  1984                           ; 1 bytes @ 0x0
  1985                           
  1986  0070                     ?_WDT_Initialize:	
  1987                           ; 1 bytes @ 0x0
  1988                           
  1989  0070                     ??_WDT_Initialize:	
  1990                           ; 1 bytes @ 0x0
  1991                           
  1992  0070                     ?_initialize:	
  1993                           ; 1 bytes @ 0x0
  1994                           
  1995  0070                     ?_calc_percentage:	
  1996                           ; 1 bytes @ 0x0
  1997                           
  1998  0070                     ?_print_gram:	
  1999                           ; 1 bytes @ 0x0
  2000                           
  2001  0070                     ?_putch:	
  2002                           ; 1 bytes @ 0x0
  2003                           
  2004  0070                     ??_putch:	
  2005                           ; 1 bytes @ 0x0
  2006                           
  2007  0070                     ?_PIN_MANAGER_Initialize:	
  2008                           ; 1 bytes @ 0x0
  2009                           
  2010  0070                     ??_PIN_MANAGER_Initialize:	
  2011                           ; 1 bytes @ 0x0
  2012                           
  2013  0070                     ?_SYSTEM_Initialize:	
  2014                           ; 1 bytes @ 0x0
  2015                           
  2016  0070                     ??_SYSTEM_Initialize:	
  2017                           ; 1 bytes @ 0x0
  2018                           
  2019  0070                     ?_i2c_wait:	
  2020                           ; 1 bytes @ 0x0
  2021                           
  2022  0070                     ??_i2c_wait:	
  2023                           ; 1 bytes @ 0x0
  2024                           
  2025  0070                     ?_i2c_start:	
  2026                           ; 1 bytes @ 0x0
  2027                           
  2028  0070                     ??_i2c_start:	
  2029                           ; 1 bytes @ 0x0
  2030                           
  2031  0070                     ?_i2c_stop:	
  2032                           ; 1 bytes @ 0x0
  2033                           
  2034  0070                     ??_i2c_stop:	
  2035                           ; 1 bytes @ 0x0
  2036                           
  2037  0070                     ?_i2c_write:	
  2038                           ; 1 bytes @ 0x0
  2039                           
  2040  0070                     ??_i2c_write:	
  2041                           ; 1 bytes @ 0x0
  2042                           
  2043  0070                     ?_main:	
  2044                           ; 1 bytes @ 0x0
  2045                           
  2046  0070                     ?_CLK_SET_OUTPUT:	
  2047                           ; 1 bytes @ 0x0
  2048                           
  2049  0070                     ??_CLK_SET_OUTPUT:	
  2050                           ; 1 bytes @ 0x0
  2051                           
  2052  0070                     ?_CLK_SET_HIGH:	
  2053                           ; 1 bytes @ 0x0
  2054                           
  2055  0070                     ??_CLK_SET_HIGH:	
  2056                           ; 1 bytes @ 0x0
  2057                           
  2058  0070                     ?_CLK_SET_LOW:	
  2059                           ; 1 bytes @ 0x0
  2060                           
  2061  0070                     ??_CLK_SET_LOW:	
  2062                           ; 1 bytes @ 0x0
  2063                           
  2064  0070                     ?_DIO_SET_OUTPUT:	
  2065                           ; 1 bytes @ 0x0
  2066                           
  2067  0070                     ??_DIO_SET_OUTPUT:	
  2068                           ; 1 bytes @ 0x0
  2069                           
  2070  0070                     ?_DIO_SET_INPUT:	
  2071                           ; 1 bytes @ 0x0
  2072                           
  2073  0070                     ??_DIO_SET_INPUT:	
  2074                           ; 1 bytes @ 0x0
  2075                           
  2076  0070                     ?_DIO_SET_HIGH:	
  2077                           ; 1 bytes @ 0x0
  2078                           
  2079  0070                     ??_DIO_SET_HIGH:	
  2080                           ; 1 bytes @ 0x0
  2081                           
  2082  0070                     ?_DIO_SET_LOW:	
  2083                           ; 1 bytes @ 0x0
  2084                           
  2085  0070                     ??_DIO_SET_LOW:	
  2086                           ; 1 bytes @ 0x0
  2087                           
  2088  0070                     ?_start_segment:	
  2089                           ; 1 bytes @ 0x0
  2090                           
  2091  0070                     ?_stop_segment:	
  2092                           ; 1 bytes @ 0x0
  2093                           
  2094  0070                     ?_get_DIO_PIN_value:	
  2095                           ; 1 bytes @ 0x0
  2096                           
  2097  0070                     ??_get_DIO_PIN_value:	
  2098                           ; 1 bytes @ 0x0
  2099                           
  2100  0070                     ?_set_brigthness:	
  2101                           ; 1 bytes @ 0x0
  2102                           
  2103  0070                     ?_initialize_digit:	
  2104                           ; 1 bytes @ 0x0
  2105                           
  2106  0070                     ?_set_CELL_CLK_LOW:	
  2107                           ; 1 bytes @ 0x0
  2108                           
  2109  0070                     ??_set_CELL_CLK_LOW:	
  2110                           ; 1 bytes @ 0x0
  2111                           
  2112  0070                     ?_set_CELL_CLK_HIGH:	
  2113                           ; 1 bytes @ 0x0
  2114                           
  2115  0070                     ??_set_CELL_CLK_HIGH:	
  2116                           ; 1 bytes @ 0x0
  2117                           
  2118  0070                     ?_scale_convert_gram:	
  2119                           ; 1 bytes @ 0x0
  2120                           
  2121  0070                     ?_lcd_init:	
  2122                           ; 1 bytes @ 0x0
  2123                           
  2124  0070                     ?_lcd_backlight:	
  2125                           ; 1 bytes @ 0x0
  2126                           
  2127  0070                     ?_lcd_clear:	
  2128                           ; 1 bytes @ 0x0
  2129                           
  2130  0070                     ??___aodiv:	
  2131                           ; 1 bytes @ 0x0
  2132                           
  2133  0070                     ??___aomod:	
  2134                           ; 1 bytes @ 0x0
  2135                           
  2136  0070                     ??___lodiv:	
  2137                           ; 1 bytes @ 0x0
  2138                           
  2139  0070                     ??___lomod:	
  2140                           ; 1 bytes @ 0x0
  2141                           
  2142  0070                     ?__Umul8_16:	
  2143                           ; 1 bytes @ 0x0
  2144                           
  2145  0070                     ?_fputc:	
  2146                           ; 2 bytes @ 0x0
  2147                           
  2148  0070                     ?_strlen:	
  2149                           ; 2 bytes @ 0x0
  2150                           
  2151  0070                     ?_strncmp:	
  2152                           ; 2 bytes @ 0x0
  2153                           
  2154  0070                     ?_get_CELL_DAT_VAL:	
  2155                           ; 2 bytes @ 0x0
  2156                           
  2157  0070                     ?___awdiv:	
  2158                           ; 2 bytes @ 0x0
  2159                           
  2160  0070                     ?___awmod:	
  2161                           ; 2 bytes @ 0x0
  2162                           
  2163  0070                     ?___lldiv:	
  2164                           ; 2 bytes @ 0x0
  2165                           
  2166  0070                     ?___xxtofl:	
  2167                           ; 4 bytes @ 0x0
  2168                           
  2169  0070                     i2c_write@data:	
  2170                           ; 4 bytes @ 0x0
  2171                           
  2172  0070                     set_brigthness@brightness:	
  2173                           ; 1 bytes @ 0x0
  2174                           
  2175  0070                     __Umul8_16@multiplicand:	
  2176                           ; 1 bytes @ 0x0
  2177                           
  2178  0070                     putch@c:	
  2179                           ; 1 bytes @ 0x0
  2180                           
  2181  0070                     ___awdiv@divisor:	
  2182                           ; 1 bytes @ 0x0
  2183                           
  2184  0070                     ___awmod@divisor:	
  2185                           ; 2 bytes @ 0x0
  2186                           
  2187  0070                     fputc@c:	
  2188                           ; 2 bytes @ 0x0
  2189                           
  2190  0070                     strncmp@_l:	
  2191                           ; 2 bytes @ 0x0
  2192                           
  2193  0070                     ___lldiv@divisor:	
  2194                           ; 2 bytes @ 0x0
  2195                           
  2196  0070                     ___xxtofl@val:	
  2197                           ; 4 bytes @ 0x0
  2198                           
  2199                           
  2200                           ; 4 bytes @ 0x0
  2201  0070                     	ds	1
  2202  0071                     ?_lcd_cmd:
  2203  0071                     CLK_SET_OUTPUT@p:	
  2204                           ; 1 bytes @ 0x1
  2205                           
  2206  0071                     CLK_SET_HIGH@p:	
  2207                           ; 1 bytes @ 0x1
  2208                           
  2209  0071                     CLK_SET_LOW@p:	
  2210                           ; 1 bytes @ 0x1
  2211                           
  2212  0071                     DIO_SET_OUTPUT@p:	
  2213                           ; 1 bytes @ 0x1
  2214                           
  2215  0071                     DIO_SET_INPUT@p:	
  2216                           ; 1 bytes @ 0x1
  2217                           
  2218  0071                     DIO_SET_HIGH@p:	
  2219                           ; 1 bytes @ 0x1
  2220                           
  2221  0071                     DIO_SET_LOW@p:	
  2222                           ; 1 bytes @ 0x1
  2223                           
  2224  0071                     get_DIO_PIN_value@p:	
  2225                           ; 1 bytes @ 0x1
  2226                           
  2227  0071                     set_brigthness@on:	
  2228                           ; 1 bytes @ 0x1
  2229                           
  2230  0071                     set_CELL_CLK_LOW@p:	
  2231                           ; 1 bytes @ 0x1
  2232                           
  2233  0071                     set_CELL_CLK_HIGH@p:	
  2234                           ; 1 bytes @ 0x1
  2235                           
  2236  0071                     lcd_cmd@cmd:	
  2237                           ; 1 bytes @ 0x1
  2238                           
  2239  0071                     ___aodiv@counter:	
  2240                           ; 1 bytes @ 0x1
  2241                           
  2242  0071                     ___aomod@counter:	
  2243                           ; 1 bytes @ 0x1
  2244                           
  2245  0071                     ___lomod@counter:	
  2246                           ; 1 bytes @ 0x1
  2247                           
  2248  0071                     ___lodiv@quotient:	
  2249                           ; 1 bytes @ 0x1
  2250                           
  2251                           
  2252                           ; 8 bytes @ 0x1
  2253  0071                     	ds	1
  2254  0072                     ??__Umul8_16:
  2255  0072                     ??_strlen:	
  2256                           ; 1 bytes @ 0x2
  2257                           
  2258  0072                     ??_start_segment:	
  2259                           ; 1 bytes @ 0x2
  2260                           
  2261  0072                     ??_stop_segment:	
  2262                           ; 1 bytes @ 0x2
  2263                           
  2264  0072                     ?_write_byte:	
  2265                           ; 1 bytes @ 0x2
  2266                           
  2267  0072                     ??_set_brigthness:	
  2268                           ; 1 bytes @ 0x2
  2269                           
  2270  0072                     ??_get_CELL_DAT_VAL:	
  2271                           ; 1 bytes @ 0x2
  2272                           
  2273  0072                     ??_lcd_cmd:	
  2274                           ; 1 bytes @ 0x2
  2275                           
  2276  0072                     start_segment@p:	
  2277                           ; 1 bytes @ 0x2
  2278                           
  2279  0072                     stop_segment@p:	
  2280                           ; 1 bytes @ 0x2
  2281                           
  2282  0072                     write_byte@b:	
  2283                           ; 1 bytes @ 0x2
  2284                           
  2285  0072                     lcd_cmd@p:	
  2286                           ; 1 bytes @ 0x2
  2287                           
  2288  0072                     ___aodiv@sign:	
  2289                           ; 1 bytes @ 0x2
  2290                           
  2291  0072                     ___aomod@sign:	
  2292                           ; 1 bytes @ 0x2
  2293                           
  2294  0072                     fputc@fp:	
  2295                           ; 1 bytes @ 0x2
  2296                           
  2297  0072                     ___awdiv@dividend:	
  2298                           ; 1 bytes @ 0x2
  2299                           
  2300  0072                     ___awmod@dividend:	
  2301                           ; 2 bytes @ 0x2
  2302                           
  2303  0072                     strncmp@_r:	
  2304                           ; 2 bytes @ 0x2
  2305                           
  2306                           
  2307                           ; 2 bytes @ 0x2
  2308  0072                     	ds	1
  2309  0073                     ?_write4bits:
  2310  0073                     ?_command:	
  2311                           ; 1 bytes @ 0x3
  2312                           
  2313  0073                     ??_fputc:	
  2314                           ; 1 bytes @ 0x3
  2315                           
  2316  0073                     ??_write_byte:	
  2317                           ; 1 bytes @ 0x3
  2318                           
  2319  0073                     ??_lcd_backlight:	
  2320                           ; 1 bytes @ 0x3
  2321                           
  2322  0073                     ?_abs:	
  2323                           ; 1 bytes @ 0x3
  2324                           
  2325  0073                     set_brigthness@p:	
  2326                           ; 2 bytes @ 0x3
  2327                           
  2328  0073                     command@val:	
  2329                           ; 1 bytes @ 0x3
  2330                           
  2331  0073                     write4bits@val:	
  2332                           ; 1 bytes @ 0x3
  2333                           
  2334  0073                     strlen@a:	
  2335                           ; 1 bytes @ 0x3
  2336                           
  2337  0073                     abs@a:	
  2338                           ; 1 bytes @ 0x3
  2339                           
  2340  0073                     ___aodiv@quotient:	
  2341                           ; 2 bytes @ 0x3
  2342                           
  2343                           
  2344                           ; 8 bytes @ 0x3
  2345  0073                     	ds	1
  2346  0074                     ??_write4bits:
  2347  0074                     ??___awdiv:	
  2348                           ; 1 bytes @ 0x4
  2349                           
  2350  0074                     ??___awmod:	
  2351                           ; 1 bytes @ 0x4
  2352                           
  2353  0074                     ??___xxtofl:	
  2354                           ; 1 bytes @ 0x4
  2355                           
  2356  0074                     write_byte@ack:	
  2357                           ; 1 bytes @ 0x4
  2358                           
  2359  0074                     lcd_backlight@p:	
  2360                           ; 1 bytes @ 0x4
  2361                           
  2362  0074                     command@mode:	
  2363                           ; 1 bytes @ 0x4
  2364                           
  2365  0074                     strlen@s:	
  2366                           ; 1 bytes @ 0x4
  2367                           
  2368  0074                     __Umul8_16@product:	
  2369                           ; 1 bytes @ 0x4
  2370                           
  2371  0074                     strncmp@n:	
  2372                           ; 2 bytes @ 0x4
  2373                           
  2374  0074                     ___lldiv@dividend:	
  2375                           ; 2 bytes @ 0x4
  2376                           
  2377                           
  2378                           ; 4 bytes @ 0x4
  2379  0074                     	ds	1
  2380  0075                     ??_command:
  2381  0075                     ??_abs:	
  2382                           ; 1 bytes @ 0x5
  2383                           
  2384  0075                     write_byte@data:	
  2385                           ; 1 bytes @ 0x5
  2386                           
  2387  0075                     get_CELL_DAT_VAL@p:	
  2388                           ; 1 bytes @ 0x5
  2389                           
  2390  0075                     write4bits@p:	
  2391                           ; 1 bytes @ 0x5
  2392                           
  2393  0075                     ___awdiv@counter:	
  2394                           ; 1 bytes @ 0x5
  2395                           
  2396  0075                     ___awmod@counter:	
  2397                           ; 1 bytes @ 0x5
  2398                           
  2399                           
  2400                           ; 1 bytes @ 0x5
  2401  0075                     	ds	1
  2402  0076                     ??_strncmp:
  2403  0076                     ??_lcd_init:	
  2404                           ; 1 bytes @ 0x6
  2405                           
  2406  0076                     write_byte@i:	
  2407                           ; 1 bytes @ 0x6
  2408                           
  2409  0076                     ___awdiv@sign:	
  2410                           ; 1 bytes @ 0x6
  2411                           
  2412  0076                     ___awmod@sign:	
  2413                           ; 1 bytes @ 0x6
  2414                           
  2415  0076                     __Umul8_16@word_mpld:	
  2416                           ; 1 bytes @ 0x6
  2417                           
  2418                           
  2419                           ; 2 bytes @ 0x6
  2420  0076                     	ds	1
  2421  0077                     write_byte@p:
  2422  0077                     command@highnib:	
  2423                           ; 1 bytes @ 0x7
  2424                           
  2425  0077                     ___awdiv@quotient:	
  2426                           ; 1 bytes @ 0x7
  2427                           
  2428  0077                     strncmp@l:	
  2429                           ; 2 bytes @ 0x7
  2430                           
  2431                           
  2432                           ; 2 bytes @ 0x7
  2433  0077                     	ds	1
  2434  0078                     ?_set_segments:
  2435  0078                     ??___lldiv:	
  2436                           ; 1 bytes @ 0x8
  2437                           
  2438  0078                     ?_fputs:	
  2439                           ; 1 bytes @ 0x8
  2440                           
  2441  0078                     set_segments@segments:	
  2442                           ; 2 bytes @ 0x8
  2443                           
  2444  0078                     lcd_init@p:	
  2445                           ; 1 bytes @ 0x8
  2446                           
  2447  0078                     command@lownib:	
  2448                           ; 1 bytes @ 0x8
  2449                           
  2450  0078                     __Umul8_16@multiplier:	
  2451                           ; 1 bytes @ 0x8
  2452                           
  2453  0078                     ___xxtofl@sign:	
  2454                           ; 1 bytes @ 0x8
  2455                           
  2456  0078                     fputs@fp:	
  2457                           ; 1 bytes @ 0x8
  2458                           
  2459                           
  2460                           ; 1 bytes @ 0x8
  2461  0078                     	ds	1
  2462  0079                     ??_fputs:
  2463  0079                     ?_encode_digit:	
  2464                           ; 1 bytes @ 0x9
  2465                           
  2466  0079                     set_segments@length:	
  2467                           ; 1 bytes @ 0x9
  2468                           
  2469  0079                     encode_digit@digit:	
  2470                           ; 1 bytes @ 0x9
  2471                           
  2472  0079                     command@p:	
  2473                           ; 1 bytes @ 0x9
  2474                           
  2475  0079                     ___lodiv@counter:	
  2476                           ; 1 bytes @ 0x9
  2477                           
  2478  0079                     ___xxtofl@exp:	
  2479                           ; 1 bytes @ 0x9
  2480                           
  2481  0079                     strncmp@r:	
  2482                           ; 1 bytes @ 0x9
  2483                           
  2484  0079                     ___lldiv@quotient:	
  2485                           ; 2 bytes @ 0x9
  2486                           
  2487                           
  2488                           ; 4 bytes @ 0x9
  2489  0079                     	ds	1
  2490  007A                     ?_lcd_set_cursor:
  2491  007A                     ?_lcd_print:	
  2492                           ; 1 bytes @ 0xA
  2493                           
  2494  007A                     ??_encode_digit:	
  2495                           ; 1 bytes @ 0xA
  2496                           
  2497  007A                     set_segments@pos:	
  2498                           ; 1 bytes @ 0xA
  2499                           
  2500  007A                     encode_digit@p:	
  2501                           ; 1 bytes @ 0xA
  2502                           
  2503  007A                     lcd_set_cursor@col:	
  2504                           ; 1 bytes @ 0xA
  2505                           
  2506  007A                     lcd_print@str:	
  2507                           ; 1 bytes @ 0xA
  2508                           
  2509  007A                     ___xxtofl@arg:	
  2510                           ; 2 bytes @ 0xA
  2511                           
  2512                           
  2513                           ; 4 bytes @ 0xA
  2514  007A                     	ds	1
  2515  007B                     ??_set_segments:
  2516  007B                     lcd_set_cursor@row:	
  2517                           ; 1 bytes @ 0xB
  2518                           
  2519                           
  2520                           ; 1 bytes @ 0xB
  2521  007B                     	ds	1
  2522  007C                     ??_lcd_set_cursor:
  2523  007C                     ??_lcd_print:	
  2524                           ; 1 bytes @ 0xC
  2525                           
  2526  007C                     ??_pad:	
  2527                           ; 1 bytes @ 0xC
  2528                           
  2529                           
  2530                           ; 1 bytes @ 0xC
  2531  007C                     	ds	1
  2532  007D                     ?_print_digit:
  2533  007D                     ??_utoa:	
  2534                           ; 1 bytes @ 0xD
  2535                           
  2536  007D                     print_digit@number:	
  2537                           ; 1 bytes @ 0xD
  2538                           
  2539  007D                     lcd_print_with@p:	
  2540                           ; 1 bytes @ 0xD
  2541                           
  2542  007D                     ___lldiv@counter:	
  2543                           ; 1 bytes @ 0xD
  2544                           
  2545                           
  2546                           ; 1 bytes @ 0xD
  2547  007D                     	ds	1
  2548                           
  2549                           	psect	cstackBANK0
  2550  0020                     __pcstackBANK0:
  2551  0020                     ?_get_scale_val:
  2552  0020                     ?___fldiv:	
  2553                           ; 4 bytes @ 0x0
  2554                           
  2555  0020                     ?___aodiv:	
  2556                           ; 4 bytes @ 0x0
  2557                           
  2558  0020                     ?___aomod:	
  2559                           ; 8 bytes @ 0x0
  2560                           
  2561  0020                     ?___lodiv:	
  2562                           ; 8 bytes @ 0x0
  2563                           
  2564  0020                     ?___lomod:	
  2565                           ; 8 bytes @ 0x0
  2566                           
  2567  0020                     set_segments@k:	
  2568                           ; 8 bytes @ 0x0
  2569                           
  2570  0020                     get_scale_val@scale_avg_count:	
  2571                           ; 1 bytes @ 0x0
  2572                           
  2573  0020                     lcd_print@cmd:	
  2574                           ; 1 bytes @ 0x0
  2575                           
  2576  0020                     fputs@c:	
  2577                           ; 1 bytes @ 0x0
  2578                           
  2579  0020                     lcd_set_cursor@row_offsets:	
  2580                           ; 1 bytes @ 0x0
  2581                           
  2582  0020                     ___fldiv@a:	
  2583                           ; 4 bytes @ 0x0
  2584                           
  2585  0020                     ___aodiv@divisor:	
  2586                           ; 4 bytes @ 0x0
  2587                           
  2588  0020                     ___aomod@divisor:	
  2589                           ; 8 bytes @ 0x0
  2590                           
  2591  0020                     ___lodiv@divisor:	
  2592                           ; 8 bytes @ 0x0
  2593                           
  2594  0020                     ___lomod@divisor:	
  2595                           ; 8 bytes @ 0x0
  2596                           
  2597                           
  2598                           ; 8 bytes @ 0x0
  2599  0020                     	ds	1
  2600  0021                     set_segments@p:
  2601  0021                     lcd_print@p:	
  2602                           ; 1 bytes @ 0x1
  2603                           
  2604  0021                     fputs@i:	
  2605                           ; 1 bytes @ 0x1
  2606                           
  2607                           
  2608                           ; 2 bytes @ 0x1
  2609  0021                     	ds	1
  2610  0022                     ??_print_digit:
  2611                           
  2612                           ; 1 bytes @ 0x2
  2613  0022                     	ds	1
  2614  0023                     fputs@s:
  2615                           
  2616                           ; 1 bytes @ 0x3
  2617  0023                     	ds	1
  2618  0024                     ??_get_scale_val:
  2619  0024                     ?_pad:	
  2620                           ; 1 bytes @ 0x4
  2621                           
  2622  0024                     lcd_set_cursor@cmd:	
  2623                           ; 2 bytes @ 0x4
  2624                           
  2625  0024                     pad@buf:	
  2626                           ; 1 bytes @ 0x4
  2627                           
  2628  0024                     ___fldiv@b:	
  2629                           ; 1 bytes @ 0x4
  2630                           
  2631                           
  2632                           ; 4 bytes @ 0x4
  2633  0024                     	ds	1
  2634  0025                     lcd_set_cursor@p:
  2635  0025                     pad@p:	
  2636                           ; 1 bytes @ 0x5
  2637                           
  2638                           
  2639                           ; 2 bytes @ 0x5
  2640  0025                     	ds	1
  2641  0026                     ??_lcd_clear:
  2642  0026                     ?_lcd_print_with:	
  2643                           ; 1 bytes @ 0x6
  2644                           
  2645  0026                     lcd_print_with@str:	
  2646                           ; 1 bytes @ 0x6
  2647                           
  2648  0026                     print_digit@data:	
  2649                           ; 2 bytes @ 0x6
  2650                           
  2651                           
  2652                           ; 4 bytes @ 0x6
  2653  0026                     	ds	1
  2654  0027                     pad@i:
  2655                           
  2656                           ; 2 bytes @ 0x7
  2657  0027                     	ds	1
  2658  0028                     ??___fldiv:
  2659  0028                     lcd_clear@row:	
  2660                           ; 1 bytes @ 0x8
  2661                           
  2662  0028                     lcd_print_with@col:	
  2663                           ; 1 bytes @ 0x8
  2664                           
  2665  0028                     get_scale_val@weight_add:	
  2666                           ; 1 bytes @ 0x8
  2667                           
  2668  0028                     ___aodiv@dividend:	
  2669                           ; 4 bytes @ 0x8
  2670                           
  2671  0028                     ___aomod@dividend:	
  2672                           ; 8 bytes @ 0x8
  2673                           
  2674  0028                     ___lodiv@dividend:	
  2675                           ; 8 bytes @ 0x8
  2676                           
  2677  0028                     ___lomod@dividend:	
  2678                           ; 8 bytes @ 0x8
  2679                           
  2680                           
  2681                           ; 8 bytes @ 0x8
  2682  0028                     	ds	1
  2683  0029                     lcd_clear@col:
  2684  0029                     lcd_print_with@row:	
  2685                           ; 1 bytes @ 0x9
  2686                           
  2687  0029                     pad@w:	
  2688                           ; 1 bytes @ 0x9
  2689                           
  2690                           
  2691                           ; 2 bytes @ 0x9
  2692  0029                     	ds	1
  2693  002A                     ??_lcd_print_with:
  2694  002A                     print_digit@p:	
  2695                           ; 1 bytes @ 0xA
  2696                           
  2697  002A                     lcd_clear@p:	
  2698                           ; 1 bytes @ 0xA
  2699                           
  2700                           
  2701                           ; 1 bytes @ 0xA
  2702  002A                     	ds	1
  2703  002B                     print_digit@tmp:
  2704  002B                     pad@fp:	
  2705                           ; 1 bytes @ 0xB
  2706                           
  2707                           
  2708                           ; 1 bytes @ 0xB
  2709  002B                     	ds	1
  2710  002C                     ??_initialize_digit:
  2711  002C                     get_scale_val@j:	
  2712                           ; 1 bytes @ 0xC
  2713                           
  2714                           
  2715                           ; 1 bytes @ 0xC
  2716  002C                     	ds	1
  2717  002D                     initialize_digit@p:
  2718  002D                     get_scale_val@weight_count:	
  2719                           ; 1 bytes @ 0xD
  2720                           
  2721  002D                     ___fldiv@rem:	
  2722                           ; 4 bytes @ 0xD
  2723                           
  2724                           
  2725                           ; 4 bytes @ 0xD
  2726  002D                     	ds	3
  2727  0030                     ?_dtoa:
  2728  0030                     ?_utoa:	
  2729                           ; 2 bytes @ 0x10
  2730                           
  2731  0030                     dtoa@d:	
  2732                           ; 2 bytes @ 0x10
  2733                           
  2734  0030                     utoa@d:	
  2735                           ; 8 bytes @ 0x10
  2736                           
  2737                           
  2738                           ; 8 bytes @ 0x10
  2739  0030                     	ds	1
  2740  0031                     get_scale_val@i:
  2741  0031                     ___fldiv@sign:	
  2742                           ; 1 bytes @ 0x11
  2743                           
  2744                           
  2745                           ; 1 bytes @ 0x11
  2746  0031                     	ds	1
  2747  0032                     get_scale_val@p:
  2748  0032                     ___fldiv@new_exp:	
  2749                           ; 1 bytes @ 0x12
  2750                           
  2751                           
  2752                           ; 2 bytes @ 0x12
  2753  0032                     	ds	2
  2754  0034                     ___fldiv@grs:
  2755                           
  2756                           ; 4 bytes @ 0x14
  2757  0034                     	ds	4
  2758  0038                     ??_dtoa:
  2759  0038                     ___fldiv@bexp:	
  2760                           ; 1 bytes @ 0x18
  2761                           
  2762  0038                     utoa@p:	
  2763                           ; 1 bytes @ 0x18
  2764                           
  2765                           
  2766                           ; 2 bytes @ 0x18
  2767  0038                     	ds	1
  2768  0039                     ___fldiv@aexp:
  2769                           
  2770                           ; 1 bytes @ 0x19
  2771  0039                     	ds	1
  2772  003A                     ?___flmul:
  2773  003A                     utoa@fp:	
  2774                           ; 4 bytes @ 0x1A
  2775                           
  2776  003A                     ___flmul@b:	
  2777                           ; 1 bytes @ 0x1A
  2778                           
  2779                           
  2780                           ; 4 bytes @ 0x1A
  2781  003A                     	ds	1
  2782  003B                     _dtoa$1239:
  2783  003B                     utoa@w:	
  2784                           ; 2 bytes @ 0x1B
  2785                           
  2786                           
  2787                           ; 2 bytes @ 0x1B
  2788  003B                     	ds	2
  2789  003D                     dtoa@p:
  2790  003D                     utoa@n:	
  2791                           ; 2 bytes @ 0x1D
  2792                           
  2793                           
  2794                           ; 8 bytes @ 0x1D
  2795  003D                     	ds	1
  2796  003E                     ___flmul@a:
  2797                           
  2798                           ; 4 bytes @ 0x1E
  2799  003E                     	ds	1
  2800  003F                     dtoa@fp:
  2801                           
  2802                           ; 1 bytes @ 0x1F
  2803  003F                     	ds	1
  2804  0040                     dtoa@w:
  2805                           
  2806                           ; 2 bytes @ 0x20
  2807  0040                     	ds	2
  2808  0042                     ??___flmul:
  2809  0042                     dtoa@s:	
  2810                           ; 1 bytes @ 0x22
  2811                           
  2812                           
  2813                           ; 2 bytes @ 0x22
  2814  0042                     	ds	2
  2815  0044                     dtoa@n:
  2816                           
  2817                           ; 8 bytes @ 0x24
  2818  0044                     	ds	1
  2819  0045                     utoa@i:
  2820                           
  2821                           ; 2 bytes @ 0x25
  2822  0045                     	ds	2
  2823  0047                     ___flmul@sign:
  2824                           
  2825                           ; 1 bytes @ 0x27
  2826  0047                     	ds	1
  2827  0048                     ___flmul@grs:
  2828                           
  2829                           ; 4 bytes @ 0x28
  2830  0048                     	ds	4
  2831  004C                     ___flmul@aexp:
  2832  004C                     dtoa@i:	
  2833                           ; 1 bytes @ 0x2C
  2834                           
  2835                           
  2836                           ; 2 bytes @ 0x2C
  2837  004C                     	ds	1
  2838  004D                     ___flmul@bexp:
  2839                           
  2840                           ; 1 bytes @ 0x2D
  2841  004D                     	ds	1
  2842  004E                     ?_vfpfcnvrt:
  2843  004E                     vfpfcnvrt@fmt:	
  2844                           ; 2 bytes @ 0x2E
  2845                           
  2846  004E                     ___flmul@prod:	
  2847                           ; 1 bytes @ 0x2E
  2848                           
  2849                           
  2850                           ; 4 bytes @ 0x2E
  2851  004E                     	ds	1
  2852  004F                     vfpfcnvrt@ap:
  2853                           
  2854                           ; 1 bytes @ 0x2F
  2855  004F                     	ds	1
  2856  0050                     ??_vfpfcnvrt:
  2857                           
  2858                           ; 1 bytes @ 0x30
  2859  0050                     	ds	2
  2860  0052                     ___flmul@temp:
  2861                           
  2862                           ; 2 bytes @ 0x32
  2863  0052                     	ds	2
  2864  0054                     ?___fltol:
  2865  0054                     ___fltol@f1:	
  2866                           ; 4 bytes @ 0x34
  2867                           
  2868                           
  2869                           ; 4 bytes @ 0x34
  2870  0054                     	ds	4
  2871  0058                     ??___fltol:
  2872                           
  2873                           ; 1 bytes @ 0x38
  2874  0058                     	ds	4
  2875  005C                     vfpfcnvrt@ll:
  2876                           
  2877                           ; 8 bytes @ 0x3C
  2878  005C                     	ds	1
  2879  005D                     ___fltol@sign1:
  2880                           
  2881                           ; 1 bytes @ 0x3D
  2882  005D                     	ds	1
  2883  005E                     ___fltol@exp1:
  2884                           
  2885                           ; 1 bytes @ 0x3E
  2886  005E                     	ds	1
  2887  005F                     ??_scale_convert_gram:
  2888                           
  2889                           ; 1 bytes @ 0x3F
  2890  005F                     	ds	5
  2891  0064                     vfpfcnvrt@llu:
  2892                           
  2893                           ; 8 bytes @ 0x44
  2894  0064                     	ds	3
  2895  0067                     scale_convert_gram@temp:
  2896                           
  2897                           ; 4 bytes @ 0x47
  2898  0067                     	ds	4
  2899  006B                     scale_convert_gram@p:
  2900                           
  2901                           ; 1 bytes @ 0x4B
  2902  006B                     	ds	1
  2903  006C                     calc_percentage@p:
  2904  006C                     vfpfcnvrt@fp:	
  2905                           ; 1 bytes @ 0x4C
  2906                           
  2907                           
  2908                           ; 1 bytes @ 0x4C
  2909  006C                     	ds	1
  2910  006D                     ?_vfprintf:
  2911  006D                     vfprintf@fmt:	
  2912                           ; 2 bytes @ 0x4D
  2913                           
  2914                           
  2915                           ; 2 bytes @ 0x4D
  2916  006D                     	ds	2
  2917  006F                     vfprintf@ap:
  2918                           
  2919                           ; 1 bytes @ 0x4F
  2920  006F                     	ds	1
  2921                           
  2922                           	psect	maintext
  2923  1682                     __pmaintext:	
  2924 ;;
  2925 ;;Main: autosize = 0, tempsize = 2, incstack = 0, save=0
  2926 ;;
  2927 ;; *************** function _main *****************
  2928 ;; Defined at:
  2929 ;;		line 9 in file "main.c"
  2930 ;; Parameters:    Size  Location     Type
  2931 ;;		None
  2932 ;; Auto vars:     Size  Location     Type
  2933 ;;  loadcell       12   62[BANK1 ] struct .
  2934 ;;  drink           6   74[BANK1 ] struct .
  2935 ;;  lcd             4   56[BANK1 ] struct .
  2936 ;;  tm1637          2   60[BANK1 ] struct .
  2937 ;; Return value:  Size  Location     Type
  2938 ;;                  1    wreg      void 
  2939 ;; Registers used:
  2940 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  2941 ;; Tracked objects:
  2942 ;;		On entry : B1F/0
  2943 ;;		On exit  : 0/0
  2944 ;;		Unchanged: 0/0
  2945 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  2946 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2947 ;;      Locals:         0       0      24       0       0       0       0       0       0       0       0       0       
      +0       0
  2948 ;;      Temps:          0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0
  2949 ;;      Totals:         0       0      26       0       0       0       0       0       0       0       0       0       
      +0       0
  2950 ;;Total ram usage:       26 bytes
  2951 ;; Hardware stack levels required when called: 9
  2952 ;; This function calls:
  2953 ;;		_SYSTEM_Initialize
  2954 ;;		_calc_percentage
  2955 ;;		_initialize
  2956 ;;		_print_gram
  2957 ;; This function is called by:
  2958 ;;		Startup code after reset
  2959 ;; This function uses a non-reentrant model
  2960 ;;
  2961                           
  2962                           
  2963                           ;psect for function _main
  2964  1682                     _main:
  2965  1682                     l3831:	
  2966                           ;incstack = 0
  2967                           ; Regs used in _main: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  2968                           
  2969                           
  2970                           ;main.c: 11:     SYSTEM_Initialize();
  2971  1682  319F  275F  3196   	fcall	_SYSTEM_Initialize
  2972  1685                     l3833:
  2973                           
  2974                           ;main.c: 14:     ANSELA = 0x00;
  2975  1685  0023               	movlb	3	; select bank3
  2976  1686  018C               	clrf	12	;volatile
  2977  1687                     l3835:
  2978                           
  2979                           ;main.c: 15:     ANSELB = 0x00;
  2980  1687  018D               	clrf	13	;volatile
  2981  1688                     l3837:
  2982                           
  2983                           ;main.c: 19:     TRISB = 0x04;
  2984  1688  3004               	movlw	4
  2985  1689  0021               	movlb	1	; select bank1
  2986  168A  008D               	movwf	13	;volatile
  2987  168B                     l3839:
  2988                           
  2989                           ;main.c: 21:     LATA = 0x00;
  2990  168B  0022               	movlb	2	; select bank2
  2991  168C  018C               	clrf	12	;volatile
  2992  168D                     l3841:
  2993                           
  2994                           ;main.c: 22:     LATB = 0x00;
  2995  168D  018D               	clrf	13	;volatile
  2996  168E                     l3843:
  2997                           
  2998                           ;main.c: 25:     SSPADD = 0x13;
  2999  168E  3013               	movlw	19
  3000  168F  0024               	movlb	4	; select bank4
  3001  1690  0092               	movwf	18	;volatile
  3002  1691                     l3845:
  3003                           
  3004                           ;main.c: 26:     SSPCON1 = 0x28;
  3005  1691  3028               	movlw	40
  3006  1692  0095               	movwf	21	;volatile
  3007  1693                     l3847:
  3008                           
  3009                           ;main.c: 27:     SSPCON2 = 0x0;
  3010  1693  0196               	clrf	22	;volatile
  3011  1694                     l3849:
  3012                           
  3013                           ;main.c: 28:     SSPSTAT = 0;
  3014  1694  0194               	clrf	20	;volatile
  3015  1695                     l3851:
  3016                           
  3017                           ;main.c: 31:     LoadCell loadcell = {0x02, 0x04, 0, 0, 500};
  3018  1695  3020               	movlw	low main@F2847
  3019  1696  0086               	movwf	6
  3020  1697  3001               	movlw	high main@F2847
  3021  1698  0087               	movwf	7
  3022  1699  30DE               	movlw	low main@loadcell
  3023  169A  0084               	movwf	4
  3024  169B  3000               	movlw	high main@loadcell
  3025  169C  0085               	movwf	5
  3026  169D  300C               	movlw	12
  3027  169E  0021               	movlb	1	; select bank1
  3028  169F  00D6               	movwf	??_main^(0+128)
  3029  16A0                     u4590:
  3030  16A0  0016               	moviw fsr1++
  3031  16A1  001A               	movwi fsr0++
  3032  16A2  0BD6               	decfsz	??_main^(0+128),f
  3033  16A3  2EA0               	goto	u4590
  3034  16A4                     l3853:
  3035                           
  3036                           ;main.c: 33:     Lcd lcd = {0x27, 16, 2, 0};
  3037  16A4  0022               	movlb	2	; select bank2
  3038  16A5  0841               	movf	(main@F2849+3)^(0+256),w
  3039  16A6  0021               	movlb	1	; select bank1
  3040  16A7  00DB               	movwf	(main@lcd+3)^(0+128)
  3041  16A8  0022               	movlb	2	; select bank2
  3042  16A9  0840               	movf	(main@F2849+2)^(0+256),w
  3043  16AA  0021               	movlb	1	; select bank1
  3044  16AB  00DA               	movwf	(main@lcd+2)^(0+128)
  3045  16AC  0022               	movlb	2	; select bank2
  3046  16AD  083F               	movf	(main@F2849+1)^(0+256),w
  3047  16AE  0021               	movlb	1	; select bank1
  3048  16AF  00D9               	movwf	(main@lcd+1)^(0+128)
  3049  16B0  0022               	movlb	2	; select bank2
  3050  16B1  083E               	movf	main@F2849^(0+256),w
  3051  16B2  0021               	movlb	1	; select bank1
  3052  16B3  00D8               	movwf	main@lcd^(0+128)
  3053  16B4                     l3855:
  3054                           
  3055                           ;main.c: 35:     TM1637 tm1637 = {0x08, 0x10};
  3056  16B4  0022               	movlb	2	; select bank2
  3057  16B5  0843               	movf	(main@F2851+1)^(0+256),w
  3058  16B6  0021               	movlb	1	; select bank1
  3059  16B7  00DD               	movwf	(main@tm1637+1)^(0+128)
  3060  16B8  0022               	movlb	2	; select bank2
  3061  16B9  0842               	movf	main@F2851^(0+256),w
  3062  16BA  0021               	movlb	1	; select bank1
  3063  16BB  00DC               	movwf	main@tm1637^(0+128)
  3064  16BC                     l3857:
  3065                           
  3066                           ;main.c: 37:     DrinkMeter drink = {&loadcell, &lcd, &tm1637, 500, 0};
  3067  16BC  3044               	movlw	low main@F2853
  3068  16BD  0086               	movwf	6
  3069  16BE  3001               	movlw	high main@F2853
  3070  16BF  0087               	movwf	7
  3071  16C0  30EA               	movlw	low main@drink
  3072  16C1  0084               	movwf	4
  3073  16C2  3000               	movlw	high main@drink
  3074  16C3  0085               	movwf	5
  3075  16C4  3006               	movlw	6
  3076  16C5  00D6               	movwf	??_main^(0+128)
  3077  16C6                     u4600:
  3078  16C6  0016               	moviw fsr1++
  3079  16C7  001A               	movwi fsr0++
  3080  16C8  0BD6               	decfsz	??_main^(0+128),f
  3081  16C9  2EC6               	goto	u4600
  3082  16CA                     l3859:
  3083  16CA  30DE               	movlw	(low (main@loadcell| 0))& (0+255)
  3084  16CB  00D6               	movwf	??_main^(0+128)
  3085  16CC  0856               	movf	??_main^(0+128),w
  3086  16CD  00EA               	movwf	main@drink^(0+128)
  3087  16CE                     l3861:
  3088  16CE  30D8               	movlw	(low (main@lcd| 0))& (0+255)
  3089  16CF  00D6               	movwf	??_main^(0+128)
  3090  16D0  0856               	movf	??_main^(0+128),w
  3091  16D1  00EB               	movwf	(low ((main@drink| 0+1)))^(0+128)
  3092  16D2                     l3863:
  3093  16D2  30DC               	movlw	(low (main@tm1637| 0))& (0+255)
  3094  16D3  00D6               	movwf	??_main^(0+128)
  3095  16D4  0856               	movf	??_main^(0+128),w
  3096  16D5  00EC               	movwf	(low ((main@drink| 0+2)))^(0+128)
  3097  16D6                     l3865:
  3098  16D6  30F4               	movlw	244
  3099  16D7  00ED               	movwf	(main@drink^(0+128)+3)
  3100  16D8  3001               	movlw	1
  3101  16D9  00EE               	movwf	(main@drink^(0+128)+4)
  3102  16DA                     l3867:
  3103  16DA  01EF               	clrf	(main@drink^(0+128)+5)
  3104  16DB                     l3869:
  3105                           
  3106                           ;main.c: 39:     initialize(&drink);
  3107  16DB  30EA               	movlw	(low (main@drink| 0))& (0+255)
  3108  16DC  3197  277B  3196   	fcall	_initialize
  3109  16DF                     l3871:
  3110                           
  3111                           ;main.c: 42:         calc_percentage(&drink);
  3112  16DF  30EA               	movlw	(low (main@drink| 0))& (0+255)
  3113  16E0  3189  2191  3196   	fcall	_calc_percentage
  3114  16E3                     l3873:
  3115                           
  3116                           ;main.c: 43:         print_gram(&drink);
  3117  16E3  30EA               	movlw	(low (main@drink| 0))& (0+255)
  3118  16E4  3194  24C5  3196   	fcall	_print_gram
  3119  16E7                     l3875:
  3120                           
  3121                           ;main.c: 45:         _delay((unsigned long)((500)*(8000000/4000.0)));
  3122  16E7  3006               	movlw	6
  3123  16E8  0021               	movlb	1	; select bank1
  3124  16E9  00D7               	movwf	(??_main^(0+128)+1)
  3125  16EA  3013               	movlw	19
  3126  16EB  00D6               	movwf	??_main^(0+128)
  3127  16EC  30AD               	movlw	173
  3128  16ED                     u4617:
  3129  16ED  0B89               	decfsz	9,f
  3130  16EE  2EED               	goto	u4617
  3131  16EF  0BD6               	decfsz	??_main^(0+128),f
  3132  16F0  2EED               	goto	u4617
  3133  16F1  0BD7               	decfsz	(??_main^(0+128)+1),f
  3134  16F2  2EED               	goto	u4617
  3135  16F3  3200               	nop2
  3136  16F4  2EDF               	goto	l3871
  3137  16F5  3180  2802         	ljmp	start
  3138  16F7                     __end_of_main:
  3139                           
  3140                           	psect	text1
  3141  14C5                     __ptext1:	
  3142 ;; *************** function _print_gram *****************
  3143 ;; Defined at:
  3144 ;;		line 38 in file "drink_meter.c"
  3145 ;; Parameters:    Size  Location     Type
  3146 ;;  p               1    wreg     PTR struct .
  3147 ;;		 -> main@drink(6), 
  3148 ;; Auto vars:     Size  Location     Type
  3149 ;;  p               1   53[BANK1 ] PTR struct .
  3150 ;;		 -> main@drink(6), 
  3151 ;;  row2           16   37[BANK1 ] unsigned char [16]
  3152 ;;  row1           16   21[BANK1 ] unsigned char [16]
  3153 ;; Return value:  Size  Location     Type
  3154 ;;                  1    wreg      void 
  3155 ;; Registers used:
  3156 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  3157 ;; Tracked objects:
  3158 ;;		On entry : 0/0
  3159 ;;		On exit  : 0/0
  3160 ;;		Unchanged: 0/0
  3161 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  3162 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3163 ;;      Locals:         0       0      33       0       0       0       0       0       0       0       0       0       
      +0       0
  3164 ;;      Temps:          0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0
  3165 ;;      Totals:         0       0      35       0       0       0       0       0       0       0       0       0       
      +0       0
  3166 ;;Total ram usage:       35 bytes
  3167 ;; Hardware stack levels used: 1
  3168 ;; Hardware stack levels required when called: 8
  3169 ;; This function calls:
  3170 ;;		_lcd_clear
  3171 ;;		_lcd_print_with
  3172 ;;		_print_digit
  3173 ;;		_sprintf
  3174 ;; This function is called by:
  3175 ;;		_main
  3176 ;; This function uses a non-reentrant model
  3177 ;;
  3178                           
  3179                           
  3180                           ;psect for function _print_gram
  3181  14C5                     _print_gram:
  3182                           
  3183                           ;incstack = 0
  3184                           ; Regs used in _print_gram: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  3185                           ;print_gram@p stored from wreg
  3186  14C5  0021               	movlb	1	; select bank1
  3187  14C6  00D5               	movwf	print_gram@p^(0+128)
  3188  14C7                     l3811:
  3189                           
  3190                           ;drink_meter.c: 39:     char row1[16];;drink_meter.c: 40:     char row2[16];;drink_meter
      +                          .c: 42:     sprintf(row1, "%dg / %dg", p->loadcell->gram, p->max_gram);
  3191  14C7  301A               	movlw	low (STR_5| (0+32768))
  3192  14C8  00A5               	movwf	sprintf@fmt^(0+128)
  3193  14C9  30A0               	movlw	high (STR_5| (0+32768))
  3194  14CA  00A6               	movwf	(sprintf@fmt^(0+128)+1)
  3195  14CB  0855               	movf	print_gram@p^(0+128),w
  3196  14CC  0086               	movwf	6
  3197  14CD  0187               	clrf	7
  3198  14CE  0801               	movf	1,w
  3199  14CF  3E0A               	addlw	10
  3200  14D0  0086               	movwf	6
  3201  14D1  0187               	clrf	7
  3202  14D2  3F40               	moviw [0]fsr1
  3203  14D3  00A7               	movwf	(?_sprintf^(0+128)+2)
  3204  14D4  3F41               	moviw [1]fsr1
  3205  14D5  00A8               	movwf	((?_sprintf+1)^(0+128)+2)
  3206  14D6  0855               	movf	print_gram@p^(0+128),w
  3207  14D7  3E03               	addlw	3
  3208  14D8  0086               	movwf	6
  3209  14D9  0187               	clrf	7
  3210  14DA  3F40               	moviw [0]fsr1
  3211  14DB  00A9               	movwf	(?_sprintf^(0+128)+4)
  3212  14DC  3F41               	moviw [1]fsr1
  3213  14DD  00AA               	movwf	((?_sprintf+1)^(0+128)+4)
  3214  14DE  30B5               	movlw	(low (print_gram@row1| 0))& (0+255)
  3215  14DF  3191  215E  3194   	fcall	_sprintf
  3216                           
  3217                           ;drink_meter.c: 43:     sprintf(row2, "%d %%", p->percentage);
  3218  14E2  302C               	movlw	low (STR_6| (0+32768))
  3219  14E3  0021               	movlb	1	; select bank1
  3220  14E4  00A5               	movwf	sprintf@fmt^(0+128)
  3221  14E5  30A0               	movlw	high (STR_6| (0+32768))
  3222  14E6  00A6               	movwf	(sprintf@fmt^(0+128)+1)
  3223  14E7  0855               	movf	print_gram@p^(0+128),w
  3224  14E8  3E05               	addlw	5
  3225  14E9  0086               	movwf	6
  3226  14EA  0187               	clrf	7
  3227  14EB  0801               	movf	1,w
  3228  14EC  00B3               	movwf	??_print_gram^(0+128)
  3229  14ED  01B4               	clrf	(??_print_gram^(0+128)+1)
  3230  14EE  0833               	movf	??_print_gram^(0+128),w
  3231  14EF  00A7               	movwf	(?_sprintf^(0+128)+2)
  3232  14F0  0834               	movf	(??_print_gram+1)^(0+128),w
  3233  14F1  00A8               	movwf	((?_sprintf+1)^(0+128)+2)
  3234  14F2  30C5               	movlw	(low (print_gram@row2| 0))& (0+255)
  3235  14F3  3191  215E  3194   	fcall	_sprintf
  3236                           
  3237                           ;drink_meter.c: 45:     lcd_clear(p->lcd);
  3238  14F6  0021               	movlb	1	; select bank1
  3239  14F7  0A55               	incf	print_gram@p^(0+128),w
  3240  14F8  0086               	movwf	6
  3241  14F9  0187               	clrf	7
  3242  14FA  0801               	movf	1,w
  3243  14FB  3192  2221  3194   	fcall	_lcd_clear
  3244                           
  3245                           ;drink_meter.c: 47:     lcd_print_with(p->lcd, row1, 0, 0);
  3246  14FE  30B5               	movlw	low print_gram@row1
  3247  14FF  0020               	movlb	0	; select bank0
  3248  1500  00A6               	movwf	lcd_print_with@str
  3249  1501  3000               	movlw	high print_gram@row1
  3250  1502  00A7               	movwf	lcd_print_with@str+1
  3251  1503  01A8               	clrf	lcd_print_with@col
  3252  1504  01A9               	clrf	lcd_print_with@row
  3253  1505  0021               	movlb	1	; select bank1
  3254  1506  0A55               	incf	print_gram@p^(0+128),w
  3255  1507  0086               	movwf	6
  3256  1508  0187               	clrf	7
  3257  1509  0801               	movf	1,w
  3258  150A  3190  203D  3194   	fcall	_lcd_print_with
  3259                           
  3260                           ;drink_meter.c: 48:     lcd_print_with(p->lcd, row2, 0, 1);
  3261  150D  30C5               	movlw	low print_gram@row2
  3262  150E  0020               	movlb	0	; select bank0
  3263  150F  00A6               	movwf	lcd_print_with@str
  3264  1510  3000               	movlw	high print_gram@row2
  3265  1511  00A7               	movwf	lcd_print_with@str+1
  3266  1512  01A8               	clrf	lcd_print_with@col
  3267  1513  01A9               	clrf	lcd_print_with@row
  3268  1514  0AA9               	incf	lcd_print_with@row,f
  3269  1515  0021               	movlb	1	; select bank1
  3270  1516  0A55               	incf	print_gram@p^(0+128),w
  3271  1517  0086               	movwf	6
  3272  1518  0187               	clrf	7
  3273  1519  0801               	movf	1,w
  3274  151A  3190  203D  3194   	fcall	_lcd_print_with
  3275  151D                     l3813:
  3276                           
  3277                           ;drink_meter.c: 50:     print_digit(p->tm1637, p->percentage);
  3278  151D  0021               	movlb	1	; select bank1
  3279  151E  0855               	movf	print_gram@p^(0+128),w
  3280  151F  0086               	movwf	6
  3281  1520  0187               	clrf	7
  3282  1521  3F45               	moviw [5]fsr1
  3283  1522  00FD               	movwf	print_digit@number
  3284  1523  0855               	movf	print_gram@p^(0+128),w
  3285  1524  3E02               	addlw	2
  3286  1525  0086               	movwf	6
  3287  1526  0187               	clrf	7
  3288  1527  0801               	movf	1,w
  3289  1528  318B  238B  3194   	fcall	_print_digit
  3290  152B                     l366:
  3291  152B  0008               	return
  3292  152C                     __end_of_print_gram:
  3293                           
  3294                           	psect	text2
  3295  177B                     __ptext2:	
  3296 ;; *************** function _initialize *****************
  3297 ;; Defined at:
  3298 ;;		line 5 in file "drink_meter.c"
  3299 ;; Parameters:    Size  Location     Type
  3300 ;;  p               1    wreg     PTR struct .
  3301 ;;		 -> main@drink(6), 
  3302 ;; Auto vars:     Size  Location     Type
  3303 ;;  p               1   36[BANK1 ] PTR struct .
  3304 ;;		 -> main@drink(6), 
  3305 ;;  valstr         16   20[BANK1 ] unsigned char [16]
  3306 ;; Return value:  Size  Location     Type
  3307 ;;                  1    wreg      void 
  3308 ;; Registers used:
  3309 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  3310 ;; Tracked objects:
  3311 ;;		On entry : 0/0
  3312 ;;		On exit  : 0/0
  3313 ;;		Unchanged: 0/0
  3314 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  3315 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3316 ;;      Locals:         0       0      17       0       0       0       0       0       0       0       0       0       
      +0       0
  3317 ;;      Temps:          0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0
  3318 ;;      Totals:         0       0      18       0       0       0       0       0       0       0       0       0       
      +0       0
  3319 ;;Total ram usage:       18 bytes
  3320 ;; Hardware stack levels used: 1
  3321 ;; Hardware stack levels required when called: 8
  3322 ;; This function calls:
  3323 ;;		_get_scale_val
  3324 ;;		_initialize_digit
  3325 ;;		_lcd_backlight
  3326 ;;		_lcd_clear
  3327 ;;		_lcd_init
  3328 ;;		_lcd_print
  3329 ;;		_lcd_print_with
  3330 ;;		_sprintf
  3331 ;; This function is called by:
  3332 ;;		_main
  3333 ;; This function uses a non-reentrant model
  3334 ;;
  3335                           
  3336                           
  3337                           ;psect for function _initialize
  3338  177B                     _initialize:
  3339                           
  3340                           ;incstack = 0
  3341                           ; Regs used in _initialize: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  3342                           ;initialize@p stored from wreg
  3343  177B  0021               	movlb	1	; select bank1
  3344  177C  00C4               	movwf	initialize@p^(0+128)
  3345  177D                     l3791:
  3346                           
  3347                           ;drink_meter.c: 6:     lcd_init(p->lcd);
  3348  177D  0A44               	incf	initialize@p^(0+128),w
  3349  177E  0086               	movwf	6
  3350  177F  0187               	clrf	7
  3351  1780  0801               	movf	1,w
  3352  1781  318A  2236  3197   	fcall	_lcd_init
  3353                           
  3354                           ;drink_meter.c: 7:     lcd_backlight(p->lcd);
  3355  1784  0021               	movlb	1	; select bank1
  3356  1785  0A44               	incf	initialize@p^(0+128),w
  3357  1786  0086               	movwf	6
  3358  1787  0187               	clrf	7
  3359  1788  0801               	movf	1,w
  3360  1789  3190  2010  3197   	fcall	_lcd_backlight
  3361  178C                     l3793:
  3362                           
  3363                           ;drink_meter.c: 9:     lcd_print_with(p->lcd, "Initialize", 0, 0);
  3364  178C  300F               	movlw	low (STR_2| (0+32768))
  3365  178D  0020               	movlb	0	; select bank0
  3366  178E  00A6               	movwf	lcd_print_with@str
  3367  178F  30A0               	movlw	high (STR_2| (0+32768))
  3368  1790  00A7               	movwf	lcd_print_with@str+1
  3369  1791  01A8               	clrf	lcd_print_with@col
  3370  1792  01A9               	clrf	lcd_print_with@row
  3371  1793  0021               	movlb	1	; select bank1
  3372  1794  0A44               	incf	initialize@p^(0+128),w
  3373  1795  0086               	movwf	6
  3374  1796  0187               	clrf	7
  3375  1797  0801               	movf	1,w
  3376  1798  3190  203D  3197   	fcall	_lcd_print_with
  3377  179B                     l3795:
  3378                           
  3379                           ;drink_meter.c: 10:     lcd_print_with(p->lcd, "Load cell Unit", 0, 1);
  3380  179B  3000               	movlw	low (STR_3| (0+32768))
  3381  179C  0020               	movlb	0	; select bank0
  3382  179D  00A6               	movwf	lcd_print_with@str
  3383  179E  30A0               	movlw	high (STR_3| (0+32768))
  3384  179F  00A7               	movwf	lcd_print_with@str+1
  3385  17A0  01A8               	clrf	lcd_print_with@col
  3386  17A1  01A9               	clrf	lcd_print_with@row
  3387  17A2  0AA9               	incf	lcd_print_with@row,f
  3388  17A3  0021               	movlb	1	; select bank1
  3389  17A4  0A44               	incf	initialize@p^(0+128),w
  3390  17A5  0086               	movwf	6
  3391  17A6  0187               	clrf	7
  3392  17A7  0801               	movf	1,w
  3393  17A8  3190  203D  3197   	fcall	_lcd_print_with
  3394                           
  3395                           ;drink_meter.c: 12:     initialize_digit(p->tm1637);
  3396  17AB  0021               	movlb	1	; select bank1
  3397  17AC  0844               	movf	initialize@p^(0+128),w
  3398  17AD  3E02               	addlw	2
  3399  17AE  0086               	movwf	6
  3400  17AF  0187               	clrf	7
  3401  17B0  0801               	movf	1,w
  3402  17B1  319F  27D9  3197   	fcall	_initialize_digit
  3403                           
  3404                           ;drink_meter.c: 15:     p->loadcell->weight_zero = get_scale_val(p->loadcell, 50);
  3405  17B4  3032               	movlw	50
  3406  17B5  0021               	movlb	1	; select bank1
  3407  17B6  00B3               	movwf	??_initialize^(0+128)
  3408  17B7  0833               	movf	??_initialize^(0+128),w
  3409  17B8  0020               	movlb	0	; select bank0
  3410  17B9  00A0               	movwf	get_scale_val@scale_avg_count
  3411  17BA  0021               	movlb	1	; select bank1
  3412  17BB  0844               	movf	initialize@p^(0+128),w
  3413  17BC  0086               	movwf	6
  3414  17BD  0187               	clrf	7
  3415  17BE  0801               	movf	1,w
  3416  17BF  318C  2445  3197   	fcall	_get_scale_val
  3417  17C2  0021               	movlb	1	; select bank1
  3418  17C3  0844               	movf	initialize@p^(0+128),w
  3419  17C4  0086               	movwf	6
  3420  17C5  0187               	clrf	7
  3421  17C6  0801               	movf	1,w
  3422  17C7  3E02               	addlw	2
  3423  17C8  0086               	movwf	6
  3424  17C9  0187               	clrf	7
  3425  17CA  0020               	movlb	0	; select bank0
  3426  17CB  0820               	movf	?_get_scale_val,w
  3427  17CC  3FC0               	movwi [0]fsr1
  3428  17CD  0821               	movf	?_get_scale_val+1,w
  3429  17CE  3FC1               	movwi [1]fsr1
  3430  17CF  0822               	movf	?_get_scale_val+2,w
  3431  17D0  3FC2               	movwi [2]fsr1
  3432  17D1  0823               	movf	?_get_scale_val+3,w
  3433  17D2  3FC3               	movwi [3]fsr1
  3434  17D3                     l3797:
  3435                           
  3436                           ;drink_meter.c: 17:     char valstr[16];;drink_meter.c: 18:     sprintf(valstr, "%lu val
      +                          ", p->loadcell->weight_dat);
  3437  17D3  3024               	movlw	low (STR_4| (0+32768))
  3438  17D4  0021               	movlb	1	; select bank1
  3439  17D5  00A5               	movwf	sprintf@fmt^(0+128)
  3440  17D6  30A0               	movlw	high (STR_4| (0+32768))
  3441  17D7  00A6               	movwf	(sprintf@fmt^(0+128)+1)
  3442  17D8  0844               	movf	initialize@p^(0+128),w
  3443  17D9  0086               	movwf	6
  3444  17DA  0187               	clrf	7
  3445  17DB  0801               	movf	1,w
  3446  17DC  3E06               	addlw	6
  3447  17DD  0086               	movwf	6
  3448  17DE  0187               	clrf	7
  3449  17DF  3F40               	moviw [0]fsr1
  3450  17E0  00A7               	movwf	(?_sprintf^(0+128)+2)
  3451  17E1  3F41               	moviw [1]fsr1
  3452  17E2  00A8               	movwf	((?_sprintf+1)^(0+128)+2)
  3453  17E3  3F42               	moviw [2]fsr1
  3454  17E4  00A9               	movwf	((?_sprintf+2)^(0+128)+2)
  3455  17E5  3F43               	moviw [3]fsr1
  3456  17E6  00AA               	movwf	((?_sprintf+3)^(0+128)+2)
  3457  17E7  30B4               	movlw	(low (initialize@valstr| 0))& (0+255)
  3458  17E8  3191  215E  3197   	fcall	_sprintf
  3459  17EB                     l3799:
  3460                           
  3461                           ;drink_meter.c: 20:     lcd_clear(p->lcd);
  3462  17EB  0021               	movlb	1	; select bank1
  3463  17EC  0A44               	incf	initialize@p^(0+128),w
  3464  17ED  0086               	movwf	6
  3465  17EE  0187               	clrf	7
  3466  17EF  0801               	movf	1,w
  3467  17F0  3192  2221  3197   	fcall	_lcd_clear
  3468  17F3                     l3801:
  3469                           
  3470                           ;drink_meter.c: 21:     lcd_print(p->lcd, valstr);
  3471  17F3  30B4               	movlw	low initialize@valstr
  3472  17F4  00FA               	movwf	lcd_print@str
  3473  17F5  3000               	movlw	high initialize@valstr
  3474  17F6  00FB               	movwf	lcd_print@str+1
  3475  17F7  0021               	movlb	1	; select bank1
  3476  17F8  0A44               	incf	initialize@p^(0+128),w
  3477  17F9  0086               	movwf	6
  3478  17FA  0187               	clrf	7
  3479  17FB  0801               	movf	1,w
  3480  17FC  3191  2116  3197   	fcall	_lcd_print
  3481  17FF                     l358:
  3482  17FF  0008               	return
  3483  1800                     __end_of_initialize:
  3484                           
  3485                           	psect	text3
  3486  115E                     __ptext3:	
  3487 ;; *************** function _sprintf *****************
  3488 ;; Defined at:
  3489 ;;		line 9 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\nf_sprintf.c"
  3490 ;; Parameters:    Size  Location     Type
  3491 ;;  s               1    wreg     PTR unsigned char 
  3492 ;;		 -> print_gram@row2(16), print_gram@row1(16), initialize@valstr(16), 
  3493 ;;  fmt             2    5[BANK1 ] PTR const unsigned char 
  3494 ;;		 -> STR_6(6), STR_5(10), STR_4(8), 
  3495 ;; Auto vars:     Size  Location     Type
  3496 ;;  s               1   12[BANK1 ] PTR unsigned char 
  3497 ;;		 -> print_gram@row2(16), print_gram@row1(16), initialize@valstr(16), 
  3498 ;;  f               5   14[BANK1 ] struct _IO_FILE
  3499 ;;  ret             2    0        int 
  3500 ;;  ap              1   13[BANK1 ] PTR void [1]
  3501 ;;		 -> ?_sprintf(2), 
  3502 ;; Return value:  Size  Location     Type
  3503 ;;                  2    5[BANK1 ] int 
  3504 ;; Registers used:
  3505 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  3506 ;; Tracked objects:
  3507 ;;		On entry : 0/0
  3508 ;;		On exit  : 0/0
  3509 ;;		Unchanged: 0/0
  3510 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  3511 ;;      Params:         0       0       6       0       0       0       0       0       0       0       0       0       
      +0       0
  3512 ;;      Locals:         0       0       7       0       0       0       0       0       0       0       0       0       
      +0       0
  3513 ;;      Temps:          0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0
  3514 ;;      Totals:         0       0      14       0       0       0       0       0       0       0       0       0       
      +0       0
  3515 ;;Total ram usage:       14 bytes
  3516 ;; Hardware stack levels used: 1
  3517 ;; Hardware stack levels required when called: 7
  3518 ;; This function calls:
  3519 ;;		_vfprintf
  3520 ;; This function is called by:
  3521 ;;		_initialize
  3522 ;;		_print_gram
  3523 ;; This function uses a non-reentrant model
  3524 ;;
  3525                           
  3526                           
  3527                           ;psect for function _sprintf
  3528  115E                     _sprintf:
  3529                           
  3530                           ;incstack = 0
  3531                           ; Regs used in _sprintf: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  3532                           ;sprintf@s stored from wreg
  3533  115E  0021               	movlb	1	; select bank1
  3534  115F  00AC               	movwf	sprintf@s^(0+128)
  3535  1160                     l3637:
  3536  1160  30A7               	movlw	(low ((?_sprintf| 0+2)))& (0+255)
  3537  1161  00AB               	movwf	??_sprintf^(0+128)
  3538  1162  082B               	movf	??_sprintf^(0+128),w
  3539  1163  00AD               	movwf	sprintf@ap^(0+128)
  3540  1164  082C               	movf	sprintf@s^(0+128),w
  3541  1165  00AB               	movwf	??_sprintf^(0+128)
  3542  1166  082B               	movf	??_sprintf^(0+128),w
  3543  1167  00AE               	movwf	sprintf@f^(0+128)
  3544  1168                     l3639:
  3545  1168  01AF               	clrf	(sprintf@f^(0+128)+1)
  3546  1169  01B0               	clrf	((sprintf@f+1)^(0+128)+1)
  3547  116A                     l3641:
  3548  116A  01B1               	clrf	(sprintf@f^(0+128)+3)
  3549  116B  01B2               	clrf	((sprintf@f+1)^(0+128)+3)
  3550  116C                     l3643:
  3551  116C  0826               	movf	(sprintf@fmt+1)^(0+128),w
  3552  116D  0020               	movlb	0	; select bank0
  3553  116E  00EE               	movwf	vfprintf@fmt+1
  3554  116F  0021               	movlb	1	; select bank1
  3555  1170  0825               	movf	sprintf@fmt^(0+128),w
  3556  1171  0020               	movlb	0	; select bank0
  3557  1172  00ED               	movwf	vfprintf@fmt
  3558  1173  30AD               	movlw	(low (sprintf@ap| 0))& (0+255)
  3559  1174  0021               	movlb	1	; select bank1
  3560  1175  00AB               	movwf	??_sprintf^(0+128)
  3561  1176  082B               	movf	??_sprintf^(0+128),w
  3562  1177  0020               	movlb	0	; select bank0
  3563  1178  00EF               	movwf	vfprintf@ap
  3564  1179  30AE               	movlw	(low (sprintf@f| 0))& (0+255)
  3565  117A  3191  21E8  3191   	fcall	_vfprintf
  3566  117D                     l3645:
  3567  117D  0021               	movlb	1	; select bank1
  3568  117E  082F               	movf	(sprintf@f^(0+128)+1),w
  3569  117F  072C               	addwf	sprintf@s^(0+128),w
  3570  1180  00AB               	movwf	??_sprintf^(0+128)
  3571  1181  082B               	movf	??_sprintf^(0+128),w
  3572  1182  0086               	movwf	6
  3573  1183  0187               	clrf	7
  3574  1184  0181               	clrf	1
  3575  1185                     l982:
  3576  1185  0008               	return
  3577  1186                     __end_of_sprintf:
  3578                           
  3579                           	psect	text4
  3580  11E8                     __ptext4:	
  3581 ;; *************** function _vfprintf *****************
  3582 ;; Defined at:
  3583 ;;		line 1390 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c"
  3584 ;; Parameters:    Size  Location     Type
  3585 ;;  fp              1    wreg     PTR struct _IO_FILE
  3586 ;;		 -> sprintf@f(5), 
  3587 ;;  fmt             2   77[BANK0 ] PTR const unsigned char 
  3588 ;;		 -> STR_6(6), STR_5(10), STR_4(8), 
  3589 ;;  ap              1   79[BANK0 ] PTR PTR void 
  3590 ;;		 -> sprintf@ap(1), 
  3591 ;; Auto vars:     Size  Location     Type
  3592 ;;  fp              1    2[BANK1 ] PTR struct _IO_FILE
  3593 ;;		 -> sprintf@f(5), 
  3594 ;;  cfmt            2    3[BANK1 ] PTR unsigned char 
  3595 ;;		 -> STR_6(6), STR_5(10), STR_4(8), 
  3596 ;; Return value:  Size  Location     Type
  3597 ;;                  2   77[BANK0 ] int 
  3598 ;; Registers used:
  3599 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  3600 ;; Tracked objects:
  3601 ;;		On entry : 0/0
  3602 ;;		On exit  : 0/0
  3603 ;;		Unchanged: 0/0
  3604 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  3605 ;;      Params:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3606 ;;      Locals:         0       0       3       0       0       0       0       0       0       0       0       0       
      +0       0
  3607 ;;      Temps:          0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0
  3608 ;;      Totals:         0       3       5       0       0       0       0       0       0       0       0       0       
      +0       0
  3609 ;;Total ram usage:        8 bytes
  3610 ;; Hardware stack levels used: 1
  3611 ;; Hardware stack levels required when called: 6
  3612 ;; This function calls:
  3613 ;;		_vfpfcnvrt
  3614 ;; This function is called by:
  3615 ;;		_sprintf
  3616 ;; This function uses a non-reentrant model
  3617 ;;
  3618                           
  3619                           
  3620                           ;psect for function _vfprintf
  3621  11E8                     _vfprintf:
  3622                           
  3623                           ;incstack = 0
  3624                           ; Regs used in _vfprintf: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  3625                           ;vfprintf@fp stored from wreg
  3626  11E8  0021               	movlb	1	; select bank1
  3627  11E9  00A2               	movwf	vfprintf@fp^(0+128)
  3628  11EA                     l3457:
  3629                           
  3630                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 1390: int vfprint
      +                          f(FILE *fp, const char *fmt, va_list ap);C:\Program Files\Microchip\xc8\v2.32\pic\source
      +                          s\c99\common\doprnt.c: 1391: {;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\comm
      +                          on\doprnt.c: 1393:     char *cfmt;;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\
      +                          common\doprnt.c: 1395:     cfmt = (char *)fmt;
  3631  11EA  0020               	movlb	0	; select bank0
  3632  11EB  086E               	movf	vfprintf@fmt+1,w
  3633  11EC  0021               	movlb	1	; select bank1
  3634  11ED  00A4               	movwf	(vfprintf@cfmt+1)^(0+128)
  3635  11EE  0020               	movlb	0	; select bank0
  3636  11EF  086D               	movf	vfprintf@fmt,w
  3637  11F0  0021               	movlb	1	; select bank1
  3638  11F1  00A3               	movwf	vfprintf@cfmt^(0+128)
  3639  11F2                     l3459:
  3640                           
  3641                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 1396:     nout = 
      +                          0;
  3642  11F2  0022               	movlb	2	; select bank2
  3643  11F3  01CE               	clrf	_nout^(0+256)
  3644  11F4  01CF               	clrf	(_nout+1)^(0+256)
  3645                           
  3646                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 1397:     while (
      +                          *cfmt) {
  3647  11F5  2A0E               	goto	l3463
  3648  11F6                     l3461:
  3649                           
  3650                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 1398:         nou
      +                          t += vfpfcnvrt(fp, &cfmt, ap);
  3651  11F6  30A3               	movlw	(low (vfprintf@cfmt| 0))& (0+255)
  3652  11F7  00A0               	movwf	??_vfprintf^(0+128)
  3653  11F8  0820               	movf	??_vfprintf^(0+128),w
  3654  11F9  0020               	movlb	0	; select bank0
  3655  11FA  00CE               	movwf	vfpfcnvrt@fmt
  3656  11FB  086F               	movf	vfprintf@ap,w
  3657  11FC  0021               	movlb	1	; select bank1
  3658  11FD  00A1               	movwf	(??_vfprintf+1)^(0+128)
  3659  11FE  0821               	movf	(??_vfprintf+1)^(0+128),w
  3660  11FF  0020               	movlb	0	; select bank0
  3661  1200  00CF               	movwf	vfpfcnvrt@ap
  3662  1201  0021               	movlb	1	; select bank1
  3663  1202  0822               	movf	vfprintf@fp^(0+128),w
  3664  1203  3183  238E  3191   	fcall	_vfpfcnvrt
  3665  1206  0020               	movlb	0	; select bank0
  3666  1207  084E               	movf	?_vfpfcnvrt,w
  3667  1208  0022               	movlb	2	; select bank2
  3668  1209  07CE               	addwf	_nout^(0+256),f
  3669  120A  0020               	movlb	0	; select bank0
  3670  120B  084F               	movf	?_vfpfcnvrt+1,w
  3671  120C  0022               	movlb	2	; select bank2
  3672  120D  3DCF               	addwfc	(_nout+1)^(0+256),f
  3673  120E                     l3463:
  3674                           
  3675                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 1397:     while (
      +                          *cfmt) {
  3676  120E  0021               	movlb	1	; select bank1
  3677  120F  0823               	movf	vfprintf@cfmt^(0+128),w
  3678  1210  0084               	movwf	4
  3679  1211  0824               	movf	(vfprintf@cfmt+1)^(0+128),w
  3680  1212  0085               	movwf	5
  3681  1213  0012               	moviw fsr0++
  3682  1214  1D03               	btfss	3,2
  3683  1215  2A17               	goto	u4201
  3684  1216  2A18               	goto	u4200
  3685  1217                     u4201:
  3686  1217  29F6               	goto	l3461
  3687  1218                     u4200:
  3688  1218                     l3465:
  3689                           
  3690                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 1400:     return 
      +                          nout;
  3691  1218  0022               	movlb	2	; select bank2
  3692  1219  084F               	movf	(_nout+1)^(0+256),w
  3693  121A  0020               	movlb	0	; select bank0
  3694  121B  00EE               	movwf	?_vfprintf+1
  3695  121C  0022               	movlb	2	; select bank2
  3696  121D  084E               	movf	_nout^(0+256),w
  3697  121E  0020               	movlb	0	; select bank0
  3698  121F  00ED               	movwf	?_vfprintf
  3699  1220                     l1076:
  3700  1220  0008               	return
  3701  1221                     __end_of_vfprintf:
  3702                           
  3703                           	psect	text5
  3704  038E                     __ptext5:	
  3705 ;; *************** function _vfpfcnvrt *****************
  3706 ;; Defined at:
  3707 ;;		line 692 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c"
  3708 ;; Parameters:    Size  Location     Type
  3709 ;;  fp              1    wreg     PTR struct _IO_FILE
  3710 ;;		 -> sprintf@f(5), 
  3711 ;;  fmt             1   46[BANK0 ] PTR PTR unsigned char 
  3712 ;;		 -> vfprintf@cfmt(2), 
  3713 ;;  ap              1   47[BANK0 ] PTR PTR void 
  3714 ;;		 -> sprintf@ap(1), 
  3715 ;; Auto vars:     Size  Location     Type
  3716 ;;  fp              1   76[BANK0 ] PTR struct _IO_FILE
  3717 ;;		 -> sprintf@f(5), 
  3718 ;;  llu             8   68[BANK0 ] unsigned long long 
  3719 ;;  ll              8   60[BANK0 ] long long 
  3720 ;;  f               4    0        long long 
  3721 ;;  ct              3    0        unsigned char [3]
  3722 ;;  vp              2    0        PTR void 
  3723 ;;  i               2    0        int 
  3724 ;;  done            2    0        int 
  3725 ;;  cp              2    0        PTR unsigned char 
  3726 ;;  c               1    0        unsigned char 
  3727 ;; Return value:  Size  Location     Type
  3728 ;;                  2   46[BANK0 ] int 
  3729 ;; Registers used:
  3730 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  3731 ;; Tracked objects:
  3732 ;;		On entry : 0/0
  3733 ;;		On exit  : 0/0
  3734 ;;		Unchanged: 0/0
  3735 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  3736 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3737 ;;      Locals:         0      17       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3738 ;;      Temps:          0      12       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3739 ;;      Totals:         0      31       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3740 ;;Total ram usage:       31 bytes
  3741 ;; Hardware stack levels used: 1
  3742 ;; Hardware stack levels required when called: 5
  3743 ;; This function calls:
  3744 ;;		_dtoa
  3745 ;;		_fputc
  3746 ;;		_strncmp
  3747 ;;		_utoa
  3748 ;; This function is called by:
  3749 ;;		_vfprintf
  3750 ;; This function uses a non-reentrant model
  3751 ;;
  3752                           
  3753                           
  3754                           ;psect for function _vfpfcnvrt
  3755  038E                     _vfpfcnvrt:
  3756                           
  3757                           ;incstack = 0
  3758                           ; Regs used in _vfpfcnvrt: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  3759                           ;vfpfcnvrt@fp stored from wreg
  3760  038E  0020               	movlb	0	; select bank0
  3761  038F  00EC               	movwf	vfpfcnvrt@fp
  3762  0390                     l3023:
  3763                           
  3764                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 692: static int v
      +                          fpfcnvrt(FILE *fp, char *fmt[], va_list ap);C:\Program Files\Microchip\xc8\v2.32\pic\sou
      +                          rces\c99\common\doprnt.c: 693: {;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\co
      +                          mmon\doprnt.c: 694:     char c, *cp, ct[3];;C:\Program Files\Microchip\xc8\v2.32\pic\sou
      +                          rces\c99\common\doprnt.c: 695:     int done, i;;C:\Program Files\Microchip\xc8\v2.32\pic
      +                          \sources\c99\common\doprnt.c: 696:     long long ll;;C:\Program Files\Microchip\xc8\v2.3
      +                          2\pic\sources\c99\common\doprnt.c: 697:     unsigned long long llu;
  3765  0390  084E               	movf	vfpfcnvrt@fmt,w
  3766  0391  0086               	movwf	6
  3767  0392  0187               	clrf	7
  3768  0393  3F40               	moviw [0]fsr1
  3769  0394  00D0               	movwf	??_vfpfcnvrt
  3770  0395  3F41               	moviw [1]fsr1
  3771  0396  00D1               	movwf	??_vfpfcnvrt+1
  3772  0397  0850               	movf	??_vfpfcnvrt,w
  3773  0398  0084               	movwf	4
  3774  0399  0851               	movf	??_vfpfcnvrt+1,w
  3775  039A  0085               	movwf	5
  3776  039B  0012               	moviw fsr0++
  3777  039C  3A25               	xorlw	37
  3778  039D  1D03               	btfss	3,2
  3779  039E  2BA0               	goto	u3381
  3780  039F  2BA1               	goto	u3380
  3781  03A0                     u3381:
  3782  03A0  2D66               	goto	l3091
  3783  03A1                     u3380:
  3784  03A1                     l3025:
  3785                           
  3786                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 703:         ++*f
      +                          mt;
  3787  03A1  084E               	movf	vfpfcnvrt@fmt,w
  3788  03A2  0086               	movwf	6
  3789  03A3  0187               	clrf	7
  3790  03A4  3001               	movlw	1
  3791  03A5  0781               	addwf	1,f
  3792  03A6  3141               	addfsr 1,1
  3793  03A7  1803               	skipnc
  3794  03A8  0A81               	incf	1,f
  3795  03A9                     l3027:
  3796                           
  3797                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 705:         flag
      +                          s = width = 0;
  3798  03A9  0022               	movlb	2	; select bank2
  3799  03AA  01D0               	clrf	_width^(0+256)
  3800  03AB  01D1               	clrf	(_width+1)^(0+256)
  3801  03AC  01D4               	clrf	_flags^(0+256)
  3802  03AD  01D5               	clrf	(_flags+1)^(0+256)
  3803  03AE                     l3029:
  3804                           
  3805                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 706:         prec
      +                           = -1;
  3806  03AE  30FF               	movlw	255
  3807  03AF  00D2               	movwf	_prec^(0+256)
  3808  03B0  30FF               	movlw	255
  3809  03B1  00D3               	movwf	(_prec^(0+256)+1)
  3810  03B2                     l3031:
  3811                           
  3812                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 847:         if (
      +                          (*fmt[0] == 'd') || (*fmt[0] == 'i')) {
  3813  03B2  0020               	movlb	0	; select bank0
  3814  03B3  084E               	movf	vfpfcnvrt@fmt,w
  3815  03B4  0086               	movwf	6
  3816  03B5  0187               	clrf	7
  3817  03B6  3F40               	moviw [0]fsr1
  3818  03B7  00D0               	movwf	??_vfpfcnvrt
  3819  03B8  3F41               	moviw [1]fsr1
  3820  03B9  00D1               	movwf	??_vfpfcnvrt+1
  3821  03BA  0850               	movf	??_vfpfcnvrt,w
  3822  03BB  0084               	movwf	4
  3823  03BC  0851               	movf	??_vfpfcnvrt+1,w
  3824  03BD  0085               	movwf	5
  3825  03BE  0012               	moviw fsr0++
  3826  03BF  3A64               	xorlw	100
  3827  03C0  1903               	btfsc	3,2
  3828  03C1  2BC3               	goto	u3391
  3829  03C2  2BC4               	goto	u3390
  3830  03C3                     u3391:
  3831  03C3  2BD5               	goto	l3035
  3832  03C4                     u3390:
  3833  03C4                     l3033:
  3834  03C4  084E               	movf	vfpfcnvrt@fmt,w
  3835  03C5  0086               	movwf	6
  3836  03C6  0187               	clrf	7
  3837  03C7  3F40               	moviw [0]fsr1
  3838  03C8  00D0               	movwf	??_vfpfcnvrt
  3839  03C9  3F41               	moviw [1]fsr1
  3840  03CA  00D1               	movwf	??_vfpfcnvrt+1
  3841  03CB  0850               	movf	??_vfpfcnvrt,w
  3842  03CC  0084               	movwf	4
  3843  03CD  0851               	movf	??_vfpfcnvrt+1,w
  3844  03CE  0085               	movwf	5
  3845  03CF  0012               	moviw fsr0++
  3846  03D0  3A69               	xorlw	105
  3847  03D1  1D03               	btfss	3,2
  3848  03D2  2BD4               	goto	u3401
  3849  03D3  2BD5               	goto	u3400
  3850  03D4                     u3401:
  3851  03D4  2C10               	goto	l3043
  3852  03D5                     u3400:
  3853  03D5                     l3035:
  3854                           
  3855                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 849:             
      +                          ++*fmt;
  3856  03D5  084E               	movf	vfpfcnvrt@fmt,w
  3857  03D6  0086               	movwf	6
  3858  03D7  0187               	clrf	7
  3859  03D8  3001               	movlw	1
  3860  03D9  0781               	addwf	1,f
  3861  03DA  3141               	addfsr 1,1
  3862  03DB  1803               	skipnc
  3863  03DC  0A81               	incf	1,f
  3864  03DD                     l3037:
  3865                           
  3866                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 850:             
      +                          ll = (long long)(*(int *)__va_arg(*(int **)ap, (int)0));
  3867  03DD  084F               	movf	vfpfcnvrt@ap,w
  3868  03DE  0086               	movwf	6
  3869  03DF  0187               	clrf	7
  3870  03E0  0801               	movf	1,w
  3871  03E1  0084               	movwf	4
  3872  03E2  0185               	clrf	5
  3873  03E3  3002               	movlw	2
  3874  03E4  0781               	addwf	1,f
  3875  03E5  3F00               	moviw [0]fsr0
  3876  03E6  00D0               	movwf	??_vfpfcnvrt
  3877  03E7  3F01               	moviw [1]fsr0
  3878  03E8  00D1               	movwf	??_vfpfcnvrt+1
  3879  03E9  0850               	movf	??_vfpfcnvrt,w
  3880  03EA  00DC               	movwf	vfpfcnvrt@ll
  3881  03EB  0851               	movf	??_vfpfcnvrt+1,w
  3882  03EC  00DD               	movwf	vfpfcnvrt@ll+1
  3883  03ED  0D89               	rlf	9,f
  3884  03EE  3B89               	subwfb	9,f
  3885  03EF  0989               	comf	9,f
  3886  03F0  00DE               	movwf	vfpfcnvrt@ll+2
  3887  03F1  00DF               	movwf	vfpfcnvrt@ll+3
  3888  03F2  00E0               	movwf	vfpfcnvrt@ll+4
  3889  03F3  00E1               	movwf	vfpfcnvrt@ll+5
  3890  03F4  00E2               	movwf	vfpfcnvrt@ll+6
  3891  03F5  00E3               	movwf	vfpfcnvrt@ll+7
  3892  03F6                     l3039:
  3893                           
  3894                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 852:             
      +                          return dtoa(fp, ll);
  3895  03F6  085C               	movf	vfpfcnvrt@ll,w
  3896  03F7  00B0               	movwf	dtoa@d
  3897  03F8  085D               	movf	vfpfcnvrt@ll+1,w
  3898  03F9  00B1               	movwf	dtoa@d+1
  3899  03FA  085E               	movf	vfpfcnvrt@ll+2,w
  3900  03FB  00B2               	movwf	dtoa@d+2
  3901  03FC  085F               	movf	vfpfcnvrt@ll+3,w
  3902  03FD  00B3               	movwf	dtoa@d+3
  3903  03FE  0860               	movf	vfpfcnvrt@ll+4,w
  3904  03FF  00B4               	movwf	dtoa@d+4
  3905  0400  0861               	movf	vfpfcnvrt@ll+5,w
  3906  0401  00B5               	movwf	dtoa@d+5
  3907  0402  0862               	movf	vfpfcnvrt@ll+6,w
  3908  0403  00B6               	movwf	dtoa@d+6
  3909  0404  0863               	movf	vfpfcnvrt@ll+7,w
  3910  0405  00B7               	movwf	dtoa@d+7
  3911  0406  086C               	movf	vfpfcnvrt@fp,w
  3912  0407  3180  206A  3183   	fcall	_dtoa
  3913  040A  0020               	movlb	0	; select bank0
  3914  040B  0831               	movf	?_dtoa+1,w
  3915  040C  00CF               	movwf	?_vfpfcnvrt+1
  3916  040D  0830               	movf	?_dtoa,w
  3917  040E  00CE               	movwf	?_vfpfcnvrt
  3918  040F  2D89               	goto	l1064
  3919  0410                     l3043:
  3920                           
  3921                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 857:         if (
      +                          !strncmp(*fmt, "ld", ((sizeof("ld")/sizeof("ld"[0]))-1)) || !strncmp(*fmt, "li", ((sizeo
      +                          f("li")/sizeof("li"[0]))-1))) {
  3922  0410  084E               	movf	vfpfcnvrt@fmt,w
  3923  0411  0086               	movwf	6
  3924  0412  0187               	clrf	7
  3925  0413  3F40               	moviw [0]fsr1
  3926  0414  00F0               	movwf	strncmp@_l
  3927  0415  3F41               	moviw [1]fsr1
  3928  0416  00F1               	movwf	strncmp@_l+1
  3929  0417  3032               	movlw	low (STR_7| (0+32768))
  3930  0418  00F2               	movwf	strncmp@_r
  3931  0419  30A0               	movlw	high (STR_7| (0+32768))
  3932  041A  00F3               	movwf	strncmp@_r+1
  3933  041B  3002               	movlw	2
  3934  041C  00F4               	movwf	strncmp@n
  3935  041D  3000               	movlw	0
  3936  041E  00F5               	movwf	strncmp@n+1
  3937  041F  3194  2469  3183   	fcall	_strncmp
  3938  0422  0870               	movf	?_strncmp,w
  3939  0423  0471               	iorwf	?_strncmp+1,w
  3940  0424  1903               	btfsc	3,2
  3941  0425  2C27               	goto	u3411
  3942  0426  2C28               	goto	u3410
  3943  0427                     u3411:
  3944  0427  2C41               	goto	l3047
  3945  0428                     u3410:
  3946  0428                     l3045:
  3947  0428  0020               	movlb	0	; select bank0
  3948  0429  084E               	movf	vfpfcnvrt@fmt,w
  3949  042A  0086               	movwf	6
  3950  042B  0187               	clrf	7
  3951  042C  3F40               	moviw [0]fsr1
  3952  042D  00F0               	movwf	strncmp@_l
  3953  042E  3F41               	moviw [1]fsr1
  3954  042F  00F1               	movwf	strncmp@_l+1
  3955  0430  3035               	movlw	low (STR_11| (0+32768))
  3956  0431  00F2               	movwf	strncmp@_r
  3957  0432  30A0               	movlw	high (STR_11| (0+32768))
  3958  0433  00F3               	movwf	strncmp@_r+1
  3959  0434  3002               	movlw	2
  3960  0435  00F4               	movwf	strncmp@n
  3961  0436  3000               	movlw	0
  3962  0437  00F5               	movwf	strncmp@n+1
  3963  0438  3194  2469  3183   	fcall	_strncmp
  3964  043B  0870               	movf	?_strncmp,w
  3965  043C  0471               	iorwf	?_strncmp+1,w
  3966  043D  1D03               	btfss	3,2
  3967  043E  2C40               	goto	u3421
  3968  043F  2C41               	goto	u3420
  3969  0440                     u3421:
  3970  0440  2C83               	goto	l3055
  3971  0441                     u3420:
  3972  0441                     l3047:
  3973                           
  3974                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 858: ;C:\Program 
      +                          Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 860:             *fmt += ((si
      +                          zeof("ld")/sizeof("ld"[0]))-1);
  3975  0441  0020               	movlb	0	; select bank0
  3976  0442  084E               	movf	vfpfcnvrt@fmt,w
  3977  0443  0086               	movwf	6
  3978  0444  0187               	clrf	7
  3979  0445  3002               	movlw	2
  3980  0446  0781               	addwf	1,f
  3981  0447  3141               	addfsr 1,1
  3982  0448  1803               	skipnc
  3983  0449  0A81               	incf	1,f
  3984  044A                     l3049:
  3985                           
  3986                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 861:             
      +                          ll = (long long)(*(long *)__va_arg(*(long **)ap, (long)0));
  3987  044A  084F               	movf	vfpfcnvrt@ap,w
  3988  044B  0086               	movwf	6
  3989  044C  0187               	clrf	7
  3990  044D  0801               	movf	1,w
  3991  044E  0084               	movwf	4
  3992  044F  0185               	clrf	5
  3993  0450  3004               	movlw	4
  3994  0451  0781               	addwf	1,f
  3995  0452  3F00               	moviw [0]fsr0
  3996  0453  00D0               	movwf	??_vfpfcnvrt
  3997  0454  3F01               	moviw [1]fsr0
  3998  0455  00D1               	movwf	??_vfpfcnvrt+1
  3999  0456  3F02               	moviw [2]fsr0
  4000  0457  00D2               	movwf	??_vfpfcnvrt+2
  4001  0458  3F03               	moviw [3]fsr0
  4002  0459  00D3               	movwf	??_vfpfcnvrt+3
  4003  045A  0850               	movf	??_vfpfcnvrt,w
  4004  045B  00DC               	movwf	vfpfcnvrt@ll
  4005  045C  0851               	movf	??_vfpfcnvrt+1,w
  4006  045D  00DD               	movwf	vfpfcnvrt@ll+1
  4007  045E  0852               	movf	??_vfpfcnvrt+2,w
  4008  045F  00DE               	movwf	vfpfcnvrt@ll+2
  4009  0460  0853               	movf	??_vfpfcnvrt+3,w
  4010  0461  00DF               	movwf	vfpfcnvrt@ll+3
  4011  0462  3000               	movlw	0
  4012  0463  1BDF               	btfsc	vfpfcnvrt@ll+3,7
  4013  0464  30FF               	movlw	255
  4014  0465  00E0               	movwf	vfpfcnvrt@ll+4
  4015  0466  00E1               	movwf	vfpfcnvrt@ll+5
  4016  0467  00E2               	movwf	vfpfcnvrt@ll+6
  4017  0468  00E3               	movwf	vfpfcnvrt@ll+7
  4018  0469                     l3051:
  4019                           
  4020                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 863:             
      +                          return dtoa(fp, ll);
  4021  0469  085C               	movf	vfpfcnvrt@ll,w
  4022  046A  00B0               	movwf	dtoa@d
  4023  046B  085D               	movf	vfpfcnvrt@ll+1,w
  4024  046C  00B1               	movwf	dtoa@d+1
  4025  046D  085E               	movf	vfpfcnvrt@ll+2,w
  4026  046E  00B2               	movwf	dtoa@d+2
  4027  046F  085F               	movf	vfpfcnvrt@ll+3,w
  4028  0470  00B3               	movwf	dtoa@d+3
  4029  0471  0860               	movf	vfpfcnvrt@ll+4,w
  4030  0472  00B4               	movwf	dtoa@d+4
  4031  0473  0861               	movf	vfpfcnvrt@ll+5,w
  4032  0474  00B5               	movwf	dtoa@d+5
  4033  0475  0862               	movf	vfpfcnvrt@ll+6,w
  4034  0476  00B6               	movwf	dtoa@d+6
  4035  0477  0863               	movf	vfpfcnvrt@ll+7,w
  4036  0478  00B7               	movwf	dtoa@d+7
  4037  0479  086C               	movf	vfpfcnvrt@fp,w
  4038  047A  3180  206A  3183   	fcall	_dtoa
  4039  047D  0020               	movlb	0	; select bank0
  4040  047E  0831               	movf	?_dtoa+1,w
  4041  047F  00CF               	movwf	?_vfpfcnvrt+1
  4042  0480  0830               	movf	?_dtoa,w
  4043  0481  00CE               	movwf	?_vfpfcnvrt
  4044  0482  2D89               	goto	l1064
  4045  0483                     l3055:
  4046                           
  4047                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 1204:         if 
      +                          (*fmt[0] == 'u') {
  4048  0483  0020               	movlb	0	; select bank0
  4049  0484  084E               	movf	vfpfcnvrt@fmt,w
  4050  0485  0086               	movwf	6
  4051  0486  0187               	clrf	7
  4052  0487  3F40               	moviw [0]fsr1
  4053  0488  00D0               	movwf	??_vfpfcnvrt
  4054  0489  3F41               	moviw [1]fsr1
  4055  048A  00D1               	movwf	??_vfpfcnvrt+1
  4056  048B  0850               	movf	??_vfpfcnvrt,w
  4057  048C  0084               	movwf	4
  4058  048D  0851               	movf	??_vfpfcnvrt+1,w
  4059  048E  0085               	movwf	5
  4060  048F  0012               	moviw fsr0++
  4061  0490  3A75               	xorlw	117
  4062  0491  1D03               	btfss	3,2
  4063  0492  2C94               	goto	u3431
  4064  0493  2C95               	goto	u3430
  4065  0494                     u3431:
  4066  0494  2CC9               	goto	l3065
  4067  0495                     u3430:
  4068  0495                     l3057:
  4069                           
  4070                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 1206:            
      +                           ++*fmt;
  4071  0495  084E               	movf	vfpfcnvrt@fmt,w
  4072  0496  0086               	movwf	6
  4073  0497  0187               	clrf	7
  4074  0498  3001               	movlw	1
  4075  0499  0781               	addwf	1,f
  4076  049A  3141               	addfsr 1,1
  4077  049B  1803               	skipnc
  4078  049C  0A81               	incf	1,f
  4079  049D                     l3059:
  4080                           
  4081                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 1207:            
      +                           llu = (unsigned long long)(*(unsigned int *)__va_arg(*(unsigned int **)ap, (unsigned in
      +                          t)0));
  4082  049D  084F               	movf	vfpfcnvrt@ap,w
  4083  049E  0086               	movwf	6
  4084  049F  0187               	clrf	7
  4085  04A0  0801               	movf	1,w
  4086  04A1  0084               	movwf	4
  4087  04A2  0185               	clrf	5
  4088  04A3  3002               	movlw	2
  4089  04A4  0781               	addwf	1,f
  4090  04A5  3F00               	moviw [0]fsr0
  4091  04A6  00E4               	movwf	vfpfcnvrt@llu
  4092  04A7  3F01               	moviw [1]fsr0
  4093  04A8  00E5               	movwf	vfpfcnvrt@llu+1
  4094  04A9  01E6               	clrf	vfpfcnvrt@llu+2
  4095  04AA  01E7               	clrf	vfpfcnvrt@llu+3
  4096  04AB  01E8               	clrf	vfpfcnvrt@llu+4
  4097  04AC  01E9               	clrf	vfpfcnvrt@llu+5
  4098  04AD  01EA               	clrf	vfpfcnvrt@llu+6
  4099  04AE  01EB               	clrf	vfpfcnvrt@llu+7
  4100  04AF                     l3061:
  4101                           
  4102                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 1209:            
      +                           return utoa(fp, llu);
  4103  04AF  0864               	movf	vfpfcnvrt@llu,w
  4104  04B0  00B0               	movwf	utoa@d
  4105  04B1  0865               	movf	vfpfcnvrt@llu+1,w
  4106  04B2  00B1               	movwf	utoa@d+1
  4107  04B3  0866               	movf	vfpfcnvrt@llu+2,w
  4108  04B4  00B2               	movwf	utoa@d+2
  4109  04B5  0867               	movf	vfpfcnvrt@llu+3,w
  4110  04B6  00B3               	movwf	utoa@d+3
  4111  04B7  0868               	movf	vfpfcnvrt@llu+4,w
  4112  04B8  00B4               	movwf	utoa@d+4
  4113  04B9  0869               	movf	vfpfcnvrt@llu+5,w
  4114  04BA  00B5               	movwf	utoa@d+5
  4115  04BB  086A               	movf	vfpfcnvrt@llu+6,w
  4116  04BC  00B6               	movwf	utoa@d+6
  4117  04BD  086B               	movf	vfpfcnvrt@llu+7,w
  4118  04BE  00B7               	movwf	utoa@d+7
  4119  04BF  086C               	movf	vfpfcnvrt@fp,w
  4120  04C0  318E  2612  3183   	fcall	_utoa
  4121  04C3  0020               	movlb	0	; select bank0
  4122  04C4  0831               	movf	?_utoa+1,w
  4123  04C5  00CF               	movwf	?_vfpfcnvrt+1
  4124  04C6  0830               	movf	?_utoa,w
  4125  04C7  00CE               	movwf	?_vfpfcnvrt
  4126  04C8  2D89               	goto	l1064
  4127  04C9                     l3065:
  4128                           
  4129                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 1214:         if 
      +                          (!strncmp(*fmt, "lu", ((sizeof("lu")/sizeof("lu"[0]))-1))) {
  4130  04C9  084E               	movf	vfpfcnvrt@fmt,w
  4131  04CA  0086               	movwf	6
  4132  04CB  0187               	clrf	7
  4133  04CC  3F40               	moviw [0]fsr1
  4134  04CD  00F0               	movwf	strncmp@_l
  4135  04CE  3F41               	moviw [1]fsr1
  4136  04CF  00F1               	movwf	strncmp@_l+1
  4137  04D0  3038               	movlw	low (STR_16| (0+32768))
  4138  04D1  00F2               	movwf	strncmp@_r
  4139  04D2  30A0               	movlw	high (STR_16| (0+32768))
  4140  04D3  00F3               	movwf	strncmp@_r+1
  4141  04D4  3002               	movlw	2
  4142  04D5  00F4               	movwf	strncmp@n
  4143  04D6  3000               	movlw	0
  4144  04D7  00F5               	movwf	strncmp@n+1
  4145  04D8  3194  2469  3183   	fcall	_strncmp
  4146  04DB  0870               	movf	?_strncmp,w
  4147  04DC  0471               	iorwf	?_strncmp+1,w
  4148  04DD  1D03               	btfss	3,2
  4149  04DE  2CE0               	goto	u3441
  4150  04DF  2CE1               	goto	u3440
  4151  04E0                     u3441:
  4152  04E0  2D30               	goto	l3075
  4153  04E1                     u3440:
  4154  04E1                     l3067:
  4155                           
  4156                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 1216:            
      +                           *fmt += ((sizeof("lu")/sizeof("lu"[0]))-1);
  4157  04E1  0020               	movlb	0	; select bank0
  4158  04E2  084E               	movf	vfpfcnvrt@fmt,w
  4159  04E3  0086               	movwf	6
  4160  04E4  0187               	clrf	7
  4161  04E5  3002               	movlw	2
  4162  04E6  0781               	addwf	1,f
  4163  04E7  3141               	addfsr 1,1
  4164  04E8  1803               	skipnc
  4165  04E9  0A81               	incf	1,f
  4166  04EA                     l3069:
  4167                           
  4168                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 1217:            
      +                           llu = (unsigned long long)(*(unsigned long *)__va_arg(*(unsigned long **)ap, (unsigned 
      +                          long)0));
  4169  04EA  084F               	movf	vfpfcnvrt@ap,w
  4170  04EB  0086               	movwf	6
  4171  04EC  0187               	clrf	7
  4172  04ED  0801               	movf	1,w
  4173  04EE  0084               	movwf	4
  4174  04EF  0185               	clrf	5
  4175  04F0  3004               	movlw	4
  4176  04F1  0781               	addwf	1,f
  4177  04F2  3F00               	moviw [0]fsr0
  4178  04F3  00D0               	movwf	??_vfpfcnvrt
  4179  04F4  3F01               	moviw [1]fsr0
  4180  04F5  00D1               	movwf	??_vfpfcnvrt+1
  4181  04F6  3F02               	moviw [2]fsr0
  4182  04F7  00D2               	movwf	??_vfpfcnvrt+2
  4183  04F8  3F03               	moviw [3]fsr0
  4184  04F9  00D3               	movwf	??_vfpfcnvrt+3
  4185  04FA  0850               	movf	??_vfpfcnvrt,w
  4186  04FB  00D4               	movwf	??_vfpfcnvrt+4
  4187  04FC  0851               	movf	??_vfpfcnvrt+1,w
  4188  04FD  00D5               	movwf	??_vfpfcnvrt+5
  4189  04FE  0852               	movf	??_vfpfcnvrt+2,w
  4190  04FF  00D6               	movwf	??_vfpfcnvrt+6
  4191  0500  0853               	movf	??_vfpfcnvrt+3,w
  4192  0501  00D7               	movwf	??_vfpfcnvrt+7
  4193  0502  01D8               	clrf	??_vfpfcnvrt+8
  4194  0503  01D9               	clrf	??_vfpfcnvrt+9
  4195  0504  01DA               	clrf	??_vfpfcnvrt+10
  4196  0505  01DB               	clrf	??_vfpfcnvrt+11
  4197  0506  085B               	movf	??_vfpfcnvrt+11,w
  4198  0507  00EB               	movwf	vfpfcnvrt@llu+7
  4199  0508  085A               	movf	??_vfpfcnvrt+10,w
  4200  0509  00EA               	movwf	vfpfcnvrt@llu+6
  4201  050A  0859               	movf	??_vfpfcnvrt+9,w
  4202  050B  00E9               	movwf	vfpfcnvrt@llu+5
  4203  050C  0858               	movf	??_vfpfcnvrt+8,w
  4204  050D  00E8               	movwf	vfpfcnvrt@llu+4
  4205  050E  0857               	movf	??_vfpfcnvrt+7,w
  4206  050F  00E7               	movwf	vfpfcnvrt@llu+3
  4207  0510  0856               	movf	??_vfpfcnvrt+6,w
  4208  0511  00E6               	movwf	vfpfcnvrt@llu+2
  4209  0512  0855               	movf	??_vfpfcnvrt+5,w
  4210  0513  00E5               	movwf	vfpfcnvrt@llu+1
  4211  0514  0854               	movf	??_vfpfcnvrt+4,w
  4212  0515  00E4               	movwf	vfpfcnvrt@llu
  4213  0516                     l3071:
  4214                           
  4215                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 1219:            
      +                           return utoa(fp, llu);
  4216  0516  0864               	movf	vfpfcnvrt@llu,w
  4217  0517  00B0               	movwf	utoa@d
  4218  0518  0865               	movf	vfpfcnvrt@llu+1,w
  4219  0519  00B1               	movwf	utoa@d+1
  4220  051A  0866               	movf	vfpfcnvrt@llu+2,w
  4221  051B  00B2               	movwf	utoa@d+2
  4222  051C  0867               	movf	vfpfcnvrt@llu+3,w
  4223  051D  00B3               	movwf	utoa@d+3
  4224  051E  0868               	movf	vfpfcnvrt@llu+4,w
  4225  051F  00B4               	movwf	utoa@d+4
  4226  0520  0869               	movf	vfpfcnvrt@llu+5,w
  4227  0521  00B5               	movwf	utoa@d+5
  4228  0522  086A               	movf	vfpfcnvrt@llu+6,w
  4229  0523  00B6               	movwf	utoa@d+6
  4230  0524  086B               	movf	vfpfcnvrt@llu+7,w
  4231  0525  00B7               	movwf	utoa@d+7
  4232  0526  086C               	movf	vfpfcnvrt@fp,w
  4233  0527  318E  2612  3183   	fcall	_utoa
  4234  052A  0020               	movlb	0	; select bank0
  4235  052B  0831               	movf	?_utoa+1,w
  4236  052C  00CF               	movwf	?_vfpfcnvrt+1
  4237  052D  0830               	movf	?_utoa,w
  4238  052E  00CE               	movwf	?_vfpfcnvrt
  4239  052F  2D89               	goto	l1064
  4240  0530                     l3075:
  4241                           
  4242                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 1372:         if 
      +                          ((*fmt)[0] == '%') {
  4243  0530  0020               	movlb	0	; select bank0
  4244  0531  084E               	movf	vfpfcnvrt@fmt,w
  4245  0532  0086               	movwf	6
  4246  0533  0187               	clrf	7
  4247  0534  3F40               	moviw [0]fsr1
  4248  0535  00D0               	movwf	??_vfpfcnvrt
  4249  0536  3F41               	moviw [1]fsr1
  4250  0537  00D1               	movwf	??_vfpfcnvrt+1
  4251  0538  0850               	movf	??_vfpfcnvrt,w
  4252  0539  0084               	movwf	4
  4253  053A  0851               	movf	??_vfpfcnvrt+1,w
  4254  053B  0085               	movwf	5
  4255  053C  0012               	moviw fsr0++
  4256  053D  3A25               	xorlw	37
  4257  053E  1D03               	btfss	3,2
  4258  053F  2D41               	goto	u3451
  4259  0540  2D42               	goto	u3450
  4260  0541                     u3451:
  4261  0541  2D5B               	goto	l3085
  4262  0542                     u3450:
  4263  0542                     l3077:
  4264                           
  4265                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 1373:            
      +                           ++*fmt;
  4266  0542  084E               	movf	vfpfcnvrt@fmt,w
  4267  0543  0086               	movwf	6
  4268  0544  0187               	clrf	7
  4269  0545  3001               	movlw	1
  4270  0546  0781               	addwf	1,f
  4271  0547  3141               	addfsr 1,1
  4272  0548  1803               	skipnc
  4273  0549  0A81               	incf	1,f
  4274  054A                     l3079:
  4275                           
  4276                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 1374:            
      +                           fputc((int)'%', fp);
  4277  054A  3025               	movlw	37
  4278  054B  00F0               	movwf	fputc@c
  4279  054C  3000               	movlw	0
  4280  054D  00F1               	movwf	fputc@c+1
  4281  054E  086C               	movf	vfpfcnvrt@fp,w
  4282  054F  00D0               	movwf	??_vfpfcnvrt
  4283  0550  0850               	movf	??_vfpfcnvrt,w
  4284  0551  00F2               	movwf	fputc@fp
  4285  0552  3192  225F  3183   	fcall	_fputc
  4286  0555                     l3081:
  4287                           
  4288                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 1375:            
      +                           return 1;
  4289  0555  3001               	movlw	1
  4290  0556  0020               	movlb	0	; select bank0
  4291  0557  00CE               	movwf	?_vfpfcnvrt
  4292  0558  3000               	movlw	0
  4293  0559  00CF               	movwf	?_vfpfcnvrt+1
  4294  055A  2D89               	goto	l1064
  4295  055B                     l3085:
  4296                           
  4297                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 1379:         ++*
      +                          fmt;
  4298  055B  084E               	movf	vfpfcnvrt@fmt,w
  4299  055C  0086               	movwf	6
  4300  055D  0187               	clrf	7
  4301  055E  3001               	movlw	1
  4302  055F  0781               	addwf	1,f
  4303  0560  3141               	addfsr 1,1
  4304  0561  1803               	skipnc
  4305  0562  0A81               	incf	1,f
  4306  0563                     l3087:
  4307                           
  4308                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 1380:         ret
      +                          urn 0;
  4309  0563  01CE               	clrf	?_vfpfcnvrt
  4310  0564  01CF               	clrf	?_vfpfcnvrt+1
  4311  0565  2D89               	goto	l1064
  4312  0566                     l3091:
  4313                           
  4314                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 1384:     fputc((
      +                          int)(*fmt)[0], fp);
  4315  0566  084E               	movf	vfpfcnvrt@fmt,w
  4316  0567  0086               	movwf	6
  4317  0568  0187               	clrf	7
  4318  0569  3F40               	moviw [0]fsr1
  4319  056A  00D0               	movwf	??_vfpfcnvrt
  4320  056B  3F41               	moviw [1]fsr1
  4321  056C  00D1               	movwf	??_vfpfcnvrt+1
  4322  056D  0850               	movf	??_vfpfcnvrt,w
  4323  056E  0084               	movwf	4
  4324  056F  0851               	movf	??_vfpfcnvrt+1,w
  4325  0570  0085               	movwf	5
  4326  0571  0800               	movf	0,w	;code access
  4327  0572  00D2               	movwf	??_vfpfcnvrt+2
  4328  0573  01D3               	clrf	??_vfpfcnvrt+3
  4329  0574  0852               	movf	??_vfpfcnvrt+2,w
  4330  0575  00F0               	movwf	fputc@c
  4331  0576  0853               	movf	??_vfpfcnvrt+3,w
  4332  0577  00F1               	movwf	fputc@c+1
  4333  0578  086C               	movf	vfpfcnvrt@fp,w
  4334  0579  00D4               	movwf	??_vfpfcnvrt+4
  4335  057A  0854               	movf	??_vfpfcnvrt+4,w
  4336  057B  00F2               	movwf	fputc@fp
  4337  057C  3192  225F  3183   	fcall	_fputc
  4338  057F                     l3093:
  4339                           
  4340                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 1385:     ++*fmt;
  4341  057F  0020               	movlb	0	; select bank0
  4342  0580  084E               	movf	vfpfcnvrt@fmt,w
  4343  0581  0086               	movwf	6
  4344  0582  0187               	clrf	7
  4345  0583  3001               	movlw	1
  4346  0584  0781               	addwf	1,f
  4347  0585  3141               	addfsr 1,1
  4348  0586  1803               	skipnc
  4349  0587  0A81               	incf	1,f
  4350  0588  2D55               	goto	l3081
  4351  0589                     l1064:
  4352  0589  0008               	return
  4353  058A                     __end_of_vfpfcnvrt:
  4354                           
  4355                           	psect	text6
  4356  0E12                     __ptext6:	
  4357 ;; *************** function _utoa *****************
  4358 ;; Defined at:
  4359 ;;		line 615 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c"
  4360 ;; Parameters:    Size  Location     Type
  4361 ;;  fp              1    wreg     PTR struct _IO_FILE
  4362 ;;		 -> sprintf@f(5), 
  4363 ;;  d               8   16[BANK0 ] unsigned long long 
  4364 ;; Auto vars:     Size  Location     Type
  4365 ;;  fp              1   26[BANK0 ] PTR struct _IO_FILE
  4366 ;;		 -> sprintf@f(5), 
  4367 ;;  n               8   29[BANK0 ] unsigned long long 
  4368 ;;  i               2   37[BANK0 ] int 
  4369 ;;  w               2   27[BANK0 ] int 
  4370 ;;  p               2   24[BANK0 ] int 
  4371 ;; Return value:  Size  Location     Type
  4372 ;;                  2   16[BANK0 ] int 
  4373 ;; Registers used:
  4374 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  4375 ;; Tracked objects:
  4376 ;;		On entry : 0/0
  4377 ;;		On exit  : 0/0
  4378 ;;		Unchanged: 0/0
  4379 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  4380 ;;      Params:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4381 ;;      Locals:         0      15       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4382 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4383 ;;      Totals:         1      23       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4384 ;;Total ram usage:       24 bytes
  4385 ;; Hardware stack levels used: 1
  4386 ;; Hardware stack levels required when called: 4
  4387 ;; This function calls:
  4388 ;;		___lodiv
  4389 ;;		___lomod
  4390 ;;		_pad
  4391 ;; This function is called by:
  4392 ;;		_vfpfcnvrt
  4393 ;; This function uses a non-reentrant model
  4394 ;;
  4395                           
  4396                           
  4397                           ;psect for function _utoa
  4398  0E12                     _utoa:
  4399                           
  4400                           ;incstack = 0
  4401                           ; Regs used in _utoa: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  4402                           ;utoa@fp stored from wreg
  4403  0E12  0020               	movlb	0	; select bank0
  4404  0E13  00BA               	movwf	utoa@fp
  4405  0E14                     l2851:
  4406                           
  4407                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 615: static int u
      +                          toa(FILE *fp, unsigned long long d);C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99
      +                          \common\doprnt.c: 616: {;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\dop
      +                          rnt.c: 617:     int i, p, w;;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common
      +                          \doprnt.c: 618:     unsigned long long n;;C:\Program Files\Microchip\xc8\v2.32\pic\sourc
      +                          es\c99\common\doprnt.c: 621:     if (!(prec < 0)) {
  4408  0E14  0022               	movlb	2	; select bank2
  4409  0E15  1BD3               	btfsc	(_prec+1)^(0+256),7
  4410  0E16  2E18               	goto	u3051
  4411  0E17  2E19               	goto	u3050
  4412  0E18                     u3051:
  4413  0E18  2E1D               	goto	l1045
  4414  0E19                     u3050:
  4415  0E19                     l2853:
  4416                           
  4417                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 622:         flag
      +                          s &= ~(1 << 1);
  4418  0E19  30FD               	movlw	253
  4419  0E1A  05D4               	andwf	_flags^(0+256),f
  4420  0E1B  30FF               	movlw	255
  4421  0E1C  05D5               	andwf	(_flags+1)^(0+256),f
  4422  0E1D                     l1045:	
  4423                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 623:     }
  4424                           
  4425                           
  4426                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 624:     p = (0 <
      +                           prec) ? prec : 1;
  4427  0E1D  0853               	movf	(_prec+1)^(0+256),w
  4428  0E1E  3A80               	xorlw	128
  4429  0E1F  00FD               	movwf	??_utoa
  4430  0E20  3080               	movlw	128
  4431  0E21  027D               	subwf	??_utoa,w
  4432  0E22  1D03               	skipz
  4433  0E23  2E26               	goto	u3065
  4434  0E24  3001               	movlw	1
  4435  0E25  0252               	subwf	_prec^(0+256),w
  4436  0E26                     u3065:
  4437  0E26  1803               	skipnc
  4438  0E27  2E29               	goto	u3061
  4439  0E28  2E2A               	goto	u3060
  4440  0E29                     u3061:
  4441  0E29  2E30               	goto	l2857
  4442  0E2A                     u3060:
  4443  0E2A                     l2855:
  4444  0E2A  3001               	movlw	1
  4445  0E2B  0020               	movlb	0	; select bank0
  4446  0E2C  00B8               	movwf	utoa@p
  4447  0E2D  3000               	movlw	0
  4448  0E2E  00B9               	movwf	utoa@p+1
  4449  0E2F  2E38               	goto	l1049
  4450  0E30                     l2857:
  4451  0E30  0022               	movlb	2	; select bank2
  4452  0E31  0853               	movf	(_prec+1)^(0+256),w
  4453  0E32  0020               	movlb	0	; select bank0
  4454  0E33  00B9               	movwf	utoa@p+1
  4455  0E34  0022               	movlb	2	; select bank2
  4456  0E35  0852               	movf	_prec^(0+256),w
  4457  0E36  0020               	movlb	0	; select bank0
  4458  0E37  00B8               	movwf	utoa@p
  4459  0E38                     l1049:
  4460                           
  4461                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 625:     w = widt
      +                          h;
  4462  0E38  0022               	movlb	2	; select bank2
  4463  0E39  0851               	movf	(_width+1)^(0+256),w
  4464  0E3A  0020               	movlb	0	; select bank0
  4465  0E3B  00BC               	movwf	utoa@w+1
  4466  0E3C  0022               	movlb	2	; select bank2
  4467  0E3D  0850               	movf	_width^(0+256),w
  4468  0E3E  0020               	movlb	0	; select bank0
  4469  0E3F  00BB               	movwf	utoa@w
  4470  0E40                     l2859:
  4471                           
  4472                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 628:     n = d;
  4473  0E40  0830               	movf	utoa@d,w
  4474  0E41  00BD               	movwf	utoa@n
  4475  0E42  0831               	movf	utoa@d+1,w
  4476  0E43  00BE               	movwf	utoa@n+1
  4477  0E44  0832               	movf	utoa@d+2,w
  4478  0E45  00BF               	movwf	utoa@n+2
  4479  0E46  0833               	movf	utoa@d+3,w
  4480  0E47  00C0               	movwf	utoa@n+3
  4481  0E48  0834               	movf	utoa@d+4,w
  4482  0E49  00C1               	movwf	utoa@n+4
  4483  0E4A  0835               	movf	utoa@d+5,w
  4484  0E4B  00C2               	movwf	utoa@n+5
  4485  0E4C  0836               	movf	utoa@d+6,w
  4486  0E4D  00C3               	movwf	utoa@n+6
  4487  0E4E  0837               	movf	utoa@d+7,w
  4488  0E4F  00C4               	movwf	utoa@n+7
  4489                           
  4490                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 629:     i = size
      +                          of(dbuf) - 1;
  4491  0E50  301F               	movlw	31
  4492  0E51  00C5               	movwf	utoa@i
  4493  0E52  3000               	movlw	0
  4494  0E53  00C6               	movwf	utoa@i+1
  4495  0E54                     l2861:
  4496                           
  4497                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 630:     dbuf[i] 
      +                          = '\0';
  4498  0E54  0023               	movlb	3	; select bank3
  4499  0E55  01BF               	clrf	(_dbuf^(0+384)+31)
  4500                           
  4501                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 631:     while (i
      +                           && (n || (0 < p) || ((0 < w) && (flags & (1 << 1))))) {
  4502  0E56  2EB8               	goto	l2873
  4503  0E57                     l2863:
  4504                           
  4505                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 632:         --i;
  4506  0E57  30FF               	movlw	255
  4507  0E58  0020               	movlb	0	; select bank0
  4508  0E59  07C5               	addwf	utoa@i,f
  4509  0E5A  30FF               	movlw	255
  4510  0E5B  3DC6               	addwfc	utoa@i+1,f
  4511  0E5C                     l2865:
  4512                           
  4513                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 633:         dbuf
      +                          [i] = '0' + (n % 10);
  4514  0E5C  300A               	movlw	10
  4515  0E5D  00A0               	movwf	___lomod@divisor
  4516  0E5E  01A1               	clrf	___lomod@divisor+1
  4517  0E5F  01A2               	clrf	___lomod@divisor+2
  4518  0E60  01A3               	clrf	___lomod@divisor+3
  4519  0E61  01A4               	clrf	___lomod@divisor+4
  4520  0E62  01A5               	clrf	___lomod@divisor+5
  4521  0E63  01A6               	clrf	___lomod@divisor+6
  4522  0E64  01A7               	clrf	___lomod@divisor+7
  4523  0E65  083D               	movf	utoa@n,w
  4524  0E66  00A8               	movwf	___lomod@dividend
  4525  0E67  083E               	movf	utoa@n+1,w
  4526  0E68  00A9               	movwf	___lomod@dividend+1
  4527  0E69  083F               	movf	utoa@n+2,w
  4528  0E6A  00AA               	movwf	___lomod@dividend+2
  4529  0E6B  0840               	movf	utoa@n+3,w
  4530  0E6C  00AB               	movwf	___lomod@dividend+3
  4531  0E6D  0841               	movf	utoa@n+4,w
  4532  0E6E  00AC               	movwf	___lomod@dividend+4
  4533  0E6F  0842               	movf	utoa@n+5,w
  4534  0E70  00AD               	movwf	___lomod@dividend+5
  4535  0E71  0843               	movf	utoa@n+6,w
  4536  0E72  00AE               	movwf	___lomod@dividend+6
  4537  0E73  0844               	movf	utoa@n+7,w
  4538  0E74  00AF               	movwf	___lomod@dividend+7
  4539  0E75  3195  259C  318E   	fcall	___lomod
  4540  0E78  0020               	movlb	0	; select bank0
  4541  0E79  0820               	movf	?___lomod,w
  4542  0E7A  3E30               	addlw	48
  4543  0E7B  00FD               	movwf	??_utoa
  4544  0E7C  0845               	movf	utoa@i,w
  4545  0E7D  3EA0               	addlw	(low (_dbuf| (0+256)))& (0+255)
  4546  0E7E  0086               	movwf	6
  4547  0E7F  3001               	movlw	1	; select bank3/4
  4548  0E80  0087               	movwf	7
  4549  0E81  087D               	movf	??_utoa,w
  4550  0E82  0081               	movwf	1
  4551  0E83                     l2867:
  4552                           
  4553                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 634:         --p;
  4554  0E83  30FF               	movlw	255
  4555  0E84  07B8               	addwf	utoa@p,f
  4556  0E85  30FF               	movlw	255
  4557  0E86  3DB9               	addwfc	utoa@p+1,f
  4558  0E87                     l2869:
  4559                           
  4560                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 635:         --w;
  4561  0E87  30FF               	movlw	255
  4562  0E88  07BB               	addwf	utoa@w,f
  4563  0E89  30FF               	movlw	255
  4564  0E8A  3DBC               	addwfc	utoa@w+1,f
  4565  0E8B                     l2871:
  4566                           
  4567                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 636:         n = 
      +                          n / 10;
  4568  0E8B  300A               	movlw	10
  4569  0E8C  00A0               	movwf	___lodiv@divisor
  4570  0E8D  01A1               	clrf	___lodiv@divisor+1
  4571  0E8E  01A2               	clrf	___lodiv@divisor+2
  4572  0E8F  01A3               	clrf	___lodiv@divisor+3
  4573  0E90  01A4               	clrf	___lodiv@divisor+4
  4574  0E91  01A5               	clrf	___lodiv@divisor+5
  4575  0E92  01A6               	clrf	___lodiv@divisor+6
  4576  0E93  01A7               	clrf	___lodiv@divisor+7
  4577  0E94  083D               	movf	utoa@n,w
  4578  0E95  00A8               	movwf	___lodiv@dividend
  4579  0E96  083E               	movf	utoa@n+1,w
  4580  0E97  00A9               	movwf	___lodiv@dividend+1
  4581  0E98  083F               	movf	utoa@n+2,w
  4582  0E99  00AA               	movwf	___lodiv@dividend+2
  4583  0E9A  0840               	movf	utoa@n+3,w
  4584  0E9B  00AB               	movwf	___lodiv@dividend+3
  4585  0E9C  0841               	movf	utoa@n+4,w
  4586  0E9D  00AC               	movwf	___lodiv@dividend+4
  4587  0E9E  0842               	movf	utoa@n+5,w
  4588  0E9F  00AD               	movwf	___lodiv@dividend+5
  4589  0EA0  0843               	movf	utoa@n+6,w
  4590  0EA1  00AE               	movwf	___lodiv@dividend+6
  4591  0EA2  0844               	movf	utoa@n+7,w
  4592  0EA3  00AF               	movwf	___lodiv@dividend+7
  4593  0EA4  3196  26F7  318E   	fcall	___lodiv
  4594  0EA7  0020               	movlb	0	; select bank0
  4595  0EA8  0820               	movf	?___lodiv,w
  4596  0EA9  00BD               	movwf	utoa@n
  4597  0EAA  0821               	movf	?___lodiv+1,w
  4598  0EAB  00BE               	movwf	utoa@n+1
  4599  0EAC  0822               	movf	?___lodiv+2,w
  4600  0EAD  00BF               	movwf	utoa@n+2
  4601  0EAE  0823               	movf	?___lodiv+3,w
  4602  0EAF  00C0               	movwf	utoa@n+3
  4603  0EB0  0824               	movf	?___lodiv+4,w
  4604  0EB1  00C1               	movwf	utoa@n+4
  4605  0EB2  0825               	movf	?___lodiv+5,w
  4606  0EB3  00C2               	movwf	utoa@n+5
  4607  0EB4  0826               	movf	?___lodiv+6,w
  4608  0EB5  00C3               	movwf	utoa@n+6
  4609  0EB6  0827               	movf	?___lodiv+7,w
  4610  0EB7  00C4               	movwf	utoa@n+7
  4611  0EB8                     l2873:
  4612                           
  4613                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 631:     while (i
      +                           && (n || (0 < p) || ((0 < w) && (flags & (1 << 1))))) {
  4614  0EB8  0020               	movlb	0	; select bank0
  4615  0EB9  0845               	movf	utoa@i,w
  4616  0EBA  0446               	iorwf	utoa@i+1,w
  4617  0EBB  1903               	btfsc	3,2
  4618  0EBC  2EBE               	goto	u3071
  4619  0EBD  2EBF               	goto	u3070
  4620  0EBE                     u3071:
  4621  0EBE  2EEB               	goto	l2883
  4622  0EBF                     u3070:
  4623  0EBF                     l2875:
  4624  0EBF  083D               	movf	utoa@n,w
  4625  0EC0  043E               	iorwf	utoa@n+1,w
  4626  0EC1  043F               	iorwf	utoa@n+2,w
  4627  0EC2  0440               	iorwf	utoa@n+3,w
  4628  0EC3  0441               	iorwf	utoa@n+4,w
  4629  0EC4  0442               	iorwf	utoa@n+5,w
  4630  0EC5  0443               	iorwf	utoa@n+6,w
  4631  0EC6  0444               	iorwf	utoa@n+7,w
  4632  0EC7  1D03               	skipz
  4633  0EC8  2ECA               	goto	u3081
  4634  0EC9  2ECB               	goto	u3080
  4635  0ECA                     u3081:
  4636  0ECA  2E57               	goto	l2863
  4637  0ECB                     u3080:
  4638  0ECB                     l2877:
  4639  0ECB  0839               	movf	utoa@p+1,w
  4640  0ECC  3A80               	xorlw	128
  4641  0ECD  00FD               	movwf	??_utoa
  4642  0ECE  3080               	movlw	128
  4643  0ECF  027D               	subwf	??_utoa,w
  4644  0ED0  1D03               	skipz
  4645  0ED1  2ED4               	goto	u3095
  4646  0ED2  3001               	movlw	1
  4647  0ED3  0238               	subwf	utoa@p,w
  4648  0ED4                     u3095:
  4649  0ED4  1803               	skipnc
  4650  0ED5  2ED7               	goto	u3091
  4651  0ED6  2ED8               	goto	u3090
  4652  0ED7                     u3091:
  4653  0ED7  2E57               	goto	l2863
  4654  0ED8                     u3090:
  4655  0ED8                     l2879:
  4656  0ED8  0020               	movlb	0	; select bank0
  4657  0ED9  083C               	movf	utoa@w+1,w
  4658  0EDA  3A80               	xorlw	128
  4659  0EDB  00FD               	movwf	??_utoa
  4660  0EDC  3080               	movlw	128
  4661  0EDD  027D               	subwf	??_utoa,w
  4662  0EDE  1D03               	skipz
  4663  0EDF  2EE2               	goto	u3105
  4664  0EE0  3001               	movlw	1
  4665  0EE1  023B               	subwf	utoa@w,w
  4666  0EE2                     u3105:
  4667  0EE2  1C03               	skipc
  4668  0EE3  2EE5               	goto	u3101
  4669  0EE4  2EE6               	goto	u3100
  4670  0EE5                     u3101:
  4671  0EE5  2EEB               	goto	l2883
  4672  0EE6                     u3100:
  4673  0EE6                     l2881:
  4674  0EE6  0022               	movlb	2	; select bank2
  4675  0EE7  18D4               	btfsc	_flags^(0+256),1
  4676  0EE8  2EEA               	goto	u3111
  4677  0EE9  2EEB               	goto	u3110
  4678  0EEA                     u3111:
  4679  0EEA  2E57               	goto	l2863
  4680  0EEB                     u3110:
  4681  0EEB                     l2883:
  4682                           
  4683                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 640:     return p
      +                          ad(fp, &dbuf[i], w);
  4684  0EEB  0020               	movlb	0	; select bank0
  4685  0EEC  0845               	movf	utoa@i,w
  4686  0EED  3EA0               	addlw	(low (_dbuf| (0+256)))& (0+255)
  4687  0EEE  00FD               	movwf	??_utoa
  4688  0EEF  087D               	movf	??_utoa,w
  4689  0EF0  00A4               	movwf	pad@buf
  4690  0EF1  083C               	movf	utoa@w+1,w
  4691  0EF2  00A6               	movwf	pad@p+1
  4692  0EF3  083B               	movf	utoa@w,w
  4693  0EF4  00A5               	movwf	pad@p
  4694  0EF5  083A               	movf	utoa@fp,w
  4695  0EF6  3193  235B  318E   	fcall	_pad
  4696  0EF9  0020               	movlb	0	; select bank0
  4697  0EFA  0825               	movf	?_pad+1,w
  4698  0EFB  00B1               	movwf	?_utoa+1
  4699  0EFC  0824               	movf	?_pad,w
  4700  0EFD  00B0               	movwf	?_utoa
  4701  0EFE                     l1057:
  4702  0EFE  0008               	return
  4703  0EFF                     __end_of_utoa:
  4704                           
  4705                           	psect	text7
  4706  159C                     __ptext7:	
  4707 ;; *************** function ___lomod *****************
  4708 ;; Defined at:
  4709 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\lomod.c"
  4710 ;; Parameters:    Size  Location     Type
  4711 ;;  divisor         8    0[BANK0 ] unsigned long long 
  4712 ;;  dividend        8    8[BANK0 ] unsigned long long 
  4713 ;; Auto vars:     Size  Location     Type
  4714 ;;  counter         1    1[COMMON] unsigned char 
  4715 ;; Return value:  Size  Location     Type
  4716 ;;                  8    0[BANK0 ] unsigned long long 
  4717 ;; Registers used:
  4718 ;;		wreg, status,2, status,0
  4719 ;; Tracked objects:
  4720 ;;		On entry : 0/0
  4721 ;;		On exit  : 0/0
  4722 ;;		Unchanged: 0/0
  4723 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  4724 ;;      Params:         0      16       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4725 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4726 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4727 ;;      Totals:         2      16       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4728 ;;Total ram usage:       18 bytes
  4729 ;; Hardware stack levels used: 1
  4730 ;; This function calls:
  4731 ;;		Nothing
  4732 ;; This function is called by:
  4733 ;;		_utoa
  4734 ;; This function uses a non-reentrant model
  4735 ;;
  4736                           
  4737                           
  4738                           ;psect for function ___lomod
  4739  159C                     ___lomod:
  4740  159C                     l2705:	
  4741                           ;incstack = 0
  4742                           ; Regs used in ___lomod: [wreg+status,2+status,0]
  4743                           
  4744  159C  0020               	movlb	0	; select bank0
  4745  159D  0820               	movf	___lomod@divisor,w
  4746  159E  0421               	iorwf	___lomod@divisor+1,w
  4747  159F  0422               	iorwf	___lomod@divisor+2,w
  4748  15A0  0423               	iorwf	___lomod@divisor+3,w
  4749  15A1  0424               	iorwf	___lomod@divisor+4,w
  4750  15A2  0425               	iorwf	___lomod@divisor+5,w
  4751  15A3  0426               	iorwf	___lomod@divisor+6,w
  4752  15A4  0427               	iorwf	___lomod@divisor+7,w
  4753  15A5  1903               	skipnz
  4754  15A6  2DA8               	goto	u2771
  4755  15A7  2DA9               	goto	u2770
  4756  15A8                     u2771:
  4757  15A8  2DFC               	goto	l762
  4758  15A9                     u2770:
  4759  15A9                     l2707:
  4760  15A9  01F1               	clrf	___lomod@counter
  4761  15AA  0AF1               	incf	___lomod@counter,f
  4762  15AB  2DB8               	goto	l2713
  4763  15AC                     l2709:
  4764  15AC  35A0               	lslf	___lomod@divisor,f
  4765  15AD  0DA1               	rlf	___lomod@divisor+1,f
  4766  15AE  0DA2               	rlf	___lomod@divisor+2,f
  4767  15AF  0DA3               	rlf	___lomod@divisor+3,f
  4768  15B0  0DA4               	rlf	___lomod@divisor+4,f
  4769  15B1  0DA5               	rlf	___lomod@divisor+5,f
  4770  15B2  0DA6               	rlf	___lomod@divisor+6,f
  4771  15B3  0DA7               	rlf	___lomod@divisor+7,f
  4772  15B4                     l2711:
  4773  15B4  3001               	movlw	1
  4774  15B5  00F0               	movwf	??___lomod
  4775  15B6  0870               	movf	??___lomod,w
  4776  15B7  07F1               	addwf	___lomod@counter,f
  4777  15B8                     l2713:
  4778  15B8  1FA7               	btfss	___lomod@divisor+7,7
  4779  15B9  2DBB               	goto	u2781
  4780  15BA  2DBC               	goto	u2780
  4781  15BB                     u2781:
  4782  15BB  2DAC               	goto	l2709
  4783  15BC                     u2780:
  4784  15BC                     l2715:
  4785  15BC  0827               	movf	___lomod@divisor+7,w
  4786  15BD  022F               	subwf	___lomod@dividend+7,w
  4787  15BE  1D03               	skipz
  4788  15BF  2DDA               	goto	u2795
  4789  15C0  0826               	movf	___lomod@divisor+6,w
  4790  15C1  022E               	subwf	___lomod@dividend+6,w
  4791  15C2  1D03               	skipz
  4792  15C3  2DDA               	goto	u2795
  4793  15C4  0825               	movf	___lomod@divisor+5,w
  4794  15C5  022D               	subwf	___lomod@dividend+5,w
  4795  15C6  1D03               	skipz
  4796  15C7  2DDA               	goto	u2795
  4797  15C8  0824               	movf	___lomod@divisor+4,w
  4798  15C9  022C               	subwf	___lomod@dividend+4,w
  4799  15CA  1D03               	skipz
  4800  15CB  2DDA               	goto	u2795
  4801  15CC  0823               	movf	___lomod@divisor+3,w
  4802  15CD  022B               	subwf	___lomod@dividend+3,w
  4803  15CE  1D03               	skipz
  4804  15CF  2DDA               	goto	u2795
  4805  15D0  0822               	movf	___lomod@divisor+2,w
  4806  15D1  022A               	subwf	___lomod@dividend+2,w
  4807  15D2  1D03               	skipz
  4808  15D3  2DDA               	goto	u2795
  4809  15D4  0821               	movf	___lomod@divisor+1,w
  4810  15D5  0229               	subwf	___lomod@dividend+1,w
  4811  15D6  1D03               	skipz
  4812  15D7  2DDA               	goto	u2795
  4813  15D8  0820               	movf	___lomod@divisor,w
  4814  15D9  0228               	subwf	___lomod@dividend,w
  4815  15DA                     u2795:
  4816  15DA  1C03               	skipc
  4817  15DB  2DDD               	goto	u2791
  4818  15DC  2DDE               	goto	u2790
  4819  15DD                     u2791:
  4820  15DD  2DEE               	goto	l2719
  4821  15DE                     u2790:
  4822  15DE                     l2717:
  4823  15DE  0820               	movf	___lomod@divisor,w
  4824  15DF  02A8               	subwf	___lomod@dividend,f
  4825  15E0  0821               	movf	___lomod@divisor+1,w
  4826  15E1  3BA9               	subwfb	___lomod@dividend+1,f
  4827  15E2  0822               	movf	___lomod@divisor+2,w
  4828  15E3  3BAA               	subwfb	___lomod@dividend+2,f
  4829  15E4  0823               	movf	___lomod@divisor+3,w
  4830  15E5  3BAB               	subwfb	___lomod@dividend+3,f
  4831  15E6  0824               	movf	___lomod@divisor+4,w
  4832  15E7  3BAC               	subwfb	___lomod@dividend+4,f
  4833  15E8  0825               	movf	___lomod@divisor+5,w
  4834  15E9  3BAD               	subwfb	___lomod@dividend+5,f
  4835  15EA  0826               	movf	___lomod@divisor+6,w
  4836  15EB  3BAE               	subwfb	___lomod@dividend+6,f
  4837  15EC  0827               	movf	___lomod@divisor+7,w
  4838  15ED  3BAF               	subwfb	___lomod@dividend+7,f
  4839  15EE                     l2719:
  4840  15EE  36A7               	lsrf	___lomod@divisor+7,f
  4841  15EF  0CA6               	rrf	___lomod@divisor+6,f
  4842  15F0  0CA5               	rrf	___lomod@divisor+5,f
  4843  15F1  0CA4               	rrf	___lomod@divisor+4,f
  4844  15F2  0CA3               	rrf	___lomod@divisor+3,f
  4845  15F3  0CA2               	rrf	___lomod@divisor+2,f
  4846  15F4  0CA1               	rrf	___lomod@divisor+1,f
  4847  15F5  0CA0               	rrf	___lomod@divisor,f
  4848  15F6  3001               	movlw	1
  4849  15F7  02F1               	subwf	___lomod@counter,f
  4850  15F8  1D03               	btfss	3,2
  4851  15F9  2DFB               	goto	u2801
  4852  15FA  2DFC               	goto	u2800
  4853  15FB                     u2801:
  4854  15FB  2DBC               	goto	l2715
  4855  15FC                     u2800:
  4856  15FC                     l762:
  4857  15FC  0828               	movf	___lomod@dividend,w
  4858  15FD  00A0               	movwf	?___lomod
  4859  15FE  0829               	movf	___lomod@dividend+1,w
  4860  15FF  00A1               	movwf	?___lomod+1
  4861  1600  082A               	movf	___lomod@dividend+2,w
  4862  1601  00A2               	movwf	?___lomod+2
  4863  1602  082B               	movf	___lomod@dividend+3,w
  4864  1603  00A3               	movwf	?___lomod+3
  4865  1604  082C               	movf	___lomod@dividend+4,w
  4866  1605  00A4               	movwf	?___lomod+4
  4867  1606  082D               	movf	___lomod@dividend+5,w
  4868  1607  00A5               	movwf	?___lomod+5
  4869  1608  082E               	movf	___lomod@dividend+6,w
  4870  1609  00A6               	movwf	?___lomod+6
  4871  160A  082F               	movf	___lomod@dividend+7,w
  4872  160B  00A7               	movwf	?___lomod+7
  4873  160C                     l769:
  4874  160C  0008               	return
  4875  160D                     __end_of___lomod:
  4876                           
  4877                           	psect	text8
  4878  16F7                     __ptext8:	
  4879 ;; *************** function ___lodiv *****************
  4880 ;; Defined at:
  4881 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\lodiv.c"
  4882 ;; Parameters:    Size  Location     Type
  4883 ;;  divisor         8    0[BANK0 ] unsigned long long 
  4884 ;;  dividend        8    8[BANK0 ] unsigned long long 
  4885 ;; Auto vars:     Size  Location     Type
  4886 ;;  quotient        8    1[COMMON] unsigned long long 
  4887 ;;  counter         1    9[COMMON] unsigned char 
  4888 ;; Return value:  Size  Location     Type
  4889 ;;                  8    0[BANK0 ] unsigned long long 
  4890 ;; Registers used:
  4891 ;;		wreg, fsr1l, fsr1h, status,2, status,0
  4892 ;; Tracked objects:
  4893 ;;		On entry : 0/0
  4894 ;;		On exit  : 0/0
  4895 ;;		Unchanged: 0/0
  4896 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  4897 ;;      Params:         0      16       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4898 ;;      Locals:         9       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4899 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4900 ;;      Totals:        10      16       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4901 ;;Total ram usage:       26 bytes
  4902 ;; Hardware stack levels used: 1
  4903 ;; This function calls:
  4904 ;;		Nothing
  4905 ;; This function is called by:
  4906 ;;		_utoa
  4907 ;; This function uses a non-reentrant model
  4908 ;;
  4909                           
  4910                           
  4911                           ;psect for function ___lodiv
  4912  16F7                     ___lodiv:
  4913  16F7                     l2683:	
  4914                           ;incstack = 0
  4915                           ; Regs used in ___lodiv: [wreg+fsr1l+fsr1h+status,2+status,0]
  4916                           
  4917  16F7  3071               	movlw	low ___lodiv@quotient
  4918  16F8  0086               	movwf	6
  4919  16F9  3000               	movlw	high ___lodiv@quotient
  4920  16FA  0087               	movwf	7
  4921  16FB  3008               	movlw	8
  4922  16FC  00F0               	movwf	??___lodiv
  4923  16FD  3000               	movlw	0
  4924  16FE                     u2720:
  4925  16FE  001E               	movwi fsr1++
  4926  16FF  0BF0               	decfsz	??___lodiv,f
  4927  1700  2EFE               	goto	u2720
  4928  1701                     l2685:
  4929  1701  0020               	movlb	0	; select bank0
  4930  1702  0820               	movf	___lodiv@divisor,w
  4931  1703  0421               	iorwf	___lodiv@divisor+1,w
  4932  1704  0422               	iorwf	___lodiv@divisor+2,w
  4933  1705  0423               	iorwf	___lodiv@divisor+3,w
  4934  1706  0424               	iorwf	___lodiv@divisor+4,w
  4935  1707  0425               	iorwf	___lodiv@divisor+5,w
  4936  1708  0426               	iorwf	___lodiv@divisor+6,w
  4937  1709  0427               	iorwf	___lodiv@divisor+7,w
  4938  170A  1903               	skipnz
  4939  170B  2F0D               	goto	u2731
  4940  170C  2F0E               	goto	u2730
  4941  170D                     u2731:
  4942  170D  2F6A               	goto	l752
  4943  170E                     u2730:
  4944  170E                     l2687:
  4945  170E  01F9               	clrf	___lodiv@counter
  4946  170F  0AF9               	incf	___lodiv@counter,f
  4947  1710  2F1D               	goto	l2693
  4948  1711                     l2689:
  4949  1711  35A0               	lslf	___lodiv@divisor,f
  4950  1712  0DA1               	rlf	___lodiv@divisor+1,f
  4951  1713  0DA2               	rlf	___lodiv@divisor+2,f
  4952  1714  0DA3               	rlf	___lodiv@divisor+3,f
  4953  1715  0DA4               	rlf	___lodiv@divisor+4,f
  4954  1716  0DA5               	rlf	___lodiv@divisor+5,f
  4955  1717  0DA6               	rlf	___lodiv@divisor+6,f
  4956  1718  0DA7               	rlf	___lodiv@divisor+7,f
  4957  1719                     l2691:
  4958  1719  3001               	movlw	1
  4959  171A  00F0               	movwf	??___lodiv
  4960  171B  0870               	movf	??___lodiv,w
  4961  171C  07F9               	addwf	___lodiv@counter,f
  4962  171D                     l2693:
  4963  171D  1FA7               	btfss	___lodiv@divisor+7,7
  4964  171E  2F20               	goto	u2741
  4965  171F  2F21               	goto	u2740
  4966  1720                     u2741:
  4967  1720  2F11               	goto	l2689
  4968  1721                     u2740:
  4969  1721                     l2695:
  4970  1721  35F1               	lslf	___lodiv@quotient,f
  4971  1722  0DF2               	rlf	___lodiv@quotient+1,f
  4972  1723  0DF3               	rlf	___lodiv@quotient+2,f
  4973  1724  0DF4               	rlf	___lodiv@quotient+3,f
  4974  1725  0DF5               	rlf	___lodiv@quotient+4,f
  4975  1726  0DF6               	rlf	___lodiv@quotient+5,f
  4976  1727  0DF7               	rlf	___lodiv@quotient+6,f
  4977  1728  0DF8               	rlf	___lodiv@quotient+7,f
  4978  1729                     l2697:
  4979  1729  0827               	movf	___lodiv@divisor+7,w
  4980  172A  022F               	subwf	___lodiv@dividend+7,w
  4981  172B  1D03               	skipz
  4982  172C  2F47               	goto	u2755
  4983  172D  0826               	movf	___lodiv@divisor+6,w
  4984  172E  022E               	subwf	___lodiv@dividend+6,w
  4985  172F  1D03               	skipz
  4986  1730  2F47               	goto	u2755
  4987  1731  0825               	movf	___lodiv@divisor+5,w
  4988  1732  022D               	subwf	___lodiv@dividend+5,w
  4989  1733  1D03               	skipz
  4990  1734  2F47               	goto	u2755
  4991  1735  0824               	movf	___lodiv@divisor+4,w
  4992  1736  022C               	subwf	___lodiv@dividend+4,w
  4993  1737  1D03               	skipz
  4994  1738  2F47               	goto	u2755
  4995  1739  0823               	movf	___lodiv@divisor+3,w
  4996  173A  022B               	subwf	___lodiv@dividend+3,w
  4997  173B  1D03               	skipz
  4998  173C  2F47               	goto	u2755
  4999  173D  0822               	movf	___lodiv@divisor+2,w
  5000  173E  022A               	subwf	___lodiv@dividend+2,w
  5001  173F  1D03               	skipz
  5002  1740  2F47               	goto	u2755
  5003  1741  0821               	movf	___lodiv@divisor+1,w
  5004  1742  0229               	subwf	___lodiv@dividend+1,w
  5005  1743  1D03               	skipz
  5006  1744  2F47               	goto	u2755
  5007  1745  0820               	movf	___lodiv@divisor,w
  5008  1746  0228               	subwf	___lodiv@dividend,w
  5009  1747                     u2755:
  5010  1747  1C03               	skipc
  5011  1748  2F4A               	goto	u2751
  5012  1749  2F4B               	goto	u2750
  5013  174A                     u2751:
  5014  174A  2F5C               	goto	l2703
  5015  174B                     u2750:
  5016  174B                     l2699:
  5017  174B  0820               	movf	___lodiv@divisor,w
  5018  174C  02A8               	subwf	___lodiv@dividend,f
  5019  174D  0821               	movf	___lodiv@divisor+1,w
  5020  174E  3BA9               	subwfb	___lodiv@dividend+1,f
  5021  174F  0822               	movf	___lodiv@divisor+2,w
  5022  1750  3BAA               	subwfb	___lodiv@dividend+2,f
  5023  1751  0823               	movf	___lodiv@divisor+3,w
  5024  1752  3BAB               	subwfb	___lodiv@dividend+3,f
  5025  1753  0824               	movf	___lodiv@divisor+4,w
  5026  1754  3BAC               	subwfb	___lodiv@dividend+4,f
  5027  1755  0825               	movf	___lodiv@divisor+5,w
  5028  1756  3BAD               	subwfb	___lodiv@dividend+5,f
  5029  1757  0826               	movf	___lodiv@divisor+6,w
  5030  1758  3BAE               	subwfb	___lodiv@dividend+6,f
  5031  1759  0827               	movf	___lodiv@divisor+7,w
  5032  175A  3BAF               	subwfb	___lodiv@dividend+7,f
  5033  175B                     l2701:
  5034  175B  1471               	bsf	___lodiv@quotient,0
  5035  175C                     l2703:
  5036  175C  36A7               	lsrf	___lodiv@divisor+7,f
  5037  175D  0CA6               	rrf	___lodiv@divisor+6,f
  5038  175E  0CA5               	rrf	___lodiv@divisor+5,f
  5039  175F  0CA4               	rrf	___lodiv@divisor+4,f
  5040  1760  0CA3               	rrf	___lodiv@divisor+3,f
  5041  1761  0CA2               	rrf	___lodiv@divisor+2,f
  5042  1762  0CA1               	rrf	___lodiv@divisor+1,f
  5043  1763  0CA0               	rrf	___lodiv@divisor,f
  5044  1764  3001               	movlw	1
  5045  1765  02F9               	subwf	___lodiv@counter,f
  5046  1766  1D03               	btfss	3,2
  5047  1767  2F69               	goto	u2761
  5048  1768  2F6A               	goto	u2760
  5049  1769                     u2761:
  5050  1769  2F21               	goto	l2695
  5051  176A                     u2760:
  5052  176A                     l752:
  5053  176A  0871               	movf	___lodiv@quotient,w
  5054  176B  00A0               	movwf	?___lodiv
  5055  176C  0872               	movf	___lodiv@quotient+1,w
  5056  176D  00A1               	movwf	?___lodiv+1
  5057  176E  0873               	movf	___lodiv@quotient+2,w
  5058  176F  00A2               	movwf	?___lodiv+2
  5059  1770  0874               	movf	___lodiv@quotient+3,w
  5060  1771  00A3               	movwf	?___lodiv+3
  5061  1772  0875               	movf	___lodiv@quotient+4,w
  5062  1773  00A4               	movwf	?___lodiv+4
  5063  1774  0876               	movf	___lodiv@quotient+5,w
  5064  1775  00A5               	movwf	?___lodiv+5
  5065  1776  0877               	movf	___lodiv@quotient+6,w
  5066  1777  00A6               	movwf	?___lodiv+6
  5067  1778  0878               	movf	___lodiv@quotient+7,w
  5068  1779  00A7               	movwf	?___lodiv+7
  5069  177A                     l759:
  5070  177A  0008               	return
  5071  177B                     __end_of___lodiv:
  5072                           
  5073                           	psect	text9
  5074  1469                     __ptext9:	
  5075 ;; *************** function _strncmp *****************
  5076 ;; Defined at:
  5077 ;;		line 3 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\strncmp.c"
  5078 ;; Parameters:    Size  Location     Type
  5079 ;;  _l              2    0[COMMON] PTR const unsigned char 
  5080 ;;		 -> STR_6(6), STR_5(10), STR_4(8), 
  5081 ;;  _r              2    2[COMMON] PTR const unsigned char 
  5082 ;;		 -> STR_18(3), STR_13(3), STR_9(3), 
  5083 ;;  n               2    4[COMMON] unsigned int 
  5084 ;; Auto vars:     Size  Location     Type
  5085 ;;  r               2    9[COMMON] PTR const unsigned char 
  5086 ;;		 -> STR_18(3), STR_13(3), STR_9(3), 
  5087 ;;  l               2    7[COMMON] PTR const unsigned char 
  5088 ;;		 -> STR_6(6), STR_5(10), STR_4(8), 
  5089 ;; Return value:  Size  Location     Type
  5090 ;;                  2    0[COMMON] int 
  5091 ;; Registers used:
  5092 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath
  5093 ;; Tracked objects:
  5094 ;;		On entry : 0/0
  5095 ;;		On exit  : 0/0
  5096 ;;		Unchanged: 0/0
  5097 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  5098 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5099 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5100 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5101 ;;      Totals:        11       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5102 ;;Total ram usage:       11 bytes
  5103 ;; Hardware stack levels used: 1
  5104 ;; This function calls:
  5105 ;;		Nothing
  5106 ;; This function is called by:
  5107 ;;		_vfpfcnvrt
  5108 ;; This function uses a non-reentrant model
  5109 ;;
  5110                           
  5111                           
  5112                           ;psect for function _strncmp
  5113  1469                     _strncmp:
  5114  1469                     l2887:	
  5115                           ;incstack = 0
  5116                           ; Regs used in _strncmp: [wreg-fsr0h+status,2+status,0+pclath]
  5117                           
  5118  1469  0871               	movf	strncmp@_l+1,w
  5119  146A  00F8               	movwf	strncmp@l+1
  5120  146B  0870               	movf	strncmp@_l,w
  5121  146C  00F7               	movwf	strncmp@l
  5122  146D  0873               	movf	strncmp@_r+1,w
  5123  146E  00FA               	movwf	strncmp@r+1
  5124  146F  0872               	movf	strncmp@_r,w
  5125  1470  00F9               	movwf	strncmp@r
  5126  1471                     l2889:
  5127  1471  3001               	movlw	1
  5128  1472  02F4               	subwf	strncmp@n,f
  5129  1473  3000               	movlw	0
  5130  1474  3BF5               	subwfb	strncmp@n+1,f
  5131  1475  0A74               	incf	strncmp@n,w
  5132  1476  1D03               	skipz
  5133  1477  2C7C               	goto	u3121
  5134  1478  0A75               	incf	strncmp@n+1,w
  5135  1479  1D03               	btfss	3,2
  5136  147A  2C7C               	goto	u3121
  5137  147B  2C7D               	goto	u3120
  5138  147C                     u3121:
  5139  147C  2C8C               	goto	l2897
  5140  147D                     u3120:
  5141  147D                     l2891:
  5142  147D  01F0               	clrf	?_strncmp
  5143  147E  01F1               	clrf	?_strncmp+1
  5144  147F  2CC4               	goto	l1116
  5145  1480                     l2895:
  5146  1480  3001               	movlw	1
  5147  1481  07F7               	addwf	strncmp@l,f
  5148  1482  3000               	movlw	0
  5149  1483  3DF8               	addwfc	strncmp@l+1,f
  5150  1484  3001               	movlw	1
  5151  1485  07F9               	addwf	strncmp@r,f
  5152  1486  3000               	movlw	0
  5153  1487  3DFA               	addwfc	strncmp@r+1,f
  5154  1488  3001               	movlw	1
  5155  1489  02F4               	subwf	strncmp@n,f
  5156  148A  3000               	movlw	0
  5157  148B  3BF5               	subwfb	strncmp@n+1,f
  5158  148C                     l2897:
  5159  148C  0877               	movf	strncmp@l,w
  5160  148D  0084               	movwf	4
  5161  148E  0878               	movf	strncmp@l+1,w
  5162  148F  0085               	movwf	5
  5163  1490  0012               	moviw fsr0++
  5164  1491  1903               	btfsc	3,2
  5165  1492  2C94               	goto	u3131
  5166  1493  2C95               	goto	u3130
  5167  1494                     u3131:
  5168  1494  2CB4               	goto	l2905
  5169  1495                     u3130:
  5170  1495                     l2899:
  5171  1495  0879               	movf	strncmp@r,w
  5172  1496  0084               	movwf	4
  5173  1497  087A               	movf	strncmp@r+1,w
  5174  1498  0085               	movwf	5
  5175  1499  0012               	moviw fsr0++
  5176  149A  1903               	btfsc	3,2
  5177  149B  2C9D               	goto	u3141
  5178  149C  2C9E               	goto	u3140
  5179  149D                     u3141:
  5180  149D  2CB4               	goto	l2905
  5181  149E                     u3140:
  5182  149E                     l2901:
  5183  149E  0874               	movf	strncmp@n,w
  5184  149F  0475               	iorwf	strncmp@n+1,w
  5185  14A0  1903               	btfsc	3,2
  5186  14A1  2CA3               	goto	u3151
  5187  14A2  2CA4               	goto	u3150
  5188  14A3                     u3151:
  5189  14A3  2CB4               	goto	l2905
  5190  14A4                     u3150:
  5191  14A4                     l2903:
  5192  14A4  0879               	movf	strncmp@r,w
  5193  14A5  0084               	movwf	4
  5194  14A6  087A               	movf	strncmp@r+1,w
  5195  14A7  0085               	movwf	5
  5196  14A8  0800               	movf	0,w	;code access
  5197  14A9  00F6               	movwf	??_strncmp
  5198  14AA  0877               	movf	strncmp@l,w
  5199  14AB  0084               	movwf	4
  5200  14AC  0878               	movf	strncmp@l+1,w
  5201  14AD  0085               	movwf	5
  5202  14AE  0800               	movf	0,w	;code access
  5203  14AF  0676               	xorwf	??_strncmp,w
  5204  14B0  1903               	skipnz
  5205  14B1  2CB3               	goto	u3161
  5206  14B2  2CB4               	goto	u3160
  5207  14B3                     u3161:
  5208  14B3  2C80               	goto	l2895
  5209  14B4                     u3160:
  5210  14B4                     l2905:
  5211  14B4  0877               	movf	strncmp@l,w
  5212  14B5  0084               	movwf	4
  5213  14B6  0878               	movf	strncmp@l+1,w
  5214  14B7  0085               	movwf	5
  5215  14B8  0800               	movf	0,w	;code access
  5216  14B9  00F6               	movwf	??_strncmp
  5217  14BA  0879               	movf	strncmp@r,w
  5218  14BB  0084               	movwf	4
  5219  14BC  087A               	movf	strncmp@r+1,w
  5220  14BD  0085               	movwf	5
  5221  14BE  0800               	movf	0,w	;code access
  5222  14BF  0276               	subwf	??_strncmp,w
  5223  14C0  00F0               	movwf	?_strncmp
  5224  14C1  01F1               	clrf	?_strncmp+1
  5225  14C2  1C03               	skipc
  5226  14C3  03F1               	decf	?_strncmp+1,f
  5227  14C4                     l1116:
  5228  14C4  0008               	return
  5229  14C5                     __end_of_strncmp:
  5230                           
  5231                           	psect	text10
  5232  006A                     __ptext10:	
  5233 ;; *************** function _dtoa *****************
  5234 ;; Defined at:
  5235 ;;		line 287 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c"
  5236 ;; Parameters:    Size  Location     Type
  5237 ;;  fp              1    wreg     PTR struct _IO_FILE
  5238 ;;		 -> sprintf@f(5), 
  5239 ;;  d               8   16[BANK0 ] long long 
  5240 ;; Auto vars:     Size  Location     Type
  5241 ;;  fp              1   31[BANK0 ] PTR struct _IO_FILE
  5242 ;;		 -> sprintf@f(5), 
  5243 ;;  n               8   36[BANK0 ] long long 
  5244 ;;  i               2   44[BANK0 ] int 
  5245 ;;  s               2   34[BANK0 ] int 
  5246 ;;  w               2   32[BANK0 ] int 
  5247 ;;  p               2   29[BANK0 ] int 
  5248 ;; Return value:  Size  Location     Type
  5249 ;;                  2   16[BANK0 ] int 
  5250 ;; Registers used:
  5251 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  5252 ;; Tracked objects:
  5253 ;;		On entry : 0/0
  5254 ;;		On exit  : 0/0
  5255 ;;		Unchanged: 0/0
  5256 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  5257 ;;      Params:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5258 ;;      Locals:         0      19       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5259 ;;      Temps:          0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5260 ;;      Totals:         0      30       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5261 ;;Total ram usage:       30 bytes
  5262 ;; Hardware stack levels used: 1
  5263 ;; Hardware stack levels required when called: 4
  5264 ;; This function calls:
  5265 ;;		___aodiv
  5266 ;;		___aomod
  5267 ;;		_abs
  5268 ;;		_pad
  5269 ;; This function is called by:
  5270 ;;		_vfpfcnvrt
  5271 ;; This function uses a non-reentrant model
  5272 ;;
  5273                           
  5274                           
  5275                           ;psect for function _dtoa
  5276  006A                     _dtoa:
  5277                           
  5278                           ;incstack = 0
  5279                           ; Regs used in _dtoa: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  5280                           ;dtoa@fp stored from wreg
  5281  006A  0020               	movlb	0	; select bank0
  5282  006B  00BF               	movwf	dtoa@fp
  5283  006C                     l2793:
  5284                           
  5285                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 287: static int d
      +                          toa(FILE *fp, long long d);C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\d
      +                          oprnt.c: 288: {;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 28
      +                          9:     int i, p, s, w;;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprn
      +                          t.c: 290:     long long n;;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\d
      +                          oprnt.c: 293:     n = d;
  5286  006C  0830               	movf	dtoa@d,w
  5287  006D  00C4               	movwf	dtoa@n
  5288  006E  0831               	movf	dtoa@d+1,w
  5289  006F  00C5               	movwf	dtoa@n+1
  5290  0070  0832               	movf	dtoa@d+2,w
  5291  0071  00C6               	movwf	dtoa@n+2
  5292  0072  0833               	movf	dtoa@d+3,w
  5293  0073  00C7               	movwf	dtoa@n+3
  5294  0074  0834               	movf	dtoa@d+4,w
  5295  0075  00C8               	movwf	dtoa@n+4
  5296  0076  0835               	movf	dtoa@d+5,w
  5297  0077  00C9               	movwf	dtoa@n+5
  5298  0078  0836               	movf	dtoa@d+6,w
  5299  0079  00CA               	movwf	dtoa@n+6
  5300  007A  0837               	movf	dtoa@d+7,w
  5301  007B  00CB               	movwf	dtoa@n+7
  5302  007C                     l2795:
  5303                           
  5304                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 294:     s = n < 
      +                          0 ? 1 : 0;
  5305  007C  3044               	movlw	low dtoa@n
  5306  007D  0086               	movwf	6
  5307  007E  3000               	movlw	high dtoa@n
  5308  007F  0087               	movwf	7
  5309  0080  3F47               	moviw [7]fsr1
  5310  0081  00B8               	movwf	??_dtoa
  5311  0082  1BB8               	btfsc	??_dtoa,7
  5312  0083  2885               	goto	u2891
  5313  0084  2887               	goto	u2890
  5314  0085                     u2891:
  5315  0085  3001               	movlw	1
  5316  0086  2888               	goto	u2900
  5317  0087                     u2890:
  5318  0087  3000               	movlw	0
  5319  0088                     u2900:
  5320  0088  0020               	movlb	0	; select bank0
  5321  0089  00B9               	movwf	??_dtoa+1
  5322  008A  01BA               	clrf	??_dtoa+2
  5323  008B  0839               	movf	??_dtoa+1,w
  5324  008C  00C2               	movwf	dtoa@s
  5325  008D  083A               	movf	??_dtoa+2,w
  5326  008E  00C3               	movwf	dtoa@s+1
  5327  008F                     l2797:
  5328                           
  5329                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 295:     if (s) {
  5330  008F  0842               	movf	dtoa@s,w
  5331  0090  0443               	iorwf	dtoa@s+1,w
  5332  0091  1903               	btfsc	3,2
  5333  0092  2894               	goto	u2911
  5334  0093  2895               	goto	u2910
  5335  0094                     u2911:
  5336  0094  28B3               	goto	l1019
  5337  0095                     u2910:
  5338  0095                     l2799:
  5339                           
  5340                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 296:         n = 
      +                          -n;
  5341  0095  09C4               	comf	dtoa@n,f
  5342  0096  09C5               	comf	dtoa@n+1,f
  5343  0097  09C6               	comf	dtoa@n+2,f
  5344  0098  09C7               	comf	dtoa@n+3,f
  5345  0099  09C8               	comf	dtoa@n+4,f
  5346  009A  09C9               	comf	dtoa@n+5,f
  5347  009B  09CA               	comf	dtoa@n+6,f
  5348  009C  09CB               	comf	dtoa@n+7,f
  5349  009D  0AC4               	incf	dtoa@n,f
  5350  009E  1D03               	skipz
  5351  009F  28B3               	goto	u292lld
  5352  00A0  0AC5               	incf	dtoa@n+1,f
  5353  00A1  1D03               	skipz
  5354  00A2  28B3               	goto	u292lld
  5355  00A3  0AC6               	incf	dtoa@n+2,f
  5356  00A4  1D03               	skipz
  5357  00A5  28B3               	goto	u292lld
  5358  00A6  0AC7               	incf	dtoa@n+3,f
  5359  00A7  1D03               	skipz
  5360  00A8  28B3               	goto	u292lld
  5361  00A9  0AC8               	incf	dtoa@n+4,f
  5362  00AA  1D03               	skipz
  5363  00AB  28B3               	goto	u292lld
  5364  00AC  0AC9               	incf	dtoa@n+5,f
  5365  00AD  1D03               	skipz
  5366  00AE  28B3               	goto	u292lld
  5367  00AF  0ACA               	incf	dtoa@n+6,f
  5368  00B0  1D03               	skipz
  5369  00B1  28B3               	goto	u292lld
  5370  00B2  0ACB               	incf	dtoa@n+7,f
  5371  00B3                     u292lld:
  5372  00B3                     l1019:	
  5373                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 297:     }
  5374                           
  5375                           
  5376                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 300:     if (!(pr
      +                          ec < 0)) {
  5377  00B3  0022               	movlb	2	; select bank2
  5378  00B4  1BD3               	btfsc	(_prec+1)^(0+256),7
  5379  00B5  28B7               	goto	u2931
  5380  00B6  28B8               	goto	u2930
  5381  00B7                     u2931:
  5382  00B7  28BC               	goto	l1020
  5383  00B8                     u2930:
  5384  00B8                     l2801:
  5385                           
  5386                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 301:         flag
      +                          s &= ~(1 << 1);
  5387  00B8  30FD               	movlw	253
  5388  00B9  05D4               	andwf	_flags^(0+256),f
  5389  00BA  30FF               	movlw	255
  5390  00BB  05D5               	andwf	(_flags+1)^(0+256),f
  5391  00BC                     l1020:	
  5392                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 302:     }
  5393                           
  5394                           
  5395                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 303:     p = (0 <
      +                           prec) ? prec : 1;
  5396  00BC  0853               	movf	(_prec+1)^(0+256),w
  5397  00BD  3A80               	xorlw	128
  5398  00BE  0020               	movlb	0	; select bank0
  5399  00BF  00B8               	movwf	??_dtoa
  5400  00C0  3080               	movlw	128
  5401  00C1  0238               	subwf	??_dtoa,w
  5402  00C2  1D03               	skipz
  5403  00C3  28C7               	goto	u2945
  5404  00C4  3001               	movlw	1
  5405  00C5  0022               	movlb	2	; select bank2
  5406  00C6  0252               	subwf	_prec^(0+256),w
  5407  00C7                     u2945:
  5408  00C7  1803               	skipnc
  5409  00C8  28CA               	goto	u2941
  5410  00C9  28CB               	goto	u2940
  5411  00CA                     u2941:
  5412  00CA  28D1               	goto	l2805
  5413  00CB                     u2940:
  5414  00CB                     l2803:
  5415  00CB  3001               	movlw	1
  5416  00CC  0020               	movlb	0	; select bank0
  5417  00CD  00BD               	movwf	dtoa@p
  5418  00CE  3000               	movlw	0
  5419  00CF  00BE               	movwf	dtoa@p+1
  5420  00D0  28D9               	goto	l1024
  5421  00D1                     l2805:
  5422  00D1  0022               	movlb	2	; select bank2
  5423  00D2  0853               	movf	(_prec+1)^(0+256),w
  5424  00D3  0020               	movlb	0	; select bank0
  5425  00D4  00BE               	movwf	dtoa@p+1
  5426  00D5  0022               	movlb	2	; select bank2
  5427  00D6  0852               	movf	_prec^(0+256),w
  5428  00D7  0020               	movlb	0	; select bank0
  5429  00D8  00BD               	movwf	dtoa@p
  5430  00D9                     l1024:
  5431                           
  5432                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 304:     w = widt
      +                          h;
  5433  00D9  0022               	movlb	2	; select bank2
  5434  00DA  0851               	movf	(_width+1)^(0+256),w
  5435  00DB  0020               	movlb	0	; select bank0
  5436  00DC  00C1               	movwf	dtoa@w+1
  5437  00DD  0022               	movlb	2	; select bank2
  5438  00DE  0850               	movf	_width^(0+256),w
  5439  00DF  0020               	movlb	0	; select bank0
  5440  00E0  00C0               	movwf	dtoa@w
  5441  00E1                     l2807:
  5442                           
  5443                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 305:     if (s ||
      +                           (flags & (1 << 2))) {
  5444  00E1  0842               	movf	dtoa@s,w
  5445  00E2  0443               	iorwf	dtoa@s+1,w
  5446  00E3  1D03               	btfss	3,2
  5447  00E4  28E6               	goto	u2951
  5448  00E5  28E7               	goto	u2950
  5449  00E6                     u2951:
  5450  00E6  28EC               	goto	l2811
  5451  00E7                     u2950:
  5452  00E7                     l2809:
  5453  00E7  0022               	movlb	2	; select bank2
  5454  00E8  1D54               	btfss	_flags^(0+256),2
  5455  00E9  28EB               	goto	u2961
  5456  00EA  28EC               	goto	u2960
  5457  00EB                     u2961:
  5458  00EB  28F1               	goto	l1025
  5459  00EC                     u2960:
  5460  00EC                     l2811:
  5461                           
  5462                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 306:         --w;
  5463  00EC  30FF               	movlw	255
  5464  00ED  0020               	movlb	0	; select bank0
  5465  00EE  07C0               	addwf	dtoa@w,f
  5466  00EF  30FF               	movlw	255
  5467  00F0  3DC1               	addwfc	dtoa@w+1,f
  5468  00F1                     l1025:	
  5469                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 307:     }
  5470                           
  5471                           
  5472                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 310:     i = size
      +                          of(dbuf) - 1;
  5473  00F1  301F               	movlw	31
  5474  00F2  0020               	movlb	0	; select bank0
  5475  00F3  00CC               	movwf	dtoa@i
  5476  00F4  3000               	movlw	0
  5477  00F5  00CD               	movwf	dtoa@i+1
  5478  00F6                     l2813:
  5479                           
  5480                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 311:     dbuf[i] 
      +                          = '\0';
  5481  00F6  0023               	movlb	3	; select bank3
  5482  00F7  01BF               	clrf	(_dbuf^(0+384)+31)
  5483                           
  5484                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 312:     while (!
      +                          (i < 1) && (n || (0 < p) || ((0 < w) && (flags & (1 << 1))))) {
  5485  00F8  2962               	goto	l1028
  5486  00F9                     l2815:
  5487                           
  5488                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 313:         --i;
  5489  00F9  30FF               	movlw	255
  5490  00FA  0020               	movlb	0	; select bank0
  5491  00FB  07CC               	addwf	dtoa@i,f
  5492  00FC  30FF               	movlw	255
  5493  00FD  3DCD               	addwfc	dtoa@i+1,f
  5494  00FE                     l2817:
  5495                           
  5496                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 314:         dbuf
      +                          [i] = (char)((int)'0' + abs(n % 10));
  5497  00FE  300A               	movlw	10
  5498  00FF  00A0               	movwf	___aomod@divisor
  5499  0100  01A1               	clrf	___aomod@divisor+1
  5500  0101  01A2               	clrf	___aomod@divisor+2
  5501  0102  01A3               	clrf	___aomod@divisor+3
  5502  0103  01A4               	clrf	___aomod@divisor+4
  5503  0104  01A5               	clrf	___aomod@divisor+5
  5504  0105  01A6               	clrf	___aomod@divisor+6
  5505  0106  01A7               	clrf	___aomod@divisor+7
  5506  0107  0844               	movf	dtoa@n,w
  5507  0108  00A8               	movwf	___aomod@dividend
  5508  0109  0845               	movf	dtoa@n+1,w
  5509  010A  00A9               	movwf	___aomod@dividend+1
  5510  010B  0846               	movf	dtoa@n+2,w
  5511  010C  00AA               	movwf	___aomod@dividend+2
  5512  010D  0847               	movf	dtoa@n+3,w
  5513  010E  00AB               	movwf	___aomod@dividend+3
  5514  010F  0848               	movf	dtoa@n+4,w
  5515  0110  00AC               	movwf	___aomod@dividend+4
  5516  0111  0849               	movf	dtoa@n+5,w
  5517  0112  00AD               	movwf	___aomod@dividend+5
  5518  0113  084A               	movf	dtoa@n+6,w
  5519  0114  00AE               	movwf	___aomod@dividend+6
  5520  0115  084B               	movf	dtoa@n+7,w
  5521  0116  00AF               	movwf	___aomod@dividend+7
  5522  0117  318D  2528  3180   	fcall	___aomod
  5523  011A  0020               	movlb	0	; select bank0
  5524  011B  0821               	movf	?___aomod+1,w
  5525  011C  00F4               	movwf	abs@a+1
  5526  011D  0820               	movf	?___aomod,w
  5527  011E  00F3               	movwf	abs@a
  5528  011F  3190  2089  3180   	fcall	_abs
  5529  0122  0873               	movf	?_abs,w
  5530  0123  3E30               	addlw	48
  5531  0124  0020               	movlb	0	; select bank0
  5532  0125  00B8               	movwf	??_dtoa
  5533  0126  084C               	movf	dtoa@i,w
  5534  0127  3EA0               	addlw	(low (_dbuf| (0+256)))& (0+255)
  5535  0128  0086               	movwf	6
  5536  0129  3001               	movlw	1	; select bank3/4
  5537  012A  0087               	movwf	7
  5538  012B  0838               	movf	??_dtoa,w
  5539  012C  0081               	movwf	1
  5540  012D                     l2819:
  5541                           
  5542                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 315:         --p;
  5543  012D  30FF               	movlw	255
  5544  012E  07BD               	addwf	dtoa@p,f
  5545  012F  30FF               	movlw	255
  5546  0130  3DBE               	addwfc	dtoa@p+1,f
  5547  0131                     l2821:
  5548                           
  5549                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 316:         --w;
  5550  0131  30FF               	movlw	255
  5551  0132  07C0               	addwf	dtoa@w,f
  5552  0133  30FF               	movlw	255
  5553  0134  3DC1               	addwfc	dtoa@w+1,f
  5554  0135                     l2823:
  5555                           
  5556                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 317:         n = 
      +                          n / 10;
  5557  0135  300A               	movlw	10
  5558  0136  00A0               	movwf	___aodiv@divisor
  5559  0137  01A1               	clrf	___aodiv@divisor+1
  5560  0138  01A2               	clrf	___aodiv@divisor+2
  5561  0139  01A3               	clrf	___aodiv@divisor+3
  5562  013A  01A4               	clrf	___aodiv@divisor+4
  5563  013B  01A5               	clrf	___aodiv@divisor+5
  5564  013C  01A6               	clrf	___aodiv@divisor+6
  5565  013D  01A7               	clrf	___aodiv@divisor+7
  5566  013E  0844               	movf	dtoa@n,w
  5567  013F  00A8               	movwf	___aodiv@dividend
  5568  0140  0845               	movf	dtoa@n+1,w
  5569  0141  00A9               	movwf	___aodiv@dividend+1
  5570  0142  0846               	movf	dtoa@n+2,w
  5571  0143  00AA               	movwf	___aodiv@dividend+2
  5572  0144  0847               	movf	dtoa@n+3,w
  5573  0145  00AB               	movwf	___aodiv@dividend+3
  5574  0146  0848               	movf	dtoa@n+4,w
  5575  0147  00AC               	movwf	___aodiv@dividend+4
  5576  0148  0849               	movf	dtoa@n+5,w
  5577  0149  00AD               	movwf	___aodiv@dividend+5
  5578  014A  084A               	movf	dtoa@n+6,w
  5579  014B  00AE               	movwf	___aodiv@dividend+6
  5580  014C  084B               	movf	dtoa@n+7,w
  5581  014D  00AF               	movwf	___aodiv@dividend+7
  5582  014E  318E  26FF  3180   	fcall	___aodiv
  5583  0151  0020               	movlb	0	; select bank0
  5584  0152  0820               	movf	?___aodiv,w
  5585  0153  00C4               	movwf	dtoa@n
  5586  0154  0821               	movf	?___aodiv+1,w
  5587  0155  00C5               	movwf	dtoa@n+1
  5588  0156  0822               	movf	?___aodiv+2,w
  5589  0157  00C6               	movwf	dtoa@n+2
  5590  0158  0823               	movf	?___aodiv+3,w
  5591  0159  00C7               	movwf	dtoa@n+3
  5592  015A  0824               	movf	?___aodiv+4,w
  5593  015B  00C8               	movwf	dtoa@n+4
  5594  015C  0825               	movf	?___aodiv+5,w
  5595  015D  00C9               	movwf	dtoa@n+5
  5596  015E  0826               	movf	?___aodiv+6,w
  5597  015F  00CA               	movwf	dtoa@n+6
  5598  0160  0827               	movf	?___aodiv+7,w
  5599  0161  00CB               	movwf	dtoa@n+7
  5600  0162                     l1028:	
  5601                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 318:     }
  5602                           
  5603                           
  5604                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 312:     while (!
      +                          (i < 1) && (n || (0 < p) || ((0 < w) && (flags & (1 << 1))))) {
  5605  0162  0020               	movlb	0	; select bank0
  5606  0163  084D               	movf	dtoa@i+1,w
  5607  0164  3A80               	xorlw	128
  5608  0165  00B8               	movwf	??_dtoa
  5609  0166  3080               	movlw	128
  5610  0167  0238               	subwf	??_dtoa,w
  5611  0168  1D03               	skipz
  5612  0169  296C               	goto	u2975
  5613  016A  3001               	movlw	1
  5614  016B  024C               	subwf	dtoa@i,w
  5615  016C                     u2975:
  5616  016C  1C03               	skipc
  5617  016D  296F               	goto	u2971
  5618  016E  2970               	goto	u2970
  5619  016F                     u2971:
  5620  016F  299D               	goto	l2833
  5621  0170                     u2970:
  5622  0170                     l2825:
  5623  0170  0020               	movlb	0	; select bank0
  5624  0171  0844               	movf	dtoa@n,w
  5625  0172  0445               	iorwf	dtoa@n+1,w
  5626  0173  0446               	iorwf	dtoa@n+2,w
  5627  0174  0447               	iorwf	dtoa@n+3,w
  5628  0175  0448               	iorwf	dtoa@n+4,w
  5629  0176  0449               	iorwf	dtoa@n+5,w
  5630  0177  044A               	iorwf	dtoa@n+6,w
  5631  0178  044B               	iorwf	dtoa@n+7,w
  5632  0179  1D03               	skipz
  5633  017A  297C               	goto	u2981
  5634  017B  297D               	goto	u2980
  5635  017C                     u2981:
  5636  017C  28F9               	goto	l2815
  5637  017D                     u2980:
  5638  017D                     l2827:
  5639  017D  083E               	movf	dtoa@p+1,w
  5640  017E  3A80               	xorlw	128
  5641  017F  00B8               	movwf	??_dtoa
  5642  0180  3080               	movlw	128
  5643  0181  0238               	subwf	??_dtoa,w
  5644  0182  1D03               	skipz
  5645  0183  2986               	goto	u2995
  5646  0184  3001               	movlw	1
  5647  0185  023D               	subwf	dtoa@p,w
  5648  0186                     u2995:
  5649  0186  1803               	skipnc
  5650  0187  2989               	goto	u2991
  5651  0188  298A               	goto	u2990
  5652  0189                     u2991:
  5653  0189  28F9               	goto	l2815
  5654  018A                     u2990:
  5655  018A                     l2829:
  5656  018A  0020               	movlb	0	; select bank0
  5657  018B  0841               	movf	dtoa@w+1,w
  5658  018C  3A80               	xorlw	128
  5659  018D  00B8               	movwf	??_dtoa
  5660  018E  3080               	movlw	128
  5661  018F  0238               	subwf	??_dtoa,w
  5662  0190  1D03               	skipz
  5663  0191  2994               	goto	u3005
  5664  0192  3001               	movlw	1
  5665  0193  0240               	subwf	dtoa@w,w
  5666  0194                     u3005:
  5667  0194  1C03               	skipc
  5668  0195  2997               	goto	u3001
  5669  0196  2998               	goto	u3000
  5670  0197                     u3001:
  5671  0197  299D               	goto	l2833
  5672  0198                     u3000:
  5673  0198                     l2831:
  5674  0198  0022               	movlb	2	; select bank2
  5675  0199  18D4               	btfsc	_flags^(0+256),1
  5676  019A  299C               	goto	u3011
  5677  019B  299D               	goto	u3010
  5678  019C                     u3011:
  5679  019C  28F9               	goto	l2815
  5680  019D                     u3010:
  5681  019D                     l2833:
  5682                           
  5683                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 321:     if (s ||
      +                           (flags & (1 << 2))) {
  5684  019D  0020               	movlb	0	; select bank0
  5685  019E  0842               	movf	dtoa@s,w
  5686  019F  0443               	iorwf	dtoa@s+1,w
  5687  01A0  1D03               	btfss	3,2
  5688  01A1  29A3               	goto	u3021
  5689  01A2  29A4               	goto	u3020
  5690  01A3                     u3021:
  5691  01A3  29A9               	goto	l2837
  5692  01A4                     u3020:
  5693  01A4                     l2835:
  5694  01A4  0022               	movlb	2	; select bank2
  5695  01A5  1D54               	btfss	_flags^(0+256),2
  5696  01A6  29A8               	goto	u3031
  5697  01A7  29A9               	goto	u3030
  5698  01A8                     u3031:
  5699  01A8  29C6               	goto	l2847
  5700  01A9                     u3030:
  5701  01A9                     l2837:
  5702                           
  5703                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 322:         --i;
  5704  01A9  30FF               	movlw	255
  5705  01AA  0020               	movlb	0	; select bank0
  5706  01AB  07CC               	addwf	dtoa@i,f
  5707  01AC  30FF               	movlw	255
  5708  01AD  3DCD               	addwfc	dtoa@i+1,f
  5709  01AE                     l2839:
  5710                           
  5711                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 323:         dbuf
      +                          [i] = s ? '-' : '+';
  5712  01AE  0842               	movf	dtoa@s,w
  5713  01AF  0443               	iorwf	dtoa@s+1,w
  5714  01B0  1D03               	btfss	3,2
  5715  01B1  29B3               	goto	u3041
  5716  01B2  29B4               	goto	u3040
  5717  01B3                     u3041:
  5718  01B3  29B9               	goto	l2843
  5719  01B4                     u3040:
  5720  01B4                     l2841:
  5721  01B4  302B               	movlw	43
  5722  01B5  00BB               	movwf	_dtoa$1239
  5723  01B6  3000               	movlw	0
  5724  01B7  00BC               	movwf	_dtoa$1239+1
  5725  01B8  29BD               	goto	l2845
  5726  01B9                     l2843:
  5727  01B9  302D               	movlw	45
  5728  01BA  00BB               	movwf	_dtoa$1239
  5729  01BB  3000               	movlw	0
  5730  01BC  00BC               	movwf	_dtoa$1239+1
  5731  01BD                     l2845:
  5732  01BD  083B               	movf	_dtoa$1239,w
  5733  01BE  00B8               	movwf	??_dtoa
  5734  01BF  084C               	movf	dtoa@i,w
  5735  01C0  3EA0               	addlw	(low (_dbuf| (0+256)))& (0+255)
  5736  01C1  0086               	movwf	6
  5737  01C2  3001               	movlw	1	; select bank3/4
  5738  01C3  0087               	movwf	7
  5739  01C4  0838               	movf	??_dtoa,w
  5740  01C5  0081               	movwf	1
  5741  01C6                     l2847:
  5742                           
  5743                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 327:     return p
      +                          ad(fp, &dbuf[i], w);
  5744  01C6  0020               	movlb	0	; select bank0
  5745  01C7  084C               	movf	dtoa@i,w
  5746  01C8  3EA0               	addlw	(low (_dbuf| (0+256)))& (0+255)
  5747  01C9  00B8               	movwf	??_dtoa
  5748  01CA  0838               	movf	??_dtoa,w
  5749  01CB  00A4               	movwf	pad@buf
  5750  01CC  0841               	movf	dtoa@w+1,w
  5751  01CD  00A6               	movwf	pad@p+1
  5752  01CE  0840               	movf	dtoa@w,w
  5753  01CF  00A5               	movwf	pad@p
  5754  01D0  083F               	movf	dtoa@fp,w
  5755  01D1  3193  235B  3180   	fcall	_pad
  5756  01D4  0020               	movlb	0	; select bank0
  5757  01D5  0825               	movf	?_pad+1,w
  5758  01D6  00B1               	movwf	?_dtoa+1
  5759  01D7  0824               	movf	?_pad,w
  5760  01D8  00B0               	movwf	?_dtoa
  5761  01D9                     l1042:
  5762  01D9  0008               	return
  5763  01DA                     __end_of_dtoa:
  5764                           
  5765                           	psect	text11
  5766  135B                     __ptext11:	
  5767 ;; *************** function _pad *****************
  5768 ;; Defined at:
  5769 ;;		line 72 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c"
  5770 ;; Parameters:    Size  Location     Type
  5771 ;;  fp              1    wreg     PTR struct _IO_FILE
  5772 ;;		 -> sprintf@f(5), 
  5773 ;;  buf             1    4[BANK0 ] PTR unsigned char 
  5774 ;;		 -> dbuf(32), 
  5775 ;;  p               2    5[BANK0 ] int 
  5776 ;; Auto vars:     Size  Location     Type
  5777 ;;  fp              1   11[BANK0 ] PTR struct _IO_FILE
  5778 ;;		 -> sprintf@f(5), 
  5779 ;;  w               2    9[BANK0 ] int 
  5780 ;;  i               2    7[BANK0 ] int 
  5781 ;; Return value:  Size  Location     Type
  5782 ;;                  2    4[BANK0 ] int 
  5783 ;; Registers used:
  5784 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  5785 ;; Tracked objects:
  5786 ;;		On entry : 0/0
  5787 ;;		On exit  : 0/0
  5788 ;;		Unchanged: 0/0
  5789 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  5790 ;;      Params:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5791 ;;      Locals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5792 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5793 ;;      Totals:         1       8       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5794 ;;Total ram usage:        9 bytes
  5795 ;; Hardware stack levels used: 1
  5796 ;; Hardware stack levels required when called: 3
  5797 ;; This function calls:
  5798 ;;		_fputc
  5799 ;;		_fputs
  5800 ;;		_strlen
  5801 ;; This function is called by:
  5802 ;;		_dtoa
  5803 ;;		_utoa
  5804 ;; This function uses a non-reentrant model
  5805 ;;
  5806                           
  5807                           
  5808                           ;psect for function _pad
  5809  135B                     _pad:
  5810                           
  5811                           ;incstack = 0
  5812                           ; Regs used in _pad: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  5813                           ;pad@fp stored from wreg
  5814  135B  0020               	movlb	0	; select bank0
  5815  135C  00AB               	movwf	pad@fp
  5816  135D                     l2721:
  5817                           
  5818                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 72: static int pa
      +                          d(FILE *fp, char *buf, int p);C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\commo
      +                          n\doprnt.c: 73: {;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 
      +                          74:     int i, w;;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 
      +                          77:     if (flags & (1 << 0)) {
  5819  135D  0022               	movlb	2	; select bank2
  5820  135E  1C54               	btfss	_flags^(0+256),0
  5821  135F  2B61               	goto	u2811
  5822  1360  2B62               	goto	u2810
  5823  1361                     u2811:
  5824  1361  2B6B               	goto	l2725
  5825  1362                     u2810:
  5826  1362                     l2723:
  5827                           
  5828                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 78:         fputs
      +                          ((const char *)buf, fp);
  5829  1362  0020               	movlb	0	; select bank0
  5830  1363  082B               	movf	pad@fp,w
  5831  1364  00FC               	movwf	??_pad
  5832  1365  087C               	movf	??_pad,w
  5833  1366  00F8               	movwf	fputs@fp
  5834  1367  0824               	movf	pad@buf,w
  5835  1368  3191  2186  3193   	fcall	_fputs
  5836  136B                     l2725:
  5837                           
  5838                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 82:     w = (p < 
      +                          0) ? 0 : p;
  5839  136B  0020               	movlb	0	; select bank0
  5840  136C  1BA6               	btfsc	pad@p+1,7
  5841  136D  2B6F               	goto	u2821
  5842  136E  2B70               	goto	u2820
  5843  136F                     u2821:
  5844  136F  2B75               	goto	l2729
  5845  1370                     u2820:
  5846  1370                     l2727:
  5847  1370  0826               	movf	pad@p+1,w
  5848  1371  00AA               	movwf	pad@w+1
  5849  1372  0825               	movf	pad@p,w
  5850  1373  00A9               	movwf	pad@w
  5851  1374  2B77               	goto	l1011
  5852  1375                     l2729:
  5853  1375  01A9               	clrf	pad@w
  5854  1376  01AA               	clrf	pad@w+1
  5855  1377                     l1011:
  5856                           
  5857                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 83:     i = 0;
  5858  1377  01A7               	clrf	pad@i
  5859  1378  01A8               	clrf	pad@i+1
  5860                           
  5861                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 84:     while (i 
      +                          < w) {
  5862  1379  2B8B               	goto	l2735
  5863  137A                     l2731:
  5864                           
  5865                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 85:         fputc
      +                          (' ', fp);
  5866  137A  3020               	movlw	32
  5867  137B  00F0               	movwf	fputc@c
  5868  137C  3000               	movlw	0
  5869  137D  00F1               	movwf	fputc@c+1
  5870  137E  0020               	movlb	0	; select bank0
  5871  137F  082B               	movf	pad@fp,w
  5872  1380  00FC               	movwf	??_pad
  5873  1381  087C               	movf	??_pad,w
  5874  1382  00F2               	movwf	fputc@fp
  5875  1383  3192  225F  3193   	fcall	_fputc
  5876  1386                     l2733:
  5877                           
  5878                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 86:         ++i;
  5879  1386  3001               	movlw	1
  5880  1387  0020               	movlb	0	; select bank0
  5881  1388  07A7               	addwf	pad@i,f
  5882  1389  3000               	movlw	0
  5883  138A  3DA8               	addwfc	pad@i+1,f
  5884  138B                     l2735:
  5885                           
  5886                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 84:     while (i 
      +                          < w) {
  5887  138B  0828               	movf	pad@i+1,w
  5888  138C  3A80               	xorlw	128
  5889  138D  00FC               	movwf	??_pad
  5890  138E  082A               	movf	pad@w+1,w
  5891  138F  3A80               	xorlw	128
  5892  1390  027C               	subwf	??_pad,w
  5893  1391  1D03               	skipz
  5894  1392  2B95               	goto	u2835
  5895  1393  0829               	movf	pad@w,w
  5896  1394  0227               	subwf	pad@i,w
  5897  1395                     u2835:
  5898  1395  1C03               	skipc
  5899  1396  2B98               	goto	u2831
  5900  1397  2B99               	goto	u2830
  5901  1398                     u2831:
  5902  1398  2B7A               	goto	l2731
  5903  1399                     u2830:
  5904  1399                     l1014:
  5905                           
  5906                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 90:     if (!(fla
      +                          gs & (1 << 0))) {
  5907  1399  0022               	movlb	2	; select bank2
  5908  139A  1854               	btfsc	_flags^(0+256),0
  5909  139B  2B9D               	goto	u2841
  5910  139C  2B9E               	goto	u2840
  5911  139D                     u2841:
  5912  139D  2BA7               	goto	l2739
  5913  139E                     u2840:
  5914  139E                     l2737:
  5915                           
  5916                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 91:         fputs
      +                          ((const char *)buf, fp);
  5917  139E  0020               	movlb	0	; select bank0
  5918  139F  082B               	movf	pad@fp,w
  5919  13A0  00FC               	movwf	??_pad
  5920  13A1  087C               	movf	??_pad,w
  5921  13A2  00F8               	movwf	fputs@fp
  5922  13A3  0824               	movf	pad@buf,w
  5923  13A4  3191  2186  3193   	fcall	_fputs
  5924  13A7                     l2739:
  5925                           
  5926                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 94:     return (i
      +                          nt)(strlen(buf) + (size_t)w);
  5927  13A7  0020               	movlb	0	; select bank0
  5928  13A8  0824               	movf	pad@buf,w
  5929  13A9  3190  20A3  3193   	fcall	_strlen
  5930  13AC  0020               	movlb	0	; select bank0
  5931  13AD  0829               	movf	pad@w,w
  5932  13AE  0770               	addwf	?_strlen,w
  5933  13AF  00A4               	movwf	?_pad
  5934  13B0  082A               	movf	pad@w+1,w
  5935  13B1  3D71               	addwfc	?_strlen+1,w
  5936  13B2  00A5               	movwf	?_pad+1
  5937  13B3                     l1016:
  5938  13B3  0008               	return
  5939  13B4                     __end_of_pad:
  5940                           
  5941                           	psect	text12
  5942  10A3                     __ptext12:	
  5943 ;; *************** function _strlen *****************
  5944 ;; Defined at:
  5945 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\strlen.c"
  5946 ;; Parameters:    Size  Location     Type
  5947 ;;  s               1    wreg     PTR const unsigned char 
  5948 ;;		 -> dbuf(32), 
  5949 ;; Auto vars:     Size  Location     Type
  5950 ;;  s               1    4[COMMON] PTR const unsigned char 
  5951 ;;		 -> dbuf(32), 
  5952 ;;  a               1    3[COMMON] PTR const unsigned char 
  5953 ;;		 -> dbuf(32), 
  5954 ;; Return value:  Size  Location     Type
  5955 ;;                  2    0[COMMON] unsigned int 
  5956 ;; Registers used:
  5957 ;;		wreg, fsr1l, fsr1h, status,2, status,0
  5958 ;; Tracked objects:
  5959 ;;		On entry : 0/0
  5960 ;;		On exit  : 0/0
  5961 ;;		Unchanged: 0/0
  5962 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  5963 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5964 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5965 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5966 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5967 ;;Total ram usage:        5 bytes
  5968 ;; Hardware stack levels used: 1
  5969 ;; This function calls:
  5970 ;;		Nothing
  5971 ;; This function is called by:
  5972 ;;		_pad
  5973 ;; This function uses a non-reentrant model
  5974 ;;
  5975                           
  5976                           
  5977                           ;psect for function _strlen
  5978  10A3                     _strlen:
  5979                           
  5980                           ;incstack = 0
  5981                           ; Regs used in _strlen: [wreg+fsr1l+fsr1h+status,2+status,0]
  5982                           ;strlen@s stored from wreg
  5983  10A3  00F4               	movwf	strlen@s
  5984  10A4                     l2533:
  5985  10A4  0874               	movf	strlen@s,w
  5986  10A5  00F2               	movwf	??_strlen
  5987  10A6  0872               	movf	??_strlen,w
  5988  10A7  00F3               	movwf	strlen@a
  5989  10A8  28AD               	goto	l2537
  5990  10A9                     l2535:
  5991  10A9  3001               	movlw	1
  5992  10AA  00F2               	movwf	??_strlen
  5993  10AB  0872               	movf	??_strlen,w
  5994  10AC  07F4               	addwf	strlen@s,f
  5995  10AD                     l2537:
  5996  10AD  0874               	movf	strlen@s,w
  5997  10AE  0086               	movwf	6
  5998  10AF  3001               	movlw	1	; select bank2/3
  5999  10B0  0087               	movwf	7
  6000  10B1  0801               	movf	1,w
  6001  10B2  1D03               	btfss	3,2
  6002  10B3  28B5               	goto	u2381
  6003  10B4  28B6               	goto	u2380
  6004  10B5                     u2381:
  6005  10B5  28A9               	goto	l2535
  6006  10B6                     u2380:
  6007  10B6                     l2539:
  6008  10B6  0873               	movf	strlen@a,w
  6009  10B7  0274               	subwf	strlen@s,w
  6010  10B8  00F0               	movwf	?_strlen
  6011  10B9  01F1               	clrf	?_strlen+1
  6012  10BA  1BF0               	btfsc	?_strlen,7
  6013  10BB  03F1               	decf	?_strlen+1,f
  6014  10BC                     l1112:
  6015  10BC  0008               	return
  6016  10BD                     __end_of_strlen:
  6017                           
  6018                           	psect	text13
  6019  1186                     __ptext13:	
  6020 ;; *************** function _fputs *****************
  6021 ;; Defined at:
  6022 ;;		line 8 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\nf_fputs.c"
  6023 ;; Parameters:    Size  Location     Type
  6024 ;;  s               1    wreg     PTR const unsigned char 
  6025 ;;		 -> dbuf(32), 
  6026 ;;  fp              1    8[COMMON] PTR struct _IO_FILE
  6027 ;;		 -> sprintf@f(5), 
  6028 ;; Auto vars:     Size  Location     Type
  6029 ;;  s               1    3[BANK0 ] PTR const unsigned char 
  6030 ;;		 -> dbuf(32), 
  6031 ;;  i               2    1[BANK0 ] int 
  6032 ;;  c               1    0[BANK0 ] unsigned char 
  6033 ;; Return value:  Size  Location     Type
  6034 ;;                  2    8[COMMON] int 
  6035 ;; Registers used:
  6036 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  6037 ;; Tracked objects:
  6038 ;;		On entry : 0/0
  6039 ;;		On exit  : 0/0
  6040 ;;		Unchanged: 0/0
  6041 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  6042 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6043 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6044 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6045 ;;      Totals:         4       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6046 ;;Total ram usage:        8 bytes
  6047 ;; Hardware stack levels used: 1
  6048 ;; Hardware stack levels required when called: 2
  6049 ;; This function calls:
  6050 ;;		_fputc
  6051 ;; This function is called by:
  6052 ;;		_pad
  6053 ;; This function uses a non-reentrant model
  6054 ;;
  6055                           
  6056                           
  6057                           ;psect for function _fputs
  6058  1186                     _fputs:
  6059                           
  6060                           ;incstack = 0
  6061                           ; Regs used in _fputs: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  6062                           ;fputs@s stored from wreg
  6063  1186  0020               	movlb	0	; select bank0
  6064  1187  00A3               	movwf	fputs@s
  6065  1188                     l2525:
  6066  1188  01A1               	clrf	fputs@i
  6067  1189  01A2               	clrf	fputs@i+1
  6068  118A  299E               	goto	l2531
  6069  118B                     l2527:
  6070  118B  0820               	movf	fputs@c,w
  6071  118C  00F9               	movwf	??_fputs
  6072  118D  01FA               	clrf	??_fputs+1
  6073  118E  0879               	movf	??_fputs,w
  6074  118F  00F0               	movwf	fputc@c
  6075  1190  087A               	movf	??_fputs+1,w
  6076  1191  00F1               	movwf	fputc@c+1
  6077  1192  0878               	movf	fputs@fp,w
  6078  1193  00FB               	movwf	??_fputs+2
  6079  1194  087B               	movf	??_fputs+2,w
  6080  1195  00F2               	movwf	fputc@fp
  6081  1196  3192  225F  3191   	fcall	_fputc
  6082  1199                     l2529:
  6083  1199  3001               	movlw	1
  6084  119A  0020               	movlb	0	; select bank0
  6085  119B  07A1               	addwf	fputs@i,f
  6086  119C  3000               	movlw	0
  6087  119D  3DA2               	addwfc	fputs@i+1,f
  6088  119E                     l2531:
  6089  119E  0821               	movf	fputs@i,w
  6090  119F  0723               	addwf	fputs@s,w
  6091  11A0  00F9               	movwf	??_fputs
  6092  11A1  0879               	movf	??_fputs,w
  6093  11A2  0086               	movwf	6
  6094  11A3  3001               	movlw	1	; select bank2/3
  6095  11A4  0087               	movwf	7
  6096  11A5  0801               	movf	1,w
  6097  11A6  00FA               	movwf	??_fputs+1
  6098  11A7  087A               	movf	??_fputs+1,w
  6099  11A8  00A0               	movwf	fputs@c
  6100  11A9  0820               	movf	fputs@c,w
  6101  11AA  1D03               	btfss	3,2
  6102  11AB  29AD               	goto	u2371
  6103  11AC  29AE               	goto	u2370
  6104  11AD                     u2371:
  6105  11AD  298B               	goto	l2527
  6106  11AE                     u2370:
  6107  11AE                     l1103:
  6108  11AE  0008               	return
  6109  11AF                     __end_of_fputs:
  6110                           
  6111                           	psect	text14
  6112  125F                     __ptext14:	
  6113 ;; *************** function _fputc *****************
  6114 ;; Defined at:
  6115 ;;		line 8 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\nf_fputc.c"
  6116 ;; Parameters:    Size  Location     Type
  6117 ;;  c               2    0[COMMON] int 
  6118 ;;  fp              1    2[COMMON] PTR struct _IO_FILE
  6119 ;;		 -> sprintf@f(5), 
  6120 ;; Auto vars:     Size  Location     Type
  6121 ;;		None
  6122 ;; Return value:  Size  Location     Type
  6123 ;;                  2    0[COMMON] int 
  6124 ;; Registers used:
  6125 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  6126 ;; Tracked objects:
  6127 ;;		On entry : 0/0
  6128 ;;		On exit  : 0/0
  6129 ;;		Unchanged: 0/0
  6130 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  6131 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6132 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6133 ;;      Temps:          5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6134 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6135 ;;Total ram usage:        8 bytes
  6136 ;; Hardware stack levels used: 1
  6137 ;; Hardware stack levels required when called: 1
  6138 ;; This function calls:
  6139 ;;		_putch
  6140 ;; This function is called by:
  6141 ;;		_pad
  6142 ;;		_vfpfcnvrt
  6143 ;;		_fputs
  6144 ;; This function uses a non-reentrant model
  6145 ;;
  6146                           
  6147                           
  6148                           ;psect for function _fputc
  6149  125F                     _fputc:
  6150  125F                     l2503:	
  6151                           ;incstack = 0
  6152                           ; Regs used in _fputc: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  6153                           
  6154  125F  0872               	movf	fputc@fp,w
  6155  1260  1903               	btfsc	3,2
  6156  1261  2A63               	goto	u2311
  6157  1262  2A64               	goto	u2310
  6158  1263                     u2311:
  6159  1263  2A69               	goto	l2507
  6160  1264                     u2310:
  6161  1264                     l2505:
  6162  1264  0872               	movf	fputc@fp,w
  6163  1265  1D03               	btfss	3,2
  6164  1266  2A68               	goto	u2321
  6165  1267  2A69               	goto	u2320
  6166  1268                     u2321:
  6167  1268  2A6E               	goto	l2509
  6168  1269                     u2320:
  6169  1269                     l2507:
  6170  1269  0870               	movf	fputc@c,w
  6171  126A  3188  2000  3192   	fcall	_putch
  6172  126D  2AAD               	goto	l1095
  6173  126E                     l2509:
  6174  126E  0872               	movf	fputc@fp,w
  6175  126F  3E03               	addlw	3
  6176  1270  0086               	movwf	6
  6177  1271  0187               	clrf	7
  6178  1272  0016               	moviw fsr1++
  6179  1273  0401               	iorwf	1,w
  6180  1274  1903               	btfsc	3,2
  6181  1275  2A77               	goto	u2331
  6182  1276  2A78               	goto	u2330
  6183  1277                     u2331:
  6184  1277  2A95               	goto	l2513
  6185  1278                     u2330:
  6186  1278                     l2511:
  6187  1278  0872               	movf	fputc@fp,w
  6188  1279  3E03               	addlw	3
  6189  127A  0086               	movwf	6
  6190  127B  0187               	clrf	7
  6191  127C  3F40               	moviw [0]fsr1
  6192  127D  00F3               	movwf	??_fputc
  6193  127E  3F41               	moviw [1]fsr1
  6194  127F  00F4               	movwf	??_fputc+1
  6195  1280  0A72               	incf	fputc@fp,w
  6196  1281  0086               	movwf	6
  6197  1282  0187               	clrf	7
  6198  1283  3F40               	moviw [0]fsr1
  6199  1284  00F5               	movwf	??_fputc+2
  6200  1285  3F41               	moviw [1]fsr1
  6201  1286  00F6               	movwf	??_fputc+3
  6202  1287  0876               	movf	??_fputc+3,w
  6203  1288  3A80               	xorlw	128
  6204  1289  00F7               	movwf	??_fputc+4
  6205  128A  0874               	movf	??_fputc+1,w
  6206  128B  3A80               	xorlw	128
  6207  128C  0277               	subwf	??_fputc+4,w
  6208  128D  1D03               	skipz
  6209  128E  2A91               	goto	u2345
  6210  128F  0873               	movf	??_fputc,w
  6211  1290  0275               	subwf	??_fputc+2,w
  6212  1291                     u2345:
  6213  1291  1803               	skipnc
  6214  1292  2A94               	goto	u2341
  6215  1293  2A95               	goto	u2340
  6216  1294                     u2341:
  6217  1294  2AAD               	goto	l1095
  6218  1295                     u2340:
  6219  1295                     l2513:
  6220  1295  0870               	movf	fputc@c,w
  6221  1296  00F3               	movwf	??_fputc
  6222  1297  0872               	movf	fputc@fp,w
  6223  1298  0086               	movwf	6
  6224  1299  0187               	clrf	7
  6225  129A  0A72               	incf	fputc@fp,w
  6226  129B  0084               	movwf	4
  6227  129C  0185               	clrf	5
  6228  129D  0800               	movf	0,w
  6229  129E  0701               	addwf	1,w
  6230  129F  00F4               	movwf	??_fputc+1
  6231  12A0  0874               	movf	??_fputc+1,w
  6232  12A1  0086               	movwf	6
  6233  12A2  0187               	clrf	7
  6234  12A3  0873               	movf	??_fputc,w
  6235  12A4  0081               	movwf	1
  6236  12A5                     l2515:
  6237  12A5  0A72               	incf	fputc@fp,w
  6238  12A6  0086               	movwf	6
  6239  12A7  0187               	clrf	7
  6240  12A8  3001               	movlw	1
  6241  12A9  0781               	addwf	1,f
  6242  12AA  3141               	addfsr 1,1
  6243  12AB  1803               	skipnc
  6244  12AC  0A81               	incf	1,f
  6245  12AD                     l1095:
  6246  12AD  0008               	return
  6247  12AE                     __end_of_fputc:
  6248                           
  6249                           	psect	text15
  6250  0800                     __ptext15:	
  6251 ;; *************** function _putch *****************
  6252 ;; Defined at:
  6253 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\putch.c"
  6254 ;; Parameters:    Size  Location     Type
  6255 ;;  c               1    wreg     unsigned char 
  6256 ;; Auto vars:     Size  Location     Type
  6257 ;;  c               1    0[COMMON] unsigned char 
  6258 ;; Return value:  Size  Location     Type
  6259 ;;                  1    wreg      void 
  6260 ;; Registers used:
  6261 ;;		wreg
  6262 ;; Tracked objects:
  6263 ;;		On entry : 0/0
  6264 ;;		On exit  : 0/0
  6265 ;;		Unchanged: 0/0
  6266 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  6267 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6268 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6269 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6270 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6271 ;;Total ram usage:        0 bytes
  6272 ;; Hardware stack levels used: 1
  6273 ;; This function calls:
  6274 ;;		Nothing
  6275 ;; This function is called by:
  6276 ;;		_fputc
  6277 ;; This function uses a non-reentrant model
  6278 ;;
  6279                           
  6280                           
  6281                           ;psect for function _putch
  6282  0800                     _putch:
  6283  0800                     l1106:	
  6284                           ;incstack = 0
  6285                           ; Regs used in _putch: [wreg]
  6286                           
  6287  0800  0008               	return
  6288  0801                     __end_of_putch:
  6289                           
  6290                           	psect	text16
  6291  1089                     __ptext16:	
  6292 ;; *************** function _abs *****************
  6293 ;; Defined at:
  6294 ;;		line 1 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\abs.c"
  6295 ;; Parameters:    Size  Location     Type
  6296 ;;  a               2    3[COMMON] int 
  6297 ;; Auto vars:     Size  Location     Type
  6298 ;;		None
  6299 ;; Return value:  Size  Location     Type
  6300 ;;                  2    3[COMMON] int 
  6301 ;; Registers used:
  6302 ;;		wreg, status,2, status,0
  6303 ;; Tracked objects:
  6304 ;;		On entry : 0/0
  6305 ;;		On exit  : 0/0
  6306 ;;		Unchanged: 0/0
  6307 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  6308 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6309 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6310 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6311 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6312 ;;Total ram usage:        4 bytes
  6313 ;; Hardware stack levels used: 1
  6314 ;; This function calls:
  6315 ;;		Nothing
  6316 ;; This function is called by:
  6317 ;;		_dtoa
  6318 ;; This function uses a non-reentrant model
  6319 ;;
  6320                           
  6321                           
  6322                           ;psect for function _abs
  6323  1089                     _abs:
  6324  1089                     l2743:	
  6325                           ;incstack = 0
  6326                           ; Regs used in _abs: [wreg+status,2+status,0]
  6327                           
  6328  1089  0874               	movf	abs@a+1,w
  6329  108A  3A80               	xorlw	128
  6330  108B  00F5               	movwf	??_abs
  6331  108C  3080               	movlw	128
  6332  108D  0275               	subwf	??_abs,w
  6333  108E  1D03               	skipz
  6334  108F  2892               	goto	u2855
  6335  1090  3001               	movlw	1
  6336  1091  0273               	subwf	abs@a,w
  6337  1092                     u2855:
  6338  1092  1803               	skipnc
  6339  1093  2895               	goto	u2851
  6340  1094  2896               	goto	u2850
  6341  1095                     u2851:
  6342  1095  28A2               	goto	l1080
  6343  1096                     u2850:
  6344  1096                     l2745:
  6345  1096  0973               	comf	abs@a,w
  6346  1097  00F5               	movwf	??_abs
  6347  1098  0974               	comf	abs@a+1,w
  6348  1099  00F6               	movwf	??_abs+1
  6349  109A  0AF5               	incf	??_abs,f
  6350  109B  1903               	skipnz
  6351  109C  0AF6               	incf	??_abs+1,f
  6352  109D  0875               	movf	??_abs,w
  6353  109E  00F3               	movwf	?_abs
  6354  109F  0876               	movf	??_abs+1,w
  6355  10A0  00F4               	movwf	?_abs+1
  6356  10A1  28A2               	goto	l1083
  6357  10A2                     l1080:
  6358  10A2                     l1083:
  6359  10A2  0008               	return
  6360  10A3                     __end_of_abs:
  6361                           
  6362                           	psect	text17
  6363  0D28                     __ptext17:	
  6364 ;; *************** function ___aomod *****************
  6365 ;; Defined at:
  6366 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\aomod.c"
  6367 ;; Parameters:    Size  Location     Type
  6368 ;;  divisor         8    0[BANK0 ] long long 
  6369 ;;  dividend        8    8[BANK0 ] long long 
  6370 ;; Auto vars:     Size  Location     Type
  6371 ;;  sign            1    2[COMMON] unsigned char 
  6372 ;;  counter         1    1[COMMON] unsigned char 
  6373 ;; Return value:  Size  Location     Type
  6374 ;;                  8    0[BANK0 ] long long 
  6375 ;; Registers used:
  6376 ;;		wreg, fsr1l, fsr1h, status,2, status,0
  6377 ;; Tracked objects:
  6378 ;;		On entry : 0/0
  6379 ;;		On exit  : 0/0
  6380 ;;		Unchanged: 0/0
  6381 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  6382 ;;      Params:         0      16       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6383 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6384 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6385 ;;      Totals:         3      16       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6386 ;;Total ram usage:       19 bytes
  6387 ;; Hardware stack levels used: 1
  6388 ;; This function calls:
  6389 ;;		Nothing
  6390 ;; This function is called by:
  6391 ;;		_dtoa
  6392 ;; This function uses a non-reentrant model
  6393 ;;
  6394                           
  6395                           
  6396                           ;psect for function ___aomod
  6397  0D28                     ___aomod:
  6398  0D28                     l2653:	
  6399                           ;incstack = 0
  6400                           ; Regs used in ___aomod: [wreg+fsr1l+fsr1h+status,2+status,0]
  6401                           
  6402  0D28  01F2               	clrf	___aomod@sign
  6403  0D29                     l2655:
  6404  0D29  3028               	movlw	low ___aomod@dividend
  6405  0D2A  0086               	movwf	6
  6406  0D2B  3000               	movlw	high ___aomod@dividend
  6407  0D2C  0087               	movwf	7
  6408  0D2D  3F47               	moviw [7]fsr1
  6409  0D2E  00F0               	movwf	??___aomod
  6410  0D2F  1FF0               	btfss	??___aomod,7
  6411  0D30  2D32               	goto	u2621
  6412  0D31  2D33               	goto	u2620
  6413  0D32                     u2621:
  6414  0D32  2D54               	goto	l2659
  6415  0D33                     u2620:
  6416  0D33                     l2657:
  6417  0D33  0020               	movlb	0	; select bank0
  6418  0D34  09A8               	comf	___aomod@dividend,f
  6419  0D35  09A9               	comf	___aomod@dividend+1,f
  6420  0D36  09AA               	comf	___aomod@dividend+2,f
  6421  0D37  09AB               	comf	___aomod@dividend+3,f
  6422  0D38  09AC               	comf	___aomod@dividend+4,f
  6423  0D39  09AD               	comf	___aomod@dividend+5,f
  6424  0D3A  09AE               	comf	___aomod@dividend+6,f
  6425  0D3B  09AF               	comf	___aomod@dividend+7,f
  6426  0D3C  0AA8               	incf	___aomod@dividend,f
  6427  0D3D  1D03               	skipz
  6428  0D3E  2D52               	goto	u263lld
  6429  0D3F  0AA9               	incf	___aomod@dividend+1,f
  6430  0D40  1D03               	skipz
  6431  0D41  2D52               	goto	u263lld
  6432  0D42  0AAA               	incf	___aomod@dividend+2,f
  6433  0D43  1D03               	skipz
  6434  0D44  2D52               	goto	u263lld
  6435  0D45  0AAB               	incf	___aomod@dividend+3,f
  6436  0D46  1D03               	skipz
  6437  0D47  2D52               	goto	u263lld
  6438  0D48  0AAC               	incf	___aomod@dividend+4,f
  6439  0D49  1D03               	skipz
  6440  0D4A  2D52               	goto	u263lld
  6441  0D4B  0AAD               	incf	___aomod@dividend+5,f
  6442  0D4C  1D03               	skipz
  6443  0D4D  2D52               	goto	u263lld
  6444  0D4E  0AAE               	incf	___aomod@dividend+6,f
  6445  0D4F  1D03               	skipz
  6446  0D50  2D52               	goto	u263lld
  6447  0D51  0AAF               	incf	___aomod@dividend+7,f
  6448  0D52                     u263lld:
  6449  0D52  01F2               	clrf	___aomod@sign
  6450  0D53  0AF2               	incf	___aomod@sign,f
  6451  0D54                     l2659:
  6452  0D54  3020               	movlw	low ___aomod@divisor
  6453  0D55  0086               	movwf	6
  6454  0D56  3000               	movlw	high ___aomod@divisor
  6455  0D57  0087               	movwf	7
  6456  0D58  3F47               	moviw [7]fsr1
  6457  0D59  00F0               	movwf	??___aomod
  6458  0D5A  1FF0               	btfss	??___aomod,7
  6459  0D5B  2D5D               	goto	u2641
  6460  0D5C  2D5E               	goto	u2640
  6461  0D5D                     u2641:
  6462  0D5D  2D7D               	goto	l2663
  6463  0D5E                     u2640:
  6464  0D5E                     l2661:
  6465  0D5E  0020               	movlb	0	; select bank0
  6466  0D5F  09A0               	comf	___aomod@divisor,f
  6467  0D60  09A1               	comf	___aomod@divisor+1,f
  6468  0D61  09A2               	comf	___aomod@divisor+2,f
  6469  0D62  09A3               	comf	___aomod@divisor+3,f
  6470  0D63  09A4               	comf	___aomod@divisor+4,f
  6471  0D64  09A5               	comf	___aomod@divisor+5,f
  6472  0D65  09A6               	comf	___aomod@divisor+6,f
  6473  0D66  09A7               	comf	___aomod@divisor+7,f
  6474  0D67  0AA0               	incf	___aomod@divisor,f
  6475  0D68  1D03               	skipz
  6476  0D69  2D7D               	goto	u265lld
  6477  0D6A  0AA1               	incf	___aomod@divisor+1,f
  6478  0D6B  1D03               	skipz
  6479  0D6C  2D7D               	goto	u265lld
  6480  0D6D  0AA2               	incf	___aomod@divisor+2,f
  6481  0D6E  1D03               	skipz
  6482  0D6F  2D7D               	goto	u265lld
  6483  0D70  0AA3               	incf	___aomod@divisor+3,f
  6484  0D71  1D03               	skipz
  6485  0D72  2D7D               	goto	u265lld
  6486  0D73  0AA4               	incf	___aomod@divisor+4,f
  6487  0D74  1D03               	skipz
  6488  0D75  2D7D               	goto	u265lld
  6489  0D76  0AA5               	incf	___aomod@divisor+5,f
  6490  0D77  1D03               	skipz
  6491  0D78  2D7D               	goto	u265lld
  6492  0D79  0AA6               	incf	___aomod@divisor+6,f
  6493  0D7A  1D03               	skipz
  6494  0D7B  2D7D               	goto	u265lld
  6495  0D7C  0AA7               	incf	___aomod@divisor+7,f
  6496  0D7D                     u265lld:
  6497  0D7D                     l2663:
  6498  0D7D  0020               	movlb	0	; select bank0
  6499  0D7E  0820               	movf	___aomod@divisor,w
  6500  0D7F  0421               	iorwf	___aomod@divisor+1,w
  6501  0D80  0422               	iorwf	___aomod@divisor+2,w
  6502  0D81  0423               	iorwf	___aomod@divisor+3,w
  6503  0D82  0424               	iorwf	___aomod@divisor+4,w
  6504  0D83  0425               	iorwf	___aomod@divisor+5,w
  6505  0D84  0426               	iorwf	___aomod@divisor+6,w
  6506  0D85  0427               	iorwf	___aomod@divisor+7,w
  6507  0D86  1903               	skipnz
  6508  0D87  2D89               	goto	u2661
  6509  0D88  2D8A               	goto	u2660
  6510  0D89                     u2661:
  6511  0D89  2DDD               	goto	l2679
  6512  0D8A                     u2660:
  6513  0D8A                     l2665:
  6514  0D8A  01F1               	clrf	___aomod@counter
  6515  0D8B  0AF1               	incf	___aomod@counter,f
  6516  0D8C  2D99               	goto	l2671
  6517  0D8D                     l2667:
  6518  0D8D  35A0               	lslf	___aomod@divisor,f
  6519  0D8E  0DA1               	rlf	___aomod@divisor+1,f
  6520  0D8F  0DA2               	rlf	___aomod@divisor+2,f
  6521  0D90  0DA3               	rlf	___aomod@divisor+3,f
  6522  0D91  0DA4               	rlf	___aomod@divisor+4,f
  6523  0D92  0DA5               	rlf	___aomod@divisor+5,f
  6524  0D93  0DA6               	rlf	___aomod@divisor+6,f
  6525  0D94  0DA7               	rlf	___aomod@divisor+7,f
  6526  0D95                     l2669:
  6527  0D95  3001               	movlw	1
  6528  0D96  00F0               	movwf	??___aomod
  6529  0D97  0870               	movf	??___aomod,w
  6530  0D98  07F1               	addwf	___aomod@counter,f
  6531  0D99                     l2671:
  6532  0D99  1FA7               	btfss	___aomod@divisor+7,7
  6533  0D9A  2D9C               	goto	u2671
  6534  0D9B  2D9D               	goto	u2670
  6535  0D9C                     u2671:
  6536  0D9C  2D8D               	goto	l2667
  6537  0D9D                     u2670:
  6538  0D9D                     l2673:
  6539  0D9D  0827               	movf	___aomod@divisor+7,w
  6540  0D9E  022F               	subwf	___aomod@dividend+7,w
  6541  0D9F  1D03               	skipz
  6542  0DA0  2DBB               	goto	u2685
  6543  0DA1  0826               	movf	___aomod@divisor+6,w
  6544  0DA2  022E               	subwf	___aomod@dividend+6,w
  6545  0DA3  1D03               	skipz
  6546  0DA4  2DBB               	goto	u2685
  6547  0DA5  0825               	movf	___aomod@divisor+5,w
  6548  0DA6  022D               	subwf	___aomod@dividend+5,w
  6549  0DA7  1D03               	skipz
  6550  0DA8  2DBB               	goto	u2685
  6551  0DA9  0824               	movf	___aomod@divisor+4,w
  6552  0DAA  022C               	subwf	___aomod@dividend+4,w
  6553  0DAB  1D03               	skipz
  6554  0DAC  2DBB               	goto	u2685
  6555  0DAD  0823               	movf	___aomod@divisor+3,w
  6556  0DAE  022B               	subwf	___aomod@dividend+3,w
  6557  0DAF  1D03               	skipz
  6558  0DB0  2DBB               	goto	u2685
  6559  0DB1  0822               	movf	___aomod@divisor+2,w
  6560  0DB2  022A               	subwf	___aomod@dividend+2,w
  6561  0DB3  1D03               	skipz
  6562  0DB4  2DBB               	goto	u2685
  6563  0DB5  0821               	movf	___aomod@divisor+1,w
  6564  0DB6  0229               	subwf	___aomod@dividend+1,w
  6565  0DB7  1D03               	skipz
  6566  0DB8  2DBB               	goto	u2685
  6567  0DB9  0820               	movf	___aomod@divisor,w
  6568  0DBA  0228               	subwf	___aomod@dividend,w
  6569  0DBB                     u2685:
  6570  0DBB  1C03               	skipc
  6571  0DBC  2DBE               	goto	u2681
  6572  0DBD  2DBF               	goto	u2680
  6573  0DBE                     u2681:
  6574  0DBE  2DCF               	goto	l2677
  6575  0DBF                     u2680:
  6576  0DBF                     l2675:
  6577  0DBF  0820               	movf	___aomod@divisor,w
  6578  0DC0  02A8               	subwf	___aomod@dividend,f
  6579  0DC1  0821               	movf	___aomod@divisor+1,w
  6580  0DC2  3BA9               	subwfb	___aomod@dividend+1,f
  6581  0DC3  0822               	movf	___aomod@divisor+2,w
  6582  0DC4  3BAA               	subwfb	___aomod@dividend+2,f
  6583  0DC5  0823               	movf	___aomod@divisor+3,w
  6584  0DC6  3BAB               	subwfb	___aomod@dividend+3,f
  6585  0DC7  0824               	movf	___aomod@divisor+4,w
  6586  0DC8  3BAC               	subwfb	___aomod@dividend+4,f
  6587  0DC9  0825               	movf	___aomod@divisor+5,w
  6588  0DCA  3BAD               	subwfb	___aomod@dividend+5,f
  6589  0DCB  0826               	movf	___aomod@divisor+6,w
  6590  0DCC  3BAE               	subwfb	___aomod@dividend+6,f
  6591  0DCD  0827               	movf	___aomod@divisor+7,w
  6592  0DCE  3BAF               	subwfb	___aomod@dividend+7,f
  6593  0DCF                     l2677:
  6594  0DCF  36A7               	lsrf	___aomod@divisor+7,f
  6595  0DD0  0CA6               	rrf	___aomod@divisor+6,f
  6596  0DD1  0CA5               	rrf	___aomod@divisor+5,f
  6597  0DD2  0CA4               	rrf	___aomod@divisor+4,f
  6598  0DD3  0CA3               	rrf	___aomod@divisor+3,f
  6599  0DD4  0CA2               	rrf	___aomod@divisor+2,f
  6600  0DD5  0CA1               	rrf	___aomod@divisor+1,f
  6601  0DD6  0CA0               	rrf	___aomod@divisor,f
  6602  0DD7  3001               	movlw	1
  6603  0DD8  02F1               	subwf	___aomod@counter,f
  6604  0DD9  1D03               	btfss	3,2
  6605  0DDA  2DDC               	goto	u2691
  6606  0DDB  2DDD               	goto	u2690
  6607  0DDC                     u2691:
  6608  0DDC  2D9D               	goto	l2673
  6609  0DDD                     u2690:
  6610  0DDD                     l2679:
  6611  0DDD  0872               	movf	___aomod@sign,w
  6612  0DDE  1903               	btfsc	3,2
  6613  0DDF  2DE1               	goto	u2701
  6614  0DE0  2DE2               	goto	u2700
  6615  0DE1                     u2701:
  6616  0DE1  2E00               	goto	l632
  6617  0DE2                     u2700:
  6618  0DE2                     l2681:
  6619  0DE2  09A8               	comf	___aomod@dividend,f
  6620  0DE3  09A9               	comf	___aomod@dividend+1,f
  6621  0DE4  09AA               	comf	___aomod@dividend+2,f
  6622  0DE5  09AB               	comf	___aomod@dividend+3,f
  6623  0DE6  09AC               	comf	___aomod@dividend+4,f
  6624  0DE7  09AD               	comf	___aomod@dividend+5,f
  6625  0DE8  09AE               	comf	___aomod@dividend+6,f
  6626  0DE9  09AF               	comf	___aomod@dividend+7,f
  6627  0DEA  0AA8               	incf	___aomod@dividend,f
  6628  0DEB  1D03               	skipz
  6629  0DEC  2E00               	goto	u271lld
  6630  0DED  0AA9               	incf	___aomod@dividend+1,f
  6631  0DEE  1D03               	skipz
  6632  0DEF  2E00               	goto	u271lld
  6633  0DF0  0AAA               	incf	___aomod@dividend+2,f
  6634  0DF1  1D03               	skipz
  6635  0DF2  2E00               	goto	u271lld
  6636  0DF3  0AAB               	incf	___aomod@dividend+3,f
  6637  0DF4  1D03               	skipz
  6638  0DF5  2E00               	goto	u271lld
  6639  0DF6  0AAC               	incf	___aomod@dividend+4,f
  6640  0DF7  1D03               	skipz
  6641  0DF8  2E00               	goto	u271lld
  6642  0DF9  0AAD               	incf	___aomod@dividend+5,f
  6643  0DFA  1D03               	skipz
  6644  0DFB  2E00               	goto	u271lld
  6645  0DFC  0AAE               	incf	___aomod@dividend+6,f
  6646  0DFD  1D03               	skipz
  6647  0DFE  2E00               	goto	u271lld
  6648  0DFF  0AAF               	incf	___aomod@dividend+7,f
  6649  0E00                     u271lld:
  6650  0E00                     l632:
  6651  0E00  0020               	movlb	0	; select bank0
  6652  0E01  0828               	movf	___aomod@dividend,w
  6653  0E02  00A0               	movwf	?___aomod
  6654  0E03  0829               	movf	___aomod@dividend+1,w
  6655  0E04  00A1               	movwf	?___aomod+1
  6656  0E05  082A               	movf	___aomod@dividend+2,w
  6657  0E06  00A2               	movwf	?___aomod+2
  6658  0E07  082B               	movf	___aomod@dividend+3,w
  6659  0E08  00A3               	movwf	?___aomod+3
  6660  0E09  082C               	movf	___aomod@dividend+4,w
  6661  0E0A  00A4               	movwf	?___aomod+4
  6662  0E0B  082D               	movf	___aomod@dividend+5,w
  6663  0E0C  00A5               	movwf	?___aomod+5
  6664  0E0D  082E               	movf	___aomod@dividend+6,w
  6665  0E0E  00A6               	movwf	?___aomod+6
  6666  0E0F  082F               	movf	___aomod@dividend+7,w
  6667  0E10  00A7               	movwf	?___aomod+7
  6668  0E11                     l633:
  6669  0E11  0008               	return
  6670  0E12                     __end_of___aomod:
  6671                           
  6672                           	psect	text18
  6673  0EFF                     __ptext18:	
  6674 ;; *************** function ___aodiv *****************
  6675 ;; Defined at:
  6676 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\aodiv.c"
  6677 ;; Parameters:    Size  Location     Type
  6678 ;;  divisor         8    0[BANK0 ] long long 
  6679 ;;  dividend        8    8[BANK0 ] long long 
  6680 ;; Auto vars:     Size  Location     Type
  6681 ;;  quotient        8    3[COMMON] long long 
  6682 ;;  sign            1    2[COMMON] unsigned char 
  6683 ;;  counter         1    1[COMMON] unsigned char 
  6684 ;; Return value:  Size  Location     Type
  6685 ;;                  8    0[BANK0 ] long long 
  6686 ;; Registers used:
  6687 ;;		wreg, fsr1l, fsr1h, status,2, status,0
  6688 ;; Tracked objects:
  6689 ;;		On entry : 0/0
  6690 ;;		On exit  : 0/0
  6691 ;;		Unchanged: 0/0
  6692 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  6693 ;;      Params:         0      16       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6694 ;;      Locals:        10       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6695 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6696 ;;      Totals:        11      16       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6697 ;;Total ram usage:       27 bytes
  6698 ;; Hardware stack levels used: 1
  6699 ;; This function calls:
  6700 ;;		Nothing
  6701 ;; This function is called by:
  6702 ;;		_dtoa
  6703 ;; This function uses a non-reentrant model
  6704 ;;
  6705                           
  6706                           
  6707                           ;psect for function ___aodiv
  6708  0EFF                     ___aodiv:
  6709  0EFF                     l2615:	
  6710                           ;incstack = 0
  6711                           ; Regs used in ___aodiv: [wreg+fsr1l+fsr1h+status,2+status,0]
  6712                           
  6713  0EFF  01F2               	clrf	___aodiv@sign
  6714  0F00                     l2617:
  6715  0F00  3020               	movlw	low ___aodiv@divisor
  6716  0F01  0086               	movwf	6
  6717  0F02  3000               	movlw	high ___aodiv@divisor
  6718  0F03  0087               	movwf	7
  6719  0F04  3F47               	moviw [7]fsr1
  6720  0F05  00F0               	movwf	??___aodiv
  6721  0F06  1FF0               	btfss	??___aodiv,7
  6722  0F07  2F09               	goto	u2511
  6723  0F08  2F0A               	goto	u2510
  6724  0F09                     u2511:
  6725  0F09  2F2B               	goto	l2621
  6726  0F0A                     u2510:
  6727  0F0A                     l2619:
  6728  0F0A  0020               	movlb	0	; select bank0
  6729  0F0B  09A0               	comf	___aodiv@divisor,f
  6730  0F0C  09A1               	comf	___aodiv@divisor+1,f
  6731  0F0D  09A2               	comf	___aodiv@divisor+2,f
  6732  0F0E  09A3               	comf	___aodiv@divisor+3,f
  6733  0F0F  09A4               	comf	___aodiv@divisor+4,f
  6734  0F10  09A5               	comf	___aodiv@divisor+5,f
  6735  0F11  09A6               	comf	___aodiv@divisor+6,f
  6736  0F12  09A7               	comf	___aodiv@divisor+7,f
  6737  0F13  0AA0               	incf	___aodiv@divisor,f
  6738  0F14  1D03               	skipz
  6739  0F15  2F29               	goto	u252lld
  6740  0F16  0AA1               	incf	___aodiv@divisor+1,f
  6741  0F17  1D03               	skipz
  6742  0F18  2F29               	goto	u252lld
  6743  0F19  0AA2               	incf	___aodiv@divisor+2,f
  6744  0F1A  1D03               	skipz
  6745  0F1B  2F29               	goto	u252lld
  6746  0F1C  0AA3               	incf	___aodiv@divisor+3,f
  6747  0F1D  1D03               	skipz
  6748  0F1E  2F29               	goto	u252lld
  6749  0F1F  0AA4               	incf	___aodiv@divisor+4,f
  6750  0F20  1D03               	skipz
  6751  0F21  2F29               	goto	u252lld
  6752  0F22  0AA5               	incf	___aodiv@divisor+5,f
  6753  0F23  1D03               	skipz
  6754  0F24  2F29               	goto	u252lld
  6755  0F25  0AA6               	incf	___aodiv@divisor+6,f
  6756  0F26  1D03               	skipz
  6757  0F27  2F29               	goto	u252lld
  6758  0F28  0AA7               	incf	___aodiv@divisor+7,f
  6759  0F29                     u252lld:
  6760  0F29  01F2               	clrf	___aodiv@sign
  6761  0F2A  0AF2               	incf	___aodiv@sign,f
  6762  0F2B                     l2621:
  6763  0F2B  3028               	movlw	low ___aodiv@dividend
  6764  0F2C  0086               	movwf	6
  6765  0F2D  3000               	movlw	high ___aodiv@dividend
  6766  0F2E  0087               	movwf	7
  6767  0F2F  3F47               	moviw [7]fsr1
  6768  0F30  00F0               	movwf	??___aodiv
  6769  0F31  1FF0               	btfss	??___aodiv,7
  6770  0F32  2F34               	goto	u2531
  6771  0F33  2F35               	goto	u2530
  6772  0F34                     u2531:
  6773  0F34  2F58               	goto	l2627
  6774  0F35                     u2530:
  6775  0F35                     l2623:
  6776  0F35  0020               	movlb	0	; select bank0
  6777  0F36  09A8               	comf	___aodiv@dividend,f
  6778  0F37  09A9               	comf	___aodiv@dividend+1,f
  6779  0F38  09AA               	comf	___aodiv@dividend+2,f
  6780  0F39  09AB               	comf	___aodiv@dividend+3,f
  6781  0F3A  09AC               	comf	___aodiv@dividend+4,f
  6782  0F3B  09AD               	comf	___aodiv@dividend+5,f
  6783  0F3C  09AE               	comf	___aodiv@dividend+6,f
  6784  0F3D  09AF               	comf	___aodiv@dividend+7,f
  6785  0F3E  0AA8               	incf	___aodiv@dividend,f
  6786  0F3F  1D03               	skipz
  6787  0F40  2F54               	goto	u254lld
  6788  0F41  0AA9               	incf	___aodiv@dividend+1,f
  6789  0F42  1D03               	skipz
  6790  0F43  2F54               	goto	u254lld
  6791  0F44  0AAA               	incf	___aodiv@dividend+2,f
  6792  0F45  1D03               	skipz
  6793  0F46  2F54               	goto	u254lld
  6794  0F47  0AAB               	incf	___aodiv@dividend+3,f
  6795  0F48  1D03               	skipz
  6796  0F49  2F54               	goto	u254lld
  6797  0F4A  0AAC               	incf	___aodiv@dividend+4,f
  6798  0F4B  1D03               	skipz
  6799  0F4C  2F54               	goto	u254lld
  6800  0F4D  0AAD               	incf	___aodiv@dividend+5,f
  6801  0F4E  1D03               	skipz
  6802  0F4F  2F54               	goto	u254lld
  6803  0F50  0AAE               	incf	___aodiv@dividend+6,f
  6804  0F51  1D03               	skipz
  6805  0F52  2F54               	goto	u254lld
  6806  0F53  0AAF               	incf	___aodiv@dividend+7,f
  6807  0F54                     u254lld:
  6808  0F54                     l2625:
  6809  0F54  3001               	movlw	1
  6810  0F55  00F0               	movwf	??___aodiv
  6811  0F56  0870               	movf	??___aodiv,w
  6812  0F57  06F2               	xorwf	___aodiv@sign,f
  6813  0F58                     l2627:
  6814  0F58  3073               	movlw	low ___aodiv@quotient
  6815  0F59  0086               	movwf	6
  6816  0F5A  3000               	movlw	high ___aodiv@quotient
  6817  0F5B  0087               	movwf	7
  6818  0F5C  3008               	movlw	8
  6819  0F5D  00F0               	movwf	??___aodiv
  6820  0F5E  3000               	movlw	0
  6821  0F5F                     u2550:
  6822  0F5F  001E               	movwi fsr1++
  6823  0F60  0BF0               	decfsz	??___aodiv,f
  6824  0F61  2F5F               	goto	u2550
  6825  0F62                     l2629:
  6826  0F62  0020               	movlb	0	; select bank0
  6827  0F63  0820               	movf	___aodiv@divisor,w
  6828  0F64  0421               	iorwf	___aodiv@divisor+1,w
  6829  0F65  0422               	iorwf	___aodiv@divisor+2,w
  6830  0F66  0423               	iorwf	___aodiv@divisor+3,w
  6831  0F67  0424               	iorwf	___aodiv@divisor+4,w
  6832  0F68  0425               	iorwf	___aodiv@divisor+5,w
  6833  0F69  0426               	iorwf	___aodiv@divisor+6,w
  6834  0F6A  0427               	iorwf	___aodiv@divisor+7,w
  6835  0F6B  1903               	skipnz
  6836  0F6C  2F6E               	goto	u2561
  6837  0F6D  2F6F               	goto	u2560
  6838  0F6E                     u2561:
  6839  0F6E  2FCB               	goto	l2649
  6840  0F6F                     u2560:
  6841  0F6F                     l2631:
  6842  0F6F  01F1               	clrf	___aodiv@counter
  6843  0F70  0AF1               	incf	___aodiv@counter,f
  6844  0F71  2F7E               	goto	l2637
  6845  0F72                     l2633:
  6846  0F72  35A0               	lslf	___aodiv@divisor,f
  6847  0F73  0DA1               	rlf	___aodiv@divisor+1,f
  6848  0F74  0DA2               	rlf	___aodiv@divisor+2,f
  6849  0F75  0DA3               	rlf	___aodiv@divisor+3,f
  6850  0F76  0DA4               	rlf	___aodiv@divisor+4,f
  6851  0F77  0DA5               	rlf	___aodiv@divisor+5,f
  6852  0F78  0DA6               	rlf	___aodiv@divisor+6,f
  6853  0F79  0DA7               	rlf	___aodiv@divisor+7,f
  6854  0F7A                     l2635:
  6855  0F7A  3001               	movlw	1
  6856  0F7B  00F0               	movwf	??___aodiv
  6857  0F7C  0870               	movf	??___aodiv,w
  6858  0F7D  07F1               	addwf	___aodiv@counter,f
  6859  0F7E                     l2637:
  6860  0F7E  1FA7               	btfss	___aodiv@divisor+7,7
  6861  0F7F  2F81               	goto	u2571
  6862  0F80  2F82               	goto	u2570
  6863  0F81                     u2571:
  6864  0F81  2F72               	goto	l2633
  6865  0F82                     u2570:
  6866  0F82                     l2639:
  6867  0F82  35F3               	lslf	___aodiv@quotient,f
  6868  0F83  0DF4               	rlf	___aodiv@quotient+1,f
  6869  0F84  0DF5               	rlf	___aodiv@quotient+2,f
  6870  0F85  0DF6               	rlf	___aodiv@quotient+3,f
  6871  0F86  0DF7               	rlf	___aodiv@quotient+4,f
  6872  0F87  0DF8               	rlf	___aodiv@quotient+5,f
  6873  0F88  0DF9               	rlf	___aodiv@quotient+6,f
  6874  0F89  0DFA               	rlf	___aodiv@quotient+7,f
  6875  0F8A                     l2641:
  6876  0F8A  0827               	movf	___aodiv@divisor+7,w
  6877  0F8B  022F               	subwf	___aodiv@dividend+7,w
  6878  0F8C  1D03               	skipz
  6879  0F8D  2FA8               	goto	u2585
  6880  0F8E  0826               	movf	___aodiv@divisor+6,w
  6881  0F8F  022E               	subwf	___aodiv@dividend+6,w
  6882  0F90  1D03               	skipz
  6883  0F91  2FA8               	goto	u2585
  6884  0F92  0825               	movf	___aodiv@divisor+5,w
  6885  0F93  022D               	subwf	___aodiv@dividend+5,w
  6886  0F94  1D03               	skipz
  6887  0F95  2FA8               	goto	u2585
  6888  0F96  0824               	movf	___aodiv@divisor+4,w
  6889  0F97  022C               	subwf	___aodiv@dividend+4,w
  6890  0F98  1D03               	skipz
  6891  0F99  2FA8               	goto	u2585
  6892  0F9A  0823               	movf	___aodiv@divisor+3,w
  6893  0F9B  022B               	subwf	___aodiv@dividend+3,w
  6894  0F9C  1D03               	skipz
  6895  0F9D  2FA8               	goto	u2585
  6896  0F9E  0822               	movf	___aodiv@divisor+2,w
  6897  0F9F  022A               	subwf	___aodiv@dividend+2,w
  6898  0FA0  1D03               	skipz
  6899  0FA1  2FA8               	goto	u2585
  6900  0FA2  0821               	movf	___aodiv@divisor+1,w
  6901  0FA3  0229               	subwf	___aodiv@dividend+1,w
  6902  0FA4  1D03               	skipz
  6903  0FA5  2FA8               	goto	u2585
  6904  0FA6  0820               	movf	___aodiv@divisor,w
  6905  0FA7  0228               	subwf	___aodiv@dividend,w
  6906  0FA8                     u2585:
  6907  0FA8  1C03               	skipc
  6908  0FA9  2FAB               	goto	u2581
  6909  0FAA  2FAC               	goto	u2580
  6910  0FAB                     u2581:
  6911  0FAB  2FBD               	goto	l2647
  6912  0FAC                     u2580:
  6913  0FAC                     l2643:
  6914  0FAC  0820               	movf	___aodiv@divisor,w
  6915  0FAD  02A8               	subwf	___aodiv@dividend,f
  6916  0FAE  0821               	movf	___aodiv@divisor+1,w
  6917  0FAF  3BA9               	subwfb	___aodiv@dividend+1,f
  6918  0FB0  0822               	movf	___aodiv@divisor+2,w
  6919  0FB1  3BAA               	subwfb	___aodiv@dividend+2,f
  6920  0FB2  0823               	movf	___aodiv@divisor+3,w
  6921  0FB3  3BAB               	subwfb	___aodiv@dividend+3,f
  6922  0FB4  0824               	movf	___aodiv@divisor+4,w
  6923  0FB5  3BAC               	subwfb	___aodiv@dividend+4,f
  6924  0FB6  0825               	movf	___aodiv@divisor+5,w
  6925  0FB7  3BAD               	subwfb	___aodiv@dividend+5,f
  6926  0FB8  0826               	movf	___aodiv@divisor+6,w
  6927  0FB9  3BAE               	subwfb	___aodiv@dividend+6,f
  6928  0FBA  0827               	movf	___aodiv@divisor+7,w
  6929  0FBB  3BAF               	subwfb	___aodiv@dividend+7,f
  6930  0FBC                     l2645:
  6931  0FBC  1473               	bsf	___aodiv@quotient,0
  6932  0FBD                     l2647:
  6933  0FBD  36A7               	lsrf	___aodiv@divisor+7,f
  6934  0FBE  0CA6               	rrf	___aodiv@divisor+6,f
  6935  0FBF  0CA5               	rrf	___aodiv@divisor+5,f
  6936  0FC0  0CA4               	rrf	___aodiv@divisor+4,f
  6937  0FC1  0CA3               	rrf	___aodiv@divisor+3,f
  6938  0FC2  0CA2               	rrf	___aodiv@divisor+2,f
  6939  0FC3  0CA1               	rrf	___aodiv@divisor+1,f
  6940  0FC4  0CA0               	rrf	___aodiv@divisor,f
  6941  0FC5  3001               	movlw	1
  6942  0FC6  02F1               	subwf	___aodiv@counter,f
  6943  0FC7  1D03               	btfss	3,2
  6944  0FC8  2FCA               	goto	u2591
  6945  0FC9  2FCB               	goto	u2590
  6946  0FCA                     u2591:
  6947  0FCA  2F82               	goto	l2639
  6948  0FCB                     u2590:
  6949  0FCB                     l2649:
  6950  0FCB  0872               	movf	___aodiv@sign,w
  6951  0FCC  1903               	btfsc	3,2
  6952  0FCD  2FCF               	goto	u2601
  6953  0FCE  2FD0               	goto	u2600
  6954  0FCF                     u2601:
  6955  0FCF  2FEE               	goto	l619
  6956  0FD0                     u2600:
  6957  0FD0                     l2651:
  6958  0FD0  09F3               	comf	___aodiv@quotient,f
  6959  0FD1  09F4               	comf	___aodiv@quotient+1,f
  6960  0FD2  09F5               	comf	___aodiv@quotient+2,f
  6961  0FD3  09F6               	comf	___aodiv@quotient+3,f
  6962  0FD4  09F7               	comf	___aodiv@quotient+4,f
  6963  0FD5  09F8               	comf	___aodiv@quotient+5,f
  6964  0FD6  09F9               	comf	___aodiv@quotient+6,f
  6965  0FD7  09FA               	comf	___aodiv@quotient+7,f
  6966  0FD8  0AF3               	incf	___aodiv@quotient,f
  6967  0FD9  1D03               	skipz
  6968  0FDA  2FEE               	goto	u261lld
  6969  0FDB  0AF4               	incf	___aodiv@quotient+1,f
  6970  0FDC  1D03               	skipz
  6971  0FDD  2FEE               	goto	u261lld
  6972  0FDE  0AF5               	incf	___aodiv@quotient+2,f
  6973  0FDF  1D03               	skipz
  6974  0FE0  2FEE               	goto	u261lld
  6975  0FE1  0AF6               	incf	___aodiv@quotient+3,f
  6976  0FE2  1D03               	skipz
  6977  0FE3  2FEE               	goto	u261lld
  6978  0FE4  0AF7               	incf	___aodiv@quotient+4,f
  6979  0FE5  1D03               	skipz
  6980  0FE6  2FEE               	goto	u261lld
  6981  0FE7  0AF8               	incf	___aodiv@quotient+5,f
  6982  0FE8  1D03               	skipz
  6983  0FE9  2FEE               	goto	u261lld
  6984  0FEA  0AF9               	incf	___aodiv@quotient+6,f
  6985  0FEB  1D03               	skipz
  6986  0FEC  2FEE               	goto	u261lld
  6987  0FED  0AFA               	incf	___aodiv@quotient+7,f
  6988  0FEE                     u261lld:
  6989  0FEE                     l619:
  6990  0FEE  0873               	movf	___aodiv@quotient,w
  6991  0FEF  0020               	movlb	0	; select bank0
  6992  0FF0  00A0               	movwf	?___aodiv
  6993  0FF1  0874               	movf	___aodiv@quotient+1,w
  6994  0FF2  00A1               	movwf	?___aodiv+1
  6995  0FF3  0875               	movf	___aodiv@quotient+2,w
  6996  0FF4  00A2               	movwf	?___aodiv+2
  6997  0FF5  0876               	movf	___aodiv@quotient+3,w
  6998  0FF6  00A3               	movwf	?___aodiv+3
  6999  0FF7  0877               	movf	___aodiv@quotient+4,w
  7000  0FF8  00A4               	movwf	?___aodiv+4
  7001  0FF9  0878               	movf	___aodiv@quotient+5,w
  7002  0FFA  00A5               	movwf	?___aodiv+5
  7003  0FFB  0879               	movf	___aodiv@quotient+6,w
  7004  0FFC  00A6               	movwf	?___aodiv+6
  7005  0FFD  087A               	movf	___aodiv@quotient+7,w
  7006  0FFE  00A7               	movwf	?___aodiv+7
  7007  0FFF                     l620:
  7008  0FFF  0008               	return
  7009  1000                     __end_of___aodiv:
  7010                           
  7011                           	psect	text19
  7012  103D                     __ptext19:	
  7013 ;; *************** function _lcd_print_with *****************
  7014 ;; Defined at:
  7015 ;;		line 135 in file "lcd_lib.c"
  7016 ;; Parameters:    Size  Location     Type
  7017 ;;  p               1    wreg     PTR struct .
  7018 ;;		 -> NULL(0), main@lcd(4), 
  7019 ;;  str             2    6[BANK0 ] PTR unsigned char 
  7020 ;;		 -> print_gram@row2(16), print_gram@row1(16), STR_3(15), STR_2(11), 
  7021 ;;  col             1    8[BANK0 ] unsigned char 
  7022 ;;  row             1    9[BANK0 ] unsigned char 
  7023 ;; Auto vars:     Size  Location     Type
  7024 ;;  p               1   13[COMMON] PTR struct .
  7025 ;;		 -> NULL(0), main@lcd(4), 
  7026 ;; Return value:  Size  Location     Type
  7027 ;;                  1    wreg      void 
  7028 ;; Registers used:
  7029 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  7030 ;; Tracked objects:
  7031 ;;		On entry : 0/0
  7032 ;;		On exit  : 0/0
  7033 ;;		Unchanged: 0/0
  7034 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  7035 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7036 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7037 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7038 ;;      Totals:         1       6       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7039 ;;Total ram usage:        7 bytes
  7040 ;; Hardware stack levels used: 1
  7041 ;; Hardware stack levels required when called: 5
  7042 ;; This function calls:
  7043 ;;		_lcd_print
  7044 ;;		_lcd_set_cursor
  7045 ;; This function is called by:
  7046 ;;		_initialize
  7047 ;;		_print_gram
  7048 ;; This function uses a non-reentrant model
  7049 ;;
  7050                           
  7051                           
  7052                           ;psect for function _lcd_print_with
  7053  103D                     _lcd_print_with:
  7054                           
  7055                           ;incstack = 0
  7056                           ; Regs used in _lcd_print_with: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  7057                           ;lcd_print_with@p stored from wreg
  7058  103D  00FD               	movwf	lcd_print_with@p
  7059  103E                     l3633:
  7060                           
  7061                           ;lcd_lib.c: 136:     lcd_set_cursor(p, col, row);
  7062  103E  0020               	movlb	0	; select bank0
  7063  103F  0828               	movf	lcd_print_with@col,w
  7064  1040  00AA               	movwf	??_lcd_print_with
  7065  1041  082A               	movf	??_lcd_print_with,w
  7066  1042  00FA               	movwf	lcd_set_cursor@col
  7067  1043  0829               	movf	lcd_print_with@row,w
  7068  1044  00AB               	movwf	??_lcd_print_with+1
  7069  1045  082B               	movf	??_lcd_print_with+1,w
  7070  1046  00FB               	movwf	lcd_set_cursor@row
  7071  1047  087D               	movf	lcd_print_with@p,w
  7072  1048  3191  21AF  3190   	fcall	_lcd_set_cursor
  7073  104B                     l3635:
  7074                           
  7075                           ;lcd_lib.c: 137:     lcd_print(p, str);
  7076  104B  0020               	movlb	0	; select bank0
  7077  104C  0827               	movf	lcd_print_with@str+1,w
  7078  104D  00FB               	movwf	lcd_print@str+1
  7079  104E  0826               	movf	lcd_print_with@str,w
  7080  104F  00FA               	movwf	lcd_print@str
  7081  1050  087D               	movf	lcd_print_with@p,w
  7082  1051  3191  2116  3190   	fcall	_lcd_print
  7083  1054                     l329:
  7084  1054  0008               	return
  7085  1055                     __end_of_lcd_print_with:
  7086                           
  7087                           	psect	text20
  7088  0A36                     __ptext20:	
  7089 ;; *************** function _lcd_init *****************
  7090 ;; Defined at:
  7091 ;;		line 18 in file "lcd_lib.c"
  7092 ;; Parameters:    Size  Location     Type
  7093 ;;  p               1    wreg     PTR struct .
  7094 ;;		 -> NULL(0), main@lcd(4), 
  7095 ;; Auto vars:     Size  Location     Type
  7096 ;;  p               1    8[COMMON] PTR struct .
  7097 ;;		 -> NULL(0), main@lcd(4), 
  7098 ;; Return value:  Size  Location     Type
  7099 ;;                  1    wreg      void 
  7100 ;; Registers used:
  7101 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  7102 ;; Tracked objects:
  7103 ;;		On entry : 0/0
  7104 ;;		On exit  : 0/0
  7105 ;;		Unchanged: 0/0
  7106 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  7107 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7108 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7109 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7110 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7111 ;;Total ram usage:        3 bytes
  7112 ;; Hardware stack levels used: 1
  7113 ;; Hardware stack levels required when called: 4
  7114 ;; This function calls:
  7115 ;;		_write4bits
  7116 ;; This function is called by:
  7117 ;;		_initialize
  7118 ;; This function uses a non-reentrant model
  7119 ;;
  7120                           
  7121                           
  7122                           ;psect for function _lcd_init
  7123  0A36                     _lcd_init:
  7124                           
  7125                           ;incstack = 0
  7126                           ; Regs used in _lcd_init: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
  7127                           ;lcd_init@p stored from wreg
  7128  0A36  00F8               	movwf	lcd_init@p
  7129  0A37                     l3575:
  7130                           
  7131                           ;lcd_lib.c: 19:     _delay((unsigned long)((400)*(8000000/4000.0)));
  7132  0A37  3005               	movlw	5
  7133  0A38  00F7               	movwf	??_lcd_init+1
  7134  0A39  300F               	movlw	15
  7135  0A3A  00F6               	movwf	??_lcd_init
  7136  0A3B  30F1               	movlw	241
  7137  0A3C                     u4627:
  7138  0A3C  0B89               	decfsz	9,f
  7139  0A3D  2A3C               	goto	u4627
  7140  0A3E  0BF6               	decfsz	??_lcd_init,f
  7141  0A3F  2A3C               	goto	u4627
  7142  0A40  0BF7               	decfsz	??_lcd_init+1,f
  7143  0A41  2A3C               	goto	u4627
  7144  0A42  0000               	nop
  7145  0A43                     l3577:
  7146                           
  7147                           ;lcd_lib.c: 21:     write4bits(p, 0x30);
  7148  0A43  3030               	movlw	48
  7149  0A44  00F6               	movwf	??_lcd_init
  7150  0A45  0876               	movf	??_lcd_init,w
  7151  0A46  00F3               	movwf	write4bits@val
  7152  0A47  0878               	movf	lcd_init@p,w
  7153  0A48  3190  20D8  318A   	fcall	_write4bits
  7154  0A4B                     l3579:
  7155                           
  7156                           ;lcd_lib.c: 22:     _delay((unsigned long)((5)*(8000000/4000.0)));
  7157  0A4B  300D               	movlw	13
  7158  0A4C  00F6               	movwf	??_lcd_init
  7159  0A4D  30FC               	movlw	252
  7160  0A4E                     u4637:
  7161  0A4E  0B89               	decfsz	9,f
  7162  0A4F  2A4E               	goto	u4637
  7163  0A50  0BF6               	decfsz	??_lcd_init,f
  7164  0A51  2A4E               	goto	u4637
  7165                           
  7166                           ;lcd_lib.c: 24:     write4bits(p, 0x30);
  7167  0A52  3030               	movlw	48
  7168  0A53  00F6               	movwf	??_lcd_init
  7169  0A54  0876               	movf	??_lcd_init,w
  7170  0A55  00F3               	movwf	write4bits@val
  7171  0A56  0878               	movf	lcd_init@p,w
  7172  0A57  3190  20D8  318A   	fcall	_write4bits
  7173  0A5A                     l3581:
  7174                           
  7175                           ;lcd_lib.c: 25:     _delay((unsigned long)((5)*(8000000/4000.0)));
  7176  0A5A  300D               	movlw	13
  7177  0A5B  00F6               	movwf	??_lcd_init
  7178  0A5C  30FC               	movlw	252
  7179  0A5D                     u4647:
  7180  0A5D  0B89               	decfsz	9,f
  7181  0A5E  2A5D               	goto	u4647
  7182  0A5F  0BF6               	decfsz	??_lcd_init,f
  7183  0A60  2A5D               	goto	u4647
  7184  0A61                     l3583:
  7185                           
  7186                           ;lcd_lib.c: 27:     write4bits(p, 0x30);
  7187  0A61  3030               	movlw	48
  7188  0A62  00F6               	movwf	??_lcd_init
  7189  0A63  0876               	movf	??_lcd_init,w
  7190  0A64  00F3               	movwf	write4bits@val
  7191  0A65  0878               	movf	lcd_init@p,w
  7192  0A66  3190  20D8  318A   	fcall	_write4bits
  7193                           
  7194                           ;lcd_lib.c: 28:     _delay((unsigned long)((300)*(8000000/4000000.0)));
  7195  0A69  30C8               	movlw	200
  7196  0A6A                     u4657:
  7197  0A6A  0B89               	decfsz	9,f
  7198  0A6B  2A6A               	goto	u4657
  7199  0A6C                     l3585:
  7200                           
  7201                           ;lcd_lib.c: 30:     write4bits(p, 0x20);
  7202  0A6C  3020               	movlw	32
  7203  0A6D  00F6               	movwf	??_lcd_init
  7204  0A6E  0876               	movf	??_lcd_init,w
  7205  0A6F  00F3               	movwf	write4bits@val
  7206  0A70  0878               	movf	lcd_init@p,w
  7207  0A71  3190  20D8  318A   	fcall	_write4bits
  7208  0A74                     l3587:
  7209                           
  7210                           ;lcd_lib.c: 31:     _delay((unsigned long)((10)*(8000000/4000000.0)));
  7211  0A74  3006               	movlw	6
  7212  0A75                     u4667:
  7213  0A75  0B89               	decfsz	9,f
  7214  0A76  2A75               	goto	u4667
  7215  0A77  3200               	nop2
  7216                           
  7217                           ;lcd_lib.c: 34:     write4bits(p, 0x20);
  7218  0A78  3020               	movlw	32
  7219  0A79  00F6               	movwf	??_lcd_init
  7220  0A7A  0876               	movf	??_lcd_init,w
  7221  0A7B  00F3               	movwf	write4bits@val
  7222  0A7C  0878               	movf	lcd_init@p,w
  7223  0A7D  3190  20D8  318A   	fcall	_write4bits
  7224  0A80                     l3589:
  7225                           
  7226                           ;lcd_lib.c: 36:     _delay((unsigned long)((100)*(8000000/4000000.0)));
  7227  0A80  3042               	movlw	66
  7228  0A81                     u4677:
  7229  0A81  0B89               	decfsz	9,f
  7230  0A82  2A81               	goto	u4677
  7231  0A83  3200               	nop2
  7232  0A84                     l3591:
  7233                           
  7234                           ;lcd_lib.c: 38:     write4bits(p, 0x80);
  7235  0A84  3080               	movlw	128
  7236  0A85  00F6               	movwf	??_lcd_init
  7237  0A86  0876               	movf	??_lcd_init,w
  7238  0A87  00F3               	movwf	write4bits@val
  7239  0A88  0878               	movf	lcd_init@p,w
  7240  0A89  3190  20D8  318A   	fcall	_write4bits
  7241  0A8C                     l3593:
  7242                           
  7243                           ;lcd_lib.c: 43:     write4bits(p, 0x00);
  7244  0A8C  01F3               	clrf	write4bits@val
  7245  0A8D  0878               	movf	lcd_init@p,w
  7246  0A8E  3190  20D8  318A   	fcall	_write4bits
  7247  0A91                     l3595:
  7248                           
  7249                           ;lcd_lib.c: 45:     _delay((unsigned long)((100)*(8000000/4000000.0)));
  7250  0A91  3042               	movlw	66
  7251  0A92                     u4687:
  7252  0A92  0B89               	decfsz	9,f
  7253  0A93  2A92               	goto	u4687
  7254  0A94  3200               	nop2
  7255                           
  7256                           ;lcd_lib.c: 47:     write4bits(p, 0xC0);
  7257  0A95  30C0               	movlw	192
  7258  0A96  00F6               	movwf	??_lcd_init
  7259  0A97  0876               	movf	??_lcd_init,w
  7260  0A98  00F3               	movwf	write4bits@val
  7261  0A99  0878               	movf	lcd_init@p,w
  7262  0A9A  3190  20D8  318A   	fcall	_write4bits
  7263                           
  7264                           ;lcd_lib.c: 51:     write4bits(p, 0x00);
  7265  0A9D  01F3               	clrf	write4bits@val
  7266  0A9E  0878               	movf	lcd_init@p,w
  7267  0A9F  3190  20D8  318A   	fcall	_write4bits
  7268  0AA2                     l3597:
  7269                           
  7270                           ;lcd_lib.c: 53:     _delay((unsigned long)((100)*(8000000/4000000.0)));
  7271  0AA2  3042               	movlw	66
  7272  0AA3                     u4697:
  7273  0AA3  0B89               	decfsz	9,f
  7274  0AA4  2AA3               	goto	u4697
  7275  0AA5  3200               	nop2
  7276  0AA6                     l3599:
  7277                           
  7278                           ;lcd_lib.c: 55:     write4bits(p, 0x10);
  7279  0AA6  3010               	movlw	16
  7280  0AA7  00F6               	movwf	??_lcd_init
  7281  0AA8  0876               	movf	??_lcd_init,w
  7282  0AA9  00F3               	movwf	write4bits@val
  7283  0AAA  0878               	movf	lcd_init@p,w
  7284  0AAB  3190  20D8  318A   	fcall	_write4bits
  7285                           
  7286                           ;lcd_lib.c: 57:     _delay((unsigned long)((5)*(8000000/4000.0)));
  7287  0AAE  300D               	movlw	13
  7288  0AAF  00F6               	movwf	??_lcd_init
  7289  0AB0  30FC               	movlw	252
  7290  0AB1                     u4707:
  7291  0AB1  0B89               	decfsz	9,f
  7292  0AB2  2AB1               	goto	u4707
  7293  0AB3  0BF6               	decfsz	??_lcd_init,f
  7294  0AB4  2AB1               	goto	u4707
  7295  0AB5                     l3601:
  7296                           
  7297                           ;lcd_lib.c: 60:     write4bits(p, 0x00);
  7298  0AB5  01F3               	clrf	write4bits@val
  7299  0AB6  0878               	movf	lcd_init@p,w
  7300  0AB7  3190  20D8  318A   	fcall	_write4bits
  7301  0ABA                     l3603:
  7302                           
  7303                           ;lcd_lib.c: 62:     _delay((unsigned long)((100)*(8000000/4000000.0)));
  7304  0ABA  3042               	movlw	66
  7305  0ABB                     u4717:
  7306  0ABB  0B89               	decfsz	9,f
  7307  0ABC  2ABB               	goto	u4717
  7308  0ABD  3200               	nop2
  7309                           
  7310                           ;lcd_lib.c: 64:     write4bits(p, 0x60);
  7311  0ABE  3060               	movlw	96
  7312  0ABF  00F6               	movwf	??_lcd_init
  7313  0AC0  0876               	movf	??_lcd_init,w
  7314  0AC1  00F3               	movwf	write4bits@val
  7315  0AC2  0878               	movf	lcd_init@p,w
  7316  0AC3  3190  20D8  318A   	fcall	_write4bits
  7317                           
  7318                           ;lcd_lib.c: 68:     write4bits(p, 0x00);
  7319  0AC6  01F3               	clrf	write4bits@val
  7320  0AC7  0878               	movf	lcd_init@p,w
  7321  0AC8  3190  20D8  318A   	fcall	_write4bits
  7322  0ACB                     l3605:
  7323                           
  7324                           ;lcd_lib.c: 70:     _delay((unsigned long)((100)*(8000000/4000000.0)));
  7325  0ACB  3042               	movlw	66
  7326  0ACC                     u4727:
  7327  0ACC  0B89               	decfsz	9,f
  7328  0ACD  2ACC               	goto	u4727
  7329  0ACE  3200               	nop2
  7330  0ACF                     l3607:
  7331                           
  7332                           ;lcd_lib.c: 72:     write4bits(p, 0x20);
  7333  0ACF  3020               	movlw	32
  7334  0AD0  00F6               	movwf	??_lcd_init
  7335  0AD1  0876               	movf	??_lcd_init,w
  7336  0AD2  00F3               	movwf	write4bits@val
  7337  0AD3  0878               	movf	lcd_init@p,w
  7338  0AD4  3190  20D8  318A   	fcall	_write4bits
  7339                           
  7340                           ;lcd_lib.c: 74:     _delay((unsigned long)((3)*(8000000/4000.0)));
  7341  0AD7  3008               	movlw	8
  7342  0AD8  00F6               	movwf	??_lcd_init
  7343  0AD9  30CA               	movlw	202
  7344  0ADA                     u4737:
  7345  0ADA  0B89               	decfsz	9,f
  7346  0ADB  2ADA               	goto	u4737
  7347  0ADC  0BF6               	decfsz	??_lcd_init,f
  7348  0ADD  2ADA               	goto	u4737
  7349  0ADE                     l302:
  7350  0ADE  0008               	return
  7351  0ADF                     __end_of_lcd_init:
  7352                           
  7353                           	psect	text21
  7354  10D8                     __ptext21:	
  7355 ;; *************** function _write4bits *****************
  7356 ;; Defined at:
  7357 ;;		line 155 in file "lcd_lib.c"
  7358 ;; Parameters:    Size  Location     Type
  7359 ;;  p               1    wreg     PTR struct .
  7360 ;;		 -> NULL(0), main@lcd(4), 
  7361 ;;  val             1    3[COMMON] unsigned char 
  7362 ;; Auto vars:     Size  Location     Type
  7363 ;;  p               1    5[COMMON] PTR struct .
  7364 ;;		 -> NULL(0), main@lcd(4), 
  7365 ;; Return value:  Size  Location     Type
  7366 ;;                  1    wreg      void 
  7367 ;; Registers used:
  7368 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  7369 ;; Tracked objects:
  7370 ;;		On entry : 0/0
  7371 ;;		On exit  : 0/0
  7372 ;;		Unchanged: 0/0
  7373 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  7374 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7375 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7376 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7377 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7378 ;;Total ram usage:        3 bytes
  7379 ;; Hardware stack levels used: 1
  7380 ;; Hardware stack levels required when called: 3
  7381 ;; This function calls:
  7382 ;;		_lcd_cmd
  7383 ;; This function is called by:
  7384 ;;		_lcd_init
  7385 ;; This function uses a non-reentrant model
  7386 ;;
  7387                           
  7388                           
  7389                           ;psect for function _write4bits
  7390  10D8                     _write4bits:
  7391                           
  7392                           ;incstack = 0
  7393                           ; Regs used in _write4bits: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
  7394                           ;write4bits@p stored from wreg
  7395  10D8  00F5               	movwf	write4bits@p
  7396  10D9                     l3179:
  7397                           
  7398                           ;lcd_lib.c: 156:     lcd_cmd(p, val);
  7399  10D9  0873               	movf	write4bits@val,w
  7400  10DA  00F4               	movwf	??_write4bits
  7401  10DB  0874               	movf	??_write4bits,w
  7402  10DC  00F1               	movwf	lcd_cmd@cmd
  7403  10DD  0875               	movf	write4bits@p,w
  7404  10DE  3190  2026  3190   	fcall	_lcd_cmd
  7405                           
  7406                           ;lcd_lib.c: 157:     lcd_cmd(p, val | 0b00000100);
  7407  10E1  0873               	movf	write4bits@val,w
  7408  10E2  3804               	iorlw	4
  7409  10E3  00F4               	movwf	??_write4bits
  7410  10E4  0874               	movf	??_write4bits,w
  7411  10E5  00F1               	movwf	lcd_cmd@cmd
  7412  10E6  0875               	movf	write4bits@p,w
  7413  10E7  3190  2026  3190   	fcall	_lcd_cmd
  7414                           
  7415                           ;lcd_lib.c: 158:     lcd_cmd(p, val);
  7416  10EA  0873               	movf	write4bits@val,w
  7417  10EB  00F4               	movwf	??_write4bits
  7418  10EC  0874               	movf	??_write4bits,w
  7419  10ED  00F1               	movwf	lcd_cmd@cmd
  7420  10EE  0875               	movf	write4bits@p,w
  7421  10EF  3190  2026  3190   	fcall	_lcd_cmd
  7422  10F2                     l335:
  7423  10F2  0008               	return
  7424  10F3                     __end_of_write4bits:
  7425                           
  7426                           	psect	text22
  7427  1221                     __ptext22:	
  7428 ;; *************** function _lcd_clear *****************
  7429 ;; Defined at:
  7430 ;;		line 91 in file "lcd_lib.c"
  7431 ;; Parameters:    Size  Location     Type
  7432 ;;  p               1    wreg     PTR struct .
  7433 ;;		 -> NULL(0), main@lcd(4), 
  7434 ;; Auto vars:     Size  Location     Type
  7435 ;;  p               1   10[BANK0 ] PTR struct .
  7436 ;;		 -> NULL(0), main@lcd(4), 
  7437 ;;  col             1    9[BANK0 ] unsigned char 
  7438 ;;  row             1    8[BANK0 ] unsigned char 
  7439 ;; Return value:  Size  Location     Type
  7440 ;;                  1    wreg      void 
  7441 ;; Registers used:
  7442 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  7443 ;; Tracked objects:
  7444 ;;		On entry : 0/0
  7445 ;;		On exit  : 0/0
  7446 ;;		Unchanged: 0/0
  7447 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  7448 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7449 ;;      Locals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7450 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7451 ;;      Totals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7452 ;;Total ram usage:        5 bytes
  7453 ;; Hardware stack levels used: 1
  7454 ;; Hardware stack levels required when called: 5
  7455 ;; This function calls:
  7456 ;;		_lcd_print
  7457 ;;		_lcd_set_cursor
  7458 ;; This function is called by:
  7459 ;;		_initialize
  7460 ;;		_print_gram
  7461 ;; This function uses a non-reentrant model
  7462 ;;
  7463                           
  7464                           
  7465                           ;psect for function _lcd_clear
  7466  1221                     _lcd_clear:
  7467                           
  7468                           ;incstack = 0
  7469                           ; Regs used in _lcd_clear: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  7470                           ;lcd_clear@p stored from wreg
  7471  1221  0020               	movlb	0	; select bank0
  7472  1222  00AA               	movwf	lcd_clear@p
  7473  1223                     l3615:
  7474                           
  7475                           ;lcd_lib.c: 92:     for(uint8_t row = 0; row < (p->ROW); row++){
  7476  1223  01A8               	clrf	lcd_clear@row
  7477  1224  2A4E               	goto	l3629
  7478  1225                     l3617:
  7479                           
  7480                           ;lcd_lib.c: 93:         for(uint8_t col = 0; col < (p->COL); col++){
  7481  1225  01A9               	clrf	lcd_clear@col
  7482  1226  2A41               	goto	l3625
  7483  1227                     l3619:
  7484                           
  7485                           ;lcd_lib.c: 94:             lcd_set_cursor(p, col, row);
  7486  1227  0829               	movf	lcd_clear@col,w
  7487  1228  00A6               	movwf	??_lcd_clear
  7488  1229  0826               	movf	??_lcd_clear,w
  7489  122A  00FA               	movwf	lcd_set_cursor@col
  7490  122B  0828               	movf	lcd_clear@row,w
  7491  122C  00A7               	movwf	??_lcd_clear+1
  7492  122D  0827               	movf	??_lcd_clear+1,w
  7493  122E  00FB               	movwf	lcd_set_cursor@row
  7494  122F  082A               	movf	lcd_clear@p,w
  7495  1230  3191  21AF  3192   	fcall	_lcd_set_cursor
  7496  1233                     l3621:
  7497                           
  7498                           ;lcd_lib.c: 95:             lcd_print(p, " ");
  7499  1233  303B               	movlw	low (STR_1| (0+32768))
  7500  1234  00FA               	movwf	lcd_print@str
  7501  1235  30A0               	movlw	high (STR_1| (0+32768))
  7502  1236  00FB               	movwf	lcd_print@str+1
  7503  1237  0020               	movlb	0	; select bank0
  7504  1238  082A               	movf	lcd_clear@p,w
  7505  1239  3191  2116  3192   	fcall	_lcd_print
  7506  123C                     l3623:
  7507                           
  7508                           ;lcd_lib.c: 96:         }
  7509  123C  3001               	movlw	1
  7510  123D  0020               	movlb	0	; select bank0
  7511  123E  00A6               	movwf	??_lcd_clear
  7512  123F  0826               	movf	??_lcd_clear,w
  7513  1240  07A9               	addwf	lcd_clear@col,f
  7514  1241                     l3625:
  7515  1241  0A2A               	incf	lcd_clear@p,w
  7516  1242  0086               	movwf	6
  7517  1243  0187               	clrf	7
  7518  1244  0801               	movf	1,w
  7519  1245  0229               	subwf	lcd_clear@col,w
  7520  1246  1C03               	skipc
  7521  1247  2A49               	goto	u4281
  7522  1248  2A4A               	goto	u4280
  7523  1249                     u4281:
  7524  1249  2A27               	goto	l3619
  7525  124A                     u4280:
  7526  124A                     l3627:
  7527                           
  7528                           ;lcd_lib.c: 97:     }
  7529  124A  3001               	movlw	1
  7530  124B  00A6               	movwf	??_lcd_clear
  7531  124C  0826               	movf	??_lcd_clear,w
  7532  124D  07A8               	addwf	lcd_clear@row,f
  7533  124E                     l3629:
  7534  124E  082A               	movf	lcd_clear@p,w
  7535  124F  3E02               	addlw	2
  7536  1250  0086               	movwf	6
  7537  1251  0187               	clrf	7
  7538  1252  0801               	movf	1,w
  7539  1253  0228               	subwf	lcd_clear@row,w
  7540  1254  1C03               	skipc
  7541  1255  2A57               	goto	u4291
  7542  1256  2A58               	goto	u4290
  7543  1257                     u4291:
  7544  1257  2A25               	goto	l3617
  7545  1258                     u4290:
  7546  1258                     l3631:
  7547                           
  7548                           ;lcd_lib.c: 99:     lcd_set_cursor(p, 0, 0);
  7549  1258  01FA               	clrf	lcd_set_cursor@col
  7550  1259  01FB               	clrf	lcd_set_cursor@row
  7551  125A  082A               	movf	lcd_clear@p,w
  7552  125B  3191  21AF  3192   	fcall	_lcd_set_cursor
  7553  125E                     l314:
  7554  125E  0008               	return
  7555  125F                     __end_of_lcd_clear:
  7556                           
  7557                           	psect	text23
  7558  11AF                     __ptext23:	
  7559 ;; *************** function _lcd_set_cursor *****************
  7560 ;; Defined at:
  7561 ;;		line 107 in file "lcd_lib.c"
  7562 ;; Parameters:    Size  Location     Type
  7563 ;;  p               1    wreg     PTR struct .
  7564 ;;		 -> NULL(0), main@lcd(4), 
  7565 ;;  col             1   10[COMMON] unsigned char 
  7566 ;;  row             1   11[COMMON] unsigned char 
  7567 ;; Auto vars:     Size  Location     Type
  7568 ;;  p               1    5[BANK0 ] PTR struct .
  7569 ;;		 -> NULL(0), main@lcd(4), 
  7570 ;;  row_offsets     4    0[BANK0 ] unsigned char [4]
  7571 ;;  cmd             1    4[BANK0 ] unsigned char 
  7572 ;; Return value:  Size  Location     Type
  7573 ;;                  1    wreg      void 
  7574 ;; Registers used:
  7575 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  7576 ;; Tracked objects:
  7577 ;;		On entry : 0/0
  7578 ;;		On exit  : 0/0
  7579 ;;		Unchanged: 0/0
  7580 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  7581 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7582 ;;      Locals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7583 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7584 ;;      Totals:         3       6       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7585 ;;Total ram usage:        9 bytes
  7586 ;; Hardware stack levels used: 1
  7587 ;; Hardware stack levels required when called: 4
  7588 ;; This function calls:
  7589 ;;		_command
  7590 ;; This function is called by:
  7591 ;;		_lcd_clear
  7592 ;;		_lcd_print_with
  7593 ;; This function uses a non-reentrant model
  7594 ;;
  7595                           
  7596                           
  7597                           ;psect for function _lcd_set_cursor
  7598  11AF                     _lcd_set_cursor:
  7599                           
  7600                           ;incstack = 0
  7601                           ; Regs used in _lcd_set_cursor: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
  7602                           ;lcd_set_cursor@p stored from wreg
  7603  11AF  0020               	movlb	0	; select bank0
  7604  11B0  00A5               	movwf	lcd_set_cursor@p
  7605  11B1                     l3181:
  7606                           
  7607                           ;lcd_lib.c: 108:     uint8_t row_offsets[] = {0x00, 0x40, 0x14, 0x54};
  7608  11B1  0022               	movlb	2	; select bank2
  7609  11B2  0839               	movf	(lcd_set_cursor@F2781+3)^(0+256),w
  7610  11B3  0020               	movlb	0	; select bank0
  7611  11B4  00A3               	movwf	lcd_set_cursor@row_offsets+3
  7612  11B5  0022               	movlb	2	; select bank2
  7613  11B6  0838               	movf	(lcd_set_cursor@F2781+2)^(0+256),w
  7614  11B7  0020               	movlb	0	; select bank0
  7615  11B8  00A2               	movwf	lcd_set_cursor@row_offsets+2
  7616  11B9  0022               	movlb	2	; select bank2
  7617  11BA  0837               	movf	(lcd_set_cursor@F2781+1)^(0+256),w
  7618  11BB  0020               	movlb	0	; select bank0
  7619  11BC  00A1               	movwf	lcd_set_cursor@row_offsets+1
  7620  11BD  0022               	movlb	2	; select bank2
  7621  11BE  0836               	movf	lcd_set_cursor@F2781^(0+256),w
  7622  11BF  0020               	movlb	0	; select bank0
  7623  11C0  00A0               	movwf	lcd_set_cursor@row_offsets
  7624  11C1                     l3183:
  7625                           
  7626                           ;lcd_lib.c: 109:     if(row > p->ROW){
  7627  11C1  0825               	movf	lcd_set_cursor@p,w
  7628  11C2  3E02               	addlw	2
  7629  11C3  0086               	movwf	6
  7630  11C4  0187               	clrf	7
  7631  11C5  087B               	movf	lcd_set_cursor@row,w
  7632  11C6  0201               	subwf	1,w
  7633  11C7  1803               	skipnc
  7634  11C8  29CA               	goto	u3551
  7635  11C9  29CB               	goto	u3550
  7636  11CA                     u3551:
  7637  11CA  29D4               	goto	l319
  7638  11CB                     u3550:
  7639  11CB                     l3185:
  7640                           
  7641                           ;lcd_lib.c: 110:         row = p->ROW - 1;
  7642  11CB  0825               	movf	lcd_set_cursor@p,w
  7643  11CC  3E02               	addlw	2
  7644  11CD  0086               	movwf	6
  7645  11CE  0187               	clrf	7
  7646  11CF  0801               	movf	1,w
  7647  11D0  3EFF               	addlw	255
  7648  11D1  00FC               	movwf	??_lcd_set_cursor
  7649  11D2  087C               	movf	??_lcd_set_cursor,w
  7650  11D3  00FB               	movwf	lcd_set_cursor@row
  7651  11D4                     l319:	
  7652                           ;lcd_lib.c: 111:     }
  7653                           
  7654                           
  7655                           ;lcd_lib.c: 112:     uint8_t cmd = 0x80 | (col + row_offsets[row]);
  7656  11D4  087B               	movf	lcd_set_cursor@row,w
  7657  11D5  3E20               	addlw	(low (lcd_set_cursor@row_offsets| 0))& (0+255)
  7658  11D6  0086               	movwf	6
  7659  11D7  0187               	clrf	7
  7660  11D8  0801               	movf	1,w
  7661  11D9  077A               	addwf	lcd_set_cursor@col,w
  7662  11DA  3880               	iorlw	128
  7663  11DB  00FC               	movwf	??_lcd_set_cursor
  7664  11DC  087C               	movf	??_lcd_set_cursor,w
  7665  11DD  00A4               	movwf	lcd_set_cursor@cmd
  7666  11DE                     l3187:
  7667                           
  7668                           ;lcd_lib.c: 113:     command(p, cmd, 0);
  7669  11DE  0824               	movf	lcd_set_cursor@cmd,w
  7670  11DF  00FC               	movwf	??_lcd_set_cursor
  7671  11E0  087C               	movf	??_lcd_set_cursor,w
  7672  11E1  00F3               	movwf	command@val
  7673  11E2  01F4               	clrf	command@mode
  7674  11E3  0825               	movf	lcd_set_cursor@p,w
  7675  11E4  3193  2304  3191   	fcall	_command
  7676  11E7                     l320:
  7677  11E7  0008               	return
  7678  11E8                     __end_of_lcd_set_cursor:
  7679                           
  7680                           	psect	text24
  7681  1116                     __ptext24:	
  7682 ;; *************** function _lcd_print *****************
  7683 ;; Defined at:
  7684 ;;		line 121 in file "lcd_lib.c"
  7685 ;; Parameters:    Size  Location     Type
  7686 ;;  p               1    wreg     PTR struct .
  7687 ;;		 -> NULL(0), main@lcd(4), 
  7688 ;;  str             2   10[COMMON] PTR unsigned char 
  7689 ;;		 -> print_gram@row2(16), print_gram@row1(16), initialize@valstr(16), STR_3(15), 
  7690 ;;		 -> STR_2(11), STR_1(2), 
  7691 ;; Auto vars:     Size  Location     Type
  7692 ;;  p               1    1[BANK0 ] PTR struct .
  7693 ;;		 -> NULL(0), main@lcd(4), 
  7694 ;;  cmd             1    0[BANK0 ] unsigned char 
  7695 ;; Return value:  Size  Location     Type
  7696 ;;                  1    wreg      void 
  7697 ;; Registers used:
  7698 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  7699 ;; Tracked objects:
  7700 ;;		On entry : 0/0
  7701 ;;		On exit  : 0/0
  7702 ;;		Unchanged: 0/0
  7703 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  7704 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7705 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7706 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7707 ;;      Totals:         3       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7708 ;;Total ram usage:        5 bytes
  7709 ;; Hardware stack levels used: 1
  7710 ;; Hardware stack levels required when called: 4
  7711 ;; This function calls:
  7712 ;;		_command
  7713 ;; This function is called by:
  7714 ;;		_lcd_clear
  7715 ;;		_lcd_print_with
  7716 ;;		_initialize
  7717 ;; This function uses a non-reentrant model
  7718 ;;
  7719                           
  7720                           
  7721                           ;psect for function _lcd_print
  7722  1116                     _lcd_print:
  7723                           
  7724                           ;incstack = 0
  7725                           ; Regs used in _lcd_print: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  7726                           ;lcd_print@p stored from wreg
  7727  1116  0020               	movlb	0	; select bank0
  7728  1117  00A1               	movwf	lcd_print@p
  7729  1118                     l3189:
  7730                           
  7731                           ;lcd_lib.c: 122:     while (*str) {
  7732  1118  2930               	goto	l3197
  7733  1119                     l3191:
  7734                           
  7735                           ;lcd_lib.c: 123:         uint8_t cmd = *str++;
  7736  1119  087A               	movf	lcd_print@str,w
  7737  111A  0084               	movwf	4
  7738  111B  087B               	movf	lcd_print@str+1,w
  7739  111C  0085               	movwf	5
  7740  111D  0800               	movf	0,w	;code access
  7741  111E  00FC               	movwf	??_lcd_print
  7742  111F  087C               	movf	??_lcd_print,w
  7743  1120  0020               	movlb	0	; select bank0
  7744  1121  00A0               	movwf	lcd_print@cmd
  7745  1122                     l3193:
  7746  1122  3001               	movlw	1
  7747  1123  07FA               	addwf	lcd_print@str,f
  7748  1124  3000               	movlw	0
  7749  1125  3DFB               	addwfc	lcd_print@str+1,f
  7750  1126                     l3195:
  7751                           
  7752                           ;lcd_lib.c: 124:         command(p, cmd, 0b00000001);
  7753  1126  0820               	movf	lcd_print@cmd,w
  7754  1127  00FC               	movwf	??_lcd_print
  7755  1128  087C               	movf	??_lcd_print,w
  7756  1129  00F3               	movwf	command@val
  7757  112A  01F4               	clrf	command@mode
  7758  112B  0AF4               	incf	command@mode,f
  7759  112C  0821               	movf	lcd_print@p,w
  7760  112D  3193  2304  3191   	fcall	_command
  7761  1130                     l3197:
  7762                           
  7763                           ;lcd_lib.c: 122:     while (*str) {
  7764  1130  087A               	movf	lcd_print@str,w
  7765  1131  0084               	movwf	4
  7766  1132  087B               	movf	lcd_print@str+1,w
  7767  1133  0085               	movwf	5
  7768  1134  0012               	moviw fsr0++
  7769  1135  1D03               	btfss	3,2
  7770  1136  2938               	goto	u3561
  7771  1137  2939               	goto	u3560
  7772  1138                     u3561:
  7773  1138  2919               	goto	l3191
  7774  1139                     u3560:
  7775  1139                     l326:
  7776  1139  0008               	return
  7777  113A                     __end_of_lcd_print:
  7778                           
  7779                           	psect	text25
  7780  1304                     __ptext25:	
  7781 ;; *************** function _command *****************
  7782 ;; Defined at:
  7783 ;;		line 140 in file "lcd_lib.c"
  7784 ;; Parameters:    Size  Location     Type
  7785 ;;  p               1    wreg     PTR struct .
  7786 ;;		 -> NULL(0), main@lcd(4), 
  7787 ;;  val             1    3[COMMON] unsigned char 
  7788 ;;  mode            1    4[COMMON] unsigned char 
  7789 ;; Auto vars:     Size  Location     Type
  7790 ;;  p               1    9[COMMON] PTR struct .
  7791 ;;		 -> NULL(0), main@lcd(4), 
  7792 ;;  lownib          1    8[COMMON] unsigned char 
  7793 ;;  highnib         1    7[COMMON] unsigned char 
  7794 ;; Return value:  Size  Location     Type
  7795 ;;                  1    wreg      void 
  7796 ;; Registers used:
  7797 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  7798 ;; Tracked objects:
  7799 ;;		On entry : 0/0
  7800 ;;		On exit  : 0/0
  7801 ;;		Unchanged: 0/0
  7802 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  7803 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7804 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7805 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7806 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7807 ;;Total ram usage:        7 bytes
  7808 ;; Hardware stack levels used: 1
  7809 ;; Hardware stack levels required when called: 3
  7810 ;; This function calls:
  7811 ;;		_lcd_cmd
  7812 ;; This function is called by:
  7813 ;;		_lcd_set_cursor
  7814 ;;		_lcd_print
  7815 ;; This function uses a non-reentrant model
  7816 ;;
  7817                           
  7818                           
  7819                           ;psect for function _command
  7820  1304                     _command:
  7821                           
  7822                           ;incstack = 0
  7823                           ; Regs used in _command: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
  7824                           ;command@p stored from wreg
  7825  1304  00F9               	movwf	command@p
  7826  1305                     l2925:
  7827                           
  7828                           ;lcd_lib.c: 141:     uint8_t highnib = (val & 0xf0) | p->_backlightval | mode;
  7829  1305  0879               	movf	command@p,w
  7830  1306  3E03               	addlw	3
  7831  1307  0086               	movwf	6
  7832  1308  0187               	clrf	7
  7833  1309  0873               	movf	command@val,w
  7834  130A  39F0               	andlw	240
  7835  130B  0401               	iorwf	1,w
  7836  130C  0474               	iorwf	command@mode,w
  7837  130D  00F5               	movwf	??_command
  7838  130E  0875               	movf	??_command,w
  7839  130F  00F7               	movwf	command@highnib
  7840                           
  7841                           ;lcd_lib.c: 142:  uint8_t lownib = ((val << 4) & 0xf0) | p->_backlightval | mode;
  7842  1310  0879               	movf	command@p,w
  7843  1311  3E03               	addlw	3
  7844  1312  0086               	movwf	6
  7845  1313  0187               	clrf	7
  7846  1314  0873               	movf	command@val,w
  7847  1315  00F5               	movwf	??_command
  7848  1316  3003               	movlw	3
  7849  1317                     u3185:
  7850  1317  35F5               	lslf	??_command,f
  7851  1318  3EFF               	addlw	-1
  7852  1319  1D03               	skipz
  7853  131A  2B17               	goto	u3185
  7854  131B  3575               	lslf	??_command,w
  7855  131C  39F0               	andlw	240
  7856  131D  0401               	iorwf	1,w
  7857  131E  0474               	iorwf	command@mode,w
  7858  131F  00F6               	movwf	??_command+1
  7859  1320  0876               	movf	??_command+1,w
  7860  1321  00F8               	movwf	command@lownib
  7861  1322                     l2927:
  7862                           
  7863                           ;lcd_lib.c: 144:  lcd_cmd(p, highnib);
  7864  1322  0877               	movf	command@highnib,w
  7865  1323  00F5               	movwf	??_command
  7866  1324  0875               	movf	??_command,w
  7867  1325  00F1               	movwf	lcd_cmd@cmd
  7868  1326  0879               	movf	command@p,w
  7869  1327  3190  2026  3193   	fcall	_lcd_cmd
  7870  132A                     l2929:
  7871                           
  7872                           ;lcd_lib.c: 145:     lcd_cmd(p, highnib | 0b00000100);
  7873  132A  0877               	movf	command@highnib,w
  7874  132B  3804               	iorlw	4
  7875  132C  00F5               	movwf	??_command
  7876  132D  0875               	movf	??_command,w
  7877  132E  00F1               	movwf	lcd_cmd@cmd
  7878  132F  0879               	movf	command@p,w
  7879  1330  3190  2026  3193   	fcall	_lcd_cmd
  7880  1333                     l2931:
  7881                           
  7882                           ;lcd_lib.c: 146:     lcd_cmd(p, highnib & ~0b00000100);
  7883  1333  0877               	movf	command@highnib,w
  7884  1334  39FB               	andlw	251
  7885  1335  00F5               	movwf	??_command
  7886  1336  0875               	movf	??_command,w
  7887  1337  00F1               	movwf	lcd_cmd@cmd
  7888  1338  0879               	movf	command@p,w
  7889  1339  3190  2026  3193   	fcall	_lcd_cmd
  7890  133C                     l2933:
  7891                           
  7892                           ;lcd_lib.c: 148:     _delay((unsigned long)((100)*(8000000/4000000.0)));
  7893  133C  3042               	movlw	66
  7894  133D                     u4747:
  7895  133D  0B89               	decfsz	9,f
  7896  133E  2B3D               	goto	u4747
  7897  133F  3200               	nop2
  7898  1340                     l2935:
  7899                           
  7900                           ;lcd_lib.c: 150:  lcd_cmd(p, lownib);
  7901  1340  0878               	movf	command@lownib,w
  7902  1341  00F5               	movwf	??_command
  7903  1342  0875               	movf	??_command,w
  7904  1343  00F1               	movwf	lcd_cmd@cmd
  7905  1344  0879               	movf	command@p,w
  7906  1345  3190  2026  3193   	fcall	_lcd_cmd
  7907  1348                     l2937:
  7908                           
  7909                           ;lcd_lib.c: 151:     lcd_cmd(p, lownib | 0b00000100);
  7910  1348  0878               	movf	command@lownib,w
  7911  1349  3804               	iorlw	4
  7912  134A  00F5               	movwf	??_command
  7913  134B  0875               	movf	??_command,w
  7914  134C  00F1               	movwf	lcd_cmd@cmd
  7915  134D  0879               	movf	command@p,w
  7916  134E  3190  2026  3193   	fcall	_lcd_cmd
  7917  1351                     l2939:
  7918                           
  7919                           ;lcd_lib.c: 152:     lcd_cmd(p, lownib & ~0b00000100);
  7920  1351  0878               	movf	command@lownib,w
  7921  1352  39FB               	andlw	251
  7922  1353  00F5               	movwf	??_command
  7923  1354  0875               	movf	??_command,w
  7924  1355  00F1               	movwf	lcd_cmd@cmd
  7925  1356  0879               	movf	command@p,w
  7926  1357  3190  2026  3193   	fcall	_lcd_cmd
  7927  135A                     l332:
  7928  135A  0008               	return
  7929  135B                     __end_of_command:
  7930                           
  7931                           	psect	text26
  7932  1010                     __ptext26:	
  7933 ;; *************** function _lcd_backlight *****************
  7934 ;; Defined at:
  7935 ;;		line 81 in file "lcd_lib.c"
  7936 ;; Parameters:    Size  Location     Type
  7937 ;;  p               1    wreg     PTR struct .
  7938 ;;		 -> NULL(0), main@lcd(4), 
  7939 ;; Auto vars:     Size  Location     Type
  7940 ;;  p               1    4[COMMON] PTR struct .
  7941 ;;		 -> NULL(0), main@lcd(4), 
  7942 ;; Return value:  Size  Location     Type
  7943 ;;                  1    wreg      void 
  7944 ;; Registers used:
  7945 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  7946 ;; Tracked objects:
  7947 ;;		On entry : 0/0
  7948 ;;		On exit  : 0/0
  7949 ;;		Unchanged: 0/0
  7950 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  7951 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7952 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7953 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7954 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7955 ;;Total ram usage:        2 bytes
  7956 ;; Hardware stack levels used: 1
  7957 ;; Hardware stack levels required when called: 3
  7958 ;; This function calls:
  7959 ;;		_lcd_cmd
  7960 ;; This function is called by:
  7961 ;;		_initialize
  7962 ;; This function uses a non-reentrant model
  7963 ;;
  7964                           
  7965                           
  7966                           ;psect for function _lcd_backlight
  7967  1010                     _lcd_backlight:
  7968                           
  7969                           ;incstack = 0
  7970                           ; Regs used in _lcd_backlight: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
  7971                           ;lcd_backlight@p stored from wreg
  7972  1010  00F4               	movwf	lcd_backlight@p
  7973  1011                     l3609:
  7974                           
  7975                           ;lcd_lib.c: 82:     lcd_cmd(p, 0x08);
  7976  1011  3008               	movlw	8
  7977  1012  00F3               	movwf	??_lcd_backlight
  7978  1013  0873               	movf	??_lcd_backlight,w
  7979  1014  00F1               	movwf	lcd_cmd@cmd
  7980  1015  0874               	movf	lcd_backlight@p,w
  7981  1016  3190  2026  3190   	fcall	_lcd_cmd
  7982  1019                     l3611:
  7983                           
  7984                           ;lcd_lib.c: 83:     p->_backlightval = 0x08;
  7985  1019  3008               	movlw	8
  7986  101A  00F3               	movwf	??_lcd_backlight
  7987  101B  0874               	movf	lcd_backlight@p,w
  7988  101C  3E03               	addlw	3
  7989  101D  0086               	movwf	6
  7990  101E  0187               	clrf	7
  7991  101F  0873               	movf	??_lcd_backlight,w
  7992  1020  0081               	movwf	1
  7993  1021                     l3613:
  7994                           
  7995                           ;lcd_lib.c: 84:     _delay((unsigned long)((10)*(8000000/4000000.0)));
  7996  1021  3006               	movlw	6
  7997  1022                     u4757:
  7998  1022  0B89               	decfsz	9,f
  7999  1023  2822               	goto	u4757
  8000  1024  3200               	nop2
  8001  1025                     l305:
  8002  1025  0008               	return
  8003  1026                     __end_of_lcd_backlight:
  8004                           
  8005                           	psect	text27
  8006  1026                     __ptext27:	
  8007 ;; *************** function _lcd_cmd *****************
  8008 ;; Defined at:
  8009 ;;		line 6 in file "lcd_lib.c"
  8010 ;; Parameters:    Size  Location     Type
  8011 ;;  p               1    wreg     PTR struct .
  8012 ;;		 -> NULL(0), main@lcd(4), 
  8013 ;;  cmd             1    1[COMMON] unsigned char 
  8014 ;; Auto vars:     Size  Location     Type
  8015 ;;  p               1    2[COMMON] PTR struct .
  8016 ;;		 -> NULL(0), main@lcd(4), 
  8017 ;; Return value:  Size  Location     Type
  8018 ;;                  1    wreg      void 
  8019 ;; Registers used:
  8020 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  8021 ;; Tracked objects:
  8022 ;;		On entry : 0/0
  8023 ;;		On exit  : 0/0
  8024 ;;		Unchanged: 0/0
  8025 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  8026 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8027 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8028 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8029 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8030 ;;Total ram usage:        2 bytes
  8031 ;; Hardware stack levels used: 1
  8032 ;; Hardware stack levels required when called: 2
  8033 ;; This function calls:
  8034 ;;		_i2c_start
  8035 ;;		_i2c_stop
  8036 ;;		_i2c_write
  8037 ;; This function is called by:
  8038 ;;		_lcd_backlight
  8039 ;;		_command
  8040 ;;		_write4bits
  8041 ;; This function uses a non-reentrant model
  8042 ;;
  8043                           
  8044                           
  8045                           ;psect for function _lcd_cmd
  8046  1026                     _lcd_cmd:
  8047                           
  8048                           ;incstack = 0
  8049                           ; Regs used in _lcd_cmd: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
  8050                           ;lcd_cmd@p stored from wreg
  8051  1026  00F2               	movwf	lcd_cmd@p
  8052  1027                     l2783:
  8053                           
  8054                           ;lcd_lib.c: 7:     i2c_start();
  8055  1027  319F  27C3  3190   	fcall	_i2c_start
  8056  102A                     l2785:
  8057                           
  8058                           ;lcd_lib.c: 8:     i2c_write(p->lcd_address << 1);
  8059  102A  0872               	movf	lcd_cmd@p,w
  8060  102B  0086               	movwf	6
  8061  102C  0187               	clrf	7
  8062  102D  3501               	lslf	1,w
  8063  102E  3190  2000  3190   	fcall	_i2c_write
  8064  1031                     l2787:
  8065                           
  8066                           ;lcd_lib.c: 9:     i2c_write(cmd);
  8067  1031  0871               	movf	lcd_cmd@cmd,w
  8068  1032  3190  2000  3190   	fcall	_i2c_write
  8069  1035                     l2789:
  8070                           
  8071                           ;lcd_lib.c: 10:     i2c_stop();
  8072  1035  3180  2004  3190   	fcall	_i2c_stop
  8073  1038                     l2791:
  8074                           
  8075                           ;lcd_lib.c: 11:     _delay((unsigned long)((10)*(8000000/4000000.0)));
  8076  1038  3006               	movlw	6
  8077  1039                     u4767:
  8078  1039  0B89               	decfsz	9,f
  8079  103A  2839               	goto	u4767
  8080  103B  3200               	nop2
  8081  103C                     l299:
  8082  103C  0008               	return
  8083  103D                     __end_of_lcd_cmd:
  8084                           
  8085                           	psect	text28
  8086  1000                     __ptext28:	
  8087 ;; *************** function _i2c_write *****************
  8088 ;; Defined at:
  8089 ;;		line 25 in file "i2c.c"
  8090 ;; Parameters:    Size  Location     Type
  8091 ;;  data            1    wreg     unsigned char 
  8092 ;; Auto vars:     Size  Location     Type
  8093 ;;  data            1    0[COMMON] unsigned char 
  8094 ;; Return value:  Size  Location     Type
  8095 ;;                  1    wreg      void 
  8096 ;; Registers used:
  8097 ;;		wreg, status,2, status,0, pclath, cstack
  8098 ;; Tracked objects:
  8099 ;;		On entry : 0/0
  8100 ;;		On exit  : 0/0
  8101 ;;		Unchanged: 0/0
  8102 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  8103 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8104 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8105 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8106 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8107 ;;Total ram usage:        1 bytes
  8108 ;; Hardware stack levels used: 1
  8109 ;; Hardware stack levels required when called: 1
  8110 ;; This function calls:
  8111 ;;		_i2c_wait
  8112 ;; This function is called by:
  8113 ;;		_lcd_cmd
  8114 ;; This function uses a non-reentrant model
  8115 ;;
  8116                           
  8117                           
  8118                           ;psect for function _i2c_write
  8119  1000                     _i2c_write:
  8120                           
  8121                           ;incstack = 0
  8122                           ; Regs used in _i2c_write: [wreg+status,2+status,0+pclath+cstack]
  8123                           ;i2c_write@data stored from wreg
  8124  1000  00F0               	movwf	i2c_write@data
  8125  1001                     l2549:
  8126                           
  8127                           ;i2c.c: 26:     SSPBUF = data;
  8128  1001  0870               	movf	i2c_write@data,w
  8129  1002  0024               	movlb	4	; select bank4
  8130  1003  0091               	movwf	17	;volatile
  8131  1004                     l96:	
  8132                           ;i2c.c: 27:     while(SSPSTATbits.BF);
  8133                           
  8134  1004  1814               	btfsc	20,0	;volatile
  8135  1005  2807               	goto	u2411
  8136  1006  2808               	goto	u2410
  8137  1007                     u2411:
  8138  1007  2804               	goto	l96
  8139  1008                     u2410:
  8140  1008                     l99:
  8141  1008  1B16               	btfsc	22,6	;volatile
  8142  1009  280B               	goto	u2421
  8143  100A  280C               	goto	u2420
  8144  100B                     u2421:
  8145  100B  2808               	goto	l99
  8146  100C                     u2420:
  8147  100C                     l2551:
  8148                           
  8149                           ;i2c.c: 29:     i2c_wait();
  8150  100C  319F  27CD  3190   	fcall	_i2c_wait
  8151  100F                     l102:
  8152  100F  0008               	return
  8153  1010                     __end_of_i2c_write:
  8154                           
  8155                           	psect	text29
  8156  0004                     __ptext29:	
  8157 ;; *************** function _i2c_stop *****************
  8158 ;; Defined at:
  8159 ;;		line 14 in file "i2c.c"
  8160 ;; Parameters:    Size  Location     Type
  8161 ;;		None
  8162 ;; Auto vars:     Size  Location     Type
  8163 ;;		None
  8164 ;; Return value:  Size  Location     Type
  8165 ;;                  1    wreg      void 
  8166 ;; Registers used:
  8167 ;;		None
  8168 ;; Tracked objects:
  8169 ;;		On entry : 0/0
  8170 ;;		On exit  : 0/0
  8171 ;;		Unchanged: 0/0
  8172 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  8173 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8174 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8175 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8176 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8177 ;;Total ram usage:        0 bytes
  8178 ;; Hardware stack levels used: 1
  8179 ;; This function calls:
  8180 ;;		Nothing
  8181 ;; This function is called by:
  8182 ;;		_lcd_cmd
  8183 ;; This function uses a non-reentrant model
  8184 ;;
  8185                           
  8186                           
  8187                           ;psect for function _i2c_stop
  8188  0004                     _i2c_stop:
  8189  0004                     l2547:	
  8190                           ;incstack = 0
  8191                           ; Regs used in _i2c_stop: []
  8192                           
  8193                           
  8194                           ;i2c.c: 15:     SSPCON2bits.PEN = 1;
  8195  0004  0024               	movlb	4	; select bank4
  8196  0005  1516               	bsf	22,2	;volatile
  8197  0006                     l84:	
  8198                           ;i2c.c: 16:     while(SSPCON2bits.PEN);
  8199                           
  8200  0006  1916               	btfsc	22,2	;volatile
  8201  0007  2809               	goto	u2401
  8202  0008  280A               	goto	u2400
  8203  0009                     u2401:
  8204  0009  2806               	goto	l84
  8205  000A                     u2400:
  8206  000A                     l87:
  8207  000A  0008               	return
  8208  000B                     __end_of_i2c_stop:
  8209                           
  8210                           	psect	text30
  8211  1FC3                     __ptext30:	
  8212 ;; *************** function _i2c_start *****************
  8213 ;; Defined at:
  8214 ;;		line 8 in file "i2c.c"
  8215 ;; Parameters:    Size  Location     Type
  8216 ;;		None
  8217 ;; Auto vars:     Size  Location     Type
  8218 ;;		None
  8219 ;; Return value:  Size  Location     Type
  8220 ;;                  1    wreg      void 
  8221 ;; Registers used:
  8222 ;;		wreg, status,2, status,0, pclath, cstack
  8223 ;; Tracked objects:
  8224 ;;		On entry : 0/0
  8225 ;;		On exit  : 0/0
  8226 ;;		Unchanged: 0/0
  8227 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  8228 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8229 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8230 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8231 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8232 ;;Total ram usage:        0 bytes
  8233 ;; Hardware stack levels used: 1
  8234 ;; Hardware stack levels required when called: 1
  8235 ;; This function calls:
  8236 ;;		_i2c_wait
  8237 ;; This function is called by:
  8238 ;;		_lcd_cmd
  8239 ;; This function uses a non-reentrant model
  8240 ;;
  8241                           
  8242                           
  8243                           ;psect for function _i2c_start
  8244  1FC3                     _i2c_start:
  8245  1FC3                     l2543:	
  8246                           ;incstack = 0
  8247                           ; Regs used in _i2c_start: [wreg+status,2+status,0+pclath+cstack]
  8248                           
  8249                           
  8250                           ;i2c.c: 9:     i2c_wait();
  8251  1FC3  319F  27CD  319F   	fcall	_i2c_wait
  8252  1FC6                     l2545:
  8253                           
  8254                           ;i2c.c: 10:     SSPCON2bits.SEN = 1;
  8255  1FC6  0024               	movlb	4	; select bank4
  8256  1FC7  1416               	bsf	22,0	;volatile
  8257  1FC8                     l78:	
  8258                           ;i2c.c: 11:     while(SSPCON2bits.SEN);
  8259                           
  8260  1FC8  1816               	btfsc	22,0	;volatile
  8261  1FC9  2FCB               	goto	u2391
  8262  1FCA  2FCC               	goto	u2390
  8263  1FCB                     u2391:
  8264  1FCB  2FC8               	goto	l78
  8265  1FCC                     u2390:
  8266  1FCC                     l81:
  8267  1FCC  0008               	return
  8268  1FCD                     __end_of_i2c_start:
  8269                           
  8270                           	psect	text31
  8271  1FCD                     __ptext31:	
  8272 ;; *************** function _i2c_wait *****************
  8273 ;; Defined at:
  8274 ;;		line 4 in file "i2c.c"
  8275 ;; Parameters:    Size  Location     Type
  8276 ;;		None
  8277 ;; Auto vars:     Size  Location     Type
  8278 ;;		None
  8279 ;; Return value:  Size  Location     Type
  8280 ;;                  1    wreg      void 
  8281 ;; Registers used:
  8282 ;;		wreg, status,2
  8283 ;; Tracked objects:
  8284 ;;		On entry : 0/0
  8285 ;;		On exit  : 0/0
  8286 ;;		Unchanged: 0/0
  8287 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  8288 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8289 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8290 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8291 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8292 ;;Total ram usage:        0 bytes
  8293 ;; Hardware stack levels used: 1
  8294 ;; This function calls:
  8295 ;;		Nothing
  8296 ;; This function is called by:
  8297 ;;		_i2c_start
  8298 ;;		_i2c_write
  8299 ;;		_i2c_repeated_start
  8300 ;;		_i2c_read
  8301 ;; This function uses a non-reentrant model
  8302 ;;
  8303                           
  8304                           
  8305                           ;psect for function _i2c_wait
  8306  1FCD                     _i2c_wait:
  8307  1FCD                     l2519:	
  8308                           ;incstack = 0
  8309                           ; Regs used in _i2c_wait: [wreg+status,2]
  8310                           
  8311  1FCD                     l2521:	
  8312                           ;i2c.c: 5:     while((SSPCON2 & 0x1F) || (SSPSTAT & 0x04));
  8313                           
  8314  1FCD  0024               	movlb	4	; select bank4
  8315  1FCE  0816               	movf	22,w	;volatile
  8316  1FCF  391F               	andlw	31
  8317  1FD0  1D03               	btfss	3,2
  8318  1FD1  2FD3               	goto	u2351
  8319  1FD2  2FD4               	goto	u2350
  8320  1FD3                     u2351:
  8321  1FD3  2FCD               	goto	l2521
  8322  1FD4                     u2350:
  8323  1FD4                     l2523:
  8324  1FD4  1914               	btfsc	20,2	;volatile
  8325  1FD5  2FD7               	goto	u2361
  8326  1FD6  2FD8               	goto	u2360
  8327  1FD7                     u2361:
  8328  1FD7  2FCD               	goto	l2521
  8329  1FD8                     u2360:
  8330  1FD8                     l75:
  8331  1FD8  0008               	return
  8332  1FD9                     __end_of_i2c_wait:
  8333                           
  8334                           	psect	text32
  8335  1FD9                     __ptext32:	
  8336 ;; *************** function _initialize_digit *****************
  8337 ;; Defined at:
  8338 ;;		line 187 in file "tm1637.c"
  8339 ;; Parameters:    Size  Location     Type
  8340 ;;  p               1    wreg     PTR struct .
  8341 ;;		 -> NULL(0), main@tm1637(2), 
  8342 ;; Auto vars:     Size  Location     Type
  8343 ;;  p               1   13[BANK0 ] PTR struct .
  8344 ;;		 -> NULL(0), main@tm1637(2), 
  8345 ;; Return value:  Size  Location     Type
  8346 ;;                  1    wreg      void 
  8347 ;; Registers used:
  8348 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  8349 ;; Tracked objects:
  8350 ;;		On entry : 0/0
  8351 ;;		On exit  : 0/0
  8352 ;;		Unchanged: 0/0
  8353 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  8354 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8355 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8356 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8357 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8358 ;;Total ram usage:        2 bytes
  8359 ;; Hardware stack levels used: 1
  8360 ;; Hardware stack levels required when called: 4
  8361 ;; This function calls:
  8362 ;;		_print_digit
  8363 ;;		_set_brigthness
  8364 ;; This function is called by:
  8365 ;;		_initialize
  8366 ;; This function uses a non-reentrant model
  8367 ;;
  8368                           
  8369                           
  8370                           ;psect for function _initialize_digit
  8371  1FD9                     _initialize_digit:
  8372                           
  8373                           ;incstack = 0
  8374                           ; Regs used in _initialize_digit: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
  8375                           ;initialize_digit@p stored from wreg
  8376  1FD9  0020               	movlb	0	; select bank0
  8377  1FDA  00AD               	movwf	initialize_digit@p
  8378  1FDB                     l3493:
  8379                           
  8380                           ;tm1637.c: 188:     set_brigthness(p, 0x0f, 1);
  8381  1FDB  300F               	movlw	15
  8382  1FDC  00AC               	movwf	??_initialize_digit
  8383  1FDD  082C               	movf	??_initialize_digit,w
  8384  1FDE  00F0               	movwf	set_brigthness@brightness
  8385  1FDF  01F1               	clrf	set_brigthness@on
  8386  1FE0  0AF1               	incf	set_brigthness@on,f
  8387  1FE1  082D               	movf	initialize_digit@p,w
  8388  1FE2  319F  27EC  319F   	fcall	_set_brigthness
  8389  1FE5                     l3495:
  8390                           
  8391                           ;tm1637.c: 189:     print_digit(p, 0);
  8392  1FE5  01FD               	clrf	print_digit@number
  8393  1FE6  0020               	movlb	0	; select bank0
  8394  1FE7  082D               	movf	initialize_digit@p,w
  8395  1FE8  318B  238B  319F   	fcall	_print_digit
  8396  1FEB                     l232:
  8397  1FEB  0008               	return
  8398  1FEC                     __end_of_initialize_digit:
  8399                           
  8400                           	psect	text33
  8401  1FEC                     __ptext33:	
  8402 ;; *************** function _set_brigthness *****************
  8403 ;; Defined at:
  8404 ;;		line 133 in file "tm1637.c"
  8405 ;; Parameters:    Size  Location     Type
  8406 ;;  p               1    wreg     PTR struct .
  8407 ;;		 -> NULL(0), main@tm1637(2), 
  8408 ;;  brightness      1    0[COMMON] unsigned char 
  8409 ;;  on              1    1[COMMON] unsigned char 
  8410 ;; Auto vars:     Size  Location     Type
  8411 ;;  p               1    3[COMMON] PTR struct .
  8412 ;;		 -> NULL(0), main@tm1637(2), 
  8413 ;; Return value:  Size  Location     Type
  8414 ;;                  1    wreg      void 
  8415 ;; Registers used:
  8416 ;;		wreg, status,2, status,0
  8417 ;; Tracked objects:
  8418 ;;		On entry : 0/0
  8419 ;;		On exit  : 0/0
  8420 ;;		Unchanged: 0/0
  8421 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  8422 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8423 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8424 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8425 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8426 ;;Total ram usage:        4 bytes
  8427 ;; Hardware stack levels used: 1
  8428 ;; This function calls:
  8429 ;;		Nothing
  8430 ;; This function is called by:
  8431 ;;		_initialize_digit
  8432 ;; This function uses a non-reentrant model
  8433 ;;
  8434                           
  8435                           
  8436                           ;psect for function _set_brigthness
  8437  1FEC                     _set_brigthness:
  8438  1FEC                     l3099:	
  8439                           ;incstack = 0
  8440                           ; Regs used in _set_brigthness: [wreg+status,2+status,0]
  8441                           
  8442                           
  8443                           ;tm1637.c: 134:     if(on == 1){
  8444  1FEC  0371               	decf	set_brigthness@on,w
  8445  1FED  1D03               	btfss	3,2
  8446  1FEE  2FF0               	goto	u3461
  8447  1FEF  2FF1               	goto	u3460
  8448  1FF0                     u3461:
  8449  1FF0  2FF9               	goto	l3103
  8450  1FF1                     u3460:
  8451  1FF1                     l3101:
  8452                           
  8453                           ;tm1637.c: 135:         m_brightness = (brightness & 0x7 | 0x08);
  8454  1FF1  0870               	movf	set_brigthness@brightness,w
  8455  1FF2  3907               	andlw	7
  8456  1FF3  3808               	iorlw	8
  8457  1FF4  00F2               	movwf	??_set_brigthness
  8458  1FF5  0872               	movf	??_set_brigthness,w
  8459  1FF6  0022               	movlb	2	; select bank2
  8460  1FF7  00D6               	movwf	_m_brightness^(0+256)
  8461                           
  8462                           ;tm1637.c: 136:     }else{
  8463  1FF8  2FFF               	goto	l215
  8464  1FF9                     l3103:
  8465                           
  8466                           ;tm1637.c: 137:         m_brightness = (brightness & 0x7 | 0x00);
  8467  1FF9  0870               	movf	set_brigthness@brightness,w
  8468  1FFA  3907               	andlw	7
  8469  1FFB  00F2               	movwf	??_set_brigthness
  8470  1FFC  0872               	movf	??_set_brigthness,w
  8471  1FFD  0022               	movlb	2	; select bank2
  8472  1FFE  00D6               	movwf	_m_brightness^(0+256)
  8473  1FFF                     l215:
  8474  1FFF  0008               	return
  8475  2000                     __end_of_set_brigthness:
  8476                           
  8477                           	psect	text34
  8478  0B8B                     __ptext34:	
  8479 ;; *************** function _print_digit *****************
  8480 ;; Defined at:
  8481 ;;		line 192 in file "tm1637.c"
  8482 ;; Parameters:    Size  Location     Type
  8483 ;;  p               1    wreg     PTR struct .
  8484 ;;		 -> NULL(0), main@tm1637(2), 
  8485 ;;  number          1   13[COMMON] unsigned char 
  8486 ;; Auto vars:     Size  Location     Type
  8487 ;;  p               1   10[BANK0 ] PTR struct .
  8488 ;;		 -> NULL(0), main@tm1637(2), 
  8489 ;;  data            4    6[BANK0 ] unsigned char [4]
  8490 ;;  tmp             1   11[BANK0 ] unsigned char 
  8491 ;; Return value:  Size  Location     Type
  8492 ;;                  1    wreg      void 
  8493 ;; Registers used:
  8494 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  8495 ;; Tracked objects:
  8496 ;;		On entry : 0/0
  8497 ;;		On exit  : 0/0
  8498 ;;		Unchanged: 0/0
  8499 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  8500 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8501 ;;      Locals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8502 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8503 ;;      Totals:         1      10       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8504 ;;Total ram usage:       11 bytes
  8505 ;; Hardware stack levels used: 1
  8506 ;; Hardware stack levels required when called: 3
  8507 ;; This function calls:
  8508 ;;		___awdiv
  8509 ;;		___awmod
  8510 ;;		_encode_digit
  8511 ;;		_set_segments
  8512 ;; This function is called by:
  8513 ;;		_initialize_digit
  8514 ;;		_print_gram
  8515 ;; This function uses a non-reentrant model
  8516 ;;
  8517                           
  8518                           
  8519                           ;psect for function _print_digit
  8520  0B8B                     _print_digit:
  8521                           
  8522                           ;incstack = 0
  8523                           ; Regs used in _print_digit: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
  8524                           ;print_digit@p stored from wreg
  8525  0B8B  0020               	movlb	0	; select bank0
  8526  0B8C  00AA               	movwf	print_digit@p
  8527  0B8D                     l3105:
  8528                           
  8529                           ;tm1637.c: 193:     uint8_t data[] = {0xff, 0xff, 0xff, 0xff};
  8530  0B8D  0022               	movlb	2	; select bank2
  8531  0B8E  083D               	movf	(print_digit@F2820+3)^(0+256),w
  8532  0B8F  0020               	movlb	0	; select bank0
  8533  0B90  00A9               	movwf	print_digit@data+3
  8534  0B91  0022               	movlb	2	; select bank2
  8535  0B92  083C               	movf	(print_digit@F2820+2)^(0+256),w
  8536  0B93  0020               	movlb	0	; select bank0
  8537  0B94  00A8               	movwf	print_digit@data+2
  8538  0B95  0022               	movlb	2	; select bank2
  8539  0B96  083B               	movf	(print_digit@F2820+1)^(0+256),w
  8540  0B97  0020               	movlb	0	; select bank0
  8541  0B98  00A7               	movwf	print_digit@data+1
  8542  0B99  0022               	movlb	2	; select bank2
  8543  0B9A  083A               	movf	print_digit@F2820^(0+256),w
  8544  0B9B  0020               	movlb	0	; select bank0
  8545  0B9C  00A6               	movwf	print_digit@data
  8546                           
  8547                           ;tm1637.c: 196:     uint8_t tmp = number;
  8548  0B9D  087D               	movf	print_digit@number,w
  8549  0B9E  00A2               	movwf	??_print_digit
  8550  0B9F  0822               	movf	??_print_digit,w
  8551  0BA0  00AB               	movwf	print_digit@tmp
  8552  0BA1                     l3107:
  8553                           
  8554                           ;tm1637.c: 197:     data[3] = encode_digit(p, tmp / 1000);
  8555  0BA1  30E8               	movlw	232
  8556  0BA2  00F0               	movwf	___awdiv@divisor
  8557  0BA3  3003               	movlw	3
  8558  0BA4  00F1               	movwf	___awdiv@divisor+1
  8559  0BA5  082B               	movf	print_digit@tmp,w
  8560  0BA6  00A2               	movwf	??_print_digit
  8561  0BA7  01A3               	clrf	??_print_digit+1
  8562  0BA8  0822               	movf	??_print_digit,w
  8563  0BA9  00F2               	movwf	___awdiv@dividend
  8564  0BAA  0823               	movf	??_print_digit+1,w
  8565  0BAB  00F3               	movwf	___awdiv@dividend+1
  8566  0BAC  3180  200B  318B   	fcall	___awdiv
  8567  0BAF  0870               	movf	?___awdiv,w
  8568  0BB0  0020               	movlb	0	; select bank0
  8569  0BB1  00A4               	movwf	??_print_digit+2
  8570  0BB2  0824               	movf	??_print_digit+2,w
  8571  0BB3  00F9               	movwf	encode_digit@digit
  8572  0BB4  082A               	movf	print_digit@p,w
  8573  0BB5  319F  2757  318B   	fcall	_encode_digit
  8574  0BB8  0020               	movlb	0	; select bank0
  8575  0BB9  00A5               	movwf	??_print_digit+3
  8576  0BBA  0825               	movf	??_print_digit+3,w
  8577  0BBB  00A9               	movwf	print_digit@data+3
  8578  0BBC                     l3109:
  8579                           
  8580                           ;tm1637.c: 198:     tmp %= 1000;
  8581  0BBC  30E8               	movlw	232
  8582  0BBD  00F0               	movwf	___awmod@divisor
  8583  0BBE  3003               	movlw	3
  8584  0BBF  00F1               	movwf	___awmod@divisor+1
  8585  0BC0  082B               	movf	print_digit@tmp,w
  8586  0BC1  00A2               	movwf	??_print_digit
  8587  0BC2  01A3               	clrf	??_print_digit+1
  8588  0BC3  0822               	movf	??_print_digit,w
  8589  0BC4  00F2               	movwf	___awmod@dividend
  8590  0BC5  0823               	movf	??_print_digit+1,w
  8591  0BC6  00F3               	movwf	___awmod@dividend+1
  8592  0BC7  3188  2001  318B   	fcall	___awmod
  8593  0BCA  0870               	movf	?___awmod,w
  8594  0BCB  0020               	movlb	0	; select bank0
  8595  0BCC  00A4               	movwf	??_print_digit+2
  8596  0BCD  0824               	movf	??_print_digit+2,w
  8597  0BCE  00AB               	movwf	print_digit@tmp
  8598  0BCF                     l3111:
  8599                           
  8600                           ;tm1637.c: 199:     data[2] = encode_digit(p, tmp / 100);
  8601  0BCF  3064               	movlw	100
  8602  0BD0  00F0               	movwf	___awdiv@divisor
  8603  0BD1  3000               	movlw	0
  8604  0BD2  00F1               	movwf	___awdiv@divisor+1
  8605  0BD3  082B               	movf	print_digit@tmp,w
  8606  0BD4  00A2               	movwf	??_print_digit
  8607  0BD5  01A3               	clrf	??_print_digit+1
  8608  0BD6  0822               	movf	??_print_digit,w
  8609  0BD7  00F2               	movwf	___awdiv@dividend
  8610  0BD8  0823               	movf	??_print_digit+1,w
  8611  0BD9  00F3               	movwf	___awdiv@dividend+1
  8612  0BDA  3180  200B  318B   	fcall	___awdiv
  8613  0BDD  0870               	movf	?___awdiv,w
  8614  0BDE  0020               	movlb	0	; select bank0
  8615  0BDF  00A4               	movwf	??_print_digit+2
  8616  0BE0  0824               	movf	??_print_digit+2,w
  8617  0BE1  00F9               	movwf	encode_digit@digit
  8618  0BE2  082A               	movf	print_digit@p,w
  8619  0BE3  319F  2757  318B   	fcall	_encode_digit
  8620  0BE6  0020               	movlb	0	; select bank0
  8621  0BE7  00A5               	movwf	??_print_digit+3
  8622  0BE8  0825               	movf	??_print_digit+3,w
  8623  0BE9  00A8               	movwf	print_digit@data+2
  8624  0BEA                     l3113:
  8625                           
  8626                           ;tm1637.c: 200:     tmp %= 100;
  8627  0BEA  3064               	movlw	100
  8628  0BEB  00F0               	movwf	___awmod@divisor
  8629  0BEC  3000               	movlw	0
  8630  0BED  00F1               	movwf	___awmod@divisor+1
  8631  0BEE  082B               	movf	print_digit@tmp,w
  8632  0BEF  00A2               	movwf	??_print_digit
  8633  0BF0  01A3               	clrf	??_print_digit+1
  8634  0BF1  0822               	movf	??_print_digit,w
  8635  0BF2  00F2               	movwf	___awmod@dividend
  8636  0BF3  0823               	movf	??_print_digit+1,w
  8637  0BF4  00F3               	movwf	___awmod@dividend+1
  8638  0BF5  3188  2001  318B   	fcall	___awmod
  8639  0BF8  0870               	movf	?___awmod,w
  8640  0BF9  0020               	movlb	0	; select bank0
  8641  0BFA  00A4               	movwf	??_print_digit+2
  8642  0BFB  0824               	movf	??_print_digit+2,w
  8643  0BFC  00AB               	movwf	print_digit@tmp
  8644  0BFD                     l3115:
  8645                           
  8646                           ;tm1637.c: 201:     data[1] = encode_digit(p, tmp / 10);
  8647  0BFD  300A               	movlw	10
  8648  0BFE  00F0               	movwf	___awdiv@divisor
  8649  0BFF  3000               	movlw	0
  8650  0C00  00F1               	movwf	___awdiv@divisor+1
  8651  0C01  082B               	movf	print_digit@tmp,w
  8652  0C02  00A2               	movwf	??_print_digit
  8653  0C03  01A3               	clrf	??_print_digit+1
  8654  0C04  0822               	movf	??_print_digit,w
  8655  0C05  00F2               	movwf	___awdiv@dividend
  8656  0C06  0823               	movf	??_print_digit+1,w
  8657  0C07  00F3               	movwf	___awdiv@dividend+1
  8658  0C08  3180  200B  318B   	fcall	___awdiv
  8659  0C0B  0870               	movf	?___awdiv,w
  8660  0C0C  0020               	movlb	0	; select bank0
  8661  0C0D  00A4               	movwf	??_print_digit+2
  8662  0C0E  0824               	movf	??_print_digit+2,w
  8663  0C0F  00F9               	movwf	encode_digit@digit
  8664  0C10  082A               	movf	print_digit@p,w
  8665  0C11  319F  2757  318B   	fcall	_encode_digit
  8666  0C14  0020               	movlb	0	; select bank0
  8667  0C15  00A5               	movwf	??_print_digit+3
  8668  0C16  0825               	movf	??_print_digit+3,w
  8669  0C17  00A7               	movwf	print_digit@data+1
  8670  0C18                     l3117:
  8671                           
  8672                           ;tm1637.c: 202:     tmp %= 10;
  8673  0C18  300A               	movlw	10
  8674  0C19  00F0               	movwf	___awmod@divisor
  8675  0C1A  3000               	movlw	0
  8676  0C1B  00F1               	movwf	___awmod@divisor+1
  8677  0C1C  082B               	movf	print_digit@tmp,w
  8678  0C1D  00A2               	movwf	??_print_digit
  8679  0C1E  01A3               	clrf	??_print_digit+1
  8680  0C1F  0822               	movf	??_print_digit,w
  8681  0C20  00F2               	movwf	___awmod@dividend
  8682  0C21  0823               	movf	??_print_digit+1,w
  8683  0C22  00F3               	movwf	___awmod@dividend+1
  8684  0C23  3188  2001  318B   	fcall	___awmod
  8685  0C26  0870               	movf	?___awmod,w
  8686  0C27  0020               	movlb	0	; select bank0
  8687  0C28  00A4               	movwf	??_print_digit+2
  8688  0C29  0824               	movf	??_print_digit+2,w
  8689  0C2A  00AB               	movwf	print_digit@tmp
  8690  0C2B                     l3119:
  8691                           
  8692                           ;tm1637.c: 203:     data[0] = encode_digit(p, tmp);
  8693  0C2B  082B               	movf	print_digit@tmp,w
  8694  0C2C  00A2               	movwf	??_print_digit
  8695  0C2D  0822               	movf	??_print_digit,w
  8696  0C2E  00F9               	movwf	encode_digit@digit
  8697  0C2F  082A               	movf	print_digit@p,w
  8698  0C30  319F  2757  318B   	fcall	_encode_digit
  8699  0C33  0020               	movlb	0	; select bank0
  8700  0C34  00A3               	movwf	??_print_digit+1
  8701  0C35  0823               	movf	??_print_digit+1,w
  8702  0C36  00A6               	movwf	print_digit@data
  8703  0C37                     l3121:
  8704                           
  8705                           ;tm1637.c: 205:     set_segments(p, data, 4, 0);
  8706  0C37  3026               	movlw	(low (print_digit@data| 0))& (0+255)
  8707  0C38  00A2               	movwf	??_print_digit
  8708  0C39  0822               	movf	??_print_digit,w
  8709  0C3A  00F8               	movwf	set_segments@segments
  8710  0C3B  3004               	movlw	4
  8711  0C3C  00A3               	movwf	??_print_digit+1
  8712  0C3D  0823               	movf	??_print_digit+1,w
  8713  0C3E  00F9               	movwf	set_segments@length
  8714  0C3F  01FA               	clrf	set_segments@pos
  8715  0C40  082A               	movf	print_digit@p,w
  8716  0C41  3194  240E  318B   	fcall	_set_segments
  8717  0C44                     l237:
  8718  0C44  0008               	return
  8719  0C45                     __end_of_print_digit:
  8720                           
  8721                           	psect	text35
  8722  140E                     __ptext35:	
  8723 ;; *************** function _set_segments *****************
  8724 ;; Defined at:
  8725 ;;		line 147 in file "tm1637.c"
  8726 ;; Parameters:    Size  Location     Type
  8727 ;;  p               1    wreg     PTR struct .
  8728 ;;		 -> NULL(0), main@tm1637(2), 
  8729 ;;  segments        1    8[COMMON] PTR const unsigned char 
  8730 ;;		 -> print_digit@data(4), clear_segment@data(4), 
  8731 ;;  length          1    9[COMMON] unsigned char 
  8732 ;;  pos             1   10[COMMON] unsigned char 
  8733 ;; Auto vars:     Size  Location     Type
  8734 ;;  p               1    1[BANK0 ] PTR struct .
  8735 ;;		 -> NULL(0), main@tm1637(2), 
  8736 ;;  k               1    0[BANK0 ] unsigned char 
  8737 ;; Return value:  Size  Location     Type
  8738 ;;                  1    wreg      void 
  8739 ;; Registers used:
  8740 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  8741 ;; Tracked objects:
  8742 ;;		On entry : 0/0
  8743 ;;		On exit  : 0/0
  8744 ;;		Unchanged: 0/0
  8745 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  8746 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8747 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8748 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8749 ;;      Totals:         5       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8750 ;;Total ram usage:        7 bytes
  8751 ;; Hardware stack levels used: 1
  8752 ;; Hardware stack levels required when called: 2
  8753 ;; This function calls:
  8754 ;;		_start_segment
  8755 ;;		_stop_segment
  8756 ;;		_write_byte
  8757 ;; This function is called by:
  8758 ;;		_print_digit
  8759 ;;		_clear_segment
  8760 ;; This function uses a non-reentrant model
  8761 ;;
  8762                           
  8763                           
  8764                           ;psect for function _set_segments
  8765  140E                     _set_segments:
  8766                           
  8767                           ;incstack = 0
  8768                           ; Regs used in _set_segments: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
  8769                           ;set_segments@p stored from wreg
  8770  140E  0020               	movlb	0	; select bank0
  8771  140F  00A1               	movwf	set_segments@p
  8772  1410                     l2909:
  8773                           
  8774                           ;tm1637.c: 149:     start_segment(p);
  8775  1410  0821               	movf	set_segments@p,w
  8776  1411  3190  2055  3194   	fcall	_start_segment
  8777                           
  8778                           ;tm1637.c: 150:     write_byte(p, 0x40);
  8779  1414  3040               	movlw	64
  8780  1415  00FB               	movwf	??_set_segments
  8781  1416  087B               	movf	??_set_segments,w
  8782  1417  00F2               	movwf	write_byte@b
  8783  1418  0020               	movlb	0	; select bank0
  8784  1419  0821               	movf	set_segments@p,w
  8785  141A  3192  22AE  3194   	fcall	_write_byte
  8786                           
  8787                           ;tm1637.c: 151:     stop_segment(p);
  8788  141D  0020               	movlb	0	; select bank0
  8789  141E  0821               	movf	set_segments@p,w
  8790  141F  3190  206F  3194   	fcall	_stop_segment
  8791                           
  8792                           ;tm1637.c: 154:     start_segment(p);
  8793  1422  0020               	movlb	0	; select bank0
  8794  1423  0821               	movf	set_segments@p,w
  8795  1424  3190  2055  3194   	fcall	_start_segment
  8796                           
  8797                           ;tm1637.c: 155:     write_byte(p, 0xC0 + (pos & 0x03));
  8798  1427  087A               	movf	set_segments@pos,w
  8799  1428  3903               	andlw	3
  8800  1429  3EC0               	addlw	192
  8801  142A  00FB               	movwf	??_set_segments
  8802  142B  087B               	movf	??_set_segments,w
  8803  142C  00F2               	movwf	write_byte@b
  8804  142D  0020               	movlb	0	; select bank0
  8805  142E  0821               	movf	set_segments@p,w
  8806  142F  3192  22AE  3194   	fcall	_write_byte
  8807  1432                     l2911:
  8808                           
  8809                           ;tm1637.c: 158:     for(uint8_t k = 0; k < length; k++){
  8810  1432  0020               	movlb	0	; select bank0
  8811  1433  01A0               	clrf	set_segments@k
  8812  1434  2C48               	goto	l2917
  8813  1435                     l2913:
  8814                           
  8815                           ;tm1637.c: 159:         write_byte(p, segments[k]);
  8816  1435  0820               	movf	set_segments@k,w
  8817  1436  0778               	addwf	set_segments@segments,w
  8818  1437  00FB               	movwf	??_set_segments
  8819  1438  087B               	movf	??_set_segments,w
  8820  1439  0086               	movwf	6
  8821  143A  0187               	clrf	7
  8822  143B  0801               	movf	1,w
  8823  143C  00FC               	movwf	??_set_segments+1
  8824  143D  087C               	movf	??_set_segments+1,w
  8825  143E  00F2               	movwf	write_byte@b
  8826  143F  0821               	movf	set_segments@p,w
  8827  1440  3192  22AE  3194   	fcall	_write_byte
  8828  1443                     l2915:
  8829                           
  8830                           ;tm1637.c: 160:     }
  8831  1443  3001               	movlw	1
  8832  1444  00FB               	movwf	??_set_segments
  8833  1445  087B               	movf	??_set_segments,w
  8834  1446  0020               	movlb	0	; select bank0
  8835  1447  07A0               	addwf	set_segments@k,f
  8836  1448                     l2917:
  8837  1448  0879               	movf	set_segments@length,w
  8838  1449  0220               	subwf	set_segments@k,w
  8839  144A  1C03               	skipc
  8840  144B  2C4D               	goto	u3171
  8841  144C  2C4E               	goto	u3170
  8842  144D                     u3171:
  8843  144D  2C35               	goto	l2913
  8844  144E                     u3170:
  8845  144E                     l2919:
  8846                           
  8847                           ;tm1637.c: 162:     stop_segment(p);
  8848  144E  0821               	movf	set_segments@p,w
  8849  144F  3190  206F  3194   	fcall	_stop_segment
  8850                           
  8851                           ;tm1637.c: 165:     start_segment(p);
  8852  1452  0020               	movlb	0	; select bank0
  8853  1453  0821               	movf	set_segments@p,w
  8854  1454  3190  2055  3194   	fcall	_start_segment
  8855                           
  8856                           ;tm1637.c: 166:     write_byte(p, 0x80 + (m_brightness & 0x0f));
  8857  1457  0022               	movlb	2	; select bank2
  8858  1458  0856               	movf	_m_brightness^(0+256),w
  8859  1459  390F               	andlw	15
  8860  145A  3E80               	addlw	128
  8861  145B  00FB               	movwf	??_set_segments
  8862  145C  087B               	movf	??_set_segments,w
  8863  145D  00F2               	movwf	write_byte@b
  8864  145E  0020               	movlb	0	; select bank0
  8865  145F  0821               	movf	set_segments@p,w
  8866  1460  3192  22AE  3194   	fcall	_write_byte
  8867                           
  8868                           ;tm1637.c: 167:     stop_segment(p);
  8869  1463  0020               	movlb	0	; select bank0
  8870  1464  0821               	movf	set_segments@p,w
  8871  1465  3190  206F  3194   	fcall	_stop_segment
  8872  1468                     l221:
  8873  1468  0008               	return
  8874  1469                     __end_of_set_segments:
  8875                           
  8876                           	psect	text36
  8877  12AE                     __ptext36:	
  8878 ;; *************** function _write_byte *****************
  8879 ;; Defined at:
  8880 ;;		line 78 in file "tm1637.c"
  8881 ;; Parameters:    Size  Location     Type
  8882 ;;  p               1    wreg     PTR struct .
  8883 ;;		 -> NULL(0), main@tm1637(2), 
  8884 ;;  b               1    2[COMMON] unsigned char 
  8885 ;; Auto vars:     Size  Location     Type
  8886 ;;  p               1    7[COMMON] PTR struct .
  8887 ;;		 -> NULL(0), main@tm1637(2), 
  8888 ;;  i               1    6[COMMON] unsigned char 
  8889 ;;  data            1    5[COMMON] unsigned char 
  8890 ;;  ack             1    4[COMMON] unsigned char 
  8891 ;; Return value:  Size  Location     Type
  8892 ;;                  1    wreg      unsigned char 
  8893 ;; Registers used:
  8894 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  8895 ;; Tracked objects:
  8896 ;;		On entry : 0/0
  8897 ;;		On exit  : 0/0
  8898 ;;		Unchanged: 0/0
  8899 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  8900 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8901 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8902 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8903 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8904 ;;Total ram usage:        6 bytes
  8905 ;; Hardware stack levels used: 1
  8906 ;; Hardware stack levels required when called: 1
  8907 ;; This function calls:
  8908 ;;		_CLK_SET_HIGH
  8909 ;;		_CLK_SET_LOW
  8910 ;;		_CLK_SET_OUTPUT
  8911 ;;		_DIO_SET_HIGH
  8912 ;;		_DIO_SET_INPUT
  8913 ;;		_DIO_SET_LOW
  8914 ;;		_DIO_SET_OUTPUT
  8915 ;;		_get_DIO_PIN_value
  8916 ;; This function is called by:
  8917 ;;		_set_segments
  8918 ;; This function uses a non-reentrant model
  8919 ;;
  8920                           
  8921                           
  8922                           ;psect for function _write_byte
  8923  12AE                     _write_byte:
  8924                           
  8925                           ;incstack = 0
  8926                           ; Regs used in _write_byte: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
  8927                           ;write_byte@p stored from wreg
  8928  12AE  00F7               	movwf	write_byte@p
  8929  12AF                     l2751:
  8930                           
  8931                           ;tm1637.c: 79:     uint8_t data = b;
  8932  12AF  0872               	movf	write_byte@b,w
  8933  12B0  00F3               	movwf	??_write_byte
  8934  12B1  0873               	movf	??_write_byte,w
  8935  12B2  00F5               	movwf	write_byte@data
  8936  12B3                     l2753:
  8937                           
  8938                           ;tm1637.c: 82:     CLK_SET_OUTPUT(p);
  8939  12B3  0877               	movf	write_byte@p,w
  8940  12B4  319F  2791  3192   	fcall	_CLK_SET_OUTPUT
  8941  12B7                     l2755:
  8942                           
  8943                           ;tm1637.c: 83:     for(uint8_t i = 0; i < 8; i++){
  8944  12B7  01F6               	clrf	write_byte@i
  8945  12B8                     l2761:
  8946                           
  8947                           ;tm1637.c: 85:         CLK_SET_LOW(p);
  8948  12B8  0877               	movf	write_byte@p,w
  8949  12B9  319F  2787  3192   	fcall	_CLK_SET_LOW
  8950  12BC                     l2763:
  8951                           
  8952                           ;tm1637.c: 87:         if(data & 0x01){
  8953  12BC  1C75               	btfss	write_byte@data,0
  8954  12BD  2ABF               	goto	u2861
  8955  12BE  2AC0               	goto	u2860
  8956  12BF                     u2861:
  8957  12BF  2AC5               	goto	l2767
  8958  12C0                     u2860:
  8959  12C0                     l2765:
  8960                           
  8961                           ;tm1637.c: 89:             DIO_SET_HIGH(p);
  8962  12C0  0877               	movf	write_byte@p,w
  8963  12C1  319F  279B  3192   	fcall	_DIO_SET_HIGH
  8964                           
  8965                           ;tm1637.c: 90:         }else{
  8966  12C4  2AC9               	goto	l208
  8967  12C5                     l2767:
  8968                           
  8969                           ;tm1637.c: 92:             DIO_SET_LOW(p);
  8970  12C5  0877               	movf	write_byte@p,w
  8971  12C6  319F  27A5  3192   	fcall	_DIO_SET_LOW
  8972  12C9                     l208:	
  8973                           ;tm1637.c: 93:         }
  8974                           
  8975                           
  8976                           ;tm1637.c: 96:         CLK_SET_HIGH(p);
  8977  12C9  0877               	movf	write_byte@p,w
  8978  12CA  319F  277D  3192   	fcall	_CLK_SET_HIGH
  8979  12CD                     l2769:
  8980                           
  8981                           ;tm1637.c: 98:         data = data >> 1;
  8982  12CD  3675               	lsrf	write_byte@data,w
  8983  12CE  00F3               	movwf	??_write_byte
  8984  12CF  0873               	movf	??_write_byte,w
  8985  12D0  00F5               	movwf	write_byte@data
  8986  12D1                     l2771:
  8987                           
  8988                           ;tm1637.c: 99:     }
  8989  12D1  3001               	movlw	1
  8990  12D2  00F3               	movwf	??_write_byte
  8991  12D3  0873               	movf	??_write_byte,w
  8992  12D4  07F6               	addwf	write_byte@i,f
  8993  12D5                     l2773:
  8994  12D5  3008               	movlw	8
  8995  12D6  0276               	subwf	write_byte@i,w
  8996  12D7  1C03               	skipc
  8997  12D8  2ADA               	goto	u2871
  8998  12D9  2ADB               	goto	u2870
  8999  12DA                     u2871:
  9000  12DA  2AB8               	goto	l2761
  9001  12DB                     u2870:
  9002  12DB                     l2775:
  9003                           
  9004                           ;tm1637.c: 104:     CLK_SET_LOW(p);
  9005  12DB  0877               	movf	write_byte@p,w
  9006  12DC  319F  2787  3192   	fcall	_CLK_SET_LOW
  9007                           
  9008                           ;tm1637.c: 105:     DIO_SET_HIGH(p);
  9009  12DF  0877               	movf	write_byte@p,w
  9010  12E0  319F  279B  3192   	fcall	_DIO_SET_HIGH
  9011                           
  9012                           ;tm1637.c: 108:     CLK_SET_HIGH(p);
  9013  12E3  0877               	movf	write_byte@p,w
  9014  12E4  319F  277D  3192   	fcall	_CLK_SET_HIGH
  9015                           
  9016                           ;tm1637.c: 111:     DIO_SET_INPUT(p);
  9017  12E7  0877               	movf	write_byte@p,w
  9018  12E8  319F  27B9  3192   	fcall	_DIO_SET_INPUT
  9019                           
  9020                           ;tm1637.c: 113:     uint8_t ack = get_DIO_PIN_value(p);
  9021  12EB  0877               	movf	write_byte@p,w
  9022  12EC  3195  252C  3192   	fcall	_get_DIO_PIN_value
  9023  12EF  00F3               	movwf	??_write_byte
  9024  12F0  0873               	movf	??_write_byte,w
  9025  12F1  00F4               	movwf	write_byte@ack
  9026  12F2                     l2777:
  9027                           
  9028                           ;tm1637.c: 114:     if(ack == 0){
  9029  12F2  0874               	movf	write_byte@ack,w
  9030  12F3  1D03               	btfss	3,2
  9031  12F4  2AF6               	goto	u2881
  9032  12F5  2AF7               	goto	u2880
  9033  12F6                     u2881:
  9034  12F6  2AFF               	goto	l209
  9035  12F7                     u2880:
  9036  12F7                     l2779:
  9037                           
  9038                           ;tm1637.c: 116:         DIO_SET_OUTPUT(p);
  9039  12F7  0877               	movf	write_byte@p,w
  9040  12F8  319F  27AF  3192   	fcall	_DIO_SET_OUTPUT
  9041                           
  9042                           ;tm1637.c: 119:         DIO_SET_LOW(p);
  9043  12FB  0877               	movf	write_byte@p,w
  9044  12FC  319F  27A5  3192   	fcall	_DIO_SET_LOW
  9045  12FF                     l209:	
  9046                           ;tm1637.c: 120:     }
  9047                           
  9048                           
  9049                           ;tm1637.c: 123:     DIO_SET_OUTPUT(p);
  9050  12FF  0877               	movf	write_byte@p,w
  9051  1300  319F  27AF  3192   	fcall	_DIO_SET_OUTPUT
  9052  1303                     l210:
  9053  1303  0008               	return
  9054  1304                     __end_of_write_byte:
  9055                           
  9056                           	psect	text37
  9057  152C                     __ptext37:	
  9058 ;; *************** function _get_DIO_PIN_value *****************
  9059 ;; Defined at:
  9060 ;;		line 67 in file "tm1637.c"
  9061 ;; Parameters:    Size  Location     Type
  9062 ;;  p               1    wreg     PTR struct .
  9063 ;;		 -> NULL(0), main@tm1637(2), 
  9064 ;; Auto vars:     Size  Location     Type
  9065 ;;  p               1    1[COMMON] PTR struct .
  9066 ;;		 -> NULL(0), main@tm1637(2), 
  9067 ;; Return value:  Size  Location     Type
  9068 ;;                  1    wreg      unsigned char 
  9069 ;; Registers used:
  9070 ;;		wreg, fsr1l, fsr1h, status,2, status,0
  9071 ;; Tracked objects:
  9072 ;;		On entry : 0/0
  9073 ;;		On exit  : 0/0
  9074 ;;		Unchanged: 0/0
  9075 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  9076 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9077 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9078 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9079 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9080 ;;Total ram usage:        2 bytes
  9081 ;; Hardware stack levels used: 1
  9082 ;; This function calls:
  9083 ;;		Nothing
  9084 ;; This function is called by:
  9085 ;;		_write_byte
  9086 ;; This function uses a non-reentrant model
  9087 ;;
  9088                           
  9089                           
  9090                           ;psect for function _get_DIO_PIN_value
  9091  152C                     _get_DIO_PIN_value:
  9092                           
  9093                           ;incstack = 0
  9094                           ; Regs used in _get_DIO_PIN_value: [wreg+fsr1l+fsr1h+status,2+status,0]
  9095                           ;get_DIO_PIN_value@p stored from wreg
  9096  152C  00F1               	movwf	get_DIO_PIN_value@p
  9097  152D                     l2567:
  9098                           
  9099                           ;tm1637.c: 68:     if(p->dat_pin == 0x01){ return PORTBbits.RB0; }
  9100  152D  0A71               	incf	get_DIO_PIN_value@p,w
  9101  152E  0086               	movwf	6
  9102  152F  0187               	clrf	7
  9103  1530  0301               	decf	1,w
  9104  1531  1D03               	btfss	3,2
  9105  1532  2D34               	goto	u2431
  9106  1533  2D35               	goto	u2430
  9107  1534                     u2431:
  9108  1534  2D39               	goto	l2573
  9109  1535                     u2430:
  9110  1535                     l2569:
  9111  1535  0020               	movlb	0	; select bank0
  9112  1536  080D               	movf	13,w	;volatile
  9113  1537  3901               	andlw	1
  9114  1538  2D9B               	goto	l195
  9115  1539                     l2573:
  9116                           
  9117                           ;tm1637.c: 69:     if(p->dat_pin == 0x02){ return PORTBbits.RB1; }
  9118  1539  0A71               	incf	get_DIO_PIN_value@p,w
  9119  153A  0086               	movwf	6
  9120  153B  0187               	clrf	7
  9121  153C  3002               	movlw	2
  9122  153D  0601               	xorwf	1,w
  9123  153E  1D03               	btfss	3,2
  9124  153F  2D41               	goto	u2441
  9125  1540  2D42               	goto	u2440
  9126  1541                     u2441:
  9127  1541  2D46               	goto	l2579
  9128  1542                     u2440:
  9129  1542                     l2575:
  9130  1542  0020               	movlb	0	; select bank0
  9131  1543  0C0D               	rrf	13,w	;volatile
  9132  1544  3901               	andlw	1
  9133  1545  2D9B               	goto	l195
  9134  1546                     l2579:
  9135                           
  9136                           ;tm1637.c: 70:     if(p->dat_pin == 0x04){ return PORTBbits.RB2; }
  9137  1546  0A71               	incf	get_DIO_PIN_value@p,w
  9138  1547  0086               	movwf	6
  9139  1548  0187               	clrf	7
  9140  1549  3004               	movlw	4
  9141  154A  0601               	xorwf	1,w
  9142  154B  1D03               	btfss	3,2
  9143  154C  2D4E               	goto	u2451
  9144  154D  2D4F               	goto	u2450
  9145  154E                     u2451:
  9146  154E  2D54               	goto	l2585
  9147  154F                     u2450:
  9148  154F                     l2581:
  9149  154F  0020               	movlb	0	; select bank0
  9150  1550  0C0D               	rrf	13,w	;volatile
  9151  1551  0C89               	rrf	9,f
  9152  1552  3901               	andlw	1
  9153  1553  2D9B               	goto	l195
  9154  1554                     l2585:
  9155                           
  9156                           ;tm1637.c: 71:     if(p->dat_pin == 0x08){ return PORTBbits.RB3; }
  9157  1554  0A71               	incf	get_DIO_PIN_value@p,w
  9158  1555  0086               	movwf	6
  9159  1556  0187               	clrf	7
  9160  1557  3008               	movlw	8
  9161  1558  0601               	xorwf	1,w
  9162  1559  1D03               	btfss	3,2
  9163  155A  2D5C               	goto	u2461
  9164  155B  2D5D               	goto	u2460
  9165  155C                     u2461:
  9166  155C  2D64               	goto	l2591
  9167  155D                     u2460:
  9168  155D                     l2587:
  9169  155D  0020               	movlb	0	; select bank0
  9170  155E  0C0D               	rrf	13,w	;volatile
  9171  155F  00F0               	movwf	??_get_DIO_PIN_value
  9172  1560  0CF0               	rrf	??_get_DIO_PIN_value,f
  9173  1561  0C70               	rrf	??_get_DIO_PIN_value,w
  9174  1562  3901               	andlw	1
  9175  1563  2D9B               	goto	l195
  9176  1564                     l2591:
  9177                           
  9178                           ;tm1637.c: 72:     if(p->dat_pin == 0x10){ return PORTBbits.RB4; }
  9179  1564  0A71               	incf	get_DIO_PIN_value@p,w
  9180  1565  0086               	movwf	6
  9181  1566  0187               	clrf	7
  9182  1567  3010               	movlw	16
  9183  1568  0601               	xorwf	1,w
  9184  1569  1D03               	btfss	3,2
  9185  156A  2D6C               	goto	u2471
  9186  156B  2D6D               	goto	u2470
  9187  156C                     u2471:
  9188  156C  2D71               	goto	l2597
  9189  156D                     u2470:
  9190  156D                     l2593:
  9191  156D  0020               	movlb	0	; select bank0
  9192  156E  0E0D               	swapf	13,w	;volatile
  9193  156F  3901               	andlw	1
  9194  1570  2D9B               	goto	l195
  9195  1571                     l2597:
  9196                           
  9197                           ;tm1637.c: 73:     if(p->dat_pin == 0x20){ return PORTBbits.RB5; }
  9198  1571  0A71               	incf	get_DIO_PIN_value@p,w
  9199  1572  0086               	movwf	6
  9200  1573  0187               	clrf	7
  9201  1574  3020               	movlw	32
  9202  1575  0601               	xorwf	1,w
  9203  1576  1D03               	btfss	3,2
  9204  1577  2D79               	goto	u2481
  9205  1578  2D7A               	goto	u2480
  9206  1579                     u2481:
  9207  1579  2D7F               	goto	l2603
  9208  157A                     u2480:
  9209  157A                     l2599:
  9210  157A  0020               	movlb	0	; select bank0
  9211  157B  0E0D               	swapf	13,w	;volatile
  9212  157C  0C89               	rrf	9,f
  9213  157D  3901               	andlw	1
  9214  157E  2D9B               	goto	l195
  9215  157F                     l2603:
  9216                           
  9217                           ;tm1637.c: 74:     if(p->dat_pin == 0x40){ return PORTBbits.RB6; }
  9218  157F  0A71               	incf	get_DIO_PIN_value@p,w
  9219  1580  0086               	movwf	6
  9220  1581  0187               	clrf	7
  9221  1582  3040               	movlw	64
  9222  1583  0601               	xorwf	1,w
  9223  1584  1D03               	btfss	3,2
  9224  1585  2D87               	goto	u2491
  9225  1586  2D88               	goto	u2490
  9226  1587                     u2491:
  9227  1587  2D8E               	goto	l2609
  9228  1588                     u2490:
  9229  1588                     l2605:
  9230  1588  0020               	movlb	0	; select bank0
  9231  1589  0E0D               	swapf	13,w	;volatile
  9232  158A  0C89               	rrf	9,f
  9233  158B  0C89               	rrf	9,f
  9234  158C  3901               	andlw	1
  9235  158D  2D9B               	goto	l195
  9236  158E                     l2609:
  9237                           
  9238                           ;tm1637.c: 75:     if(p->dat_pin == 0x80){ return PORTBbits.RB7; }
  9239  158E  0A71               	incf	get_DIO_PIN_value@p,w
  9240  158F  0086               	movwf	6
  9241  1590  0187               	clrf	7
  9242  1591  3080               	movlw	128
  9243  1592  0601               	xorwf	1,w
  9244  1593  1D03               	btfss	3,2
  9245  1594  2D96               	goto	u2501
  9246  1595  2D97               	goto	u2500
  9247  1596                     u2501:
  9248  1596  2D9B               	goto	l195
  9249  1597                     u2500:
  9250  1597                     l2611:
  9251  1597  0020               	movlb	0	; select bank0
  9252  1598  0D0D               	rlf	13,w	;volatile
  9253  1599  0D0D               	rlf	13,w	;volatile
  9254  159A  3901               	andlw	1
  9255  159B                     l195:
  9256  159B  0008               	return
  9257  159C                     __end_of_get_DIO_PIN_value:
  9258                           
  9259                           	psect	text38
  9260  1FB9                     __ptext38:	
  9261 ;; *************** function _DIO_SET_INPUT *****************
  9262 ;; Defined at:
  9263 ;;		line 32 in file "tm1637.c"
  9264 ;; Parameters:    Size  Location     Type
  9265 ;;  p               1    wreg     PTR struct .
  9266 ;;		 -> NULL(0), main@tm1637(2), 
  9267 ;; Auto vars:     Size  Location     Type
  9268 ;;  p               1    1[COMMON] PTR struct .
  9269 ;;		 -> NULL(0), main@tm1637(2), 
  9270 ;; Return value:  Size  Location     Type
  9271 ;;                  1    wreg      void 
  9272 ;; Registers used:
  9273 ;;		wreg, fsr1l, fsr1h, status,2, status,0
  9274 ;; Tracked objects:
  9275 ;;		On entry : 0/0
  9276 ;;		On exit  : 0/0
  9277 ;;		Unchanged: 0/0
  9278 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  9279 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9280 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9281 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9282 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9283 ;;Total ram usage:        2 bytes
  9284 ;; Hardware stack levels used: 1
  9285 ;; This function calls:
  9286 ;;		Nothing
  9287 ;; This function is called by:
  9288 ;;		_write_byte
  9289 ;; This function uses a non-reentrant model
  9290 ;;
  9291                           
  9292                           
  9293                           ;psect for function _DIO_SET_INPUT
  9294  1FB9                     _DIO_SET_INPUT:
  9295                           
  9296                           ;incstack = 0
  9297                           ; Regs used in _DIO_SET_INPUT: [wreg+fsr1l+fsr1h+status,2+status,0]
  9298                           ;DIO_SET_INPUT@p stored from wreg
  9299  1FB9  00F1               	movwf	DIO_SET_INPUT@p
  9300  1FBA                     l2561:
  9301  1FBA  0A71               	incf	DIO_SET_INPUT@p,w
  9302  1FBB  0086               	movwf	6
  9303  1FBC  0187               	clrf	7
  9304  1FBD  0801               	movf	1,w
  9305  1FBE  00F0               	movwf	??_DIO_SET_INPUT
  9306  1FBF  0870               	movf	??_DIO_SET_INPUT,w
  9307  1FC0  0021               	movlb	1	; select bank1
  9308  1FC1  048C               	iorwf	12,f	;volatile
  9309  1FC2                     l179:
  9310  1FC2  0008               	return
  9311  1FC3                     __end_of_DIO_SET_INPUT:
  9312                           
  9313                           	psect	text39
  9314  106F                     __ptext39:	
  9315 ;; *************** function _stop_segment *****************
  9316 ;; Defined at:
  9317 ;;		line 53 in file "tm1637.c"
  9318 ;; Parameters:    Size  Location     Type
  9319 ;;  p               1    wreg     PTR struct .
  9320 ;;		 -> NULL(0), main@tm1637(2), 
  9321 ;; Auto vars:     Size  Location     Type
  9322 ;;  p               1    2[COMMON] PTR struct .
  9323 ;;		 -> NULL(0), main@tm1637(2), 
  9324 ;; Return value:  Size  Location     Type
  9325 ;;                  1    wreg      void 
  9326 ;; Registers used:
  9327 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  9328 ;; Tracked objects:
  9329 ;;		On entry : 0/0
  9330 ;;		On exit  : 0/0
  9331 ;;		Unchanged: 0/0
  9332 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  9333 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9334 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9335 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9336 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9337 ;;Total ram usage:        1 bytes
  9338 ;; Hardware stack levels used: 1
  9339 ;; Hardware stack levels required when called: 1
  9340 ;; This function calls:
  9341 ;;		_CLK_SET_HIGH
  9342 ;;		_CLK_SET_LOW
  9343 ;;		_CLK_SET_OUTPUT
  9344 ;;		_DIO_SET_HIGH
  9345 ;;		_DIO_SET_LOW
  9346 ;;		_DIO_SET_OUTPUT
  9347 ;; This function is called by:
  9348 ;;		_set_segments
  9349 ;; This function uses a non-reentrant model
  9350 ;;
  9351                           
  9352                           
  9353                           ;psect for function _stop_segment
  9354  106F                     _stop_segment:
  9355                           
  9356                           ;incstack = 0
  9357                           ; Regs used in _stop_segment: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
  9358                           ;stop_segment@p stored from wreg
  9359  106F  00F2               	movwf	stop_segment@p
  9360  1070                     l2749:
  9361                           
  9362                           ;tm1637.c: 55:     DIO_SET_OUTPUT(p);
  9363  1070  0872               	movf	stop_segment@p,w
  9364  1071  319F  27AF  3190   	fcall	_DIO_SET_OUTPUT
  9365                           
  9366                           ;tm1637.c: 56:     CLK_SET_OUTPUT(p);
  9367  1074  0872               	movf	stop_segment@p,w
  9368  1075  319F  2791  3190   	fcall	_CLK_SET_OUTPUT
  9369                           
  9370                           ;tm1637.c: 59:     CLK_SET_LOW(p);
  9371  1078  0872               	movf	stop_segment@p,w
  9372  1079  319F  2787  3190   	fcall	_CLK_SET_LOW
  9373                           
  9374                           ;tm1637.c: 60:     DIO_SET_LOW(p);
  9375  107C  0872               	movf	stop_segment@p,w
  9376  107D  319F  27A5  3190   	fcall	_DIO_SET_LOW
  9377                           
  9378                           ;tm1637.c: 63:     CLK_SET_HIGH(p);
  9379  1080  0872               	movf	stop_segment@p,w
  9380  1081  319F  277D  3190   	fcall	_CLK_SET_HIGH
  9381                           
  9382                           ;tm1637.c: 64:     DIO_SET_HIGH(p);
  9383  1084  0872               	movf	stop_segment@p,w
  9384  1085  319F  279B  3190   	fcall	_DIO_SET_HIGH
  9385  1088                     l191:
  9386  1088  0008               	return
  9387  1089                     __end_of_stop_segment:
  9388                           
  9389                           	psect	text40
  9390  1055                     __ptext40:	
  9391 ;; *************** function _start_segment *****************
  9392 ;; Defined at:
  9393 ;;		line 39 in file "tm1637.c"
  9394 ;; Parameters:    Size  Location     Type
  9395 ;;  p               1    wreg     PTR struct .
  9396 ;;		 -> NULL(0), main@tm1637(2), 
  9397 ;; Auto vars:     Size  Location     Type
  9398 ;;  p               1    2[COMMON] PTR struct .
  9399 ;;		 -> NULL(0), main@tm1637(2), 
  9400 ;; Return value:  Size  Location     Type
  9401 ;;                  1    wreg      void 
  9402 ;; Registers used:
  9403 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  9404 ;; Tracked objects:
  9405 ;;		On entry : 0/0
  9406 ;;		On exit  : 0/0
  9407 ;;		Unchanged: 0/0
  9408 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  9409 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9410 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9411 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9412 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9413 ;;Total ram usage:        1 bytes
  9414 ;; Hardware stack levels used: 1
  9415 ;; Hardware stack levels required when called: 1
  9416 ;; This function calls:
  9417 ;;		_CLK_SET_HIGH
  9418 ;;		_CLK_SET_LOW
  9419 ;;		_CLK_SET_OUTPUT
  9420 ;;		_DIO_SET_HIGH
  9421 ;;		_DIO_SET_LOW
  9422 ;;		_DIO_SET_OUTPUT
  9423 ;; This function is called by:
  9424 ;;		_set_segments
  9425 ;; This function uses a non-reentrant model
  9426 ;;
  9427                           
  9428                           
  9429                           ;psect for function _start_segment
  9430  1055                     _start_segment:
  9431                           
  9432                           ;incstack = 0
  9433                           ; Regs used in _start_segment: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
  9434                           ;start_segment@p stored from wreg
  9435  1055  00F2               	movwf	start_segment@p
  9436  1056                     l2747:
  9437                           
  9438                           ;tm1637.c: 41:     DIO_SET_OUTPUT(p);
  9439  1056  0872               	movf	start_segment@p,w
  9440  1057  319F  27AF  3190   	fcall	_DIO_SET_OUTPUT
  9441                           
  9442                           ;tm1637.c: 42:     CLK_SET_OUTPUT(p);
  9443  105A  0872               	movf	start_segment@p,w
  9444  105B  319F  2791  3190   	fcall	_CLK_SET_OUTPUT
  9445                           
  9446                           ;tm1637.c: 45:     DIO_SET_HIGH(p);
  9447  105E  0872               	movf	start_segment@p,w
  9448  105F  319F  279B  3190   	fcall	_DIO_SET_HIGH
  9449                           
  9450                           ;tm1637.c: 46:     CLK_SET_HIGH(p);
  9451  1062  0872               	movf	start_segment@p,w
  9452  1063  319F  277D  3190   	fcall	_CLK_SET_HIGH
  9453                           
  9454                           ;tm1637.c: 49:     DIO_SET_LOW(p);
  9455  1066  0872               	movf	start_segment@p,w
  9456  1067  319F  27A5  3190   	fcall	_DIO_SET_LOW
  9457                           
  9458                           ;tm1637.c: 50:     CLK_SET_LOW(p);
  9459  106A  0872               	movf	start_segment@p,w
  9460  106B  319F  2787  3190   	fcall	_CLK_SET_LOW
  9461  106E                     l188:
  9462  106E  0008               	return
  9463  106F                     __end_of_start_segment:
  9464                           
  9465                           	psect	text41
  9466  1FAF                     __ptext41:	
  9467 ;; *************** function _DIO_SET_OUTPUT *****************
  9468 ;; Defined at:
  9469 ;;		line 30 in file "tm1637.c"
  9470 ;; Parameters:    Size  Location     Type
  9471 ;;  p               1    wreg     PTR struct .
  9472 ;;		 -> NULL(0), main@tm1637(2), 
  9473 ;; Auto vars:     Size  Location     Type
  9474 ;;  p               1    1[COMMON] PTR struct .
  9475 ;;		 -> NULL(0), main@tm1637(2), 
  9476 ;; Return value:  Size  Location     Type
  9477 ;;                  1    wreg      void 
  9478 ;; Registers used:
  9479 ;;		wreg, fsr1l, fsr1h, status,2, status,0
  9480 ;; Tracked objects:
  9481 ;;		On entry : 0/0
  9482 ;;		On exit  : 0/0
  9483 ;;		Unchanged: 0/0
  9484 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  9485 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9486 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9487 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9488 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9489 ;;Total ram usage:        2 bytes
  9490 ;; Hardware stack levels used: 1
  9491 ;; This function calls:
  9492 ;;		Nothing
  9493 ;; This function is called by:
  9494 ;;		_start_segment
  9495 ;;		_stop_segment
  9496 ;;		_write_byte
  9497 ;; This function uses a non-reentrant model
  9498 ;;
  9499                           
  9500                           
  9501                           ;psect for function _DIO_SET_OUTPUT
  9502  1FAF                     _DIO_SET_OUTPUT:
  9503                           
  9504                           ;incstack = 0
  9505                           ; Regs used in _DIO_SET_OUTPUT: [wreg+fsr1l+fsr1h+status,2+status,0]
  9506                           ;DIO_SET_OUTPUT@p stored from wreg
  9507  1FAF  00F1               	movwf	DIO_SET_OUTPUT@p
  9508  1FB0                     l2559:
  9509  1FB0  0A71               	incf	DIO_SET_OUTPUT@p,w
  9510  1FB1  0086               	movwf	6
  9511  1FB2  0187               	clrf	7
  9512  1FB3  0901               	comf	1,w
  9513  1FB4  00F0               	movwf	??_DIO_SET_OUTPUT
  9514  1FB5  0870               	movf	??_DIO_SET_OUTPUT,w
  9515  1FB6  0021               	movlb	1	; select bank1
  9516  1FB7  058C               	andwf	12,f	;volatile
  9517  1FB8                     l176:
  9518  1FB8  0008               	return
  9519  1FB9                     __end_of_DIO_SET_OUTPUT:
  9520                           
  9521                           	psect	text42
  9522  1FA5                     __ptext42:	
  9523 ;; *************** function _DIO_SET_LOW *****************
  9524 ;; Defined at:
  9525 ;;		line 36 in file "tm1637.c"
  9526 ;; Parameters:    Size  Location     Type
  9527 ;;  p               1    wreg     PTR struct .
  9528 ;;		 -> NULL(0), main@tm1637(2), 
  9529 ;; Auto vars:     Size  Location     Type
  9530 ;;  p               1    1[COMMON] PTR struct .
  9531 ;;		 -> NULL(0), main@tm1637(2), 
  9532 ;; Return value:  Size  Location     Type
  9533 ;;                  1    wreg      void 
  9534 ;; Registers used:
  9535 ;;		wreg, fsr1l, fsr1h, status,2, status,0
  9536 ;; Tracked objects:
  9537 ;;		On entry : 0/0
  9538 ;;		On exit  : 0/0
  9539 ;;		Unchanged: 0/0
  9540 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  9541 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9542 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9543 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9544 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9545 ;;Total ram usage:        2 bytes
  9546 ;; Hardware stack levels used: 1
  9547 ;; This function calls:
  9548 ;;		Nothing
  9549 ;; This function is called by:
  9550 ;;		_start_segment
  9551 ;;		_stop_segment
  9552 ;;		_write_byte
  9553 ;; This function uses a non-reentrant model
  9554 ;;
  9555                           
  9556                           
  9557                           ;psect for function _DIO_SET_LOW
  9558  1FA5                     _DIO_SET_LOW:
  9559                           
  9560                           ;incstack = 0
  9561                           ; Regs used in _DIO_SET_LOW: [wreg+fsr1l+fsr1h+status,2+status,0]
  9562                           ;DIO_SET_LOW@p stored from wreg
  9563  1FA5  00F1               	movwf	DIO_SET_LOW@p
  9564  1FA6                     l2565:
  9565  1FA6  0A71               	incf	DIO_SET_LOW@p,w
  9566  1FA7  0086               	movwf	6
  9567  1FA8  0187               	clrf	7
  9568  1FA9  0901               	comf	1,w
  9569  1FAA  00F0               	movwf	??_DIO_SET_LOW
  9570  1FAB  0870               	movf	??_DIO_SET_LOW,w
  9571  1FAC  0022               	movlb	2	; select bank2
  9572  1FAD  058C               	andwf	12,f	;volatile
  9573  1FAE                     l185:
  9574  1FAE  0008               	return
  9575  1FAF                     __end_of_DIO_SET_LOW:
  9576                           
  9577                           	psect	text43
  9578  1F9B                     __ptext43:	
  9579 ;; *************** function _DIO_SET_HIGH *****************
  9580 ;; Defined at:
  9581 ;;		line 34 in file "tm1637.c"
  9582 ;; Parameters:    Size  Location     Type
  9583 ;;  p               1    wreg     PTR struct .
  9584 ;;		 -> NULL(0), main@tm1637(2), 
  9585 ;; Auto vars:     Size  Location     Type
  9586 ;;  p               1    1[COMMON] PTR struct .
  9587 ;;		 -> NULL(0), main@tm1637(2), 
  9588 ;; Return value:  Size  Location     Type
  9589 ;;                  1    wreg      void 
  9590 ;; Registers used:
  9591 ;;		wreg, fsr1l, fsr1h, status,2, status,0
  9592 ;; Tracked objects:
  9593 ;;		On entry : 0/0
  9594 ;;		On exit  : 0/0
  9595 ;;		Unchanged: 0/0
  9596 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  9597 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9598 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9599 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9600 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9601 ;;Total ram usage:        2 bytes
  9602 ;; Hardware stack levels used: 1
  9603 ;; This function calls:
  9604 ;;		Nothing
  9605 ;; This function is called by:
  9606 ;;		_start_segment
  9607 ;;		_stop_segment
  9608 ;;		_write_byte
  9609 ;; This function uses a non-reentrant model
  9610 ;;
  9611                           
  9612                           
  9613                           ;psect for function _DIO_SET_HIGH
  9614  1F9B                     _DIO_SET_HIGH:
  9615                           
  9616                           ;incstack = 0
  9617                           ; Regs used in _DIO_SET_HIGH: [wreg+fsr1l+fsr1h+status,2+status,0]
  9618                           ;DIO_SET_HIGH@p stored from wreg
  9619  1F9B  00F1               	movwf	DIO_SET_HIGH@p
  9620  1F9C                     l2563:
  9621  1F9C  0A71               	incf	DIO_SET_HIGH@p,w
  9622  1F9D  0086               	movwf	6
  9623  1F9E  0187               	clrf	7
  9624  1F9F  0801               	movf	1,w
  9625  1FA0  00F0               	movwf	??_DIO_SET_HIGH
  9626  1FA1  0870               	movf	??_DIO_SET_HIGH,w
  9627  1FA2  0022               	movlb	2	; select bank2
  9628  1FA3  048C               	iorwf	12,f	;volatile
  9629  1FA4                     l182:
  9630  1FA4  0008               	return
  9631  1FA5                     __end_of_DIO_SET_HIGH:
  9632                           
  9633                           	psect	text44
  9634  1F91                     __ptext44:	
  9635 ;; *************** function _CLK_SET_OUTPUT *****************
  9636 ;; Defined at:
  9637 ;;		line 22 in file "tm1637.c"
  9638 ;; Parameters:    Size  Location     Type
  9639 ;;  p               1    wreg     PTR struct .
  9640 ;;		 -> NULL(0), main@tm1637(2), 
  9641 ;; Auto vars:     Size  Location     Type
  9642 ;;  p               1    1[COMMON] PTR struct .
  9643 ;;		 -> NULL(0), main@tm1637(2), 
  9644 ;; Return value:  Size  Location     Type
  9645 ;;                  1    wreg      void 
  9646 ;; Registers used:
  9647 ;;		wreg, fsr1l, fsr1h, status,2, status,0
  9648 ;; Tracked objects:
  9649 ;;		On entry : 0/0
  9650 ;;		On exit  : 0/0
  9651 ;;		Unchanged: 0/0
  9652 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  9653 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9654 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9655 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9656 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9657 ;;Total ram usage:        2 bytes
  9658 ;; Hardware stack levels used: 1
  9659 ;; This function calls:
  9660 ;;		Nothing
  9661 ;; This function is called by:
  9662 ;;		_start_segment
  9663 ;;		_stop_segment
  9664 ;;		_write_byte
  9665 ;; This function uses a non-reentrant model
  9666 ;;
  9667                           
  9668                           
  9669                           ;psect for function _CLK_SET_OUTPUT
  9670  1F91                     _CLK_SET_OUTPUT:
  9671                           
  9672                           ;incstack = 0
  9673                           ; Regs used in _CLK_SET_OUTPUT: [wreg+fsr1l+fsr1h+status,2+status,0]
  9674                           ;CLK_SET_OUTPUT@p stored from wreg
  9675  1F91  00F1               	movwf	CLK_SET_OUTPUT@p
  9676  1F92                     l2553:
  9677  1F92  0871               	movf	CLK_SET_OUTPUT@p,w
  9678  1F93  0086               	movwf	6
  9679  1F94  0187               	clrf	7
  9680  1F95  0901               	comf	1,w
  9681  1F96  00F0               	movwf	??_CLK_SET_OUTPUT
  9682  1F97  0870               	movf	??_CLK_SET_OUTPUT,w
  9683  1F98  0021               	movlb	1	; select bank1
  9684  1F99  058C               	andwf	12,f	;volatile
  9685  1F9A                     l167:
  9686  1F9A  0008               	return
  9687  1F9B                     __end_of_CLK_SET_OUTPUT:
  9688                           
  9689                           	psect	text45
  9690  1F87                     __ptext45:	
  9691 ;; *************** function _CLK_SET_LOW *****************
  9692 ;; Defined at:
  9693 ;;		line 27 in file "tm1637.c"
  9694 ;; Parameters:    Size  Location     Type
  9695 ;;  p               1    wreg     PTR struct .
  9696 ;;		 -> NULL(0), main@tm1637(2), 
  9697 ;; Auto vars:     Size  Location     Type
  9698 ;;  p               1    1[COMMON] PTR struct .
  9699 ;;		 -> NULL(0), main@tm1637(2), 
  9700 ;; Return value:  Size  Location     Type
  9701 ;;                  1    wreg      void 
  9702 ;; Registers used:
  9703 ;;		wreg, fsr1l, fsr1h, status,2, status,0
  9704 ;; Tracked objects:
  9705 ;;		On entry : 0/0
  9706 ;;		On exit  : 0/0
  9707 ;;		Unchanged: 0/0
  9708 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  9709 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9710 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9711 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9712 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9713 ;;Total ram usage:        2 bytes
  9714 ;; Hardware stack levels used: 1
  9715 ;; This function calls:
  9716 ;;		Nothing
  9717 ;; This function is called by:
  9718 ;;		_start_segment
  9719 ;;		_stop_segment
  9720 ;;		_write_byte
  9721 ;; This function uses a non-reentrant model
  9722 ;;
  9723                           
  9724                           
  9725                           ;psect for function _CLK_SET_LOW
  9726  1F87                     _CLK_SET_LOW:
  9727                           
  9728                           ;incstack = 0
  9729                           ; Regs used in _CLK_SET_LOW: [wreg+fsr1l+fsr1h+status,2+status,0]
  9730                           ;CLK_SET_LOW@p stored from wreg
  9731  1F87  00F1               	movwf	CLK_SET_LOW@p
  9732  1F88                     l2557:
  9733  1F88  0871               	movf	CLK_SET_LOW@p,w
  9734  1F89  0086               	movwf	6
  9735  1F8A  0187               	clrf	7
  9736  1F8B  0901               	comf	1,w
  9737  1F8C  00F0               	movwf	??_CLK_SET_LOW
  9738  1F8D  0870               	movf	??_CLK_SET_LOW,w
  9739  1F8E  0022               	movlb	2	; select bank2
  9740  1F8F  058C               	andwf	12,f	;volatile
  9741  1F90                     l173:
  9742  1F90  0008               	return
  9743  1F91                     __end_of_CLK_SET_LOW:
  9744                           
  9745                           	psect	text46
  9746  1F7D                     __ptext46:	
  9747 ;; *************** function _CLK_SET_HIGH *****************
  9748 ;; Defined at:
  9749 ;;		line 25 in file "tm1637.c"
  9750 ;; Parameters:    Size  Location     Type
  9751 ;;  p               1    wreg     PTR struct .
  9752 ;;		 -> NULL(0), main@tm1637(2), 
  9753 ;; Auto vars:     Size  Location     Type
  9754 ;;  p               1    1[COMMON] PTR struct .
  9755 ;;		 -> NULL(0), main@tm1637(2), 
  9756 ;; Return value:  Size  Location     Type
  9757 ;;                  1    wreg      void 
  9758 ;; Registers used:
  9759 ;;		wreg, fsr1l, fsr1h, status,2, status,0
  9760 ;; Tracked objects:
  9761 ;;		On entry : 0/0
  9762 ;;		On exit  : 0/0
  9763 ;;		Unchanged: 0/0
  9764 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  9765 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9766 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9767 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9768 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9769 ;;Total ram usage:        2 bytes
  9770 ;; Hardware stack levels used: 1
  9771 ;; This function calls:
  9772 ;;		Nothing
  9773 ;; This function is called by:
  9774 ;;		_start_segment
  9775 ;;		_stop_segment
  9776 ;;		_write_byte
  9777 ;; This function uses a non-reentrant model
  9778 ;;
  9779                           
  9780                           
  9781                           ;psect for function _CLK_SET_HIGH
  9782  1F7D                     _CLK_SET_HIGH:
  9783                           
  9784                           ;incstack = 0
  9785                           ; Regs used in _CLK_SET_HIGH: [wreg+fsr1l+fsr1h+status,2+status,0]
  9786                           ;CLK_SET_HIGH@p stored from wreg
  9787  1F7D  00F1               	movwf	CLK_SET_HIGH@p
  9788  1F7E                     l2555:
  9789  1F7E  0871               	movf	CLK_SET_HIGH@p,w
  9790  1F7F  0086               	movwf	6
  9791  1F80  0187               	clrf	7
  9792  1F81  0801               	movf	1,w
  9793  1F82  00F0               	movwf	??_CLK_SET_HIGH
  9794  1F83  0870               	movf	??_CLK_SET_HIGH,w
  9795  1F84  0022               	movlb	2	; select bank2
  9796  1F85  048C               	iorwf	12,f	;volatile
  9797  1F86                     l170:
  9798  1F86  0008               	return
  9799  1F87                     __end_of_CLK_SET_HIGH:
  9800                           
  9801                           	psect	text47
  9802  1F57                     __ptext47:	
  9803 ;; *************** function _encode_digit *****************
  9804 ;; Defined at:
  9805 ;;		line 183 in file "tm1637.c"
  9806 ;; Parameters:    Size  Location     Type
  9807 ;;  p               1    wreg     PTR struct .
  9808 ;;		 -> NULL(0), main@tm1637(2), 
  9809 ;;  digit           1    9[COMMON] unsigned char 
  9810 ;; Auto vars:     Size  Location     Type
  9811 ;;  p               1   10[COMMON] PTR struct .
  9812 ;;		 -> NULL(0), main@tm1637(2), 
  9813 ;; Return value:  Size  Location     Type
  9814 ;;                  1    wreg      unsigned char 
  9815 ;; Registers used:
  9816 ;;		wreg, fsr1l, fsr1h, status,2, status,0
  9817 ;; Tracked objects:
  9818 ;;		On entry : 0/0
  9819 ;;		On exit  : 0/0
  9820 ;;		Unchanged: 0/0
  9821 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  9822 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9823 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9824 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9825 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9826 ;;Total ram usage:        2 bytes
  9827 ;; Hardware stack levels used: 1
  9828 ;; This function calls:
  9829 ;;		Nothing
  9830 ;; This function is called by:
  9831 ;;		_print_digit
  9832 ;; This function uses a non-reentrant model
  9833 ;;
  9834                           
  9835                           
  9836                           ;psect for function _encode_digit
  9837  1F57                     _encode_digit:
  9838  1F57                     l2921:	
  9839                           ;incstack = 0
  9840                           ; Regs used in _encode_digit: [wreg+fsr1l+fsr1h+status,2+status,0]
  9841                           
  9842                           
  9843                           ;tm1637.c: 184:     return segdata[digit & 0x0f];
  9844  1F57  0879               	movf	encode_digit@digit,w
  9845  1F58  390F               	andlw	15
  9846  1F59  3E2C               	addlw	(low (_segdata| (0+256)))& (0+255)
  9847  1F5A  0086               	movwf	6
  9848  1F5B  3001               	movlw	1	; select bank2/3
  9849  1F5C  0087               	movwf	7
  9850  1F5D  0801               	movf	1,w
  9851  1F5E                     l229:
  9852  1F5E  0008               	return
  9853  1F5F                     __end_of_encode_digit:
  9854                           
  9855                           	psect	text48
  9856  0801                     __ptext48:	
  9857 ;; *************** function ___awmod *****************
  9858 ;; Defined at:
  9859 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\awmod.c"
  9860 ;; Parameters:    Size  Location     Type
  9861 ;;  divisor         2    0[COMMON] int 
  9862 ;;  dividend        2    2[COMMON] int 
  9863 ;; Auto vars:     Size  Location     Type
  9864 ;;  sign            1    6[COMMON] unsigned char 
  9865 ;;  counter         1    5[COMMON] unsigned char 
  9866 ;; Return value:  Size  Location     Type
  9867 ;;                  2    0[COMMON] int 
  9868 ;; Registers used:
  9869 ;;		wreg, status,2, status,0
  9870 ;; Tracked objects:
  9871 ;;		On entry : 0/0
  9872 ;;		On exit  : 0/0
  9873 ;;		Unchanged: 0/0
  9874 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  9875 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9876 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9877 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9878 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9879 ;;Total ram usage:        7 bytes
  9880 ;; Hardware stack levels used: 1
  9881 ;; This function calls:
  9882 ;;		Nothing
  9883 ;; This function is called by:
  9884 ;;		_print_digit
  9885 ;; This function uses a non-reentrant model
  9886 ;;
  9887                           
  9888                           
  9889                           ;psect for function ___awmod
  9890  0801                     ___awmod:
  9891  0801                     l2985:	
  9892                           ;incstack = 0
  9893                           ; Regs used in ___awmod: [wreg+status,2+status,0]
  9894                           
  9895  0801  01F6               	clrf	___awmod@sign
  9896  0802                     l2987:
  9897  0802  1FF3               	btfss	___awmod@dividend+1,7
  9898  0803  2805               	goto	u3291
  9899  0804  2806               	goto	u3290
  9900  0805                     u3291:
  9901  0805  280D               	goto	l2993
  9902  0806                     u3290:
  9903  0806                     l2989:
  9904  0806  09F2               	comf	___awmod@dividend,f
  9905  0807  09F3               	comf	___awmod@dividend+1,f
  9906  0808  0AF2               	incf	___awmod@dividend,f
  9907  0809  1903               	skipnz
  9908  080A  0AF3               	incf	___awmod@dividend+1,f
  9909  080B                     l2991:
  9910  080B  01F6               	clrf	___awmod@sign
  9911  080C  0AF6               	incf	___awmod@sign,f
  9912  080D                     l2993:
  9913  080D  1FF1               	btfss	___awmod@divisor+1,7
  9914  080E  2810               	goto	u3301
  9915  080F  2811               	goto	u3300
  9916  0810                     u3301:
  9917  0810  2816               	goto	l2997
  9918  0811                     u3300:
  9919  0811                     l2995:
  9920  0811  09F0               	comf	___awmod@divisor,f
  9921  0812  09F1               	comf	___awmod@divisor+1,f
  9922  0813  0AF0               	incf	___awmod@divisor,f
  9923  0814  1903               	skipnz
  9924  0815  0AF1               	incf	___awmod@divisor+1,f
  9925  0816                     l2997:
  9926  0816  0870               	movf	___awmod@divisor,w
  9927  0817  0471               	iorwf	___awmod@divisor+1,w
  9928  0818  1903               	btfsc	3,2
  9929  0819  281B               	goto	u3311
  9930  081A  281C               	goto	u3310
  9931  081B                     u3311:
  9932  081B  2845               	goto	l3015
  9933  081C                     u3310:
  9934  081C                     l2999:
  9935  081C  01F5               	clrf	___awmod@counter
  9936  081D  0AF5               	incf	___awmod@counter,f
  9937  081E  2828               	goto	l3005
  9938  081F                     l3001:
  9939  081F  3001               	movlw	1
  9940  0820                     u3325:
  9941  0820  35F0               	lslf	___awmod@divisor,f
  9942  0821  0DF1               	rlf	___awmod@divisor+1,f
  9943  0822  0B89               	decfsz	9,f
  9944  0823  2820               	goto	u3325
  9945  0824                     l3003:
  9946  0824  3001               	movlw	1
  9947  0825  00F4               	movwf	??___awmod
  9948  0826  0874               	movf	??___awmod,w
  9949  0827  07F5               	addwf	___awmod@counter,f
  9950  0828                     l3005:
  9951  0828  1FF1               	btfss	___awmod@divisor+1,7
  9952  0829  282B               	goto	u3331
  9953  082A  282C               	goto	u3330
  9954  082B                     u3331:
  9955  082B  281F               	goto	l3001
  9956  082C                     u3330:
  9957  082C                     l3007:
  9958  082C  0871               	movf	___awmod@divisor+1,w
  9959  082D  0273               	subwf	___awmod@dividend+1,w
  9960  082E  1D03               	skipz
  9961  082F  2832               	goto	u3345
  9962  0830  0870               	movf	___awmod@divisor,w
  9963  0831  0272               	subwf	___awmod@dividend,w
  9964  0832                     u3345:
  9965  0832  1C03               	skipc
  9966  0833  2835               	goto	u3341
  9967  0834  2836               	goto	u3340
  9968  0835                     u3341:
  9969  0835  283A               	goto	l3011
  9970  0836                     u3340:
  9971  0836                     l3009:
  9972  0836  0870               	movf	___awmod@divisor,w
  9973  0837  02F2               	subwf	___awmod@dividend,f
  9974  0838  0871               	movf	___awmod@divisor+1,w
  9975  0839  3BF3               	subwfb	___awmod@dividend+1,f
  9976  083A                     l3011:
  9977  083A  3001               	movlw	1
  9978  083B                     u3355:
  9979  083B  36F1               	lsrf	___awmod@divisor+1,f
  9980  083C  0CF0               	rrf	___awmod@divisor,f
  9981  083D  0B89               	decfsz	9,f
  9982  083E  283B               	goto	u3355
  9983  083F                     l3013:
  9984  083F  3001               	movlw	1
  9985  0840  02F5               	subwf	___awmod@counter,f
  9986  0841  1D03               	btfss	3,2
  9987  0842  2844               	goto	u3361
  9988  0843  2845               	goto	u3360
  9989  0844                     u3361:
  9990  0844  282C               	goto	l3007
  9991  0845                     u3360:
  9992  0845                     l3015:
  9993  0845  0876               	movf	___awmod@sign,w
  9994  0846  1903               	btfsc	3,2
  9995  0847  2849               	goto	u3371
  9996  0848  284A               	goto	u3370
  9997  0849                     u3371:
  9998  0849  284F               	goto	l3019
  9999  084A                     u3370:
 10000  084A                     l3017:
 10001  084A  09F2               	comf	___awmod@dividend,f
 10002  084B  09F3               	comf	___awmod@dividend+1,f
 10003  084C  0AF2               	incf	___awmod@dividend,f
 10004  084D  1903               	skipnz
 10005  084E  0AF3               	incf	___awmod@dividend+1,f
 10006  084F                     l3019:
 10007  084F  0873               	movf	___awmod@dividend+1,w
 10008  0850  00F1               	movwf	?___awmod+1
 10009  0851  0872               	movf	___awmod@dividend,w
 10010  0852  00F0               	movwf	?___awmod
 10011  0853                     l685:
 10012  0853  0008               	return
 10013  0854                     __end_of___awmod:
 10014                           
 10015                           	psect	text49
 10016  000B                     __ptext49:	
 10017 ;; *************** function ___awdiv *****************
 10018 ;; Defined at:
 10019 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\awdiv.c"
 10020 ;; Parameters:    Size  Location     Type
 10021 ;;  divisor         2    0[COMMON] int 
 10022 ;;  dividend        2    2[COMMON] int 
 10023 ;; Auto vars:     Size  Location     Type
 10024 ;;  quotient        2    7[COMMON] int 
 10025 ;;  sign            1    6[COMMON] unsigned char 
 10026 ;;  counter         1    5[COMMON] unsigned char 
 10027 ;; Return value:  Size  Location     Type
 10028 ;;                  2    0[COMMON] int 
 10029 ;; Registers used:
 10030 ;;		wreg, status,2, status,0
 10031 ;; Tracked objects:
 10032 ;;		On entry : 0/0
 10033 ;;		On exit  : 0/0
 10034 ;;		Unchanged: 0/0
 10035 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 10036 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10037 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10038 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10039 ;;      Totals:         9       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10040 ;;Total ram usage:        9 bytes
 10041 ;; Hardware stack levels used: 1
 10042 ;; This function calls:
 10043 ;;		Nothing
 10044 ;; This function is called by:
 10045 ;;		_print_digit
 10046 ;; This function uses a non-reentrant model
 10047 ;;
 10048                           
 10049                           
 10050                           ;psect for function ___awdiv
 10051  000B                     ___awdiv:
 10052  000B                     l2941:	
 10053                           ;incstack = 0
 10054                           ; Regs used in ___awdiv: [wreg+status,2+status,0]
 10055                           
 10056  000B  01F6               	clrf	___awdiv@sign
 10057  000C                     l2943:
 10058  000C  1FF1               	btfss	___awdiv@divisor+1,7
 10059  000D  280F               	goto	u3191
 10060  000E  2810               	goto	u3190
 10061  000F                     u3191:
 10062  000F  2817               	goto	l2949
 10063  0010                     u3190:
 10064  0010                     l2945:
 10065  0010  09F0               	comf	___awdiv@divisor,f
 10066  0011  09F1               	comf	___awdiv@divisor+1,f
 10067  0012  0AF0               	incf	___awdiv@divisor,f
 10068  0013  1903               	skipnz
 10069  0014  0AF1               	incf	___awdiv@divisor+1,f
 10070  0015                     l2947:
 10071  0015  01F6               	clrf	___awdiv@sign
 10072  0016  0AF6               	incf	___awdiv@sign,f
 10073  0017                     l2949:
 10074  0017  1FF3               	btfss	___awdiv@dividend+1,7
 10075  0018  281A               	goto	u3201
 10076  0019  281B               	goto	u3200
 10077  001A                     u3201:
 10078  001A  2824               	goto	l2955
 10079  001B                     u3200:
 10080  001B                     l2951:
 10081  001B  09F2               	comf	___awdiv@dividend,f
 10082  001C  09F3               	comf	___awdiv@dividend+1,f
 10083  001D  0AF2               	incf	___awdiv@dividend,f
 10084  001E  1903               	skipnz
 10085  001F  0AF3               	incf	___awdiv@dividend+1,f
 10086  0020                     l2953:
 10087  0020  3001               	movlw	1
 10088  0021  00F4               	movwf	??___awdiv
 10089  0022  0874               	movf	??___awdiv,w
 10090  0023  06F6               	xorwf	___awdiv@sign,f
 10091  0024                     l2955:
 10092  0024  01F7               	clrf	___awdiv@quotient
 10093  0025  01F8               	clrf	___awdiv@quotient+1
 10094  0026                     l2957:
 10095  0026  0870               	movf	___awdiv@divisor,w
 10096  0027  0471               	iorwf	___awdiv@divisor+1,w
 10097  0028  1903               	btfsc	3,2
 10098  0029  282B               	goto	u3211
 10099  002A  282C               	goto	u3210
 10100  002B                     u3211:
 10101  002B  285B               	goto	l2977
 10102  002C                     u3210:
 10103  002C                     l2959:
 10104  002C  01F5               	clrf	___awdiv@counter
 10105  002D  0AF5               	incf	___awdiv@counter,f
 10106  002E  2838               	goto	l2965
 10107  002F                     l2961:
 10108  002F  3001               	movlw	1
 10109  0030                     u3225:
 10110  0030  35F0               	lslf	___awdiv@divisor,f
 10111  0031  0DF1               	rlf	___awdiv@divisor+1,f
 10112  0032  0B89               	decfsz	9,f
 10113  0033  2830               	goto	u3225
 10114  0034                     l2963:
 10115  0034  3001               	movlw	1
 10116  0035  00F4               	movwf	??___awdiv
 10117  0036  0874               	movf	??___awdiv,w
 10118  0037  07F5               	addwf	___awdiv@counter,f
 10119  0038                     l2965:
 10120  0038  1FF1               	btfss	___awdiv@divisor+1,7
 10121  0039  283B               	goto	u3231
 10122  003A  283C               	goto	u3230
 10123  003B                     u3231:
 10124  003B  282F               	goto	l2961
 10125  003C                     u3230:
 10126  003C                     l2967:
 10127  003C  3001               	movlw	1
 10128  003D                     u3245:
 10129  003D  35F7               	lslf	___awdiv@quotient,f
 10130  003E  0DF8               	rlf	___awdiv@quotient+1,f
 10131  003F  0B89               	decfsz	9,f
 10132  0040  283D               	goto	u3245
 10133  0041  0871               	movf	___awdiv@divisor+1,w
 10134  0042  0273               	subwf	___awdiv@dividend+1,w
 10135  0043  1D03               	skipz
 10136  0044  2847               	goto	u3255
 10137  0045  0870               	movf	___awdiv@divisor,w
 10138  0046  0272               	subwf	___awdiv@dividend,w
 10139  0047                     u3255:
 10140  0047  1C03               	skipc
 10141  0048  284A               	goto	u3251
 10142  0049  284B               	goto	u3250
 10143  004A                     u3251:
 10144  004A  2850               	goto	l2973
 10145  004B                     u3250:
 10146  004B                     l2969:
 10147  004B  0870               	movf	___awdiv@divisor,w
 10148  004C  02F2               	subwf	___awdiv@dividend,f
 10149  004D  0871               	movf	___awdiv@divisor+1,w
 10150  004E  3BF3               	subwfb	___awdiv@dividend+1,f
 10151  004F                     l2971:
 10152  004F  1477               	bsf	___awdiv@quotient,0
 10153  0050                     l2973:
 10154  0050  3001               	movlw	1
 10155  0051                     u3265:
 10156  0051  36F1               	lsrf	___awdiv@divisor+1,f
 10157  0052  0CF0               	rrf	___awdiv@divisor,f
 10158  0053  0B89               	decfsz	9,f
 10159  0054  2851               	goto	u3265
 10160  0055                     l2975:
 10161  0055  3001               	movlw	1
 10162  0056  02F5               	subwf	___awdiv@counter,f
 10163  0057  1D03               	btfss	3,2
 10164  0058  285A               	goto	u3271
 10165  0059  285B               	goto	u3270
 10166  005A                     u3271:
 10167  005A  283C               	goto	l2967
 10168  005B                     u3270:
 10169  005B                     l2977:
 10170  005B  0876               	movf	___awdiv@sign,w
 10171  005C  1903               	btfsc	3,2
 10172  005D  285F               	goto	u3281
 10173  005E  2860               	goto	u3280
 10174  005F                     u3281:
 10175  005F  2865               	goto	l2981
 10176  0060                     u3280:
 10177  0060                     l2979:
 10178  0060  09F7               	comf	___awdiv@quotient,f
 10179  0061  09F8               	comf	___awdiv@quotient+1,f
 10180  0062  0AF7               	incf	___awdiv@quotient,f
 10181  0063  1903               	skipnz
 10182  0064  0AF8               	incf	___awdiv@quotient+1,f
 10183  0065                     l2981:
 10184  0065  0878               	movf	___awdiv@quotient+1,w
 10185  0066  00F1               	movwf	?___awdiv+1
 10186  0067  0877               	movf	___awdiv@quotient,w
 10187  0068  00F0               	movwf	?___awdiv
 10188  0069                     l672:
 10189  0069  0008               	return
 10190  006A                     __end_of___awdiv:
 10191                           
 10192                           	psect	text50
 10193  0991                     __ptext50:	
 10194 ;; *************** function _calc_percentage *****************
 10195 ;; Defined at:
 10196 ;;		line 24 in file "drink_meter.c"
 10197 ;; Parameters:    Size  Location     Type
 10198 ;;  p               1    wreg     PTR struct .
 10199 ;;		 -> main@drink(6), 
 10200 ;; Auto vars:     Size  Location     Type
 10201 ;;  p               1   76[BANK0 ] PTR struct .
 10202 ;;		 -> main@drink(6), 
 10203 ;; Return value:  Size  Location     Type
 10204 ;;                  1    wreg      void 
 10205 ;; Registers used:
 10206 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 10207 ;; Tracked objects:
 10208 ;;		On entry : 0/0
 10209 ;;		On exit  : 0/0
 10210 ;;		Unchanged: 0/0
 10211 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 10212 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10213 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10214 ;;      Temps:          0       0       5       0       0       0       0       0       0       0       0       0       
      +0       0
 10215 ;;      Totals:         0       1       5       0       0       0       0       0       0       0       0       0       
      +0       0
 10216 ;;Total ram usage:        6 bytes
 10217 ;; Hardware stack levels used: 1
 10218 ;; Hardware stack levels required when called: 2
 10219 ;; This function calls:
 10220 ;;		___fldiv
 10221 ;;		___flmul
 10222 ;;		___fltol
 10223 ;;		___xxtofl
 10224 ;;		_get_scale_val
 10225 ;;		_scale_convert_gram
 10226 ;; This function is called by:
 10227 ;;		_main
 10228 ;;		_set_max_gram
 10229 ;; This function uses a non-reentrant model
 10230 ;;
 10231                           
 10232                           
 10233                           ;psect for function _calc_percentage
 10234  0991                     _calc_percentage:
 10235                           
 10236                           ;incstack = 0
 10237                           ; Regs used in _calc_percentage: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
 10238                           ;calc_percentage@p stored from wreg
 10239  0991  0020               	movlb	0	; select bank0
 10240  0992  00EC               	movwf	calc_percentage@p
 10241  0993                     l3803:
 10242                           
 10243                           ;drink_meter.c: 26:     p->loadcell->weight_dat = get_scale_val(p->loadcell, 16);
 10244  0993  3010               	movlw	16
 10245  0994  0021               	movlb	1	; select bank1
 10246  0995  00A0               	movwf	??_calc_percentage^(0+128)
 10247  0996  0820               	movf	??_calc_percentage^(0+128),w
 10248  0997  0020               	movlb	0	; select bank0
 10249  0998  00A0               	movwf	get_scale_val@scale_avg_count
 10250  0999  086C               	movf	calc_percentage@p,w
 10251  099A  0086               	movwf	6
 10252  099B  0187               	clrf	7
 10253  099C  0801               	movf	1,w
 10254  099D  318C  2445  3189   	fcall	_get_scale_val
 10255  09A0  0020               	movlb	0	; select bank0
 10256  09A1  086C               	movf	calc_percentage@p,w
 10257  09A2  0086               	movwf	6
 10258  09A3  0187               	clrf	7
 10259  09A4  0801               	movf	1,w
 10260  09A5  3E06               	addlw	6
 10261  09A6  0086               	movwf	6
 10262  09A7  0187               	clrf	7
 10263  09A8  0820               	movf	?_get_scale_val,w
 10264  09A9  3FC0               	movwi [0]fsr1
 10265  09AA  0821               	movf	?_get_scale_val+1,w
 10266  09AB  3FC1               	movwi [1]fsr1
 10267  09AC  0822               	movf	?_get_scale_val+2,w
 10268  09AD  3FC2               	movwi [2]fsr1
 10269  09AE  0823               	movf	?_get_scale_val+3,w
 10270  09AF  3FC3               	movwi [3]fsr1
 10271                           
 10272                           ;drink_meter.c: 27:     scale_convert_gram(p->loadcell);
 10273  09B0  086C               	movf	calc_percentage@p,w
 10274  09B1  0086               	movwf	6
 10275  09B2  0187               	clrf	7
 10276  09B3  0801               	movf	1,w
 10277  09B4  3188  2054  3189   	fcall	_scale_convert_gram
 10278  09B7                     l3805:
 10279                           
 10280                           ;drink_meter.c: 30:     if(p->loadcell->gram == 0){
 10281  09B7  0020               	movlb	0	; select bank0
 10282  09B8  086C               	movf	calc_percentage@p,w
 10283  09B9  0086               	movwf	6
 10284  09BA  0187               	clrf	7
 10285  09BB  0801               	movf	1,w
 10286  09BC  3E0A               	addlw	10
 10287  09BD  0086               	movwf	6
 10288  09BE  0187               	clrf	7
 10289  09BF  0016               	moviw fsr1++
 10290  09C0  0401               	iorwf	1,w
 10291  09C1  1D03               	btfss	3,2
 10292  09C2  29C4               	goto	u4561
 10293  09C3  29C5               	goto	u4560
 10294  09C4                     u4561:
 10295  09C4  29CB               	goto	l3809
 10296  09C5                     u4560:
 10297  09C5                     l3807:
 10298                           
 10299                           ;drink_meter.c: 31:         p->percentage = 0;
 10300  09C5  086C               	movf	calc_percentage@p,w
 10301  09C6  3E05               	addlw	5
 10302  09C7  0086               	movwf	6
 10303  09C8  0187               	clrf	7
 10304  09C9  0181               	clrf	1
 10305                           
 10306                           ;drink_meter.c: 32:     }else{
 10307  09CA  2A35               	goto	l363
 10308  09CB                     l3809:
 10309                           
 10310                           ;drink_meter.c: 34:         p->percentage = ((float)p->loadcell->gram / (float)p->max_gr
      +                          am) * 100;
 10311  09CB  086C               	movf	calc_percentage@p,w
 10312  09CC  0086               	movwf	6
 10313  09CD  0187               	clrf	7
 10314  09CE  0801               	movf	1,w
 10315  09CF  3E0A               	addlw	10
 10316  09D0  0086               	movwf	6
 10317  09D1  0187               	clrf	7
 10318  09D2  3F40               	moviw [0]fsr1
 10319  09D3  0021               	movlb	1	; select bank1
 10320  09D4  00A0               	movwf	??_calc_percentage^(0+128)
 10321  09D5  3F41               	moviw [1]fsr1
 10322  09D6  00A1               	movwf	(??_calc_percentage^(0+128)+1)
 10323  09D7  0820               	movf	??_calc_percentage^(0+128),w
 10324  09D8  00F0               	movwf	___xxtofl@val
 10325  09D9  0821               	movf	(??_calc_percentage+1)^(0+128),w
 10326  09DA  00F1               	movwf	___xxtofl@val+1
 10327  09DB  01F2               	clrf	___xxtofl@val+2
 10328  09DC  01F3               	clrf	___xxtofl@val+3
 10329  09DD  3000               	movlw	0
 10330  09DE  318A  22DF  3189   	fcall	___xxtofl
 10331  09E1  0873               	movf	?___xxtofl+3,w
 10332  09E2  0020               	movlb	0	; select bank0
 10333  09E3  00A7               	movwf	___fldiv@b+3
 10334  09E4  0872               	movf	?___xxtofl+2,w
 10335  09E5  00A6               	movwf	___fldiv@b+2
 10336  09E6  0871               	movf	?___xxtofl+1,w
 10337  09E7  00A5               	movwf	___fldiv@b+1
 10338  09E8  0870               	movf	?___xxtofl,w
 10339  09E9  00A4               	movwf	___fldiv@b
 10340  09EA  086C               	movf	calc_percentage@p,w
 10341  09EB  3E03               	addlw	3
 10342  09EC  0086               	movwf	6
 10343  09ED  0187               	clrf	7
 10344  09EE  3F40               	moviw [0]fsr1
 10345  09EF  0021               	movlb	1	; select bank1
 10346  09F0  00A2               	movwf	(??_calc_percentage+2)^(0+128)
 10347  09F1  3F41               	moviw [1]fsr1
 10348  09F2  00A3               	movwf	((??_calc_percentage+2)^(0+128)+1)
 10349  09F3  0822               	movf	(??_calc_percentage+2)^(0+128),w
 10350  09F4  00F0               	movwf	___xxtofl@val
 10351  09F5  0823               	movf	(??_calc_percentage+3)^(0+128),w
 10352  09F6  00F1               	movwf	___xxtofl@val+1
 10353  09F7  01F2               	clrf	___xxtofl@val+2
 10354  09F8  01F3               	clrf	___xxtofl@val+3
 10355  09F9  3000               	movlw	0
 10356  09FA  318A  22DF  3189   	fcall	___xxtofl
 10357  09FD  0873               	movf	?___xxtofl+3,w
 10358  09FE  0020               	movlb	0	; select bank0
 10359  09FF  00A3               	movwf	___fldiv@a+3
 10360  0A00  0872               	movf	?___xxtofl+2,w
 10361  0A01  00A2               	movwf	___fldiv@a+2
 10362  0A02  0871               	movf	?___xxtofl+1,w
 10363  0A03  00A1               	movwf	___fldiv@a+1
 10364  0A04  0870               	movf	?___xxtofl,w
 10365  0A05  00A0               	movwf	___fldiv@a
 10366  0A06  3181  21DA  3189   	fcall	___fldiv
 10367  0A09  0020               	movlb	0	; select bank0
 10368  0A0A  0823               	movf	?___fldiv+3,w
 10369  0A0B  00C1               	movwf	___flmul@a+3
 10370  0A0C  0822               	movf	?___fldiv+2,w
 10371  0A0D  00C0               	movwf	___flmul@a+2
 10372  0A0E  0821               	movf	?___fldiv+1,w
 10373  0A0F  00BF               	movwf	___flmul@a+1
 10374  0A10  0820               	movf	?___fldiv,w
 10375  0A11  00BE               	movwf	___flmul@a
 10376  0A12  3042               	movlw	66
 10377  0A13  00BD               	movwf	___flmul@b+3
 10378  0A14  30C8               	movlw	200
 10379  0A15  00BC               	movwf	___flmul@b+2
 10380  0A16  3000               	movlw	0
 10381  0A17  00BB               	movwf	___flmul@b+1
 10382  0A18  3000               	movlw	0
 10383  0A19  00BA               	movwf	___flmul@b
 10384  0A1A  3185  258A  3189   	fcall	___flmul
 10385  0A1D  0020               	movlb	0	; select bank0
 10386  0A1E  083D               	movf	?___flmul+3,w
 10387  0A1F  00D7               	movwf	___fltol@f1+3
 10388  0A20  083C               	movf	?___flmul+2,w
 10389  0A21  00D6               	movwf	___fltol@f1+2
 10390  0A22  083B               	movf	?___flmul+1,w
 10391  0A23  00D5               	movwf	___fltol@f1+1
 10392  0A24  083A               	movf	?___flmul,w
 10393  0A25  00D4               	movwf	___fltol@f1
 10394  0A26  3196  260D  3189   	fcall	___fltol
 10395  0A29  0020               	movlb	0	; select bank0
 10396  0A2A  0854               	movf	?___fltol,w
 10397  0A2B  0021               	movlb	1	; select bank1
 10398  0A2C  00A4               	movwf	(??_calc_percentage+4)^(0+128)
 10399  0A2D  0020               	movlb	0	; select bank0
 10400  0A2E  086C               	movf	calc_percentage@p,w
 10401  0A2F  3E05               	addlw	5
 10402  0A30  0086               	movwf	6
 10403  0A31  0187               	clrf	7
 10404  0A32  0021               	movlb	1	; select bank1
 10405  0A33  0824               	movf	(??_calc_percentage+4)^(0+128),w
 10406  0A34  0081               	movwf	1
 10407  0A35                     l363:
 10408  0A35  0008               	return
 10409  0A36                     __end_of_calc_percentage:
 10410                           
 10411                           	psect	text51
 10412  0854                     __ptext51:	
 10413 ;; *************** function _scale_convert_gram *****************
 10414 ;; Defined at:
 10415 ;;		line 75 in file "loadcell.c"
 10416 ;; Parameters:    Size  Location     Type
 10417 ;;  p               1    wreg     PTR struct .
 10418 ;;		 -> NULL(0), main@loadcell(12), 
 10419 ;; Auto vars:     Size  Location     Type
 10420 ;;  p               1   75[BANK0 ] PTR struct .
 10421 ;;		 -> NULL(0), main@loadcell(12), 
 10422 ;;  temp            4   71[BANK0 ] float 
 10423 ;; Return value:  Size  Location     Type
 10424 ;;                  1    wreg      void 
 10425 ;; Registers used:
 10426 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 10427 ;; Tracked objects:
 10428 ;;		On entry : 0/0
 10429 ;;		On exit  : 0/0
 10430 ;;		Unchanged: 0/0
 10431 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 10432 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10433 ;;      Locals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10434 ;;      Temps:          0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10435 ;;      Totals:         0      13       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10436 ;;Total ram usage:       13 bytes
 10437 ;; Hardware stack levels used: 1
 10438 ;; Hardware stack levels required when called: 1
 10439 ;; This function calls:
 10440 ;;		___fldiv
 10441 ;;		___fltol
 10442 ;;		___xxtofl
 10443 ;; This function is called by:
 10444 ;;		_calc_percentage
 10445 ;; This function uses a non-reentrant model
 10446 ;;
 10447                           
 10448                           
 10449                           ;psect for function _scale_convert_gram
 10450  0854                     _scale_convert_gram:
 10451                           
 10452                           ;incstack = 0
 10453                           ; Regs used in _scale_convert_gram: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
 10454                           ;scale_convert_gram@p stored from wreg
 10455  0854  0020               	movlb	0	; select bank0
 10456  0855  00EB               	movwf	scale_convert_gram@p
 10457  0856                     l3563:
 10458                           
 10459                           ;loadcell.c: 77:     if(p->weight_dat < p->weight_zero){
 10460  0856  086B               	movf	scale_convert_gram@p,w
 10461  0857  3E02               	addlw	2
 10462  0858  0086               	movwf	6
 10463  0859  0187               	clrf	7
 10464  085A  3F40               	moviw [0]fsr1
 10465  085B  00DF               	movwf	??_scale_convert_gram
 10466  085C  3F41               	moviw [1]fsr1
 10467  085D  00E0               	movwf	??_scale_convert_gram+1
 10468  085E  3F42               	moviw [2]fsr1
 10469  085F  00E1               	movwf	??_scale_convert_gram+2
 10470  0860  3F43               	moviw [3]fsr1
 10471  0861  00E2               	movwf	??_scale_convert_gram+3
 10472  0862  086B               	movf	scale_convert_gram@p,w
 10473  0863  3E06               	addlw	6
 10474  0864  0086               	movwf	6
 10475  0865  0187               	clrf	7
 10476  0866  3F40               	moviw [0]fsr1
 10477  0867  00E3               	movwf	??_scale_convert_gram+4
 10478  0868  3F41               	moviw [1]fsr1
 10479  0869  00E4               	movwf	??_scale_convert_gram+5
 10480  086A  3F42               	moviw [2]fsr1
 10481  086B  00E5               	movwf	??_scale_convert_gram+6
 10482  086C  3F43               	moviw [3]fsr1
 10483  086D  00E6               	movwf	??_scale_convert_gram+7
 10484  086E  0862               	movf	??_scale_convert_gram+3,w
 10485  086F  0266               	subwf	??_scale_convert_gram+7,w
 10486  0870  1D03               	skipz
 10487  0871  287C               	goto	u4275
 10488  0872  0861               	movf	??_scale_convert_gram+2,w
 10489  0873  0265               	subwf	??_scale_convert_gram+6,w
 10490  0874  1D03               	skipz
 10491  0875  287C               	goto	u4275
 10492  0876  0860               	movf	??_scale_convert_gram+1,w
 10493  0877  0264               	subwf	??_scale_convert_gram+5,w
 10494  0878  1D03               	skipz
 10495  0879  287C               	goto	u4275
 10496  087A  085F               	movf	??_scale_convert_gram,w
 10497  087B  0263               	subwf	??_scale_convert_gram+4,w
 10498  087C                     u4275:
 10499  087C  1803               	skipnc
 10500  087D  287F               	goto	u4271
 10501  087E  2880               	goto	u4270
 10502  087F                     u4271:
 10503  087F  2888               	goto	l3569
 10504  0880                     u4270:
 10505  0880                     l3565:
 10506                           
 10507                           ;loadcell.c: 78:         p->gram = 0;
 10508  0880  086B               	movf	scale_convert_gram@p,w
 10509  0881  3E0A               	addlw	10
 10510  0882  0086               	movwf	6
 10511  0883  0187               	clrf	7
 10512  0884  3000               	movlw	0
 10513  0885  3FC0               	movwi [0]fsr1
 10514  0886  3FC1               	movwi [1]fsr1
 10515  0887  28ED               	goto	l280
 10516  0888                     l3569:
 10517                           
 10518                           ;loadcell.c: 82:     float temp = p->weight_dat - p->weight_zero;
 10519  0888  086B               	movf	scale_convert_gram@p,w
 10520  0889  3E02               	addlw	2
 10521  088A  0086               	movwf	6
 10522  088B  0187               	clrf	7
 10523  088C  3F40               	moviw [0]fsr1
 10524  088D  00DF               	movwf	??_scale_convert_gram
 10525  088E  3F41               	moviw [1]fsr1
 10526  088F  00E0               	movwf	??_scale_convert_gram+1
 10527  0890  3F42               	moviw [2]fsr1
 10528  0891  00E1               	movwf	??_scale_convert_gram+2
 10529  0892  3F43               	moviw [3]fsr1
 10530  0893  00E2               	movwf	??_scale_convert_gram+3
 10531  0894  086B               	movf	scale_convert_gram@p,w
 10532  0895  3E06               	addlw	6
 10533  0896  0086               	movwf	6
 10534  0897  0187               	clrf	7
 10535  0898  3F40               	moviw [0]fsr1
 10536  0899  00E3               	movwf	??_scale_convert_gram+4
 10537  089A  3F41               	moviw [1]fsr1
 10538  089B  00E4               	movwf	??_scale_convert_gram+5
 10539  089C  3F42               	moviw [2]fsr1
 10540  089D  00E5               	movwf	??_scale_convert_gram+6
 10541  089E  3F43               	moviw [3]fsr1
 10542  089F  00E6               	movwf	??_scale_convert_gram+7
 10543  08A0  085F               	movf	??_scale_convert_gram,w
 10544  08A1  02E3               	subwf	??_scale_convert_gram+4,f
 10545  08A2  0860               	movf	??_scale_convert_gram+1,w
 10546  08A3  3BE4               	subwfb	??_scale_convert_gram+5,f
 10547  08A4  0861               	movf	??_scale_convert_gram+2,w
 10548  08A5  3BE5               	subwfb	??_scale_convert_gram+6,f
 10549  08A6  0862               	movf	??_scale_convert_gram+3,w
 10550  08A7  3BE6               	subwfb	??_scale_convert_gram+7,f
 10551  08A8  0866               	movf	??_scale_convert_gram+7,w
 10552  08A9  00F3               	movwf	___xxtofl@val+3
 10553  08AA  0865               	movf	??_scale_convert_gram+6,w
 10554  08AB  00F2               	movwf	___xxtofl@val+2
 10555  08AC  0864               	movf	??_scale_convert_gram+5,w
 10556  08AD  00F1               	movwf	___xxtofl@val+1
 10557  08AE  0863               	movf	??_scale_convert_gram+4,w
 10558  08AF  00F0               	movwf	___xxtofl@val
 10559  08B0  3000               	movlw	0
 10560  08B1  318A  22DF  3188   	fcall	___xxtofl
 10561  08B4  0873               	movf	?___xxtofl+3,w
 10562  08B5  0020               	movlb	0	; select bank0
 10563  08B6  00EA               	movwf	scale_convert_gram@temp+3
 10564  08B7  0872               	movf	?___xxtofl+2,w
 10565  08B8  00E9               	movwf	scale_convert_gram@temp+2
 10566  08B9  0871               	movf	?___xxtofl+1,w
 10567  08BA  00E8               	movwf	scale_convert_gram@temp+1
 10568  08BB  0870               	movf	?___xxtofl,w
 10569  08BC  00E7               	movwf	scale_convert_gram@temp
 10570  08BD                     l3571:
 10571                           
 10572                           ;loadcell.c: 83:     temp = temp / 493;
 10573  08BD  3043               	movlw	67
 10574  08BE  00A3               	movwf	___fldiv@a+3
 10575  08BF  30F6               	movlw	246
 10576  08C0  00A2               	movwf	___fldiv@a+2
 10577  08C1  3080               	movlw	128
 10578  08C2  00A1               	movwf	___fldiv@a+1
 10579  08C3  3000               	movlw	0
 10580  08C4  00A0               	movwf	___fldiv@a
 10581  08C5  086A               	movf	scale_convert_gram@temp+3,w
 10582  08C6  00A7               	movwf	___fldiv@b+3
 10583  08C7  0869               	movf	scale_convert_gram@temp+2,w
 10584  08C8  00A6               	movwf	___fldiv@b+2
 10585  08C9  0868               	movf	scale_convert_gram@temp+1,w
 10586  08CA  00A5               	movwf	___fldiv@b+1
 10587  08CB  0867               	movf	scale_convert_gram@temp,w
 10588  08CC  00A4               	movwf	___fldiv@b
 10589  08CD  3181  21DA  3188   	fcall	___fldiv
 10590  08D0  0020               	movlb	0	; select bank0
 10591  08D1  0823               	movf	?___fldiv+3,w
 10592  08D2  00EA               	movwf	scale_convert_gram@temp+3
 10593  08D3  0822               	movf	?___fldiv+2,w
 10594  08D4  00E9               	movwf	scale_convert_gram@temp+2
 10595  08D5  0821               	movf	?___fldiv+1,w
 10596  08D6  00E8               	movwf	scale_convert_gram@temp+1
 10597  08D7  0820               	movf	?___fldiv,w
 10598  08D8  00E7               	movwf	scale_convert_gram@temp
 10599  08D9                     l3573:
 10600                           
 10601                           ;loadcell.c: 84:     p->gram = (uint16_t)temp;
 10602  08D9  086A               	movf	scale_convert_gram@temp+3,w
 10603  08DA  00D7               	movwf	___fltol@f1+3
 10604  08DB  0869               	movf	scale_convert_gram@temp+2,w
 10605  08DC  00D6               	movwf	___fltol@f1+2
 10606  08DD  0868               	movf	scale_convert_gram@temp+1,w
 10607  08DE  00D5               	movwf	___fltol@f1+1
 10608  08DF  0867               	movf	scale_convert_gram@temp,w
 10609  08E0  00D4               	movwf	___fltol@f1
 10610  08E1  3196  260D  3188   	fcall	___fltol
 10611  08E4  0020               	movlb	0	; select bank0
 10612  08E5  086B               	movf	scale_convert_gram@p,w
 10613  08E6  3E0A               	addlw	10
 10614  08E7  0086               	movwf	6
 10615  08E8  0187               	clrf	7
 10616  08E9  0854               	movf	?___fltol,w
 10617  08EA  3FC0               	movwi [0]fsr1
 10618  08EB  0855               	movf	?___fltol+1,w
 10619  08EC  3FC1               	movwi [1]fsr1
 10620  08ED                     l280:
 10621  08ED  0008               	return
 10622  08EE                     __end_of_scale_convert_gram:
 10623                           
 10624                           	psect	text52
 10625  0ADF                     __ptext52:	
 10626 ;; *************** function ___xxtofl *****************
 10627 ;; Defined at:
 10628 ;;		line 10 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\xxtofl.c"
 10629 ;; Parameters:    Size  Location     Type
 10630 ;;  sign            1    wreg     unsigned char 
 10631 ;;  val             4    0[COMMON] long 
 10632 ;; Auto vars:     Size  Location     Type
 10633 ;;  sign            1    8[COMMON] unsigned char 
 10634 ;;  arg             4   10[COMMON] unsigned long 
 10635 ;;  exp             1    9[COMMON] unsigned char 
 10636 ;; Return value:  Size  Location     Type
 10637 ;;                  4    0[COMMON] unsigned char 
 10638 ;; Registers used:
 10639 ;;		wreg, status,2, status,0
 10640 ;; Tracked objects:
 10641 ;;		On entry : 0/0
 10642 ;;		On exit  : 0/0
 10643 ;;		Unchanged: 0/0
 10644 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 10645 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10646 ;;      Locals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10647 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10648 ;;      Totals:        14       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10649 ;;Total ram usage:       14 bytes
 10650 ;; Hardware stack levels used: 1
 10651 ;; This function calls:
 10652 ;;		Nothing
 10653 ;; This function is called by:
 10654 ;;		_scale_convert_gram
 10655 ;;		_calc_percentage
 10656 ;; This function uses a non-reentrant model
 10657 ;;
 10658                           
 10659                           
 10660                           ;psect for function ___xxtofl
 10661  0ADF                     ___xxtofl:
 10662                           
 10663                           ;incstack = 0
 10664                           ; Regs used in ___xxtofl: [wreg+status,2+status,0]
 10665                           ;___xxtofl@sign stored from wreg
 10666  0ADF  00F8               	movwf	___xxtofl@sign
 10667  0AE0                     l3413:
 10668  0AE0  0878               	movf	___xxtofl@sign,w
 10669  0AE1  1903               	btfsc	3,2
 10670  0AE2  2AE4               	goto	u4061
 10671  0AE3  2AE5               	goto	u4060
 10672  0AE4                     u4061:
 10673  0AE4  2AF9               	goto	l3419
 10674  0AE5                     u4060:
 10675  0AE5                     l3415:
 10676  0AE5  1FF3               	btfss	___xxtofl@val+3,7
 10677  0AE6  2AE8               	goto	u4071
 10678  0AE7  2AE9               	goto	u4070
 10679  0AE8                     u4071:
 10680  0AE8  2AF9               	goto	l3419
 10681  0AE9                     u4070:
 10682  0AE9                     l3417:
 10683  0AE9  0970               	comf	___xxtofl@val,w
 10684  0AEA  00FA               	movwf	___xxtofl@arg
 10685  0AEB  0971               	comf	___xxtofl@val+1,w
 10686  0AEC  00FB               	movwf	___xxtofl@arg+1
 10687  0AED  0972               	comf	___xxtofl@val+2,w
 10688  0AEE  00FC               	movwf	___xxtofl@arg+2
 10689  0AEF  0973               	comf	___xxtofl@val+3,w
 10690  0AF0  00FD               	movwf	___xxtofl@arg+3
 10691  0AF1  0AFA               	incf	___xxtofl@arg,f
 10692  0AF2  1903               	skipnz
 10693  0AF3  0AFB               	incf	___xxtofl@arg+1,f
 10694  0AF4  1903               	skipnz
 10695  0AF5  0AFC               	incf	___xxtofl@arg+2,f
 10696  0AF6  1903               	skipnz
 10697  0AF7  0AFD               	incf	___xxtofl@arg+3,f
 10698  0AF8  2B01               	goto	l960
 10699  0AF9                     l3419:
 10700  0AF9  0873               	movf	___xxtofl@val+3,w
 10701  0AFA  00FD               	movwf	___xxtofl@arg+3
 10702  0AFB  0872               	movf	___xxtofl@val+2,w
 10703  0AFC  00FC               	movwf	___xxtofl@arg+2
 10704  0AFD  0871               	movf	___xxtofl@val+1,w
 10705  0AFE  00FB               	movwf	___xxtofl@arg+1
 10706  0AFF  0870               	movf	___xxtofl@val,w
 10707  0B00  00FA               	movwf	___xxtofl@arg
 10708  0B01                     l960:
 10709  0B01  0873               	movf	___xxtofl@val+3,w
 10710  0B02  0472               	iorwf	___xxtofl@val+2,w
 10711  0B03  0471               	iorwf	___xxtofl@val+1,w
 10712  0B04  0470               	iorwf	___xxtofl@val,w
 10713  0B05  1D03               	skipz
 10714  0B06  2B08               	goto	u4081
 10715  0B07  2B09               	goto	u4080
 10716  0B08                     u4081:
 10717  0B08  2B12               	goto	l3425
 10718  0B09                     u4080:
 10719  0B09                     l3421:
 10720  0B09  3000               	movlw	0
 10721  0B0A  00F3               	movwf	?___xxtofl+3
 10722  0B0B  3000               	movlw	0
 10723  0B0C  00F2               	movwf	?___xxtofl+2
 10724  0B0D  3000               	movlw	0
 10725  0B0E  00F1               	movwf	?___xxtofl+1
 10726  0B0F  3000               	movlw	0
 10727  0B10  00F0               	movwf	?___xxtofl
 10728  0B11  2B8A               	goto	l962
 10729  0B12                     l3425:
 10730  0B12  3096               	movlw	150
 10731  0B13  00F4               	movwf	??___xxtofl
 10732  0B14  0874               	movf	??___xxtofl,w
 10733  0B15  00F9               	movwf	___xxtofl@exp
 10734  0B16  2B22               	goto	l3429
 10735  0B17                     l3427:
 10736  0B17  3001               	movlw	1
 10737  0B18  00F4               	movwf	??___xxtofl
 10738  0B19  0874               	movf	??___xxtofl,w
 10739  0B1A  07F9               	addwf	___xxtofl@exp,f
 10740  0B1B  3001               	movlw	1
 10741  0B1C                     u4095:
 10742  0B1C  36FD               	lsrf	___xxtofl@arg+3,f
 10743  0B1D  0CFC               	rrf	___xxtofl@arg+2,f
 10744  0B1E  0CFB               	rrf	___xxtofl@arg+1,f
 10745  0B1F  0CFA               	rrf	___xxtofl@arg,f
 10746  0B20  0B89               	decfsz	9,f
 10747  0B21  2B1C               	goto	u4095
 10748  0B22                     l3429:
 10749  0B22  30FE               	movlw	254
 10750  0B23  057D               	andwf	___xxtofl@arg+3,w
 10751  0B24  1D03               	btfss	3,2
 10752  0B25  2B27               	goto	u4101
 10753  0B26  2B28               	goto	u4100
 10754  0B27                     u4101:
 10755  0B27  2B17               	goto	l3427
 10756  0B28                     u4100:
 10757  0B28  2B3C               	goto	l966
 10758  0B29                     l3431:
 10759  0B29  3001               	movlw	1
 10760  0B2A  00F4               	movwf	??___xxtofl
 10761  0B2B  0874               	movf	??___xxtofl,w
 10762  0B2C  07F9               	addwf	___xxtofl@exp,f
 10763  0B2D                     l3433:
 10764  0B2D  3001               	movlw	1
 10765  0B2E  07FA               	addwf	___xxtofl@arg,f
 10766  0B2F  3000               	movlw	0
 10767  0B30  3DFB               	addwfc	___xxtofl@arg+1,f
 10768  0B31  3000               	movlw	0
 10769  0B32  3DFC               	addwfc	___xxtofl@arg+2,f
 10770  0B33  3000               	movlw	0
 10771  0B34  3DFD               	addwfc	___xxtofl@arg+3,f
 10772  0B35                     l3435:
 10773  0B35  3001               	movlw	1
 10774  0B36                     u4115:
 10775  0B36  36FD               	lsrf	___xxtofl@arg+3,f
 10776  0B37  0CFC               	rrf	___xxtofl@arg+2,f
 10777  0B38  0CFB               	rrf	___xxtofl@arg+1,f
 10778  0B39  0CFA               	rrf	___xxtofl@arg,f
 10779  0B3A  0B89               	decfsz	9,f
 10780  0B3B  2B36               	goto	u4115
 10781  0B3C                     l966:
 10782  0B3C  30FF               	movlw	255
 10783  0B3D  057D               	andwf	___xxtofl@arg+3,w
 10784  0B3E  1D03               	btfss	3,2
 10785  0B3F  2B41               	goto	u4121
 10786  0B40  2B42               	goto	u4120
 10787  0B41                     u4121:
 10788  0B41  2B29               	goto	l3431
 10789  0B42                     u4120:
 10790  0B42  2B4C               	goto	l3439
 10791  0B43                     l3437:
 10792  0B43  3001               	movlw	1
 10793  0B44  02F9               	subwf	___xxtofl@exp,f
 10794  0B45  3001               	movlw	1
 10795  0B46                     u4135:
 10796  0B46  35FA               	lslf	___xxtofl@arg,f
 10797  0B47  0DFB               	rlf	___xxtofl@arg+1,f
 10798  0B48  0DFC               	rlf	___xxtofl@arg+2,f
 10799  0B49  0DFD               	rlf	___xxtofl@arg+3,f
 10800  0B4A  0B89               	decfsz	9,f
 10801  0B4B  2B46               	goto	u4135
 10802  0B4C                     l3439:
 10803  0B4C  1BFC               	btfsc	___xxtofl@arg+2,7
 10804  0B4D  2B4F               	goto	u4141
 10805  0B4E  2B50               	goto	u4140
 10806  0B4F                     u4141:
 10807  0B4F  2B56               	goto	l973
 10808  0B50                     u4140:
 10809  0B50                     l3441:
 10810  0B50  3002               	movlw	2
 10811  0B51  0279               	subwf	___xxtofl@exp,w
 10812  0B52  1803               	skipnc
 10813  0B53  2B55               	goto	u4151
 10814  0B54  2B56               	goto	u4150
 10815  0B55                     u4151:
 10816  0B55  2B43               	goto	l3437
 10817  0B56                     u4150:
 10818  0B56                     l973:
 10819  0B56  1879               	btfsc	___xxtofl@exp,0
 10820  0B57  2B59               	goto	u4161
 10821  0B58  2B5A               	goto	u4160
 10822  0B59                     u4161:
 10823  0B59  2B62               	goto	l974
 10824  0B5A                     u4160:
 10825  0B5A                     l3443:
 10826  0B5A  30FF               	movlw	255
 10827  0B5B  05FA               	andwf	___xxtofl@arg,f
 10828  0B5C  30FF               	movlw	255
 10829  0B5D  05FB               	andwf	___xxtofl@arg+1,f
 10830  0B5E  307F               	movlw	127
 10831  0B5F  05FC               	andwf	___xxtofl@arg+2,f
 10832  0B60  30FF               	movlw	255
 10833  0B61  05FD               	andwf	___xxtofl@arg+3,f
 10834  0B62                     l974:
 10835  0B62  1003               	clrc
 10836  0B63  0CF9               	rrf	___xxtofl@exp,f
 10837  0B64                     l3445:
 10838  0B64  0879               	movf	___xxtofl@exp,w
 10839  0B65  00F4               	movwf	??___xxtofl
 10840  0B66  01F5               	clrf	??___xxtofl+1
 10841  0B67  01F6               	clrf	??___xxtofl+2
 10842  0B68  01F7               	clrf	??___xxtofl+3
 10843  0B69  3018               	movlw	24
 10844  0B6A                     u4175:
 10845  0B6A  35F4               	lslf	??___xxtofl,f
 10846  0B6B  0DF5               	rlf	??___xxtofl+1,f
 10847  0B6C  0DF6               	rlf	??___xxtofl+2,f
 10848  0B6D  0DF7               	rlf	??___xxtofl+3,f
 10849  0B6E                     u4170:
 10850  0B6E  0B89               	decfsz	9,f
 10851  0B6F  2B6A               	goto	u4175
 10852  0B70  0874               	movf	??___xxtofl,w
 10853  0B71  04FA               	iorwf	___xxtofl@arg,f
 10854  0B72  0875               	movf	??___xxtofl+1,w
 10855  0B73  04FB               	iorwf	___xxtofl@arg+1,f
 10856  0B74  0876               	movf	??___xxtofl+2,w
 10857  0B75  04FC               	iorwf	___xxtofl@arg+2,f
 10858  0B76  0877               	movf	??___xxtofl+3,w
 10859  0B77  04FD               	iorwf	___xxtofl@arg+3,f
 10860  0B78                     l3447:
 10861  0B78  0878               	movf	___xxtofl@sign,w
 10862  0B79  1903               	btfsc	3,2
 10863  0B7A  2B7C               	goto	u4181
 10864  0B7B  2B7D               	goto	u4180
 10865  0B7C                     u4181:
 10866  0B7C  2B82               	goto	l3453
 10867  0B7D                     u4180:
 10868  0B7D                     l3449:
 10869  0B7D  1FF3               	btfss	___xxtofl@val+3,7
 10870  0B7E  2B80               	goto	u4191
 10871  0B7F  2B81               	goto	u4190
 10872  0B80                     u4191:
 10873  0B80  2B82               	goto	l3453
 10874  0B81                     u4190:
 10875  0B81                     l3451:
 10876  0B81  17FD               	bsf	___xxtofl@arg+3,7
 10877  0B82                     l3453:
 10878  0B82  087D               	movf	___xxtofl@arg+3,w
 10879  0B83  00F3               	movwf	?___xxtofl+3
 10880  0B84  087C               	movf	___xxtofl@arg+2,w
 10881  0B85  00F2               	movwf	?___xxtofl+2
 10882  0B86  087B               	movf	___xxtofl@arg+1,w
 10883  0B87  00F1               	movwf	?___xxtofl+1
 10884  0B88  087A               	movf	___xxtofl@arg,w
 10885  0B89  00F0               	movwf	?___xxtofl
 10886  0B8A                     l962:
 10887  0B8A  0008               	return
 10888  0B8B                     __end_of___xxtofl:
 10889                           
 10890                           	psect	text53
 10891  160D                     __ptext53:	
 10892 ;; *************** function ___fltol *****************
 10893 ;; Defined at:
 10894 ;;		line 43 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\fltol.c"
 10895 ;; Parameters:    Size  Location     Type
 10896 ;;  f1              4   52[BANK0 ] unsigned char 
 10897 ;; Auto vars:     Size  Location     Type
 10898 ;;  exp1            1   62[BANK0 ] unsigned char 
 10899 ;;  sign1           1   61[BANK0 ] unsigned char 
 10900 ;; Return value:  Size  Location     Type
 10901 ;;                  4   52[BANK0 ] long 
 10902 ;; Registers used:
 10903 ;;		wreg, status,2, status,0
 10904 ;; Tracked objects:
 10905 ;;		On entry : 0/0
 10906 ;;		On exit  : 0/0
 10907 ;;		Unchanged: 0/0
 10908 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 10909 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10910 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10911 ;;      Temps:          0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10912 ;;      Totals:         0      11       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10913 ;;Total ram usage:       11 bytes
 10914 ;; Hardware stack levels used: 1
 10915 ;; This function calls:
 10916 ;;		Nothing
 10917 ;; This function is called by:
 10918 ;;		_scale_convert_gram
 10919 ;;		_calc_percentage
 10920 ;; This function uses a non-reentrant model
 10921 ;;
 10922                           
 10923                           
 10924                           ;psect for function ___fltol
 10925  160D                     ___fltol:
 10926  160D                     l3223:	
 10927                           ;incstack = 0
 10928                           ; Regs used in ___fltol: [wreg+status,2+status,0]
 10929                           
 10930  160D  1003               	clrc
 10931  160E  0020               	movlb	0	; select bank0
 10932  160F  0D56               	rlf	___fltol@f1+2,w
 10933  1610  0D57               	rlf	___fltol@f1+3,w
 10934  1611  00D8               	movwf	??___fltol
 10935  1612  0858               	movf	??___fltol,w
 10936  1613  00DE               	movwf	___fltol@exp1
 10937  1614  085E               	movf	___fltol@exp1,w
 10938  1615  1D03               	btfss	3,2
 10939  1616  2E18               	goto	u3641
 10940  1617  2E19               	goto	u3640
 10941  1618                     u3641:
 10942  1618  2E22               	goto	l3229
 10943  1619                     u3640:
 10944  1619                     l3225:
 10945  1619  3000               	movlw	0
 10946  161A  00D7               	movwf	?___fltol+3
 10947  161B  3000               	movlw	0
 10948  161C  00D6               	movwf	?___fltol+2
 10949  161D  3000               	movlw	0
 10950  161E  00D5               	movwf	?___fltol+1
 10951  161F  3000               	movlw	0
 10952  1620  00D4               	movwf	?___fltol
 10953  1621  2E81               	goto	l713
 10954  1622                     l3229:
 10955  1622  0854               	movf	___fltol@f1,w
 10956  1623  00D8               	movwf	??___fltol
 10957  1624  0855               	movf	___fltol@f1+1,w
 10958  1625  00D9               	movwf	??___fltol+1
 10959  1626  0856               	movf	___fltol@f1+2,w
 10960  1627  00DA               	movwf	??___fltol+2
 10961  1628  0857               	movf	___fltol@f1+3,w
 10962  1629  00DB               	movwf	??___fltol+3
 10963  162A  301F               	movlw	31
 10964  162B                     u3655:
 10965  162B  36DB               	lsrf	??___fltol+3,f
 10966  162C  0CDA               	rrf	??___fltol+2,f
 10967  162D  0CD9               	rrf	??___fltol+1,f
 10968  162E  0CD8               	rrf	??___fltol,f
 10969  162F                     u3650:
 10970  162F  0B89               	decfsz	9,f
 10971  1630  2E2B               	goto	u3655
 10972  1631  0858               	movf	??___fltol,w
 10973  1632  00DC               	movwf	??___fltol+4
 10974  1633  085C               	movf	??___fltol+4,w
 10975  1634  00DD               	movwf	___fltol@sign1
 10976  1635                     l3231:
 10977  1635  17D6               	bsf	___fltol@f1+2,7
 10978  1636                     l3233:
 10979  1636  30FF               	movlw	255
 10980  1637  05D4               	andwf	___fltol@f1,f
 10981  1638  30FF               	movlw	255
 10982  1639  05D5               	andwf	___fltol@f1+1,f
 10983  163A  30FF               	movlw	255
 10984  163B  05D6               	andwf	___fltol@f1+2,f
 10985  163C  3000               	movlw	0
 10986  163D  05D7               	andwf	___fltol@f1+3,f
 10987  163E                     l3235:
 10988  163E  3096               	movlw	150
 10989  163F  02DE               	subwf	___fltol@exp1,f
 10990  1640                     l3237:
 10991  1640  1FDE               	btfss	___fltol@exp1,7
 10992  1641  2E43               	goto	u3661
 10993  1642  2E44               	goto	u3660
 10994  1643                     u3661:
 10995  1643  2E5C               	goto	l3247
 10996  1644                     u3660:
 10997  1644                     l3239:
 10998  1644  085E               	movf	___fltol@exp1,w
 10999  1645  3A80               	xorlw	128
 11000  1646  3E97               	addlw	151
 11001  1647  1803               	skipnc
 11002  1648  2E4A               	goto	u3671
 11003  1649  2E4B               	goto	u3670
 11004  164A                     u3671:
 11005  164A  2E4C               	goto	l3245
 11006  164B                     u3670:
 11007  164B  2E19               	goto	l3225
 11008  164C                     l3245:
 11009  164C  3001               	movlw	1
 11010  164D                     u3685:
 11011  164D  36D7               	lsrf	___fltol@f1+3,f
 11012  164E  0CD6               	rrf	___fltol@f1+2,f
 11013  164F  0CD5               	rrf	___fltol@f1+1,f
 11014  1650  0CD4               	rrf	___fltol@f1,f
 11015  1651  0B89               	decfsz	9,f
 11016  1652  2E4D               	goto	u3685
 11017  1653  3001               	movlw	1
 11018  1654  00D8               	movwf	??___fltol
 11019  1655  0858               	movf	??___fltol,w
 11020  1656  07DE               	addwf	___fltol@exp1,f
 11021  1657  1D03               	btfss	3,2
 11022  1658  2E5A               	goto	u3691
 11023  1659  2E5B               	goto	u3690
 11024  165A                     u3691:
 11025  165A  2E4C               	goto	l3245
 11026  165B                     u3690:
 11027  165B  2E71               	goto	l3255
 11028  165C                     l3247:
 11029  165C  3020               	movlw	32
 11030  165D  025E               	subwf	___fltol@exp1,w
 11031  165E  1C03               	skipc
 11032  165F  2E61               	goto	u3701
 11033  1660  2E62               	goto	u3700
 11034  1661                     u3701:
 11035  1661  2E6C               	goto	l720
 11036  1662                     u3700:
 11037  1662  2E19               	goto	l3225
 11038  1663                     l3253:
 11039  1663  3001               	movlw	1
 11040  1664                     u3715:
 11041  1664  35D4               	lslf	___fltol@f1,f
 11042  1665  0DD5               	rlf	___fltol@f1+1,f
 11043  1666  0DD6               	rlf	___fltol@f1+2,f
 11044  1667  0DD7               	rlf	___fltol@f1+3,f
 11045  1668  0B89               	decfsz	9,f
 11046  1669  2E64               	goto	u3715
 11047  166A  3001               	movlw	1
 11048  166B  02DE               	subwf	___fltol@exp1,f
 11049  166C                     l720:
 11050  166C  085E               	movf	___fltol@exp1,w
 11051  166D  1D03               	btfss	3,2
 11052  166E  2E70               	goto	u3721
 11053  166F  2E71               	goto	u3720
 11054  1670                     u3721:
 11055  1670  2E63               	goto	l3253
 11056  1671                     u3720:
 11057  1671                     l3255:
 11058  1671  085D               	movf	___fltol@sign1,w
 11059  1672  1903               	btfsc	3,2
 11060  1673  2E75               	goto	u3731
 11061  1674  2E76               	goto	u3730
 11062  1675                     u3731:
 11063  1675  2E81               	goto	l723
 11064  1676                     u3730:
 11065  1676                     l3257:
 11066  1676  09D4               	comf	___fltol@f1,f
 11067  1677  09D5               	comf	___fltol@f1+1,f
 11068  1678  09D6               	comf	___fltol@f1+2,f
 11069  1679  09D7               	comf	___fltol@f1+3,f
 11070  167A  0AD4               	incf	___fltol@f1,f
 11071  167B  1903               	skipnz
 11072  167C  0AD5               	incf	___fltol@f1+1,f
 11073  167D  1903               	skipnz
 11074  167E  0AD6               	incf	___fltol@f1+2,f
 11075  167F  1903               	skipnz
 11076  1680  0AD7               	incf	___fltol@f1+3,f
 11077  1681                     l723:
 11078  1681                     l713:
 11079  1681  0008               	return
 11080  1682                     __end_of___fltol:
 11081                           
 11082                           	psect	text54
 11083  01DA                     __ptext54:	
 11084 ;; *************** function ___fldiv *****************
 11085 ;; Defined at:
 11086 ;;		line 8 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\sprcdiv.c"
 11087 ;; Parameters:    Size  Location     Type
 11088 ;;  a               4    0[BANK0 ] long 
 11089 ;;  b               4    4[BANK0 ] long 
 11090 ;; Auto vars:     Size  Location     Type
 11091 ;;  grs             4   20[BANK0 ] unsigned long 
 11092 ;;  rem             4   13[BANK0 ] unsigned long 
 11093 ;;  new_exp         2   18[BANK0 ] int 
 11094 ;;  aexp            1   25[BANK0 ] unsigned char 
 11095 ;;  bexp            1   24[BANK0 ] unsigned char 
 11096 ;;  sign            1   17[BANK0 ] unsigned char 
 11097 ;; Return value:  Size  Location     Type
 11098 ;;                  4    0[BANK0 ] unsigned char 
 11099 ;; Registers used:
 11100 ;;		wreg, status,2, status,0
 11101 ;; Tracked objects:
 11102 ;;		On entry : 0/0
 11103 ;;		On exit  : 0/0
 11104 ;;		Unchanged: 0/0
 11105 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 11106 ;;      Params:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11107 ;;      Locals:         0      13       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11108 ;;      Temps:          0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11109 ;;      Totals:         0      26       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11110 ;;Total ram usage:       26 bytes
 11111 ;; Hardware stack levels used: 1
 11112 ;; This function calls:
 11113 ;;		Nothing
 11114 ;; This function is called by:
 11115 ;;		_scale_convert_gram
 11116 ;;		_calc_percentage
 11117 ;; This function uses a non-reentrant model
 11118 ;;
 11119                           
 11120                           
 11121                           ;psect for function ___fldiv
 11122  01DA                     ___fldiv:
 11123  01DA                     l3259:	
 11124                           ;incstack = 0
 11125                           ; Regs used in ___fldiv: [wreg+status,2+status,0]
 11126                           
 11127  01DA  0020               	movlb	0	; select bank0
 11128  01DB  0827               	movf	___fldiv@b+3,w
 11129  01DC  3980               	andlw	128
 11130  01DD  00A8               	movwf	??___fldiv
 11131  01DE  0828               	movf	??___fldiv,w
 11132  01DF  00B1               	movwf	___fldiv@sign
 11133  01E0                     l3261:
 11134  01E0  3527               	lslf	___fldiv@b+3,w
 11135  01E1  00A8               	movwf	??___fldiv
 11136  01E2  0828               	movf	??___fldiv,w
 11137  01E3  00B8               	movwf	___fldiv@bexp
 11138  01E4                     l3263:
 11139  01E4  1FA6               	btfss	___fldiv@b+2,7
 11140  01E5  29E7               	goto	u3741
 11141  01E6  29E8               	goto	u3740
 11142  01E7                     u3741:
 11143  01E7  29E9               	goto	l3267
 11144  01E8                     u3740:
 11145  01E8                     l3265:
 11146  01E8  1438               	bsf	___fldiv@bexp,0
 11147  01E9                     l3267:
 11148  01E9  0838               	movf	___fldiv@bexp,w
 11149  01EA  1903               	btfsc	3,2
 11150  01EB  29ED               	goto	u3751
 11151  01EC  29EE               	goto	u3750
 11152  01ED                     u3751:
 11153  01ED  29FE               	goto	l3277
 11154  01EE                     u3750:
 11155  01EE                     l3269:
 11156  01EE  0A38               	incf	___fldiv@bexp,w
 11157  01EF  1D03               	btfss	3,2
 11158  01F0  29F2               	goto	u3761
 11159  01F1  29F3               	goto	u3760
 11160  01F2                     u3761:
 11161  01F2  29FB               	goto	l3273
 11162  01F3                     u3760:
 11163  01F3                     l3271:
 11164  01F3  3000               	movlw	0
 11165  01F4  00A7               	movwf	___fldiv@b+3
 11166  01F5  3000               	movlw	0
 11167  01F6  00A6               	movwf	___fldiv@b+2
 11168  01F7  3000               	movlw	0
 11169  01F8  00A5               	movwf	___fldiv@b+1
 11170  01F9  3000               	movlw	0
 11171  01FA  00A4               	movwf	___fldiv@b
 11172  01FB                     l3273:
 11173  01FB  17A6               	bsf	___fldiv@b+2,7
 11174  01FC                     l3275:
 11175  01FC  01A7               	clrf	___fldiv@b+3
 11176  01FD  2A06               	goto	l3279
 11177  01FE                     l3277:
 11178  01FE  3000               	movlw	0
 11179  01FF  00A7               	movwf	___fldiv@b+3
 11180  0200  3000               	movlw	0
 11181  0201  00A6               	movwf	___fldiv@b+2
 11182  0202  3000               	movlw	0
 11183  0203  00A5               	movwf	___fldiv@b+1
 11184  0204  3000               	movlw	0
 11185  0205  00A4               	movwf	___fldiv@b
 11186  0206                     l3279:
 11187  0206  0823               	movf	___fldiv@a+3,w
 11188  0207  3980               	andlw	128
 11189  0208  00A8               	movwf	??___fldiv
 11190  0209  0828               	movf	??___fldiv,w
 11191  020A  06B1               	xorwf	___fldiv@sign,f
 11192  020B                     l3281:
 11193  020B  3523               	lslf	___fldiv@a+3,w
 11194  020C  00A8               	movwf	??___fldiv
 11195  020D  0828               	movf	??___fldiv,w
 11196  020E  00B9               	movwf	___fldiv@aexp
 11197  020F                     l3283:
 11198  020F  1FA2               	btfss	___fldiv@a+2,7
 11199  0210  2A12               	goto	u3771
 11200  0211  2A13               	goto	u3770
 11201  0212                     u3771:
 11202  0212  2A14               	goto	l3287
 11203  0213                     u3770:
 11204  0213                     l3285:
 11205  0213  1439               	bsf	___fldiv@aexp,0
 11206  0214                     l3287:
 11207  0214  0839               	movf	___fldiv@aexp,w
 11208  0215  1903               	btfsc	3,2
 11209  0216  2A18               	goto	u3781
 11210  0217  2A19               	goto	u3780
 11211  0218                     u3781:
 11212  0218  2A29               	goto	l3297
 11213  0219                     u3780:
 11214  0219                     l3289:
 11215  0219  0A39               	incf	___fldiv@aexp,w
 11216  021A  1D03               	btfss	3,2
 11217  021B  2A1D               	goto	u3791
 11218  021C  2A1E               	goto	u3790
 11219  021D                     u3791:
 11220  021D  2A26               	goto	l3293
 11221  021E                     u3790:
 11222  021E                     l3291:
 11223  021E  3000               	movlw	0
 11224  021F  00A3               	movwf	___fldiv@a+3
 11225  0220  3000               	movlw	0
 11226  0221  00A2               	movwf	___fldiv@a+2
 11227  0222  3000               	movlw	0
 11228  0223  00A1               	movwf	___fldiv@a+1
 11229  0224  3000               	movlw	0
 11230  0225  00A0               	movwf	___fldiv@a
 11231  0226                     l3293:
 11232  0226  17A2               	bsf	___fldiv@a+2,7
 11233  0227                     l3295:
 11234  0227  01A3               	clrf	___fldiv@a+3
 11235  0228  2A31               	goto	l876
 11236  0229                     l3297:
 11237  0229  3000               	movlw	0
 11238  022A  00A3               	movwf	___fldiv@a+3
 11239  022B  3000               	movlw	0
 11240  022C  00A2               	movwf	___fldiv@a+2
 11241  022D  3000               	movlw	0
 11242  022E  00A1               	movwf	___fldiv@a+1
 11243  022F  3000               	movlw	0
 11244  0230  00A0               	movwf	___fldiv@a
 11245  0231                     l876:
 11246  0231  0823               	movf	___fldiv@a+3,w
 11247  0232  0422               	iorwf	___fldiv@a+2,w
 11248  0233  0421               	iorwf	___fldiv@a+1,w
 11249  0234  0420               	iorwf	___fldiv@a,w
 11250  0235  1D03               	skipz
 11251  0236  2A38               	goto	u3801
 11252  0237  2A39               	goto	u3800
 11253  0238                     u3801:
 11254  0238  2A52               	goto	l3307
 11255  0239                     u3800:
 11256  0239                     l3299:
 11257  0239  3000               	movlw	0
 11258  023A  00A7               	movwf	___fldiv@b+3
 11259  023B  3000               	movlw	0
 11260  023C  00A6               	movwf	___fldiv@b+2
 11261  023D  3000               	movlw	0
 11262  023E  00A5               	movwf	___fldiv@b+1
 11263  023F  3000               	movlw	0
 11264  0240  00A4               	movwf	___fldiv@b
 11265  0241  3080               	movlw	128
 11266  0242  04A6               	iorwf	___fldiv@b+2,f
 11267  0243  307F               	movlw	127
 11268  0244  04A7               	iorwf	___fldiv@b+3,f
 11269  0245                     l3301:
 11270  0245  0831               	movf	___fldiv@sign,w
 11271  0246  00A8               	movwf	??___fldiv
 11272  0247  0828               	movf	??___fldiv,w
 11273  0248  04A7               	iorwf	___fldiv@b+3,f
 11274  0249                     l3303:
 11275  0249  0827               	movf	___fldiv@b+3,w
 11276  024A  00A3               	movwf	?___fldiv+3
 11277  024B  0826               	movf	___fldiv@b+2,w
 11278  024C  00A2               	movwf	?___fldiv+2
 11279  024D  0825               	movf	___fldiv@b+1,w
 11280  024E  00A1               	movwf	?___fldiv+1
 11281  024F  0824               	movf	___fldiv@b,w
 11282  0250  00A0               	movwf	?___fldiv
 11283  0251  2B8D               	goto	l878
 11284  0252                     l3307:
 11285  0252  0838               	movf	___fldiv@bexp,w
 11286  0253  1D03               	btfss	3,2
 11287  0254  2A56               	goto	u3811
 11288  0255  2A57               	goto	u3810
 11289  0256                     u3811:
 11290  0256  2A60               	goto	l3313
 11291  0257                     u3810:
 11292  0257                     l3309:
 11293  0257  3000               	movlw	0
 11294  0258  00A3               	movwf	?___fldiv+3
 11295  0259  3000               	movlw	0
 11296  025A  00A2               	movwf	?___fldiv+2
 11297  025B  3000               	movlw	0
 11298  025C  00A1               	movwf	?___fldiv+1
 11299  025D  3000               	movlw	0
 11300  025E  00A0               	movwf	?___fldiv
 11301  025F  2B8D               	goto	l878
 11302  0260                     l3313:
 11303  0260  0838               	movf	___fldiv@bexp,w
 11304  0261  00A8               	movwf	??___fldiv
 11305  0262  01A9               	clrf	??___fldiv+1
 11306  0263  0829               	movf	??___fldiv+1,w
 11307  0264  00AB               	movwf	??___fldiv+3
 11308  0265  0839               	movf	___fldiv@aexp,w
 11309  0266  0228               	subwf	??___fldiv,w
 11310  0267  00AA               	movwf	??___fldiv+2
 11311  0268  1C03               	skipc
 11312  0269  03AB               	decf	??___fldiv+3,f
 11313  026A  082A               	movf	??___fldiv+2,w
 11314  026B  3E7F               	addlw	127
 11315  026C  00B2               	movwf	___fldiv@new_exp
 11316  026D  3000               	movlw	0
 11317  026E  3D2B               	addwfc	??___fldiv+3,w
 11318  026F  00B3               	movwf	___fldiv@new_exp+1
 11319  0270                     l3315:
 11320  0270  0827               	movf	___fldiv@b+3,w
 11321  0271  00B0               	movwf	___fldiv@rem+3
 11322  0272  0826               	movf	___fldiv@b+2,w
 11323  0273  00AF               	movwf	___fldiv@rem+2
 11324  0274  0825               	movf	___fldiv@b+1,w
 11325  0275  00AE               	movwf	___fldiv@rem+1
 11326  0276  0824               	movf	___fldiv@b,w
 11327  0277  00AD               	movwf	___fldiv@rem
 11328  0278                     l3317:
 11329  0278  3000               	movlw	0
 11330  0279  00A7               	movwf	___fldiv@b+3
 11331  027A  3000               	movlw	0
 11332  027B  00A6               	movwf	___fldiv@b+2
 11333  027C  3000               	movlw	0
 11334  027D  00A5               	movwf	___fldiv@b+1
 11335  027E  3000               	movlw	0
 11336  027F  00A4               	movwf	___fldiv@b
 11337  0280                     l3319:
 11338  0280  3000               	movlw	0
 11339  0281  00B7               	movwf	___fldiv@grs+3
 11340  0282  3000               	movlw	0
 11341  0283  00B6               	movwf	___fldiv@grs+2
 11342  0284  3000               	movlw	0
 11343  0285  00B5               	movwf	___fldiv@grs+1
 11344  0286  3000               	movlw	0
 11345  0287  00B4               	movwf	___fldiv@grs
 11346  0288                     l3321:
 11347  0288  01B9               	clrf	___fldiv@aexp
 11348  0289  2AC8               	goto	l3341
 11349  028A                     l3323:
 11350  028A  0839               	movf	___fldiv@aexp,w
 11351  028B  1903               	btfsc	3,2
 11352  028C  2A8E               	goto	u3821
 11353  028D  2A8F               	goto	u3820
 11354  028E                     u3821:
 11355  028E  2AA9               	goto	l3333
 11356  028F                     u3820:
 11357  028F                     l3325:
 11358  028F  3001               	movlw	1
 11359  0290                     u3835:
 11360  0290  35AD               	lslf	___fldiv@rem,f
 11361  0291  0DAE               	rlf	___fldiv@rem+1,f
 11362  0292  0DAF               	rlf	___fldiv@rem+2,f
 11363  0293  0DB0               	rlf	___fldiv@rem+3,f
 11364  0294  0B89               	decfsz	9,f
 11365  0295  2A90               	goto	u3835
 11366  0296  3001               	movlw	1
 11367  0297                     u3845:
 11368  0297  35A4               	lslf	___fldiv@b,f
 11369  0298  0DA5               	rlf	___fldiv@b+1,f
 11370  0299  0DA6               	rlf	___fldiv@b+2,f
 11371  029A  0DA7               	rlf	___fldiv@b+3,f
 11372  029B  0B89               	decfsz	9,f
 11373  029C  2A97               	goto	u3845
 11374  029D                     l3327:
 11375  029D  1FB7               	btfss	___fldiv@grs+3,7
 11376  029E  2AA0               	goto	u3851
 11377  029F  2AA1               	goto	u3850
 11378  02A0                     u3851:
 11379  02A0  2AA2               	goto	l3331
 11380  02A1                     u3850:
 11381  02A1                     l3329:
 11382  02A1  1424               	bsf	___fldiv@b,0
 11383  02A2                     l3331:
 11384  02A2  3001               	movlw	1
 11385  02A3                     u3865:
 11386  02A3  35B4               	lslf	___fldiv@grs,f
 11387  02A4  0DB5               	rlf	___fldiv@grs+1,f
 11388  02A5  0DB6               	rlf	___fldiv@grs+2,f
 11389  02A6  0DB7               	rlf	___fldiv@grs+3,f
 11390  02A7  0B89               	decfsz	9,f
 11391  02A8  2AA3               	goto	u3865
 11392  02A9                     l3333:
 11393  02A9  0823               	movf	___fldiv@a+3,w
 11394  02AA  0230               	subwf	___fldiv@rem+3,w
 11395  02AB  1D03               	skipz
 11396  02AC  2AB7               	goto	u3875
 11397  02AD  0822               	movf	___fldiv@a+2,w
 11398  02AE  022F               	subwf	___fldiv@rem+2,w
 11399  02AF  1D03               	skipz
 11400  02B0  2AB7               	goto	u3875
 11401  02B1  0821               	movf	___fldiv@a+1,w
 11402  02B2  022E               	subwf	___fldiv@rem+1,w
 11403  02B3  1D03               	skipz
 11404  02B4  2AB7               	goto	u3875
 11405  02B5  0820               	movf	___fldiv@a,w
 11406  02B6  022D               	subwf	___fldiv@rem,w
 11407  02B7                     u3875:
 11408  02B7  1C03               	skipc
 11409  02B8  2ABA               	goto	u3871
 11410  02B9  2ABB               	goto	u3870
 11411  02BA                     u3871:
 11412  02BA  2AC4               	goto	l3339
 11413  02BB                     u3870:
 11414  02BB                     l3335:
 11415  02BB  1737               	bsf	___fldiv@grs+3,6
 11416  02BC                     l3337:
 11417  02BC  0820               	movf	___fldiv@a,w
 11418  02BD  02AD               	subwf	___fldiv@rem,f
 11419  02BE  0821               	movf	___fldiv@a+1,w
 11420  02BF  3BAE               	subwfb	___fldiv@rem+1,f
 11421  02C0  0822               	movf	___fldiv@a+2,w
 11422  02C1  3BAF               	subwfb	___fldiv@rem+2,f
 11423  02C2  0823               	movf	___fldiv@a+3,w
 11424  02C3  3BB0               	subwfb	___fldiv@rem+3,f
 11425  02C4                     l3339:
 11426  02C4  3001               	movlw	1
 11427  02C5  00A8               	movwf	??___fldiv
 11428  02C6  0828               	movf	??___fldiv,w
 11429  02C7  07B9               	addwf	___fldiv@aexp,f
 11430  02C8                     l3341:
 11431  02C8  301A               	movlw	26
 11432  02C9  0239               	subwf	___fldiv@aexp,w
 11433  02CA  1C03               	skipc
 11434  02CB  2ACD               	goto	u3881
 11435  02CC  2ACE               	goto	u3880
 11436  02CD                     u3881:
 11437  02CD  2A8A               	goto	l3323
 11438  02CE                     u3880:
 11439  02CE                     l3343:
 11440  02CE  0830               	movf	___fldiv@rem+3,w
 11441  02CF  042F               	iorwf	___fldiv@rem+2,w
 11442  02D0  042E               	iorwf	___fldiv@rem+1,w
 11443  02D1  042D               	iorwf	___fldiv@rem,w
 11444  02D2  1903               	skipnz
 11445  02D3  2AD5               	goto	u3891
 11446  02D4  2AD6               	goto	u3890
 11447  02D5                     u3891:
 11448  02D5  2AEF               	goto	l3357
 11449  02D6                     u3890:
 11450  02D6                     l3345:
 11451  02D6  1434               	bsf	___fldiv@grs,0
 11452  02D7  2AEF               	goto	l3357
 11453  02D8                     l3347:
 11454  02D8  3001               	movlw	1
 11455  02D9                     u3905:
 11456  02D9  35A4               	lslf	___fldiv@b,f
 11457  02DA  0DA5               	rlf	___fldiv@b+1,f
 11458  02DB  0DA6               	rlf	___fldiv@b+2,f
 11459  02DC  0DA7               	rlf	___fldiv@b+3,f
 11460  02DD  0B89               	decfsz	9,f
 11461  02DE  2AD9               	goto	u3905
 11462  02DF                     l3349:
 11463  02DF  1FB7               	btfss	___fldiv@grs+3,7
 11464  02E0  2AE2               	goto	u3911
 11465  02E1  2AE3               	goto	u3910
 11466  02E2                     u3911:
 11467  02E2  2AE4               	goto	l3353
 11468  02E3                     u3910:
 11469  02E3                     l3351:
 11470  02E3  1424               	bsf	___fldiv@b,0
 11471  02E4                     l3353:
 11472  02E4  3001               	movlw	1
 11473  02E5                     u3925:
 11474  02E5  35B4               	lslf	___fldiv@grs,f
 11475  02E6  0DB5               	rlf	___fldiv@grs+1,f
 11476  02E7  0DB6               	rlf	___fldiv@grs+2,f
 11477  02E8  0DB7               	rlf	___fldiv@grs+3,f
 11478  02E9  0B89               	decfsz	9,f
 11479  02EA  2AE5               	goto	u3925
 11480  02EB                     l3355:
 11481  02EB  30FF               	movlw	255
 11482  02EC  07B2               	addwf	___fldiv@new_exp,f
 11483  02ED  30FF               	movlw	255
 11484  02EE  3DB3               	addwfc	___fldiv@new_exp+1,f
 11485  02EF                     l3357:
 11486  02EF  1FA6               	btfss	___fldiv@b+2,7
 11487  02F0  2AF2               	goto	u3931
 11488  02F1  2AF3               	goto	u3930
 11489  02F2                     u3931:
 11490  02F2  2AD8               	goto	l3347
 11491  02F3                     u3930:
 11492  02F3                     l3359:
 11493  02F3  01B9               	clrf	___fldiv@aexp
 11494  02F4                     l3361:
 11495  02F4  1FB7               	btfss	___fldiv@grs+3,7
 11496  02F5  2AF7               	goto	u3941
 11497  02F6  2AF8               	goto	u3940
 11498  02F7                     u3941:
 11499  02F7  2B14               	goto	l3369
 11500  02F8                     u3940:
 11501  02F8                     l3363:
 11502  02F8  30FF               	movlw	255
 11503  02F9  0534               	andwf	___fldiv@grs,w
 11504  02FA  00A8               	movwf	??___fldiv
 11505  02FB  30FF               	movlw	255
 11506  02FC  0535               	andwf	___fldiv@grs+1,w
 11507  02FD  00A9               	movwf	??___fldiv+1
 11508  02FE  30FF               	movlw	255
 11509  02FF  0536               	andwf	___fldiv@grs+2,w
 11510  0300  00AA               	movwf	??___fldiv+2
 11511  0301  307F               	movlw	127
 11512  0302  0537               	andwf	___fldiv@grs+3,w
 11513  0303  00AB               	movwf	??___fldiv+3
 11514  0304  082B               	movf	??___fldiv+3,w
 11515  0305  042A               	iorwf	??___fldiv+2,w
 11516  0306  0429               	iorwf	??___fldiv+1,w
 11517  0307  0428               	iorwf	??___fldiv,w
 11518  0308  1903               	skipnz
 11519  0309  2B0B               	goto	u3951
 11520  030A  2B0C               	goto	u3950
 11521  030B                     u3951:
 11522  030B  2B0F               	goto	l892
 11523  030C                     u3950:
 11524  030C                     l3365:
 11525  030C  01B9               	clrf	___fldiv@aexp
 11526  030D  0AB9               	incf	___fldiv@aexp,f
 11527  030E  2B14               	goto	l3369
 11528  030F                     l892:
 11529  030F  1C24               	btfss	___fldiv@b,0
 11530  0310  2B12               	goto	u3961
 11531  0311  2B13               	goto	u3960
 11532  0312                     u3961:
 11533  0312  2B14               	goto	l3369
 11534  0313                     u3960:
 11535  0313  2B0C               	goto	l3365
 11536  0314                     l3369:
 11537  0314  0839               	movf	___fldiv@aexp,w
 11538  0315  1903               	btfsc	3,2
 11539  0316  2B18               	goto	u3971
 11540  0317  2B19               	goto	u3970
 11541  0318                     u3971:
 11542  0318  2B41               	goto	l3379
 11543  0319                     u3970:
 11544  0319                     l3371:
 11545  0319  3001               	movlw	1
 11546  031A  07A4               	addwf	___fldiv@b,f
 11547  031B  3000               	movlw	0
 11548  031C  3DA5               	addwfc	___fldiv@b+1,f
 11549  031D  3000               	movlw	0
 11550  031E  3DA6               	addwfc	___fldiv@b+2,f
 11551  031F  3000               	movlw	0
 11552  0320  3DA7               	addwfc	___fldiv@b+3,f
 11553  0321                     l3373:
 11554  0321  1C27               	btfss	___fldiv@b+3,0
 11555  0322  2B24               	goto	u3981
 11556  0323  2B25               	goto	u3980
 11557  0324                     u3981:
 11558  0324  2B41               	goto	l3379
 11559  0325                     u3980:
 11560  0325                     l3375:
 11561  0325  0824               	movf	___fldiv@b,w
 11562  0326  00A8               	movwf	??___fldiv
 11563  0327  0825               	movf	___fldiv@b+1,w
 11564  0328  00A9               	movwf	??___fldiv+1
 11565  0329  0826               	movf	___fldiv@b+2,w
 11566  032A  00AA               	movwf	??___fldiv+2
 11567  032B  0827               	movf	___fldiv@b+3,w
 11568  032C  00AB               	movwf	??___fldiv+3
 11569  032D  3001               	movlw	1
 11570  032E  00AC               	movwf	??___fldiv+4
 11571  032F                     u3995:
 11572  032F  37AB               	asrf	??___fldiv+3,f
 11573  0330  0CAA               	rrf	??___fldiv+2,f
 11574  0331  0CA9               	rrf	??___fldiv+1,f
 11575  0332  0CA8               	rrf	??___fldiv,f
 11576  0333                     u3990:
 11577  0333  0BAC               	decfsz	??___fldiv+4,f
 11578  0334  2B2F               	goto	u3995
 11579  0335  082B               	movf	??___fldiv+3,w
 11580  0336  00A7               	movwf	___fldiv@b+3
 11581  0337  082A               	movf	??___fldiv+2,w
 11582  0338  00A6               	movwf	___fldiv@b+2
 11583  0339  0829               	movf	??___fldiv+1,w
 11584  033A  00A5               	movwf	___fldiv@b+1
 11585  033B  0828               	movf	??___fldiv,w
 11586  033C  00A4               	movwf	___fldiv@b
 11587  033D                     l3377:
 11588  033D  3001               	movlw	1
 11589  033E  07B2               	addwf	___fldiv@new_exp,f
 11590  033F  3000               	movlw	0
 11591  0340  3DB3               	addwfc	___fldiv@new_exp+1,f
 11592  0341                     l3379:
 11593  0341  0833               	movf	___fldiv@new_exp+1,w
 11594  0342  3A80               	xorlw	128
 11595  0343  00A8               	movwf	??___fldiv
 11596  0344  3080               	movlw	128
 11597  0345  0228               	subwf	??___fldiv,w
 11598  0346  1D03               	skipz
 11599  0347  2B4A               	goto	u4005
 11600  0348  30FF               	movlw	255
 11601  0349  0232               	subwf	___fldiv@new_exp,w
 11602  034A                     u4005:
 11603  034A  1C03               	skipc
 11604  034B  2B4D               	goto	u4001
 11605  034C  2B4E               	goto	u4000
 11606  034D                     u4001:
 11607  034D  2B5B               	goto	l897
 11608  034E                     u4000:
 11609  034E                     l3381:
 11610  034E  30FF               	movlw	255
 11611  034F  0020               	movlb	0	; select bank0
 11612  0350  00B2               	movwf	___fldiv@new_exp
 11613  0351  3000               	movlw	0
 11614  0352  00B3               	movwf	___fldiv@new_exp+1
 11615  0353  3000               	movlw	0
 11616  0354  00A7               	movwf	___fldiv@b+3
 11617  0355  3000               	movlw	0
 11618  0356  00A6               	movwf	___fldiv@b+2
 11619  0357  3000               	movlw	0
 11620  0358  00A5               	movwf	___fldiv@b+1
 11621  0359  3000               	movlw	0
 11622  035A  00A4               	movwf	___fldiv@b
 11623  035B                     l897:
 11624  035B  0020               	movlb	0	; select bank0
 11625  035C  0833               	movf	___fldiv@new_exp+1,w
 11626  035D  3A80               	xorlw	128
 11627  035E  00A8               	movwf	??___fldiv
 11628  035F  3080               	movlw	128
 11629  0360  0228               	subwf	??___fldiv,w
 11630  0361  1D03               	skipz
 11631  0362  2B65               	goto	u4015
 11632  0363  3001               	movlw	1
 11633  0364  0232               	subwf	___fldiv@new_exp,w
 11634  0365                     u4015:
 11635  0365  1803               	skipnc
 11636  0366  2B68               	goto	u4011
 11637  0367  2B69               	goto	u4010
 11638  0368                     u4011:
 11639  0368  2B75               	goto	l898
 11640  0369                     u4010:
 11641  0369                     l3383:
 11642  0369  0020               	movlb	0	; select bank0
 11643  036A  01B2               	clrf	___fldiv@new_exp
 11644  036B  01B3               	clrf	___fldiv@new_exp+1
 11645  036C                     l3385:
 11646  036C  3000               	movlw	0
 11647  036D  00A7               	movwf	___fldiv@b+3
 11648  036E  3000               	movlw	0
 11649  036F  00A6               	movwf	___fldiv@b+2
 11650  0370  3000               	movlw	0
 11651  0371  00A5               	movwf	___fldiv@b+1
 11652  0372  3000               	movlw	0
 11653  0373  00A4               	movwf	___fldiv@b
 11654  0374                     l3387:
 11655  0374  01B1               	clrf	___fldiv@sign
 11656  0375                     l898:
 11657  0375  0020               	movlb	0	; select bank0
 11658  0376  0832               	movf	___fldiv@new_exp,w
 11659  0377  00A8               	movwf	??___fldiv
 11660  0378  0828               	movf	??___fldiv,w
 11661  0379  00B8               	movwf	___fldiv@bexp
 11662  037A                     l3389:
 11663  037A  1C38               	btfss	___fldiv@bexp,0
 11664  037B  2B7D               	goto	u4021
 11665  037C  2B7E               	goto	u4020
 11666  037D                     u4021:
 11667  037D  2B80               	goto	l3393
 11668  037E                     u4020:
 11669  037E                     l3391:
 11670  037E  17A6               	bsf	___fldiv@b+2,7
 11671  037F  2B84               	goto	l900
 11672  0380                     l3393:
 11673  0380  307F               	movlw	127
 11674  0381  00A8               	movwf	??___fldiv
 11675  0382  0828               	movf	??___fldiv,w
 11676  0383  05A6               	andwf	___fldiv@b+2,f
 11677  0384                     l900:
 11678  0384  3638               	lsrf	___fldiv@bexp,w
 11679  0385  00A8               	movwf	??___fldiv
 11680  0386  0828               	movf	??___fldiv,w
 11681  0387  00A7               	movwf	___fldiv@b+3
 11682  0388  0831               	movf	___fldiv@sign,w
 11683  0389  00A8               	movwf	??___fldiv
 11684  038A  0828               	movf	??___fldiv,w
 11685  038B  04A7               	iorwf	___fldiv@b+3,f
 11686  038C  2A49               	goto	l3303
 11687  038D                     l878:
 11688  038D  0008               	return
 11689  038E                     __end_of___fldiv:
 11690                           
 11691                           	psect	text55
 11692  0C45                     __ptext55:	
 11693 ;; *************** function _get_scale_val *****************
 11694 ;; Defined at:
 11695 ;;		line 34 in file "loadcell.c"
 11696 ;; Parameters:    Size  Location     Type
 11697 ;;  p               1    wreg     PTR struct .
 11698 ;;		 -> NULL(0), main@loadcell(12), 
 11699 ;;  scale_avg_co    1    0[BANK0 ] unsigned char 
 11700 ;; Auto vars:     Size  Location     Type
 11701 ;;  p               1   18[BANK0 ] PTR struct .
 11702 ;;		 -> NULL(0), main@loadcell(12), 
 11703 ;;  i               1   17[BANK0 ] unsigned char 
 11704 ;;  j               1   12[BANK0 ] unsigned char 
 11705 ;;  weight_count    4   13[BANK0 ] unsigned long 
 11706 ;;  weight_add      4    8[BANK0 ] unsigned long 
 11707 ;; Return value:  Size  Location     Type
 11708 ;;                  4    0[BANK0 ] unsigned long 
 11709 ;; Registers used:
 11710 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 11711 ;; Tracked objects:
 11712 ;;		On entry : 0/0
 11713 ;;		On exit  : 0/0
 11714 ;;		Unchanged: 0/0
 11715 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 11716 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11717 ;;      Locals:         0      11       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11718 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11719 ;;      Totals:         0      19       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11720 ;;Total ram usage:       19 bytes
 11721 ;; Hardware stack levels used: 1
 11722 ;; Hardware stack levels required when called: 1
 11723 ;; This function calls:
 11724 ;;		___lldiv
 11725 ;;		_get_CELL_DAT_VAL
 11726 ;;		_set_CELL_CLK_HIGH
 11727 ;;		_set_CELL_CLK_LOW
 11728 ;; This function is called by:
 11729 ;;		_initialize
 11730 ;;		_calc_percentage
 11731 ;; This function uses a non-reentrant model
 11732 ;;
 11733                           
 11734                           
 11735                           ;psect for function _get_scale_val
 11736  0C45                     _get_scale_val:
 11737                           
 11738                           ;incstack = 0
 11739                           ; Regs used in _get_scale_val: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
 11740                           ;get_scale_val@p stored from wreg
 11741  0C45  0020               	movlb	0	; select bank0
 11742  0C46  00B2               	movwf	get_scale_val@p
 11743  0C47                     l3497:
 11744                           
 11745                           ;loadcell.c: 35:     set_CELL_CLK_LOW(p);
 11746  0C47  0832               	movf	get_scale_val@p,w
 11747  0C48  319F  2773  318C   	fcall	_set_CELL_CLK_LOW
 11748  0C4B                     l3499:
 11749                           
 11750                           ;loadcell.c: 36:     unsigned long weight_count = 0;
 11751  0C4B  3000               	movlw	0
 11752  0C4C  0020               	movlb	0	; select bank0
 11753  0C4D  00B0               	movwf	get_scale_val@weight_count+3
 11754  0C4E  3000               	movlw	0
 11755  0C4F  00AF               	movwf	get_scale_val@weight_count+2
 11756  0C50  3000               	movlw	0
 11757  0C51  00AE               	movwf	get_scale_val@weight_count+1
 11758  0C52  3000               	movlw	0
 11759  0C53  00AD               	movwf	get_scale_val@weight_count
 11760  0C54                     l3501:
 11761                           
 11762                           ;loadcell.c: 37:     unsigned long weight_add = 0;
 11763  0C54  3000               	movlw	0
 11764  0C55  00AB               	movwf	get_scale_val@weight_add+3
 11765  0C56  3000               	movlw	0
 11766  0C57  00AA               	movwf	get_scale_val@weight_add+2
 11767  0C58  3000               	movlw	0
 11768  0C59  00A9               	movwf	get_scale_val@weight_add+1
 11769  0C5A  3000               	movlw	0
 11770  0C5B  00A8               	movwf	get_scale_val@weight_add
 11771  0C5C                     l3503:
 11772                           
 11773                           ;loadcell.c: 38:     for (uint8_t j = 0; j < scale_avg_count; j++)
 11774  0C5C  01AC               	clrf	get_scale_val@j
 11775  0C5D  2CE4               	goto	l3553
 11776  0C5E                     l3505:
 11777  0C5E  0020               	movlb	0	; select bank0
 11778  0C5F  0832               	movf	get_scale_val@p,w
 11779  0C60  3188  20EE  318C   	fcall	_get_CELL_DAT_VAL
 11780  0C63  0870               	movf	?_get_CELL_DAT_VAL,w
 11781  0C64  0471               	iorwf	?_get_CELL_DAT_VAL+1,w
 11782  0C65  1903               	btfsc	3,2
 11783  0C66  2C68               	goto	u4211
 11784  0C67  2C69               	goto	u4210
 11785  0C68                     u4211:
 11786  0C68  2C5E               	goto	l3505
 11787  0C69                     u4210:
 11788  0C69                     l3507:
 11789  0C69  0020               	movlb	0	; select bank0
 11790  0C6A  0832               	movf	get_scale_val@p,w
 11791  0C6B  3188  20EE  318C   	fcall	_get_CELL_DAT_VAL
 11792  0C6E  0370               	decf	?_get_CELL_DAT_VAL,w
 11793  0C6F  0471               	iorwf	?_get_CELL_DAT_VAL+1,w
 11794  0C70  1903               	btfsc	3,2
 11795  0C71  2C73               	goto	u4221
 11796  0C72  2C74               	goto	u4220
 11797  0C73                     u4221:
 11798  0C73  2C69               	goto	l3507
 11799  0C74                     u4220:
 11800  0C74                     l3509:
 11801                           
 11802                           ;loadcell.c: 42:         _delay((unsigned long)((10)*(8000000/4000000.0)));
 11803  0C74  3006               	movlw	6
 11804  0C75                     u4777:
 11805  0C75  0B89               	decfsz	9,f
 11806  0C76  2C75               	goto	u4777
 11807  0C77  3200               	nop2
 11808  0C78                     l3511:
 11809                           
 11810                           ;loadcell.c: 44:         uint8_t i;;loadcell.c: 45:         for (i = 0; i < 24; i++){
 11811  0C78  0020               	movlb	0	; select bank0
 11812  0C79  01B1               	clrf	get_scale_val@i
 11813  0C7A                     l3517:
 11814                           
 11815                           ;loadcell.c: 46:             weight_count <<= 1;
 11816  0C7A  3001               	movlw	1
 11817  0C7B                     u4235:
 11818  0C7B  35AD               	lslf	get_scale_val@weight_count,f
 11819  0C7C  0DAE               	rlf	get_scale_val@weight_count+1,f
 11820  0C7D  0DAF               	rlf	get_scale_val@weight_count+2,f
 11821  0C7E  0DB0               	rlf	get_scale_val@weight_count+3,f
 11822  0C7F  0B89               	decfsz	9,f
 11823  0C80  2C7B               	goto	u4235
 11824  0C81                     l3519:
 11825                           
 11826                           ;loadcell.c: 47:             set_CELL_CLK_HIGH(p);
 11827  0C81  0832               	movf	get_scale_val@p,w
 11828  0C82  319F  2769  318C   	fcall	_set_CELL_CLK_HIGH
 11829  0C85                     l3521:
 11830                           
 11831                           ;loadcell.c: 48:             _delay((unsigned long)((10)*(8000000/4000000.0)));
 11832  0C85  3006               	movlw	6
 11833  0C86                     u4787:
 11834  0C86  0B89               	decfsz	9,f
 11835  0C87  2C86               	goto	u4787
 11836  0C88  3200               	nop2
 11837  0C89                     l3523:
 11838                           
 11839                           ;loadcell.c: 49:             set_CELL_CLK_LOW(p);
 11840  0C89  0020               	movlb	0	; select bank0
 11841  0C8A  0832               	movf	get_scale_val@p,w
 11842  0C8B  319F  2773  318C   	fcall	_set_CELL_CLK_LOW
 11843  0C8E                     l3525:
 11844                           
 11845                           ;loadcell.c: 50:             weight_count += get_CELL_DAT_VAL(p);
 11846  0C8E  0020               	movlb	0	; select bank0
 11847  0C8F  0832               	movf	get_scale_val@p,w
 11848  0C90  3188  20EE  318C   	fcall	_get_CELL_DAT_VAL
 11849  0C93  0870               	movf	?_get_CELL_DAT_VAL,w
 11850  0C94  0020               	movlb	0	; select bank0
 11851  0C95  00A4               	movwf	??_get_scale_val
 11852  0C96  0871               	movf	?_get_CELL_DAT_VAL+1,w
 11853  0C97  00A5               	movwf	??_get_scale_val+1
 11854  0C98  3000               	movlw	0
 11855  0C99  1BA5               	btfsc	??_get_scale_val+1,7
 11856  0C9A  30FF               	movlw	255
 11857  0C9B  00A6               	movwf	??_get_scale_val+2
 11858  0C9C  00A7               	movwf	??_get_scale_val+3
 11859  0C9D  0824               	movf	??_get_scale_val,w
 11860  0C9E  07AD               	addwf	get_scale_val@weight_count,f
 11861  0C9F  0825               	movf	??_get_scale_val+1,w
 11862  0CA0  3DAE               	addwfc	get_scale_val@weight_count+1,f
 11863  0CA1  0826               	movf	??_get_scale_val+2,w
 11864  0CA2  3DAF               	addwfc	get_scale_val@weight_count+2,f
 11865  0CA3  0827               	movf	??_get_scale_val+3,w
 11866  0CA4  3DB0               	addwfc	get_scale_val@weight_count+3,f
 11867  0CA5                     l3527:
 11868                           
 11869                           ;loadcell.c: 51:             _delay((unsigned long)((10)*(8000000/4000000.0)));
 11870  0CA5  3006               	movlw	6
 11871  0CA6                     u4797:
 11872  0CA6  0B89               	decfsz	9,f
 11873  0CA7  2CA6               	goto	u4797
 11874  0CA8  3200               	nop2
 11875  0CA9                     l3529:
 11876                           
 11877                           ;loadcell.c: 52:         }
 11878  0CA9  3001               	movlw	1
 11879  0CAA  0020               	movlb	0	; select bank0
 11880  0CAB  00A4               	movwf	??_get_scale_val
 11881  0CAC  0824               	movf	??_get_scale_val,w
 11882  0CAD  07B1               	addwf	get_scale_val@i,f
 11883  0CAE                     l3531:
 11884  0CAE  3018               	movlw	24
 11885  0CAF  0231               	subwf	get_scale_val@i,w
 11886  0CB0  1C03               	skipc
 11887  0CB1  2CB3               	goto	u4241
 11888  0CB2  2CB4               	goto	u4240
 11889  0CB3                     u4241:
 11890  0CB3  2C7A               	goto	l3517
 11891  0CB4                     u4240:
 11892  0CB4                     l3533:
 11893                           
 11894                           ;loadcell.c: 54:         for (i = 0; i < 1; i++){
 11895  0CB4  01B1               	clrf	get_scale_val@i
 11896  0CB5                     l3539:
 11897                           
 11898                           ;loadcell.c: 55:             set_CELL_CLK_HIGH(p);
 11899  0CB5  0832               	movf	get_scale_val@p,w
 11900  0CB6  319F  2769  318C   	fcall	_set_CELL_CLK_HIGH
 11901  0CB9                     l3541:
 11902                           
 11903                           ;loadcell.c: 56:             _delay((unsigned long)((10)*(8000000/4000000.0)));
 11904  0CB9  3006               	movlw	6
 11905  0CBA                     u4807:
 11906  0CBA  0B89               	decfsz	9,f
 11907  0CBB  2CBA               	goto	u4807
 11908  0CBC  3200               	nop2
 11909  0CBD                     l3543:
 11910                           
 11911                           ;loadcell.c: 57:             set_CELL_CLK_LOW(p);
 11912  0CBD  0020               	movlb	0	; select bank0
 11913  0CBE  0832               	movf	get_scale_val@p,w
 11914  0CBF  319F  2773  318C   	fcall	_set_CELL_CLK_LOW
 11915                           
 11916                           ;loadcell.c: 58:             _delay((unsigned long)((10)*(8000000/4000000.0)));
 11917  0CC2  3006               	movlw	6
 11918  0CC3                     u4817:
 11919  0CC3  0B89               	decfsz	9,f
 11920  0CC4  2CC3               	goto	u4817
 11921  0CC5  3200               	nop2
 11922  0CC6                     l3545:
 11923                           
 11924                           ;loadcell.c: 59:         };
 11925  0CC6  3001               	movlw	1
 11926  0CC7  0020               	movlb	0	; select bank0
 11927  0CC8  00A4               	movwf	??_get_scale_val
 11928  0CC9  0824               	movf	??_get_scale_val,w
 11929  0CCA  07B1               	addwf	get_scale_val@i,f
 11930  0CCB                     l3547:
 11931  0CCB  0831               	movf	get_scale_val@i,w
 11932  0CCC  1903               	btfsc	3,2
 11933  0CCD  2CCF               	goto	u4251
 11934  0CCE  2CD0               	goto	u4250
 11935  0CCF                     u4251:
 11936  0CCF  2CB5               	goto	l3539
 11937  0CD0                     u4250:
 11938  0CD0                     l3549:
 11939                           
 11940                           ;loadcell.c: 60:         weight_add += weight_count;
 11941  0CD0  082D               	movf	get_scale_val@weight_count,w
 11942  0CD1  07A8               	addwf	get_scale_val@weight_add,f
 11943  0CD2  082E               	movf	get_scale_val@weight_count+1,w
 11944  0CD3  3DA9               	addwfc	get_scale_val@weight_add+1,f
 11945  0CD4  082F               	movf	get_scale_val@weight_count+2,w
 11946  0CD5  3DAA               	addwfc	get_scale_val@weight_add+2,f
 11947  0CD6  0830               	movf	get_scale_val@weight_count+3,w
 11948  0CD7  3DAB               	addwfc	get_scale_val@weight_add+3,f
 11949                           
 11950                           ;loadcell.c: 61:         weight_count = 0;
 11951  0CD8  3000               	movlw	0
 11952  0CD9  00B0               	movwf	get_scale_val@weight_count+3
 11953  0CDA  3000               	movlw	0
 11954  0CDB  00AF               	movwf	get_scale_val@weight_count+2
 11955  0CDC  3000               	movlw	0
 11956  0CDD  00AE               	movwf	get_scale_val@weight_count+1
 11957  0CDE  3000               	movlw	0
 11958  0CDF  00AD               	movwf	get_scale_val@weight_count
 11959  0CE0                     l3551:
 11960                           
 11961                           ;loadcell.c: 62:     }
 11962  0CE0  3001               	movlw	1
 11963  0CE1  00A4               	movwf	??_get_scale_val
 11964  0CE2  0824               	movf	??_get_scale_val,w
 11965  0CE3  07AC               	addwf	get_scale_val@j,f
 11966  0CE4                     l3553:
 11967  0CE4  0820               	movf	get_scale_val@scale_avg_count,w
 11968  0CE5  022C               	subwf	get_scale_val@j,w
 11969  0CE6  1C03               	skipc
 11970  0CE7  2CE9               	goto	u4261
 11971  0CE8  2CEA               	goto	u4260
 11972  0CE9                     u4261:
 11973  0CE9  2C5E               	goto	l3505
 11974  0CEA                     u4260:
 11975  0CEA                     l3555:
 11976                           
 11977                           ;loadcell.c: 63:     weight_count = weight_add / scale_avg_count;
 11978  0CEA  0820               	movf	get_scale_val@scale_avg_count,w
 11979  0CEB  00A4               	movwf	??_get_scale_val
 11980  0CEC  01A5               	clrf	??_get_scale_val+1
 11981  0CED  01A6               	clrf	??_get_scale_val+2
 11982  0CEE  01A7               	clrf	??_get_scale_val+3
 11983  0CEF  0827               	movf	??_get_scale_val+3,w
 11984  0CF0  00F3               	movwf	___lldiv@divisor+3
 11985  0CF1  0826               	movf	??_get_scale_val+2,w
 11986  0CF2  00F2               	movwf	___lldiv@divisor+2
 11987  0CF3  0825               	movf	??_get_scale_val+1,w
 11988  0CF4  00F1               	movwf	___lldiv@divisor+1
 11989  0CF5  0824               	movf	??_get_scale_val,w
 11990  0CF6  00F0               	movwf	___lldiv@divisor
 11991  0CF7  082B               	movf	get_scale_val@weight_add+3,w
 11992  0CF8  00F7               	movwf	___lldiv@dividend+3
 11993  0CF9  082A               	movf	get_scale_val@weight_add+2,w
 11994  0CFA  00F6               	movwf	___lldiv@dividend+2
 11995  0CFB  0829               	movf	get_scale_val@weight_add+1,w
 11996  0CFC  00F5               	movwf	___lldiv@dividend+1
 11997  0CFD  0828               	movf	get_scale_val@weight_add,w
 11998  0CFE  00F4               	movwf	___lldiv@dividend
 11999  0CFF  3193  23B4  318C   	fcall	___lldiv
 12000  0D02  0873               	movf	?___lldiv+3,w
 12001  0D03  0020               	movlb	0	; select bank0
 12002  0D04  00B0               	movwf	get_scale_val@weight_count+3
 12003  0D05  0872               	movf	?___lldiv+2,w
 12004  0D06  00AF               	movwf	get_scale_val@weight_count+2
 12005  0D07  0871               	movf	?___lldiv+1,w
 12006  0D08  00AE               	movwf	get_scale_val@weight_count+1
 12007  0D09  0870               	movf	?___lldiv,w
 12008  0D0A  00AD               	movwf	get_scale_val@weight_count
 12009  0D0B                     l3557:
 12010                           
 12011                           ;loadcell.c: 66:     weight_count = weight_count ^ 0x800000;
 12012  0D0B  3000               	movlw	0
 12013  0D0C  062D               	xorwf	get_scale_val@weight_count,w
 12014  0D0D  00A4               	movwf	??_get_scale_val
 12015  0D0E  3000               	movlw	0
 12016  0D0F  062E               	xorwf	get_scale_val@weight_count+1,w
 12017  0D10  00A5               	movwf	??_get_scale_val+1
 12018  0D11  3080               	movlw	128
 12019  0D12  062F               	xorwf	get_scale_val@weight_count+2,w
 12020  0D13  00A6               	movwf	??_get_scale_val+2
 12021  0D14  3000               	movlw	0
 12022  0D15  0630               	xorwf	get_scale_val@weight_count+3,w
 12023  0D16  00A7               	movwf	??_get_scale_val+3
 12024  0D17  0827               	movf	??_get_scale_val+3,w
 12025  0D18  00B0               	movwf	get_scale_val@weight_count+3
 12026  0D19  0826               	movf	??_get_scale_val+2,w
 12027  0D1A  00AF               	movwf	get_scale_val@weight_count+2
 12028  0D1B  0825               	movf	??_get_scale_val+1,w
 12029  0D1C  00AE               	movwf	get_scale_val@weight_count+1
 12030  0D1D  0824               	movf	??_get_scale_val,w
 12031  0D1E  00AD               	movwf	get_scale_val@weight_count
 12032  0D1F                     l3559:
 12033                           
 12034                           ;loadcell.c: 67:     return weight_count;
 12035  0D1F  0830               	movf	get_scale_val@weight_count+3,w
 12036  0D20  00A3               	movwf	?_get_scale_val+3
 12037  0D21  082F               	movf	get_scale_val@weight_count+2,w
 12038  0D22  00A2               	movwf	?_get_scale_val+2
 12039  0D23  082E               	movf	get_scale_val@weight_count+1,w
 12040  0D24  00A1               	movwf	?_get_scale_val+1
 12041  0D25  082D               	movf	get_scale_val@weight_count,w
 12042  0D26  00A0               	movwf	?_get_scale_val
 12043  0D27                     l276:
 12044  0D27  0008               	return
 12045  0D28                     __end_of_get_scale_val:
 12046                           
 12047                           	psect	text56
 12048  1F73                     __ptext56:	
 12049 ;; *************** function _set_CELL_CLK_LOW *****************
 12050 ;; Defined at:
 12051 ;;		line 7 in file "loadcell.c"
 12052 ;; Parameters:    Size  Location     Type
 12053 ;;  p               1    wreg     PTR struct .
 12054 ;;		 -> NULL(0), main@loadcell(12), 
 12055 ;; Auto vars:     Size  Location     Type
 12056 ;;  p               1    1[COMMON] PTR struct .
 12057 ;;		 -> NULL(0), main@loadcell(12), 
 12058 ;; Return value:  Size  Location     Type
 12059 ;;                  1    wreg      void 
 12060 ;; Registers used:
 12061 ;;		wreg, fsr1l, fsr1h, status,2, status,0
 12062 ;; Tracked objects:
 12063 ;;		On entry : 0/0
 12064 ;;		On exit  : 0/0
 12065 ;;		Unchanged: 0/0
 12066 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 12067 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12068 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12069 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12070 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12071 ;;Total ram usage:        2 bytes
 12072 ;; Hardware stack levels used: 1
 12073 ;; This function calls:
 12074 ;;		Nothing
 12075 ;; This function is called by:
 12076 ;;		_get_scale_val
 12077 ;; This function uses a non-reentrant model
 12078 ;;
 12079                           
 12080                           
 12081                           ;psect for function _set_CELL_CLK_LOW
 12082  1F73                     _set_CELL_CLK_LOW:
 12083                           
 12084                           ;incstack = 0
 12085                           ; Regs used in _set_CELL_CLK_LOW: [wreg+fsr1l+fsr1h+status,2+status,0]
 12086                           ;set_CELL_CLK_LOW@p stored from wreg
 12087  1F73  00F1               	movwf	set_CELL_CLK_LOW@p
 12088  1F74                     l3123:
 12089  1F74  0871               	movf	set_CELL_CLK_LOW@p,w
 12090  1F75  0086               	movwf	6
 12091  1F76  0187               	clrf	7
 12092  1F77  0901               	comf	1,w
 12093  1F78  00F0               	movwf	??_set_CELL_CLK_LOW
 12094  1F79  0870               	movf	??_set_CELL_CLK_LOW,w
 12095  1F7A  0022               	movlb	2	; select bank2
 12096  1F7B  058D               	andwf	13,f	;volatile
 12097  1F7C                     l246:
 12098  1F7C  0008               	return
 12099  1F7D                     __end_of_set_CELL_CLK_LOW:
 12100                           
 12101                           	psect	text57
 12102  1F69                     __ptext57:	
 12103 ;; *************** function _set_CELL_CLK_HIGH *****************
 12104 ;; Defined at:
 12105 ;;		line 12 in file "loadcell.c"
 12106 ;; Parameters:    Size  Location     Type
 12107 ;;  p               1    wreg     PTR struct .
 12108 ;;		 -> NULL(0), main@loadcell(12), 
 12109 ;; Auto vars:     Size  Location     Type
 12110 ;;  p               1    1[COMMON] PTR struct .
 12111 ;;		 -> NULL(0), main@loadcell(12), 
 12112 ;; Return value:  Size  Location     Type
 12113 ;;                  1    wreg      void 
 12114 ;; Registers used:
 12115 ;;		wreg, fsr1l, fsr1h, status,2, status,0
 12116 ;; Tracked objects:
 12117 ;;		On entry : 0/0
 12118 ;;		On exit  : 0/0
 12119 ;;		Unchanged: 0/0
 12120 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 12121 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12122 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12123 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12124 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12125 ;;Total ram usage:        2 bytes
 12126 ;; Hardware stack levels used: 1
 12127 ;; This function calls:
 12128 ;;		Nothing
 12129 ;; This function is called by:
 12130 ;;		_get_scale_val
 12131 ;; This function uses a non-reentrant model
 12132 ;;
 12133                           
 12134                           
 12135                           ;psect for function _set_CELL_CLK_HIGH
 12136  1F69                     _set_CELL_CLK_HIGH:
 12137                           
 12138                           ;incstack = 0
 12139                           ; Regs used in _set_CELL_CLK_HIGH: [wreg+fsr1l+fsr1h+status,2+status,0]
 12140                           ;set_CELL_CLK_HIGH@p stored from wreg
 12141  1F69  00F1               	movwf	set_CELL_CLK_HIGH@p
 12142  1F6A                     l3125:
 12143  1F6A  0871               	movf	set_CELL_CLK_HIGH@p,w
 12144  1F6B  0086               	movwf	6
 12145  1F6C  0187               	clrf	7
 12146  1F6D  0801               	movf	1,w
 12147  1F6E  00F0               	movwf	??_set_CELL_CLK_HIGH
 12148  1F6F  0870               	movf	??_set_CELL_CLK_HIGH,w
 12149  1F70  0022               	movlb	2	; select bank2
 12150  1F71  048D               	iorwf	13,f	;volatile
 12151  1F72                     l249:
 12152  1F72  0008               	return
 12153  1F73                     __end_of_set_CELL_CLK_HIGH:
 12154                           
 12155                           	psect	text58
 12156  08EE                     __ptext58:	
 12157 ;; *************** function _get_CELL_DAT_VAL *****************
 12158 ;; Defined at:
 12159 ;;		line 15 in file "loadcell.c"
 12160 ;; Parameters:    Size  Location     Type
 12161 ;;  p               1    wreg     PTR struct .
 12162 ;;		 -> NULL(0), main@loadcell(12), 
 12163 ;; Auto vars:     Size  Location     Type
 12164 ;;  p               1    5[COMMON] PTR struct .
 12165 ;;		 -> NULL(0), main@loadcell(12), 
 12166 ;; Return value:  Size  Location     Type
 12167 ;;                  2    0[COMMON] int 
 12168 ;; Registers used:
 12169 ;;		wreg, fsr1l, fsr1h, status,2, status,0
 12170 ;; Tracked objects:
 12171 ;;		On entry : 0/0
 12172 ;;		On exit  : 0/0
 12173 ;;		Unchanged: 0/0
 12174 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 12175 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12176 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12177 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12178 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12179 ;;Total ram usage:        6 bytes
 12180 ;; Hardware stack levels used: 1
 12181 ;; This function calls:
 12182 ;;		Nothing
 12183 ;; This function is called by:
 12184 ;;		_get_scale_val
 12185 ;; This function uses a non-reentrant model
 12186 ;;
 12187                           
 12188                           
 12189                           ;psect for function _get_CELL_DAT_VAL
 12190  08EE                     _get_CELL_DAT_VAL:
 12191                           
 12192                           ;incstack = 0
 12193                           ; Regs used in _get_CELL_DAT_VAL: [wreg+fsr1l+fsr1h+status,2+status,0]
 12194                           ;get_CELL_DAT_VAL@p stored from wreg
 12195  08EE  00F5               	movwf	get_CELL_DAT_VAL@p
 12196  08EF                     l3127:
 12197                           
 12198                           ;loadcell.c: 16:     if(p->cell_dat == 0x01){ return PORTBbits.RB0; }
 12199  08EF  0A75               	incf	get_CELL_DAT_VAL@p,w
 12200  08F0  0086               	movwf	6
 12201  08F1  0187               	clrf	7
 12202  08F2  0301               	decf	1,w
 12203  08F3  1D03               	btfss	3,2
 12204  08F4  28F6               	goto	u3471
 12205  08F5  28F7               	goto	u3470
 12206  08F6                     u3471:
 12207  08F6  2901               	goto	l3133
 12208  08F7                     u3470:
 12209  08F7                     l3129:
 12210  08F7  0020               	movlb	0	; select bank0
 12211  08F8  080D               	movf	13,w	;volatile
 12212  08F9  3901               	andlw	1
 12213  08FA  00F2               	movwf	??_get_CELL_DAT_VAL
 12214  08FB  01F3               	clrf	??_get_CELL_DAT_VAL+1
 12215  08FC  0872               	movf	??_get_CELL_DAT_VAL,w
 12216  08FD  00F0               	movwf	?_get_CELL_DAT_VAL
 12217  08FE  0873               	movf	??_get_CELL_DAT_VAL+1,w
 12218  08FF  00F1               	movwf	?_get_CELL_DAT_VAL+1
 12219  0900  2990               	goto	l253
 12220  0901                     l3133:
 12221                           
 12222                           ;loadcell.c: 17:     if(p->cell_dat == 0x02){ return PORTBbits.RB1; }
 12223  0901  0A75               	incf	get_CELL_DAT_VAL@p,w
 12224  0902  0086               	movwf	6
 12225  0903  0187               	clrf	7
 12226  0904  3002               	movlw	2
 12227  0905  0601               	xorwf	1,w
 12228  0906  1D03               	btfss	3,2
 12229  0907  2909               	goto	u3481
 12230  0908  290A               	goto	u3480
 12231  0909                     u3481:
 12232  0909  2914               	goto	l3139
 12233  090A                     u3480:
 12234  090A                     l3135:
 12235  090A  0020               	movlb	0	; select bank0
 12236  090B  0C0D               	rrf	13,w	;volatile
 12237  090C  3901               	andlw	1
 12238  090D  00F2               	movwf	??_get_CELL_DAT_VAL
 12239  090E  01F3               	clrf	??_get_CELL_DAT_VAL+1
 12240  090F  0872               	movf	??_get_CELL_DAT_VAL,w
 12241  0910  00F0               	movwf	?_get_CELL_DAT_VAL
 12242  0911  0873               	movf	??_get_CELL_DAT_VAL+1,w
 12243  0912  00F1               	movwf	?_get_CELL_DAT_VAL+1
 12244  0913  2990               	goto	l253
 12245  0914                     l3139:
 12246                           
 12247                           ;loadcell.c: 18:     if(p->cell_dat == 0x04){ return PORTBbits.RB2; }
 12248  0914  0A75               	incf	get_CELL_DAT_VAL@p,w
 12249  0915  0086               	movwf	6
 12250  0916  0187               	clrf	7
 12251  0917  3004               	movlw	4
 12252  0918  0601               	xorwf	1,w
 12253  0919  1D03               	btfss	3,2
 12254  091A  291C               	goto	u3491
 12255  091B  291D               	goto	u3490
 12256  091C                     u3491:
 12257  091C  2928               	goto	l3145
 12258  091D                     u3490:
 12259  091D                     l3141:
 12260  091D  0020               	movlb	0	; select bank0
 12261  091E  0C0D               	rrf	13,w	;volatile
 12262  091F  0C89               	rrf	9,f
 12263  0920  3901               	andlw	1
 12264  0921  00F2               	movwf	??_get_CELL_DAT_VAL
 12265  0922  01F3               	clrf	??_get_CELL_DAT_VAL+1
 12266  0923  0872               	movf	??_get_CELL_DAT_VAL,w
 12267  0924  00F0               	movwf	?_get_CELL_DAT_VAL
 12268  0925  0873               	movf	??_get_CELL_DAT_VAL+1,w
 12269  0926  00F1               	movwf	?_get_CELL_DAT_VAL+1
 12270  0927  2990               	goto	l253
 12271  0928                     l3145:
 12272                           
 12273                           ;loadcell.c: 19:     if(p->cell_dat == 0x08){ return PORTBbits.RB3; }
 12274  0928  0A75               	incf	get_CELL_DAT_VAL@p,w
 12275  0929  0086               	movwf	6
 12276  092A  0187               	clrf	7
 12277  092B  3008               	movlw	8
 12278  092C  0601               	xorwf	1,w
 12279  092D  1D03               	btfss	3,2
 12280  092E  2930               	goto	u3501
 12281  092F  2931               	goto	u3500
 12282  0930                     u3501:
 12283  0930  293E               	goto	l3151
 12284  0931                     u3500:
 12285  0931                     l3147:
 12286  0931  0020               	movlb	0	; select bank0
 12287  0932  0C0D               	rrf	13,w	;volatile
 12288  0933  00F2               	movwf	??_get_CELL_DAT_VAL
 12289  0934  0CF2               	rrf	??_get_CELL_DAT_VAL,f
 12290  0935  0C72               	rrf	??_get_CELL_DAT_VAL,w
 12291  0936  3901               	andlw	1
 12292  0937  00F3               	movwf	??_get_CELL_DAT_VAL+1
 12293  0938  01F4               	clrf	??_get_CELL_DAT_VAL+2
 12294  0939  0873               	movf	??_get_CELL_DAT_VAL+1,w
 12295  093A  00F0               	movwf	?_get_CELL_DAT_VAL
 12296  093B  0874               	movf	??_get_CELL_DAT_VAL+2,w
 12297  093C  00F1               	movwf	?_get_CELL_DAT_VAL+1
 12298  093D  2990               	goto	l253
 12299  093E                     l3151:
 12300                           
 12301                           ;loadcell.c: 20:     if(p->cell_dat == 0x10){ return PORTBbits.RB4; }
 12302  093E  0A75               	incf	get_CELL_DAT_VAL@p,w
 12303  093F  0086               	movwf	6
 12304  0940  0187               	clrf	7
 12305  0941  3010               	movlw	16
 12306  0942  0601               	xorwf	1,w
 12307  0943  1D03               	btfss	3,2
 12308  0944  2946               	goto	u3511
 12309  0945  2947               	goto	u3510
 12310  0946                     u3511:
 12311  0946  2951               	goto	l3157
 12312  0947                     u3510:
 12313  0947                     l3153:
 12314  0947  0020               	movlb	0	; select bank0
 12315  0948  0E0D               	swapf	13,w	;volatile
 12316  0949  3901               	andlw	1
 12317  094A  00F2               	movwf	??_get_CELL_DAT_VAL
 12318  094B  01F3               	clrf	??_get_CELL_DAT_VAL+1
 12319  094C  0872               	movf	??_get_CELL_DAT_VAL,w
 12320  094D  00F0               	movwf	?_get_CELL_DAT_VAL
 12321  094E  0873               	movf	??_get_CELL_DAT_VAL+1,w
 12322  094F  00F1               	movwf	?_get_CELL_DAT_VAL+1
 12323  0950  2990               	goto	l253
 12324  0951                     l3157:
 12325                           
 12326                           ;loadcell.c: 21:     if(p->cell_dat == 0x20){ return PORTBbits.RB5; }
 12327  0951  0A75               	incf	get_CELL_DAT_VAL@p,w
 12328  0952  0086               	movwf	6
 12329  0953  0187               	clrf	7
 12330  0954  3020               	movlw	32
 12331  0955  0601               	xorwf	1,w
 12332  0956  1D03               	btfss	3,2
 12333  0957  2959               	goto	u3521
 12334  0958  295A               	goto	u3520
 12335  0959                     u3521:
 12336  0959  2965               	goto	l3163
 12337  095A                     u3520:
 12338  095A                     l3159:
 12339  095A  0020               	movlb	0	; select bank0
 12340  095B  0E0D               	swapf	13,w	;volatile
 12341  095C  0C89               	rrf	9,f
 12342  095D  3901               	andlw	1
 12343  095E  00F2               	movwf	??_get_CELL_DAT_VAL
 12344  095F  01F3               	clrf	??_get_CELL_DAT_VAL+1
 12345  0960  0872               	movf	??_get_CELL_DAT_VAL,w
 12346  0961  00F0               	movwf	?_get_CELL_DAT_VAL
 12347  0962  0873               	movf	??_get_CELL_DAT_VAL+1,w
 12348  0963  00F1               	movwf	?_get_CELL_DAT_VAL+1
 12349  0964  2990               	goto	l253
 12350  0965                     l3163:
 12351                           
 12352                           ;loadcell.c: 22:     if(p->cell_dat == 0x40){ return PORTBbits.RB6; }
 12353  0965  0A75               	incf	get_CELL_DAT_VAL@p,w
 12354  0966  0086               	movwf	6
 12355  0967  0187               	clrf	7
 12356  0968  3040               	movlw	64
 12357  0969  0601               	xorwf	1,w
 12358  096A  1D03               	btfss	3,2
 12359  096B  296D               	goto	u3531
 12360  096C  296E               	goto	u3530
 12361  096D                     u3531:
 12362  096D  297A               	goto	l3169
 12363  096E                     u3530:
 12364  096E                     l3165:
 12365  096E  0020               	movlb	0	; select bank0
 12366  096F  0E0D               	swapf	13,w	;volatile
 12367  0970  0C89               	rrf	9,f
 12368  0971  0C89               	rrf	9,f
 12369  0972  3901               	andlw	1
 12370  0973  00F2               	movwf	??_get_CELL_DAT_VAL
 12371  0974  01F3               	clrf	??_get_CELL_DAT_VAL+1
 12372  0975  0872               	movf	??_get_CELL_DAT_VAL,w
 12373  0976  00F0               	movwf	?_get_CELL_DAT_VAL
 12374  0977  0873               	movf	??_get_CELL_DAT_VAL+1,w
 12375  0978  00F1               	movwf	?_get_CELL_DAT_VAL+1
 12376  0979  2990               	goto	l253
 12377  097A                     l3169:
 12378                           
 12379                           ;loadcell.c: 23:     if(p->cell_dat == 0x80){ return PORTBbits.RB7; }
 12380  097A  0A75               	incf	get_CELL_DAT_VAL@p,w
 12381  097B  0086               	movwf	6
 12382  097C  0187               	clrf	7
 12383  097D  3080               	movlw	128
 12384  097E  0601               	xorwf	1,w
 12385  097F  1D03               	btfss	3,2
 12386  0980  2982               	goto	u3541
 12387  0981  2983               	goto	u3540
 12388  0982                     u3541:
 12389  0982  298E               	goto	l3175
 12390  0983                     u3540:
 12391  0983                     l3171:
 12392  0983  0020               	movlb	0	; select bank0
 12393  0984  0D0D               	rlf	13,w	;volatile
 12394  0985  0D0D               	rlf	13,w	;volatile
 12395  0986  3901               	andlw	1
 12396  0987  00F2               	movwf	??_get_CELL_DAT_VAL
 12397  0988  01F3               	clrf	??_get_CELL_DAT_VAL+1
 12398  0989  0872               	movf	??_get_CELL_DAT_VAL,w
 12399  098A  00F0               	movwf	?_get_CELL_DAT_VAL
 12400  098B  0873               	movf	??_get_CELL_DAT_VAL+1,w
 12401  098C  00F1               	movwf	?_get_CELL_DAT_VAL+1
 12402  098D  2990               	goto	l253
 12403  098E                     l3175:
 12404                           
 12405                           ;loadcell.c: 25:     return 0;
 12406  098E  01F0               	clrf	?_get_CELL_DAT_VAL
 12407  098F  01F1               	clrf	?_get_CELL_DAT_VAL+1
 12408  0990                     l253:
 12409  0990  0008               	return
 12410  0991                     __end_of_get_CELL_DAT_VAL:
 12411                           
 12412                           	psect	text59
 12413  13B4                     __ptext59:	
 12414 ;; *************** function ___lldiv *****************
 12415 ;; Defined at:
 12416 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\__lldiv.c"
 12417 ;; Parameters:    Size  Location     Type
 12418 ;;  divisor         4    0[COMMON] unsigned long 
 12419 ;;  dividend        4    4[COMMON] unsigned long 
 12420 ;; Auto vars:     Size  Location     Type
 12421 ;;  quotient        4    9[COMMON] unsigned long 
 12422 ;;  counter         1   13[COMMON] unsigned char 
 12423 ;; Return value:  Size  Location     Type
 12424 ;;                  4    0[COMMON] unsigned long 
 12425 ;; Registers used:
 12426 ;;		wreg, status,2, status,0
 12427 ;; Tracked objects:
 12428 ;;		On entry : 0/0
 12429 ;;		On exit  : 0/0
 12430 ;;		Unchanged: 0/0
 12431 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 12432 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12433 ;;      Locals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12434 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12435 ;;      Totals:        14       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12436 ;;Total ram usage:       14 bytes
 12437 ;; Hardware stack levels used: 1
 12438 ;; This function calls:
 12439 ;;		Nothing
 12440 ;; This function is called by:
 12441 ;;		_get_scale_val
 12442 ;; This function uses a non-reentrant model
 12443 ;;
 12444                           
 12445                           
 12446                           ;psect for function ___lldiv
 12447  13B4                     ___lldiv:
 12448  13B4                     l3199:	
 12449                           ;incstack = 0
 12450                           ; Regs used in ___lldiv: [wreg+status,2+status,0]
 12451                           
 12452  13B4  3000               	movlw	0
 12453  13B5  00FC               	movwf	___lldiv@quotient+3
 12454  13B6  3000               	movlw	0
 12455  13B7  00FB               	movwf	___lldiv@quotient+2
 12456  13B8  3000               	movlw	0
 12457  13B9  00FA               	movwf	___lldiv@quotient+1
 12458  13BA  3000               	movlw	0
 12459  13BB  00F9               	movwf	___lldiv@quotient
 12460  13BC  0873               	movf	___lldiv@divisor+3,w
 12461  13BD  0472               	iorwf	___lldiv@divisor+2,w
 12462  13BE  0471               	iorwf	___lldiv@divisor+1,w
 12463  13BF  0470               	iorwf	___lldiv@divisor,w
 12464  13C0  1903               	skipnz
 12465  13C1  2BC3               	goto	u3571
 12466  13C2  2BC4               	goto	u3570
 12467  13C3                     u3571:
 12468  13C3  2C05               	goto	l3219
 12469  13C4                     u3570:
 12470  13C4                     l3201:
 12471  13C4  01FD               	clrf	___lldiv@counter
 12472  13C5  0AFD               	incf	___lldiv@counter,f
 12473  13C6  2BD2               	goto	l3205
 12474  13C7                     l3203:
 12475  13C7  3001               	movlw	1
 12476  13C8                     u3585:
 12477  13C8  35F0               	lslf	___lldiv@divisor,f
 12478  13C9  0DF1               	rlf	___lldiv@divisor+1,f
 12479  13CA  0DF2               	rlf	___lldiv@divisor+2,f
 12480  13CB  0DF3               	rlf	___lldiv@divisor+3,f
 12481  13CC  0B89               	decfsz	9,f
 12482  13CD  2BC8               	goto	u3585
 12483  13CE  3001               	movlw	1
 12484  13CF  00F8               	movwf	??___lldiv
 12485  13D0  0878               	movf	??___lldiv,w
 12486  13D1  07FD               	addwf	___lldiv@counter,f
 12487  13D2                     l3205:
 12488  13D2  1FF3               	btfss	___lldiv@divisor+3,7
 12489  13D3  2BD5               	goto	u3591
 12490  13D4  2BD6               	goto	u3590
 12491  13D5                     u3591:
 12492  13D5  2BC7               	goto	l3203
 12493  13D6                     u3590:
 12494  13D6                     l3207:
 12495  13D6  3001               	movlw	1
 12496  13D7                     u3605:
 12497  13D7  35F9               	lslf	___lldiv@quotient,f
 12498  13D8  0DFA               	rlf	___lldiv@quotient+1,f
 12499  13D9  0DFB               	rlf	___lldiv@quotient+2,f
 12500  13DA  0DFC               	rlf	___lldiv@quotient+3,f
 12501  13DB  0B89               	decfsz	9,f
 12502  13DC  2BD7               	goto	u3605
 12503  13DD                     l3209:
 12504  13DD  0873               	movf	___lldiv@divisor+3,w
 12505  13DE  0277               	subwf	___lldiv@dividend+3,w
 12506  13DF  1D03               	skipz
 12507  13E0  2BEB               	goto	u3615
 12508  13E1  0872               	movf	___lldiv@divisor+2,w
 12509  13E2  0276               	subwf	___lldiv@dividend+2,w
 12510  13E3  1D03               	skipz
 12511  13E4  2BEB               	goto	u3615
 12512  13E5  0871               	movf	___lldiv@divisor+1,w
 12513  13E6  0275               	subwf	___lldiv@dividend+1,w
 12514  13E7  1D03               	skipz
 12515  13E8  2BEB               	goto	u3615
 12516  13E9  0870               	movf	___lldiv@divisor,w
 12517  13EA  0274               	subwf	___lldiv@dividend,w
 12518  13EB                     u3615:
 12519  13EB  1C03               	skipc
 12520  13EC  2BEE               	goto	u3611
 12521  13ED  2BEF               	goto	u3610
 12522  13EE                     u3611:
 12523  13EE  2BF8               	goto	l3215
 12524  13EF                     u3610:
 12525  13EF                     l3211:
 12526  13EF  0870               	movf	___lldiv@divisor,w
 12527  13F0  02F4               	subwf	___lldiv@dividend,f
 12528  13F1  0871               	movf	___lldiv@divisor+1,w
 12529  13F2  3BF5               	subwfb	___lldiv@dividend+1,f
 12530  13F3  0872               	movf	___lldiv@divisor+2,w
 12531  13F4  3BF6               	subwfb	___lldiv@dividend+2,f
 12532  13F5  0873               	movf	___lldiv@divisor+3,w
 12533  13F6  3BF7               	subwfb	___lldiv@dividend+3,f
 12534  13F7                     l3213:
 12535  13F7  1479               	bsf	___lldiv@quotient,0
 12536  13F8                     l3215:
 12537  13F8  3001               	movlw	1
 12538  13F9                     u3625:
 12539  13F9  36F3               	lsrf	___lldiv@divisor+3,f
 12540  13FA  0CF2               	rrf	___lldiv@divisor+2,f
 12541  13FB  0CF1               	rrf	___lldiv@divisor+1,f
 12542  13FC  0CF0               	rrf	___lldiv@divisor,f
 12543  13FD  0B89               	decfsz	9,f
 12544  13FE  2BF9               	goto	u3625
 12545  13FF                     l3217:
 12546  13FF  3001               	movlw	1
 12547  1400  02FD               	subwf	___lldiv@counter,f
 12548  1401  1D03               	btfss	3,2
 12549  1402  2C04               	goto	u3631
 12550  1403  2C05               	goto	u3630
 12551  1404                     u3631:
 12552  1404  2BD6               	goto	l3207
 12553  1405                     u3630:
 12554  1405                     l3219:
 12555  1405  087C               	movf	___lldiv@quotient+3,w
 12556  1406  00F3               	movwf	?___lldiv+3
 12557  1407  087B               	movf	___lldiv@quotient+2,w
 12558  1408  00F2               	movwf	?___lldiv+2
 12559  1409  087A               	movf	___lldiv@quotient+1,w
 12560  140A  00F1               	movwf	?___lldiv+1
 12561  140B  0879               	movf	___lldiv@quotient,w
 12562  140C  00F0               	movwf	?___lldiv
 12563  140D                     l555:
 12564  140D  0008               	return
 12565  140E                     __end_of___lldiv:
 12566                           
 12567                           	psect	text60
 12568  058A                     __ptext60:	
 12569 ;; *************** function ___flmul *****************
 12570 ;; Defined at:
 12571 ;;		line 8 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\sprcmul.c"
 12572 ;; Parameters:    Size  Location     Type
 12573 ;;  b               4   26[BANK0 ] unsigned long 
 12574 ;;  a               4   30[BANK0 ] unsigned long 
 12575 ;; Auto vars:     Size  Location     Type
 12576 ;;  prod            4   46[BANK0 ] struct .
 12577 ;;  grs             4   40[BANK0 ] unsigned long 
 12578 ;;  temp            2   50[BANK0 ] struct .
 12579 ;;  bexp            1   45[BANK0 ] unsigned char 
 12580 ;;  aexp            1   44[BANK0 ] unsigned char 
 12581 ;;  sign            1   39[BANK0 ] unsigned char 
 12582 ;; Return value:  Size  Location     Type
 12583 ;;                  4   26[BANK0 ] unsigned char 
 12584 ;; Registers used:
 12585 ;;		wreg, status,2, status,0, pclath, cstack
 12586 ;; Tracked objects:
 12587 ;;		On entry : 0/0
 12588 ;;		On exit  : 0/0
 12589 ;;		Unchanged: 0/0
 12590 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 12591 ;;      Params:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12592 ;;      Locals:         0      13       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12593 ;;      Temps:          0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12594 ;;      Totals:         0      26       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12595 ;;Total ram usage:       26 bytes
 12596 ;; Hardware stack levels used: 1
 12597 ;; Hardware stack levels required when called: 1
 12598 ;; This function calls:
 12599 ;;		__Umul8_16
 12600 ;; This function is called by:
 12601 ;;		_calc_percentage
 12602 ;; This function uses a non-reentrant model
 12603 ;;
 12604                           
 12605                           
 12606                           ;psect for function ___flmul
 12607  058A                     ___flmul:
 12608  058A                     l3649:	
 12609                           ;incstack = 0
 12610                           ; Regs used in ___flmul: [wreg+status,2+status,0+pclath+cstack]
 12611                           
 12612  058A  0020               	movlb	0	; select bank0
 12613  058B  083D               	movf	___flmul@b+3,w
 12614  058C  3980               	andlw	128
 12615  058D  00C2               	movwf	??___flmul
 12616  058E  0842               	movf	??___flmul,w
 12617  058F  00C7               	movwf	___flmul@sign
 12618  0590                     l3651:
 12619  0590  353D               	lslf	___flmul@b+3,w
 12620  0591  00C2               	movwf	??___flmul
 12621  0592  0842               	movf	??___flmul,w
 12622  0593  00CD               	movwf	___flmul@bexp
 12623  0594                     l3653:
 12624  0594  1FBC               	btfss	___flmul@b+2,7
 12625  0595  2D97               	goto	u4301
 12626  0596  2D98               	goto	u4300
 12627  0597                     u4301:
 12628  0597  2D99               	goto	l3657
 12629  0598                     u4300:
 12630  0598                     l3655:
 12631  0598  144D               	bsf	___flmul@bexp,0
 12632  0599                     l3657:
 12633  0599  084D               	movf	___flmul@bexp,w
 12634  059A  1903               	btfsc	3,2
 12635  059B  2D9D               	goto	u4311
 12636  059C  2D9E               	goto	u4310
 12637  059D                     u4311:
 12638  059D  2DAD               	goto	l3665
 12639  059E                     u4310:
 12640  059E                     l3659:
 12641  059E  0A4D               	incf	___flmul@bexp,w
 12642  059F  1D03               	btfss	3,2
 12643  05A0  2DA2               	goto	u4321
 12644  05A1  2DA3               	goto	u4320
 12645  05A2                     u4321:
 12646  05A2  2DAB               	goto	l3663
 12647  05A3                     u4320:
 12648  05A3                     l3661:
 12649  05A3  3000               	movlw	0
 12650  05A4  00BD               	movwf	___flmul@b+3
 12651  05A5  3000               	movlw	0
 12652  05A6  00BC               	movwf	___flmul@b+2
 12653  05A7  3000               	movlw	0
 12654  05A8  00BB               	movwf	___flmul@b+1
 12655  05A9  3000               	movlw	0
 12656  05AA  00BA               	movwf	___flmul@b
 12657  05AB                     l3663:
 12658  05AB  17BC               	bsf	___flmul@b+2,7
 12659  05AC  2DB5               	goto	l3667
 12660  05AD                     l3665:
 12661  05AD  3000               	movlw	0
 12662  05AE  00BD               	movwf	___flmul@b+3
 12663  05AF  3000               	movlw	0
 12664  05B0  00BC               	movwf	___flmul@b+2
 12665  05B1  3000               	movlw	0
 12666  05B2  00BB               	movwf	___flmul@b+1
 12667  05B3  3000               	movlw	0
 12668  05B4  00BA               	movwf	___flmul@b
 12669  05B5                     l3667:
 12670  05B5  0841               	movf	___flmul@a+3,w
 12671  05B6  3980               	andlw	128
 12672  05B7  00C2               	movwf	??___flmul
 12673  05B8  0842               	movf	??___flmul,w
 12674  05B9  06C7               	xorwf	___flmul@sign,f
 12675  05BA                     l3669:
 12676  05BA  3541               	lslf	___flmul@a+3,w
 12677  05BB  00C2               	movwf	??___flmul
 12678  05BC  0842               	movf	??___flmul,w
 12679  05BD  00CC               	movwf	___flmul@aexp
 12680  05BE                     l3671:
 12681  05BE  1FC0               	btfss	___flmul@a+2,7
 12682  05BF  2DC1               	goto	u4331
 12683  05C0  2DC2               	goto	u4330
 12684  05C1                     u4331:
 12685  05C1  2DC3               	goto	l3675
 12686  05C2                     u4330:
 12687  05C2                     l3673:
 12688  05C2  144C               	bsf	___flmul@aexp,0
 12689  05C3                     l3675:
 12690  05C3  084C               	movf	___flmul@aexp,w
 12691  05C4  1903               	btfsc	3,2
 12692  05C5  2DC7               	goto	u4341
 12693  05C6  2DC8               	goto	u4340
 12694  05C7                     u4341:
 12695  05C7  2DD7               	goto	l3683
 12696  05C8                     u4340:
 12697  05C8                     l3677:
 12698  05C8  0A4C               	incf	___flmul@aexp,w
 12699  05C9  1D03               	btfss	3,2
 12700  05CA  2DCC               	goto	u4351
 12701  05CB  2DCD               	goto	u4350
 12702  05CC                     u4351:
 12703  05CC  2DD5               	goto	l3681
 12704  05CD                     u4350:
 12705  05CD                     l3679:
 12706  05CD  3000               	movlw	0
 12707  05CE  00C1               	movwf	___flmul@a+3
 12708  05CF  3000               	movlw	0
 12709  05D0  00C0               	movwf	___flmul@a+2
 12710  05D1  3000               	movlw	0
 12711  05D2  00BF               	movwf	___flmul@a+1
 12712  05D3  3000               	movlw	0
 12713  05D4  00BE               	movwf	___flmul@a
 12714  05D5                     l3681:
 12715  05D5  17C0               	bsf	___flmul@a+2,7
 12716  05D6  2DDF               	goto	l3685
 12717  05D7                     l3683:
 12718  05D7  3000               	movlw	0
 12719  05D8  00C1               	movwf	___flmul@a+3
 12720  05D9  3000               	movlw	0
 12721  05DA  00C0               	movwf	___flmul@a+2
 12722  05DB  3000               	movlw	0
 12723  05DC  00BF               	movwf	___flmul@a+1
 12724  05DD  3000               	movlw	0
 12725  05DE  00BE               	movwf	___flmul@a
 12726  05DF                     l3685:
 12727  05DF  084C               	movf	___flmul@aexp,w
 12728  05E0  1903               	btfsc	3,2
 12729  05E1  2DE3               	goto	u4361
 12730  05E2  2DE4               	goto	u4360
 12731  05E3                     u4361:
 12732  05E3  2DE9               	goto	l3689
 12733  05E4                     u4360:
 12734  05E4                     l3687:
 12735  05E4  084D               	movf	___flmul@bexp,w
 12736  05E5  1D03               	btfss	3,2
 12737  05E6  2DE8               	goto	u4371
 12738  05E7  2DE9               	goto	u4370
 12739  05E8                     u4371:
 12740  05E8  2DF2               	goto	l3693
 12741  05E9                     u4370:
 12742  05E9                     l3689:
 12743  05E9  3000               	movlw	0
 12744  05EA  00BD               	movwf	?___flmul+3
 12745  05EB  3000               	movlw	0
 12746  05EC  00BC               	movwf	?___flmul+2
 12747  05ED  3000               	movlw	0
 12748  05EE  00BB               	movwf	?___flmul+1
 12749  05EF  3000               	movlw	0
 12750  05F0  00BA               	movwf	?___flmul
 12751  05F1  2FE0               	goto	l916
 12752  05F2                     l3693:
 12753  05F2  083A               	movf	___flmul@b,w
 12754  05F3  00C2               	movwf	??___flmul
 12755  05F4  0842               	movf	??___flmul,w
 12756  05F5  00F0               	movwf	__Umul8_16@multiplicand
 12757  05F6  0840               	movf	___flmul@a+2,w
 12758  05F7  3190  20F3  3185   	fcall	__Umul8_16
 12759  05FA  0871               	movf	?__Umul8_16+1,w
 12760  05FB  0020               	movlb	0	; select bank0
 12761  05FC  00D3               	movwf	___flmul@temp+1
 12762  05FD  0870               	movf	?__Umul8_16,w
 12763  05FE  00D2               	movwf	___flmul@temp
 12764  05FF                     l3695:
 12765  05FF  0852               	movf	___flmul@temp,w
 12766  0600  00C2               	movwf	??___flmul
 12767  0601  01C3               	clrf	??___flmul+1
 12768  0602  01C4               	clrf	??___flmul+2
 12769  0603  01C5               	clrf	??___flmul+3
 12770  0604  0845               	movf	??___flmul+3,w
 12771  0605  00CB               	movwf	___flmul@grs+3
 12772  0606  0844               	movf	??___flmul+2,w
 12773  0607  00CA               	movwf	___flmul@grs+2
 12774  0608  0843               	movf	??___flmul+1,w
 12775  0609  00C9               	movwf	___flmul@grs+1
 12776  060A  0842               	movf	??___flmul,w
 12777  060B  00C8               	movwf	___flmul@grs
 12778  060C                     l3697:
 12779  060C  0853               	movf	___flmul@temp+1,w
 12780  060D  00C2               	movwf	??___flmul
 12781  060E  01C3               	clrf	??___flmul+1
 12782  060F  01C4               	clrf	??___flmul+2
 12783  0610  01C5               	clrf	??___flmul+3
 12784  0611  0845               	movf	??___flmul+3,w
 12785  0612  00D1               	movwf	___flmul@prod+3
 12786  0613  0844               	movf	??___flmul+2,w
 12787  0614  00D0               	movwf	___flmul@prod+2
 12788  0615  0843               	movf	??___flmul+1,w
 12789  0616  00CF               	movwf	___flmul@prod+1
 12790  0617  0842               	movf	??___flmul,w
 12791  0618  00CE               	movwf	___flmul@prod
 12792  0619  083B               	movf	___flmul@b+1,w
 12793  061A  00C2               	movwf	??___flmul
 12794  061B  0842               	movf	??___flmul,w
 12795  061C  00F0               	movwf	__Umul8_16@multiplicand
 12796  061D  083F               	movf	___flmul@a+1,w
 12797  061E  3190  20F3  3185   	fcall	__Umul8_16
 12798  0621  0871               	movf	?__Umul8_16+1,w
 12799  0622  0020               	movlb	0	; select bank0
 12800  0623  00D3               	movwf	___flmul@temp+1
 12801  0624  0870               	movf	?__Umul8_16,w
 12802  0625  00D2               	movwf	___flmul@temp
 12803  0626                     l3699:
 12804  0626  0852               	movf	___flmul@temp,w
 12805  0627  00C2               	movwf	??___flmul
 12806  0628  01C3               	clrf	??___flmul+1
 12807  0629  01C4               	clrf	??___flmul+2
 12808  062A  01C5               	clrf	??___flmul+3
 12809  062B  0842               	movf	??___flmul,w
 12810  062C  07C8               	addwf	___flmul@grs,f
 12811  062D  0843               	movf	??___flmul+1,w
 12812  062E  3DC9               	addwfc	___flmul@grs+1,f
 12813  062F  0844               	movf	??___flmul+2,w
 12814  0630  3DCA               	addwfc	___flmul@grs+2,f
 12815  0631  0845               	movf	??___flmul+3,w
 12816  0632  3DCB               	addwfc	___flmul@grs+3,f
 12817  0633                     l3701:
 12818  0633  0853               	movf	___flmul@temp+1,w
 12819  0634  00C2               	movwf	??___flmul
 12820  0635  01C3               	clrf	??___flmul+1
 12821  0636  01C4               	clrf	??___flmul+2
 12822  0637  01C5               	clrf	??___flmul+3
 12823  0638  0842               	movf	??___flmul,w
 12824  0639  07CE               	addwf	___flmul@prod,f
 12825  063A  0843               	movf	??___flmul+1,w
 12826  063B  3DCF               	addwfc	___flmul@prod+1,f
 12827  063C  0844               	movf	??___flmul+2,w
 12828  063D  3DD0               	addwfc	___flmul@prod+2,f
 12829  063E  0845               	movf	??___flmul+3,w
 12830  063F  3DD1               	addwfc	___flmul@prod+3,f
 12831  0640  083C               	movf	___flmul@b+2,w
 12832  0641  00C2               	movwf	??___flmul
 12833  0642  0842               	movf	??___flmul,w
 12834  0643  00F0               	movwf	__Umul8_16@multiplicand
 12835  0644  083E               	movf	___flmul@a,w
 12836  0645  3190  20F3  3185   	fcall	__Umul8_16
 12837  0648  0871               	movf	?__Umul8_16+1,w
 12838  0649  0020               	movlb	0	; select bank0
 12839  064A  00D3               	movwf	___flmul@temp+1
 12840  064B  0870               	movf	?__Umul8_16,w
 12841  064C  00D2               	movwf	___flmul@temp
 12842  064D                     l3703:
 12843  064D  0852               	movf	___flmul@temp,w
 12844  064E  00C2               	movwf	??___flmul
 12845  064F  01C3               	clrf	??___flmul+1
 12846  0650  01C4               	clrf	??___flmul+2
 12847  0651  01C5               	clrf	??___flmul+3
 12848  0652  0842               	movf	??___flmul,w
 12849  0653  07C8               	addwf	___flmul@grs,f
 12850  0654  0843               	movf	??___flmul+1,w
 12851  0655  3DC9               	addwfc	___flmul@grs+1,f
 12852  0656  0844               	movf	??___flmul+2,w
 12853  0657  3DCA               	addwfc	___flmul@grs+2,f
 12854  0658  0845               	movf	??___flmul+3,w
 12855  0659  3DCB               	addwfc	___flmul@grs+3,f
 12856  065A                     l3705:
 12857  065A  0853               	movf	___flmul@temp+1,w
 12858  065B  00C2               	movwf	??___flmul
 12859  065C  01C3               	clrf	??___flmul+1
 12860  065D  01C4               	clrf	??___flmul+2
 12861  065E  01C5               	clrf	??___flmul+3
 12862  065F  0842               	movf	??___flmul,w
 12863  0660  07CE               	addwf	___flmul@prod,f
 12864  0661  0843               	movf	??___flmul+1,w
 12865  0662  3DCF               	addwfc	___flmul@prod+1,f
 12866  0663  0844               	movf	??___flmul+2,w
 12867  0664  3DD0               	addwfc	___flmul@prod+2,f
 12868  0665  0845               	movf	??___flmul+3,w
 12869  0666  3DD1               	addwfc	___flmul@prod+3,f
 12870  0667                     l3707:
 12871  0667  3008               	movlw	8
 12872  0668                     u4385:
 12873  0668  35C8               	lslf	___flmul@grs,f
 12874  0669  0DC9               	rlf	___flmul@grs+1,f
 12875  066A  0DCA               	rlf	___flmul@grs+2,f
 12876  066B  0DCB               	rlf	___flmul@grs+3,f
 12877  066C  0B89               	decfsz	9,f
 12878  066D  2E68               	goto	u4385
 12879  066E                     l3709:
 12880  066E  083B               	movf	___flmul@b+1,w
 12881  066F  00C2               	movwf	??___flmul
 12882  0670  0842               	movf	??___flmul,w
 12883  0671  00F0               	movwf	__Umul8_16@multiplicand
 12884  0672  083E               	movf	___flmul@a,w
 12885  0673  3190  20F3  3185   	fcall	__Umul8_16
 12886  0676  0871               	movf	?__Umul8_16+1,w
 12887  0677  0020               	movlb	0	; select bank0
 12888  0678  00D3               	movwf	___flmul@temp+1
 12889  0679  0870               	movf	?__Umul8_16,w
 12890  067A  00D2               	movwf	___flmul@temp
 12891  067B                     l3711:
 12892  067B  0852               	movf	___flmul@temp,w
 12893  067C  07C8               	addwf	___flmul@grs,f
 12894  067D  0853               	movf	___flmul@temp+1,w
 12895  067E  3DC9               	addwfc	___flmul@grs+1,f
 12896  067F  3000               	movlw	0
 12897  0680  3DCA               	addwfc	___flmul@grs+2,f
 12898  0681  3DCB               	addwfc	___flmul@grs+3,f
 12899  0682                     l3713:
 12900  0682  083A               	movf	___flmul@b,w
 12901  0683  00C2               	movwf	??___flmul
 12902  0684  0842               	movf	??___flmul,w
 12903  0685  00F0               	movwf	__Umul8_16@multiplicand
 12904  0686  083F               	movf	___flmul@a+1,w
 12905  0687  3190  20F3  3185   	fcall	__Umul8_16
 12906  068A  0871               	movf	?__Umul8_16+1,w
 12907  068B  0020               	movlb	0	; select bank0
 12908  068C  00D3               	movwf	___flmul@temp+1
 12909  068D  0870               	movf	?__Umul8_16,w
 12910  068E  00D2               	movwf	___flmul@temp
 12911  068F                     l3715:
 12912  068F  0852               	movf	___flmul@temp,w
 12913  0690  07C8               	addwf	___flmul@grs,f
 12914  0691  0853               	movf	___flmul@temp+1,w
 12915  0692  3DC9               	addwfc	___flmul@grs+1,f
 12916  0693  3000               	movlw	0
 12917  0694  3DCA               	addwfc	___flmul@grs+2,f
 12918  0695  3DCB               	addwfc	___flmul@grs+3,f
 12919  0696                     l3717:
 12920  0696  3008               	movlw	8
 12921  0697                     u4395:
 12922  0697  35C8               	lslf	___flmul@grs,f
 12923  0698  0DC9               	rlf	___flmul@grs+1,f
 12924  0699  0DCA               	rlf	___flmul@grs+2,f
 12925  069A  0DCB               	rlf	___flmul@grs+3,f
 12926  069B  0B89               	decfsz	9,f
 12927  069C  2E97               	goto	u4395
 12928  069D  083A               	movf	___flmul@b,w
 12929  069E  00C2               	movwf	??___flmul
 12930  069F  0842               	movf	??___flmul,w
 12931  06A0  00F0               	movwf	__Umul8_16@multiplicand
 12932  06A1  083E               	movf	___flmul@a,w
 12933  06A2  3190  20F3  3185   	fcall	__Umul8_16
 12934  06A5  0871               	movf	?__Umul8_16+1,w
 12935  06A6  0020               	movlb	0	; select bank0
 12936  06A7  00D3               	movwf	___flmul@temp+1
 12937  06A8  0870               	movf	?__Umul8_16,w
 12938  06A9  00D2               	movwf	___flmul@temp
 12939  06AA                     l3719:
 12940  06AA  0852               	movf	___flmul@temp,w
 12941  06AB  07C8               	addwf	___flmul@grs,f
 12942  06AC  0853               	movf	___flmul@temp+1,w
 12943  06AD  3DC9               	addwfc	___flmul@grs+1,f
 12944  06AE  3000               	movlw	0
 12945  06AF  3DCA               	addwfc	___flmul@grs+2,f
 12946  06B0  3DCB               	addwfc	___flmul@grs+3,f
 12947  06B1                     l3721:
 12948  06B1  083B               	movf	___flmul@b+1,w
 12949  06B2  00C2               	movwf	??___flmul
 12950  06B3  0842               	movf	??___flmul,w
 12951  06B4  00F0               	movwf	__Umul8_16@multiplicand
 12952  06B5  0840               	movf	___flmul@a+2,w
 12953  06B6  3190  20F3  3185   	fcall	__Umul8_16
 12954  06B9  0871               	movf	?__Umul8_16+1,w
 12955  06BA  0020               	movlb	0	; select bank0
 12956  06BB  00D3               	movwf	___flmul@temp+1
 12957  06BC  0870               	movf	?__Umul8_16,w
 12958  06BD  00D2               	movwf	___flmul@temp
 12959  06BE  0852               	movf	___flmul@temp,w
 12960  06BF  07CE               	addwf	___flmul@prod,f
 12961  06C0  0853               	movf	___flmul@temp+1,w
 12962  06C1  3DCF               	addwfc	___flmul@prod+1,f
 12963  06C2  3000               	movlw	0
 12964  06C3  3DD0               	addwfc	___flmul@prod+2,f
 12965  06C4  3DD1               	addwfc	___flmul@prod+3,f
 12966  06C5                     l3723:
 12967  06C5  083C               	movf	___flmul@b+2,w
 12968  06C6  00C2               	movwf	??___flmul
 12969  06C7  0842               	movf	??___flmul,w
 12970  06C8  00F0               	movwf	__Umul8_16@multiplicand
 12971  06C9  083F               	movf	___flmul@a+1,w
 12972  06CA  3190  20F3  3185   	fcall	__Umul8_16
 12973  06CD  0871               	movf	?__Umul8_16+1,w
 12974  06CE  0020               	movlb	0	; select bank0
 12975  06CF  00D3               	movwf	___flmul@temp+1
 12976  06D0  0870               	movf	?__Umul8_16,w
 12977  06D1  00D2               	movwf	___flmul@temp
 12978  06D2                     l3725:
 12979  06D2  0852               	movf	___flmul@temp,w
 12980  06D3  07CE               	addwf	___flmul@prod,f
 12981  06D4  0853               	movf	___flmul@temp+1,w
 12982  06D5  3DCF               	addwfc	___flmul@prod+1,f
 12983  06D6  3000               	movlw	0
 12984  06D7  3DD0               	addwfc	___flmul@prod+2,f
 12985  06D8  3DD1               	addwfc	___flmul@prod+3,f
 12986  06D9  083C               	movf	___flmul@b+2,w
 12987  06DA  00C2               	movwf	??___flmul
 12988  06DB  0842               	movf	??___flmul,w
 12989  06DC  00F0               	movwf	__Umul8_16@multiplicand
 12990  06DD  0840               	movf	___flmul@a+2,w
 12991  06DE  3190  20F3  3185   	fcall	__Umul8_16
 12992  06E1  0871               	movf	?__Umul8_16+1,w
 12993  06E2  0020               	movlb	0	; select bank0
 12994  06E3  00D3               	movwf	___flmul@temp+1
 12995  06E4  0870               	movf	?__Umul8_16,w
 12996  06E5  00D2               	movwf	___flmul@temp
 12997  06E6                     l3727:
 12998  06E6  0852               	movf	___flmul@temp,w
 12999  06E7  00C2               	movwf	??___flmul
 13000  06E8  0853               	movf	___flmul@temp+1,w
 13001  06E9  00C3               	movwf	??___flmul+1
 13002  06EA  01C4               	clrf	??___flmul+2
 13003  06EB  01C5               	clrf	??___flmul+3
 13004  06EC  3008               	movlw	8
 13005  06ED                     u4405:
 13006  06ED  35C2               	lslf	??___flmul,f
 13007  06EE  0DC3               	rlf	??___flmul+1,f
 13008  06EF  0DC4               	rlf	??___flmul+2,f
 13009  06F0  0DC5               	rlf	??___flmul+3,f
 13010  06F1                     u4400:
 13011  06F1  0B89               	decfsz	9,f
 13012  06F2  2EED               	goto	u4405
 13013  06F3  0842               	movf	??___flmul,w
 13014  06F4  07CE               	addwf	___flmul@prod,f
 13015  06F5  0843               	movf	??___flmul+1,w
 13016  06F6  3DCF               	addwfc	___flmul@prod+1,f
 13017  06F7  0844               	movf	??___flmul+2,w
 13018  06F8  3DD0               	addwfc	___flmul@prod+2,f
 13019  06F9  0845               	movf	??___flmul+3,w
 13020  06FA  3DD1               	addwfc	___flmul@prod+3,f
 13021  06FB                     l3729:
 13022  06FB  0848               	movf	___flmul@grs,w
 13023  06FC  00C2               	movwf	??___flmul
 13024  06FD  0849               	movf	___flmul@grs+1,w
 13025  06FE  00C3               	movwf	??___flmul+1
 13026  06FF  084A               	movf	___flmul@grs+2,w
 13027  0700  00C4               	movwf	??___flmul+2
 13028  0701  084B               	movf	___flmul@grs+3,w
 13029  0702  00C5               	movwf	??___flmul+3
 13030  0703  3018               	movlw	24
 13031  0704                     u4415:
 13032  0704  36C5               	lsrf	??___flmul+3,f
 13033  0705  0CC4               	rrf	??___flmul+2,f
 13034  0706  0CC3               	rrf	??___flmul+1,f
 13035  0707  0CC2               	rrf	??___flmul,f
 13036  0708                     u4410:
 13037  0708  0B89               	decfsz	9,f
 13038  0709  2F04               	goto	u4415
 13039  070A  0842               	movf	??___flmul,w
 13040  070B  07CE               	addwf	___flmul@prod,f
 13041  070C  0843               	movf	??___flmul+1,w
 13042  070D  3DCF               	addwfc	___flmul@prod+1,f
 13043  070E  0844               	movf	??___flmul+2,w
 13044  070F  3DD0               	addwfc	___flmul@prod+2,f
 13045  0710  0845               	movf	??___flmul+3,w
 13046  0711  3DD1               	addwfc	___flmul@prod+3,f
 13047  0712                     l3731:
 13048  0712  3008               	movlw	8
 13049  0713                     u4425:
 13050  0713  35C8               	lslf	___flmul@grs,f
 13051  0714  0DC9               	rlf	___flmul@grs+1,f
 13052  0715  0DCA               	rlf	___flmul@grs+2,f
 13053  0716  0DCB               	rlf	___flmul@grs+3,f
 13054  0717  0B89               	decfsz	9,f
 13055  0718  2F13               	goto	u4425
 13056  0719                     l3733:
 13057  0719  084D               	movf	___flmul@bexp,w
 13058  071A  074C               	addwf	___flmul@aexp,w
 13059  071B  00C2               	movwf	??___flmul
 13060  071C  01C3               	clrf	??___flmul+1
 13061  071D  0DC3               	rlf	??___flmul+1,f
 13062  071E  0842               	movf	??___flmul,w
 13063  071F  3E82               	addlw	130
 13064  0720  00D2               	movwf	___flmul@temp
 13065  0721  30FF               	movlw	255
 13066  0722  3D43               	addwfc	??___flmul+1,w
 13067  0723  00D3               	movwf	___flmul@temp+1
 13068  0724  2F3C               	goto	l3745
 13069  0725                     l3735:
 13070  0725  3001               	movlw	1
 13071  0726                     u4435:
 13072  0726  35CE               	lslf	___flmul@prod,f
 13073  0727  0DCF               	rlf	___flmul@prod+1,f
 13074  0728  0DD0               	rlf	___flmul@prod+2,f
 13075  0729  0DD1               	rlf	___flmul@prod+3,f
 13076  072A  0B89               	decfsz	9,f
 13077  072B  2F26               	goto	u4435
 13078  072C                     l3737:
 13079  072C  1FCB               	btfss	___flmul@grs+3,7
 13080  072D  2F2F               	goto	u4441
 13081  072E  2F30               	goto	u4440
 13082  072F                     u4441:
 13083  072F  2F31               	goto	l3741
 13084  0730                     u4440:
 13085  0730                     l3739:
 13086  0730  144E               	bsf	___flmul@prod,0
 13087  0731                     l3741:
 13088  0731  3001               	movlw	1
 13089  0732                     u4455:
 13090  0732  35C8               	lslf	___flmul@grs,f
 13091  0733  0DC9               	rlf	___flmul@grs+1,f
 13092  0734  0DCA               	rlf	___flmul@grs+2,f
 13093  0735  0DCB               	rlf	___flmul@grs+3,f
 13094  0736  0B89               	decfsz	9,f
 13095  0737  2F32               	goto	u4455
 13096  0738                     l3743:
 13097  0738  30FF               	movlw	255
 13098  0739  07D2               	addwf	___flmul@temp,f
 13099  073A  30FF               	movlw	255
 13100  073B  3DD3               	addwfc	___flmul@temp+1,f
 13101  073C                     l3745:
 13102  073C  1FD0               	btfss	___flmul@prod+2,7
 13103  073D  2F3F               	goto	u4461
 13104  073E  2F40               	goto	u4460
 13105  073F                     u4461:
 13106  073F  2F25               	goto	l3735
 13107  0740                     u4460:
 13108  0740                     l3747:
 13109  0740  01CC               	clrf	___flmul@aexp
 13110  0741                     l3749:
 13111  0741  1FCB               	btfss	___flmul@grs+3,7
 13112  0742  2F44               	goto	u4471
 13113  0743  2F45               	goto	u4470
 13114  0744                     u4471:
 13115  0744  2F61               	goto	l3757
 13116  0745                     u4470:
 13117  0745                     l3751:
 13118  0745  30FF               	movlw	255
 13119  0746  0548               	andwf	___flmul@grs,w
 13120  0747  00C2               	movwf	??___flmul
 13121  0748  30FF               	movlw	255
 13122  0749  0549               	andwf	___flmul@grs+1,w
 13123  074A  00C3               	movwf	??___flmul+1
 13124  074B  30FF               	movlw	255
 13125  074C  054A               	andwf	___flmul@grs+2,w
 13126  074D  00C4               	movwf	??___flmul+2
 13127  074E  307F               	movlw	127
 13128  074F  054B               	andwf	___flmul@grs+3,w
 13129  0750  00C5               	movwf	??___flmul+3
 13130  0751  0845               	movf	??___flmul+3,w
 13131  0752  0444               	iorwf	??___flmul+2,w
 13132  0753  0443               	iorwf	??___flmul+1,w
 13133  0754  0442               	iorwf	??___flmul,w
 13134  0755  1903               	skipnz
 13135  0756  2F58               	goto	u4481
 13136  0757  2F59               	goto	u4480
 13137  0758                     u4481:
 13138  0758  2F5C               	goto	l922
 13139  0759                     u4480:
 13140  0759                     l3753:
 13141  0759  01CC               	clrf	___flmul@aexp
 13142  075A  0ACC               	incf	___flmul@aexp,f
 13143  075B  2F61               	goto	l3757
 13144  075C                     l922:
 13145  075C  1C4E               	btfss	___flmul@prod,0
 13146  075D  2F5F               	goto	u4491
 13147  075E  2F60               	goto	u4490
 13148  075F                     u4491:
 13149  075F  2F61               	goto	l3757
 13150  0760                     u4490:
 13151  0760  2F59               	goto	l3753
 13152  0761                     l3757:
 13153  0761  084C               	movf	___flmul@aexp,w
 13154  0762  1903               	btfsc	3,2
 13155  0763  2F65               	goto	u4501
 13156  0764  2F66               	goto	u4500
 13157  0765                     u4501:
 13158  0765  2F8E               	goto	l3767
 13159  0766                     u4500:
 13160  0766                     l3759:
 13161  0766  3001               	movlw	1
 13162  0767  07CE               	addwf	___flmul@prod,f
 13163  0768  3000               	movlw	0
 13164  0769  3DCF               	addwfc	___flmul@prod+1,f
 13165  076A  3000               	movlw	0
 13166  076B  3DD0               	addwfc	___flmul@prod+2,f
 13167  076C  3000               	movlw	0
 13168  076D  3DD1               	addwfc	___flmul@prod+3,f
 13169  076E                     l3761:
 13170  076E  1C51               	btfss	___flmul@prod+3,0
 13171  076F  2F71               	goto	u4511
 13172  0770  2F72               	goto	u4510
 13173  0771                     u4511:
 13174  0771  2F8E               	goto	l3767
 13175  0772                     u4510:
 13176  0772                     l3763:
 13177  0772  084E               	movf	___flmul@prod,w
 13178  0773  00C2               	movwf	??___flmul
 13179  0774  084F               	movf	___flmul@prod+1,w
 13180  0775  00C3               	movwf	??___flmul+1
 13181  0776  0850               	movf	___flmul@prod+2,w
 13182  0777  00C4               	movwf	??___flmul+2
 13183  0778  0851               	movf	___flmul@prod+3,w
 13184  0779  00C5               	movwf	??___flmul+3
 13185  077A  3001               	movlw	1
 13186  077B  00C6               	movwf	??___flmul+4
 13187  077C                     u4525:
 13188  077C  37C5               	asrf	??___flmul+3,f
 13189  077D  0CC4               	rrf	??___flmul+2,f
 13190  077E  0CC3               	rrf	??___flmul+1,f
 13191  077F  0CC2               	rrf	??___flmul,f
 13192  0780                     u4520:
 13193  0780  0BC6               	decfsz	??___flmul+4,f
 13194  0781  2F7C               	goto	u4525
 13195  0782  0845               	movf	??___flmul+3,w
 13196  0783  00D1               	movwf	___flmul@prod+3
 13197  0784  0844               	movf	??___flmul+2,w
 13198  0785  00D0               	movwf	___flmul@prod+2
 13199  0786  0843               	movf	??___flmul+1,w
 13200  0787  00CF               	movwf	___flmul@prod+1
 13201  0788  0842               	movf	??___flmul,w
 13202  0789  00CE               	movwf	___flmul@prod
 13203  078A                     l3765:
 13204  078A  3001               	movlw	1
 13205  078B  07D2               	addwf	___flmul@temp,f
 13206  078C  3000               	movlw	0
 13207  078D  3DD3               	addwfc	___flmul@temp+1,f
 13208  078E                     l3767:
 13209  078E  0853               	movf	___flmul@temp+1,w
 13210  078F  3A80               	xorlw	128
 13211  0790  00C2               	movwf	??___flmul
 13212  0791  3080               	movlw	128
 13213  0792  0242               	subwf	??___flmul,w
 13214  0793  1D03               	skipz
 13215  0794  2F97               	goto	u4535
 13216  0795  30FF               	movlw	255
 13217  0796  0252               	subwf	___flmul@temp,w
 13218  0797                     u4535:
 13219  0797  1C03               	skipc
 13220  0798  2F9A               	goto	u4531
 13221  0799  2F9B               	goto	u4530
 13222  079A                     u4531:
 13223  079A  2FA5               	goto	l3771
 13224  079B                     u4530:
 13225  079B                     l3769:
 13226  079B  307F               	movlw	127
 13227  079C  0020               	movlb	0	; select bank0
 13228  079D  00D1               	movwf	___flmul@prod+3
 13229  079E  3080               	movlw	128
 13230  079F  00D0               	movwf	___flmul@prod+2
 13231  07A0  3000               	movlw	0
 13232  07A1  00CF               	movwf	___flmul@prod+1
 13233  07A2  3000               	movlw	0
 13234  07A3  00CE               	movwf	___flmul@prod
 13235  07A4  2FD4               	goto	l928
 13236  07A5                     l3771:
 13237  07A5  0020               	movlb	0	; select bank0
 13238  07A6  0853               	movf	___flmul@temp+1,w
 13239  07A7  3A80               	xorlw	128
 13240  07A8  00C2               	movwf	??___flmul
 13241  07A9  3080               	movlw	128
 13242  07AA  0242               	subwf	??___flmul,w
 13243  07AB  1D03               	skipz
 13244  07AC  2FAF               	goto	u4545
 13245  07AD  3001               	movlw	1
 13246  07AE  0252               	subwf	___flmul@temp,w
 13247  07AF                     u4545:
 13248  07AF  1803               	skipnc
 13249  07B0  2FB2               	goto	u4541
 13250  07B1  2FB3               	goto	u4540
 13251  07B2                     u4541:
 13252  07B2  2FBE               	goto	l3777
 13253  07B3                     u4540:
 13254  07B3                     l3773:
 13255  07B3  3000               	movlw	0
 13256  07B4  0020               	movlb	0	; select bank0
 13257  07B5  00D1               	movwf	___flmul@prod+3
 13258  07B6  3000               	movlw	0
 13259  07B7  00D0               	movwf	___flmul@prod+2
 13260  07B8  3000               	movlw	0
 13261  07B9  00CF               	movwf	___flmul@prod+1
 13262  07BA  3000               	movlw	0
 13263  07BB  00CE               	movwf	___flmul@prod
 13264  07BC                     l3775:
 13265  07BC  01C7               	clrf	___flmul@sign
 13266  07BD  2FD4               	goto	l928
 13267  07BE                     l3777:
 13268  07BE  0020               	movlb	0	; select bank0
 13269  07BF  0852               	movf	___flmul@temp,w
 13270  07C0  00C2               	movwf	??___flmul
 13271  07C1  0842               	movf	??___flmul,w
 13272  07C2  00CD               	movwf	___flmul@bexp
 13273  07C3  30FF               	movlw	255
 13274  07C4  05CE               	andwf	___flmul@prod,f
 13275  07C5  30FF               	movlw	255
 13276  07C6  05CF               	andwf	___flmul@prod+1,f
 13277  07C7  307F               	movlw	127
 13278  07C8  05D0               	andwf	___flmul@prod+2,f
 13279  07C9  3000               	movlw	0
 13280  07CA  05D1               	andwf	___flmul@prod+3,f
 13281  07CB                     l3779:
 13282  07CB  1C4D               	btfss	___flmul@bexp,0
 13283  07CC  2FCE               	goto	u4551
 13284  07CD  2FCF               	goto	u4550
 13285  07CE                     u4551:
 13286  07CE  2FD0               	goto	l3783
 13287  07CF                     u4550:
 13288  07CF                     l3781:
 13289  07CF  17D0               	bsf	___flmul@prod+2,7
 13290  07D0                     l3783:
 13291  07D0  364D               	lsrf	___flmul@bexp,w
 13292  07D1  00C2               	movwf	??___flmul
 13293  07D2  0842               	movf	??___flmul,w
 13294  07D3  00D1               	movwf	___flmul@prod+3
 13295  07D4                     l928:
 13296  07D4  0847               	movf	___flmul@sign,w
 13297  07D5  00C2               	movwf	??___flmul
 13298  07D6  0842               	movf	??___flmul,w
 13299  07D7  04D1               	iorwf	___flmul@prod+3,f
 13300  07D8                     l3785:
 13301  07D8  0851               	movf	___flmul@prod+3,w
 13302  07D9  00BD               	movwf	?___flmul+3
 13303  07DA  0850               	movf	___flmul@prod+2,w
 13304  07DB  00BC               	movwf	?___flmul+2
 13305  07DC  084F               	movf	___flmul@prod+1,w
 13306  07DD  00BB               	movwf	?___flmul+1
 13307  07DE  084E               	movf	___flmul@prod,w
 13308  07DF  00BA               	movwf	?___flmul
 13309  07E0                     l916:
 13310  07E0  0008               	return
 13311  07E1                     __end_of___flmul:
 13312                           
 13313                           	psect	text61
 13314  10F3                     __ptext61:	
 13315 ;; *************** function __Umul8_16 *****************
 13316 ;; Defined at:
 13317 ;;		line 4 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\Umul8_16.c"
 13318 ;; Parameters:    Size  Location     Type
 13319 ;;  multiplier      1    wreg     unsigned char 
 13320 ;;  multiplicand    1    0[COMMON] unsigned char 
 13321 ;; Auto vars:     Size  Location     Type
 13322 ;;  multiplier      1    8[COMMON] unsigned char 
 13323 ;;  word_mpld       2    6[COMMON] unsigned int 
 13324 ;;  product         2    4[COMMON] unsigned int 
 13325 ;; Return value:  Size  Location     Type
 13326 ;;                  2    0[COMMON] unsigned int 
 13327 ;; Registers used:
 13328 ;;		wreg, status,2, status,0
 13329 ;; Tracked objects:
 13330 ;;		On entry : 0/0
 13331 ;;		On exit  : 0/0
 13332 ;;		Unchanged: 0/0
 13333 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 13334 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13335 ;;      Locals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13336 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13337 ;;      Totals:         9       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13338 ;;Total ram usage:        9 bytes
 13339 ;; Hardware stack levels used: 1
 13340 ;; This function calls:
 13341 ;;		Nothing
 13342 ;; This function is called by:
 13343 ;;		___flmul
 13344 ;; This function uses a non-reentrant model
 13345 ;;
 13346                           
 13347                           
 13348                           ;psect for function __Umul8_16
 13349  10F3                     __Umul8_16:
 13350                           
 13351                           ;incstack = 0
 13352                           ; Regs used in __Umul8_16: [wreg+status,2+status,0]
 13353                           ;__Umul8_16@multiplier stored from wreg
 13354  10F3  00F8               	movwf	__Umul8_16@multiplier
 13355  10F4                     l3399:
 13356  10F4  01F4               	clrf	__Umul8_16@product
 13357  10F5  01F5               	clrf	__Umul8_16@product+1
 13358  10F6                     l3401:
 13359  10F6  0870               	movf	__Umul8_16@multiplicand,w
 13360  10F7  00F2               	movwf	??__Umul8_16
 13361  10F8  01F3               	clrf	??__Umul8_16+1
 13362  10F9  0872               	movf	??__Umul8_16,w
 13363  10FA  00F6               	movwf	__Umul8_16@word_mpld
 13364  10FB  0873               	movf	??__Umul8_16+1,w
 13365  10FC  00F7               	movwf	__Umul8_16@word_mpld+1
 13366  10FD                     l3403:
 13367  10FD  1C78               	btfss	__Umul8_16@multiplier,0
 13368  10FE  2900               	goto	u4031
 13369  10FF  2901               	goto	u4030
 13370  1100                     u4031:
 13371  1100  2905               	goto	l935
 13372  1101                     u4030:
 13373  1101                     l3405:
 13374  1101  0876               	movf	__Umul8_16@word_mpld,w
 13375  1102  07F4               	addwf	__Umul8_16@product,f
 13376  1103  0877               	movf	__Umul8_16@word_mpld+1,w
 13377  1104  3DF5               	addwfc	__Umul8_16@product+1,f
 13378  1105                     l935:
 13379  1105  3001               	movlw	1
 13380  1106                     u4045:
 13381  1106  35F6               	lslf	__Umul8_16@word_mpld,f
 13382  1107  0DF7               	rlf	__Umul8_16@word_mpld+1,f
 13383  1108  0B89               	decfsz	9,f
 13384  1109  2906               	goto	u4045
 13385  110A  1003               	clrc
 13386  110B  0CF8               	rrf	__Umul8_16@multiplier,f
 13387  110C                     l3407:
 13388  110C  0878               	movf	__Umul8_16@multiplier,w
 13389  110D  1D03               	btfss	3,2
 13390  110E  2910               	goto	u4051
 13391  110F  2911               	goto	u4050
 13392  1110                     u4051:
 13393  1110  28FD               	goto	l3403
 13394  1111                     u4050:
 13395  1111                     l3409:
 13396  1111  0875               	movf	__Umul8_16@product+1,w
 13397  1112  00F1               	movwf	?__Umul8_16+1
 13398  1113  0874               	movf	__Umul8_16@product,w
 13399  1114  00F0               	movwf	?__Umul8_16
 13400  1115                     l937:
 13401  1115  0008               	return
 13402  1116                     __end_of__Umul8_16:
 13403                           
 13404                           	psect	text62
 13405  1F5F                     __ptext62:	
 13406 ;; *************** function _SYSTEM_Initialize *****************
 13407 ;; Defined at:
 13408 ;;		line 50 in file "mcc_generated_files/mcc.c"
 13409 ;; Parameters:    Size  Location     Type
 13410 ;;		None
 13411 ;; Auto vars:     Size  Location     Type
 13412 ;;		None
 13413 ;; Return value:  Size  Location     Type
 13414 ;;                  1    wreg      void 
 13415 ;; Registers used:
 13416 ;;		wreg, status,2, status,0, pclath, cstack
 13417 ;; Tracked objects:
 13418 ;;		On entry : 0/0
 13419 ;;		On exit  : 0/0
 13420 ;;		Unchanged: 0/0
 13421 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 13422 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13423 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13424 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13425 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13426 ;;Total ram usage:        0 bytes
 13427 ;; Hardware stack levels used: 1
 13428 ;; Hardware stack levels required when called: 1
 13429 ;; This function calls:
 13430 ;;		_OSCILLATOR_Initialize
 13431 ;;		_PIN_MANAGER_Initialize
 13432 ;;		_WDT_Initialize
 13433 ;; This function is called by:
 13434 ;;		_main
 13435 ;; This function uses a non-reentrant model
 13436 ;;
 13437                           
 13438                           
 13439                           ;psect for function _SYSTEM_Initialize
 13440  1F5F                     _SYSTEM_Initialize:
 13441  1F5F                     l3789:	
 13442                           ;incstack = 0
 13443                           ; Regs used in _SYSTEM_Initialize: [wreg+status,2+status,0+pclath+cstack]
 13444                           
 13445                           
 13446                           ;mcc_generated_files/mcc.c: 53:     PIN_MANAGER_Initialize();
 13447  1F5F  3190  20BD  319F   	fcall	_PIN_MANAGER_Initialize
 13448                           
 13449                           ;mcc_generated_files/mcc.c: 54:     OSCILLATOR_Initialize();
 13450  1F62  319F  2750  319F   	fcall	_OSCILLATOR_Initialize
 13451                           
 13452                           ;mcc_generated_files/mcc.c: 55:     WDT_Initialize();
 13453  1F65  319F  2740  319F   	fcall	_WDT_Initialize
 13454  1F68                     l51:
 13455  1F68  0008               	return
 13456  1F69                     __end_of_SYSTEM_Initialize:
 13457                           
 13458                           	psect	text63
 13459  1F40                     __ptext63:	
 13460 ;; *************** function _WDT_Initialize *****************
 13461 ;; Defined at:
 13462 ;;		line 68 in file "mcc_generated_files/mcc.c"
 13463 ;; Parameters:    Size  Location     Type
 13464 ;;		None
 13465 ;; Auto vars:     Size  Location     Type
 13466 ;;		None
 13467 ;; Return value:  Size  Location     Type
 13468 ;;                  1    wreg      void 
 13469 ;; Registers used:
 13470 ;;		wreg
 13471 ;; Tracked objects:
 13472 ;;		On entry : 0/0
 13473 ;;		On exit  : 0/0
 13474 ;;		Unchanged: 0/0
 13475 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 13476 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13477 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13478 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13479 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13480 ;;Total ram usage:        0 bytes
 13481 ;; Hardware stack levels used: 1
 13482 ;; This function calls:
 13483 ;;		Nothing
 13484 ;; This function is called by:
 13485 ;;		_SYSTEM_Initialize
 13486 ;; This function uses a non-reentrant model
 13487 ;;
 13488                           
 13489                           
 13490                           ;psect for function _WDT_Initialize
 13491  1F40                     _WDT_Initialize:
 13492  1F40                     l3491:	
 13493                           ;incstack = 0
 13494                           ; Regs used in _WDT_Initialize: [wreg]
 13495                           
 13496                           
 13497                           ;mcc_generated_files/mcc.c: 71:     WDTCON = 0x16;
 13498  1F40  3016               	movlw	22
 13499  1F41  0021               	movlb	1	; select bank1
 13500  1F42  0097               	movwf	23	;volatile
 13501  1F43                     l57:
 13502  1F43  0008               	return
 13503  1F44                     __end_of_WDT_Initialize:
 13504                           
 13505                           	psect	text64
 13506  10BD                     __ptext64:	
 13507 ;; *************** function _PIN_MANAGER_Initialize *****************
 13508 ;; Defined at:
 13509 ;;		line 55 in file "mcc_generated_files/pin_manager.c"
 13510 ;; Parameters:    Size  Location     Type
 13511 ;;		None
 13512 ;; Auto vars:     Size  Location     Type
 13513 ;;		None
 13514 ;; Return value:  Size  Location     Type
 13515 ;;                  1    wreg      void 
 13516 ;; Registers used:
 13517 ;;		wreg, status,2
 13518 ;; Tracked objects:
 13519 ;;		On entry : 0/0
 13520 ;;		On exit  : 0/0
 13521 ;;		Unchanged: 0/0
 13522 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 13523 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13524 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13525 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13526 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13527 ;;Total ram usage:        0 bytes
 13528 ;; Hardware stack levels used: 1
 13529 ;; This function calls:
 13530 ;;		Nothing
 13531 ;; This function is called by:
 13532 ;;		_SYSTEM_Initialize
 13533 ;; This function uses a non-reentrant model
 13534 ;;
 13535                           
 13536                           
 13537                           ;psect for function _PIN_MANAGER_Initialize
 13538  10BD                     _PIN_MANAGER_Initialize:
 13539  10BD                     l3469:	
 13540                           ;incstack = 0
 13541                           ; Regs used in _PIN_MANAGER_Initialize: [wreg+status,2]
 13542                           
 13543                           
 13544                           ;mcc_generated_files/pin_manager.c: 60:     LATE = 0x00;
 13545  10BD  0022               	movlb	2	; select bank2
 13546  10BE  0190               	clrf	16	;volatile
 13547                           
 13548                           ;mcc_generated_files/pin_manager.c: 61:     LATA = 0x00;
 13549  10BF  018C               	clrf	12	;volatile
 13550                           
 13551                           ;mcc_generated_files/pin_manager.c: 62:     LATB = 0x00;
 13552  10C0  018D               	clrf	13	;volatile
 13553                           
 13554                           ;mcc_generated_files/pin_manager.c: 63:     LATC = 0x00;
 13555  10C1  018E               	clrf	14	;volatile
 13556  10C2                     l3471:
 13557                           
 13558                           ;mcc_generated_files/pin_manager.c: 68:     TRISE = 0x08;
 13559  10C2  3008               	movlw	8
 13560  10C3  0021               	movlb	1	; select bank1
 13561  10C4  0090               	movwf	16	;volatile
 13562  10C5                     l3473:
 13563                           
 13564                           ;mcc_generated_files/pin_manager.c: 69:     TRISA = 0xFF;
 13565  10C5  30FF               	movlw	255
 13566  10C6  008C               	movwf	12	;volatile
 13567  10C7                     l3475:
 13568                           
 13569                           ;mcc_generated_files/pin_manager.c: 70:     TRISB = 0xFF;
 13570  10C7  30FF               	movlw	255
 13571  10C8  008D               	movwf	13	;volatile
 13572  10C9                     l3477:
 13573                           
 13574                           ;mcc_generated_files/pin_manager.c: 71:     TRISC = 0xFF;
 13575  10C9  30FF               	movlw	255
 13576  10CA  008E               	movwf	14	;volatile
 13577  10CB                     l3479:
 13578                           
 13579                           ;mcc_generated_files/pin_manager.c: 76:     ANSELB = 0xFE;
 13580  10CB  30FE               	movlw	254
 13581  10CC  0023               	movlb	3	; select bank3
 13582  10CD  008D               	movwf	13	;volatile
 13583  10CE                     l3481:
 13584                           
 13585                           ;mcc_generated_files/pin_manager.c: 77:     ANSELA = 0x1F;
 13586  10CE  301F               	movlw	31
 13587  10CF  008C               	movwf	12	;volatile
 13588                           
 13589                           ;mcc_generated_files/pin_manager.c: 82:     WPUE = 0x00;
 13590  10D0  0024               	movlb	4	; select bank4
 13591  10D1  0190               	clrf	16	;volatile
 13592                           
 13593                           ;mcc_generated_files/pin_manager.c: 83:     WPUB = 0x00;
 13594  10D2  018D               	clrf	13	;volatile
 13595  10D3                     l3483:
 13596                           
 13597                           ;mcc_generated_files/pin_manager.c: 84:     OPTION_REGbits.nWPUEN = 1;
 13598  10D3  0021               	movlb	1	; select bank1
 13599  10D4  1795               	bsf	21,7	;volatile
 13600                           
 13601                           ;mcc_generated_files/pin_manager.c: 90:     APFCON = 0x00;
 13602  10D5  0022               	movlb	2	; select bank2
 13603  10D6  019D               	clrf	29	;volatile
 13604  10D7                     l31:
 13605  10D7  0008               	return
 13606  10D8                     __end_of_PIN_MANAGER_Initialize:
 13607                           
 13608                           	psect	text65
 13609  1F50                     __ptext65:	
 13610 ;; *************** function _OSCILLATOR_Initialize *****************
 13611 ;; Defined at:
 13612 ;;		line 58 in file "mcc_generated_files/mcc.c"
 13613 ;; Parameters:    Size  Location     Type
 13614 ;;		None
 13615 ;; Auto vars:     Size  Location     Type
 13616 ;;		None
 13617 ;; Return value:  Size  Location     Type
 13618 ;;                  1    wreg      void 
 13619 ;; Registers used:
 13620 ;;		wreg, status,2
 13621 ;; Tracked objects:
 13622 ;;		On entry : 0/0
 13623 ;;		On exit  : 0/0
 13624 ;;		Unchanged: 0/0
 13625 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 13626 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13627 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13628 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13629 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13630 ;;Total ram usage:        0 bytes
 13631 ;; Hardware stack levels used: 1
 13632 ;; This function calls:
 13633 ;;		Nothing
 13634 ;; This function is called by:
 13635 ;;		_SYSTEM_Initialize
 13636 ;; This function uses a non-reentrant model
 13637 ;;
 13638                           
 13639                           
 13640                           ;psect for function _OSCILLATOR_Initialize
 13641  1F50                     _OSCILLATOR_Initialize:
 13642  1F50                     l3485:	
 13643                           ;incstack = 0
 13644                           ; Regs used in _OSCILLATOR_Initialize: [wreg+status,2]
 13645                           
 13646                           
 13647                           ;mcc_generated_files/mcc.c: 61:     OSCCON = 0x70;
 13648  1F50  3070               	movlw	112
 13649  1F51  0021               	movlb	1	; select bank1
 13650  1F52  0099               	movwf	25	;volatile
 13651  1F53                     l3487:
 13652                           
 13653                           ;mcc_generated_files/mcc.c: 63:     OSCTUNE = 0x00;
 13654  1F53  0198               	clrf	24	;volatile
 13655  1F54                     l3489:
 13656                           
 13657                           ;mcc_generated_files/mcc.c: 65:     BORCON = 0x00;
 13658  1F54  0022               	movlb	2	; select bank2
 13659  1F55  0196               	clrf	22	;volatile
 13660  1F56                     l54:
 13661  1F56  0008               	return
 13662  1F57                     __end_of_OSCILLATOR_Initialize:
 13663  007E                     btemp	set	126	;btemp
 13664  007E                     wtemp0	set	126
 13665                           
 13666                           	psect	config
 13667                           
 13668                           ;Config register CONFIG1 @ 0x8007
 13669                           ;	Oscillator Selection
 13670                           ;	FOSC = INTOSC, INTOSC oscillator: I/O function on CLKIN pin
 13671                           ;	Watchdog Timer Enable
 13672                           ;	WDTE = OFF, WDT disabled
 13673                           ;	Power-up Timer Enable
 13674                           ;	PWRTE = OFF, PWRT disabled
 13675                           ;	MCLR Pin Function Select
 13676                           ;	MCLRE = ON, MCLR/VPP pin function is MCLR
 13677                           ;	Flash Program Memory Code Protection
 13678                           ;	CP = OFF, Program memory code protection is disabled
 13679                           ;	Data Memory Code Protection
 13680                           ;	CPD = OFF, Data memory code protection is disabled
 13681                           ;	Brown-out Reset Enable
 13682                           ;	BOREN = ON, Brown-out Reset enabled
 13683                           ;	Clock Out Enable
 13684                           ;	CLKOUTEN = OFF, CLKOUT function is disabled. I/O or oscillator function on the CLKOUT 
      +                          pin
 13685                           ;	Internal/External Switchover
 13686                           ;	IESO = ON, Internal/External Switchover mode is enabled
 13687                           ;	Fail-Safe Clock Monitor Enable
 13688                           ;	FCMEN = ON, Fail-Safe Clock Monitor is enabled
 13689  8007                     	org	32775
 13690  8007  3FE4               	dw	16356
 13691                           
 13692                           ;Config register CONFIG2 @ 0x8008
 13693                           ;	Flash Memory Self-Write Protection
 13694                           ;	WRT = OFF, Write protection off
 13695                           ;	Voltage Regulator Capacitor Enable
 13696                           ;	VCAPEN = OFF, All VCAP pin functionality is disabled
 13697                           ;	PLL Enable
 13698                           ;	PLLEN = OFF, 4x PLL disabled
 13699                           ;	Stack Overflow/Underflow Reset Enable
 13700                           ;	STVREN = ON, Stack Overflow or Underflow will cause a Reset
 13701                           ;	Brown-out Reset Voltage Selection
 13702                           ;	BORV = LO, Brown-out Reset Voltage (Vbor), low trip point selected.
 13703                           ;	Low-Voltage Programming Enable
 13704                           ;	LVP = OFF, High-voltage on MCLR/VPP must be used for programming
 13705  8008                     	org	32776
 13706  8008  1EFF               	dw	7935

Data Sizes:
    Strings     61
    Constant    0
    Data        36
    BSS         51
    Persistent  32
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14     14      14
    BANK0            80     80      80
    BANK1            80     80      80
    BANK2            80      0      55
    BANK3            80      0      32
    BANK4            80      0       0
    BANK5            80      0       0
    BANK6            80      0       0
    BANK7            80      0       0
    BANK8            80      0       0
    BANK9            80      0       0
    BANK10           80      0       0
    BANK11           80      0       0
    BANK12           48      0       0

Pointer List with Targets:

    encode_digit@p	PTR struct . size(1) Largest target is 2
		 -> NULL(NULL[0]), main@tm1637(BANK1[2]), 

    set_brigthness@p	PTR struct . size(1) Largest target is 2
		 -> NULL(NULL[0]), main@tm1637(BANK1[2]), 

    strncmp@_r	PTR const unsigned char  size(2) Largest target is 3
		 -> STR_18(CODE[3]), STR_13(CODE[3]), STR_9(CODE[3]), 

    strncmp@r	PTR const unsigned char  size(2) Largest target is 3
		 -> STR_18(CODE[3]), STR_13(CODE[3]), STR_9(CODE[3]), 

    strncmp@_l	PTR const unsigned char  size(2) Largest target is 10
		 -> STR_6(CODE[6]), STR_5(CODE[10]), STR_4(CODE[8]), 

    strncmp@l	PTR const unsigned char  size(2) Largest target is 10
		 -> STR_6(CODE[6]), STR_5(CODE[10]), STR_4(CODE[8]), 

    strlen@s	PTR const unsigned char  size(1) Largest target is 32
		 -> dbuf(BANK3[32]), 

    strlen@a	PTR const unsigned char  size(1) Largest target is 32
		 -> dbuf(BANK3[32]), 

    fputs@s	PTR const unsigned char  size(1) Largest target is 32
		 -> dbuf(BANK3[32]), 

    fputs@fp	PTR struct _IO_FILE size(1) Largest target is 6
		 -> sprintf@f(BANK1[5]), 

    fputc@fp.buffer	PTR unsigned char  size(1) Largest target is 16
		 -> print_gram@row2(BANK1[16]), print_gram@row1(BANK1[16]), initialize@valstr(BANK1[16]), 

    fputc@fp	PTR struct _IO_FILE size(1) Largest target is 6
		 -> sprintf@f(BANK1[5]), 

    vfprintf@ap	PTR PTR void  size(1) Largest target is 1
		 -> sprintf@ap(BANK1[1]), 

    vfprintf@fp	PTR struct _IO_FILE size(1) Largest target is 6
		 -> sprintf@f(BANK1[5]), 

    vfprintf@fmt	PTR const unsigned char  size(2) Largest target is 10
		 -> STR_6(CODE[6]), STR_5(CODE[10]), STR_4(CODE[8]), 

    vfprintf@cfmt	PTR unsigned char  size(2) Largest target is 10
		 -> STR_6(CODE[6]), STR_5(CODE[10]), STR_4(CODE[8]), 

    vfpfcnvrt@fp	PTR struct _IO_FILE size(1) Largest target is 6
		 -> sprintf@f(BANK1[5]), 

    vfpfcnvrt@ap	PTR PTR void  size(1) Largest target is 1
		 -> sprintf@ap(BANK1[1]), 

    vfpfcnvrt@fmt	PTR PTR unsigned char  size(1) Largest target is 2
		 -> vfprintf@cfmt(BANK1[2]), 

    utoa@fp	PTR struct _IO_FILE size(1) Largest target is 6
		 -> sprintf@f(BANK1[5]), 

    dtoa@fp	PTR struct _IO_FILE size(1) Largest target is 6
		 -> sprintf@f(BANK1[5]), 

    pad@fp	PTR struct _IO_FILE size(1) Largest target is 6
		 -> sprintf@f(BANK1[5]), 

    pad@buf	PTR unsigned char  size(1) Largest target is 32
		 -> dbuf(BANK3[32]), 

    sprintf@fmt	PTR const unsigned char  size(2) Largest target is 10
		 -> STR_6(CODE[6]), STR_5(CODE[10]), STR_4(CODE[8]), 

    sprintf@s	PTR unsigned char  size(1) Largest target is 16
		 -> print_gram@row2(BANK1[16]), print_gram@row1(BANK1[16]), initialize@valstr(BANK1[16]), 

    sprintf@ap	PTR void [1] size(1) Largest target is 2
		 -> ?_sprintf(BANK1[2]), 

    S1159_IO_FILE$buffer	PTR unsigned char  size(1) Largest target is 16
		 -> print_gram@row2(BANK1[16]), print_gram@row1(BANK1[16]), initialize@valstr(BANK1[16]), 

    f.buffer	PTR unsigned char  size(1) Largest target is 16
		 -> print_gram@row2(BANK1[16]), print_gram@row1(BANK1[16]), initialize@valstr(BANK1[16]), 

    set_max_gram@p.tm1637	PTR struct . size(1) Largest target is 2
		 -> NULL(NULL[0]), main@tm1637(BANK1[2]), 

    set_max_gram@p.lcd	PTR struct . size(1) Largest target is 4
		 -> NULL(NULL[0]), main@lcd(BANK1[4]), 

    set_max_gram@p.loadcell	PTR struct . size(1) Largest target is 12
		 -> NULL(NULL[0]), main@loadcell(BANK1[12]), 

    print_gram@p.tm1637	PTR struct . size(1) Largest target is 2
		 -> NULL(NULL[0]), main@tm1637(BANK1[2]), 

    print_gram@p.lcd	PTR struct . size(1) Largest target is 4
		 -> NULL(NULL[0]), main@lcd(BANK1[4]), 

    print_gram@p.loadcell	PTR struct . size(1) Largest target is 12
		 -> NULL(NULL[0]), main@loadcell(BANK1[12]), 

    print_gram@p	PTR struct . size(1) Largest target is 9
		 -> main@drink(BANK1[6]), 

    calc_percentage@p.tm1637	PTR struct . size(1) Largest target is 2
		 -> NULL(NULL[0]), main@tm1637(BANK1[2]), 

    calc_percentage@p.lcd	PTR struct . size(1) Largest target is 4
		 -> NULL(NULL[0]), main@lcd(BANK1[4]), 

    calc_percentage@p.loadcell	PTR struct . size(1) Largest target is 12
		 -> NULL(NULL[0]), main@loadcell(BANK1[12]), 

    calc_percentage@p	PTR struct . size(1) Largest target is 9
		 -> main@drink(BANK1[6]), 

    initialize@p.tm1637	PTR struct . size(1) Largest target is 2
		 -> NULL(NULL[0]), main@tm1637(BANK1[2]), 

    initialize@p.lcd	PTR struct . size(1) Largest target is 4
		 -> NULL(NULL[0]), main@lcd(BANK1[4]), 

    initialize@p.loadcell	PTR struct . size(1) Largest target is 12
		 -> NULL(NULL[0]), main@loadcell(BANK1[12]), 

    initialize@p	PTR struct . size(1) Largest target is 9
		 -> main@drink(BANK1[6]), 

    write4bits@p	PTR struct . size(1) Largest target is 4
		 -> NULL(NULL[0]), main@lcd(BANK1[4]), 

    command@p	PTR struct . size(1) Largest target is 4
		 -> NULL(NULL[0]), main@lcd(BANK1[4]), 

    lcd_print_with@str	PTR unsigned char  size(2) Largest target is 16
		 -> print_gram@row2(BANK1[16]), print_gram@row1(BANK1[16]), STR_3(CODE[15]), STR_2(CODE[11]), 

    lcd_print_with@p	PTR struct . size(1) Largest target is 4
		 -> NULL(NULL[0]), main@lcd(BANK1[4]), 

    lcd_print@p	PTR struct . size(1) Largest target is 4
		 -> NULL(NULL[0]), main@lcd(BANK1[4]), 

    lcd_print@str	PTR unsigned char  size(2) Largest target is 16
		 -> print_gram@row2(BANK1[16]), print_gram@row1(BANK1[16]), initialize@valstr(BANK1[16]), STR_3(CODE[15]), 
		 -> STR_2(CODE[11]), STR_1(CODE[2]), 

    lcd_set_cursor@p	PTR struct . size(1) Largest target is 4
		 -> NULL(NULL[0]), main@lcd(BANK1[4]), 

    lcd_clear@p	PTR struct . size(1) Largest target is 4
		 -> NULL(NULL[0]), main@lcd(BANK1[4]), 

    lcd_backlight@p	PTR struct . size(1) Largest target is 4
		 -> NULL(NULL[0]), main@lcd(BANK1[4]), 

    lcd_init@p	PTR struct . size(1) Largest target is 4
		 -> NULL(NULL[0]), main@lcd(BANK1[4]), 

    lcd_cmd@p	PTR struct . size(1) Largest target is 4
		 -> NULL(NULL[0]), main@lcd(BANK1[4]), 

    scale_convert_gram@p	PTR struct . size(1) Largest target is 12
		 -> NULL(NULL[0]), main@loadcell(BANK1[12]), 

    get_scale_val@p	PTR struct . size(1) Largest target is 12
		 -> NULL(NULL[0]), main@loadcell(BANK1[12]), 

    get_CELL_DAT_VAL@p	PTR struct . size(1) Largest target is 12
		 -> NULL(NULL[0]), main@loadcell(BANK1[12]), 

    set_CELL_CLK_HIGH@p	PTR struct . size(1) Largest target is 12
		 -> NULL(NULL[0]), main@loadcell(BANK1[12]), 

    set_CELL_CLK_LOW@p	PTR struct . size(1) Largest target is 12
		 -> NULL(NULL[0]), main@loadcell(BANK1[12]), 

    print_digit@p	PTR struct . size(1) Largest target is 2
		 -> NULL(NULL[0]), main@tm1637(BANK1[2]), 

    initialize_digit@p	PTR struct . size(1) Largest target is 2
		 -> NULL(NULL[0]), main@tm1637(BANK1[2]), 

    set_segments@segments	PTR const unsigned char  size(1) Largest target is 4
		 -> print_digit@data(BANK0[4]), clear_segment@data(COMMON[4]), 

    set_segments@p	PTR struct . size(1) Largest target is 2
		 -> NULL(NULL[0]), main@tm1637(BANK1[2]), 

    write_byte@p	PTR struct . size(1) Largest target is 2
		 -> NULL(NULL[0]), main@tm1637(BANK1[2]), 

    get_DIO_PIN_value@p	PTR struct . size(1) Largest target is 2
		 -> NULL(NULL[0]), main@tm1637(BANK1[2]), 

    stop_segment@p	PTR struct . size(1) Largest target is 2
		 -> NULL(NULL[0]), main@tm1637(BANK1[2]), 

    start_segment@p	PTR struct . size(1) Largest target is 2
		 -> NULL(NULL[0]), main@tm1637(BANK1[2]), 

    DIO_SET_LOW@p	PTR struct . size(1) Largest target is 2
		 -> NULL(NULL[0]), main@tm1637(BANK1[2]), 

    DIO_SET_HIGH@p	PTR struct . size(1) Largest target is 2
		 -> NULL(NULL[0]), main@tm1637(BANK1[2]), 

    DIO_SET_INPUT@p	PTR struct . size(1) Largest target is 2
		 -> NULL(NULL[0]), main@tm1637(BANK1[2]), 

    DIO_SET_OUTPUT@p	PTR struct . size(1) Largest target is 2
		 -> NULL(NULL[0]), main@tm1637(BANK1[2]), 

    CLK_SET_LOW@p	PTR struct . size(1) Largest target is 2
		 -> NULL(NULL[0]), main@tm1637(BANK1[2]), 

    CLK_SET_HIGH@p	PTR struct . size(1) Largest target is 2
		 -> NULL(NULL[0]), main@tm1637(BANK1[2]), 

    CLK_SET_OUTPUT@p	PTR struct . size(1) Largest target is 2
		 -> NULL(NULL[0]), main@tm1637(BANK1[2]), 

    drink.tm1637	PTR struct . size(1) Largest target is 2
		 -> NULL(NULL[0]), main@tm1637(BANK1[2]), 

    drink.lcd	PTR struct . size(1) Largest target is 4
		 -> NULL(NULL[0]), main@lcd(BANK1[4]), 

    drink.loadcell	PTR struct . size(1) Largest target is 12
		 -> NULL(NULL[0]), main@loadcell(BANK1[12]), 

    S223$tm1637	PTR struct . size(1) Largest target is 2
		 -> NULL(NULL[0]), main@tm1637(BANK1[2]), 

    F2853.tm1637	PTR struct . size(1) Largest target is 2
		 -> NULL(NULL[0]), main@tm1637(BANK1[2]), 

    S223$lcd	PTR struct . size(1) Largest target is 4
		 -> NULL(NULL[0]), main@lcd(BANK1[4]), 

    F2853.lcd	PTR struct . size(1) Largest target is 4
		 -> NULL(NULL[0]), main@lcd(BANK1[4]), 

    S223$loadcell	PTR struct . size(1) Largest target is 12
		 -> NULL(NULL[0]), main@loadcell(BANK1[12]), 

    F2853.loadcell	PTR struct . size(1) Largest target is 12
		 -> NULL(NULL[0]), main@loadcell(BANK1[12]), 


Critical Paths under _main in COMMON

    _print_gram->_lcd_print_with
    _print_gram->_print_digit
    _initialize->_lcd_print_with
    _vfpfcnvrt->_utoa
    _utoa->_pad
    _dtoa->_pad
    _pad->_fputs
    _fputs->_fputc
    _abs->___aomod
    _lcd_print_with->_lcd_print
    _lcd_print_with->_lcd_set_cursor
    _lcd_init->_write4bits
    _write4bits->_lcd_cmd
    _lcd_clear->_lcd_print
    _lcd_clear->_lcd_set_cursor
    _lcd_set_cursor->_command
    _lcd_print->_command
    _command->_lcd_cmd
    _lcd_backlight->_lcd_cmd
    _lcd_cmd->_i2c_write
    _initialize_digit->_print_digit
    _print_digit->_set_segments
    _set_segments->_write_byte
    _write_byte->_CLK_SET_HIGH
    _write_byte->_CLK_SET_LOW
    _write_byte->_CLK_SET_OUTPUT
    _write_byte->_DIO_SET_HIGH
    _write_byte->_DIO_SET_INPUT
    _write_byte->_DIO_SET_LOW
    _write_byte->_DIO_SET_OUTPUT
    _write_byte->_get_DIO_PIN_value
    _stop_segment->_CLK_SET_HIGH
    _stop_segment->_CLK_SET_LOW
    _stop_segment->_CLK_SET_OUTPUT
    _stop_segment->_DIO_SET_HIGH
    _stop_segment->_DIO_SET_LOW
    _stop_segment->_DIO_SET_OUTPUT
    _start_segment->_CLK_SET_HIGH
    _start_segment->_CLK_SET_LOW
    _start_segment->_CLK_SET_OUTPUT
    _start_segment->_DIO_SET_HIGH
    _start_segment->_DIO_SET_LOW
    _start_segment->_DIO_SET_OUTPUT
    _encode_digit->___awdiv
    _calc_percentage->___xxtofl
    _scale_convert_gram->___xxtofl
    ___fltol->___xxtofl
    ___fldiv->___xxtofl
    _get_scale_val->___lldiv
    ___flmul->___xxtofl

Critical Paths under _main in BANK0

    _sprintf->_vfprintf
    _vfprintf->_vfpfcnvrt
    _vfpfcnvrt->_dtoa
    _utoa->___lodiv
    _utoa->___lomod
    _dtoa->___aodiv
    _dtoa->___aomod
    _pad->_fputs
    _abs->___aomod
    _lcd_print_with->_lcd_set_cursor
    _lcd_clear->_lcd_set_cursor
    _initialize_digit->_print_digit
    _print_digit->_set_segments
    _calc_percentage->_scale_convert_gram
    _scale_convert_gram->___fltol
    ___fltol->___flmul
    ___flmul->___fldiv

Critical Paths under _main in BANK1

    _main->_print_gram
    _print_gram->_sprintf
    _initialize->_sprintf
    _sprintf->_vfprintf

Critical Paths under _main in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _main in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                26    26      0   80317
                                             54 BANK1     26    26      0
                  _SYSTEM_Initialize
                    _calc_percentage
                         _initialize
                         _print_gram
 ---------------------------------------------------------------------------------
 (1) _print_gram                                          35    35      0   31230
                                             19 BANK1     35    35      0
                          _lcd_clear
                     _lcd_print_with
                        _print_digit
                            _sprintf
 ---------------------------------------------------------------------------------
 (1) _initialize                                          18    18      0   39746
                                             19 BANK1     18    18      0
                      _get_scale_val
                   _initialize_digit
                      _lcd_backlight
                          _lcd_clear
                           _lcd_init
                          _lcd_print
                     _lcd_print_with
                            _sprintf
 ---------------------------------------------------------------------------------
 (2) _sprintf                                             16    10      6   11742
                                              5 BANK1     14     8      6
                           _vfprintf
 ---------------------------------------------------------------------------------
 (3) _vfprintf                                             8     5      3   11210
                                             77 BANK0      3     0      3
                                              0 BANK1      5     5      0
                          _vfpfcnvrt
 ---------------------------------------------------------------------------------
 (4) _vfpfcnvrt                                           47    45      2   10889
                                             46 BANK0     31    29      2
                               _dtoa
                              _fputc
                            _strncmp
                               _utoa
 ---------------------------------------------------------------------------------
 (5) _utoa                                                24    16      8    3838
                                             13 COMMON     1     1      0
                                             16 BANK0     23    15      8
                            ___lodiv
                            ___lomod
                                _pad
 ---------------------------------------------------------------------------------
 (6) ___lomod                                             18     2     16     311
                                              0 COMMON     2     2      0
                                              0 BANK0     16     0     16
 ---------------------------------------------------------------------------------
 (6) ___lodiv                                             26    10     16     314
                                              0 COMMON    10    10      0
                                              0 BANK0     16     0     16
 ---------------------------------------------------------------------------------
 (5) _strncmp                                             11     5      6     909
                                              0 COMMON    11     5      6
 ---------------------------------------------------------------------------------
 (5) _dtoa                                                30    22      8    4437
                                             16 BANK0     30    22      8
                            ___aodiv
                            ___aomod
                                _abs
                                _pad
 ---------------------------------------------------------------------------------
 (6) _pad                                                  9     6      3    2722
                                             12 COMMON     1     1      0
                                              4 BANK0      8     5      3
                              _fputc
                              _fputs
                             _strlen
 ---------------------------------------------------------------------------------
 (7) _strlen                                               5     3      2     123
                                              0 COMMON     5     3      2
 ---------------------------------------------------------------------------------
 (7) _fputs                                                8     7      1    1149
                                              8 COMMON     4     3      1
                                              0 BANK0      4     4      0
                              _fputc
 ---------------------------------------------------------------------------------
 (8) _fputc                                                8     5      3     834
                                              0 COMMON     8     5      3
                              _putch
 ---------------------------------------------------------------------------------
 (9) _putch                                                1     1      0       0
 ---------------------------------------------------------------------------------
 (6) _abs                                                  4     2      2     142
                                              3 COMMON     4     2      2
                            ___aomod (ARG)
 ---------------------------------------------------------------------------------
 (6) ___aomod                                             19     3     16     448
                                              0 COMMON     3     3      0
                                              0 BANK0     16     0     16
 ---------------------------------------------------------------------------------
 (6) ___aodiv                                             27    11     16     452
                                              0 COMMON    11    11      0
                                              0 BANK0     16     0     16
 ---------------------------------------------------------------------------------
 (2) _lcd_print_with                                       7     3      4    6154
                                             13 COMMON     1     1      0
                                              6 BANK0      6     2      4
                          _lcd_print
                     _lcd_set_cursor
 ---------------------------------------------------------------------------------
 (2) _lcd_init                                             3     3      0    3155
                                              6 COMMON     3     3      0
                         _write4bits
 ---------------------------------------------------------------------------------
 (3) _write4bits                                           3     2      1    2814
                                              3 COMMON     3     2      1
                            _lcd_cmd
 ---------------------------------------------------------------------------------
 (2) _lcd_clear                                            5     5      0    5268
                                              6 BANK0      5     5      0
                          _lcd_print
                     _lcd_set_cursor
 ---------------------------------------------------------------------------------
 (3) _lcd_set_cursor                                       9     7      2    2659
                                             10 COMMON     3     1      2
                                              0 BANK0      6     6      0
                            _command
 ---------------------------------------------------------------------------------
 (3) _lcd_print                                            5     3      2    2341
                                             10 COMMON     3     1      2
                                              0 BANK0      2     2      0
                            _command
 ---------------------------------------------------------------------------------
 (4) _command                                              7     5      2    1924
                                              3 COMMON     7     5      2
                            _lcd_cmd
 ---------------------------------------------------------------------------------
 (2) _lcd_backlight                                        2     2      0    1233
                                              3 COMMON     2     2      0
                            _lcd_cmd
 ---------------------------------------------------------------------------------
 (5) _lcd_cmd                                              2     1      1    1156
                                              1 COMMON     2     1      1
                          _i2c_start
                           _i2c_stop
                          _i2c_write
 ---------------------------------------------------------------------------------
 (6) _i2c_write                                            1     1      0      22
                                              0 COMMON     1     1      0
                           _i2c_wait
 ---------------------------------------------------------------------------------
 (6) _i2c_stop                                             0     0      0       0
 ---------------------------------------------------------------------------------
 (6) _i2c_start                                            0     0      0       0
                           _i2c_wait
 ---------------------------------------------------------------------------------
 (7) _i2c_wait                                             0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _initialize_digit                                     2     2      0    8102
                                             12 BANK0      2     2      0
                        _print_digit
                     _set_brigthness
 ---------------------------------------------------------------------------------
 (3) _set_brigthness                                       4     2      2     268
                                              0 COMMON     4     2      2
 ---------------------------------------------------------------------------------
 (2) _print_digit                                         11    10      1    7757
                                             13 COMMON     1     0      1
                                              2 BANK0     10    10      0
                            ___awdiv
                            ___awmod
                       _encode_digit
                       _set_segments
 ---------------------------------------------------------------------------------
 (3) _set_segments                                         7     4      3    5118
                                              8 COMMON     5     2      3
                                              0 BANK0      2     2      0
                      _start_segment
                       _stop_segment
                         _write_byte
 ---------------------------------------------------------------------------------
 (4) _write_byte                                           6     5      1    2020
                                              2 COMMON     6     5      1
                       _CLK_SET_HIGH
                        _CLK_SET_LOW
                     _CLK_SET_OUTPUT
                       _DIO_SET_HIGH
                      _DIO_SET_INPUT
                        _DIO_SET_LOW
                     _DIO_SET_OUTPUT
                  _get_DIO_PIN_value
 ---------------------------------------------------------------------------------
 (5) _get_DIO_PIN_value                                    2     2      0     209
                                              0 COMMON     2     2      0
 ---------------------------------------------------------------------------------
 (5) _DIO_SET_INPUT                                        2     2      0      55
                                              0 COMMON     2     2      0
 ---------------------------------------------------------------------------------
 (4) _stop_segment                                         1     1      0    1122
                                              2 COMMON     1     1      0
                       _CLK_SET_HIGH
                        _CLK_SET_LOW
                     _CLK_SET_OUTPUT
                       _DIO_SET_HIGH
                        _DIO_SET_LOW
                     _DIO_SET_OUTPUT
 ---------------------------------------------------------------------------------
 (4) _start_segment                                        1     1      0    1122
                                              2 COMMON     1     1      0
                       _CLK_SET_HIGH
                        _CLK_SET_LOW
                     _CLK_SET_OUTPUT
                       _DIO_SET_HIGH
                        _DIO_SET_LOW
                     _DIO_SET_OUTPUT
 ---------------------------------------------------------------------------------
 (5) _DIO_SET_OUTPUT                                       2     2      0     154
                                              0 COMMON     2     2      0
 ---------------------------------------------------------------------------------
 (5) _DIO_SET_LOW                                          2     2      0     154
                                              0 COMMON     2     2      0
 ---------------------------------------------------------------------------------
 (5) _DIO_SET_HIGH                                         2     2      0     154
                                              0 COMMON     2     2      0
 ---------------------------------------------------------------------------------
 (5) _CLK_SET_OUTPUT                                       2     2      0     121
                                              0 COMMON     2     2      0
 ---------------------------------------------------------------------------------
 (5) _CLK_SET_LOW                                          2     2      0     154
                                              0 COMMON     2     2      0
 ---------------------------------------------------------------------------------
 (5) _CLK_SET_HIGH                                         2     2      0     154
                                              0 COMMON     2     2      0
 ---------------------------------------------------------------------------------
 (3) _encode_digit                                         2     1      1     526
                                              9 COMMON     2     1      1
                            ___awdiv (ARG)
 ---------------------------------------------------------------------------------
 (3) ___awmod                                              7     3      4     752
                                              0 COMMON     7     3      4
 ---------------------------------------------------------------------------------
 (3) ___awdiv                                              9     5      4     756
                                              0 COMMON     9     5      4
 ---------------------------------------------------------------------------------
 (1) _calc_percentage                                      6     6      0    9030
                                             76 BANK0      1     1      0
                                              0 BANK1      5     5      0
                            ___fldiv
                            ___flmul
                            ___fltol
                           ___xxtofl
                      _get_scale_val
                 _scale_convert_gram
 ---------------------------------------------------------------------------------
 (2) _scale_convert_gram                                  13    13      0    2567
                                             63 BANK0     13    13      0
                            ___fldiv
                            ___fltol
                           ___xxtofl
 ---------------------------------------------------------------------------------
 (3) ___xxtofl                                            14    10      4     550
                                              0 COMMON    14    10      4
 ---------------------------------------------------------------------------------
 (3) ___fltol                                             11     7      4     381
                                             52 BANK0     11     7      4
                            ___fldiv (ARG)
                            ___flmul (ARG)
                           ___xxtofl (ARG)
 ---------------------------------------------------------------------------------
 (3) ___fldiv                                             26    18      8    1425
                                              0 BANK0     26    18      8
                           ___xxtofl (ARG)
 ---------------------------------------------------------------------------------
 (2) _get_scale_val                                       19    15      4    1448
                                              0 BANK0     19    15      4
                            ___lldiv
                   _get_CELL_DAT_VAL
                  _set_CELL_CLK_HIGH
                   _set_CELL_CLK_LOW
 ---------------------------------------------------------------------------------
 (3) _set_CELL_CLK_LOW                                     2     2      0     121
                                              0 COMMON     2     2      0
 ---------------------------------------------------------------------------------
 (3) _set_CELL_CLK_HIGH                                    2     2      0      88
                                              0 COMMON     2     2      0
 ---------------------------------------------------------------------------------
 (3) _get_CELL_DAT_VAL                                     6     4      2     275
                                              0 COMMON     6     4      2
 ---------------------------------------------------------------------------------
 (3) ___lldiv                                             14     6      8     314
                                              0 COMMON    14     6      8
 ---------------------------------------------------------------------------------
 (2) ___flmul                                             26    18      8    2417
                                             26 BANK0     26    18      8
                          __Umul8_16
                            ___fldiv (ARG)
                           ___xxtofl (ARG)
 ---------------------------------------------------------------------------------
 (3) __Umul8_16                                            9     7      2     799
                                              0 COMMON     9     7      2
 ---------------------------------------------------------------------------------
 (1) _SYSTEM_Initialize                                    0     0      0       0
              _OSCILLATOR_Initialize
             _PIN_MANAGER_Initialize
                     _WDT_Initialize
 ---------------------------------------------------------------------------------
 (2) _WDT_Initialize                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _PIN_MANAGER_Initialize                               0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _OSCILLATOR_Initialize                                0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 9
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _SYSTEM_Initialize
     _OSCILLATOR_Initialize
     _PIN_MANAGER_Initialize
     _WDT_Initialize
   _calc_percentage
     ___fldiv
       ___xxtofl (ARG)
     ___flmul
       __Umul8_16
       ___fldiv (ARG)
       ___xxtofl (ARG)
     ___fltol
       ___fldiv (ARG)
       ___flmul (ARG)
       ___xxtofl (ARG)
     ___xxtofl
     _get_scale_val
       ___lldiv
       _get_CELL_DAT_VAL
       _set_CELL_CLK_HIGH
       _set_CELL_CLK_LOW
     _scale_convert_gram
       ___fldiv
       ___fltol
       ___xxtofl
   _initialize
     _get_scale_val
     _initialize_digit
       _print_digit
         ___awdiv
         ___awmod
         _encode_digit
           ___awdiv (ARG)
         _set_segments
           _start_segment
             _CLK_SET_HIGH
             _CLK_SET_LOW
             _CLK_SET_OUTPUT
             _DIO_SET_HIGH
             _DIO_SET_LOW
             _DIO_SET_OUTPUT
           _stop_segment
             _CLK_SET_HIGH
             _CLK_SET_LOW
             _CLK_SET_OUTPUT
             _DIO_SET_HIGH
             _DIO_SET_LOW
             _DIO_SET_OUTPUT
           _write_byte
             _CLK_SET_HIGH
             _CLK_SET_LOW
             _CLK_SET_OUTPUT
             _DIO_SET_HIGH
             _DIO_SET_INPUT
             _DIO_SET_LOW
             _DIO_SET_OUTPUT
             _get_DIO_PIN_value
       _set_brigthness
     _lcd_backlight
       _lcd_cmd
         _i2c_start
           _i2c_wait
         _i2c_stop
         _i2c_write
           _i2c_wait
     _lcd_clear
       _lcd_print
         _command
           _lcd_cmd
       _lcd_set_cursor
         _command
     _lcd_init
       _write4bits
         _lcd_cmd
     _lcd_print
     _lcd_print_with
       _lcd_print
       _lcd_set_cursor
     _sprintf
       _vfprintf
         _vfpfcnvrt
           _dtoa
             ___aodiv
             ___aomod
             _abs
               ___aomod (ARG)
             _pad
               _fputc
                 _putch
               _fputs
                 _fputc
               _strlen
           _fputc
           _strncmp
           _utoa
             ___lodiv
             ___lomod
             _pad
   _print_gram
     _lcd_clear
     _lcd_print_with
     _print_digit
     _sprintf

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             3F0      0       0       0        0.0%
EEDATA             100      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
BITCOMMON            E      0       0       1        0.0%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
COMMON               E      E       E       2      100.0%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
BITSFR2              0      0       0       3        0.0%
SFR2                 0      0       0       3        0.0%
STACK                0      0       0       3        0.0%
BITBANK0            50      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
BANK0               50     50      50       5      100.0%
BITSFR4              0      0       0       5        0.0%
SFR4                 0      0       0       5        0.0%
BITBANK1            50      0       0       6        0.0%
BITSFR5              0      0       0       6        0.0%
SFR5                 0      0       0       6        0.0%
BANK1               50     50      50       7      100.0%
BITSFR6              0      0       0       7        0.0%
SFR6                 0      0       0       7        0.0%
BITBANK2            50      0       0       8        0.0%
BITSFR7              0      0       0       8        0.0%
SFR7                 0      0       0       8        0.0%
BANK2               50      0      37       9       68.8%
BITSFR8              0      0       0       9        0.0%
SFR8                 0      0       0       9        0.0%
BITBANK3            50      0       0      10        0.0%
BITSFR9              0      0       0      10        0.0%
SFR9                 0      0       0      10        0.0%
BANK3               50      0      20      11       40.0%
BITSFR10             0      0       0      11        0.0%
SFR10                0      0       0      11        0.0%
BITBANK4            50      0       0      12        0.0%
BITSFR11             0      0       0      12        0.0%
SFR11                0      0       0      12        0.0%
BANK4               50      0       0      13        0.0%
BITSFR12             0      0       0      13        0.0%
SFR12                0      0       0      13        0.0%
BITBANK5            50      0       0      14        0.0%
BITSFR13             0      0       0      14        0.0%
SFR13                0      0       0      14        0.0%
BANK5               50      0       0      15        0.0%
BITSFR14             0      0       0      15        0.0%
SFR14                0      0       0      15        0.0%
BITBANK6            50      0       0      16        0.0%
BITSFR15             0      0       0      16        0.0%
SFR15                0      0       0      16        0.0%
BANK6               50      0       0      17        0.0%
BITSFR16             0      0       0      17        0.0%
SFR16                0      0       0      17        0.0%
BITBANK7            50      0       0      18        0.0%
BITSFR17             0      0       0      18        0.0%
SFR17                0      0       0      18        0.0%
BANK7               50      0       0      19        0.0%
BITSFR18             0      0       0      19        0.0%
SFR18                0      0       0      19        0.0%
BITSFR19             0      0       0      20        0.0%
SFR19                0      0       0      20        0.0%
ABS                  0      0     105      20        0.0%
BITBANK8            50      0       0      21        0.0%
BITSFR20             0      0       0      21        0.0%
SFR20                0      0       0      21        0.0%
BANK8               50      0       0      22        0.0%
BITSFR21             0      0       0      22        0.0%
SFR21                0      0       0      22        0.0%
BITBANK9            50      0       0      23        0.0%
BITSFR22             0      0       0      23        0.0%
SFR22                0      0       0      23        0.0%
BANK9               50      0       0      24        0.0%
BITSFR23             0      0       0      24        0.0%
SFR23                0      0       0      24        0.0%
BITBANK10           50      0       0      25        0.0%
BITSFR24             0      0       0      25        0.0%
SFR24                0      0       0      25        0.0%
BANK10              50      0       0      26        0.0%
BITSFR25             0      0       0      26        0.0%
SFR25                0      0       0      26        0.0%
BITBANK11           50      0       0      27        0.0%
BITSFR26             0      0       0      27        0.0%
SFR26                0      0       0      27        0.0%
BANK11              50      0       0      28        0.0%
BITSFR27             0      0       0      28        0.0%
SFR27                0      0       0      28        0.0%
BITBANK12           30      0       0      29        0.0%
BITSFR28             0      0       0      29        0.0%
SFR28                0      0       0      29        0.0%
BANK12              30      0       0      30        0.0%
BITSFR29             0      0       0      30        0.0%
SFR29                0      0       0      30        0.0%
BITSFR30             0      0       0      31        0.0%
SFR30                0      0       0      31        0.0%
DATA                 0      0     105      31        0.0%
BITSFR31             0      0       0      32        0.0%
SFR31                0      0       0      32        0.0%


Microchip Technology PIC Macro Assembler V2.32 build 20210201212658 
Symbol Table                                                                                   Sun Dec 19 15:46:01 2021

                   ___fldiv@aexp 0039                     ___fldiv@bexp 0038                     ___fldiv@sign 0031  
         __size_of_start_segment 001A                      _SSPSTATbits 0214                               l31 10D7  
                             l51 1F68                               l54 1F56                               l57 1F43  
                             l81 1FCC                               l75 1FD8                               l84 0006  
                             l78 1FC8                               l87 000A                               l96 1004  
                             l99 1008                     ___awdiv@sign 0076                     lcd_clear@col 0029  
            __Umul8_16@word_mpld 0076                     lcd_clear@row 0028                              l102 100F  
                            l210 1303                              l221 1468                              l302 0ADE  
                            l215 1FFF                              l208 12C9                              l232 1FEB  
                            l320 11E7                              l209 12FF                              l305 1025  
                            l170 1F86                              l314 125E                              l332 135A  
                            l253 0990                              l229 1F5E                              l173 1F90  
                            l237 0C44                              l246 1F7C                              l182 1FA4  
                            l326 1139                              l167 1F9A                              l191 1088  
                            l319 11D4                              l335 10F2                              l280 08ED  
                            l176 1FB8                              l249 1F72                              l185 1FAE  
                            l329 1054                              l363 0A35                              l179 1FC2  
                            l195 159B                              l276 0D27                              l188 106E  
                            l620 0FFF                              l358 17FF                              l366 152B  
                            l720 166C                              l632 0E00                              l713 1681  
                            l633 0E11                              l555 140D                              l723 1681  
                            l299 103C                              l619 0FEE                              l900 0384  
                            l672 0069                              l752 176A                              l922 075C  
                            l762 15FC                              l916 07E0                              l685 0853  
                            l935 1105                              l759 177A                              l928 07D4  
                            l960 0B01                              l937 1115                              l769 160C  
                            l962 0B8A                              l892 030F                              l876 0231  
                            l973 0B56                              l878 038D                              l974 0B62  
                            l966 0B3C                              l982 1185                              l897 035B  
                            l898 0375                              _abs 1089                              _pad 135B  
                   ___awmod@sign 0076                              wreg 0009                     ___flmul@aexp 004C  
                   ___flmul@bexp 004D                      command@mode 0074                     ___flmul@sign 0047  
                   ___flmul@temp 0052                     ___flmul@prod 004E        get_scale_val@weight_count 002D  
                ?_lcd_set_cursor 007A                   ??_encode_digit 007A                     ___fltol@exp1 005E  
                           l1011 1377                             l1020 00BC                             l1014 1399  
                           l1103 11AE                             l1112 10BC                             l1016 13B3  
                           l1024 00D9                             l1025 00F1                             l1106 0800  
                           l1042 01D9                             l1019 00B3                             ?_abs 0073  
                           l1028 0162                             l1116 14C4                             l1045 0E1D  
                           l1080 10A2                             l1064 0589                             l3001 081F  
                           l1057 0EFE                             l1049 0E38                             l3011 083A  
                           l3003 0824                             l1083 10A2                             l1076 1220  
                           l3013 083F                             l3005 0828                             l3101 1FF1  
                           l3007 082C                             l3015 0845                             l3111 0BCF  
                           l3103 1FF9                             l1095 12AD                             l3031 03B2  
                           l3023 0390                             l3201 13C4                             l3017 084A  
                           l3009 0836                             l3121 0C37                             l3113 0BEA  
                           l3105 0B8D                             l3033 03C4                             l3025 03A1  
                           l3211 13EF                             l3203 13C7                             l3123 1F74  
                           l3019 084F                             l3115 0BFD                             l3107 0BA1  
                           l3051 0469                             l3043 0410                             l3035 03D5  
                           l3027 03A9                             l3213 13F7                             l3205 13D2  
                           l3141 091D                             l3133 0901                             l3125 1F6A  
                           l3301 0245                             l3117 0C18                             l3109 0BBC  
                           l3061 04AF                             l3045 0428                             l3037 03DD  
                           l3029 03AE                             l3215 13F8                             l3207 13D6  
                           l3151 093E                             l3135 090A                             l3127 08EF  
                           l3303 0249                             l3231 1635                             l3223 160D  
                           l3119 0C2B                             l2511 1278                             l2503 125F  
                           l3071 0516                             l3055 0483                             l3047 0441  
                           l3039 03F6                             l3401 10F6                             l3217 13FF  
                           l3209 13DD                             l3153 0947                             l3145 0928  
                           l3129 08F7                             l3321 0288                             l3313 0260  
                           l3233 1636                             l3225 1619                             l2521 1FCD  
                           l2513 1295                             l2505 1264                             l3081 0555  
                           l3057 0495                             l3065 04C9                             l3049 044A  
                           l3403 10FD                             l3219 1405                             l3171 0983  
                           l3163 0965                             l3147 0931                             l3139 0914  
                           l3331 02A2                             l3323 028A                             l3315 0270  
                           l3307 0252                             l3235 163E                             l2611 1597  
                           l2603 157F                             l2523 1FD4                             l2515 12A5  
                           l2507 1269                             l2531 119E                             l3067 04E1  
                           l3075 0530                             l3059 049D                             l3091 0566  
                           l3405 1101                             l3165 096E                             l3157 0951  
                           l3501 0C54                             l3325 028F                             l3333 02A9  
                           l3341 02C8                             l3317 0278                             l3309 0257  
                           l3261 01E0                             l3253 1663                             l3245 164C  
                           l3237 1640                             l3229 1622                             l3421 0B09  
                           l3413 0AE0                             l2605 1588                             l3181 11B1  
                           l2621 0F2B                             l2509 126E                             l2525 1188  
                           l2533 10A4                             l2701 175B                             l3093 057F  
                           l3077 0542                             l3085 055B                             l3069 04EA  
                           l3407 110C                             l3175 098E                             l3159 095A  
                           l3511 0C78                             l3503 0C5C                             l3351 02E3  
                           l3343 02CE                             l3335 02BB                             l3327 029D  
                           l3319 0280                             l3271 01F3                             l3263 01E4  
                           l3255 1671                             l3239 1644                             l3247 165C  
                           l3431 0B29                             l3415 0AE5                             l2519 1FCD  
                           l2543 1FC3                             l2551 100C                             l3191 1119  
                           l3183 11C1                             l2631 0F6F                             l2623 0F35  
                           l2615 0EFF                             l2527 118B                             l2535 10A9  
                           l2703 175C                             l2711 15B4                             l3087 0563  
                           l3079 054A                             l3409 1111                             l3169 097A  
                           l3521 0C85                             l3505 0C5E                             l3361 02F4  
                           l3353 02E4                             l3345 02D6                             l3337 02BC  
                           l3329 02A1                             l3281 020B                             l3273 01FB  
                           l3265 01E8                             l3257 1676                             l3441 0B50  
                           l3433 0B2D                             l3425 0B12                             l3417 0AE9  
                           l2553 1F92                             l2561 1FBA                             l2609 158E  
                           l2545 1FC6                             l3193 1122                             l3185 11CB  
                           l3601 0AB5                             l2641 0F8A                             l2633 0F72  
                           l2625 0F54                             l2617 0F00                             l2529 1199  
                           l2537 10AD                             l2721 135D                             l2801 00B8  
                           l2713 15B8                             l2705 159C                             l3531 0CAE  
                           l3523 0C89                             l3507 0C69                             l3371 0319  
                           l3363 02F8                             l3355 02EB                             l3347 02D8  
                           l3339 02C4                             l3291 021E                             l3283 020F  
                           l3275 01FC                             l3267 01E9                             l3259 01DA  
                           l3451 0B81                             l3443 0B5A                             l3435 0B35  
                           l3427 0B17                             l3419 0AF9                             l2555 1F7E  
                           l2563 1F9C                             l3099 1FEC                             l2547 0004  
                           l3611 1019                             l3195 1126                             l3187 11DE  
                           l3179 10D9                             l3603 0ABA                             l2651 0FD0  
                           l2643 0FAC                             l2635 0F7A                             l2627 0F58  
                           l2619 0F0A                             l2539 10B6                             l2731 137A  
                           l2723 1362                             l2811 00EC                             l2803 00CB  
                           l2715 15BC                             l2707 15A9                             l3701 0633  
                           l3541 0CB9                             l3533 0CB4                             l3525 0C8E  
                           l3517 0C7A                             l3509 0C74                             l3381 034E  
                           l3373 0321                             l3365 030C                             l3349 02DF  
                           l3357 02EF                             l3293 0226                             l3285 0213  
                           l3269 01EE                             l3277 01FE                             l3453 0B82  
                           l3445 0B64                             l3437 0B43                             l3429 0B22  
                           l2557 1F88                             l2565 1FA6                             l2581 154F  
                           l2573 1539                             l2549 1001                             l3613 1021  
                           l3197 1130                             l3189 1118                             l3621 1233  
                           l3605 0ACB                             l2645 0FBC                             l2637 0F7E  
                           l2629 0F62                             l2661 0D5E                             l2653 0D28  
                           l2733 1386                             l2725 136B                             l2821 0131  
                           l2813 00F6                             l2805 00D1                             l2901 149E  
                           l2717 15DE                             l2709 15AC                             l3461 11F6  
                           l3471 10C2                             l3711 067B                             l3703 064D  
                           l3199 13B4                             l3551 0CE0                             l3543 0CBD  
                           l3527 0CA5                             l3519 0C81                             l3391 037E  
                           l3383 0369                             l3375 0325                             l3359 02F3  
                           l3295 0227                             l3287 0214                             l3279 0206  
                           l3447 0B78                             l3439 0B4C                             l2559 1FB0  
                           l2591 1564                             l2575 1542                             l2567 152D  
                           l2751 12AF                             l2911 1432                             l3631 1258  
                           l3623 123C                             l3615 1223                             l3607 0ACF  
                           l2647 0FBD                             l2639 0F82                             l2671 0D99  
                           l2663 0D7D                             l2655 0D29                             l2743 1089  
                           l2735 138B                             l2727 1370                             l2831 0198  
                           l2823 0135                             l2815 00F9                             l2807 00E1  
                           l2903 14A4                             l2719 15EE                             l3463 120E  
                           l3481 10CE                             l3473 10C5                             l3721 06B1  
                           l3713 0682                             l3705 065A                             l3545 0CC6  
                           l3529 0CA9                             l3553 0CE4                             l3393 0380  
                           l3385 036C                             l3377 033D                             l3369 0314  
                           l3289 0219                             l3297 0229                             l3449 0B7D  
                           l2921 1F57                             l2593 156D                             l2585 1554  
                           l2569 1535                             l2761 12B8                             l2753 12B3  
                           l2913 1435                             l3609 1011                             l3625 1241  
                           l3617 1225                             l3633 103E                             l2649 0FCB  
                           l2681 0DE2                             l2673 0D9D                             l2665 0D8A  
                           l2657 0D33                             l2745 1096                             l2737 139E  
                           l2729 1375                             l2841 01B4                             l2825 0170  
                           l2833 019D                             l2817 00FE                             l2809 00E7  
                           l2905 14B4                             l3465 1218                             l3457 11EA  
                           l3641 116A                             l3801 17F3                             l3483 10D3  
                           l3475 10C7                             l3491 1F40                             l3731 0712  
                           l3723 06C5                             l3715 068F                             l3707 0667  
                           l3651 0590                             l3555 0CEA                             l3547 0CCB  
                           l3539 0CB5                             l3387 0374                             l3379 0341  
                           l3299 0239                             l3571 08BD                             l3563 0856  
                           l3803 0993                             l2747 1056                             l2587 155D  
                           l2579 1546                             l2771 12D1                             l2763 12BC  
                           l2755 12B7                             l2915 1443                             l2931 1333  
                           l3627 124A                             l3619 1227                             l3635 104B  
                           l2675 0DBF                             l2667 0D8D                             l2659 0D54  
                           l2739 13A7                             l2843 01B9                             l2835 01A4  
                           l2827 017D                             l2819 012D                             l2691 1719  
                           l2683 16F7                             l2851 0E14                             l3459 11F2  
                           l3643 116C                             l3811 14C7                             l3485 1F50  
                           l3477 10C9                             l3469 10BD                             l3741 0731  
                           l3733 0719                             l3725 06D2                             l3717 0696  
                           l3709 066E                             l3661 05A3                             l3653 0594  
                           l3557 0D0B                             l3549 0CD0                             l3389 037A  
                           l3573 08D9                             l3565 0880                             l3805 09B7  
                           l2941 000B                             l2749 1070                             l2597 1571  
                           l2773 12D5                             l2765 12C0                             l2917 1448  
                           l2909 1410                             l3493 1FDB                             l2933 133C  
                           l2925 1305                             l3629 124E                             l3581 0A5A  
                           l2677 0DCF                             l2669 0D95                             l2845 01BD  
                           l2837 01A9                             l2829 018A                             l2693 171D  
                           l2685 1701                             l2861 0E54                             l2853 0E19  
                           l3645 117D                             l3637 1160                             l3813 151D  
                           ?_pad 0024                             l3487 1F53                             l3479 10CB  
                           l3399 10F4                             l3751 0745                             l3743 0738  
                           l3735 0725                             l3727 06E6                             l3719 06AA  
                           l3671 05BE                             l3663 05AB                             l3655 0598  
                           l3559 0D1F                             l3807 09C5                             l2951 001B  
                           l2943 000C                             l2599 157A                             l2775 12DB  
                           l2767 12C5                             l2919 144E                             l3495 1FE5  
                           l2791 1038                             l2783 1027                             l2935 1340  
                           l2927 1322                             l3591 0A84                             l3583 0A61  
                           l3575 0A37                             l2679 0DDD                             l2839 01AE  
                           l2847 01C6                             l2695 1721                             l2687 170E  
                           l2871 0E8B                             l2863 0E57                             l2855 0E2A  
                           l3639 1168                             l3831 1682                             l3489 1F54  
                           l3761 076E                             l3753 0759                             l3737 072C  
                           l3745 073C                             l3729 06FB                             l3681 05D5  
                           l3673 05C2                             l3665 05AD                             l3657 0599  
                           l3649 058A                             l3497 0C47                             l3569 0888  
                           l3809 09CB                             l2961 002F                             l2953 0020  
                           l2945 0010                             l2777 12F2                             l2769 12CD  
                           l2785 102A                             l2937 1348                             l2929 132A  
                           l3593 0A8C                             l3585 0A6C                             l3577 0A43  
                           l2793 006C                             l2697 1729                             l2689 1711  
                           l2881 0EE6                             l2865 0E5C                             l2873 0EB8  
                           l2857 0E30                             l3841 168D                             l3833 1685  
                           l3771 07A5                             l3763 0772                             l3747 0740  
                           l3739 0730                             l3683 05D7                             l3675 05C3  
                           l3667 05B5                             l3659 059E                             l3499 0C4B  
                           l2971 004F                             l2963 0034                             l2955 0024  
                           l2947 0015                             l2779 12F7                             l2787 1031  
                           l2939 1351                             l3595 0A91                             l3587 0A74  
                           l3579 0A4B                             l2795 007C                             l2891 147D  
                           l2699 174B                             l2875 0EBF                             l2883 0EEB  
                           l2867 0E83                             l2859 0E40                             l3851 1695  
                           l3843 168E                             l3835 1687                             l3781 07CF  
                           l3773 07B3                             l3765 078A                             l3757 0761  
                           l3749 0741                             l3693 05F2                             l3685 05DF  
                           l3677 05C8                             l3669 05BA                             l2981 0065  
                           l2973 0050                             l2965 0038                             l2957 0026  
                           l2949 0017                             l2789 1035                             l3597 0AA2  
                           l3589 0A80                             l2797 008F                             l2877 0ECB  
                           l2869 0E87                             l3861 16CE                             l3853 16A4  
                           l3845 1691                             l3837 1688                             l3783 07D0  
                           l3775 07BC                             l3759 0766                             l3767 078E  
                           l3695 05FF                             l3687 05E4                             l3679 05CD  
                           l2975 0055                             l2967 003C                             l2959 002C  
                           l2991 080B                             l3599 0AA6                             l2799 0095  
                           l2895 1480                             l2887 1469                             l2879 0ED8  
                           l3791 177D                             l3871 16DF                             l3863 16D2  
                           l3855 16B4                             l3847 1693                             l3839 168B  
                           l3785 07D8                             l3777 07BE                             l3769 079B  
                           l3697 060C                             l3689 05E9                             l2969 004B  
                           l2977 005B                             l2993 080D                             l2985 0801  
                           l2897 148C                             l2889 1471                             l3793 178C  
                           l3873 16E3                             l3865 16D6                             l3857 16BC  
                           l3849 1694                             l3779 07CB                             l3699 0626  
                           l2979 0060                             l2995 0811                             l2987 0802  
                           l2899 1495                             l3795 179B                             l3875 16E7  
                           l3867 16DA                             l3859 16CA                             l3789 1F5F  
                           l2997 0816                             l2989 0806                             l3797 17D3  
                           l3869 16DB                             l2999 081C                             l3799 17EB  
                           STR_1 203B                             STR_2 200F                             STR_3 2000  
                           STR_4 2024                             STR_5 201A                             STR_6 202C  
                           STR_7 2032                             STR_9 2032                             u3000 0198  
                           u3001 0197                             u3010 019D                             u3011 019C  
                           u3020 01A4                             u3100 0EE6                             u3021 01A3  
                           u3005 0194                             u3101 0EE5                             _LATA 010C  
                           u2310 1264                             u3030 01A9                             u3110 0EEB  
                           _LATB 010D                             u2311 1263                             u3031 01A8  
                           u3111 0EEA                             _LATC 010E                             u4000 034E  
                           u3200 001B                             u2400 000A                             u2320 1269  
                           u3040 01B4                             u3120 147D                             u4001 034D  
                           u3201 001A                             u2401 0009                             u2321 1268  
                           u3041 01B3                             u3121 147C                             u3105 0EE2  
                           _LATE 0110                             u4010 0369                             u3210 002C  
                           u2410 1008                             u2330 1278                             u3130 1495  
                           u3050 0E19                             u4011 0368                             u3211 002B  
                           u2411 1007                             u2331 1277                             u3131 1494  
                           u3051 0E18                             u4020 037E                             u4100 0B28  
                           u3300 0811                             u2500 1597                             u2420 100C  
                           u2340 1295                             u3140 149E                             u3060 0E2A  
                           u4021 037D                             u4005 034A                             u4101 0B27  
                           u3301 0810                             u2501 1596                             u2421 100B  
                           u2341 1294                             u3141 149D                             u3061 0E29  
                           u4030 1101                             u3230 003C                             u3310 081C  
                           u2430 1535                             u2350 1FD4                             u2510 0F0A  
                           u3150 14A4                             u3070 0EBF                             u4031 1100  
                           u4015 0365                             u3231 003B                             u3311 081B  
                           u2431 1534                             u2351 1FD3                             u2511 0F09  
                           u3151 14A3                             u3071 0EBE                             u4120 0B42  
                           u2440 1542                             u2360 1FD8                             u2600 0FD0  
                           u3160 14B4                             u3080 0ECB                             u3400 03D5  
                           u4200 1218                             u4121 0B41                             u3225 0030  
                           u2441 1541                             u2361 1FD7                             u2601 0FCF  
                           u2345 1291                             u3161 14B3                             u3081 0ECA  
                           u3065 0E26                             u3401 03D4                             u4201 1217  
                           u4050 1111                             u4210 0C69                             u3250 004B  
                           u3330 082C                             u2450 154F                             u3170 144E  
                           u2530 0F35                             u2370 11AE                             u3090 0ED8  
                           u3410 0428                             u4051 1110                             u4211 0C68  
                           u4115 0B36                             u3251 004A                             u3331 082B  
                           u2451 154E                             u3171 144D                             u2531 0F34  
                           u2371 11AD                             u3091 0ED7                             u3411 0427  
                           u4300 0598                             u3500 0931                             u4220 0C74  
                           u4140 0B50                             u4060 0AE5                             u3340 0836  
                           u2460 155D                             u2700 0DE2                             u2620 0D33  
                           u2380 10B6                             u3420 0441                             u4045 1106  
                           u4301 0597                             u3501 0930                             u4221 0C73  
                           u4141 0B4F                             u4061 0AE4                             u3245 003D  
                           u3341 0835                             u3325 0820                             u2461 155C  
                           u2701 0DE1                             u2621 0D32                             u2381 10B5  
                           u3421 0440                             u4310 059E                             u3510 0947  
                           u4150 0B56                             u4070 0AE9                             u3270 005B  
                           u3190 0010                             u2470 156D                             u2390 1FCC  
                           u2550 0F5F                             u3430 0495                             u4311 059D  
                           u3511 0946                             u4151 0B55                             u4135 0B46  
                           u4071 0AE8                             u3271 005A                             u3255 0047  
                           u3191 000F                             u2471 156C                             u2391 1FCB  
                           u3095 0ED4                             u3431 0494                             u4400 06F1  
                           u4320 05A3                             u3520 095A                             u4240 0CB4  
                           u4160 0B5A                             u4080 0B09                             u3280 0060  
                           u3360 0845                             u2480 157A                             u2560 0F6F  
                           u2640 0D5E                             u2720 16FE                             u2800 15FC  
                           u3440 04E1                             u4321 05A2                             u3521 0959  
                           u4241 0CB3                             u4161 0B59                             u4081 0B08  
                           u3281 005F                             u3265 0051                             u3361 0844  
                           u3345 0832                             u2481 1579                             u3185 1317  
                           u2561 0F6E                             u2641 0D5D                             u2801 15FB  
                           u3441 04E0                             u4410 0708                             u4330 05C2  
                           u3610 13EF                             u3530 096E                             u4250 0CD0  
                           u4170 0B6E                             u3370 084A                             u3290 0806  
                           u2490 1588                             u2570 0F82                             u2810 1362  
                           u2730 170E                             u3450 0542                             u4331 05C1  
                           u3611 13EE                             u3531 096D                             u4251 0CCF  
                           u4235 0C7B                             u3371 0849                             u3355 083B  
                           u3291 0805                             u2491 1587                             u2571 0F81  
                           u2811 1361                             u2731 170D                             u3451 0541  
                           u4500 0766                             u4340 05C8                             u3540 0983  
                           u4260 0CEA                             u3700 1662                             u4180 0B7D  
                           u3460 1FF1                             u2580 0FAC                             u2660 0D8A  
                           u2820 1370                             u2900 0088                             u2740 1721  
                           u3380 03A1                             u4501 0765                             u4405 06ED  
                           u4341 05C7                             u3605 13D7                             u3541 0982  
                           u4261 0CE9                             u3701 1661                             u4181 0B7C  
                           u3461 1FF0                             u2581 0FAB                             u2661 0D89  
                           u2821 136F                             u2741 1720                             u3381 03A0  
                           u4510 0772                             u4350 05CD                             u3630 1405  
                           u3470 08F7                             u4190 0B81                             u4270 0880  
                           u3550 11CB                             u2590 0FCB                             u2670 0D9D  
                           u2830 1399                             u2910 0095                             u2750 174B  
                           u3390 03C4                             u4511 0771                             u4415 0704  
                           u4351 05CC                             u3631 1404                             u3615 13EB  
                           u3471 08F6                             u4191 0B80                             u4175 0B6A  
                           u4095 0B1C                             u4271 087F                             u3551 11CA  
                           u2591 0FCA                             u2671 0D9C                             u2831 1398  
                           u2911 0094                             u2751 174A                             u3391 03C3  
                           u4520 0780                             u4440 0730                             u4360 05E4  
                           u3480 090A                             u3800 0239                             u3720 1671  
                           u3640 1619                             u3560 1139                             u4280 124A  
                           u2680 0DBF                             u2840 139E                             u2760 176A  
                           u4600 16C6                             u4441 072F                             u4425 0713  
                           u4361 05E3                             u3625 13F9                             u3481 0909  
                           u3801 0238                             u3721 1670                             u3641 1618  
                           u3561 1138                             u4281 1249                             u2585 0FA8  
                           u2681 0DBE                             u2841 139D                             u2761 1769  
                           u4530 079B                             u4370 05E9                             u3570 13C4  
                           u3490 091D                             u3810 0257                             u3730 1676  
                           u3650 162F                             u4290 1258                             u2690 0DDD  
                           u2850 1096                             u2930 00B8                             u2770 15A9  
                           u4531 079A                             u4435 0726                             u4371 05E8  
                           u3571 13C3                             u3491 091C                             u3811 0256  
                           u3731 1675                             u3715 1664                             u4275 087C  
                           u4291 1257                             u2691 0DDC                             u2851 1095  
                           u2835 1395                             u2931 00B7                             u2755 1747  
                           u2771 15A8                             u4540 07B3                             u4460 0740  
                           u3820 028F                             u3740 01E8                             u3660 1644  
                           u2860 12C0                             u2940 00CB                             u2780 15BC  
                           u4541 07B2                             u4525 077C                             u4461 073F  
                           u3821 028E                             u3741 01E7                             u3661 1643  
                           u2861 12BF                             u2685 0DBB                             u2941 00CA  
                           u2781 15BB                             u4550 07CF                             u4470 0745  
                           u3590 13D6                             u3910 02E3                             u3750 01EE  
                           u3670 164B                             u2870 12DB                             u2950 00E7  
                           u2790 15DE                             u4551 07CE                             u4535 0797  
                           u4471 0744                             u4455 0732                             u3591 13D5  
                           u3911 02E2                             u3751 01ED                             u3671 164A  
                           u3655 162B                             u2871 12DA                             u2855 1092  
                           u2951 00E6                             u2791 15DD                             u4480 0759  
                           u3760 01F3                             u4560 09C5                             u2880 12F7  
                           u2960 00EC                             u4545 07AF                             u4481 0758  
                           u4385 0668                             u3585 13C8                             u3905 02D9  
                           u3761 01F2                             u4561 09C4                             u2881 12F6  
                           u2961 00EB                             u2945 00C7                             u4617 16ED  
                           u4490 0760                             u3930 02F3                             u3850 02A1  
                           u3770 0213                             u3690 165B                             u2970 0170  
                           u2890 0087                             u4491 075F                             u4395 0697  
                           u3931 02F2                             u3851 02A0                             u3835 0290  
                           u3771 0212                             u3691 165A                             u4707 0AB1  
                           u4627 0A3C                             u2971 016F                             u2891 0085  
                           u2795 15DA                             u3940 02F8                             u3780 0219  
                           u2980 017D                             u3941 02F7                             u3925 02E5  
                           u3845 0297                             u3781 0218                             u3685 164D  
                           u4717 0ABB                             u4637 0A4E                             u2981 017C  
                           u3950 030C                             u3870 02BB                             u3790 021E  
                           u2990 018A                             u4590 16A0                             u4807 0CBA  
                           u3951 030B                             u3871 02BA                             u3791 021D  
                           u4727 0ACC                             u4647 0A5D                             u2991 0189  
                           u2975 016C                             u3960 0313                             u3880 02CE  
                           u4817 0CC3                             u3961 0312                             u3881 02CD  
                           u3865 02A3                             u4737 0ADA                             u4657 0A6A  
                           u3970 0319                             u3890 02D6                             u3971 0318  
                           u3891 02D5                             u3875 02B7                             u4747 133D  
                           u4667 0A75                             u2995 0186                             u3980 0325  
                           u3981 0324                             u4757 1022                             u4677 0A81  
                           u3990 0333                             u4767 1039                             u4687 0A92  
                           u4777 0C75                             u4697 0AA3                             u4787 0C86  
                           u3995 032F                             u4797 0CA6                    encode_digit@p 007A  
                           _WPUB 020D                             _WPUE 0210                             abs@a 0073  
                           _dbuf 01A0                  ??_lcd_backlight 0073                             _main 1682  
                           _dtoa 006A                             _prec 0152                    write_byte@ack 0074  
                           _nout 014E                             pad@i 0027                             pad@p 0025  
                           fsr0h 0005                             fsr1h 0007                             indf0 0000  
                           fsr0l 0004                             indf1 0001                             fsr1l 0006  
                           pad@w 0029                             btemp 007E                             _utoa 0E12  
                   print_digit@p 002A                             start 0002                  ___fldiv@new_exp 0032  
                ?_lcd_print_with 0026                initialize_digit@p 002D                            ??_abs 0075  
                          ??_pad 007C   __size_of_OSCILLATOR_Initialize 0007    __end_of_OSCILLATOR_Initialize 1F57  
          __size_of_stop_segment 001A                    ___fltol@sign1 005D                  __end_of___aodiv 1000  
                          ?_main 0070                            ?_dtoa 0030                  __end_of___aomod 0E12  
                __end_of___fldiv 038E                  __end_of___awdiv 006A                            STR_11 2035  
                          STR_13 2035                            STR_16 2038                            STR_18 2038  
                __end_of___awmod 0854                  __end_of___flmul 07E1                  __end_of___fltol 1682  
                __end_of___lldiv 140E                            ?_utoa 0030                  __end_of___lodiv 177B  
                ___awdiv@divisor 0070                  __end_of___lomod 160D                  ___awdiv@counter 0075  
                   vfpfcnvrt@fmt 004E                     vfpfcnvrt@llu 0064                            _TRISA 008C  
                          _TRISB 008D                            _TRISC 008E                            _TRISE 0090  
                   main@loadcell 00DE           scale_convert_gram@temp 0067                     lcd_print@cmd 0020  
                   lcd_print@str 007A                  __end_of_lcd_cmd 103D                  __end_of_command 135B  
                          _flags 0154                   _WDT_Initialize 1F40                            _fputc 125F  
                          _fputs 1186                    _start_segment 1055                   write_byte@data 0075  
                          pad@fp 002B                            _width 0150                            _putch 0800  
                          dtoa@d 0030                            dtoa@i 004C                            dtoa@n 0044  
                          dtoa@p 003D                            dtoa@s 0042                            dtoa@w 0040  
       __size_of_calc_percentage 00A5                            utoa@d 0030                            utoa@i 0045  
                          utoa@n 003D                            utoa@p 0038                            utoa@w 003B  
                          status 0003               _scale_convert_gram 0854                            wtemp0 007E  
                __end_of_sprintf 1186       __size_of_set_CELL_CLK_HIGH 000A                  __end_of_strncmp 14C5  
               ___lodiv@dividend 0028                  ??_get_scale_val 0024             __end_of_CLK_SET_HIGH 1F87  
                __initialization 07E1                     _stop_segment 106F              ?_scale_convert_gram 0070  
                   __end_of_main 16F7                     __end_of_dtoa 01DA                    command@lownib 0078  
                   __end_of_utoa 0EFF             __end_of_DIO_SET_HIGH 1FA5                 __end_of_i2c_wait 1FD9  
               __end_of_i2c_stop 000B                           ??_main 00D6                           ??_dtoa 0038  
                         ??_utoa 007D             __size_of_CLK_SET_LOW 000A                 ___lodiv@quotient 0071  
         __end_of_WDT_Initialize 1F44             __size_of_DIO_SET_LOW 000A             ??_scale_convert_gram 005F  
                set_segments@pos 007A                   ?_start_segment 0070                  DIO_SET_OUTPUT@p 0071  
              get_CELL_DAT_VAL@p 0075                           ?_fputc 0070                           ?_fputs 0078  
               ___awdiv@dividend 0072                           _APFCON 011D                           _ANSELA 018C  
                         ?_putch 0070                           _ANSELB 018D                           _BORCON 0116  
                         _OSCCON 0099                set_CELL_CLK_LOW@p 0071                           u252lld 0F29  
                         u261lld 0FEE                           u254lld 0F54                           u271lld 0E00  
                         u263lld 0D52                           u265lld 0D7D                           _WDTCON 0097  
                         u292lld 00B3                           _SSPADD 0212                           _SSPBUF 0211  
             __size_of_i2c_start 000A                 __end_of___xxtofl 0B8B               __size_of_i2c_write 0010  
              ?_initialize_digit 0070         __end_of_get_CELL_DAT_VAL 0991               ??_initialize_digit 002C  
                   vfprintf@cfmt 00A3                 __end_of_lcd_init 0ADF                        ??___aodiv 0070  
                      ??___aomod 0070                        ??___fldiv 0028                        ??___awdiv 0074  
                      ??___awmod 0074                        ??___flmul 0042                        ??___fltol 0058  
                      ??___lldiv 0078                        ??___lodiv 0070                        ??___lomod 0070  
           __end_of_encode_digit 1F5F                 calc_percentage@p 006C                 ___awdiv@quotient 0077  
                ___awmod@divisor 0070                  ___awmod@counter 0075                           pad@buf 0024  
                      ??_lcd_cmd 0072                           dtoa@fp 003F                        ??_command 0075  
                         _strlen 10A3                           fputc@c 0070                           fputs@c 0020  
                         fputs@i 0021                           fputs@s 0023               __size_of__Umul8_16 0023  
                ?_WDT_Initialize 0070                      initialize@p 00C4                           putch@c 0070  
                 print_digit@tmp 002B                 __end_of_vfprintf 1221                           utoa@fp 003A  
                      ??_sprintf 00AB          __size_of_set_brigthness 0014                        ??_strncmp 0076  
                   ?_print_digit 007D                     ___xxtofl@arg 007A                     ___xxtofl@exp 0079  
              _SYSTEM_Initialize 1F5F                     ___xxtofl@val 0070          __end_of__initialization 07FD  
             ?_SYSTEM_Initialize 0070                   print_gram@row1 00B5                   print_gram@row2 00C5  
        __size_of_CLK_SET_OUTPUT 000A                       ___fltol@f1 0054        __size_of_set_CELL_CLK_LOW 000A  
                 command@highnib 0077         set_brigthness@brightness 0070                   __pcstackCOMMON 0070  
              ??_calc_percentage 00A0                     __pidataBANK2 113A              ??_SYSTEM_Initialize 0070  
                  __end_of_fputc 12AE                    __end_of_fputs 11AF                    __end_of_putch 0801  
                 get_scale_val@i 0031                   get_scale_val@j 002C                   get_scale_val@p 0032  
          __end_of_DIO_SET_INPUT 1FC3                __end_of_i2c_start 1FCD                 ??_lcd_set_cursor 007C  
              __end_of_i2c_write 1010                   _OPTION_REGbits 0095                  ??_start_segment 0072  
             __size_of_lcd_clear 003E               __size_of_lcd_print 0024                          ??_fputc 0073  
      __end_of_SYSTEM_Initialize 1F69                          ??_fputs 0079                          ??_putch 0070  
                     __pbssBANK2 0144                       __pbssBANK3 01A0            __size_of_CLK_SET_HIGH 000A  
               ??_lcd_print_with 002A                        ?_i2c_wait 0070                        ?_i2c_stop 0070  
              lcd_print_with@col 0028                _get_DIO_PIN_value 152C                lcd_print_with@row 0029  
              lcd_print_with@str 0026          __size_of_DIO_SET_OUTPUT 000A               ?_get_DIO_PIN_value 0070  
          __size_of_DIO_SET_HIGH 000A                __end_of__Umul8_16 1116                       __pmaintext 1682  
            ??_get_DIO_PIN_value 0070                          ?_strlen 0070               set_CELL_CLK_HIGH@p 0071  
             set_segments@length 0079                        ?___xxtofl 0070                     _CLK_SET_HIGH 1F7D  
             __size_of_vfpfcnvrt 01FC                          _OSCTUNE 0098                          _SSPCON1 0215  
                        _SSPCON2 0216                        ?_lcd_init 0070                          _SSPSTAT 0214  
               ___lomod@dividend 0028        __end_of_get_DIO_PIN_value 159C                     _DIO_SET_HIGH 1F9B  
                     ??_i2c_wait 0070                       ??_i2c_stop 0070            __end_of_lcd_backlight 1026  
          __size_of_encode_digit 0008                __end_of_lcd_clear 125F                          ___aodiv 0EFF  
              __end_of_lcd_print 113A                          ___aomod 0D28                          ___fldiv 01DA  
                        ___awdiv 000B                          ___awmod 0801                          ___flmul 058A  
                        ___fltol 160D                          ___lldiv 13B4                          ___lodiv 16F7  
                        ___lomod 159C                        ?_vfprintf 006D                    ?_set_segments 0078  
                     _initialize 177B                          __ptext1 14C5                          __ptext2 177B  
                        __ptext3 115E                          __ptext4 11E8                          __ptext5 038E  
                        __ptext6 0E12                          __ptext7 159C                          __ptext8 16F7  
                        __ptext9 1469                          _lcd_cmd 1026                          _command 1304  
                __size_of_strlen 001A            _OSCILLATOR_Initialize 1F50                     __size_of_abs 001A  
                   __size_of_pad 0059                       ??___xxtofl 0074                 ___awmod@dividend 0072  
                        _segdata 012C         ??_PIN_MANAGER_Initialize 0070                   _set_brigthness 1FEC  
                        main@lcd 00D8       __size_of_SYSTEM_Initialize 000A                          _sprintf 115E  
                        clrloop0 1F45                       ??_lcd_init 0076                          _strncmp 1469  
           end_of_initialization 07FD                     _encode_digit 1F57               clear_segment@F2810 014A  
                        fputc@fp 0072                          init_ram 1F4A                          fputs@fp 0078  
                        initloop 1F4B                   _CLK_SET_OUTPUT 1F91             __size_of_print_digit 00BA  
           set_segments@segments 0078                  ___lldiv@divisor 0070                  ___lldiv@counter 007D  
          __end_of_get_scale_val 0D28                 _set_CELL_CLK_LOW 1F73                ?_get_CELL_DAT_VAL 0070  
              __end_of_vfpfcnvrt 058A                  print_digit@data 0026               ??_get_CELL_DAT_VAL 0072  
                 ??_set_segments 007B                       ??_vfprintf 00A0                    ??_CLK_SET_LOW 0070  
                        strlen@a 0073                          strlen@s 0074                 ??_WDT_Initialize 0070  
                      _PORTBbits 000D                    ??_DIO_SET_LOW 0070        __size_of_initialize_digit 0013  
                   _m_brightness 0156                       _print_gram 14C5                    i2c_write@data 0070  
         __end_of_set_brigthness 2000        lcd_set_cursor@row_offsets 0020                    ___xxtofl@sign 0078  
                     lcd_cmd@cmd 0071      __size_of_scale_convert_gram 009A                      ___fldiv@grs 0034  
                    ___fldiv@rem 002D                       lcd_clear@p 002A                 initialize@valstr 00B4  
     __size_of_get_DIO_PIN_value 0070                  _calc_percentage 0991           __end_of_CLK_SET_OUTPUT 1F9B  
                     main@tm1637 00DC                      ___flmul@grs 0048                       command@val 0073  
                 _DIO_SET_OUTPUT 1FAF                       lcd_print@p 0021                      print_gram@p 00D5  
                     _write4bits 10D8                      vfpfcnvrt@ap 004F                      vfpfcnvrt@fp 006C  
                    vfpfcnvrt@ll 005C                       _write_byte 12AE                      ?_initialize 0070  
         ?_OSCILLATOR_Initialize 0070                   __end_of_strlen 10BD              start_initialization 07E1  
                ___lodiv@divisor 0020                  ?_set_brigthness 0070              __end_of_CLK_SET_LOW 1F91  
                ___lodiv@counter 0079  __size_of_PIN_MANAGER_Initialize 001B                      __end_of_abs 10A3  
                      _i2c_start 1FC3                      __end_of_pad 13B4                        _i2c_write 1000  
            __end_of_DIO_SET_LOW 1FAF                   DIO_SET_INPUT@p 0071                  ?_CLK_SET_OUTPUT 0070  
         __end_of_DIO_SET_OUTPUT 1FB9                __size_of_i2c_wait 000C                __size_of_i2c_stop 0007  
                    vfprintf@fmt 006D                        __Umul8_16 10F3          get_scale_val@weight_add 0028  
                    __pdataBANK2 0120                         ??_strlen 0072                      ?_print_gram 0070  
                      ___fldiv@a 0020                        ___fldiv@b 0024              lcd_set_cursor@F2781 0136  
                      ___flmul@a 003E                        ___flmul@b 003A                        ___latbits 0003  
        __end_of_calc_percentage 0A36                    __pcstackBANK0 0020                    __pcstackBANK1 00A0  
               ___aodiv@dividend 0028                       ?_i2c_start 0070                       ?_i2c_write 0070  
          __end_of_start_segment 106F                __size_of___xxtofl 00AC             __end_of_set_segments 1469  
                ?_DIO_SET_OUTPUT 0070                __size_of_lcd_init 00A9              __size_of_initialize 0085  
         __size_of_DIO_SET_INPUT 000A                 set_brigthness@on 0071           _PIN_MANAGER_Initialize 10BD  
                      _dtoa$1239 003B                    ?_stop_segment 0070                      ?_write4bits 0073  
                       ?___aodiv 0020                         ?___aomod 0020                         ?___fldiv 0020  
                       ?___awdiv 0070                 ___aodiv@quotient 0073                         ?___awmod 0070  
                       ?___flmul 003A                         ?___fltol 0054                         ?___lldiv 0070  
                       ?___lodiv 0020                         ?___lomod 0020                       ?__Umul8_16 0070  
                      _lcd_clear 1221                      _CLK_SET_LOW 1F87                      ?_write_byte 0072  
                      _lcd_print 1116                         ?_lcd_cmd 0071                __size_of_vfprintf 0039  
               _initialize_digit 1FD9                         ?_command 0073                  ___lomod@divisor 0020  
                    _DIO_SET_LOW 1FA5                  ___lomod@counter 0071         __end_of_set_CELL_CLK_LOW 1F7D  
                       ?_sprintf 00A5                   __size_of_fputc 004F                   __size_of_fputs 0029  
                       ?_strncmp 0070                   __size_of_putch 0001          __size_of_lcd_set_cursor 0039  
                    write4bits@p 0075     get_scale_val@scale_avg_count 0020                    CLK_SET_HIGH@p 0071  
                      clear_ram0 1F44                  lcd_set_cursor@p 0025              __size_of_print_gram 0067  
                 ??_stop_segment 0072                        main@F2851 0142                        main@F2853 0144  
                      main@F2847 0120                        main@F2849 013E          __size_of_lcd_print_with 0018  
                     ?_lcd_clear 0070                encode_digit@digit 0079                        _vfpfcnvrt 038E  
                     ?_lcd_print 007A                        lcd_init@p 0078                    _DIO_SET_INPUT 1FB9  
                      main@drink 00EA              scale_convert_gram@p 006B                      write_byte@b 0072  
                    write_byte@i 0076                      write_byte@p 0077        __size_of_get_CELL_DAT_VAL 00A3  
         __size_of_lcd_backlight 0016                 ?_calc_percentage 0070                      ??_i2c_start 0070  
                    ??_i2c_write 0070              __size_of_write4bits 001B                    ??_print_digit 0022  
                       _i2c_wait 1FCD                    DIO_SET_HIGH@p 0071                         _i2c_stop 0004  
            __size_of_write_byte 0056                    set_segments@k 0020                    set_segments@p 0021  
                     vfprintf@ap 006F                       vfprintf@fp 00A2                    stop_segment@p 0072  
        ??_OSCILLATOR_Initialize 0070                      ??__Umul8_16 0072                 __size_of___aodiv 0101  
               __size_of___aomod 00EA                 __size_of___fldiv 01B4                 __size_of___awdiv 005F  
               __size_of___awmod 0053                 __size_of___flmul 0257                 __size_of___fltol 0075  
               __size_of___lldiv 005A                 __size_of___lodiv 0084                 __size_of___lomod 0071  
                     ?_vfpfcnvrt 004E                     ??_initialize 00B3                 ??_set_brigthness 0072  
                ___aodiv@divisor 0020                  ___aodiv@counter 0071                   ?_DIO_SET_INPUT 0070  
               __size_of_lcd_cmd 0017                 __size_of_command 0057                       sprintf@fmt 00A5  
     __end_of_scale_convert_gram 08EE                         ___xxtofl 0ADF                  lcd_print_with@p 007D  
                set_brigthness@p 0073            __size_of_set_segments 005B                 ??_CLK_SET_OUTPUT 0070  
         __size_of_get_scale_val 00E3                         __ptext10 006A                         __ptext11 135B  
                       __ptext20 0A36                         __ptext12 10A3                         __ptext21 10D8  
                       __ptext13 1186                         __ptext30 1FC3                         __ptext22 1221  
                       __ptext14 125F                         __ptext31 1FCD                         __ptext23 11AF  
                       __ptext15 0800                         __ptext40 1055                         __ptext32 1FD9  
                       __ptext24 1116                         __ptext16 1089                         __ptext41 1FAF  
                       __ptext33 1FEC                         __ptext25 1304                         __ptext17 0D28  
                       __ptext50 0991                         __ptext42 1FA5                         __ptext34 0B8B  
                       __ptext26 1010                         __ptext18 0EFF                         __ptext51 0854  
                       __ptext43 1F9B                         __ptext35 140E                         __ptext27 1026  
                       __ptext19 103D                         __ptext60 058A                         __ptext52 0ADF  
                       __ptext44 1F91                         __ptext36 12AE                         __ptext28 1000  
                       __ptext61 10F3                         __ptext53 160D                         __ptext45 1F87  
                       __ptext37 152C                         __ptext29 0004                         __ptext62 1F5F  
                       __ptext54 01DA                         __ptext46 1F7D                         __ptext38 1FB9  
                       __ptext63 1F40                         __ptext55 0C45                         __ptext47 1F57  
                       __ptext39 106F                         __ptext64 10BD                         __ptext56 1F73  
                       __ptext48 0801                         __ptext65 1F50                         __ptext57 1F69  
                       __ptext49 000B                         __ptext58 08EE                         __ptext59 13B4  
                       _lcd_init 0A36                 __size_of_sprintf 0028                 __size_of_strncmp 005C  
                  __size_of_main 0075                    __size_of_dtoa 0170                    __size_of_utoa 00ED  
             __end_of_initialize 1800                    write4bits@val 0073                     CLK_SET_LOW@p 0071  
            __end_of_print_digit 0C45                    _lcd_backlight 1010                         lcd_cmd@p 0072  
                       _vfprintf 11E8                         command@p 0079                      ??_lcd_clear 0026  
                   _set_segments 140E                      ??_lcd_print 007C                 ___aomod@dividend 0028  
                   ??_print_gram 00B3                    ?_CLK_SET_HIGH 0070                     DIO_SET_LOW@p 0071  
              print_digit@number 007D             __end_of_stop_segment 1089                 ??_DIO_SET_OUTPUT 0070  
                CLK_SET_OUTPUT@p 0071                   __pstringtext10 0000          __size_of_WDT_Initialize 0004  
                  ?_DIO_SET_HIGH 0070                   _lcd_set_cursor 11AF                lcd_set_cursor@cmd 0024  
              lcd_set_cursor@col 007A                        sprintf@ap 00AD                lcd_set_cursor@row 007B  
               ___lldiv@dividend 0074          ?_PIN_MANAGER_Initialize 0070               get_DIO_PIN_value@p 0071  
       __end_of_initialize_digit 1FEC                 print_digit@F2820 013A                   ?_lcd_backlight 0070  
                      strncmp@_l 0070                        strncmp@_r 0072                _set_CELL_CLK_HIGH 1F69  
             __end_of_print_gram 152C                     ??_write4bits 0074                    _get_scale_val 0C45  
                 _lcd_print_with 103D               ?_set_CELL_CLK_HIGH 0070                  ___aomod@divisor 0020  
                    ??_vfpfcnvrt 0050                  ___aomod@counter 0071                     ?_CLK_SET_LOW 0070  
                   ??_write_byte 0073                  ??_DIO_SET_INPUT 0070                    __pstringtext1 2000  
                  __pstringtext2 200F                    __pstringtext3 201A                    __pstringtext4 2024  
                  __pstringtext5 202C                    __pstringtext6 2032                    __pstringtext7 2035  
                  __pstringtext8 2038                    __pstringtext9 203B              ??_set_CELL_CLK_HIGH 0070  
         __Umul8_16@multiplicand 0070                     ?_DIO_SET_LOW 0070                   ??_CLK_SET_HIGH 0070  
                       sprintf@f 00AE                         sprintf@s 00AC                 ___lldiv@quotient 0079  
               _get_CELL_DAT_VAL 08EE                         strncmp@l 0077                         strncmp@n 0074  
                       strncmp@r 0079                      _SSPCON1bits 0215                      _SSPCON2bits 0216  
              ?_set_CELL_CLK_LOW 0070           __end_of_lcd_set_cursor 11E8                   start_segment@p 0072  
                 ??_DIO_SET_HIGH 0070                    ?_encode_digit 0079               ??_set_CELL_CLK_LOW 0070  
             __end_of_write4bits 10F3                     ___aodiv@sign 0072   __end_of_PIN_MANAGER_Initialize 10D8  
                    _print_digit 0B8B        __end_of_set_CELL_CLK_HIGH 1F73             __Umul8_16@multiplier 0078  
             __end_of_write_byte 1304                   lcd_backlight@p 0074                     ___aomod@sign 0072  
         __end_of_lcd_print_with 1055                   ?_get_scale_val 0020                __Umul8_16@product 0074  

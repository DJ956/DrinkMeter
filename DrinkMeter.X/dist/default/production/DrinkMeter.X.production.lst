

Microchip MPLAB XC8 Assembler V2.32 build 20210201212658 
                                                                                               Mon Oct 25 23:08:07 2021

Microchip MPLAB XC8 C Compiler v2.32 (Free license) build 20210201212658 Og1 
     1                           	processor	16F1827
     2                           	pagewidth 120
     3                           	opt	flic
     4                           	psect	idataBANK0,global,class=CODE,delta=2,noexec
     5                           	psect	cinit,global,class=CODE,merge=1,delta=2
     6                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,noexec
     7                           	psect	dataBANK0,global,class=BANK0,space=1,delta=1,noexec
     8                           	psect	inittext,global,class=CODE,delta=2
     9                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1,noexec
    10                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,noexec
    11                           	psect	maintext,global,class=CODE,merge=1,split=1,delta=2
    12                           	psect	text1,local,class=CODE,merge=1,delta=2
    13                           	psect	text2,local,class=CODE,merge=1,delta=2
    14                           	psect	text3,local,class=CODE,merge=1,delta=2
    15                           	psect	text4,local,class=CODE,merge=1,delta=2
    16                           	psect	text5,local,class=CODE,merge=1,delta=2
    17                           	psect	text6,local,class=CODE,merge=1,delta=2
    18                           	psect	text7,local,class=CODE,merge=1,delta=2
    19                           	psect	text8,local,class=CODE,merge=1,delta=2
    20                           	psect	text9,local,class=CODE,merge=1,delta=2
    21                           	psect	text10,local,class=CODE,merge=1,delta=2
    22                           	psect	text11,local,class=CODE,merge=1,delta=2
    23                           	psect	text12,local,class=CODE,merge=1,delta=2
    24                           	psect	text13,local,class=CODE,merge=1,delta=2
    25                           	psect	text14,local,class=CODE,merge=1,delta=2
    26                           	psect	text15,local,class=CODE,merge=1,delta=2
    27                           	psect	text16,local,class=CODE,merge=1,delta=2
    28                           	psect	text17,local,class=CODE,merge=1,delta=2
    29                           	psect	text18,local,class=CODE,merge=1,delta=2
    30                           	psect	text19,local,class=CODE,merge=1,delta=2
    31                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=2,noexec
    32                           	dabs	1,0x7E,2
    33  0000                     
    34                           ; Version 2.32
    35                           ; Generated 02/02/2021 GMT
    36                           ; 
    37                           ; Copyright Â© 2021, Microchip Technology Inc. and its subsidiaries ("Microchip")
    38                           ; All rights reserved.
    39                           ; 
    40                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    41                           ; 
    42                           ; Redistribution and use in source and binary forms, with or without modification, are
    43                           ; permitted provided that the following conditions are met:
    44                           ; 
    45                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    46                           ;        conditions and the following disclaimer.
    47                           ; 
    48                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    49                           ;        of conditions and the following disclaimer in the documentation and/or other
    50                           ;        materials provided with the distribution. Publication is not required when
    51                           ;        this file is used in an embedded application.
    52                           ; 
    53                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    54                           ;        software without specific prior written permission.
    55                           ; 
    56                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    57                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    58                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    59                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    60                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    61                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    62                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    63                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    64                           ; 
    65                           ; 
    66                           ; Code-generator required, PIC16F1827 Definitions
    67                           ; 
    68                           ; SFR Addresses
    69  0000                     	;# 
    70  0001                     	;# 
    71  0002                     	;# 
    72  0003                     	;# 
    73  0004                     	;# 
    74  0005                     	;# 
    75  0006                     	;# 
    76  0007                     	;# 
    77  0008                     	;# 
    78  0009                     	;# 
    79  000A                     	;# 
    80  000B                     	;# 
    81  000C                     	;# 
    82  000D                     	;# 
    83  0011                     	;# 
    84  0012                     	;# 
    85  0013                     	;# 
    86  0014                     	;# 
    87  0015                     	;# 
    88  0016                     	;# 
    89  0016                     	;# 
    90  0017                     	;# 
    91  0018                     	;# 
    92  0019                     	;# 
    93  001A                     	;# 
    94  001B                     	;# 
    95  001C                     	;# 
    96  001E                     	;# 
    97  001F                     	;# 
    98  008C                     	;# 
    99  008D                     	;# 
   100  0091                     	;# 
   101  0092                     	;# 
   102  0093                     	;# 
   103  0094                     	;# 
   104  0095                     	;# 
   105  0096                     	;# 
   106  0097                     	;# 
   107  0098                     	;# 
   108  0099                     	;# 
   109  009A                     	;# 
   110  009B                     	;# 
   111  009B                     	;# 
   112  009C                     	;# 
   113  009D                     	;# 
   114  009E                     	;# 
   115  010C                     	;# 
   116  010D                     	;# 
   117  0111                     	;# 
   118  0112                     	;# 
   119  0113                     	;# 
   120  0114                     	;# 
   121  0115                     	;# 
   122  0116                     	;# 
   123  0117                     	;# 
   124  0118                     	;# 
   125  0119                     	;# 
   126  011A                     	;# 
   127  011B                     	;# 
   128  011D                     	;# 
   129  011E                     	;# 
   130  018C                     	;# 
   131  018D                     	;# 
   132  0191                     	;# 
   133  0191                     	;# 
   134  0192                     	;# 
   135  0193                     	;# 
   136  0193                     	;# 
   137  0193                     	;# 
   138  0194                     	;# 
   139  0195                     	;# 
   140  0196                     	;# 
   141  0199                     	;# 
   142  019A                     	;# 
   143  019B                     	;# 
   144  019B                     	;# 
   145  019B                     	;# 
   146  019B                     	;# 
   147  019C                     	;# 
   148  019C                     	;# 
   149  019D                     	;# 
   150  019E                     	;# 
   151  019F                     	;# 
   152  020C                     	;# 
   153  020D                     	;# 
   154  0211                     	;# 
   155  0211                     	;# 
   156  0212                     	;# 
   157  0212                     	;# 
   158  0213                     	;# 
   159  0213                     	;# 
   160  0214                     	;# 
   161  0214                     	;# 
   162  0215                     	;# 
   163  0215                     	;# 
   164  0215                     	;# 
   165  0216                     	;# 
   166  0216                     	;# 
   167  0217                     	;# 
   168  0217                     	;# 
   169  0219                     	;# 
   170  021A                     	;# 
   171  021B                     	;# 
   172  021C                     	;# 
   173  021D                     	;# 
   174  021E                     	;# 
   175  021F                     	;# 
   176  0291                     	;# 
   177  0291                     	;# 
   178  0292                     	;# 
   179  0293                     	;# 
   180  0294                     	;# 
   181  0295                     	;# 
   182  0295                     	;# 
   183  0296                     	;# 
   184  0298                     	;# 
   185  0298                     	;# 
   186  0299                     	;# 
   187  029A                     	;# 
   188  029B                     	;# 
   189  029C                     	;# 
   190  029C                     	;# 
   191  029D                     	;# 
   192  029E                     	;# 
   193  029E                     	;# 
   194  0311                     	;# 
   195  0311                     	;# 
   196  0312                     	;# 
   197  0313                     	;# 
   198  0318                     	;# 
   199  0318                     	;# 
   200  0319                     	;# 
   201  031A                     	;# 
   202  0394                     	;# 
   203  0395                     	;# 
   204  0396                     	;# 
   205  039A                     	;# 
   206  039C                     	;# 
   207  039D                     	;# 
   208  039E                     	;# 
   209  039F                     	;# 
   210  0415                     	;# 
   211  0416                     	;# 
   212  0417                     	;# 
   213  041C                     	;# 
   214  041D                     	;# 
   215  041E                     	;# 
   216  0FE4                     	;# 
   217  0FE5                     	;# 
   218  0FE6                     	;# 
   219  0FE7                     	;# 
   220  0FE8                     	;# 
   221  0FE9                     	;# 
   222  0FEA                     	;# 
   223  0FEB                     	;# 
   224  0FED                     	;# 
   225  0FEE                     	;# 
   226  0FEF                     	;# 
   227  0000                     	;# 
   228  0001                     	;# 
   229  0002                     	;# 
   230  0003                     	;# 
   231  0004                     	;# 
   232  0005                     	;# 
   233  0006                     	;# 
   234  0007                     	;# 
   235  0008                     	;# 
   236  0009                     	;# 
   237  000A                     	;# 
   238  000B                     	;# 
   239  000C                     	;# 
   240  000D                     	;# 
   241  0011                     	;# 
   242  0012                     	;# 
   243  0013                     	;# 
   244  0014                     	;# 
   245  0015                     	;# 
   246  0016                     	;# 
   247  0016                     	;# 
   248  0017                     	;# 
   249  0018                     	;# 
   250  0019                     	;# 
   251  001A                     	;# 
   252  001B                     	;# 
   253  001C                     	;# 
   254  001E                     	;# 
   255  001F                     	;# 
   256  008C                     	;# 
   257  008D                     	;# 
   258  0091                     	;# 
   259  0092                     	;# 
   260  0093                     	;# 
   261  0094                     	;# 
   262  0095                     	;# 
   263  0096                     	;# 
   264  0097                     	;# 
   265  0098                     	;# 
   266  0099                     	;# 
   267  009A                     	;# 
   268  009B                     	;# 
   269  009B                     	;# 
   270  009C                     	;# 
   271  009D                     	;# 
   272  009E                     	;# 
   273  010C                     	;# 
   274  010D                     	;# 
   275  0111                     	;# 
   276  0112                     	;# 
   277  0113                     	;# 
   278  0114                     	;# 
   279  0115                     	;# 
   280  0116                     	;# 
   281  0117                     	;# 
   282  0118                     	;# 
   283  0119                     	;# 
   284  011A                     	;# 
   285  011B                     	;# 
   286  011D                     	;# 
   287  011E                     	;# 
   288  018C                     	;# 
   289  018D                     	;# 
   290  0191                     	;# 
   291  0191                     	;# 
   292  0192                     	;# 
   293  0193                     	;# 
   294  0193                     	;# 
   295  0193                     	;# 
   296  0194                     	;# 
   297  0195                     	;# 
   298  0196                     	;# 
   299  0199                     	;# 
   300  019A                     	;# 
   301  019B                     	;# 
   302  019B                     	;# 
   303  019B                     	;# 
   304  019B                     	;# 
   305  019C                     	;# 
   306  019C                     	;# 
   307  019D                     	;# 
   308  019E                     	;# 
   309  019F                     	;# 
   310  020C                     	;# 
   311  020D                     	;# 
   312  0211                     	;# 
   313  0211                     	;# 
   314  0212                     	;# 
   315  0212                     	;# 
   316  0213                     	;# 
   317  0213                     	;# 
   318  0214                     	;# 
   319  0214                     	;# 
   320  0215                     	;# 
   321  0215                     	;# 
   322  0215                     	;# 
   323  0216                     	;# 
   324  0216                     	;# 
   325  0217                     	;# 
   326  0217                     	;# 
   327  0219                     	;# 
   328  021A                     	;# 
   329  021B                     	;# 
   330  021C                     	;# 
   331  021D                     	;# 
   332  021E                     	;# 
   333  021F                     	;# 
   334  0291                     	;# 
   335  0291                     	;# 
   336  0292                     	;# 
   337  0293                     	;# 
   338  0294                     	;# 
   339  0295                     	;# 
   340  0295                     	;# 
   341  0296                     	;# 
   342  0298                     	;# 
   343  0298                     	;# 
   344  0299                     	;# 
   345  029A                     	;# 
   346  029B                     	;# 
   347  029C                     	;# 
   348  029C                     	;# 
   349  029D                     	;# 
   350  029E                     	;# 
   351  029E                     	;# 
   352  0311                     	;# 
   353  0311                     	;# 
   354  0312                     	;# 
   355  0313                     	;# 
   356  0318                     	;# 
   357  0318                     	;# 
   358  0319                     	;# 
   359  031A                     	;# 
   360  0394                     	;# 
   361  0395                     	;# 
   362  0396                     	;# 
   363  039A                     	;# 
   364  039C                     	;# 
   365  039D                     	;# 
   366  039E                     	;# 
   367  039F                     	;# 
   368  0415                     	;# 
   369  0416                     	;# 
   370  0417                     	;# 
   371  041C                     	;# 
   372  041D                     	;# 
   373  041E                     	;# 
   374  0FE4                     	;# 
   375  0FE5                     	;# 
   376  0FE6                     	;# 
   377  0FE7                     	;# 
   378  0FE8                     	;# 
   379  0FE9                     	;# 
   380  0FEA                     	;# 
   381  0FEB                     	;# 
   382  0FED                     	;# 
   383  0FEE                     	;# 
   384  0FEF                     	;# 
   385  0000                     	;# 
   386  0001                     	;# 
   387  0002                     	;# 
   388  0003                     	;# 
   389  0004                     	;# 
   390  0005                     	;# 
   391  0006                     	;# 
   392  0007                     	;# 
   393  0008                     	;# 
   394  0009                     	;# 
   395  000A                     	;# 
   396  000B                     	;# 
   397  000C                     	;# 
   398  000D                     	;# 
   399  0011                     	;# 
   400  0012                     	;# 
   401  0013                     	;# 
   402  0014                     	;# 
   403  0015                     	;# 
   404  0016                     	;# 
   405  0016                     	;# 
   406  0017                     	;# 
   407  0018                     	;# 
   408  0019                     	;# 
   409  001A                     	;# 
   410  001B                     	;# 
   411  001C                     	;# 
   412  001E                     	;# 
   413  001F                     	;# 
   414  008C                     	;# 
   415  008D                     	;# 
   416  0091                     	;# 
   417  0092                     	;# 
   418  0093                     	;# 
   419  0094                     	;# 
   420  0095                     	;# 
   421  0096                     	;# 
   422  0097                     	;# 
   423  0098                     	;# 
   424  0099                     	;# 
   425  009A                     	;# 
   426  009B                     	;# 
   427  009B                     	;# 
   428  009C                     	;# 
   429  009D                     	;# 
   430  009E                     	;# 
   431  010C                     	;# 
   432  010D                     	;# 
   433  0111                     	;# 
   434  0112                     	;# 
   435  0113                     	;# 
   436  0114                     	;# 
   437  0115                     	;# 
   438  0116                     	;# 
   439  0117                     	;# 
   440  0118                     	;# 
   441  0119                     	;# 
   442  011A                     	;# 
   443  011B                     	;# 
   444  011D                     	;# 
   445  011E                     	;# 
   446  018C                     	;# 
   447  018D                     	;# 
   448  0191                     	;# 
   449  0191                     	;# 
   450  0192                     	;# 
   451  0193                     	;# 
   452  0193                     	;# 
   453  0193                     	;# 
   454  0194                     	;# 
   455  0195                     	;# 
   456  0196                     	;# 
   457  0199                     	;# 
   458  019A                     	;# 
   459  019B                     	;# 
   460  019B                     	;# 
   461  019B                     	;# 
   462  019B                     	;# 
   463  019C                     	;# 
   464  019C                     	;# 
   465  019D                     	;# 
   466  019E                     	;# 
   467  019F                     	;# 
   468  020C                     	;# 
   469  020D                     	;# 
   470  0211                     	;# 
   471  0211                     	;# 
   472  0212                     	;# 
   473  0212                     	;# 
   474  0213                     	;# 
   475  0213                     	;# 
   476  0214                     	;# 
   477  0214                     	;# 
   478  0215                     	;# 
   479  0215                     	;# 
   480  0215                     	;# 
   481  0216                     	;# 
   482  0216                     	;# 
   483  0217                     	;# 
   484  0217                     	;# 
   485  0219                     	;# 
   486  021A                     	;# 
   487  021B                     	;# 
   488  021C                     	;# 
   489  021D                     	;# 
   490  021E                     	;# 
   491  021F                     	;# 
   492  0291                     	;# 
   493  0291                     	;# 
   494  0292                     	;# 
   495  0293                     	;# 
   496  0294                     	;# 
   497  0295                     	;# 
   498  0295                     	;# 
   499  0296                     	;# 
   500  0298                     	;# 
   501  0298                     	;# 
   502  0299                     	;# 
   503  029A                     	;# 
   504  029B                     	;# 
   505  029C                     	;# 
   506  029C                     	;# 
   507  029D                     	;# 
   508  029E                     	;# 
   509  029E                     	;# 
   510  0311                     	;# 
   511  0311                     	;# 
   512  0312                     	;# 
   513  0313                     	;# 
   514  0318                     	;# 
   515  0318                     	;# 
   516  0319                     	;# 
   517  031A                     	;# 
   518  0394                     	;# 
   519  0395                     	;# 
   520  0396                     	;# 
   521  039A                     	;# 
   522  039C                     	;# 
   523  039D                     	;# 
   524  039E                     	;# 
   525  039F                     	;# 
   526  0415                     	;# 
   527  0416                     	;# 
   528  0417                     	;# 
   529  041C                     	;# 
   530  041D                     	;# 
   531  041E                     	;# 
   532  0FE4                     	;# 
   533  0FE5                     	;# 
   534  0FE6                     	;# 
   535  0FE7                     	;# 
   536  0FE8                     	;# 
   537  0FE9                     	;# 
   538  0FEA                     	;# 
   539  0FEB                     	;# 
   540  0FED                     	;# 
   541  0FEE                     	;# 
   542  0FEF                     	;# 
   543  0000                     	;# 
   544  0001                     	;# 
   545  0002                     	;# 
   546  0003                     	;# 
   547  0004                     	;# 
   548  0005                     	;# 
   549  0006                     	;# 
   550  0007                     	;# 
   551  0008                     	;# 
   552  0009                     	;# 
   553  000A                     	;# 
   554  000B                     	;# 
   555  000C                     	;# 
   556  000D                     	;# 
   557  0011                     	;# 
   558  0012                     	;# 
   559  0013                     	;# 
   560  0014                     	;# 
   561  0015                     	;# 
   562  0016                     	;# 
   563  0016                     	;# 
   564  0017                     	;# 
   565  0018                     	;# 
   566  0019                     	;# 
   567  001A                     	;# 
   568  001B                     	;# 
   569  001C                     	;# 
   570  001E                     	;# 
   571  001F                     	;# 
   572  008C                     	;# 
   573  008D                     	;# 
   574  0091                     	;# 
   575  0092                     	;# 
   576  0093                     	;# 
   577  0094                     	;# 
   578  0095                     	;# 
   579  0096                     	;# 
   580  0097                     	;# 
   581  0098                     	;# 
   582  0099                     	;# 
   583  009A                     	;# 
   584  009B                     	;# 
   585  009B                     	;# 
   586  009C                     	;# 
   587  009D                     	;# 
   588  009E                     	;# 
   589  010C                     	;# 
   590  010D                     	;# 
   591  0111                     	;# 
   592  0112                     	;# 
   593  0113                     	;# 
   594  0114                     	;# 
   595  0115                     	;# 
   596  0116                     	;# 
   597  0117                     	;# 
   598  0118                     	;# 
   599  0119                     	;# 
   600  011A                     	;# 
   601  011B                     	;# 
   602  011D                     	;# 
   603  011E                     	;# 
   604  018C                     	;# 
   605  018D                     	;# 
   606  0191                     	;# 
   607  0191                     	;# 
   608  0192                     	;# 
   609  0193                     	;# 
   610  0193                     	;# 
   611  0193                     	;# 
   612  0194                     	;# 
   613  0195                     	;# 
   614  0196                     	;# 
   615  0199                     	;# 
   616  019A                     	;# 
   617  019B                     	;# 
   618  019B                     	;# 
   619  019B                     	;# 
   620  019B                     	;# 
   621  019C                     	;# 
   622  019C                     	;# 
   623  019D                     	;# 
   624  019E                     	;# 
   625  019F                     	;# 
   626  020C                     	;# 
   627  020D                     	;# 
   628  0211                     	;# 
   629  0211                     	;# 
   630  0212                     	;# 
   631  0212                     	;# 
   632  0213                     	;# 
   633  0213                     	;# 
   634  0214                     	;# 
   635  0214                     	;# 
   636  0215                     	;# 
   637  0215                     	;# 
   638  0215                     	;# 
   639  0216                     	;# 
   640  0216                     	;# 
   641  0217                     	;# 
   642  0217                     	;# 
   643  0219                     	;# 
   644  021A                     	;# 
   645  021B                     	;# 
   646  021C                     	;# 
   647  021D                     	;# 
   648  021E                     	;# 
   649  021F                     	;# 
   650  0291                     	;# 
   651  0291                     	;# 
   652  0292                     	;# 
   653  0293                     	;# 
   654  0294                     	;# 
   655  0295                     	;# 
   656  0295                     	;# 
   657  0296                     	;# 
   658  0298                     	;# 
   659  0298                     	;# 
   660  0299                     	;# 
   661  029A                     	;# 
   662  029B                     	;# 
   663  029C                     	;# 
   664  029C                     	;# 
   665  029D                     	;# 
   666  029E                     	;# 
   667  029E                     	;# 
   668  0311                     	;# 
   669  0311                     	;# 
   670  0312                     	;# 
   671  0313                     	;# 
   672  0318                     	;# 
   673  0318                     	;# 
   674  0319                     	;# 
   675  031A                     	;# 
   676  0394                     	;# 
   677  0395                     	;# 
   678  0396                     	;# 
   679  039A                     	;# 
   680  039C                     	;# 
   681  039D                     	;# 
   682  039E                     	;# 
   683  039F                     	;# 
   684  0415                     	;# 
   685  0416                     	;# 
   686  0417                     	;# 
   687  041C                     	;# 
   688  041D                     	;# 
   689  041E                     	;# 
   690  0FE4                     	;# 
   691  0FE5                     	;# 
   692  0FE6                     	;# 
   693  0FE7                     	;# 
   694  0FE8                     	;# 
   695  0FE9                     	;# 
   696  0FEA                     	;# 
   697  0FEB                     	;# 
   698  0FED                     	;# 
   699  0FEE                     	;# 
   700  0FEF                     	;# 
   701  0000                     	;# 
   702  0001                     	;# 
   703  0002                     	;# 
   704  0003                     	;# 
   705  0004                     	;# 
   706  0005                     	;# 
   707  0006                     	;# 
   708  0007                     	;# 
   709  0008                     	;# 
   710  0009                     	;# 
   711  000A                     	;# 
   712  000B                     	;# 
   713  000C                     	;# 
   714  000D                     	;# 
   715  0011                     	;# 
   716  0012                     	;# 
   717  0013                     	;# 
   718  0014                     	;# 
   719  0015                     	;# 
   720  0016                     	;# 
   721  0016                     	;# 
   722  0017                     	;# 
   723  0018                     	;# 
   724  0019                     	;# 
   725  001A                     	;# 
   726  001B                     	;# 
   727  001C                     	;# 
   728  001E                     	;# 
   729  001F                     	;# 
   730  008C                     	;# 
   731  008D                     	;# 
   732  0091                     	;# 
   733  0092                     	;# 
   734  0093                     	;# 
   735  0094                     	;# 
   736  0095                     	;# 
   737  0096                     	;# 
   738  0097                     	;# 
   739  0098                     	;# 
   740  0099                     	;# 
   741  009A                     	;# 
   742  009B                     	;# 
   743  009B                     	;# 
   744  009C                     	;# 
   745  009D                     	;# 
   746  009E                     	;# 
   747  010C                     	;# 
   748  010D                     	;# 
   749  0111                     	;# 
   750  0112                     	;# 
   751  0113                     	;# 
   752  0114                     	;# 
   753  0115                     	;# 
   754  0116                     	;# 
   755  0117                     	;# 
   756  0118                     	;# 
   757  0119                     	;# 
   758  011A                     	;# 
   759  011B                     	;# 
   760  011D                     	;# 
   761  011E                     	;# 
   762  018C                     	;# 
   763  018D                     	;# 
   764  0191                     	;# 
   765  0191                     	;# 
   766  0192                     	;# 
   767  0193                     	;# 
   768  0193                     	;# 
   769  0193                     	;# 
   770  0194                     	;# 
   771  0195                     	;# 
   772  0196                     	;# 
   773  0199                     	;# 
   774  019A                     	;# 
   775  019B                     	;# 
   776  019B                     	;# 
   777  019B                     	;# 
   778  019B                     	;# 
   779  019C                     	;# 
   780  019C                     	;# 
   781  019D                     	;# 
   782  019E                     	;# 
   783  019F                     	;# 
   784  020C                     	;# 
   785  020D                     	;# 
   786  0211                     	;# 
   787  0211                     	;# 
   788  0212                     	;# 
   789  0212                     	;# 
   790  0213                     	;# 
   791  0213                     	;# 
   792  0214                     	;# 
   793  0214                     	;# 
   794  0215                     	;# 
   795  0215                     	;# 
   796  0215                     	;# 
   797  0216                     	;# 
   798  0216                     	;# 
   799  0217                     	;# 
   800  0217                     	;# 
   801  0219                     	;# 
   802  021A                     	;# 
   803  021B                     	;# 
   804  021C                     	;# 
   805  021D                     	;# 
   806  021E                     	;# 
   807  021F                     	;# 
   808  0291                     	;# 
   809  0291                     	;# 
   810  0292                     	;# 
   811  0293                     	;# 
   812  0294                     	;# 
   813  0295                     	;# 
   814  0295                     	;# 
   815  0296                     	;# 
   816  0298                     	;# 
   817  0298                     	;# 
   818  0299                     	;# 
   819  029A                     	;# 
   820  029B                     	;# 
   821  029C                     	;# 
   822  029C                     	;# 
   823  029D                     	;# 
   824  029E                     	;# 
   825  029E                     	;# 
   826  0311                     	;# 
   827  0311                     	;# 
   828  0312                     	;# 
   829  0313                     	;# 
   830  0318                     	;# 
   831  0318                     	;# 
   832  0319                     	;# 
   833  031A                     	;# 
   834  0394                     	;# 
   835  0395                     	;# 
   836  0396                     	;# 
   837  039A                     	;# 
   838  039C                     	;# 
   839  039D                     	;# 
   840  039E                     	;# 
   841  039F                     	;# 
   842  0415                     	;# 
   843  0416                     	;# 
   844  0417                     	;# 
   845  041C                     	;# 
   846  041D                     	;# 
   847  041E                     	;# 
   848  0FE4                     	;# 
   849  0FE5                     	;# 
   850  0FE6                     	;# 
   851  0FE7                     	;# 
   852  0FE8                     	;# 
   853  0FE9                     	;# 
   854  0FEA                     	;# 
   855  0FEB                     	;# 
   856  0FED                     	;# 
   857  0FEE                     	;# 
   858  0FEF                     	;# 
   859  0000                     	;# 
   860  0001                     	;# 
   861  0002                     	;# 
   862  0003                     	;# 
   863  0004                     	;# 
   864  0005                     	;# 
   865  0006                     	;# 
   866  0007                     	;# 
   867  0008                     	;# 
   868  0009                     	;# 
   869  000A                     	;# 
   870  000B                     	;# 
   871  000C                     	;# 
   872  000D                     	;# 
   873  0011                     	;# 
   874  0012                     	;# 
   875  0013                     	;# 
   876  0014                     	;# 
   877  0015                     	;# 
   878  0016                     	;# 
   879  0016                     	;# 
   880  0017                     	;# 
   881  0018                     	;# 
   882  0019                     	;# 
   883  001A                     	;# 
   884  001B                     	;# 
   885  001C                     	;# 
   886  001E                     	;# 
   887  001F                     	;# 
   888  008C                     	;# 
   889  008D                     	;# 
   890  0091                     	;# 
   891  0092                     	;# 
   892  0093                     	;# 
   893  0094                     	;# 
   894  0095                     	;# 
   895  0096                     	;# 
   896  0097                     	;# 
   897  0098                     	;# 
   898  0099                     	;# 
   899  009A                     	;# 
   900  009B                     	;# 
   901  009B                     	;# 
   902  009C                     	;# 
   903  009D                     	;# 
   904  009E                     	;# 
   905  010C                     	;# 
   906  010D                     	;# 
   907  0111                     	;# 
   908  0112                     	;# 
   909  0113                     	;# 
   910  0114                     	;# 
   911  0115                     	;# 
   912  0116                     	;# 
   913  0117                     	;# 
   914  0118                     	;# 
   915  0119                     	;# 
   916  011A                     	;# 
   917  011B                     	;# 
   918  011D                     	;# 
   919  011E                     	;# 
   920  018C                     	;# 
   921  018D                     	;# 
   922  0191                     	;# 
   923  0191                     	;# 
   924  0192                     	;# 
   925  0193                     	;# 
   926  0193                     	;# 
   927  0193                     	;# 
   928  0194                     	;# 
   929  0195                     	;# 
   930  0196                     	;# 
   931  0199                     	;# 
   932  019A                     	;# 
   933  019B                     	;# 
   934  019B                     	;# 
   935  019B                     	;# 
   936  019B                     	;# 
   937  019C                     	;# 
   938  019C                     	;# 
   939  019D                     	;# 
   940  019E                     	;# 
   941  019F                     	;# 
   942  020C                     	;# 
   943  020D                     	;# 
   944  0211                     	;# 
   945  0211                     	;# 
   946  0212                     	;# 
   947  0212                     	;# 
   948  0213                     	;# 
   949  0213                     	;# 
   950  0214                     	;# 
   951  0214                     	;# 
   952  0215                     	;# 
   953  0215                     	;# 
   954  0215                     	;# 
   955  0216                     	;# 
   956  0216                     	;# 
   957  0217                     	;# 
   958  0217                     	;# 
   959  0219                     	;# 
   960  021A                     	;# 
   961  021B                     	;# 
   962  021C                     	;# 
   963  021D                     	;# 
   964  021E                     	;# 
   965  021F                     	;# 
   966  0291                     	;# 
   967  0291                     	;# 
   968  0292                     	;# 
   969  0293                     	;# 
   970  0294                     	;# 
   971  0295                     	;# 
   972  0295                     	;# 
   973  0296                     	;# 
   974  0298                     	;# 
   975  0298                     	;# 
   976  0299                     	;# 
   977  029A                     	;# 
   978  029B                     	;# 
   979  029C                     	;# 
   980  029C                     	;# 
   981  029D                     	;# 
   982  029E                     	;# 
   983  029E                     	;# 
   984  0311                     	;# 
   985  0311                     	;# 
   986  0312                     	;# 
   987  0313                     	;# 
   988  0318                     	;# 
   989  0318                     	;# 
   990  0319                     	;# 
   991  031A                     	;# 
   992  0394                     	;# 
   993  0395                     	;# 
   994  0396                     	;# 
   995  039A                     	;# 
   996  039C                     	;# 
   997  039D                     	;# 
   998  039E                     	;# 
   999  039F                     	;# 
  1000  0415                     	;# 
  1001  0416                     	;# 
  1002  0417                     	;# 
  1003  041C                     	;# 
  1004  041D                     	;# 
  1005  041E                     	;# 
  1006  0FE4                     	;# 
  1007  0FE5                     	;# 
  1008  0FE6                     	;# 
  1009  0FE7                     	;# 
  1010  0FE8                     	;# 
  1011  0FE9                     	;# 
  1012  0FEA                     	;# 
  1013  0FEB                     	;# 
  1014  0FED                     	;# 
  1015  0FEE                     	;# 
  1016  0FEF                     	;# 
  1017                           
  1018                           	psect	idataBANK0
  1019  0673                     __pidataBANK0:
  1020                           
  1021                           ;initializer for _segdata
  1022  0673  343F               	retlw	63
  1023  0674  3406               	retlw	6
  1024  0675  345B               	retlw	91
  1025  0676  344F               	retlw	79
  1026  0677  3466               	retlw	102
  1027  0678  346D               	retlw	109
  1028  0679  347D               	retlw	125
  1029  067A  3407               	retlw	7
  1030  067B  347F               	retlw	127
  1031  067C  346F               	retlw	111
  1032                           
  1033                           ;initializer for main@F2513
  1034  067D  34FF               	retlw	255
  1035  067E  34FF               	retlw	255
  1036  067F  34FF               	retlw	255
  1037  0680  34FF               	retlw	255
  1038  000C                     _PORTAbits	set	12
  1039  0097                     _WDTCON	set	151
  1040  0098                     _OSCTUNE	set	152
  1041  0099                     _OSCCON	set	153
  1042  0095                     _OPTION_REGbits	set	149
  1043  008D                     _TRISB	set	141
  1044  008C                     _TRISA	set	140
  1045  0116                     _BORCON	set	278
  1046  011E                     _APFCON1	set	286
  1047  011D                     _APFCON0	set	285
  1048  010D                     _LATB	set	269
  1049  010C                     _LATA	set	268
  1050  018C                     _ANSELA	set	396
  1051  018D                     _ANSELB	set	397
  1052  0215                     _SSPCON1bits	set	533
  1053  0214                     _SSPSTATbits	set	532
  1054  0211                     _SSPBUF	set	529
  1055  0216                     _SSPCON2bits	set	534
  1056  0214                     _SSPSTAT	set	532
  1057  0216                     _SSPCON2	set	534
  1058  020C                     _WPUA	set	524
  1059  020D                     _WPUB	set	525
  1060                           
  1061                           	psect	cinit
  1062  07EC                     start_initialization:	
  1063                           ; #config settings
  1064                           
  1065  07EC                     __initialization:
  1066                           
  1067                           ; Initialize objects allocated to BANK0
  1068  07EC  3073               	movlw	low __pidataBANK0
  1069  07ED  0084               	movwf	4
  1070  07EE  3086               	movlw	(high __pidataBANK0)| (0+128)
  1071  07EF  0085               	movwf	5
  1072  07F0  3020               	movlw	low __pdataBANK0
  1073  07F1  0086               	movwf	6
  1074  07F2  3000               	movlw	high __pdataBANK0
  1075  07F3  0087               	movwf	7
  1076  07F4  300E               	movlw	14
  1077  07F5  3186  2654  3187   	fcall	init_ram
  1078                           
  1079                           ; Clear objects allocated to BANK0
  1080  07F8  01B8               	clrf	__pbssBANK0& (0+127)
  1081  07F9  01B9               	clrf	(__pbssBANK0+1)& (0+127)
  1082  07FA  01BA               	clrf	(__pbssBANK0+2)& (0+127)
  1083  07FB  01BB               	clrf	(__pbssBANK0+3)& (0+127)
  1084  07FC  01BC               	clrf	(__pbssBANK0+4)& (0+127)
  1085  07FD                     end_of_initialization:	
  1086                           ;End of C runtime variable initialization code
  1087                           
  1088  07FD                     __end_of__initialization:
  1089  07FD  0020               	movlb	0
  1090  07FE  3187  2F69         	ljmp	_main	;jump to C main() function
  1091                           
  1092                           	psect	bssBANK0
  1093  0038                     __pbssBANK0:
  1094  0038                     clear_segment@F2530:
  1095  0038                     	ds	4
  1096  003C                     _m_brightness:
  1097  003C                     	ds	1
  1098                           
  1099                           	psect	dataBANK0
  1100  0020                     __pdataBANK0:
  1101  0020                     _segdata:
  1102  0020                     	ds	10
  1103  002A                     main@F2513:
  1104  002A                     	ds	4
  1105                           
  1106                           	psect	inittext
  1107  0654                     init_ram:
  1108  0654  00FE               	movwf	btemp
  1109  0655                     initloop:
  1110  0655  0012               	moviw fsr0++
  1111  0656  001E               	movwi fsr1++
  1112  0657  0BFE               	decfsz	btemp,f
  1113  0658  2E55               	goto	initloop
  1114  0659  3400               	retlw	0
  1115                           
  1116                           	psect	cstackCOMMON
  1117  0070                     __pcstackCOMMON:
  1118  0070                     ?_OSCILLATOR_Initialize:
  1119  0070                     ??_OSCILLATOR_Initialize:	
  1120                           ; 1 bytes @ 0x0
  1121                           
  1122  0070                     ?_WDT_Initialize:	
  1123                           ; 1 bytes @ 0x0
  1124                           
  1125  0070                     ??_WDT_Initialize:	
  1126                           ; 1 bytes @ 0x0
  1127                           
  1128  0070                     ?_clear_segment:	
  1129                           ; 1 bytes @ 0x0
  1130                           
  1131  0070                     ?_encode_digit:	
  1132                           ; 1 bytes @ 0x0
  1133                           
  1134  0070                     ??_encode_digit:	
  1135                           ; 1 bytes @ 0x0
  1136                           
  1137  0070                     ?_set_brigthness:	
  1138                           ; 1 bytes @ 0x0
  1139                           
  1140  0070                     ?_PIN_MANAGER_Initialize:	
  1141                           ; 1 bytes @ 0x0
  1142                           
  1143  0070                     ??_PIN_MANAGER_Initialize:	
  1144                           ; 1 bytes @ 0x0
  1145                           
  1146  0070                     ?_SYSTEM_Initialize:	
  1147                           ; 1 bytes @ 0x0
  1148                           
  1149  0070                     ??_SYSTEM_Initialize:	
  1150                           ; 1 bytes @ 0x0
  1151                           
  1152  0070                     ?_main:	
  1153                           ; 1 bytes @ 0x0
  1154                           
  1155  0070                     ?_CLK_SET_OUTPUT:	
  1156                           ; 1 bytes @ 0x0
  1157                           
  1158  0070                     ??_CLK_SET_OUTPUT:	
  1159                           ; 1 bytes @ 0x0
  1160                           
  1161  0070                     ?_CLK_SET_HIGH:	
  1162                           ; 1 bytes @ 0x0
  1163                           
  1164  0070                     ??_CLK_SET_HIGH:	
  1165                           ; 1 bytes @ 0x0
  1166                           
  1167  0070                     ?_CLK_SET_LOW:	
  1168                           ; 1 bytes @ 0x0
  1169                           
  1170  0070                     ??_CLK_SET_LOW:	
  1171                           ; 1 bytes @ 0x0
  1172                           
  1173  0070                     ?_DIO_SET_OUTPUT:	
  1174                           ; 1 bytes @ 0x0
  1175                           
  1176  0070                     ??_DIO_SET_OUTPUT:	
  1177                           ; 1 bytes @ 0x0
  1178                           
  1179  0070                     ?_DIO_SET_INPUT:	
  1180                           ; 1 bytes @ 0x0
  1181                           
  1182  0070                     ??_DIO_SET_INPUT:	
  1183                           ; 1 bytes @ 0x0
  1184                           
  1185  0070                     ?_DIO_SET_HIGH:	
  1186                           ; 1 bytes @ 0x0
  1187                           
  1188  0070                     ??_DIO_SET_HIGH:	
  1189                           ; 1 bytes @ 0x0
  1190                           
  1191  0070                     ?_DIO_SET_LOW:	
  1192                           ; 1 bytes @ 0x0
  1193                           
  1194  0070                     ??_DIO_SET_LOW:	
  1195                           ; 1 bytes @ 0x0
  1196                           
  1197  0070                     ?_start_segment:	
  1198                           ; 1 bytes @ 0x0
  1199                           
  1200  0070                     ?_stop_segment:	
  1201                           ; 1 bytes @ 0x0
  1202                           
  1203  0070                     ?_get_DIO_PIN_value:	
  1204                           ; 1 bytes @ 0x0
  1205                           
  1206  0070                     ??_get_DIO_PIN_value:	
  1207                           ; 1 bytes @ 0x0
  1208                           
  1209  0070                     ?_write_byte:	
  1210                           ; 1 bytes @ 0x0
  1211                           
  1212  0070                     set_brigthness@on:	
  1213                           ; 1 bytes @ 0x0
  1214                           
  1215  0070                     encode_digit@digit:	
  1216                           ; 1 bytes @ 0x0
  1217                           
  1218                           
  1219                           ; 1 bytes @ 0x0
  1220  0070                     	ds	1
  1221  0071                     ??_set_brigthness:
  1222  0071                     ??_start_segment:	
  1223                           ; 1 bytes @ 0x1
  1224                           
  1225  0071                     ??_stop_segment:	
  1226                           ; 1 bytes @ 0x1
  1227                           
  1228  0071                     ??_write_byte:	
  1229                           ; 1 bytes @ 0x1
  1230                           
  1231                           
  1232                           ; 1 bytes @ 0x1
  1233  0071                     	ds	1
  1234  0072                     write_byte@b:
  1235  0072                     set_brigthness@brightness:	
  1236                           ; 1 bytes @ 0x2
  1237                           
  1238                           
  1239                           ; 1 bytes @ 0x2
  1240  0072                     	ds	1
  1241  0073                     write_byte@ack:
  1242                           
  1243                           ; 1 bytes @ 0x3
  1244  0073                     	ds	1
  1245  0074                     write_byte@data:
  1246                           
  1247                           ; 1 bytes @ 0x4
  1248  0074                     	ds	1
  1249  0075                     write_byte@i:
  1250                           
  1251                           ; 1 bytes @ 0x5
  1252  0075                     	ds	1
  1253  0076                     ?_set_segments:
  1254  0076                     set_segments@length:	
  1255                           ; 1 bytes @ 0x6
  1256                           
  1257                           
  1258                           ; 1 bytes @ 0x6
  1259  0076                     	ds	1
  1260  0077                     set_segments@pos:
  1261                           
  1262                           ; 1 bytes @ 0x7
  1263  0077                     	ds	1
  1264  0078                     ??_set_segments:
  1265                           
  1266                           ; 1 bytes @ 0x8
  1267  0078                     	ds	1
  1268  0079                     set_segments@segments:
  1269                           
  1270                           ; 1 bytes @ 0x9
  1271  0079                     	ds	1
  1272  007A                     set_segments@k:
  1273                           
  1274                           ; 1 bytes @ 0xA
  1275  007A                     	ds	1
  1276  007B                     ??_clear_segment:
  1277                           
  1278                           ; 1 bytes @ 0xB
  1279  007B                     	ds	1
  1280  007C                     ??_main:
  1281                           
  1282                           ; 1 bytes @ 0xC
  1283  007C                     	ds	2
  1284                           
  1285                           	psect	cstackBANK0
  1286  002E                     __pcstackBANK0:
  1287  002E                     clear_segment@data:
  1288                           
  1289                           ; 4 bytes @ 0x0
  1290  002E                     	ds	4
  1291  0032                     main@k:
  1292                           
  1293                           ; 1 bytes @ 0x4
  1294  0032                     	ds	1
  1295  0033                     main@data:
  1296                           
  1297                           ; 4 bytes @ 0x5
  1298  0033                     	ds	4
  1299  0037                     main@i:
  1300                           
  1301                           ; 1 bytes @ 0x9
  1302  0037                     	ds	1
  1303                           
  1304                           	psect	maintext
  1305  0769                     __pmaintext:	
  1306 ;;
  1307 ;;Main: autosize = 0, tempsize = 2, incstack = 0, save=0
  1308 ;;
  1309 ;; *************** function _main *****************
  1310 ;; Defined at:
  1311 ;;		line 6 in file "main.c"
  1312 ;; Parameters:    Size  Location     Type
  1313 ;;		None
  1314 ;; Auto vars:     Size  Location     Type
  1315 ;;  i               1    9[BANK0 ] unsigned char 
  1316 ;;  data            4    5[BANK0 ] unsigned char [4]
  1317 ;;  k               1    4[BANK0 ] unsigned char 
  1318 ;; Return value:  Size  Location     Type
  1319 ;;                  1    wreg      void 
  1320 ;; Registers used:
  1321 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  1322 ;; Tracked objects:
  1323 ;;		On entry : B1F/0
  1324 ;;		On exit  : 0/0
  1325 ;;		Unchanged: 0/0
  1326 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  1327 ;;      Params:         0       0       0       0       0       0
  1328 ;;      Locals:         0       6       0       0       0       0
  1329 ;;      Temps:          2       0       0       0       0       0
  1330 ;;      Totals:         2       6       0       0       0       0
  1331 ;;Total ram usage:        8 bytes
  1332 ;; Hardware stack levels required when called: 4
  1333 ;; This function calls:
  1334 ;;		_SYSTEM_Initialize
  1335 ;;		_clear_segment
  1336 ;;		_encode_digit
  1337 ;;		_set_brigthness
  1338 ;;		_set_segments
  1339 ;; This function is called by:
  1340 ;;		Startup code after reset
  1341 ;; This function uses a non-reentrant model
  1342 ;;
  1343                           
  1344                           
  1345                           ;psect for function _main
  1346  0769                     _main:
  1347  0769                     l1193:	
  1348                           ;incstack = 0
  1349                           ; Regs used in _main: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
  1350                           
  1351                           
  1352                           ;main.c: 9:     SYSTEM_Initialize();
  1353  0769  3186  2669  3187   	fcall	_SYSTEM_Initialize
  1354  076C                     l1195:
  1355                           
  1356                           ;main.c: 11:     ANSELA = 0x00;
  1357  076C  0023               	movlb	3	; select bank3
  1358  076D  018C               	clrf	12	;volatile
  1359  076E                     l1197:
  1360                           
  1361                           ;main.c: 12:     TRISA = 0x00;
  1362  076E  0021               	movlb	1	; select bank1
  1363  076F  018C               	clrf	12	;volatile
  1364  0770                     l1199:
  1365                           
  1366                           ;main.c: 13:     LATA = 0x00;
  1367  0770  0022               	movlb	2	; select bank2
  1368  0771  018C               	clrf	12	;volatile
  1369  0772                     l1201:
  1370                           
  1371                           ;main.c: 15:     LATA |= 0x80;
  1372  0772  178C               	bsf	12,7	;volatile
  1373  0773                     l1203:
  1374                           
  1375                           ;main.c: 17:     uint8_t data[] = {0xff, 0xff, 0xff, 0xff};
  1376  0773  0020               	movlb	0	; select bank0
  1377  0774  082D               	movf	main@F2513+3,w
  1378  0775  00B6               	movwf	main@data+3
  1379  0776  082C               	movf	main@F2513+2,w
  1380  0777  00B5               	movwf	main@data+2
  1381  0778  082B               	movf	main@F2513+1,w
  1382  0779  00B4               	movwf	main@data+1
  1383  077A  082A               	movf	main@F2513,w
  1384  077B  00B3               	movwf	main@data
  1385  077C                     l1205:
  1386                           
  1387                           ;main.c: 19:     clear_segment();
  1388  077C  3186  26A7  3187   	fcall	_clear_segment
  1389  077F                     l1207:
  1390                           
  1391                           ;main.c: 21:     data[0] = encode_digit(1);
  1392  077F  3001               	movlw	1
  1393  0780  3186  2661  3187   	fcall	_encode_digit
  1394  0783  00FC               	movwf	??_main
  1395  0784  087C               	movf	??_main,w
  1396  0785  0020               	movlb	0	; select bank0
  1397  0786  00B3               	movwf	main@data
  1398  0787                     l1209:
  1399                           
  1400                           ;main.c: 22:     data[1] = encode_digit(9);
  1401  0787  3009               	movlw	9
  1402  0788  3186  2661  3187   	fcall	_encode_digit
  1403  078B  00FC               	movwf	??_main
  1404  078C  087C               	movf	??_main,w
  1405  078D  0020               	movlb	0	; select bank0
  1406  078E  00B4               	movwf	main@data+1
  1407  078F                     l1211:
  1408                           
  1409                           ;main.c: 23:     data[2] = encode_digit(8);
  1410  078F  3008               	movlw	8
  1411  0790  3186  2661  3187   	fcall	_encode_digit
  1412  0793  00FC               	movwf	??_main
  1413  0794  087C               	movf	??_main,w
  1414  0795  0020               	movlb	0	; select bank0
  1415  0796  00B5               	movwf	main@data+2
  1416  0797                     l1213:
  1417                           
  1418                           ;main.c: 24:     data[3] = encode_digit(4);
  1419  0797  3004               	movlw	4
  1420  0798  3186  2661  3187   	fcall	_encode_digit
  1421  079B  00FC               	movwf	??_main
  1422  079C  087C               	movf	??_main,w
  1423  079D  0020               	movlb	0	; select bank0
  1424  079E  00B6               	movwf	main@data+3
  1425  079F                     l1215:
  1426                           
  1427                           ;main.c: 27:     set_brigthness(0x0f, 1);
  1428  079F  01F0               	clrf	set_brigthness@on
  1429  07A0  0AF0               	incf	set_brigthness@on,f
  1430  07A1  300F               	movlw	15
  1431  07A2  3186  26BA  3187   	fcall	_set_brigthness
  1432  07A5                     l1217:
  1433                           
  1434                           ;main.c: 28:     set_segments(data, 4, 0);
  1435  07A5  3004               	movlw	4
  1436  07A6  00FC               	movwf	??_main
  1437  07A7  087C               	movf	??_main,w
  1438  07A8  00F6               	movwf	set_segments@length
  1439  07A9  01F7               	clrf	set_segments@pos
  1440  07AA  3033               	movlw	(low (main@data| 0))& (0+255)
  1441  07AB  3186  26E5  3187   	fcall	_set_segments
  1442  07AE                     l1219:
  1443                           
  1444                           ;main.c: 30:     uint8_t k = 0;
  1445  07AE  0020               	movlb	0	; select bank0
  1446  07AF  01B2               	clrf	main@k
  1447  07B0                     l1221:
  1448                           
  1449                           ;main.c: 34:     {;main.c: 35:         LATA |= 0x80;
  1450  07B0  0022               	movlb	2	; select bank2
  1451  07B1  178C               	bsf	12,7	;volatile
  1452  07B2                     l1223:
  1453                           
  1454                           ;main.c: 37:         for(uint8_t i = 0; i < 4; i++){
  1455  07B2  0020               	movlb	0	; select bank0
  1456  07B3  01B7               	clrf	main@i
  1457  07B4                     l1229:
  1458                           
  1459                           ;main.c: 38:             data[i] = encode_digit(i + k);
  1460  07B4  0837               	movf	main@i,w
  1461  07B5  0732               	addwf	main@k,w
  1462  07B6  3186  2661  3187   	fcall	_encode_digit
  1463  07B9  00FC               	movwf	??_main
  1464  07BA  0020               	movlb	0	; select bank0
  1465  07BB  0837               	movf	main@i,w
  1466  07BC  3E33               	addlw	(low (main@data| 0))& (0+255)
  1467  07BD  0086               	movwf	6
  1468  07BE  0187               	clrf	7
  1469  07BF  087C               	movf	??_main,w
  1470  07C0  0081               	movwf	1
  1471  07C1                     l1231:
  1472                           
  1473                           ;main.c: 39:         }
  1474  07C1  3001               	movlw	1
  1475  07C2  00FC               	movwf	??_main
  1476  07C3  087C               	movf	??_main,w
  1477  07C4  07B7               	addwf	main@i,f
  1478  07C5                     l1233:
  1479  07C5  3004               	movlw	4
  1480  07C6  0237               	subwf	main@i,w
  1481  07C7  1C03               	skipc
  1482  07C8  2FCA               	goto	u201
  1483  07C9  2FCB               	goto	u200
  1484  07CA                     u201:
  1485  07CA  2FB4               	goto	l1229
  1486  07CB                     u200:
  1487  07CB                     l1235:
  1488                           
  1489                           ;main.c: 41:         set_segments(data, 4, 0);
  1490  07CB  3004               	movlw	4
  1491  07CC  00FC               	movwf	??_main
  1492  07CD  087C               	movf	??_main,w
  1493  07CE  00F6               	movwf	set_segments@length
  1494  07CF  01F7               	clrf	set_segments@pos
  1495  07D0  3033               	movlw	(low (main@data| 0))& (0+255)
  1496  07D1  3186  26E5  3187   	fcall	_set_segments
  1497  07D4                     l1237:
  1498                           
  1499                           ;main.c: 42:         _delay((unsigned long)((1000)*(8000000/4000.0)));
  1500  07D4  300B               	movlw	11
  1501  07D5  00FD               	movwf	??_main+1
  1502  07D6  3026               	movlw	38
  1503  07D7  00FC               	movwf	??_main
  1504  07D8  305E               	movlw	94
  1505  07D9                     u217:
  1506  07D9  0B89               	decfsz	9,f
  1507  07DA  2FD9               	goto	u217
  1508  07DB  0BFC               	decfsz	??_main,f
  1509  07DC  2FD9               	goto	u217
  1510  07DD  0BFD               	decfsz	??_main+1,f
  1511  07DE  2FD9               	goto	u217
  1512  07DF                     l1239:
  1513                           
  1514                           ;main.c: 43:         k++;
  1515  07DF  3001               	movlw	1
  1516  07E0  00FC               	movwf	??_main
  1517  07E1  087C               	movf	??_main,w
  1518  07E2  0020               	movlb	0	; select bank0
  1519  07E3  07B2               	addwf	main@k,f
  1520  07E4                     l1241:
  1521                           
  1522                           ;main.c: 45:         LATA &= ~ 0x80;
  1523  07E4  307F               	movlw	127
  1524  07E5  00FC               	movwf	??_main
  1525  07E6  087C               	movf	??_main,w
  1526  07E7  0022               	movlb	2	; select bank2
  1527  07E8  058C               	andwf	12,f	;volatile
  1528  07E9  2FB0               	goto	l1221
  1529  07EA  3180  2802         	ljmp	start
  1530  07EC                     __end_of_main:
  1531                           
  1532                           	psect	text1
  1533  06BA                     __ptext1:	
  1534 ;; *************** function _set_brigthness *****************
  1535 ;; Defined at:
  1536 ;;		line 141 in file "tm1637.c"
  1537 ;; Parameters:    Size  Location     Type
  1538 ;;  brightness      1    wreg     unsigned char 
  1539 ;;  on              1    0[COMMON] unsigned char 
  1540 ;; Auto vars:     Size  Location     Type
  1541 ;;  brightness      1    2[COMMON] unsigned char 
  1542 ;; Return value:  Size  Location     Type
  1543 ;;                  1    wreg      void 
  1544 ;; Registers used:
  1545 ;;		wreg, status,2, status,0
  1546 ;; Tracked objects:
  1547 ;;		On entry : 0/0
  1548 ;;		On exit  : 0/0
  1549 ;;		Unchanged: 0/0
  1550 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  1551 ;;      Params:         1       0       0       0       0       0
  1552 ;;      Locals:         1       0       0       0       0       0
  1553 ;;      Temps:          1       0       0       0       0       0
  1554 ;;      Totals:         3       0       0       0       0       0
  1555 ;;Total ram usage:        3 bytes
  1556 ;; Hardware stack levels used: 1
  1557 ;; This function calls:
  1558 ;;		Nothing
  1559 ;; This function is called by:
  1560 ;;		_main
  1561 ;; This function uses a non-reentrant model
  1562 ;;
  1563                           
  1564                           
  1565                           ;psect for function _set_brigthness
  1566  06BA                     _set_brigthness:
  1567                           
  1568                           ;incstack = 0
  1569                           ; Regs used in _set_brigthness: [wreg+status,2+status,0]
  1570                           ;set_brigthness@brightness stored from wreg
  1571  06BA  00F2               	movwf	set_brigthness@brightness
  1572  06BB                     l1187:
  1573                           
  1574                           ;tm1637.c: 142:     if(on == 1){
  1575  06BB  0370               	decf	set_brigthness@on,w
  1576  06BC  1D03               	btfss	3,2
  1577  06BD  2EBF               	goto	u191
  1578  06BE  2EC0               	goto	u190
  1579  06BF                     u191:
  1580  06BF  2EC8               	goto	l1191
  1581  06C0                     u190:
  1582  06C0                     l1189:
  1583                           
  1584                           ;tm1637.c: 143:         m_brightness = (brightness & 0x7 | 0x08);
  1585  06C0  0872               	movf	set_brigthness@brightness,w
  1586  06C1  3907               	andlw	7
  1587  06C2  3808               	iorlw	8
  1588  06C3  00F1               	movwf	??_set_brigthness
  1589  06C4  0871               	movf	??_set_brigthness,w
  1590  06C5  0020               	movlb	0	; select bank0
  1591  06C6  00BC               	movwf	_m_brightness
  1592                           
  1593                           ;tm1637.c: 144:     }else{
  1594  06C7  2ECE               	goto	l193
  1595  06C8                     l1191:
  1596                           
  1597                           ;tm1637.c: 145:         m_brightness = (brightness & 0x7 | 0x00);
  1598  06C8  0872               	movf	set_brigthness@brightness,w
  1599  06C9  3907               	andlw	7
  1600  06CA  00F1               	movwf	??_set_brigthness
  1601  06CB  0871               	movf	??_set_brigthness,w
  1602  06CC  0020               	movlb	0	; select bank0
  1603  06CD  00BC               	movwf	_m_brightness
  1604  06CE                     l193:
  1605  06CE  0008               	return
  1606  06CF                     __end_of_set_brigthness:
  1607                           
  1608                           	psect	text2
  1609  0661                     __ptext2:	
  1610 ;; *************** function _encode_digit *****************
  1611 ;; Defined at:
  1612 ;;		line 191 in file "tm1637.c"
  1613 ;; Parameters:    Size  Location     Type
  1614 ;;  digit           1    wreg     unsigned char 
  1615 ;; Auto vars:     Size  Location     Type
  1616 ;;  digit           1    0[COMMON] unsigned char 
  1617 ;; Return value:  Size  Location     Type
  1618 ;;                  1    wreg      unsigned char 
  1619 ;; Registers used:
  1620 ;;		wreg, fsr1l, fsr1h, status,2, status,0
  1621 ;; Tracked objects:
  1622 ;;		On entry : 0/0
  1623 ;;		On exit  : 0/0
  1624 ;;		Unchanged: 0/0
  1625 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  1626 ;;      Params:         0       0       0       0       0       0
  1627 ;;      Locals:         1       0       0       0       0       0
  1628 ;;      Temps:          0       0       0       0       0       0
  1629 ;;      Totals:         1       0       0       0       0       0
  1630 ;;Total ram usage:        1 bytes
  1631 ;; Hardware stack levels used: 1
  1632 ;; This function calls:
  1633 ;;		Nothing
  1634 ;; This function is called by:
  1635 ;;		_main
  1636 ;; This function uses a non-reentrant model
  1637 ;;
  1638                           
  1639                           
  1640                           ;psect for function _encode_digit
  1641  0661                     _encode_digit:
  1642                           
  1643                           ;incstack = 0
  1644                           ; Regs used in _encode_digit: [wreg+fsr1l+fsr1h+status,2+status,0]
  1645                           ;encode_digit@digit stored from wreg
  1646  0661  00F0               	movwf	encode_digit@digit
  1647  0662                     l1183:
  1648                           
  1649                           ;tm1637.c: 192:     return segdata[digit & 0x0f];
  1650  0662  0870               	movf	encode_digit@digit,w
  1651  0663  390F               	andlw	15
  1652  0664  3E20               	addlw	(low (_segdata| 0))& (0+255)
  1653  0665  0086               	movwf	6
  1654  0666  0187               	clrf	7
  1655  0667  0801               	movf	1,w
  1656  0668                     l207:
  1657  0668  0008               	return
  1658  0669                     __end_of_encode_digit:
  1659                           
  1660                           	psect	text3
  1661  06A7                     __ptext3:	
  1662 ;; *************** function _clear_segment *****************
  1663 ;; Defined at:
  1664 ;;		line 181 in file "tm1637.c"
  1665 ;; Parameters:    Size  Location     Type
  1666 ;;		None
  1667 ;; Auto vars:     Size  Location     Type
  1668 ;;  data            4    0[BANK0 ] unsigned char [4]
  1669 ;; Return value:  Size  Location     Type
  1670 ;;                  1    wreg      void 
  1671 ;; Registers used:
  1672 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  1673 ;; Tracked objects:
  1674 ;;		On entry : 0/0
  1675 ;;		On exit  : 0/0
  1676 ;;		Unchanged: 0/0
  1677 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  1678 ;;      Params:         0       0       0       0       0       0
  1679 ;;      Locals:         0       4       0       0       0       0
  1680 ;;      Temps:          1       0       0       0       0       0
  1681 ;;      Totals:         1       4       0       0       0       0
  1682 ;;Total ram usage:        5 bytes
  1683 ;; Hardware stack levels used: 1
  1684 ;; Hardware stack levels required when called: 3
  1685 ;; This function calls:
  1686 ;;		_set_segments
  1687 ;; This function is called by:
  1688 ;;		_main
  1689 ;; This function uses a non-reentrant model
  1690 ;;
  1691                           
  1692                           
  1693                           ;psect for function _clear_segment
  1694  06A7                     _clear_segment:
  1695  06A7                     l1179:	
  1696                           ;incstack = 0
  1697                           ; Regs used in _clear_segment: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
  1698                           
  1699                           
  1700                           ;tm1637.c: 182:     uint8_t data[] = { 0, 0, 0, 0 };
  1701  06A7  3000               	movlw	0
  1702  06A8  0020               	movlb	0	; select bank0
  1703  06A9  00B1               	movwf	clear_segment@data+3
  1704  06AA  3000               	movlw	0
  1705  06AB  00B0               	movwf	clear_segment@data+2
  1706  06AC  3000               	movlw	0
  1707  06AD  00AF               	movwf	clear_segment@data+1
  1708  06AE  3000               	movlw	0
  1709  06AF  00AE               	movwf	clear_segment@data
  1710  06B0                     l1181:
  1711                           
  1712                           ;tm1637.c: 183:  set_segments(data, 4, 0);
  1713  06B0  3004               	movlw	4
  1714  06B1  00FB               	movwf	??_clear_segment
  1715  06B2  087B               	movf	??_clear_segment,w
  1716  06B3  00F6               	movwf	set_segments@length
  1717  06B4  01F7               	clrf	set_segments@pos
  1718  06B5  302E               	movlw	(low (clear_segment@data| 0))& (0+255)
  1719  06B6  3186  26E5  3186   	fcall	_set_segments
  1720  06B9                     l204:
  1721  06B9  0008               	return
  1722  06BA                     __end_of_clear_segment:
  1723                           
  1724                           	psect	text4
  1725  06E5                     __ptext4:	
  1726 ;; *************** function _set_segments *****************
  1727 ;; Defined at:
  1728 ;;		line 155 in file "tm1637.c"
  1729 ;; Parameters:    Size  Location     Type
  1730 ;;  segments        1    wreg     PTR const unsigned char 
  1731 ;;		 -> clear_segment@data(4), main@data(4), 
  1732 ;;  length          1    6[COMMON] unsigned char 
  1733 ;;  pos             1    7[COMMON] unsigned char 
  1734 ;; Auto vars:     Size  Location     Type
  1735 ;;  segments        1    9[COMMON] PTR const unsigned char 
  1736 ;;		 -> clear_segment@data(4), main@data(4), 
  1737 ;;  k               1   10[COMMON] unsigned char 
  1738 ;; Return value:  Size  Location     Type
  1739 ;;                  1    wreg      void 
  1740 ;; Registers used:
  1741 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  1742 ;; Tracked objects:
  1743 ;;		On entry : 0/0
  1744 ;;		On exit  : 0/0
  1745 ;;		Unchanged: 0/0
  1746 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  1747 ;;      Params:         2       0       0       0       0       0
  1748 ;;      Locals:         2       0       0       0       0       0
  1749 ;;      Temps:          1       0       0       0       0       0
  1750 ;;      Totals:         5       0       0       0       0       0
  1751 ;;Total ram usage:        5 bytes
  1752 ;; Hardware stack levels used: 1
  1753 ;; Hardware stack levels required when called: 2
  1754 ;; This function calls:
  1755 ;;		_start_segment
  1756 ;;		_stop_segment
  1757 ;;		_write_byte
  1758 ;; This function is called by:
  1759 ;;		_main
  1760 ;;		_clear_segment
  1761 ;; This function uses a non-reentrant model
  1762 ;;
  1763                           
  1764                           
  1765                           ;psect for function _set_segments
  1766  06E5                     _set_segments:
  1767                           
  1768                           ;incstack = 0
  1769                           ; Regs used in _set_segments: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
  1770                           ;set_segments@segments stored from wreg
  1771  06E5  00F9               	movwf	set_segments@segments
  1772  06E6                     l1165:
  1773                           
  1774                           ;tm1637.c: 157:     start_segment();
  1775  06E6  3186  2681  3186   	fcall	_start_segment
  1776                           
  1777                           ;tm1637.c: 158:     write_byte(0x40);
  1778  06E9  3040               	movlw	64
  1779  06EA  3187  2720  3186   	fcall	_write_byte
  1780                           
  1781                           ;tm1637.c: 159:     stop_segment();
  1782  06ED  3186  2694  3186   	fcall	_stop_segment
  1783                           
  1784                           ;tm1637.c: 162:     start_segment();
  1785  06F0  3186  2681  3186   	fcall	_start_segment
  1786                           
  1787                           ;tm1637.c: 163:     write_byte(0xC0 + (pos & 0x03));
  1788  06F3  0877               	movf	set_segments@pos,w
  1789  06F4  3903               	andlw	3
  1790  06F5  3EC0               	addlw	192
  1791  06F6  3187  2720  3186   	fcall	_write_byte
  1792  06F9                     l1167:
  1793                           
  1794                           ;tm1637.c: 166:     for(uint8_t k = 0; k < length; k++){
  1795  06F9  01FA               	clrf	set_segments@k
  1796  06FA  2F09               	goto	l1173
  1797  06FB                     l1169:
  1798                           
  1799                           ;tm1637.c: 167:         write_byte(segments[k]);
  1800  06FB  087A               	movf	set_segments@k,w
  1801  06FC  0779               	addwf	set_segments@segments,w
  1802  06FD  00F8               	movwf	??_set_segments
  1803  06FE  0878               	movf	??_set_segments,w
  1804  06FF  0086               	movwf	6
  1805  0700  0187               	clrf	7
  1806  0701  0801               	movf	1,w
  1807  0702  3187  2720  3186   	fcall	_write_byte
  1808  0705                     l1171:
  1809                           
  1810                           ;tm1637.c: 168:     }
  1811  0705  3001               	movlw	1
  1812  0706  00F8               	movwf	??_set_segments
  1813  0707  0878               	movf	??_set_segments,w
  1814  0708  07FA               	addwf	set_segments@k,f
  1815  0709                     l1173:
  1816  0709  0876               	movf	set_segments@length,w
  1817  070A  027A               	subwf	set_segments@k,w
  1818  070B  1C03               	skipc
  1819  070C  2F0E               	goto	u181
  1820  070D  2F0F               	goto	u180
  1821  070E                     u181:
  1822  070E  2EFB               	goto	l1169
  1823  070F                     u180:
  1824  070F                     l1175:
  1825                           
  1826                           ;tm1637.c: 170:     stop_segment();
  1827  070F  3186  2694  3186   	fcall	_stop_segment
  1828                           
  1829                           ;tm1637.c: 173:     start_segment();
  1830  0712  3186  2681  3186   	fcall	_start_segment
  1831                           
  1832                           ;tm1637.c: 174:     write_byte(0x80 + (m_brightness & 0x0f));
  1833  0715  0020               	movlb	0	; select bank0
  1834  0716  083C               	movf	_m_brightness,w
  1835  0717  390F               	andlw	15
  1836  0718  3E80               	addlw	128
  1837  0719  3187  2720  3186   	fcall	_write_byte
  1838                           
  1839                           ;tm1637.c: 175:     stop_segment();
  1840  071C  3186  2694  3186   	fcall	_stop_segment
  1841  071F                     l199:
  1842  071F  0008               	return
  1843  0720                     __end_of_set_segments:
  1844                           
  1845                           	psect	text5
  1846  0720                     __ptext5:	
  1847 ;; *************** function _write_byte *****************
  1848 ;; Defined at:
  1849 ;;		line 86 in file "tm1637.c"
  1850 ;; Parameters:    Size  Location     Type
  1851 ;;  b               1    wreg     unsigned char 
  1852 ;; Auto vars:     Size  Location     Type
  1853 ;;  b               1    2[COMMON] unsigned char 
  1854 ;;  i               1    5[COMMON] unsigned char 
  1855 ;;  data            1    4[COMMON] unsigned char 
  1856 ;;  ack             1    3[COMMON] unsigned char 
  1857 ;; Return value:  Size  Location     Type
  1858 ;;                  1    wreg      unsigned char 
  1859 ;; Registers used:
  1860 ;;		wreg, status,2, status,0, pclath, cstack
  1861 ;; Tracked objects:
  1862 ;;		On entry : 0/0
  1863 ;;		On exit  : 0/0
  1864 ;;		Unchanged: 0/0
  1865 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  1866 ;;      Params:         0       0       0       0       0       0
  1867 ;;      Locals:         4       0       0       0       0       0
  1868 ;;      Temps:          1       0       0       0       0       0
  1869 ;;      Totals:         5       0       0       0       0       0
  1870 ;;Total ram usage:        5 bytes
  1871 ;; Hardware stack levels used: 1
  1872 ;; Hardware stack levels required when called: 1
  1873 ;; This function calls:
  1874 ;;		_CLK_SET_HIGH
  1875 ;;		_CLK_SET_LOW
  1876 ;;		_CLK_SET_OUTPUT
  1877 ;;		_DIO_SET_HIGH
  1878 ;;		_DIO_SET_INPUT
  1879 ;;		_DIO_SET_LOW
  1880 ;;		_DIO_SET_OUTPUT
  1881 ;;		_get_DIO_PIN_value
  1882 ;; This function is called by:
  1883 ;;		_set_segments
  1884 ;; This function uses a non-reentrant model
  1885 ;;
  1886                           
  1887                           
  1888                           ;psect for function _write_byte
  1889  0720                     _write_byte:
  1890                           
  1891                           ;incstack = 0
  1892                           ; Regs used in _write_byte: [wreg+status,2+status,0+pclath+cstack]
  1893                           ;write_byte@b stored from wreg
  1894  0720  00F2               	movwf	write_byte@b
  1895  0721                     l1105:
  1896                           
  1897                           ;tm1637.c: 87:     uint8_t data = b;
  1898  0721  0872               	movf	write_byte@b,w
  1899  0722  00F1               	movwf	??_write_byte
  1900  0723  0871               	movf	??_write_byte,w
  1901  0724  00F4               	movwf	write_byte@data
  1902  0725                     l1107:
  1903                           
  1904                           ;tm1637.c: 90:     CLK_SET_OUTPUT();
  1905  0725  3186  2642  3187   	fcall	_CLK_SET_OUTPUT
  1906  0728                     l1109:
  1907                           
  1908                           ;tm1637.c: 91:     for(uint8_t i = 0; i < 8; i++){
  1909  0728  01F5               	clrf	write_byte@i
  1910  0729                     l1115:
  1911                           
  1912                           ;tm1637.c: 93:         CLK_SET_LOW();
  1913  0729  3186  263C  3187   	fcall	_CLK_SET_LOW
  1914  072C                     l1117:
  1915                           
  1916                           ;tm1637.c: 95:         if(data & 0x01){
  1917  072C  1C74               	btfss	write_byte@data,0
  1918  072D  2F2F               	goto	u151
  1919  072E  2F30               	goto	u150
  1920  072F                     u151:
  1921  072F  2F34               	goto	l1121
  1922  0730                     u150:
  1923  0730                     l1119:
  1924                           
  1925                           ;tm1637.c: 97:             DIO_SET_HIGH();
  1926  0730  3186  262D  3187   	fcall	_DIO_SET_HIGH
  1927                           
  1928                           ;tm1637.c: 98:         }else{
  1929  0733  2F37               	goto	l1123
  1930  0734                     l1121:
  1931                           
  1932                           ;tm1637.c: 100:             DIO_SET_LOW();
  1933  0734  3186  2648  3187   	fcall	_DIO_SET_LOW
  1934  0737                     l1123:
  1935                           
  1936                           ;tm1637.c: 104:         CLK_SET_HIGH();
  1937  0737  3186  262A  3187   	fcall	_CLK_SET_HIGH
  1938  073A                     l1125:
  1939                           
  1940                           ;tm1637.c: 106:         data = data >> 1;
  1941  073A  3674               	lsrf	write_byte@data,w
  1942  073B  00F1               	movwf	??_write_byte
  1943  073C  0871               	movf	??_write_byte,w
  1944  073D  00F4               	movwf	write_byte@data
  1945  073E                     l1127:
  1946                           
  1947                           ;tm1637.c: 107:     }
  1948  073E  3001               	movlw	1
  1949  073F  00F1               	movwf	??_write_byte
  1950  0740  0871               	movf	??_write_byte,w
  1951  0741  07F5               	addwf	write_byte@i,f
  1952  0742  3008               	movlw	8
  1953  0743  0275               	subwf	write_byte@i,w
  1954  0744  1C03               	skipc
  1955  0745  2F47               	goto	u161
  1956  0746  2F48               	goto	u160
  1957  0747                     u161:
  1958  0747  2F29               	goto	l1115
  1959  0748                     u160:
  1960  0748                     l1129:
  1961                           
  1962                           ;tm1637.c: 112:     CLK_SET_LOW();
  1963  0748  3186  263C  3187   	fcall	_CLK_SET_LOW
  1964  074B                     l1131:
  1965                           
  1966                           ;tm1637.c: 113:     DIO_SET_HIGH();
  1967  074B  3186  262D  3187   	fcall	_DIO_SET_HIGH
  1968  074E                     l1133:
  1969                           
  1970                           ;tm1637.c: 116:     CLK_SET_HIGH();
  1971  074E  3186  262A  3187   	fcall	_CLK_SET_HIGH
  1972  0751                     l1135:
  1973                           
  1974                           ;tm1637.c: 119:     DIO_SET_INPUT();
  1975  0751  3186  2630  3187   	fcall	_DIO_SET_INPUT
  1976  0754                     l1137:
  1977                           
  1978                           ;tm1637.c: 121:     uint8_t ack = get_DIO_PIN_value();
  1979  0754  3186  2637  3187   	fcall	_get_DIO_PIN_value
  1980  0757  00F1               	movwf	??_write_byte
  1981  0758  0871               	movf	??_write_byte,w
  1982  0759  00F3               	movwf	write_byte@ack
  1983  075A                     l1139:
  1984                           
  1985                           ;tm1637.c: 122:     if(ack == 0){
  1986  075A  0873               	movf	write_byte@ack,w
  1987  075B  1D03               	btfss	3,2
  1988  075C  2F5E               	goto	u171
  1989  075D  2F5F               	goto	u170
  1990  075E                     u171:
  1991  075E  2F65               	goto	l187
  1992  075F                     u170:
  1993  075F                     l1141:
  1994                           
  1995                           ;tm1637.c: 124:         DIO_SET_OUTPUT();
  1996  075F  3186  264E  3187   	fcall	_DIO_SET_OUTPUT
  1997                           
  1998                           ;tm1637.c: 127:         DIO_SET_LOW();
  1999  0762  3186  2648  3187   	fcall	_DIO_SET_LOW
  2000  0765                     l187:	
  2001                           ;tm1637.c: 128:     }
  2002                           
  2003                           
  2004                           ;tm1637.c: 131:     DIO_SET_OUTPUT();
  2005  0765  3186  264E  3187   	fcall	_DIO_SET_OUTPUT
  2006  0768                     l188:
  2007  0768  0008               	return
  2008  0769                     __end_of_write_byte:
  2009                           
  2010                           	psect	text6
  2011  0637                     __ptext6:	
  2012 ;; *************** function _get_DIO_PIN_value *****************
  2013 ;; Defined at:
  2014 ;;		line 75 in file "tm1637.c"
  2015 ;; Parameters:    Size  Location     Type
  2016 ;;		None
  2017 ;; Auto vars:     Size  Location     Type
  2018 ;;		None
  2019 ;; Return value:  Size  Location     Type
  2020 ;;                  1    wreg      unsigned char 
  2021 ;; Registers used:
  2022 ;;		wreg, status,2, status,0
  2023 ;; Tracked objects:
  2024 ;;		On entry : 0/0
  2025 ;;		On exit  : 0/0
  2026 ;;		Unchanged: 0/0
  2027 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  2028 ;;      Params:         0       0       0       0       0       0
  2029 ;;      Locals:         0       0       0       0       0       0
  2030 ;;      Temps:          0       0       0       0       0       0
  2031 ;;      Totals:         0       0       0       0       0       0
  2032 ;;Total ram usage:        0 bytes
  2033 ;; Hardware stack levels used: 1
  2034 ;; This function calls:
  2035 ;;		Nothing
  2036 ;; This function is called by:
  2037 ;;		_write_byte
  2038 ;; This function uses a non-reentrant model
  2039 ;;
  2040                           
  2041                           
  2042                           ;psect for function _get_DIO_PIN_value
  2043  0637                     _get_DIO_PIN_value:
  2044  0637                     l1059:	
  2045                           ;incstack = 0
  2046                           ; Regs used in _get_DIO_PIN_value: [wreg+status,2+status,0]
  2047                           
  2048  0637                     l1069:	
  2049                           ;tm1637.c: 76:     if(0x04 == 0x01){ return PORTAbits.RA0; }
  2050                           
  2051  0637  0020               	movlb	0	; select bank0
  2052  0638  0C0C               	rrf	12,w	;volatile
  2053  0639  0C89               	rrf	9,f
  2054  063A  3901               	andlw	1
  2055  063B                     l173:
  2056  063B  0008               	return
  2057  063C                     __end_of_get_DIO_PIN_value:
  2058                           
  2059                           	psect	text7
  2060  0630                     __ptext7:	
  2061 ;; *************** function _DIO_SET_INPUT *****************
  2062 ;; Defined at:
  2063 ;;		line 41 in file "tm1637.c"
  2064 ;; Parameters:    Size  Location     Type
  2065 ;;		None
  2066 ;; Auto vars:     Size  Location     Type
  2067 ;;		None
  2068 ;; Return value:  Size  Location     Type
  2069 ;;                  1    wreg      void 
  2070 ;; Registers used:
  2071 ;;		None
  2072 ;; Tracked objects:
  2073 ;;		On entry : 0/0
  2074 ;;		On exit  : 0/0
  2075 ;;		Unchanged: 0/0
  2076 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  2077 ;;      Params:         0       0       0       0       0       0
  2078 ;;      Locals:         0       0       0       0       0       0
  2079 ;;      Temps:          0       0       0       0       0       0
  2080 ;;      Totals:         0       0       0       0       0       0
  2081 ;;Total ram usage:        0 bytes
  2082 ;; Hardware stack levels used: 1
  2083 ;; This function calls:
  2084 ;;		Nothing
  2085 ;; This function is called by:
  2086 ;;		_write_byte
  2087 ;; This function uses a non-reentrant model
  2088 ;;
  2089                           
  2090                           
  2091                           ;psect for function _DIO_SET_INPUT
  2092  0630                     _DIO_SET_INPUT:
  2093  0630                     l1053:	
  2094                           ;incstack = 0
  2095                           ; Regs used in _DIO_SET_INPUT: []
  2096                           
  2097  0630  0021               	movlb	1	; select bank1
  2098  0631  150C               	bsf	12,2	;volatile
  2099  0632                     l157:
  2100  0632  0008               	return
  2101  0633                     __end_of_DIO_SET_INPUT:
  2102                           
  2103                           	psect	text8
  2104  0694                     __ptext8:	
  2105 ;; *************** function _stop_segment *****************
  2106 ;; Defined at:
  2107 ;;		line 61 in file "tm1637.c"
  2108 ;; Parameters:    Size  Location     Type
  2109 ;;		None
  2110 ;; Auto vars:     Size  Location     Type
  2111 ;;		None
  2112 ;; Return value:  Size  Location     Type
  2113 ;;                  1    wreg      void 
  2114 ;; Registers used:
  2115 ;;		wreg, status,2, status,0, pclath, cstack
  2116 ;; Tracked objects:
  2117 ;;		On entry : 0/0
  2118 ;;		On exit  : 0/0
  2119 ;;		Unchanged: 0/0
  2120 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  2121 ;;      Params:         0       0       0       0       0       0
  2122 ;;      Locals:         0       0       0       0       0       0
  2123 ;;      Temps:          0       0       0       0       0       0
  2124 ;;      Totals:         0       0       0       0       0       0
  2125 ;;Total ram usage:        0 bytes
  2126 ;; Hardware stack levels used: 1
  2127 ;; Hardware stack levels required when called: 1
  2128 ;; This function calls:
  2129 ;;		_CLK_SET_HIGH
  2130 ;;		_CLK_SET_LOW
  2131 ;;		_CLK_SET_OUTPUT
  2132 ;;		_DIO_SET_HIGH
  2133 ;;		_DIO_SET_LOW
  2134 ;;		_DIO_SET_OUTPUT
  2135 ;; This function is called by:
  2136 ;;		_set_segments
  2137 ;; This function uses a non-reentrant model
  2138 ;;
  2139                           
  2140                           
  2141                           ;psect for function _stop_segment
  2142  0694                     _stop_segment:
  2143  0694                     l1099:	
  2144                           ;incstack = 0
  2145                           ; Regs used in _stop_segment: [wreg+status,2+status,0+pclath+cstack]
  2146                           
  2147                           
  2148                           ;tm1637.c: 63:     DIO_SET_OUTPUT();
  2149  0694  3186  264E  3186   	fcall	_DIO_SET_OUTPUT
  2150                           
  2151                           ;tm1637.c: 64:     CLK_SET_OUTPUT();
  2152  0697  3186  2642  3186   	fcall	_CLK_SET_OUTPUT
  2153                           
  2154                           ;tm1637.c: 67:     CLK_SET_LOW();
  2155  069A  3186  263C  3186   	fcall	_CLK_SET_LOW
  2156                           
  2157                           ;tm1637.c: 68:     DIO_SET_LOW();
  2158  069D  3186  2648  3186   	fcall	_DIO_SET_LOW
  2159  06A0                     l1101:
  2160                           
  2161                           ;tm1637.c: 71:     CLK_SET_HIGH();
  2162  06A0  3186  262A  3186   	fcall	_CLK_SET_HIGH
  2163  06A3                     l1103:
  2164                           
  2165                           ;tm1637.c: 72:     DIO_SET_HIGH();
  2166  06A3  3186  262D  3186   	fcall	_DIO_SET_HIGH
  2167  06A6                     l169:
  2168  06A6  0008               	return
  2169  06A7                     __end_of_stop_segment:
  2170                           
  2171                           	psect	text9
  2172  0681                     __ptext9:	
  2173 ;; *************** function _start_segment *****************
  2174 ;; Defined at:
  2175 ;;		line 47 in file "tm1637.c"
  2176 ;; Parameters:    Size  Location     Type
  2177 ;;		None
  2178 ;; Auto vars:     Size  Location     Type
  2179 ;;		None
  2180 ;; Return value:  Size  Location     Type
  2181 ;;                  1    wreg      void 
  2182 ;; Registers used:
  2183 ;;		wreg, status,2, status,0, pclath, cstack
  2184 ;; Tracked objects:
  2185 ;;		On entry : 0/0
  2186 ;;		On exit  : 0/0
  2187 ;;		Unchanged: 0/0
  2188 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  2189 ;;      Params:         0       0       0       0       0       0
  2190 ;;      Locals:         0       0       0       0       0       0
  2191 ;;      Temps:          0       0       0       0       0       0
  2192 ;;      Totals:         0       0       0       0       0       0
  2193 ;;Total ram usage:        0 bytes
  2194 ;; Hardware stack levels used: 1
  2195 ;; Hardware stack levels required when called: 1
  2196 ;; This function calls:
  2197 ;;		_CLK_SET_HIGH
  2198 ;;		_CLK_SET_LOW
  2199 ;;		_CLK_SET_OUTPUT
  2200 ;;		_DIO_SET_HIGH
  2201 ;;		_DIO_SET_LOW
  2202 ;;		_DIO_SET_OUTPUT
  2203 ;; This function is called by:
  2204 ;;		_set_segments
  2205 ;; This function uses a non-reentrant model
  2206 ;;
  2207                           
  2208                           
  2209                           ;psect for function _start_segment
  2210  0681                     _start_segment:
  2211  0681                     l1093:	
  2212                           ;incstack = 0
  2213                           ; Regs used in _start_segment: [wreg+status,2+status,0+pclath+cstack]
  2214                           
  2215                           
  2216                           ;tm1637.c: 49:     DIO_SET_OUTPUT();
  2217  0681  3186  264E  3186   	fcall	_DIO_SET_OUTPUT
  2218                           
  2219                           ;tm1637.c: 50:     CLK_SET_OUTPUT();
  2220  0684  3186  2642  3186   	fcall	_CLK_SET_OUTPUT
  2221  0687                     l1095:
  2222                           
  2223                           ;tm1637.c: 53:     DIO_SET_HIGH();
  2224  0687  3186  262D  3186   	fcall	_DIO_SET_HIGH
  2225  068A                     l1097:
  2226                           
  2227                           ;tm1637.c: 54:     CLK_SET_HIGH();
  2228  068A  3186  262A  3186   	fcall	_CLK_SET_HIGH
  2229                           
  2230                           ;tm1637.c: 57:     DIO_SET_LOW();
  2231  068D  3186  2648  3186   	fcall	_DIO_SET_LOW
  2232                           
  2233                           ;tm1637.c: 58:     CLK_SET_LOW();
  2234  0690  3186  263C  3186   	fcall	_CLK_SET_LOW
  2235  0693                     l166:
  2236  0693  0008               	return
  2237  0694                     __end_of_start_segment:
  2238                           
  2239                           	psect	text10
  2240  064E                     __ptext10:	
  2241 ;; *************** function _DIO_SET_OUTPUT *****************
  2242 ;; Defined at:
  2243 ;;		line 39 in file "tm1637.c"
  2244 ;; Parameters:    Size  Location     Type
  2245 ;;		None
  2246 ;; Auto vars:     Size  Location     Type
  2247 ;;		None
  2248 ;; Return value:  Size  Location     Type
  2249 ;;                  1    wreg      void 
  2250 ;; Registers used:
  2251 ;;		wreg, status,2, status,0
  2252 ;; Tracked objects:
  2253 ;;		On entry : 0/0
  2254 ;;		On exit  : 0/0
  2255 ;;		Unchanged: 0/0
  2256 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  2257 ;;      Params:         0       0       0       0       0       0
  2258 ;;      Locals:         0       0       0       0       0       0
  2259 ;;      Temps:          1       0       0       0       0       0
  2260 ;;      Totals:         1       0       0       0       0       0
  2261 ;;Total ram usage:        1 bytes
  2262 ;; Hardware stack levels used: 1
  2263 ;; This function calls:
  2264 ;;		Nothing
  2265 ;; This function is called by:
  2266 ;;		_start_segment
  2267 ;;		_stop_segment
  2268 ;;		_write_byte
  2269 ;; This function uses a non-reentrant model
  2270 ;;
  2271                           
  2272                           
  2273                           ;psect for function _DIO_SET_OUTPUT
  2274  064E                     _DIO_SET_OUTPUT:
  2275  064E                     l1051:	
  2276                           ;incstack = 0
  2277                           ; Regs used in _DIO_SET_OUTPUT: [wreg+status,2+status,0]
  2278                           
  2279  064E  30FB               	movlw	251
  2280  064F  00F0               	movwf	??_DIO_SET_OUTPUT
  2281  0650  0870               	movf	??_DIO_SET_OUTPUT,w
  2282  0651  0021               	movlb	1	; select bank1
  2283  0652  058C               	andwf	12,f	;volatile
  2284  0653                     l154:
  2285  0653  0008               	return
  2286  0654                     __end_of_DIO_SET_OUTPUT:
  2287                           
  2288                           	psect	text11
  2289  0648                     __ptext11:	
  2290 ;; *************** function _DIO_SET_LOW *****************
  2291 ;; Defined at:
  2292 ;;		line 45 in file "tm1637.c"
  2293 ;; Parameters:    Size  Location     Type
  2294 ;;		None
  2295 ;; Auto vars:     Size  Location     Type
  2296 ;;		None
  2297 ;; Return value:  Size  Location     Type
  2298 ;;                  1    wreg      void 
  2299 ;; Registers used:
  2300 ;;		wreg, status,2, status,0
  2301 ;; Tracked objects:
  2302 ;;		On entry : 0/0
  2303 ;;		On exit  : 0/0
  2304 ;;		Unchanged: 0/0
  2305 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  2306 ;;      Params:         0       0       0       0       0       0
  2307 ;;      Locals:         0       0       0       0       0       0
  2308 ;;      Temps:          1       0       0       0       0       0
  2309 ;;      Totals:         1       0       0       0       0       0
  2310 ;;Total ram usage:        1 bytes
  2311 ;; Hardware stack levels used: 1
  2312 ;; This function calls:
  2313 ;;		Nothing
  2314 ;; This function is called by:
  2315 ;;		_start_segment
  2316 ;;		_stop_segment
  2317 ;;		_write_byte
  2318 ;; This function uses a non-reentrant model
  2319 ;;
  2320                           
  2321                           
  2322                           ;psect for function _DIO_SET_LOW
  2323  0648                     _DIO_SET_LOW:
  2324  0648                     l1057:	
  2325                           ;incstack = 0
  2326                           ; Regs used in _DIO_SET_LOW: [wreg+status,2+status,0]
  2327                           
  2328  0648  30FB               	movlw	251
  2329  0649  00F0               	movwf	??_DIO_SET_LOW
  2330  064A  0870               	movf	??_DIO_SET_LOW,w
  2331  064B  0022               	movlb	2	; select bank2
  2332  064C  058C               	andwf	12,f	;volatile
  2333  064D                     l163:
  2334  064D  0008               	return
  2335  064E                     __end_of_DIO_SET_LOW:
  2336                           
  2337                           	psect	text12
  2338  062D                     __ptext12:	
  2339 ;; *************** function _DIO_SET_HIGH *****************
  2340 ;; Defined at:
  2341 ;;		line 43 in file "tm1637.c"
  2342 ;; Parameters:    Size  Location     Type
  2343 ;;		None
  2344 ;; Auto vars:     Size  Location     Type
  2345 ;;		None
  2346 ;; Return value:  Size  Location     Type
  2347 ;;                  1    wreg      void 
  2348 ;; Registers used:
  2349 ;;		None
  2350 ;; Tracked objects:
  2351 ;;		On entry : 0/0
  2352 ;;		On exit  : 0/0
  2353 ;;		Unchanged: 0/0
  2354 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  2355 ;;      Params:         0       0       0       0       0       0
  2356 ;;      Locals:         0       0       0       0       0       0
  2357 ;;      Temps:          0       0       0       0       0       0
  2358 ;;      Totals:         0       0       0       0       0       0
  2359 ;;Total ram usage:        0 bytes
  2360 ;; Hardware stack levels used: 1
  2361 ;; This function calls:
  2362 ;;		Nothing
  2363 ;; This function is called by:
  2364 ;;		_start_segment
  2365 ;;		_stop_segment
  2366 ;;		_write_byte
  2367 ;; This function uses a non-reentrant model
  2368 ;;
  2369                           
  2370                           
  2371                           ;psect for function _DIO_SET_HIGH
  2372  062D                     _DIO_SET_HIGH:
  2373  062D                     l1055:	
  2374                           ;incstack = 0
  2375                           ; Regs used in _DIO_SET_HIGH: []
  2376                           
  2377  062D  0022               	movlb	2	; select bank2
  2378  062E  150C               	bsf	12,2	;volatile
  2379  062F                     l160:
  2380  062F  0008               	return
  2381  0630                     __end_of_DIO_SET_HIGH:
  2382                           
  2383                           	psect	text13
  2384  0642                     __ptext13:	
  2385 ;; *************** function _CLK_SET_OUTPUT *****************
  2386 ;; Defined at:
  2387 ;;		line 31 in file "tm1637.c"
  2388 ;; Parameters:    Size  Location     Type
  2389 ;;		None
  2390 ;; Auto vars:     Size  Location     Type
  2391 ;;		None
  2392 ;; Return value:  Size  Location     Type
  2393 ;;                  1    wreg      void 
  2394 ;; Registers used:
  2395 ;;		wreg, status,2, status,0
  2396 ;; Tracked objects:
  2397 ;;		On entry : 0/0
  2398 ;;		On exit  : 0/0
  2399 ;;		Unchanged: 0/0
  2400 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  2401 ;;      Params:         0       0       0       0       0       0
  2402 ;;      Locals:         0       0       0       0       0       0
  2403 ;;      Temps:          1       0       0       0       0       0
  2404 ;;      Totals:         1       0       0       0       0       0
  2405 ;;Total ram usage:        1 bytes
  2406 ;; Hardware stack levels used: 1
  2407 ;; This function calls:
  2408 ;;		Nothing
  2409 ;; This function is called by:
  2410 ;;		_start_segment
  2411 ;;		_stop_segment
  2412 ;;		_write_byte
  2413 ;; This function uses a non-reentrant model
  2414 ;;
  2415                           
  2416                           
  2417                           ;psect for function _CLK_SET_OUTPUT
  2418  0642                     _CLK_SET_OUTPUT:
  2419  0642                     l1045:	
  2420                           ;incstack = 0
  2421                           ; Regs used in _CLK_SET_OUTPUT: [wreg+status,2+status,0]
  2422                           
  2423  0642  30FD               	movlw	253
  2424  0643  00F0               	movwf	??_CLK_SET_OUTPUT
  2425  0644  0870               	movf	??_CLK_SET_OUTPUT,w
  2426  0645  0021               	movlb	1	; select bank1
  2427  0646  058C               	andwf	12,f	;volatile
  2428  0647                     l145:
  2429  0647  0008               	return
  2430  0648                     __end_of_CLK_SET_OUTPUT:
  2431                           
  2432                           	psect	text14
  2433  063C                     __ptext14:	
  2434 ;; *************** function _CLK_SET_LOW *****************
  2435 ;; Defined at:
  2436 ;;		line 36 in file "tm1637.c"
  2437 ;; Parameters:    Size  Location     Type
  2438 ;;		None
  2439 ;; Auto vars:     Size  Location     Type
  2440 ;;		None
  2441 ;; Return value:  Size  Location     Type
  2442 ;;                  1    wreg      void 
  2443 ;; Registers used:
  2444 ;;		wreg, status,2, status,0
  2445 ;; Tracked objects:
  2446 ;;		On entry : 0/0
  2447 ;;		On exit  : 0/0
  2448 ;;		Unchanged: 0/0
  2449 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  2450 ;;      Params:         0       0       0       0       0       0
  2451 ;;      Locals:         0       0       0       0       0       0
  2452 ;;      Temps:          1       0       0       0       0       0
  2453 ;;      Totals:         1       0       0       0       0       0
  2454 ;;Total ram usage:        1 bytes
  2455 ;; Hardware stack levels used: 1
  2456 ;; This function calls:
  2457 ;;		Nothing
  2458 ;; This function is called by:
  2459 ;;		_start_segment
  2460 ;;		_stop_segment
  2461 ;;		_write_byte
  2462 ;; This function uses a non-reentrant model
  2463 ;;
  2464                           
  2465                           
  2466                           ;psect for function _CLK_SET_LOW
  2467  063C                     _CLK_SET_LOW:
  2468  063C                     l1049:	
  2469                           ;incstack = 0
  2470                           ; Regs used in _CLK_SET_LOW: [wreg+status,2+status,0]
  2471                           
  2472  063C  30FD               	movlw	253
  2473  063D  00F0               	movwf	??_CLK_SET_LOW
  2474  063E  0870               	movf	??_CLK_SET_LOW,w
  2475  063F  0022               	movlb	2	; select bank2
  2476  0640  058C               	andwf	12,f	;volatile
  2477  0641                     l151:
  2478  0641  0008               	return
  2479  0642                     __end_of_CLK_SET_LOW:
  2480                           
  2481                           	psect	text15
  2482  062A                     __ptext15:	
  2483 ;; *************** function _CLK_SET_HIGH *****************
  2484 ;; Defined at:
  2485 ;;		line 34 in file "tm1637.c"
  2486 ;; Parameters:    Size  Location     Type
  2487 ;;		None
  2488 ;; Auto vars:     Size  Location     Type
  2489 ;;		None
  2490 ;; Return value:  Size  Location     Type
  2491 ;;                  1    wreg      void 
  2492 ;; Registers used:
  2493 ;;		None
  2494 ;; Tracked objects:
  2495 ;;		On entry : 0/0
  2496 ;;		On exit  : 0/0
  2497 ;;		Unchanged: 0/0
  2498 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  2499 ;;      Params:         0       0       0       0       0       0
  2500 ;;      Locals:         0       0       0       0       0       0
  2501 ;;      Temps:          0       0       0       0       0       0
  2502 ;;      Totals:         0       0       0       0       0       0
  2503 ;;Total ram usage:        0 bytes
  2504 ;; Hardware stack levels used: 1
  2505 ;; This function calls:
  2506 ;;		Nothing
  2507 ;; This function is called by:
  2508 ;;		_start_segment
  2509 ;;		_stop_segment
  2510 ;;		_write_byte
  2511 ;; This function uses a non-reentrant model
  2512 ;;
  2513                           
  2514                           
  2515                           ;psect for function _CLK_SET_HIGH
  2516  062A                     _CLK_SET_HIGH:
  2517  062A                     l1047:	
  2518                           ;incstack = 0
  2519                           ; Regs used in _CLK_SET_HIGH: []
  2520                           
  2521  062A  0022               	movlb	2	; select bank2
  2522  062B  148C               	bsf	12,1	;volatile
  2523  062C                     l148:
  2524  062C  0008               	return
  2525  062D                     __end_of_CLK_SET_HIGH:
  2526                           
  2527                           	psect	text16
  2528  0669                     __ptext16:	
  2529 ;; *************** function _SYSTEM_Initialize *****************
  2530 ;; Defined at:
  2531 ;;		line 50 in file "mcc_generated_files/mcc.c"
  2532 ;; Parameters:    Size  Location     Type
  2533 ;;		None
  2534 ;; Auto vars:     Size  Location     Type
  2535 ;;		None
  2536 ;; Return value:  Size  Location     Type
  2537 ;;                  1    wreg      void 
  2538 ;; Registers used:
  2539 ;;		wreg, status,2, status,0, pclath, cstack
  2540 ;; Tracked objects:
  2541 ;;		On entry : 0/0
  2542 ;;		On exit  : 0/0
  2543 ;;		Unchanged: 0/0
  2544 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  2545 ;;      Params:         0       0       0       0       0       0
  2546 ;;      Locals:         0       0       0       0       0       0
  2547 ;;      Temps:          0       0       0       0       0       0
  2548 ;;      Totals:         0       0       0       0       0       0
  2549 ;;Total ram usage:        0 bytes
  2550 ;; Hardware stack levels used: 1
  2551 ;; Hardware stack levels required when called: 1
  2552 ;; This function calls:
  2553 ;;		_OSCILLATOR_Initialize
  2554 ;;		_PIN_MANAGER_Initialize
  2555 ;;		_WDT_Initialize
  2556 ;; This function is called by:
  2557 ;;		_main
  2558 ;; This function uses a non-reentrant model
  2559 ;;
  2560                           
  2561                           
  2562                           ;psect for function _SYSTEM_Initialize
  2563  0669                     _SYSTEM_Initialize:
  2564  0669                     l1177:	
  2565                           ;incstack = 0
  2566                           ; Regs used in _SYSTEM_Initialize: [wreg+status,2+status,0+pclath+cstack]
  2567                           
  2568                           
  2569                           ;mcc_generated_files/mcc.c: 53:     PIN_MANAGER_Initialize();
  2570  0669  3186  26CF  3186   	fcall	_PIN_MANAGER_Initialize
  2571                           
  2572                           ;mcc_generated_files/mcc.c: 54:     OSCILLATOR_Initialize();
  2573  066C  3186  265A  3186   	fcall	_OSCILLATOR_Initialize
  2574                           
  2575                           ;mcc_generated_files/mcc.c: 55:     WDT_Initialize();
  2576  066F  3186  2633  3186   	fcall	_WDT_Initialize
  2577  0672                     l45:
  2578  0672  0008               	return
  2579  0673                     __end_of_SYSTEM_Initialize:
  2580                           
  2581                           	psect	text17
  2582  0633                     __ptext17:	
  2583 ;; *************** function _WDT_Initialize *****************
  2584 ;; Defined at:
  2585 ;;		line 68 in file "mcc_generated_files/mcc.c"
  2586 ;; Parameters:    Size  Location     Type
  2587 ;;		None
  2588 ;; Auto vars:     Size  Location     Type
  2589 ;;		None
  2590 ;; Return value:  Size  Location     Type
  2591 ;;                  1    wreg      void 
  2592 ;; Registers used:
  2593 ;;		wreg
  2594 ;; Tracked objects:
  2595 ;;		On entry : 0/0
  2596 ;;		On exit  : 0/0
  2597 ;;		Unchanged: 0/0
  2598 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  2599 ;;      Params:         0       0       0       0       0       0
  2600 ;;      Locals:         0       0       0       0       0       0
  2601 ;;      Temps:          0       0       0       0       0       0
  2602 ;;      Totals:         0       0       0       0       0       0
  2603 ;;Total ram usage:        0 bytes
  2604 ;; Hardware stack levels used: 1
  2605 ;; This function calls:
  2606 ;;		Nothing
  2607 ;; This function is called by:
  2608 ;;		_SYSTEM_Initialize
  2609 ;; This function uses a non-reentrant model
  2610 ;;
  2611                           
  2612                           
  2613                           ;psect for function _WDT_Initialize
  2614  0633                     _WDT_Initialize:
  2615  0633                     l1163:	
  2616                           ;incstack = 0
  2617                           ; Regs used in _WDT_Initialize: [wreg]
  2618                           
  2619                           
  2620                           ;mcc_generated_files/mcc.c: 71:     WDTCON = 0x16;
  2621  0633  3016               	movlw	22
  2622  0634  0021               	movlb	1	; select bank1
  2623  0635  0097               	movwf	23	;volatile
  2624  0636                     l51:
  2625  0636  0008               	return
  2626  0637                     __end_of_WDT_Initialize:
  2627                           
  2628                           	psect	text18
  2629  06CF                     __ptext18:	
  2630 ;; *************** function _PIN_MANAGER_Initialize *****************
  2631 ;; Defined at:
  2632 ;;		line 55 in file "mcc_generated_files/pin_manager.c"
  2633 ;; Parameters:    Size  Location     Type
  2634 ;;		None
  2635 ;; Auto vars:     Size  Location     Type
  2636 ;;		None
  2637 ;; Return value:  Size  Location     Type
  2638 ;;                  1    wreg      void 
  2639 ;; Registers used:
  2640 ;;		wreg, status,2
  2641 ;; Tracked objects:
  2642 ;;		On entry : 0/0
  2643 ;;		On exit  : 0/0
  2644 ;;		Unchanged: 0/0
  2645 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  2646 ;;      Params:         0       0       0       0       0       0
  2647 ;;      Locals:         0       0       0       0       0       0
  2648 ;;      Temps:          0       0       0       0       0       0
  2649 ;;      Totals:         0       0       0       0       0       0
  2650 ;;Total ram usage:        0 bytes
  2651 ;; Hardware stack levels used: 1
  2652 ;; This function calls:
  2653 ;;		Nothing
  2654 ;; This function is called by:
  2655 ;;		_SYSTEM_Initialize
  2656 ;; This function uses a non-reentrant model
  2657 ;;
  2658                           
  2659                           
  2660                           ;psect for function _PIN_MANAGER_Initialize
  2661  06CF                     _PIN_MANAGER_Initialize:
  2662  06CF                     l1145:	
  2663                           ;incstack = 0
  2664                           ; Regs used in _PIN_MANAGER_Initialize: [wreg+status,2]
  2665                           
  2666                           
  2667                           ;mcc_generated_files/pin_manager.c: 60:     LATA = 0x00;
  2668  06CF  0022               	movlb	2	; select bank2
  2669  06D0  018C               	clrf	12	;volatile
  2670                           
  2671                           ;mcc_generated_files/pin_manager.c: 61:     LATB = 0x00;
  2672  06D1  018D               	clrf	13	;volatile
  2673  06D2                     l1147:
  2674                           
  2675                           ;mcc_generated_files/pin_manager.c: 66:     TRISA = 0xFF;
  2676  06D2  30FF               	movlw	255
  2677  06D3  0021               	movlb	1	; select bank1
  2678  06D4  008C               	movwf	12	;volatile
  2679  06D5                     l1149:
  2680                           
  2681                           ;mcc_generated_files/pin_manager.c: 67:     TRISB = 0xFF;
  2682  06D5  30FF               	movlw	255
  2683  06D6  008D               	movwf	13	;volatile
  2684  06D7                     l1151:
  2685                           
  2686                           ;mcc_generated_files/pin_manager.c: 72:     ANSELB = 0xFE;
  2687  06D7  30FE               	movlw	254
  2688  06D8  0023               	movlb	3	; select bank3
  2689  06D9  008D               	movwf	13	;volatile
  2690  06DA                     l1153:
  2691                           
  2692                           ;mcc_generated_files/pin_manager.c: 73:     ANSELA = 0x1F;
  2693  06DA  301F               	movlw	31
  2694  06DB  008C               	movwf	12	;volatile
  2695                           
  2696                           ;mcc_generated_files/pin_manager.c: 78:     WPUB = 0x00;
  2697  06DC  0024               	movlb	4	; select bank4
  2698  06DD  018D               	clrf	13	;volatile
  2699                           
  2700                           ;mcc_generated_files/pin_manager.c: 79:     WPUA = 0x00;
  2701  06DE  018C               	clrf	12	;volatile
  2702  06DF                     l1155:
  2703                           
  2704                           ;mcc_generated_files/pin_manager.c: 80:     OPTION_REGbits.nWPUEN = 1;
  2705  06DF  0021               	movlb	1	; select bank1
  2706  06E0  1795               	bsf	21,7	;volatile
  2707                           
  2708                           ;mcc_generated_files/pin_manager.c: 86:     APFCON0 = 0x00;
  2709  06E1  0022               	movlb	2	; select bank2
  2710  06E2  019D               	clrf	29	;volatile
  2711                           
  2712                           ;mcc_generated_files/pin_manager.c: 87:     APFCON1 = 0x00;
  2713  06E3  019E               	clrf	30	;volatile
  2714  06E4                     l25:
  2715  06E4  0008               	return
  2716  06E5                     __end_of_PIN_MANAGER_Initialize:
  2717                           
  2718                           	psect	text19
  2719  065A                     __ptext19:	
  2720 ;; *************** function _OSCILLATOR_Initialize *****************
  2721 ;; Defined at:
  2722 ;;		line 58 in file "mcc_generated_files/mcc.c"
  2723 ;; Parameters:    Size  Location     Type
  2724 ;;		None
  2725 ;; Auto vars:     Size  Location     Type
  2726 ;;		None
  2727 ;; Return value:  Size  Location     Type
  2728 ;;                  1    wreg      void 
  2729 ;; Registers used:
  2730 ;;		wreg, status,2
  2731 ;; Tracked objects:
  2732 ;;		On entry : 0/0
  2733 ;;		On exit  : 0/0
  2734 ;;		Unchanged: 0/0
  2735 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  2736 ;;      Params:         0       0       0       0       0       0
  2737 ;;      Locals:         0       0       0       0       0       0
  2738 ;;      Temps:          0       0       0       0       0       0
  2739 ;;      Totals:         0       0       0       0       0       0
  2740 ;;Total ram usage:        0 bytes
  2741 ;; Hardware stack levels used: 1
  2742 ;; This function calls:
  2743 ;;		Nothing
  2744 ;; This function is called by:
  2745 ;;		_SYSTEM_Initialize
  2746 ;; This function uses a non-reentrant model
  2747 ;;
  2748                           
  2749                           
  2750                           ;psect for function _OSCILLATOR_Initialize
  2751  065A                     _OSCILLATOR_Initialize:
  2752  065A                     l1157:	
  2753                           ;incstack = 0
  2754                           ; Regs used in _OSCILLATOR_Initialize: [wreg+status,2]
  2755                           
  2756                           
  2757                           ;mcc_generated_files/mcc.c: 61:     OSCCON = 0x70;
  2758  065A  3070               	movlw	112
  2759  065B  0021               	movlb	1	; select bank1
  2760  065C  0099               	movwf	25	;volatile
  2761  065D                     l1159:
  2762                           
  2763                           ;mcc_generated_files/mcc.c: 63:     OSCTUNE = 0x00;
  2764  065D  0198               	clrf	24	;volatile
  2765  065E                     l1161:
  2766                           
  2767                           ;mcc_generated_files/mcc.c: 65:     BORCON = 0x00;
  2768  065E  0022               	movlb	2	; select bank2
  2769  065F  0196               	clrf	22	;volatile
  2770  0660                     l48:
  2771  0660  0008               	return
  2772  0661                     __end_of_OSCILLATOR_Initialize:
  2773  007E                     btemp	set	126	;btemp
  2774  007E                     wtemp0	set	126
  2775                           
  2776                           	psect	config
  2777                           
  2778                           ;Config register CONFIG1 @ 0x8007
  2779                           ;	Oscillator Selection
  2780                           ;	FOSC = INTOSC, INTOSC oscillator: I/O function on CLKIN pin
  2781                           ;	Watchdog Timer Enable
  2782                           ;	WDTE = OFF, WDT disabled
  2783                           ;	Power-up Timer Enable
  2784                           ;	PWRTE = OFF, PWRT disabled
  2785                           ;	MCLR Pin Function Select
  2786                           ;	MCLRE = ON, MCLR/VPP pin function is MCLR
  2787                           ;	Flash Program Memory Code Protection
  2788                           ;	CP = OFF, Program memory code protection is disabled
  2789                           ;	Data Memory Code Protection
  2790                           ;	CPD = OFF, Data memory code protection is disabled
  2791                           ;	Brown-out Reset Enable
  2792                           ;	BOREN = ON, Brown-out Reset enabled
  2793                           ;	Clock Out Enable
  2794                           ;	CLKOUTEN = OFF, CLKOUT function is disabled. I/O or oscillator function on the CLKOUT 
      +                          pin
  2795                           ;	Internal/External Switchover
  2796                           ;	IESO = ON, Internal/External Switchover mode is enabled
  2797                           ;	Fail-Safe Clock Monitor Enable
  2798                           ;	FCMEN = ON, Fail-Safe Clock Monitor is enabled
  2799  8007                     	org	32775
  2800  8007  3FE4               	dw	16356
  2801                           
  2802                           ;Config register CONFIG2 @ 0x8008
  2803                           ;	Flash Memory Self-Write Protection
  2804                           ;	WRT = OFF, Write protection off
  2805                           ;	PLL Enable
  2806                           ;	PLLEN = OFF, 4x PLL disabled
  2807                           ;	Stack Overflow/Underflow Reset Enable
  2808                           ;	STVREN = ON, Stack Overflow or Underflow will cause a Reset
  2809                           ;	Brown-out Reset Voltage Selection
  2810                           ;	BORV = LO, Brown-out Reset Voltage (Vbor), low trip point selected.
  2811                           ;	Low-Voltage Programming Enable
  2812                           ;	LVP = OFF, High-voltage on MCLR/VPP must be used for programming
  2813  8008                     	org	32776
  2814  8008  1EFF               	dw	7935

Data Sizes:
    Strings     0
    Constant    0
    Data        14
    BSS         5
    Persistent  32
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14     14      14
    BANK0            80     10      29
    BANK1            80      0       0
    BANK2            80      0       0
    BANK3            80      0       0
    BANK4            48      0       0

Pointer List with Targets:

    set_segments@segments	PTR const unsigned char  size(1) Largest target is 4
		 -> clear_segment@data(BANK0[4]), main@data(BANK0[4]), 


Critical Paths under _main in COMMON

    _main->_clear_segment
    _clear_segment->_set_segments
    _set_segments->_write_byte
    _write_byte->_CLK_SET_LOW
    _write_byte->_CLK_SET_OUTPUT
    _write_byte->_DIO_SET_LOW
    _write_byte->_DIO_SET_OUTPUT
    _stop_segment->_CLK_SET_LOW
    _stop_segment->_CLK_SET_OUTPUT
    _stop_segment->_DIO_SET_LOW
    _stop_segment->_DIO_SET_OUTPUT
    _start_segment->_CLK_SET_LOW
    _start_segment->_CLK_SET_OUTPUT
    _start_segment->_DIO_SET_LOW
    _start_segment->_DIO_SET_OUTPUT

Critical Paths under _main in BANK0

    _main->_clear_segment

Critical Paths under _main in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 8     8      0    2065
                                             12 COMMON     2     2      0
                                              4 BANK0      6     6      0
                  _SYSTEM_Initialize
                      _clear_segment
                       _encode_digit
                     _set_brigthness
                       _set_segments
 ---------------------------------------------------------------------------------
 (1) _set_brigthness                                       3     2      1     142
                                              0 COMMON     3     2      1
 ---------------------------------------------------------------------------------
 (1) _encode_digit                                         1     1      0      22
                                              0 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (1) _clear_segment                                        5     5      0     834
                                             11 COMMON     1     1      0
                                              0 BANK0      4     4      0
                       _set_segments
 ---------------------------------------------------------------------------------
 (1) _set_segments                                         5     3      2     810
                                              6 COMMON     5     3      2
                      _start_segment
                       _stop_segment
                         _write_byte
 ---------------------------------------------------------------------------------
 (2) _write_byte                                           5     5      0     143
                                              1 COMMON     5     5      0
                       _CLK_SET_HIGH
                        _CLK_SET_LOW
                     _CLK_SET_OUTPUT
                       _DIO_SET_HIGH
                      _DIO_SET_INPUT
                        _DIO_SET_LOW
                     _DIO_SET_OUTPUT
                  _get_DIO_PIN_value
 ---------------------------------------------------------------------------------
 (3) _get_DIO_PIN_value                                    0     0      0       0
 ---------------------------------------------------------------------------------
 (3) _DIO_SET_INPUT                                        0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _stop_segment                                         0     0      0       0
                       _CLK_SET_HIGH
                        _CLK_SET_LOW
                     _CLK_SET_OUTPUT
                       _DIO_SET_HIGH
                        _DIO_SET_LOW
                     _DIO_SET_OUTPUT
 ---------------------------------------------------------------------------------
 (2) _start_segment                                        0     0      0       0
                       _CLK_SET_HIGH
                        _CLK_SET_LOW
                     _CLK_SET_OUTPUT
                       _DIO_SET_HIGH
                        _DIO_SET_LOW
                     _DIO_SET_OUTPUT
 ---------------------------------------------------------------------------------
 (3) _DIO_SET_OUTPUT                                       1     1      0       0
                                              0 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (3) _DIO_SET_LOW                                          1     1      0       0
                                              0 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (3) _DIO_SET_HIGH                                         0     0      0       0
 ---------------------------------------------------------------------------------
 (3) _CLK_SET_OUTPUT                                       1     1      0       0
                                              0 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (3) _CLK_SET_LOW                                          1     1      0       0
                                              0 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (3) _CLK_SET_HIGH                                         0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _SYSTEM_Initialize                                    0     0      0       0
              _OSCILLATOR_Initialize
             _PIN_MANAGER_Initialize
                     _WDT_Initialize
 ---------------------------------------------------------------------------------
 (2) _WDT_Initialize                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _PIN_MANAGER_Initialize                               0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _OSCILLATOR_Initialize                                0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 3
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _SYSTEM_Initialize
     _OSCILLATOR_Initialize
     _PIN_MANAGER_Initialize
     _WDT_Initialize
   _clear_segment
     _set_segments
       _start_segment
         _CLK_SET_HIGH
         _CLK_SET_LOW
         _CLK_SET_OUTPUT
         _DIO_SET_HIGH
         _DIO_SET_LOW
         _DIO_SET_OUTPUT
       _stop_segment
         _CLK_SET_HIGH
         _CLK_SET_LOW
         _CLK_SET_OUTPUT
         _DIO_SET_HIGH
         _DIO_SET_LOW
         _DIO_SET_OUTPUT
       _write_byte
         _CLK_SET_HIGH
         _CLK_SET_LOW
         _CLK_SET_OUTPUT
         _DIO_SET_HIGH
         _DIO_SET_INPUT
         _DIO_SET_LOW
         _DIO_SET_OUTPUT
         _get_DIO_PIN_value
   _encode_digit
   _set_brigthness
   _set_segments

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             170      0       0       0        0.0%
EEDATA             100      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
BITCOMMON            E      0       0       1        0.0%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
COMMON               E      E       E       2      100.0%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
BITSFR2              0      0       0       3        0.0%
SFR2                 0      0       0       3        0.0%
STACK                0      0       0       3        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
ABS                  0      0      2B       4        0.0%
BITBANK0            50      0       0       5        0.0%
BITSFR4              0      0       0       5        0.0%
SFR4                 0      0       0       5        0.0%
BANK0               50      A      1D       6       36.2%
BITSFR5              0      0       0       6        0.0%
SFR5                 0      0       0       6        0.0%
BITBANK1            50      0       0       7        0.0%
BITSFR6              0      0       0       7        0.0%
SFR6                 0      0       0       7        0.0%
BANK1               50      0       0       8        0.0%
BITSFR7              0      0       0       8        0.0%
SFR7                 0      0       0       8        0.0%
BITBANK2            50      0       0       9        0.0%
BITSFR8              0      0       0       9        0.0%
SFR8                 0      0       0       9        0.0%
BANK2               50      0       0      10        0.0%
BITSFR9              0      0       0      10        0.0%
SFR9                 0      0       0      10        0.0%
BITBANK3            50      0       0      11        0.0%
BITSFR10             0      0       0      11        0.0%
SFR10                0      0       0      11        0.0%
BANK3               50      0       0      12        0.0%
BITSFR11             0      0       0      12        0.0%
SFR11                0      0       0      12        0.0%
BITBANK4            30      0       0      13        0.0%
BITSFR12             0      0       0      13        0.0%
SFR12                0      0       0      13        0.0%
BANK4               30      0       0      14        0.0%
BITSFR13             0      0       0      14        0.0%
SFR13                0      0       0      14        0.0%
BITSFR14             0      0       0      15        0.0%
SFR14                0      0       0      15        0.0%
DATA                 0      0      2B      15        0.0%
BITSFR15             0      0       0      16        0.0%
SFR15                0      0       0      16        0.0%
BITSFR16             0      0       0      17        0.0%
SFR16                0      0       0      17        0.0%
BITSFR17             0      0       0      18        0.0%
SFR17                0      0       0      18        0.0%
BITSFR18             0      0       0      19        0.0%
SFR18                0      0       0      19        0.0%
BITSFR19             0      0       0      20        0.0%
SFR19                0      0       0      20        0.0%
BITSFR20             0      0       0      21        0.0%
SFR20                0      0       0      21        0.0%
BITSFR21             0      0       0      22        0.0%
SFR21                0      0       0      22        0.0%
BITSFR22             0      0       0      23        0.0%
SFR22                0      0       0      23        0.0%
BITSFR23             0      0       0      24        0.0%
SFR23                0      0       0      24        0.0%
BITSFR24             0      0       0      25        0.0%
SFR24                0      0       0      25        0.0%
BITSFR25             0      0       0      26        0.0%
SFR25                0      0       0      26        0.0%
BITSFR26             0      0       0      27        0.0%
SFR26                0      0       0      27        0.0%
BITSFR27             0      0       0      28        0.0%
SFR27                0      0       0      28        0.0%
BITSFR28             0      0       0      29        0.0%
SFR28                0      0       0      29        0.0%
BITSFR29             0      0       0      30        0.0%
SFR29                0      0       0      30        0.0%
BITSFR30             0      0       0      31        0.0%
SFR30                0      0       0      31        0.0%
BITSFR31             0      0       0      32        0.0%
SFR31                0      0       0      32        0.0%


Microchip Technology PIC Macro Assembler V2.32 build 20210201212658 
Symbol Table                                                                                   Mon Oct 25 23:08:07 2021

         __size_of_start_segment 0013                      _SSPSTATbits 0214                               l25 06E4  
                             l51 0636                               l45 0672                               l48 0660  
                            l204 06B9                              l151 0641                              l207 0668  
                            l160 062F                              l145 0647                              l154 0653  
                            l163 064D                              l148 062C                              l157 0632  
                            l173 063B                              l166 0693                              l169 06A6  
                            l193 06CE                              l187 0765                              l188 0768  
                            l199 071F                              u200 07CB                              u201 07CA  
                            u150 0730                              u151 072F                              u160 0748  
                            u161 0747                              u217 07D9                              u170 075F  
                            u171 075E                              u180 070F                              u181 070E  
                            u190 06C0                              u191 06BF                              wreg 0009  
                 ??_encode_digit 0070                             l1101 06A0                             l1103 06A3  
                           l1121 0734                             l1105 0721                             l1201 0772  
                           l1051 064E                             l1131 074B                             l1123 0737  
                           l1115 0729                             l1107 0725                             l1211 078F  
                           l1203 0773                             l1045 0642                             l1053 0630  
                           l1141 075F                             l1133 074E                             l1125 073A  
                           l1117 072C                             l1109 0728                             l1221 07B0  
                           l1213 0797                             l1205 077C                             l1151 06D7  
                           l1047 062A                             l1055 062D                             l1135 0751  
                           l1127 073E                             l1119 0730                             l1231 07C1  
                           l1223 07B2                             l1215 079F                             l1207 077F  
                           l1161 065E                             l1153 06DA                             l1145 06CF  
                           l1049 063C                             l1057 0648                             l1137 0754  
                           l1129 0748                             l1241 07E4                             l1233 07C5  
                           l1217 07A5                             l1209 0787                             l1155 06DF  
                           l1147 06D2                             l1163 0633                             l1059 0637  
                           l1139 075A                             l1171 0705                             l1235 07CB  
                           l1219 07AE                             l1157 065A                             l1149 06D5  
                           l1093 0681                             l1069 0637                             l1173 0709  
                           l1165 06E6                             l1181 06B0                             l1237 07D4  
                           l1229 07B4                             l1159 065D                             l1095 0687  
                           l1175 070F                             l1167 06F9                             l1183 0662  
                           l1191 06C8                             l1239 07DF                             l1177 0669  
                           l1097 068A                             l1169 06FB                             l1193 0769  
                           l1099 0694                             l1179 06A7                             l1187 06BB  
                           l1195 076C                             l1189 06C0                             l1197 076E  
                           l1199 0770                             _LATA 010C                             _LATB 010D  
                           _WPUA 020C                             _WPUB 020D                             _main 0769  
                  write_byte@ack 0073                             fsr0h 0005                             fsr1h 0007  
                           fsr0l 0004                             indf1 0001                             fsr1l 0006  
                           btemp 007E                             start 0002   __size_of_OSCILLATOR_Initialize 0007  
  __end_of_OSCILLATOR_Initialize 0661            __size_of_stop_segment 0013                            ?_main 0070  
                          _TRISA 008C                            _TRISB 008D                   _WDT_Initialize 0633  
                  _start_segment 0681                   write_byte@data 0074                            main@i 0037  
                          main@k 0032                            status 0003                            wtemp0 007E  
           __end_of_CLK_SET_HIGH 062D                  __initialization 07EC                     _stop_segment 0694  
                   __end_of_main 07EC             __end_of_DIO_SET_HIGH 0630                           ??_main 007C  
           __size_of_CLK_SET_LOW 0006           __end_of_WDT_Initialize 0637             __size_of_DIO_SET_LOW 0006  
                set_segments@pos 0077                   ?_start_segment 0070                           _ANSELA 018C  
                         _ANSELB 018D                           _BORCON 0116                           _OSCCON 0099  
                         _WDTCON 0097                           _SSPBUF 0211            __end_of_clear_segment 06BA  
           __end_of_encode_digit 0669                  ?_WDT_Initialize 0070          __size_of_set_brigthness 0015  
              _SYSTEM_Initialize 0669          __end_of__initialization 07FD               ?_SYSTEM_Initialize 0070  
        __size_of_CLK_SET_OUTPUT 0006         set_brigthness@brightness 0072                   __pcstackCOMMON 0070  
                   __pidataBANK0 0673              ??_SYSTEM_Initialize 0070            __end_of_DIO_SET_INPUT 0633  
                 _OPTION_REGbits 0095                  ??_start_segment 0071        __end_of_SYSTEM_Initialize 0673  
                     __pbssBANK0 0038            __size_of_CLK_SET_HIGH 0003                _get_DIO_PIN_value 0637  
        __size_of_DIO_SET_OUTPUT 0006               ?_get_DIO_PIN_value 0070            __size_of_DIO_SET_HIGH 0003  
                     __pmaintext 0769              ??_get_DIO_PIN_value 0070                          _APFCON0 011D  
                        _APFCON1 011E               set_segments@length 0076                     _CLK_SET_HIGH 062A  
                        _OSCTUNE 0098                          _SSPCON2 0216                          _SSPSTAT 0214  
      __end_of_get_DIO_PIN_value 063C                     _DIO_SET_HIGH 062D            __size_of_encode_digit 0008  
                  ?_set_segments 0076                          __ptext1 06BA                          __ptext2 0661  
                        __ptext3 06A7                          __ptext4 06E5                          __ptext5 0720  
                        __ptext6 0637                          __ptext7 0630                          __ptext8 0694  
                        __ptext9 0681            _OSCILLATOR_Initialize 065A                          _segdata 0020  
       ??_PIN_MANAGER_Initialize 0070                   _set_brigthness 06BA       __size_of_SYSTEM_Initialize 000A  
           end_of_initialization 07FD                     _encode_digit 0661               clear_segment@F2530 0038  
                        init_ram 0654                          initloop 0655                   _CLK_SET_OUTPUT 0642  
           set_segments@segments 0079                   ??_set_segments 0078                    ??_CLK_SET_LOW 0070  
               ??_WDT_Initialize 0070                        _PORTAbits 000C                    ??_DIO_SET_LOW 0070  
                   _m_brightness 003C           __end_of_set_brigthness 06CF       __size_of_get_DIO_PIN_value 0005  
         __end_of_CLK_SET_OUTPUT 0648                   _DIO_SET_OUTPUT 064E                       _write_byte 0720  
         ?_OSCILLATOR_Initialize 0070              start_initialization 07EC                  ?_set_brigthness 0070  
            __end_of_CLK_SET_LOW 0642  __size_of_PIN_MANAGER_Initialize 0016           __size_of_clear_segment 0013  
            __end_of_DIO_SET_LOW 064E                  ?_CLK_SET_OUTPUT 0070           __end_of_DIO_SET_OUTPUT 0654  
                    __pdataBANK0 0020                        ___latbits 0001                    __pcstackBANK0 002E  
          __end_of_start_segment 0694             __end_of_set_segments 0720                  ?_DIO_SET_OUTPUT 0070  
         __size_of_DIO_SET_INPUT 0003                 set_brigthness@on 0070           _PIN_MANAGER_Initialize 06CF  
                  ?_stop_segment 0070                    _clear_segment 06A7                      _CLK_SET_LOW 063C  
                    ?_write_byte 0070                      _DIO_SET_LOW 0648                   ??_stop_segment 0071  
                 ?_clear_segment 0070                clear_segment@data 002E                        main@F2513 002A  
              encode_digit@digit 0070                    _DIO_SET_INPUT 0630                      write_byte@b 0072  
                    write_byte@i 0075              __size_of_write_byte 0049                    set_segments@k 007A  
        ??_OSCILLATOR_Initialize 0070                 ??_set_brigthness 0071                   ?_DIO_SET_INPUT 0070  
          __size_of_set_segments 003B                 ??_CLK_SET_OUTPUT 0070                         __ptext10 064E  
                       __ptext11 0648                         __ptext12 062D                         __ptext13 0642  
                       __ptext14 063C                         __ptext15 062A                         __ptext16 0669  
                       __ptext17 0633                         __ptext18 06CF                         __ptext19 065A  
                  __size_of_main 0083                  ??_clear_segment 007B                         main@data 0033  
                   _set_segments 06E5                    ?_CLK_SET_HIGH 0070             __end_of_stop_segment 06A7  
               ??_DIO_SET_OUTPUT 0070          __size_of_WDT_Initialize 0004                    ?_DIO_SET_HIGH 0070  
        ?_PIN_MANAGER_Initialize 0070                     ?_CLK_SET_LOW 0070                     ??_write_byte 0071  
                ??_DIO_SET_INPUT 0070                     ?_DIO_SET_LOW 0070                   ??_CLK_SET_HIGH 0070  
                    _SSPCON1bits 0215                      _SSPCON2bits 0216                   ??_DIO_SET_HIGH 0070  
                  ?_encode_digit 0070   __end_of_PIN_MANAGER_Initialize 06E5               __end_of_write_byte 0769  
